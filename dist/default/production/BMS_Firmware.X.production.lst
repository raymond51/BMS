

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 23 23:27:50 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	stringtext56,global,class=STRCODE,delta=2
    61                           	psect	cinit,global,class=CODE,merge=1,delta=2
    62                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    63                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    66                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    67                           	psect	clrtext,global,class=CODE,delta=2
    68                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    69                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    70                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    71                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    72                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    73                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    74                           	psect	text1,local,class=CODE,merge=1,delta=2
    75                           	psect	text2,local,class=CODE,merge=1,delta=2
    76                           	psect	text3,local,class=CODE,merge=1,delta=2
    77                           	psect	text4,local,class=CODE,merge=1,delta=2
    78                           	psect	text5,local,class=CODE,merge=1,delta=2
    79                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text8,local,class=CODE,merge=1,delta=2
    82                           	psect	text9,local,class=CODE,merge=1,delta=2
    83                           	psect	text10,local,class=CODE,merge=1,delta=2
    84                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text14,local,class=CODE,merge=1,delta=2
    88                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text18,local,class=CODE,merge=1,delta=2
    92                           	psect	text19,local,class=CODE,merge=1,delta=2
    93                           	psect	text20,local,class=CODE,merge=1,delta=2
    94                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text31,local,class=CODE,merge=1,delta=2
   105                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text35,local,class=CODE,merge=1,delta=2
   109                           	psect	text36,local,class=CODE,merge=1,delta=2
   110                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text44,local,class=CODE,merge=1,delta=2
   118                           	psect	text45,local,class=CODE,merge=1,delta=2
   119                           	psect	text46,local,class=CODE,merge=1,delta=2
   120                           	psect	text47,local,class=CODE,merge=1,delta=2
   121                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text49,local,class=CODE,merge=1,delta=2
   123                           	psect	text50,local,class=CODE,merge=1,delta=2
   124                           	psect	text51,local,class=CODE,merge=1,delta=2
   125                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text53,local,class=CODE,merge=1,delta=2
   127                           	psect	text54,local,class=CODE,merge=1,delta=2
   128                           	psect	text55,local,class=CODE,merge=1,delta=2
   129                           	psect	text56,local,class=CODE,merge=1,delta=2
   130                           	psect	text57,local,class=CODE,merge=1,delta=2
   131                           	psect	text58,local,class=CODE,merge=1,delta=2
   132                           	psect	text59,local,class=CODE,merge=1,delta=2
   133                           	psect	text60,local,class=CODE,merge=1,delta=2
   134                           	psect	text61,local,class=CODE,merge=1,delta=2
   135                           	psect	text62,local,class=CODE,merge=1,delta=2
   136                           	psect	text63,local,class=CODE,merge=1,delta=2
   137                           	psect	text64,local,class=CODE,merge=1,delta=2
   138                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   139                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   140                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   142                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   143                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   144                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   145                           	psect	text72,local,class=CODE,merge=1,delta=2
   146                           	psect	text73,local,class=CODE,merge=1,delta=2
   147                           	psect	text74,local,class=CODE,merge=1,delta=2
   148                           	psect	text75,local,class=CODE,merge=1,delta=2
   149                           	psect	text76,local,class=CODE,merge=1,delta=2
   150                           	psect	text77,local,class=CODE,merge=1,delta=2
   151                           	psect	text78,local,class=CODE,merge=1,delta=2
   152                           	psect	text79,local,class=CODE,merge=1,delta=2
   153                           	psect	text80,local,class=CODE,merge=1,delta=2
   154                           	psect	text81,local,class=CODE,merge=1,delta=2
   155                           	psect	text82,local,class=CODE,merge=1,delta=2
   156                           	psect	text83,local,class=CODE,merge=1,delta=2
   157                           	psect	text84,local,class=CODE,merge=1,delta=2
   158                           	psect	text85,local,class=CODE,merge=1,delta=2
   159                           	psect	text86,local,class=CODE,merge=1,delta=2
   160                           	psect	text87,local,class=CODE,merge=1,delta=2
   161                           	psect	text88,local,class=CODE,merge=1,delta=2,group=1
   162                           	psect	intentry,global,class=CODE,delta=2
   163                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
   164                           	psect	text9_split_2,local,class=CODE,merge=1,delta=2
   165                           	psect	text9_split_3,local,class=CODE,merge=1,delta=2
   166                           	psect	text9_split_4,local,class=CODE,merge=1,delta=2
   167                           	psect	text9_split_5,local,class=CODE,merge=1,delta=2
   168                           	psect	text9_split_6,local,class=CODE,merge=1,delta=2
   169                           	psect	text9_split_7,local,class=CODE,merge=1,delta=2
   170                           	psect	text9_split_8,local,class=CODE,merge=1,delta=2
   171                           	dabs	1,0xCA0,32
   172                           	dabs	1,0xC20,80
   173                           	dabs	1,0xBE1,15
   174                           	dabs	1,0x2771,0,_messageBuffer
   175                           	dabs	1,0x7E,2
   176  0000                     
   177                           ; Version 2.05
   178                           ; Generated 20/12/2018 GMT
   179                           ; 
   180                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC16F1719 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  008F                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  0110                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011B                     	;# 
   277  011C                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  018E                     	;# 
   281  018F                     	;# 
   282  0190                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0194                     	;# 
   289  0195                     	;# 
   290  0196                     	;# 
   291  0197                     	;# 
   292  0199                     	;# 
   293  0199                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019A                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  019C                     	;# 
   305  019C                     	;# 
   306  019D                     	;# 
   307  019D                     	;# 
   308  019D                     	;# 
   309  019E                     	;# 
   310  019E                     	;# 
   311  019E                     	;# 
   312  019F                     	;# 
   313  019F                     	;# 
   314  019F                     	;# 
   315  019F                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  020E                     	;# 
   320  020F                     	;# 
   321  0210                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  0212                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0213                     	;# 
   328  0214                     	;# 
   329  0214                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  028C                     	;# 
   339  028D                     	;# 
   340  028E                     	;# 
   341  028F                     	;# 
   342  0290                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0293                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029A                     	;# 
   353  029E                     	;# 
   354  030C                     	;# 
   355  030D                     	;# 
   356  030E                     	;# 
   357  030F                     	;# 
   358  0310                     	;# 
   359  038C                     	;# 
   360  038D                     	;# 
   361  038E                     	;# 
   362  038F                     	;# 
   363  0390                     	;# 
   364  0391                     	;# 
   365  0392                     	;# 
   366  0393                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  0397                     	;# 
   371  0398                     	;# 
   372  0399                     	;# 
   373  039D                     	;# 
   374  039E                     	;# 
   375  039F                     	;# 
   376  0415                     	;# 
   377  0416                     	;# 
   378  0417                     	;# 
   379  041C                     	;# 
   380  041D                     	;# 
   381  041E                     	;# 
   382  0498                     	;# 
   383  0498                     	;# 
   384  0499                     	;# 
   385  049A                     	;# 
   386  049B                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  049E                     	;# 
   391  049F                     	;# 
   392  0511                     	;# 
   393  0515                     	;# 
   394  0617                     	;# 
   395  0618                     	;# 
   396  0619                     	;# 
   397  0619                     	;# 
   398  061A                     	;# 
   399  061B                     	;# 
   400  061C                     	;# 
   401  061C                     	;# 
   402  0691                     	;# 
   403  0692                     	;# 
   404  0693                     	;# 
   405  0694                     	;# 
   406  0695                     	;# 
   407  0696                     	;# 
   408  0697                     	;# 
   409  0698                     	;# 
   410  0699                     	;# 
   411  069A                     	;# 
   412  069B                     	;# 
   413  069C                     	;# 
   414  069D                     	;# 
   415  069E                     	;# 
   416  069F                     	;# 
   417  0E0F                     	;# 
   418  0E10                     	;# 
   419  0E11                     	;# 
   420  0E12                     	;# 
   421  0E13                     	;# 
   422  0E14                     	;# 
   423  0E15                     	;# 
   424  0E17                     	;# 
   425  0E20                     	;# 
   426  0E21                     	;# 
   427  0E22                     	;# 
   428  0E24                     	;# 
   429  0E25                     	;# 
   430  0E28                     	;# 
   431  0E29                     	;# 
   432  0E2A                     	;# 
   433  0E2B                     	;# 
   434  0E90                     	;# 
   435  0E91                     	;# 
   436  0E92                     	;# 
   437  0E93                     	;# 
   438  0E94                     	;# 
   439  0E95                     	;# 
   440  0E96                     	;# 
   441  0E97                     	;# 
   442  0E98                     	;# 
   443  0E99                     	;# 
   444  0E9A                     	;# 
   445  0E9B                     	;# 
   446  0E9C                     	;# 
   447  0E9D                     	;# 
   448  0E9E                     	;# 
   449  0E9F                     	;# 
   450  0EA0                     	;# 
   451  0EA1                     	;# 
   452  0EA2                     	;# 
   453  0EA3                     	;# 
   454  0EA4                     	;# 
   455  0EA5                     	;# 
   456  0EA6                     	;# 
   457  0EA7                     	;# 
   458  0EA8                     	;# 
   459  0EA9                     	;# 
   460  0EAA                     	;# 
   461  0EAB                     	;# 
   462  0EAC                     	;# 
   463  0EAD                     	;# 
   464  0EAE                     	;# 
   465  0EAF                     	;# 
   466  0EB0                     	;# 
   467  0EB1                     	;# 
   468  0EB2                     	;# 
   469  0F0F                     	;# 
   470  0F10                     	;# 
   471  0F11                     	;# 
   472  0F12                     	;# 
   473  0F13                     	;# 
   474  0F14                     	;# 
   475  0F15                     	;# 
   476  0F16                     	;# 
   477  0F17                     	;# 
   478  0F18                     	;# 
   479  0F19                     	;# 
   480  0F1A                     	;# 
   481  0F1B                     	;# 
   482  0F1C                     	;# 
   483  0F1D                     	;# 
   484  0F1E                     	;# 
   485  0F1F                     	;# 
   486  0F20                     	;# 
   487  0F21                     	;# 
   488  0F22                     	;# 
   489  0F23                     	;# 
   490  0F24                     	;# 
   491  0F25                     	;# 
   492  0F26                     	;# 
   493  0F27                     	;# 
   494  0F28                     	;# 
   495  0F29                     	;# 
   496  0F2A                     	;# 
   497  0F2B                     	;# 
   498  0F2C                     	;# 
   499  0F2D                     	;# 
   500  0F2E                     	;# 
   501  0F2F                     	;# 
   502  0F30                     	;# 
   503  0F31                     	;# 
   504  0F32                     	;# 
   505  0F33                     	;# 
   506  0F34                     	;# 
   507  0F35                     	;# 
   508  0F36                     	;# 
   509  0F37                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  000F                     	;# 
   537  0010                     	;# 
   538  0011                     	;# 
   539  0012                     	;# 
   540  0013                     	;# 
   541  0015                     	;# 
   542  0016                     	;# 
   543  0016                     	;# 
   544  0017                     	;# 
   545  0018                     	;# 
   546  0019                     	;# 
   547  001A                     	;# 
   548  001B                     	;# 
   549  001C                     	;# 
   550  008C                     	;# 
   551  008D                     	;# 
   552  008E                     	;# 
   553  008F                     	;# 
   554  0090                     	;# 
   555  0091                     	;# 
   556  0092                     	;# 
   557  0093                     	;# 
   558  0095                     	;# 
   559  0096                     	;# 
   560  0097                     	;# 
   561  0098                     	;# 
   562  0099                     	;# 
   563  009A                     	;# 
   564  009B                     	;# 
   565  009B                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009E                     	;# 
   569  009F                     	;# 
   570  010C                     	;# 
   571  010D                     	;# 
   572  010E                     	;# 
   573  010F                     	;# 
   574  0110                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0113                     	;# 
   578  0114                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011B                     	;# 
   587  011C                     	;# 
   588  018C                     	;# 
   589  018D                     	;# 
   590  018E                     	;# 
   591  018F                     	;# 
   592  0190                     	;# 
   593  0191                     	;# 
   594  0191                     	;# 
   595  0192                     	;# 
   596  0193                     	;# 
   597  0193                     	;# 
   598  0194                     	;# 
   599  0195                     	;# 
   600  0196                     	;# 
   601  0197                     	;# 
   602  0199                     	;# 
   603  0199                     	;# 
   604  0199                     	;# 
   605  019A                     	;# 
   606  019A                     	;# 
   607  019A                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019C                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019D                     	;# 
   617  019D                     	;# 
   618  019D                     	;# 
   619  019E                     	;# 
   620  019E                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  019F                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020D                     	;# 
   629  020E                     	;# 
   630  020F                     	;# 
   631  0210                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  028C                     	;# 
   649  028D                     	;# 
   650  028E                     	;# 
   651  028F                     	;# 
   652  0290                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0293                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029A                     	;# 
   663  029E                     	;# 
   664  030C                     	;# 
   665  030D                     	;# 
   666  030E                     	;# 
   667  030F                     	;# 
   668  0310                     	;# 
   669  038C                     	;# 
   670  038D                     	;# 
   671  038E                     	;# 
   672  038F                     	;# 
   673  0390                     	;# 
   674  0391                     	;# 
   675  0392                     	;# 
   676  0393                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  0397                     	;# 
   681  0398                     	;# 
   682  0399                     	;# 
   683  039D                     	;# 
   684  039E                     	;# 
   685  039F                     	;# 
   686  0415                     	;# 
   687  0416                     	;# 
   688  0417                     	;# 
   689  041C                     	;# 
   690  041D                     	;# 
   691  041E                     	;# 
   692  0498                     	;# 
   693  0498                     	;# 
   694  0499                     	;# 
   695  049A                     	;# 
   696  049B                     	;# 
   697  049B                     	;# 
   698  049C                     	;# 
   699  049D                     	;# 
   700  049E                     	;# 
   701  049F                     	;# 
   702  0511                     	;# 
   703  0515                     	;# 
   704  0617                     	;# 
   705  0618                     	;# 
   706  0619                     	;# 
   707  0619                     	;# 
   708  061A                     	;# 
   709  061B                     	;# 
   710  061C                     	;# 
   711  061C                     	;# 
   712  0691                     	;# 
   713  0692                     	;# 
   714  0693                     	;# 
   715  0694                     	;# 
   716  0695                     	;# 
   717  0696                     	;# 
   718  0697                     	;# 
   719  0698                     	;# 
   720  0699                     	;# 
   721  069A                     	;# 
   722  069B                     	;# 
   723  069C                     	;# 
   724  069D                     	;# 
   725  069E                     	;# 
   726  069F                     	;# 
   727  0E0F                     	;# 
   728  0E10                     	;# 
   729  0E11                     	;# 
   730  0E12                     	;# 
   731  0E13                     	;# 
   732  0E14                     	;# 
   733  0E15                     	;# 
   734  0E17                     	;# 
   735  0E20                     	;# 
   736  0E21                     	;# 
   737  0E22                     	;# 
   738  0E24                     	;# 
   739  0E25                     	;# 
   740  0E28                     	;# 
   741  0E29                     	;# 
   742  0E2A                     	;# 
   743  0E2B                     	;# 
   744  0E90                     	;# 
   745  0E91                     	;# 
   746  0E92                     	;# 
   747  0E93                     	;# 
   748  0E94                     	;# 
   749  0E95                     	;# 
   750  0E96                     	;# 
   751  0E97                     	;# 
   752  0E98                     	;# 
   753  0E99                     	;# 
   754  0E9A                     	;# 
   755  0E9B                     	;# 
   756  0E9C                     	;# 
   757  0E9D                     	;# 
   758  0E9E                     	;# 
   759  0E9F                     	;# 
   760  0EA0                     	;# 
   761  0EA1                     	;# 
   762  0EA2                     	;# 
   763  0EA3                     	;# 
   764  0EA4                     	;# 
   765  0EA5                     	;# 
   766  0EA6                     	;# 
   767  0EA7                     	;# 
   768  0EA8                     	;# 
   769  0EA9                     	;# 
   770  0EAA                     	;# 
   771  0EAB                     	;# 
   772  0EAC                     	;# 
   773  0EAD                     	;# 
   774  0EAE                     	;# 
   775  0EAF                     	;# 
   776  0EB0                     	;# 
   777  0EB1                     	;# 
   778  0EB2                     	;# 
   779  0F0F                     	;# 
   780  0F10                     	;# 
   781  0F11                     	;# 
   782  0F12                     	;# 
   783  0F13                     	;# 
   784  0F14                     	;# 
   785  0F15                     	;# 
   786  0F16                     	;# 
   787  0F17                     	;# 
   788  0F18                     	;# 
   789  0F19                     	;# 
   790  0F1A                     	;# 
   791  0F1B                     	;# 
   792  0F1C                     	;# 
   793  0F1D                     	;# 
   794  0F1E                     	;# 
   795  0F1F                     	;# 
   796  0F20                     	;# 
   797  0F21                     	;# 
   798  0F22                     	;# 
   799  0F23                     	;# 
   800  0F24                     	;# 
   801  0F25                     	;# 
   802  0F26                     	;# 
   803  0F27                     	;# 
   804  0F28                     	;# 
   805  0F29                     	;# 
   806  0F2A                     	;# 
   807  0F2B                     	;# 
   808  0F2C                     	;# 
   809  0F2D                     	;# 
   810  0F2E                     	;# 
   811  0F2F                     	;# 
   812  0F30                     	;# 
   813  0F31                     	;# 
   814  0F32                     	;# 
   815  0F33                     	;# 
   816  0F34                     	;# 
   817  0F35                     	;# 
   818  0F36                     	;# 
   819  0F37                     	;# 
   820  0FE4                     	;# 
   821  0FE5                     	;# 
   822  0FE6                     	;# 
   823  0FE7                     	;# 
   824  0FE8                     	;# 
   825  0FE9                     	;# 
   826  0FEA                     	;# 
   827  0FEB                     	;# 
   828  0FED                     	;# 
   829  0FEE                     	;# 
   830  0FEF                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0008                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000D                     	;# 
   845  000E                     	;# 
   846  000F                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  008F                     	;# 
   864  0090                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0095                     	;# 
   869  0096                     	;# 
   870  0097                     	;# 
   871  0098                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  009F                     	;# 
   880  010C                     	;# 
   881  010D                     	;# 
   882  010E                     	;# 
   883  010F                     	;# 
   884  0110                     	;# 
   885  0111                     	;# 
   886  0112                     	;# 
   887  0113                     	;# 
   888  0114                     	;# 
   889  0115                     	;# 
   890  0116                     	;# 
   891  0117                     	;# 
   892  0118                     	;# 
   893  0119                     	;# 
   894  011A                     	;# 
   895  011B                     	;# 
   896  011B                     	;# 
   897  011C                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018E                     	;# 
   901  018F                     	;# 
   902  0190                     	;# 
   903  0191                     	;# 
   904  0191                     	;# 
   905  0192                     	;# 
   906  0193                     	;# 
   907  0193                     	;# 
   908  0194                     	;# 
   909  0195                     	;# 
   910  0196                     	;# 
   911  0197                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  0199                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019A                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019C                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019D                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  019F                     	;# 
   937  020C                     	;# 
   938  020D                     	;# 
   939  020E                     	;# 
   940  020F                     	;# 
   941  0210                     	;# 
   942  0211                     	;# 
   943  0211                     	;# 
   944  0212                     	;# 
   945  0212                     	;# 
   946  0213                     	;# 
   947  0213                     	;# 
   948  0214                     	;# 
   949  0214                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0215                     	;# 
   954  0216                     	;# 
   955  0216                     	;# 
   956  0217                     	;# 
   957  0217                     	;# 
   958  028C                     	;# 
   959  028D                     	;# 
   960  028E                     	;# 
   961  028F                     	;# 
   962  0290                     	;# 
   963  0291                     	;# 
   964  0291                     	;# 
   965  0292                     	;# 
   966  0293                     	;# 
   967  0293                     	;# 
   968  0298                     	;# 
   969  0298                     	;# 
   970  0299                     	;# 
   971  029A                     	;# 
   972  029A                     	;# 
   973  029E                     	;# 
   974  030C                     	;# 
   975  030D                     	;# 
   976  030E                     	;# 
   977  030F                     	;# 
   978  0310                     	;# 
   979  038C                     	;# 
   980  038D                     	;# 
   981  038E                     	;# 
   982  038F                     	;# 
   983  0390                     	;# 
   984  0391                     	;# 
   985  0392                     	;# 
   986  0393                     	;# 
   987  0394                     	;# 
   988  0395                     	;# 
   989  0396                     	;# 
   990  0397                     	;# 
   991  0398                     	;# 
   992  0399                     	;# 
   993  039D                     	;# 
   994  039E                     	;# 
   995  039F                     	;# 
   996  0415                     	;# 
   997  0416                     	;# 
   998  0417                     	;# 
   999  041C                     	;# 
  1000  041D                     	;# 
  1001  041E                     	;# 
  1002  0498                     	;# 
  1003  0498                     	;# 
  1004  0499                     	;# 
  1005  049A                     	;# 
  1006  049B                     	;# 
  1007  049B                     	;# 
  1008  049C                     	;# 
  1009  049D                     	;# 
  1010  049E                     	;# 
  1011  049F                     	;# 
  1012  0511                     	;# 
  1013  0515                     	;# 
  1014  0617                     	;# 
  1015  0618                     	;# 
  1016  0619                     	;# 
  1017  0619                     	;# 
  1018  061A                     	;# 
  1019  061B                     	;# 
  1020  061C                     	;# 
  1021  061C                     	;# 
  1022  0691                     	;# 
  1023  0692                     	;# 
  1024  0693                     	;# 
  1025  0694                     	;# 
  1026  0695                     	;# 
  1027  0696                     	;# 
  1028  0697                     	;# 
  1029  0698                     	;# 
  1030  0699                     	;# 
  1031  069A                     	;# 
  1032  069B                     	;# 
  1033  069C                     	;# 
  1034  069D                     	;# 
  1035  069E                     	;# 
  1036  069F                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E17                     	;# 
  1045  0E20                     	;# 
  1046  0E21                     	;# 
  1047  0E22                     	;# 
  1048  0E24                     	;# 
  1049  0E25                     	;# 
  1050  0E28                     	;# 
  1051  0E29                     	;# 
  1052  0E2A                     	;# 
  1053  0E2B                     	;# 
  1054  0E90                     	;# 
  1055  0E91                     	;# 
  1056  0E92                     	;# 
  1057  0E93                     	;# 
  1058  0E94                     	;# 
  1059  0E95                     	;# 
  1060  0E96                     	;# 
  1061  0E97                     	;# 
  1062  0E98                     	;# 
  1063  0E99                     	;# 
  1064  0E9A                     	;# 
  1065  0E9B                     	;# 
  1066  0E9C                     	;# 
  1067  0E9D                     	;# 
  1068  0E9E                     	;# 
  1069  0E9F                     	;# 
  1070  0EA0                     	;# 
  1071  0EA1                     	;# 
  1072  0EA2                     	;# 
  1073  0EA3                     	;# 
  1074  0EA4                     	;# 
  1075  0EA5                     	;# 
  1076  0EA6                     	;# 
  1077  0EA7                     	;# 
  1078  0EA8                     	;# 
  1079  0EA9                     	;# 
  1080  0EAA                     	;# 
  1081  0EAB                     	;# 
  1082  0EAC                     	;# 
  1083  0EAD                     	;# 
  1084  0EAE                     	;# 
  1085  0EAF                     	;# 
  1086  0EB0                     	;# 
  1087  0EB1                     	;# 
  1088  0EB2                     	;# 
  1089  0F0F                     	;# 
  1090  0F10                     	;# 
  1091  0F11                     	;# 
  1092  0F12                     	;# 
  1093  0F13                     	;# 
  1094  0F14                     	;# 
  1095  0F15                     	;# 
  1096  0F16                     	;# 
  1097  0F17                     	;# 
  1098  0F18                     	;# 
  1099  0F19                     	;# 
  1100  0F1A                     	;# 
  1101  0F1B                     	;# 
  1102  0F1C                     	;# 
  1103  0F1D                     	;# 
  1104  0F1E                     	;# 
  1105  0F1F                     	;# 
  1106  0F20                     	;# 
  1107  0F21                     	;# 
  1108  0F22                     	;# 
  1109  0F23                     	;# 
  1110  0F24                     	;# 
  1111  0F25                     	;# 
  1112  0F26                     	;# 
  1113  0F27                     	;# 
  1114  0F28                     	;# 
  1115  0F29                     	;# 
  1116  0F2A                     	;# 
  1117  0F2B                     	;# 
  1118  0F2C                     	;# 
  1119  0F2D                     	;# 
  1120  0F2E                     	;# 
  1121  0F2F                     	;# 
  1122  0F30                     	;# 
  1123  0F31                     	;# 
  1124  0F32                     	;# 
  1125  0F33                     	;# 
  1126  0F34                     	;# 
  1127  0F35                     	;# 
  1128  0F36                     	;# 
  1129  0F37                     	;# 
  1130  0FE4                     	;# 
  1131  0FE5                     	;# 
  1132  0FE6                     	;# 
  1133  0FE7                     	;# 
  1134  0FE8                     	;# 
  1135  0FE9                     	;# 
  1136  0FEA                     	;# 
  1137  0FEB                     	;# 
  1138  0FED                     	;# 
  1139  0FEE                     	;# 
  1140  0FEF                     	;# 
  1141  0000                     	;# 
  1142  0001                     	;# 
  1143  0002                     	;# 
  1144  0003                     	;# 
  1145  0004                     	;# 
  1146  0005                     	;# 
  1147  0006                     	;# 
  1148  0007                     	;# 
  1149  0008                     	;# 
  1150  0009                     	;# 
  1151  000A                     	;# 
  1152  000B                     	;# 
  1153  000C                     	;# 
  1154  000D                     	;# 
  1155  000E                     	;# 
  1156  000F                     	;# 
  1157  0010                     	;# 
  1158  0011                     	;# 
  1159  0012                     	;# 
  1160  0013                     	;# 
  1161  0015                     	;# 
  1162  0016                     	;# 
  1163  0016                     	;# 
  1164  0017                     	;# 
  1165  0018                     	;# 
  1166  0019                     	;# 
  1167  001A                     	;# 
  1168  001B                     	;# 
  1169  001C                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  008F                     	;# 
  1174  0090                     	;# 
  1175  0091                     	;# 
  1176  0092                     	;# 
  1177  0093                     	;# 
  1178  0095                     	;# 
  1179  0096                     	;# 
  1180  0097                     	;# 
  1181  0098                     	;# 
  1182  0099                     	;# 
  1183  009A                     	;# 
  1184  009B                     	;# 
  1185  009B                     	;# 
  1186  009C                     	;# 
  1187  009D                     	;# 
  1188  009E                     	;# 
  1189  009F                     	;# 
  1190  010C                     	;# 
  1191  010D                     	;# 
  1192  010E                     	;# 
  1193  010F                     	;# 
  1194  0110                     	;# 
  1195  0111                     	;# 
  1196  0112                     	;# 
  1197  0113                     	;# 
  1198  0114                     	;# 
  1199  0115                     	;# 
  1200  0116                     	;# 
  1201  0117                     	;# 
  1202  0118                     	;# 
  1203  0119                     	;# 
  1204  011A                     	;# 
  1205  011B                     	;# 
  1206  011B                     	;# 
  1207  011C                     	;# 
  1208  018C                     	;# 
  1209  018D                     	;# 
  1210  018E                     	;# 
  1211  018F                     	;# 
  1212  0190                     	;# 
  1213  0191                     	;# 
  1214  0191                     	;# 
  1215  0192                     	;# 
  1216  0193                     	;# 
  1217  0193                     	;# 
  1218  0194                     	;# 
  1219  0195                     	;# 
  1220  0196                     	;# 
  1221  0197                     	;# 
  1222  0199                     	;# 
  1223  0199                     	;# 
  1224  0199                     	;# 
  1225  019A                     	;# 
  1226  019A                     	;# 
  1227  019A                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019B                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  019C                     	;# 
  1235  019C                     	;# 
  1236  019D                     	;# 
  1237  019D                     	;# 
  1238  019D                     	;# 
  1239  019E                     	;# 
  1240  019E                     	;# 
  1241  019E                     	;# 
  1242  019F                     	;# 
  1243  019F                     	;# 
  1244  019F                     	;# 
  1245  019F                     	;# 
  1246  019F                     	;# 
  1247  020C                     	;# 
  1248  020D                     	;# 
  1249  020E                     	;# 
  1250  020F                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0214                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0215                     	;# 
  1264  0216                     	;# 
  1265  0216                     	;# 
  1266  0217                     	;# 
  1267  0217                     	;# 
  1268  028C                     	;# 
  1269  028D                     	;# 
  1270  028E                     	;# 
  1271  028F                     	;# 
  1272  0290                     	;# 
  1273  0291                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0293                     	;# 
  1277  0293                     	;# 
  1278  0298                     	;# 
  1279  0298                     	;# 
  1280  0299                     	;# 
  1281  029A                     	;# 
  1282  029A                     	;# 
  1283  029E                     	;# 
  1284  030C                     	;# 
  1285  030D                     	;# 
  1286  030E                     	;# 
  1287  030F                     	;# 
  1288  0310                     	;# 
  1289  038C                     	;# 
  1290  038D                     	;# 
  1291  038E                     	;# 
  1292  038F                     	;# 
  1293  0390                     	;# 
  1294  0391                     	;# 
  1295  0392                     	;# 
  1296  0393                     	;# 
  1297  0394                     	;# 
  1298  0395                     	;# 
  1299  0396                     	;# 
  1300  0397                     	;# 
  1301  0398                     	;# 
  1302  0399                     	;# 
  1303  039D                     	;# 
  1304  039E                     	;# 
  1305  039F                     	;# 
  1306  0415                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  041C                     	;# 
  1310  041D                     	;# 
  1311  041E                     	;# 
  1312  0498                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  049E                     	;# 
  1321  049F                     	;# 
  1322  0511                     	;# 
  1323  0515                     	;# 
  1324  0617                     	;# 
  1325  0618                     	;# 
  1326  0619                     	;# 
  1327  0619                     	;# 
  1328  061A                     	;# 
  1329  061B                     	;# 
  1330  061C                     	;# 
  1331  061C                     	;# 
  1332  0691                     	;# 
  1333  0692                     	;# 
  1334  0693                     	;# 
  1335  0694                     	;# 
  1336  0695                     	;# 
  1337  0696                     	;# 
  1338  0697                     	;# 
  1339  0698                     	;# 
  1340  0699                     	;# 
  1341  069A                     	;# 
  1342  069B                     	;# 
  1343  069C                     	;# 
  1344  069D                     	;# 
  1345  069E                     	;# 
  1346  069F                     	;# 
  1347  0E0F                     	;# 
  1348  0E10                     	;# 
  1349  0E11                     	;# 
  1350  0E12                     	;# 
  1351  0E13                     	;# 
  1352  0E14                     	;# 
  1353  0E15                     	;# 
  1354  0E17                     	;# 
  1355  0E20                     	;# 
  1356  0E21                     	;# 
  1357  0E22                     	;# 
  1358  0E24                     	;# 
  1359  0E25                     	;# 
  1360  0E28                     	;# 
  1361  0E29                     	;# 
  1362  0E2A                     	;# 
  1363  0E2B                     	;# 
  1364  0E90                     	;# 
  1365  0E91                     	;# 
  1366  0E92                     	;# 
  1367  0E93                     	;# 
  1368  0E94                     	;# 
  1369  0E95                     	;# 
  1370  0E96                     	;# 
  1371  0E97                     	;# 
  1372  0E98                     	;# 
  1373  0E99                     	;# 
  1374  0E9A                     	;# 
  1375  0E9B                     	;# 
  1376  0E9C                     	;# 
  1377  0E9D                     	;# 
  1378  0E9E                     	;# 
  1379  0E9F                     	;# 
  1380  0EA0                     	;# 
  1381  0EA1                     	;# 
  1382  0EA2                     	;# 
  1383  0EA3                     	;# 
  1384  0EA4                     	;# 
  1385  0EA5                     	;# 
  1386  0EA6                     	;# 
  1387  0EA7                     	;# 
  1388  0EA8                     	;# 
  1389  0EA9                     	;# 
  1390  0EAA                     	;# 
  1391  0EAB                     	;# 
  1392  0EAC                     	;# 
  1393  0EAD                     	;# 
  1394  0EAE                     	;# 
  1395  0EAF                     	;# 
  1396  0EB0                     	;# 
  1397  0EB1                     	;# 
  1398  0EB2                     	;# 
  1399  0F0F                     	;# 
  1400  0F10                     	;# 
  1401  0F11                     	;# 
  1402  0F12                     	;# 
  1403  0F13                     	;# 
  1404  0F14                     	;# 
  1405  0F15                     	;# 
  1406  0F16                     	;# 
  1407  0F17                     	;# 
  1408  0F18                     	;# 
  1409  0F19                     	;# 
  1410  0F1A                     	;# 
  1411  0F1B                     	;# 
  1412  0F1C                     	;# 
  1413  0F1D                     	;# 
  1414  0F1E                     	;# 
  1415  0F1F                     	;# 
  1416  0F20                     	;# 
  1417  0F21                     	;# 
  1418  0F22                     	;# 
  1419  0F23                     	;# 
  1420  0F24                     	;# 
  1421  0F25                     	;# 
  1422  0F26                     	;# 
  1423  0F27                     	;# 
  1424  0F28                     	;# 
  1425  0F29                     	;# 
  1426  0F2A                     	;# 
  1427  0F2B                     	;# 
  1428  0F2C                     	;# 
  1429  0F2D                     	;# 
  1430  0F2E                     	;# 
  1431  0F2F                     	;# 
  1432  0F30                     	;# 
  1433  0F31                     	;# 
  1434  0F32                     	;# 
  1435  0F33                     	;# 
  1436  0F34                     	;# 
  1437  0F35                     	;# 
  1438  0F36                     	;# 
  1439  0F37                     	;# 
  1440  0FE4                     	;# 
  1441  0FE5                     	;# 
  1442  0FE6                     	;# 
  1443  0FE7                     	;# 
  1444  0FE8                     	;# 
  1445  0FE9                     	;# 
  1446  0FEA                     	;# 
  1447  0FEB                     	;# 
  1448  0FED                     	;# 
  1449  0FEE                     	;# 
  1450  0FEF                     	;# 
  1451  0000                     	;# 
  1452  0001                     	;# 
  1453  0002                     	;# 
  1454  0003                     	;# 
  1455  0004                     	;# 
  1456  0005                     	;# 
  1457  0006                     	;# 
  1458  0007                     	;# 
  1459  0008                     	;# 
  1460  0009                     	;# 
  1461  000A                     	;# 
  1462  000B                     	;# 
  1463  000C                     	;# 
  1464  000D                     	;# 
  1465  000E                     	;# 
  1466  000F                     	;# 
  1467  0010                     	;# 
  1468  0011                     	;# 
  1469  0012                     	;# 
  1470  0013                     	;# 
  1471  0015                     	;# 
  1472  0016                     	;# 
  1473  0016                     	;# 
  1474  0017                     	;# 
  1475  0018                     	;# 
  1476  0019                     	;# 
  1477  001A                     	;# 
  1478  001B                     	;# 
  1479  001C                     	;# 
  1480  008C                     	;# 
  1481  008D                     	;# 
  1482  008E                     	;# 
  1483  008F                     	;# 
  1484  0090                     	;# 
  1485  0091                     	;# 
  1486  0092                     	;# 
  1487  0093                     	;# 
  1488  0095                     	;# 
  1489  0096                     	;# 
  1490  0097                     	;# 
  1491  0098                     	;# 
  1492  0099                     	;# 
  1493  009A                     	;# 
  1494  009B                     	;# 
  1495  009B                     	;# 
  1496  009C                     	;# 
  1497  009D                     	;# 
  1498  009E                     	;# 
  1499  009F                     	;# 
  1500  010C                     	;# 
  1501  010D                     	;# 
  1502  010E                     	;# 
  1503  010F                     	;# 
  1504  0110                     	;# 
  1505  0111                     	;# 
  1506  0112                     	;# 
  1507  0113                     	;# 
  1508  0114                     	;# 
  1509  0115                     	;# 
  1510  0116                     	;# 
  1511  0117                     	;# 
  1512  0118                     	;# 
  1513  0119                     	;# 
  1514  011A                     	;# 
  1515  011B                     	;# 
  1516  011B                     	;# 
  1517  011C                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  018E                     	;# 
  1521  018F                     	;# 
  1522  0190                     	;# 
  1523  0191                     	;# 
  1524  0191                     	;# 
  1525  0192                     	;# 
  1526  0193                     	;# 
  1527  0193                     	;# 
  1528  0194                     	;# 
  1529  0195                     	;# 
  1530  0196                     	;# 
  1531  0197                     	;# 
  1532  0199                     	;# 
  1533  0199                     	;# 
  1534  0199                     	;# 
  1535  019A                     	;# 
  1536  019A                     	;# 
  1537  019A                     	;# 
  1538  019B                     	;# 
  1539  019B                     	;# 
  1540  019B                     	;# 
  1541  019B                     	;# 
  1542  019B                     	;# 
  1543  019C                     	;# 
  1544  019C                     	;# 
  1545  019C                     	;# 
  1546  019D                     	;# 
  1547  019D                     	;# 
  1548  019D                     	;# 
  1549  019E                     	;# 
  1550  019E                     	;# 
  1551  019E                     	;# 
  1552  019F                     	;# 
  1553  019F                     	;# 
  1554  019F                     	;# 
  1555  019F                     	;# 
  1556  019F                     	;# 
  1557  020C                     	;# 
  1558  020D                     	;# 
  1559  020E                     	;# 
  1560  020F                     	;# 
  1561  0210                     	;# 
  1562  0211                     	;# 
  1563  0211                     	;# 
  1564  0212                     	;# 
  1565  0212                     	;# 
  1566  0213                     	;# 
  1567  0213                     	;# 
  1568  0214                     	;# 
  1569  0214                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0215                     	;# 
  1574  0216                     	;# 
  1575  0216                     	;# 
  1576  0217                     	;# 
  1577  0217                     	;# 
  1578  028C                     	;# 
  1579  028D                     	;# 
  1580  028E                     	;# 
  1581  028F                     	;# 
  1582  0290                     	;# 
  1583  0291                     	;# 
  1584  0291                     	;# 
  1585  0292                     	;# 
  1586  0293                     	;# 
  1587  0293                     	;# 
  1588  0298                     	;# 
  1589  0298                     	;# 
  1590  0299                     	;# 
  1591  029A                     	;# 
  1592  029A                     	;# 
  1593  029E                     	;# 
  1594  030C                     	;# 
  1595  030D                     	;# 
  1596  030E                     	;# 
  1597  030F                     	;# 
  1598  0310                     	;# 
  1599  038C                     	;# 
  1600  038D                     	;# 
  1601  038E                     	;# 
  1602  038F                     	;# 
  1603  0390                     	;# 
  1604  0391                     	;# 
  1605  0392                     	;# 
  1606  0393                     	;# 
  1607  0394                     	;# 
  1608  0395                     	;# 
  1609  0396                     	;# 
  1610  0397                     	;# 
  1611  0398                     	;# 
  1612  0399                     	;# 
  1613  039D                     	;# 
  1614  039E                     	;# 
  1615  039F                     	;# 
  1616  0415                     	;# 
  1617  0416                     	;# 
  1618  0417                     	;# 
  1619  041C                     	;# 
  1620  041D                     	;# 
  1621  041E                     	;# 
  1622  0498                     	;# 
  1623  0498                     	;# 
  1624  0499                     	;# 
  1625  049A                     	;# 
  1626  049B                     	;# 
  1627  049B                     	;# 
  1628  049C                     	;# 
  1629  049D                     	;# 
  1630  049E                     	;# 
  1631  049F                     	;# 
  1632  0511                     	;# 
  1633  0515                     	;# 
  1634  0617                     	;# 
  1635  0618                     	;# 
  1636  0619                     	;# 
  1637  0619                     	;# 
  1638  061A                     	;# 
  1639  061B                     	;# 
  1640  061C                     	;# 
  1641  061C                     	;# 
  1642  0691                     	;# 
  1643  0692                     	;# 
  1644  0693                     	;# 
  1645  0694                     	;# 
  1646  0695                     	;# 
  1647  0696                     	;# 
  1648  0697                     	;# 
  1649  0698                     	;# 
  1650  0699                     	;# 
  1651  069A                     	;# 
  1652  069B                     	;# 
  1653  069C                     	;# 
  1654  069D                     	;# 
  1655  069E                     	;# 
  1656  069F                     	;# 
  1657  0E0F                     	;# 
  1658  0E10                     	;# 
  1659  0E11                     	;# 
  1660  0E12                     	;# 
  1661  0E13                     	;# 
  1662  0E14                     	;# 
  1663  0E15                     	;# 
  1664  0E17                     	;# 
  1665  0E20                     	;# 
  1666  0E21                     	;# 
  1667  0E22                     	;# 
  1668  0E24                     	;# 
  1669  0E25                     	;# 
  1670  0E28                     	;# 
  1671  0E29                     	;# 
  1672  0E2A                     	;# 
  1673  0E2B                     	;# 
  1674  0E90                     	;# 
  1675  0E91                     	;# 
  1676  0E92                     	;# 
  1677  0E93                     	;# 
  1678  0E94                     	;# 
  1679  0E95                     	;# 
  1680  0E96                     	;# 
  1681  0E97                     	;# 
  1682  0E98                     	;# 
  1683  0E99                     	;# 
  1684  0E9A                     	;# 
  1685  0E9B                     	;# 
  1686  0E9C                     	;# 
  1687  0E9D                     	;# 
  1688  0E9E                     	;# 
  1689  0E9F                     	;# 
  1690  0EA0                     	;# 
  1691  0EA1                     	;# 
  1692  0EA2                     	;# 
  1693  0EA3                     	;# 
  1694  0EA4                     	;# 
  1695  0EA5                     	;# 
  1696  0EA6                     	;# 
  1697  0EA7                     	;# 
  1698  0EA8                     	;# 
  1699  0EA9                     	;# 
  1700  0EAA                     	;# 
  1701  0EAB                     	;# 
  1702  0EAC                     	;# 
  1703  0EAD                     	;# 
  1704  0EAE                     	;# 
  1705  0EAF                     	;# 
  1706  0EB0                     	;# 
  1707  0EB1                     	;# 
  1708  0EB2                     	;# 
  1709  0F0F                     	;# 
  1710  0F10                     	;# 
  1711  0F11                     	;# 
  1712  0F12                     	;# 
  1713  0F13                     	;# 
  1714  0F14                     	;# 
  1715  0F15                     	;# 
  1716  0F16                     	;# 
  1717  0F17                     	;# 
  1718  0F18                     	;# 
  1719  0F19                     	;# 
  1720  0F1A                     	;# 
  1721  0F1B                     	;# 
  1722  0F1C                     	;# 
  1723  0F1D                     	;# 
  1724  0F1E                     	;# 
  1725  0F1F                     	;# 
  1726  0F20                     	;# 
  1727  0F21                     	;# 
  1728  0F22                     	;# 
  1729  0F23                     	;# 
  1730  0F24                     	;# 
  1731  0F25                     	;# 
  1732  0F26                     	;# 
  1733  0F27                     	;# 
  1734  0F28                     	;# 
  1735  0F29                     	;# 
  1736  0F2A                     	;# 
  1737  0F2B                     	;# 
  1738  0F2C                     	;# 
  1739  0F2D                     	;# 
  1740  0F2E                     	;# 
  1741  0F2F                     	;# 
  1742  0F30                     	;# 
  1743  0F31                     	;# 
  1744  0F32                     	;# 
  1745  0F33                     	;# 
  1746  0F34                     	;# 
  1747  0F35                     	;# 
  1748  0F36                     	;# 
  1749  0F37                     	;# 
  1750  0FE4                     	;# 
  1751  0FE5                     	;# 
  1752  0FE6                     	;# 
  1753  0FE7                     	;# 
  1754  0FE8                     	;# 
  1755  0FE9                     	;# 
  1756  0FEA                     	;# 
  1757  0FEB                     	;# 
  1758  0FED                     	;# 
  1759  0FEE                     	;# 
  1760  0FEF                     	;# 
  1761  0000                     	;# 
  1762  0001                     	;# 
  1763  0002                     	;# 
  1764  0003                     	;# 
  1765  0004                     	;# 
  1766  0005                     	;# 
  1767  0006                     	;# 
  1768  0007                     	;# 
  1769  0008                     	;# 
  1770  0009                     	;# 
  1771  000A                     	;# 
  1772  000B                     	;# 
  1773  000C                     	;# 
  1774  000D                     	;# 
  1775  000E                     	;# 
  1776  000F                     	;# 
  1777  0010                     	;# 
  1778  0011                     	;# 
  1779  0012                     	;# 
  1780  0013                     	;# 
  1781  0015                     	;# 
  1782  0016                     	;# 
  1783  0016                     	;# 
  1784  0017                     	;# 
  1785  0018                     	;# 
  1786  0019                     	;# 
  1787  001A                     	;# 
  1788  001B                     	;# 
  1789  001C                     	;# 
  1790  008C                     	;# 
  1791  008D                     	;# 
  1792  008E                     	;# 
  1793  008F                     	;# 
  1794  0090                     	;# 
  1795  0091                     	;# 
  1796  0092                     	;# 
  1797  0093                     	;# 
  1798  0095                     	;# 
  1799  0096                     	;# 
  1800  0097                     	;# 
  1801  0098                     	;# 
  1802  0099                     	;# 
  1803  009A                     	;# 
  1804  009B                     	;# 
  1805  009B                     	;# 
  1806  009C                     	;# 
  1807  009D                     	;# 
  1808  009E                     	;# 
  1809  009F                     	;# 
  1810  010C                     	;# 
  1811  010D                     	;# 
  1812  010E                     	;# 
  1813  010F                     	;# 
  1814  0110                     	;# 
  1815  0111                     	;# 
  1816  0112                     	;# 
  1817  0113                     	;# 
  1818  0114                     	;# 
  1819  0115                     	;# 
  1820  0116                     	;# 
  1821  0117                     	;# 
  1822  0118                     	;# 
  1823  0119                     	;# 
  1824  011A                     	;# 
  1825  011B                     	;# 
  1826  011B                     	;# 
  1827  011C                     	;# 
  1828  018C                     	;# 
  1829  018D                     	;# 
  1830  018E                     	;# 
  1831  018F                     	;# 
  1832  0190                     	;# 
  1833  0191                     	;# 
  1834  0191                     	;# 
  1835  0192                     	;# 
  1836  0193                     	;# 
  1837  0193                     	;# 
  1838  0194                     	;# 
  1839  0195                     	;# 
  1840  0196                     	;# 
  1841  0197                     	;# 
  1842  0199                     	;# 
  1843  0199                     	;# 
  1844  0199                     	;# 
  1845  019A                     	;# 
  1846  019A                     	;# 
  1847  019A                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019B                     	;# 
  1852  019B                     	;# 
  1853  019C                     	;# 
  1854  019C                     	;# 
  1855  019C                     	;# 
  1856  019D                     	;# 
  1857  019D                     	;# 
  1858  019D                     	;# 
  1859  019E                     	;# 
  1860  019E                     	;# 
  1861  019E                     	;# 
  1862  019F                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  019F                     	;# 
  1866  019F                     	;# 
  1867  020C                     	;# 
  1868  020D                     	;# 
  1869  020E                     	;# 
  1870  020F                     	;# 
  1871  0210                     	;# 
  1872  0211                     	;# 
  1873  0211                     	;# 
  1874  0212                     	;# 
  1875  0212                     	;# 
  1876  0213                     	;# 
  1877  0213                     	;# 
  1878  0214                     	;# 
  1879  0214                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0216                     	;# 
  1885  0216                     	;# 
  1886  0217                     	;# 
  1887  0217                     	;# 
  1888  028C                     	;# 
  1889  028D                     	;# 
  1890  028E                     	;# 
  1891  028F                     	;# 
  1892  0290                     	;# 
  1893  0291                     	;# 
  1894  0291                     	;# 
  1895  0292                     	;# 
  1896  0293                     	;# 
  1897  0293                     	;# 
  1898  0298                     	;# 
  1899  0298                     	;# 
  1900  0299                     	;# 
  1901  029A                     	;# 
  1902  029A                     	;# 
  1903  029E                     	;# 
  1904  030C                     	;# 
  1905  030D                     	;# 
  1906  030E                     	;# 
  1907  030F                     	;# 
  1908  0310                     	;# 
  1909  038C                     	;# 
  1910  038D                     	;# 
  1911  038E                     	;# 
  1912  038F                     	;# 
  1913  0390                     	;# 
  1914  0391                     	;# 
  1915  0392                     	;# 
  1916  0393                     	;# 
  1917  0394                     	;# 
  1918  0395                     	;# 
  1919  0396                     	;# 
  1920  0397                     	;# 
  1921  0398                     	;# 
  1922  0399                     	;# 
  1923  039D                     	;# 
  1924  039E                     	;# 
  1925  039F                     	;# 
  1926  0415                     	;# 
  1927  0416                     	;# 
  1928  0417                     	;# 
  1929  041C                     	;# 
  1930  041D                     	;# 
  1931  041E                     	;# 
  1932  0498                     	;# 
  1933  0498                     	;# 
  1934  0499                     	;# 
  1935  049A                     	;# 
  1936  049B                     	;# 
  1937  049B                     	;# 
  1938  049C                     	;# 
  1939  049D                     	;# 
  1940  049E                     	;# 
  1941  049F                     	;# 
  1942  0511                     	;# 
  1943  0515                     	;# 
  1944  0617                     	;# 
  1945  0618                     	;# 
  1946  0619                     	;# 
  1947  0619                     	;# 
  1948  061A                     	;# 
  1949  061B                     	;# 
  1950  061C                     	;# 
  1951  061C                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  0695                     	;# 
  1957  0696                     	;# 
  1958  0697                     	;# 
  1959  0698                     	;# 
  1960  0699                     	;# 
  1961  069A                     	;# 
  1962  069B                     	;# 
  1963  069C                     	;# 
  1964  069D                     	;# 
  1965  069E                     	;# 
  1966  069F                     	;# 
  1967  0E0F                     	;# 
  1968  0E10                     	;# 
  1969  0E11                     	;# 
  1970  0E12                     	;# 
  1971  0E13                     	;# 
  1972  0E14                     	;# 
  1973  0E15                     	;# 
  1974  0E17                     	;# 
  1975  0E20                     	;# 
  1976  0E21                     	;# 
  1977  0E22                     	;# 
  1978  0E24                     	;# 
  1979  0E25                     	;# 
  1980  0E28                     	;# 
  1981  0E29                     	;# 
  1982  0E2A                     	;# 
  1983  0E2B                     	;# 
  1984  0E90                     	;# 
  1985  0E91                     	;# 
  1986  0E92                     	;# 
  1987  0E93                     	;# 
  1988  0E94                     	;# 
  1989  0E95                     	;# 
  1990  0E96                     	;# 
  1991  0E97                     	;# 
  1992  0E98                     	;# 
  1993  0E99                     	;# 
  1994  0E9A                     	;# 
  1995  0E9B                     	;# 
  1996  0E9C                     	;# 
  1997  0E9D                     	;# 
  1998  0E9E                     	;# 
  1999  0E9F                     	;# 
  2000  0EA0                     	;# 
  2001  0EA1                     	;# 
  2002  0EA2                     	;# 
  2003  0EA3                     	;# 
  2004  0EA4                     	;# 
  2005  0EA5                     	;# 
  2006  0EA6                     	;# 
  2007  0EA7                     	;# 
  2008  0EA8                     	;# 
  2009  0EA9                     	;# 
  2010  0EAA                     	;# 
  2011  0EAB                     	;# 
  2012  0EAC                     	;# 
  2013  0EAD                     	;# 
  2014  0EAE                     	;# 
  2015  0EAF                     	;# 
  2016  0EB0                     	;# 
  2017  0EB1                     	;# 
  2018  0EB2                     	;# 
  2019  0F0F                     	;# 
  2020  0F10                     	;# 
  2021  0F11                     	;# 
  2022  0F12                     	;# 
  2023  0F13                     	;# 
  2024  0F14                     	;# 
  2025  0F15                     	;# 
  2026  0F16                     	;# 
  2027  0F17                     	;# 
  2028  0F18                     	;# 
  2029  0F19                     	;# 
  2030  0F1A                     	;# 
  2031  0F1B                     	;# 
  2032  0F1C                     	;# 
  2033  0F1D                     	;# 
  2034  0F1E                     	;# 
  2035  0F1F                     	;# 
  2036  0F20                     	;# 
  2037  0F21                     	;# 
  2038  0F22                     	;# 
  2039  0F23                     	;# 
  2040  0F24                     	;# 
  2041  0F25                     	;# 
  2042  0F26                     	;# 
  2043  0F27                     	;# 
  2044  0F28                     	;# 
  2045  0F29                     	;# 
  2046  0F2A                     	;# 
  2047  0F2B                     	;# 
  2048  0F2C                     	;# 
  2049  0F2D                     	;# 
  2050  0F2E                     	;# 
  2051  0F2F                     	;# 
  2052  0F30                     	;# 
  2053  0F31                     	;# 
  2054  0F32                     	;# 
  2055  0F33                     	;# 
  2056  0F34                     	;# 
  2057  0F35                     	;# 
  2058  0F36                     	;# 
  2059  0F37                     	;# 
  2060  0FE4                     	;# 
  2061  0FE5                     	;# 
  2062  0FE6                     	;# 
  2063  0FE7                     	;# 
  2064  0FE8                     	;# 
  2065  0FE9                     	;# 
  2066  0FEA                     	;# 
  2067  0FEB                     	;# 
  2068  0FED                     	;# 
  2069  0FEE                     	;# 
  2070  0FEF                     	;# 
  2071  0000                     	;# 
  2072  0001                     	;# 
  2073  0002                     	;# 
  2074  0003                     	;# 
  2075  0004                     	;# 
  2076  0005                     	;# 
  2077  0006                     	;# 
  2078  0007                     	;# 
  2079  0008                     	;# 
  2080  0009                     	;# 
  2081  000A                     	;# 
  2082  000B                     	;# 
  2083  000C                     	;# 
  2084  000D                     	;# 
  2085  000E                     	;# 
  2086  000F                     	;# 
  2087  0010                     	;# 
  2088  0011                     	;# 
  2089  0012                     	;# 
  2090  0013                     	;# 
  2091  0015                     	;# 
  2092  0016                     	;# 
  2093  0016                     	;# 
  2094  0017                     	;# 
  2095  0018                     	;# 
  2096  0019                     	;# 
  2097  001A                     	;# 
  2098  001B                     	;# 
  2099  001C                     	;# 
  2100  008C                     	;# 
  2101  008D                     	;# 
  2102  008E                     	;# 
  2103  008F                     	;# 
  2104  0090                     	;# 
  2105  0091                     	;# 
  2106  0092                     	;# 
  2107  0093                     	;# 
  2108  0095                     	;# 
  2109  0096                     	;# 
  2110  0097                     	;# 
  2111  0098                     	;# 
  2112  0099                     	;# 
  2113  009A                     	;# 
  2114  009B                     	;# 
  2115  009B                     	;# 
  2116  009C                     	;# 
  2117  009D                     	;# 
  2118  009E                     	;# 
  2119  009F                     	;# 
  2120  010C                     	;# 
  2121  010D                     	;# 
  2122  010E                     	;# 
  2123  010F                     	;# 
  2124  0110                     	;# 
  2125  0111                     	;# 
  2126  0112                     	;# 
  2127  0113                     	;# 
  2128  0114                     	;# 
  2129  0115                     	;# 
  2130  0116                     	;# 
  2131  0117                     	;# 
  2132  0118                     	;# 
  2133  0119                     	;# 
  2134  011A                     	;# 
  2135  011B                     	;# 
  2136  011B                     	;# 
  2137  011C                     	;# 
  2138  018C                     	;# 
  2139  018D                     	;# 
  2140  018E                     	;# 
  2141  018F                     	;# 
  2142  0190                     	;# 
  2143  0191                     	;# 
  2144  0191                     	;# 
  2145  0192                     	;# 
  2146  0193                     	;# 
  2147  0193                     	;# 
  2148  0194                     	;# 
  2149  0195                     	;# 
  2150  0196                     	;# 
  2151  0197                     	;# 
  2152  0199                     	;# 
  2153  0199                     	;# 
  2154  0199                     	;# 
  2155  019A                     	;# 
  2156  019A                     	;# 
  2157  019A                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019B                     	;# 
  2162  019B                     	;# 
  2163  019C                     	;# 
  2164  019C                     	;# 
  2165  019C                     	;# 
  2166  019D                     	;# 
  2167  019D                     	;# 
  2168  019D                     	;# 
  2169  019E                     	;# 
  2170  019E                     	;# 
  2171  019E                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  019F                     	;# 
  2176  019F                     	;# 
  2177  020C                     	;# 
  2178  020D                     	;# 
  2179  020E                     	;# 
  2180  020F                     	;# 
  2181  0210                     	;# 
  2182  0211                     	;# 
  2183  0211                     	;# 
  2184  0212                     	;# 
  2185  0212                     	;# 
  2186  0213                     	;# 
  2187  0213                     	;# 
  2188  0214                     	;# 
  2189  0214                     	;# 
  2190  0215                     	;# 
  2191  0215                     	;# 
  2192  0215                     	;# 
  2193  0215                     	;# 
  2194  0216                     	;# 
  2195  0216                     	;# 
  2196  0217                     	;# 
  2197  0217                     	;# 
  2198  028C                     	;# 
  2199  028D                     	;# 
  2200  028E                     	;# 
  2201  028F                     	;# 
  2202  0290                     	;# 
  2203  0291                     	;# 
  2204  0291                     	;# 
  2205  0292                     	;# 
  2206  0293                     	;# 
  2207  0293                     	;# 
  2208  0298                     	;# 
  2209  0298                     	;# 
  2210  0299                     	;# 
  2211  029A                     	;# 
  2212  029A                     	;# 
  2213  029E                     	;# 
  2214  030C                     	;# 
  2215  030D                     	;# 
  2216  030E                     	;# 
  2217  030F                     	;# 
  2218  0310                     	;# 
  2219  038C                     	;# 
  2220  038D                     	;# 
  2221  038E                     	;# 
  2222  038F                     	;# 
  2223  0390                     	;# 
  2224  0391                     	;# 
  2225  0392                     	;# 
  2226  0393                     	;# 
  2227  0394                     	;# 
  2228  0395                     	;# 
  2229  0396                     	;# 
  2230  0397                     	;# 
  2231  0398                     	;# 
  2232  0399                     	;# 
  2233  039D                     	;# 
  2234  039E                     	;# 
  2235  039F                     	;# 
  2236  0415                     	;# 
  2237  0416                     	;# 
  2238  0417                     	;# 
  2239  041C                     	;# 
  2240  041D                     	;# 
  2241  041E                     	;# 
  2242  0498                     	;# 
  2243  0498                     	;# 
  2244  0499                     	;# 
  2245  049A                     	;# 
  2246  049B                     	;# 
  2247  049B                     	;# 
  2248  049C                     	;# 
  2249  049D                     	;# 
  2250  049E                     	;# 
  2251  049F                     	;# 
  2252  0511                     	;# 
  2253  0515                     	;# 
  2254  0617                     	;# 
  2255  0618                     	;# 
  2256  0619                     	;# 
  2257  0619                     	;# 
  2258  061A                     	;# 
  2259  061B                     	;# 
  2260  061C                     	;# 
  2261  061C                     	;# 
  2262  0691                     	;# 
  2263  0692                     	;# 
  2264  0693                     	;# 
  2265  0694                     	;# 
  2266  0695                     	;# 
  2267  0696                     	;# 
  2268  0697                     	;# 
  2269  0698                     	;# 
  2270  0699                     	;# 
  2271  069A                     	;# 
  2272  069B                     	;# 
  2273  069C                     	;# 
  2274  069D                     	;# 
  2275  069E                     	;# 
  2276  069F                     	;# 
  2277  0E0F                     	;# 
  2278  0E10                     	;# 
  2279  0E11                     	;# 
  2280  0E12                     	;# 
  2281  0E13                     	;# 
  2282  0E14                     	;# 
  2283  0E15                     	;# 
  2284  0E17                     	;# 
  2285  0E20                     	;# 
  2286  0E21                     	;# 
  2287  0E22                     	;# 
  2288  0E24                     	;# 
  2289  0E25                     	;# 
  2290  0E28                     	;# 
  2291  0E29                     	;# 
  2292  0E2A                     	;# 
  2293  0E2B                     	;# 
  2294  0E90                     	;# 
  2295  0E91                     	;# 
  2296  0E92                     	;# 
  2297  0E93                     	;# 
  2298  0E94                     	;# 
  2299  0E95                     	;# 
  2300  0E96                     	;# 
  2301  0E97                     	;# 
  2302  0E98                     	;# 
  2303  0E99                     	;# 
  2304  0E9A                     	;# 
  2305  0E9B                     	;# 
  2306  0E9C                     	;# 
  2307  0E9D                     	;# 
  2308  0E9E                     	;# 
  2309  0E9F                     	;# 
  2310  0EA0                     	;# 
  2311  0EA1                     	;# 
  2312  0EA2                     	;# 
  2313  0EA3                     	;# 
  2314  0EA4                     	;# 
  2315  0EA5                     	;# 
  2316  0EA6                     	;# 
  2317  0EA7                     	;# 
  2318  0EA8                     	;# 
  2319  0EA9                     	;# 
  2320  0EAA                     	;# 
  2321  0EAB                     	;# 
  2322  0EAC                     	;# 
  2323  0EAD                     	;# 
  2324  0EAE                     	;# 
  2325  0EAF                     	;# 
  2326  0EB0                     	;# 
  2327  0EB1                     	;# 
  2328  0EB2                     	;# 
  2329  0F0F                     	;# 
  2330  0F10                     	;# 
  2331  0F11                     	;# 
  2332  0F12                     	;# 
  2333  0F13                     	;# 
  2334  0F14                     	;# 
  2335  0F15                     	;# 
  2336  0F16                     	;# 
  2337  0F17                     	;# 
  2338  0F18                     	;# 
  2339  0F19                     	;# 
  2340  0F1A                     	;# 
  2341  0F1B                     	;# 
  2342  0F1C                     	;# 
  2343  0F1D                     	;# 
  2344  0F1E                     	;# 
  2345  0F1F                     	;# 
  2346  0F20                     	;# 
  2347  0F21                     	;# 
  2348  0F22                     	;# 
  2349  0F23                     	;# 
  2350  0F24                     	;# 
  2351  0F25                     	;# 
  2352  0F26                     	;# 
  2353  0F27                     	;# 
  2354  0F28                     	;# 
  2355  0F29                     	;# 
  2356  0F2A                     	;# 
  2357  0F2B                     	;# 
  2358  0F2C                     	;# 
  2359  0F2D                     	;# 
  2360  0F2E                     	;# 
  2361  0F2F                     	;# 
  2362  0F30                     	;# 
  2363  0F31                     	;# 
  2364  0F32                     	;# 
  2365  0F33                     	;# 
  2366  0F34                     	;# 
  2367  0F35                     	;# 
  2368  0F36                     	;# 
  2369  0F37                     	;# 
  2370  0FE4                     	;# 
  2371  0FE5                     	;# 
  2372  0FE6                     	;# 
  2373  0FE7                     	;# 
  2374  0FE8                     	;# 
  2375  0FE9                     	;# 
  2376  0FEA                     	;# 
  2377  0FEB                     	;# 
  2378  0FED                     	;# 
  2379  0FEE                     	;# 
  2380  0FEF                     	;_messageBuffer
  2381                           
  2382                           	psect	idataBANK4
  2383  3E1A                     __pidataBANK4:	
  2384                           
  2385                           ;initializer for stoa@F1174
  2386  3E1A  3428               	retlw	40
  2387  3E1B  346E               	retlw	110
  2388  3E1C  3475               	retlw	117
  2389  3E1D  346C               	retlw	108
  2390  3E1E  346C               	retlw	108
  2391  3E1F  3429               	retlw	41
  2392  3E20  3400               	retlw	0
  2393                           
  2394                           	psect	stringtext1
  2395  39F8                     __pstringtext1:	
  2396  39F8                     _OCD_threshold_setting:	
  2397  39F8  3411               	retlw	17
  2398  39F9  3400               	retlw	0
  2399  39FA  3416               	retlw	22
  2400  39FB  3400               	retlw	0
  2401  39FC  341C               	retlw	28
  2402  39FD  3400               	retlw	0
  2403  39FE  3421               	retlw	33
  2404  39FF  3400               	retlw	0
  2405  3A00  3427               	retlw	39
  2406  3A01  3400               	retlw	0
  2407  3A02  342C               	retlw	44
  2408  3A03  3400               	retlw	0
  2409  3A04  3432               	retlw	50
  2410  3A05  3400               	retlw	0
  2411  3A06  3438               	retlw	56
  2412  3A07  3400               	retlw	0
  2413  3A08  343D               	retlw	61
  2414  3A09  3400               	retlw	0
  2415  3A0A  3443               	retlw	67
  2416  3A0B  3400               	retlw	0
  2417  3A0C  3448               	retlw	72
  2418  3A0D  3400               	retlw	0
  2419  3A0E  344E               	retlw	78
  2420  3A0F  3400               	retlw	0
  2421  3A10  3453               	retlw	83
  2422  3A11  3400               	retlw	0
  2423  3A12  3459               	retlw	89
  2424  3A13  3400               	retlw	0
  2425  3A14  345E               	retlw	94
  2426  3A15  3400               	retlw	0
  2427  3A16  3464               	retlw	100
  2428  3A17  3400               	retlw	0
  2429  3A18                     __end_of_OCD_threshold_setting:	
  2430                           
  2431                           	psect	stringtext2
  2432  3B0C                     __pstringtext2:	
  2433  3B0C                     _OCD_delay_setting:	
  2434  3B0C  3408               	retlw	8
  2435  3B0D  3400               	retlw	0
  2436  3B0E  3414               	retlw	20
  2437  3B0F  3400               	retlw	0
  2438  3B10  3428               	retlw	40
  2439  3B11  3400               	retlw	0
  2440  3B12  3450               	retlw	80
  2441  3B13  3400               	retlw	0
  2442  3B14  34A0               	retlw	160
  2443  3B15  3400               	retlw	0
  2444  3B16  3440               	retlw	64
  2445  3B17  3401               	retlw	1
  2446  3B18  3480               	retlw	128
  2447  3B19  3402               	retlw	2
  2448  3B1A  3400               	retlw	0
  2449  3B1B  3405               	retlw	5
  2450  3B1C                     __end_of_OCD_delay_setting:	
  2451                           
  2452                           	psect	stringtext3
  2453  3B1C                     __pstringtext3:	
  2454  3B1C                     _SCD_threshold_setting:	
  2455  3B1C  342C               	retlw	44
  2456  3B1D  3400               	retlw	0
  2457  3B1E  3443               	retlw	67
  2458  3B1F  3400               	retlw	0
  2459  3B20  3459               	retlw	89
  2460  3B21  3400               	retlw	0
  2461  3B22  346F               	retlw	111
  2462  3B23  3400               	retlw	0
  2463  3B24  3485               	retlw	133
  2464  3B25  3400               	retlw	0
  2465  3B26  349B               	retlw	155
  2466  3B27  3400               	retlw	0
  2467  3B28  34B2               	retlw	178
  2468  3B29  3400               	retlw	0
  2469  3B2A  34C8               	retlw	200
  2470  3B2B  3400               	retlw	0
  2471  3B2C                     __end_of_SCD_threshold_setting:	
  2472                           
  2473                           	psect	stringtext4
  2474  3B2C                     __pstringtext4:	
  2475  3B2C                     _OV_delay_setting:	
  2476  3B2C  3401               	retlw	1
  2477  3B2D  3400               	retlw	0
  2478  3B2E  3402               	retlw	2
  2479  3B2F  3400               	retlw	0
  2480  3B30  3404               	retlw	4
  2481  3B31  3400               	retlw	0
  2482  3B32  3408               	retlw	8
  2483  3B33  3400               	retlw	0
  2484  3B34                     __end_of_OV_delay_setting:	
  2485                           
  2486                           	psect	stringtext5
  2487  3B34                     __pstringtext5:	
  2488  3B34                     _UV_delay_setting:	
  2489  3B34  3401               	retlw	1
  2490  3B35  3400               	retlw	0
  2491  3B36  3404               	retlw	4
  2492  3B37  3400               	retlw	0
  2493  3B38  3408               	retlw	8
  2494  3B39  3400               	retlw	0
  2495  3B3A  3410               	retlw	16
  2496  3B3B  3400               	retlw	0
  2497  3B3C                     __end_of_UV_delay_setting:	
  2498                           
  2499                           	psect	stringtext6
  2500  3B3C                     __pstringtext6:	
  2501  3B3C                     _SCD_delay_setting:	
  2502  3B3C  3446               	retlw	70
  2503  3B3D  3400               	retlw	0
  2504  3B3E  3464               	retlw	100
  2505  3B3F  3400               	retlw	0
  2506  3B40  34C8               	retlw	200
  2507  3B41  3400               	retlw	0
  2508  3B42  3490               	retlw	144
  2509  3B43  3401               	retlw	1
  2510  3B44                     __end_of_SCD_delay_setting:	
  2511                           
  2512                           	psect	stringtext7
  2513  3800                     __pstringtext7:	
  2514  3800                     _ATmega328_address:	
  2515  3800  3402               	retlw	2
  2516  3801  3400               	retlw	0
  2517  3802                     __end_of_ATmega328_address:	
  2518  0016                     _TMR1	set	22
  2519  0003                     _STATUSbits	set	3
  2520  000B                     _INTCONbits	set	11
  2521  0018                     _T1CONbits	set	24
  2522  0011                     _PIR1bits	set	17
  2523  0097                     _WDTCONbits	set	151
  2524  0090                     _TRISEbits	set	144
  2525  008C                     _TRISAbits	set	140
  2526  008E                     _TRISCbits	set	142
  2527  008D                     _TRISBbits	set	141
  2528  0091                     _PIE1bits	set	145
  2529  0476                     _TRISC6	set	1142
  2530  0477                     _TRISC7	set	1143
  2531  04CF                     _SPLLEN	set	1231
  2532  04CE                     _IRCF3	set	1230
  2533  04CD                     _IRCF2	set	1229
  2534  04CC                     _IRCF1	set	1228
  2535  04CB                     _IRCF0	set	1227
  2536  04C9                     _SCS1	set	1225
  2537  04C8                     _SCS0	set	1224
  2538  0110                     _LATEbits	set	272
  2539  010C                     _LATAbits	set	268
  2540  019A                     _TX1REG	set	410
  2541  0199                     _RC1REG	set	409
  2542  019D                     _RC1STAbits	set	413
  2543  019B                     _SPBRG	set	411
  2544  018E                     _ANSELCbits	set	398
  2545  018D                     _ANSELBbits	set	397
  2546  0CF5                     _TXEN	set	3317
  2547  0CEC                     _CREN	set	3308
  2548  0CEF                     _SPEN	set	3311
  2549  0CF4                     _SYNC	set	3316
  2550  0CF2                     _BRGH	set	3314
  2551  0216                     _SSPCON2bits	set	534
  2552  0211                     _SSPBUF	set	529
  2553  0212                     _SSPADD	set	530
  2554  0215                     _SSPCONbits	set	533
  2555  0E24                     _RXPPSbits	set	3620
  2556  0E20                     _SSPCLKPPSbits	set	3616
  2557  0E21                     _SSPDATPPSbits	set	3617
  2558  0E0F                     _PPSLOCKbits	set	3599
  2559  0E0F                     _PPSLOCK	set	3599
  2560  0E9A                     _RB2PPSbits	set	3738
  2561  0EA5                     _RC5PPSbits	set	3749
  2562  0EA4                     _RC4PPSbits	set	3748
  2563  3802                     STR_8:	
  2564  3802  3453               	retlw	83	;'S'
  2565  3803  3465               	retlw	101	;'e'
  2566  3804  3474               	retlw	116	;'t'
  2567  3805  3420               	retlw	32	;' '
  2568  3806  344F               	retlw	79	;'O'
  2569  3807  3476               	retlw	118	;'v'
  2570  3808  3465               	retlw	101	;'e'
  2571  3809  3472               	retlw	114	;'r'
  2572  380A  342D               	retlw	45	;'-'
  2573  380B  3463               	retlw	99	;'c'
  2574  380C  3475               	retlw	117	;'u'
  2575  380D  3472               	retlw	114	;'r'
  2576  380E  3472               	retlw	114	;'r'
  2577  380F  3465               	retlw	101	;'e'
  2578  3810  346E               	retlw	110	;'n'
  2579  3811  3474               	retlw	116	;'t'
  2580  3812  3420               	retlw	32	;' '
  2581  3813  3464               	retlw	100	;'d'
  2582  3814  3469               	retlw	105	;'i'
  2583  3815  3473               	retlw	115	;'s'
  2584  3816  3463               	retlw	99	;'c'
  2585  3817  3468               	retlw	104	;'h'
  2586  3818  3461               	retlw	97	;'a'
  2587  3819  3472               	retlw	114	;'r'
  2588  381A  3467               	retlw	103	;'g'
  2589  381B  3465               	retlw	101	;'e'
  2590  381C  3420               	retlw	32	;' '
  2591  381D  3470               	retlw	112	;'p'
  2592  381E  3472               	retlw	114	;'r'
  2593  381F  346F               	retlw	111	;'o'
  2594  3820  3474               	retlw	116	;'t'
  2595  3821  3465               	retlw	101	;'e'
  2596  3822  3463               	retlw	99	;'c'
  2597  3823  3474               	retlw	116	;'t'
  2598  3824  3469               	retlw	105	;'i'
  2599  3825  346F               	retlw	111	;'o'
  2600  3826  346E               	retlw	110	;'n'
  2601  3827  3420               	retlw	32	;' '
  2602  3828  3420               	retlw	32	;' '
  2603  3829  3466               	retlw	102	;'f'
  2604  382A  346F               	retlw	111	;'o'
  2605  382B  3472               	retlw	114	;'r'
  2606  382C  3420               	retlw	32	;' '
  2607  382D  3441               	retlw	65	;'A'
  2608  382E  3446               	retlw	70	;'F'
  2609  382F  3445               	retlw	69	;'E'
  2610  3830  343A               	retlw	58	;':'
  2611  3831  3420               	retlw	32	;' '
  2612  3832  3425               	retlw	37	;'%'
  2613  3833  346C               	retlw	108	;'l'
  2614  3834  3475               	retlw	117	;'u'
  2615  3835  3420               	retlw	32	;' '
  2616  3836  346D               	retlw	109	;'m'
  2617  3837  3441               	retlw	65	;'A'
  2618  3838  340A               	retlw	10
  2619  3839  340D               	retlw	13
  2620  383A  3400               	retlw	0
  2621                           
  2622                           	psect	stringtext8
  2623  383B                     __pstringtext8:	
  2624  383B                     STR_4:	
  2625  383B  3441               	retlw	65	;'A'
  2626  383C  3474               	retlw	116	;'t'
  2627  383D  3474               	retlw	116	;'t'
  2628  383E  3465               	retlw	101	;'e'
  2629  383F  346D               	retlw	109	;'m'
  2630  3840  3470               	retlw	112	;'p'
  2631  3841  3474               	retlw	116	;'t'
  2632  3842  3420               	retlw	32	;' '
  2633  3843  3474               	retlw	116	;'t'
  2634  3844  346F               	retlw	111	;'o'
  2635  3845  3420               	retlw	32	;' '
  2636  3846  3473               	retlw	115	;'s'
  2637  3847  3465               	retlw	101	;'e'
  2638  3848  3474               	retlw	116	;'t'
  2639  3849  3420               	retlw	32	;' '
  2640  384A  3469               	retlw	105	;'i'
  2641  384B  346E               	retlw	110	;'n'
  2642  384C  3469               	retlw	105	;'i'
  2643  384D  3474               	retlw	116	;'t'
  2644  384E  3469               	retlw	105	;'i'
  2645  384F  3461               	retlw	97	;'a'
  2646  3850  346C               	retlw	108	;'l'
  2647  3851  3420               	retlw	32	;' '
  2648  3852  3473               	retlw	115	;'s'
  2649  3853  3479               	retlw	121	;'y'
  2650  3854  3473               	retlw	115	;'s'
  2651  3855  3474               	retlw	116	;'t'
  2652  3856  3465               	retlw	101	;'e'
  2653  3857  346D               	retlw	109	;'m'
  2654  3858  3420               	retlw	32	;' '
  2655  3859  3470               	retlw	112	;'p'
  2656  385A  3461               	retlw	97	;'a'
  2657  385B  3472               	retlw	114	;'r'
  2658  385C  3461               	retlw	97	;'a'
  2659  385D  346D               	retlw	109	;'m'
  2660  385E  3465               	retlw	101	;'e'
  2661  385F  3474               	retlw	116	;'t'
  2662  3860  3465               	retlw	101	;'e'
  2663  3861  3472               	retlw	114	;'r'
  2664  3862  3473               	retlw	115	;'s'
  2665  3863  3420               	retlw	32	;' '
  2666  3864  3474               	retlw	116	;'t'
  2667  3865  346F               	retlw	111	;'o'
  2668  3866  3420               	retlw	32	;' '
  2669  3867  3441               	retlw	65	;'A'
  2670  3868  3446               	retlw	70	;'F'
  2671  3869  3445               	retlw	69	;'E'
  2672  386A  342E               	retlw	46	;'.'
  2673  386B  342E               	retlw	46	;'.'
  2674  386C  342E               	retlw	46	;'.'
  2675  386D  340A               	retlw	10
  2676  386E  340D               	retlw	13
  2677  386F  3400               	retlw	0
  2678                           
  2679                           	psect	stringtext9
  2680  3870                     __pstringtext9:	
  2681  3870                     STR_11:	
  2682  3870  3443               	retlw	67	;'C'
  2683  3871  3465               	retlw	101	;'e'
  2684  3872  346C               	retlw	108	;'l'
  2685  3873  346C               	retlw	108	;'l'
  2686  3874  3420               	retlw	32	;' '
  2687  3875  3462               	retlw	98	;'b'
  2688  3876  3461               	retlw	97	;'a'
  2689  3877  3474               	retlw	116	;'t'
  2690  3878  3474               	retlw	116	;'t'
  2691  3879  343A               	retlw	58	;':'
  2692  387A  3420               	retlw	32	;' '
  2693  387B  3425               	retlw	37	;'%'
  2694  387C  3469               	retlw	105	;'i'
  2695  387D  3420               	retlw	32	;' '
  2696  387E  342C               	retlw	44	;','
  2697  387F  3425               	retlw	37	;'%'
  2698  3880  3469               	retlw	105	;'i'
  2699  3881  342C               	retlw	44	;','
  2700  3882  3420               	retlw	32	;' '
  2701  3883  3425               	retlw	37	;'%'
  2702  3884  3469               	retlw	105	;'i'
  2703  3885  3420               	retlw	32	;' '
  2704  3886  342C               	retlw	44	;','
  2705  3887  3420               	retlw	32	;' '
  2706  3888  3425               	retlw	37	;'%'
  2707  3889  3469               	retlw	105	;'i'
  2708  388A  342C               	retlw	44	;','
  2709  388B  3420               	retlw	32	;' '
  2710  388C  3425               	retlw	37	;'%'
  2711  388D  3469               	retlw	105	;'i'
  2712  388E  342C               	retlw	44	;','
  2713  388F  3420               	retlw	32	;' '
  2714  3890  3425               	retlw	37	;'%'
  2715  3891  3469               	retlw	105	;'i'
  2716  3892  3420               	retlw	32	;' '
  2717  3893  3442               	retlw	66	;'B'
  2718  3894  3461               	retlw	97	;'a'
  2719  3895  3474               	retlw	116	;'t'
  2720  3896  3474               	retlw	116	;'t'
  2721  3897  3420               	retlw	32	;' '
  2722  3898  3443               	retlw	67	;'C'
  2723  3899  3475               	retlw	117	;'u'
  2724  389A  3472               	retlw	114	;'r'
  2725  389B  3472               	retlw	114	;'r'
  2726  389C  343A               	retlw	58	;':'
  2727  389D  3420               	retlw	32	;' '
  2728  389E  3425               	retlw	37	;'%'
  2729  389F  3469               	retlw	105	;'i'
  2730  38A0  3420               	retlw	32	;' '
  2731  38A1  340A               	retlw	10
  2732  38A2  340D               	retlw	13
  2733  38A3  3400               	retlw	0
  2734                           
  2735                           	psect	stringtext10
  2736  38A4                     __pstringtext10:	
  2737  38A4                     STR_2:	
  2738  38A4  3443               	retlw	67	;'C'
  2739  38A5  346F               	retlw	111	;'o'
  2740  38A6  346D               	retlw	109	;'m'
  2741  38A7  346D               	retlw	109	;'m'
  2742  38A8  3475               	retlw	117	;'u'
  2743  38A9  346E               	retlw	110	;'n'
  2744  38AA  3469               	retlw	105	;'i'
  2745  38AB  3463               	retlw	99	;'c'
  2746  38AC  3461               	retlw	97	;'a'
  2747  38AD  3474               	retlw	116	;'t'
  2748  38AE  3469               	retlw	105	;'i'
  2749  38AF  346F               	retlw	111	;'o'
  2750  38B0  346E               	retlw	110	;'n'
  2751  38B1  3420               	retlw	32	;' '
  2752  38B2  3477               	retlw	119	;'w'
  2753  38B3  3469               	retlw	105	;'i'
  2754  38B4  3474               	retlw	116	;'t'
  2755  38B5  3468               	retlw	104	;'h'
  2756  38B6  3420               	retlw	32	;' '
  2757  38B7  3442               	retlw	66	;'B'
  2758  38B8  3451               	retlw	81	;'Q'
  2759  38B9  3437               	retlw	55	;'7'
  2760  38BA  3436               	retlw	54	;'6'
  2761  38BB  3439               	retlw	57	;'9'
  2762  38BC  3432               	retlw	50	;'2'
  2763  38BD  3430               	retlw	48	;'0'
  2764  38BE  3420               	retlw	32	;' '
  2765  38BF  3441               	retlw	65	;'A'
  2766  38C0  3446               	retlw	70	;'F'
  2767  38C1  3445               	retlw	69	;'E'
  2768  38C2  3420               	retlw	32	;' '
  2769  38C3  3465               	retlw	101	;'e'
  2770  38C4  3473               	retlw	115	;'s'
  2771  38C5  3474               	retlw	116	;'t'
  2772  38C6  3461               	retlw	97	;'a'
  2773  38C7  3462               	retlw	98	;'b'
  2774  38C8  346C               	retlw	108	;'l'
  2775  38C9  3469               	retlw	105	;'i'
  2776  38CA  3473               	retlw	115	;'s'
  2777  38CB  3468               	retlw	104	;'h'
  2778  38CC  3465               	retlw	101	;'e'
  2779  38CD  3464               	retlw	100	;'d'
  2780  38CE  3421               	retlw	33	;'!'
  2781  38CF  340A               	retlw	10
  2782  38D0  340D               	retlw	13
  2783  38D1  3400               	retlw	0
  2784                           
  2785                           	psect	stringtext11
  2786  38D2                     __pstringtext11:	
  2787  38D2                     STR_10:	
  2788  38D2  344E               	retlw	78	;'N'
  2789  38D3  346F               	retlw	111	;'o'
  2790  38D4  3477               	retlw	119	;'w'
  2791  38D5  3420               	retlw	32	;' '
  2792  38D6  3472               	retlw	114	;'r'
  2793  38D7  3465               	retlw	101	;'e'
  2794  38D8  3461               	retlw	97	;'a'
  2795  38D9  3464               	retlw	100	;'d'
  2796  38DA  3469               	retlw	105	;'i'
  2797  38DB  346E               	retlw	110	;'n'
  2798  38DC  3467               	retlw	103	;'g'
  2799  38DD  3420               	retlw	32	;' '
  2800  38DE  3441               	retlw	65	;'A'
  2801  38DF  3446               	retlw	70	;'F'
  2802  38E0  3445               	retlw	69	;'E'
  2803  38E1  3420               	retlw	32	;' '
  2804  38E2  3464               	retlw	100	;'d'
  2805  38E3  3461               	retlw	97	;'a'
  2806  38E4  3474               	retlw	116	;'t'
  2807  38E5  3461               	retlw	97	;'a'
  2808  38E6  3420               	retlw	32	;' '
  2809  38E7  3461               	retlw	97	;'a'
  2810  38E8  3474               	retlw	116	;'t'
  2811  38E9  3420               	retlw	32	;' '
  2812  38EA  3472               	retlw	114	;'r'
  2813  38EB  3465               	retlw	101	;'e'
  2814  38EC  3467               	retlw	103	;'g'
  2815  38ED  3475               	retlw	117	;'u'
  2816  38EE  346C               	retlw	108	;'l'
  2817  38EF  3461               	retlw	97	;'a'
  2818  38F0  3472               	retlw	114	;'r'
  2819  38F1  3420               	retlw	32	;' '
  2820  38F2  3469               	retlw	105	;'i'
  2821  38F3  346E               	retlw	110	;'n'
  2822  38F4  3474               	retlw	116	;'t'
  2823  38F5  3465               	retlw	101	;'e'
  2824  38F6  3472               	retlw	114	;'r'
  2825  38F7  3476               	retlw	118	;'v'
  2826  38F8  3461               	retlw	97	;'a'
  2827  38F9  346C               	retlw	108	;'l'
  2828  38FA  3473               	retlw	115	;'s'
  2829  38FB  342E               	retlw	46	;'.'
  2830  38FC  340A               	retlw	10
  2831  38FD  340D               	retlw	13
  2832  38FE  3400               	retlw	0
  2833                           
  2834                           	psect	stringtext12
  2835  38FF                     __pstringtext12:	
  2836  38FF                     STR_7:	
  2837  38FF  3453               	retlw	83	;'S'
  2838  3900  3465               	retlw	101	;'e'
  2839  3901  3474               	retlw	116	;'t'
  2840  3902  3420               	retlw	32	;' '
  2841  3903  3473               	retlw	115	;'s'
  2842  3904  3468               	retlw	104	;'h'
  2843  3905  346F               	retlw	111	;'o'
  2844  3906  3472               	retlw	114	;'r'
  2845  3907  3474               	retlw	116	;'t'
  2846  3908  3420               	retlw	32	;' '
  2847  3909  3463               	retlw	99	;'c'
  2848  390A  3469               	retlw	105	;'i'
  2849  390B  3472               	retlw	114	;'r'
  2850  390C  3463               	retlw	99	;'c'
  2851  390D  3475               	retlw	117	;'u'
  2852  390E  3469               	retlw	105	;'i'
  2853  390F  3474               	retlw	116	;'t'
  2854  3910  3420               	retlw	32	;' '
  2855  3911  3463               	retlw	99	;'c'
  2856  3912  3475               	retlw	117	;'u'
  2857  3913  3472               	retlw	114	;'r'
  2858  3914  3472               	retlw	114	;'r'
  2859  3915  3465               	retlw	101	;'e'
  2860  3916  346E               	retlw	110	;'n'
  2861  3917  3474               	retlw	116	;'t'
  2862  3918  3420               	retlw	32	;' '
  2863  3919  3466               	retlw	102	;'f'
  2864  391A  346F               	retlw	111	;'o'
  2865  391B  3472               	retlw	114	;'r'
  2866  391C  3420               	retlw	32	;' '
  2867  391D  3441               	retlw	65	;'A'
  2868  391E  3446               	retlw	70	;'F'
  2869  391F  3445               	retlw	69	;'E'
  2870  3920  343A               	retlw	58	;':'
  2871  3921  3420               	retlw	32	;' '
  2872  3922  3425               	retlw	37	;'%'
  2873  3923  346C               	retlw	108	;'l'
  2874  3924  3475               	retlw	117	;'u'
  2875  3925  3420               	retlw	32	;' '
  2876  3926  346D               	retlw	109	;'m'
  2877  3927  3441               	retlw	65	;'A'
  2878  3928  340A               	retlw	10
  2879  3929  340D               	retlw	13
  2880  392A  3400               	retlw	0
  2881                           
  2882                           	psect	stringtext13
  2883  392B                     __pstringtext13:	
  2884  392B                     STR_3:	
  2885  392B  344F               	retlw	79	;'O'
  2886  392C  3462               	retlw	98	;'b'
  2887  392D  3474               	retlw	116	;'t'
  2888  392E  3461               	retlw	97	;'a'
  2889  392F  3469               	retlw	105	;'i'
  2890  3930  346E               	retlw	110	;'n'
  2891  3931  3465               	retlw	101	;'e'
  2892  3932  3464               	retlw	100	;'d'
  2893  3933  3420               	retlw	32	;' '
  2894  3934  3461               	retlw	97	;'a'
  2895  3935  3464               	retlw	100	;'d'
  2896  3936  3463               	retlw	99	;'c'
  2897  3937  344F               	retlw	79	;'O'
  2898  3938  3466               	retlw	102	;'f'
  2899  3939  3466               	retlw	102	;'f'
  2900  393A  3473               	retlw	115	;'s'
  2901  393B  3465               	retlw	101	;'e'
  2902  393C  3474               	retlw	116	;'t'
  2903  393D  3420               	retlw	32	;' '
  2904  393E  343D               	retlw	61	;'='
  2905  393F  3420               	retlw	32	;' '
  2906  3940  3425               	retlw	37	;'%'
  2907  3941  3469               	retlw	105	;'i'
  2908  3942  3420               	retlw	32	;' '
  2909  3943  3461               	retlw	97	;'a'
  2910  3944  346E               	retlw	110	;'n'
  2911  3945  3464               	retlw	100	;'d'
  2912  3946  3420               	retlw	32	;' '
  2913  3947  3461               	retlw	97	;'a'
  2914  3948  3464               	retlw	100	;'d'
  2915  3949  3463               	retlw	99	;'c'
  2916  394A  3447               	retlw	71	;'G'
  2917  394B  3461               	retlw	97	;'a'
  2918  394C  3469               	retlw	105	;'i'
  2919  394D  346E               	retlw	110	;'n'
  2920  394E  3420               	retlw	32	;' '
  2921  394F  343D               	retlw	61	;'='
  2922  3950  3420               	retlw	32	;' '
  2923  3951  3425               	retlw	37	;'%'
  2924  3952  3469               	retlw	105	;'i'
  2925  3953  340A               	retlw	10
  2926  3954  340D               	retlw	13
  2927  3955  3400               	retlw	0
  2928                           
  2929                           	psect	stringtext14
  2930  3956                     __pstringtext14:	
  2931  3956                     STR_9:	
  2932  3956  3449               	retlw	73	;'I'
  2933  3957  346E               	retlw	110	;'n'
  2934  3958  3469               	retlw	105	;'i'
  2935  3959  3474               	retlw	116	;'t'
  2936  395A  3469               	retlw	105	;'i'
  2937  395B  3461               	retlw	97	;'a'
  2938  395C  346C               	retlw	108	;'l'
  2939  395D  3420               	retlw	32	;' '
  2940  395E  3470               	retlw	112	;'p'
  2941  395F  3461               	retlw	97	;'a'
  2942  3960  3472               	retlw	114	;'r'
  2943  3961  3461               	retlw	97	;'a'
  2944  3962  346D               	retlw	109	;'m'
  2945  3963  3465               	retlw	101	;'e'
  2946  3964  3474               	retlw	116	;'t'
  2947  3965  3465               	retlw	101	;'e'
  2948  3966  3472               	retlw	114	;'r'
  2949  3967  3473               	retlw	115	;'s'
  2950  3968  3420               	retlw	32	;' '
  2951  3969  3466               	retlw	102	;'f'
  2952  396A  346F               	retlw	111	;'o'
  2953  396B  3472               	retlw	114	;'r'
  2954  396C  3420               	retlw	32	;' '
  2955  396D  3442               	retlw	66	;'B'
  2956  396E  3451               	retlw	81	;'Q'
  2957  396F  3437               	retlw	55	;'7'
  2958  3970  3436               	retlw	54	;'6'
  2959  3971  3439               	retlw	57	;'9'
  2960  3972  3432               	retlw	50	;'2'
  2961  3973  3430               	retlw	48	;'0'
  2962  3974  3420               	retlw	32	;' '
  2963  3975  3441               	retlw	65	;'A'
  2964  3976  3446               	retlw	70	;'F'
  2965  3977  3445               	retlw	69	;'E'
  2966  3978  3420               	retlw	32	;' '
  2967  3979  3473               	retlw	115	;'s'
  2968  397A  3465               	retlw	101	;'e'
  2969  397B  3474               	retlw	116	;'t'
  2970  397C  3421               	retlw	33	;'!'
  2971  397D  340A               	retlw	10
  2972  397E  340D               	retlw	13
  2973  397F  3400               	retlw	0
  2974                           
  2975                           	psect	stringtext15
  2976  3980                     __pstringtext15:	
  2977  3980                     STR_6:	
  2978  3980  3443               	retlw	67	;'C'
  2979  3981  3475               	retlw	117	;'u'
  2980  3982  3472               	retlw	114	;'r'
  2981  3983  3472               	retlw	114	;'r'
  2982  3984  3465               	retlw	101	;'e'
  2983  3985  346E               	retlw	110	;'n'
  2984  3986  3474               	retlw	116	;'t'
  2985  3987  3420               	retlw	32	;' '
  2986  3988  3473               	retlw	115	;'s'
  2987  3989  3465               	retlw	101	;'e'
  2988  398A  346E               	retlw	110	;'n'
  2989  398B  3473               	retlw	115	;'s'
  2990  398C  3465               	retlw	101	;'e'
  2991  398D  3420               	retlw	32	;' '
  2992  398E  3472               	retlw	114	;'r'
  2993  398F  3465               	retlw	101	;'e'
  2994  3990  3473               	retlw	115	;'s'
  2995  3991  3469               	retlw	105	;'i'
  2996  3992  3473               	retlw	115	;'s'
  2997  3993  3474               	retlw	116	;'t'
  2998  3994  346F               	retlw	111	;'o'
  2999  3995  3472               	retlw	114	;'r'
  3000  3996  3420               	retlw	32	;' '
  3001  3997  3476               	retlw	118	;'v'
  3002  3998  3461               	retlw	97	;'a'
  3003  3999  346C               	retlw	108	;'l'
  3004  399A  3475               	retlw	117	;'u'
  3005  399B  3465               	retlw	101	;'e'
  3006  399C  343A               	retlw	58	;':'
  3007  399D  3420               	retlw	32	;' '
  3008  399E  3425               	retlw	37	;'%'
  3009  399F  342E               	retlw	46	;'.'
  3010  39A0  3434               	retlw	52	;'4'
  3011  39A1  3466               	retlw	102	;'f'
  3012  39A2  3420               	retlw	32	;' '
  3013  39A3  346F               	retlw	111	;'o'
  3014  39A4  3468               	retlw	104	;'h'
  3015  39A5  346D               	retlw	109	;'m'
  3016  39A6  3473               	retlw	115	;'s'
  3017  39A7  340A               	retlw	10
  3018  39A8  340D               	retlw	13
  3019  39A9  3400               	retlw	0
  3020                           
  3021                           	psect	stringtext16
  3022  39AA                     __pstringtext16:	
  3023  39AA                     STR_1:	
  3024  39AA  3441               	retlw	65	;'A'
  3025  39AB  3474               	retlw	116	;'t'
  3026  39AC  3474               	retlw	116	;'t'
  3027  39AD  3465               	retlw	101	;'e'
  3028  39AE  346D               	retlw	109	;'m'
  3029  39AF  3470               	retlw	112	;'p'
  3030  39B0  3474               	retlw	116	;'t'
  3031  39B1  3469               	retlw	105	;'i'
  3032  39B2  346E               	retlw	110	;'n'
  3033  39B3  3467               	retlw	103	;'g'
  3034  39B4  3420               	retlw	32	;' '
  3035  39B5  3474               	retlw	116	;'t'
  3036  39B6  346F               	retlw	111	;'o'
  3037  39B7  3420               	retlw	32	;' '
  3038  39B8  3463               	retlw	99	;'c'
  3039  39B9  346F               	retlw	111	;'o'
  3040  39BA  346D               	retlw	109	;'m'
  3041  39BB  346D               	retlw	109	;'m'
  3042  39BC  3475               	retlw	117	;'u'
  3043  39BD  346E               	retlw	110	;'n'
  3044  39BE  3469               	retlw	105	;'i'
  3045  39BF  3463               	retlw	99	;'c'
  3046  39C0  3461               	retlw	97	;'a'
  3047  39C1  3474               	retlw	116	;'t'
  3048  39C2  3465               	retlw	101	;'e'
  3049  39C3  3420               	retlw	32	;' '
  3050  39C4  3477               	retlw	119	;'w'
  3051  39C5  3469               	retlw	105	;'i'
  3052  39C6  3474               	retlw	116	;'t'
  3053  39C7  3468               	retlw	104	;'h'
  3054  39C8  3420               	retlw	32	;' '
  3055  39C9  3441               	retlw	65	;'A'
  3056  39CA  3446               	retlw	70	;'F'
  3057  39CB  3445               	retlw	69	;'E'
  3058  39CC  342E               	retlw	46	;'.'
  3059  39CD  342E               	retlw	46	;'.'
  3060  39CE  342E               	retlw	46	;'.'
  3061  39CF  340A               	retlw	10
  3062  39D0  340D               	retlw	13
  3063  39D1  3400               	retlw	0
  3064                           
  3065                           	psect	stringtext17
  3066  39D2                     __pstringtext17:	
  3067  39D2                     STR_12:	
  3068  39D2  3450               	retlw	80	;'P'
  3069  39D3  3472               	retlw	114	;'r'
  3070  39D4  3469               	retlw	105	;'i'
  3071  39D5  346E               	retlw	110	;'n'
  3072  39D6  3474               	retlw	116	;'t'
  3073  39D7  3469               	retlw	105	;'i'
  3074  39D8  346E               	retlw	110	;'n'
  3075  39D9  3467               	retlw	103	;'g'
  3076  39DA  3420               	retlw	32	;' '
  3077  39DB  346F               	retlw	111	;'o'
  3078  39DC  3475               	retlw	117	;'u'
  3079  39DD  3474               	retlw	116	;'t'
  3080  39DE  3420               	retlw	32	;' '
  3081  39DF  3441               	retlw	65	;'A'
  3082  39E0  3446               	retlw	70	;'F'
  3083  39E1  3445               	retlw	69	;'E'
  3084  39E2  3420               	retlw	32	;' '
  3085  39E3  3472               	retlw	114	;'r'
  3086  39E4  3465               	retlw	101	;'e'
  3087  39E5  3467               	retlw	103	;'g'
  3088  39E6  3469               	retlw	105	;'i'
  3089  39E7  3473               	retlw	115	;'s'
  3090  39E8  3474               	retlw	116	;'t'
  3091  39E9  3465               	retlw	101	;'e'
  3092  39EA  3472               	retlw	114	;'r'
  3093  39EB  3420               	retlw	32	;' '
  3094  39EC  3476               	retlw	118	;'v'
  3095  39ED  3461               	retlw	97	;'a'
  3096  39EE  346C               	retlw	108	;'l'
  3097  39EF  3475               	retlw	117	;'u'
  3098  39F0  3465               	retlw	101	;'e'
  3099  39F1  3473               	retlw	115	;'s'
  3100  39F2  342E               	retlw	46	;'.'
  3101  39F3  342E               	retlw	46	;'.'
  3102  39F4  342E               	retlw	46	;'.'
  3103  39F5  340A               	retlw	10
  3104  39F6  340D               	retlw	13
  3105  39F7  3400               	retlw	0
  3106                           
  3107                           	psect	stringtext18
  3108  3A18                     __pstringtext18:	
  3109  3A18                     STR_16:	
  3110  3A18  3430               	retlw	48	;'0'
  3111  3A19  3478               	retlw	120	;'x'
  3112  3A1A  3430               	retlw	48	;'0'
  3113  3A1B  3434               	retlw	52	;'4'
  3114  3A1C  3420               	retlw	32	;' '
  3115  3A1D  3453               	retlw	83	;'S'
  3116  3A1E  3459               	retlw	89	;'Y'
  3117  3A1F  3453               	retlw	83	;'S'
  3118  3A20  345F               	retlw	95	;'_'
  3119  3A21  3443               	retlw	67	;'C'
  3120  3A22  3454               	retlw	84	;'T'
  3121  3A23  3452               	retlw	82	;'R'
  3122  3A24  344C               	retlw	76	;'L'
  3123  3A25  3431               	retlw	49	;'1'
  3124  3A26  343A               	retlw	58	;':'
  3125  3A27  3420               	retlw	32	;' '
  3126  3A28  3425               	retlw	37	;'%'
  3127  3A29  3469               	retlw	105	;'i'
  3128  3A2A  3420               	retlw	32	;' '
  3129  3A2B  340A               	retlw	10
  3130  3A2C  340D               	retlw	13
  3131  3A2D  3400               	retlw	0
  3132                           
  3133                           	psect	stringtext19
  3134  3A2E                     __pstringtext19:	
  3135  3A2E                     STR_17:	
  3136  3A2E  3430               	retlw	48	;'0'
  3137  3A2F  3478               	retlw	120	;'x'
  3138  3A30  3430               	retlw	48	;'0'
  3139  3A31  3435               	retlw	53	;'5'
  3140  3A32  3420               	retlw	32	;' '
  3141  3A33  3453               	retlw	83	;'S'
  3142  3A34  3459               	retlw	89	;'Y'
  3143  3A35  3453               	retlw	83	;'S'
  3144  3A36  345F               	retlw	95	;'_'
  3145  3A37  3443               	retlw	67	;'C'
  3146  3A38  3454               	retlw	84	;'T'
  3147  3A39  3452               	retlw	82	;'R'
  3148  3A3A  344C               	retlw	76	;'L'
  3149  3A3B  3432               	retlw	50	;'2'
  3150  3A3C  343A               	retlw	58	;':'
  3151  3A3D  3420               	retlw	32	;' '
  3152  3A3E  3425               	retlw	37	;'%'
  3153  3A3F  3469               	retlw	105	;'i'
  3154  3A40  3420               	retlw	32	;' '
  3155  3A41  340A               	retlw	10
  3156  3A42  340D               	retlw	13
  3157  3A43  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext20
  3160  3A44                     __pstringtext20:	
  3161  3A44                     STR_15:	
  3162  3A44  3430               	retlw	48	;'0'
  3163  3A45  3478               	retlw	120	;'x'
  3164  3A46  3430               	retlw	48	;'0'
  3165  3A47  3431               	retlw	49	;'1'
  3166  3A48  3420               	retlw	32	;' '
  3167  3A49  3443               	retlw	67	;'C'
  3168  3A4A  3445               	retlw	69	;'E'
  3169  3A4B  344C               	retlw	76	;'L'
  3170  3A4C  344C               	retlw	76	;'L'
  3171  3A4D  3442               	retlw	66	;'B'
  3172  3A4E  3441               	retlw	65	;'A'
  3173  3A4F  344C               	retlw	76	;'L'
  3174  3A50  3431               	retlw	49	;'1'
  3175  3A51  343A               	retlw	58	;':'
  3176  3A52  3420               	retlw	32	;' '
  3177  3A53  3425               	retlw	37	;'%'
  3178  3A54  3469               	retlw	105	;'i'
  3179  3A55  3420               	retlw	32	;' '
  3180  3A56  340A               	retlw	10
  3181  3A57  340D               	retlw	13
  3182  3A58  3400               	retlw	0
  3183                           
  3184                           	psect	stringtext21
  3185  3A59                     __pstringtext21:	
  3186  3A59                     STR_18:	
  3187  3A59  3430               	retlw	48	;'0'
  3188  3A5A  3478               	retlw	120	;'x'
  3189  3A5B  3430               	retlw	48	;'0'
  3190  3A5C  3436               	retlw	54	;'6'
  3191  3A5D  3420               	retlw	32	;' '
  3192  3A5E  3450               	retlw	80	;'P'
  3193  3A5F  3452               	retlw	82	;'R'
  3194  3A60  344F               	retlw	79	;'O'
  3195  3A61  3454               	retlw	84	;'T'
  3196  3A62  3445               	retlw	69	;'E'
  3197  3A63  3443               	retlw	67	;'C'
  3198  3A64  3454               	retlw	84	;'T'
  3199  3A65  3431               	retlw	49	;'1'
  3200  3A66  343A               	retlw	58	;':'
  3201  3A67  3420               	retlw	32	;' '
  3202  3A68  3425               	retlw	37	;'%'
  3203  3A69  3469               	retlw	105	;'i'
  3204  3A6A  3420               	retlw	32	;' '
  3205  3A6B  340A               	retlw	10
  3206  3A6C  340D               	retlw	13
  3207  3A6D  3400               	retlw	0
  3208                           
  3209                           	psect	stringtext22
  3210  3A6E                     __pstringtext22:	
  3211  3A6E                     STR_19:	
  3212  3A6E  3430               	retlw	48	;'0'
  3213  3A6F  3478               	retlw	120	;'x'
  3214  3A70  3430               	retlw	48	;'0'
  3215  3A71  3437               	retlw	55	;'7'
  3216  3A72  3420               	retlw	32	;' '
  3217  3A73  3450               	retlw	80	;'P'
  3218  3A74  3452               	retlw	82	;'R'
  3219  3A75  344F               	retlw	79	;'O'
  3220  3A76  3454               	retlw	84	;'T'
  3221  3A77  3445               	retlw	69	;'E'
  3222  3A78  3443               	retlw	67	;'C'
  3223  3A79  3454               	retlw	84	;'T'
  3224  3A7A  3432               	retlw	50	;'2'
  3225  3A7B  343A               	retlw	58	;':'
  3226  3A7C  3420               	retlw	32	;' '
  3227  3A7D  3425               	retlw	37	;'%'
  3228  3A7E  3469               	retlw	105	;'i'
  3229  3A7F  3420               	retlw	32	;' '
  3230  3A80  340A               	retlw	10
  3231  3A81  340D               	retlw	13
  3232  3A82  3400               	retlw	0
  3233                           
  3234                           	psect	stringtext23
  3235  3A83                     __pstringtext23:	
  3236  3A83                     STR_20:	
  3237  3A83  3430               	retlw	48	;'0'
  3238  3A84  3478               	retlw	120	;'x'
  3239  3A85  3430               	retlw	48	;'0'
  3240  3A86  3438               	retlw	56	;'8'
  3241  3A87  3420               	retlw	32	;' '
  3242  3A88  3450               	retlw	80	;'P'
  3243  3A89  3452               	retlw	82	;'R'
  3244  3A8A  344F               	retlw	79	;'O'
  3245  3A8B  3454               	retlw	84	;'T'
  3246  3A8C  3445               	retlw	69	;'E'
  3247  3A8D  3443               	retlw	67	;'C'
  3248  3A8E  3454               	retlw	84	;'T'
  3249  3A8F  3433               	retlw	51	;'3'
  3250  3A90  343A               	retlw	58	;':'
  3251  3A91  3420               	retlw	32	;' '
  3252  3A92  3425               	retlw	37	;'%'
  3253  3A93  3469               	retlw	105	;'i'
  3254  3A94  3420               	retlw	32	;' '
  3255  3A95  340A               	retlw	10
  3256  3A96  340D               	retlw	13
  3257  3A97  3400               	retlw	0
  3258                           
  3259                           	psect	stringtext24
  3260  3A98                     __pstringtext24:	
  3261  3A98                     STR_14:	
  3262  3A98  3430               	retlw	48	;'0'
  3263  3A99  3478               	retlw	120	;'x'
  3264  3A9A  3430               	retlw	48	;'0'
  3265  3A9B  3430               	retlw	48	;'0'
  3266  3A9C  3420               	retlw	32	;' '
  3267  3A9D  3453               	retlw	83	;'S'
  3268  3A9E  3459               	retlw	89	;'Y'
  3269  3A9F  3453               	retlw	83	;'S'
  3270  3AA0  345F               	retlw	95	;'_'
  3271  3AA1  3453               	retlw	83	;'S'
  3272  3AA2  3454               	retlw	84	;'T'
  3273  3AA3  3441               	retlw	65	;'A'
  3274  3AA4  3454               	retlw	84	;'T'
  3275  3AA5  343A               	retlw	58	;':'
  3276  3AA6  3420               	retlw	32	;' '
  3277  3AA7  3425               	retlw	37	;'%'
  3278  3AA8  3469               	retlw	105	;'i'
  3279  3AA9  3420               	retlw	32	;' '
  3280  3AAA  340A               	retlw	10
  3281  3AAB  340D               	retlw	13
  3282  3AAC  3400               	retlw	0
  3283                           
  3284                           	psect	stringtext25
  3285  3AAD                     __pstringtext25:	
  3286  3AAD                     STR_21:	
  3287  3AAD  3430               	retlw	48	;'0'
  3288  3AAE  3478               	retlw	120	;'x'
  3289  3AAF  3430               	retlw	48	;'0'
  3290  3AB0  3439               	retlw	57	;'9'
  3291  3AB1  3420               	retlw	32	;' '
  3292  3AB2  344F               	retlw	79	;'O'
  3293  3AB3  3456               	retlw	86	;'V'
  3294  3AB4  345F               	retlw	95	;'_'
  3295  3AB5  3454               	retlw	84	;'T'
  3296  3AB6  3452               	retlw	82	;'R'
  3297  3AB7  3449               	retlw	73	;'I'
  3298  3AB8  3450               	retlw	80	;'P'
  3299  3AB9  343A               	retlw	58	;':'
  3300  3ABA  3420               	retlw	32	;' '
  3301  3ABB  3425               	retlw	37	;'%'
  3302  3ABC  3469               	retlw	105	;'i'
  3303  3ABD  3420               	retlw	32	;' '
  3304  3ABE  340A               	retlw	10
  3305  3ABF  340D               	retlw	13
  3306  3AC0  3400               	retlw	0
  3307                           
  3308                           	psect	stringtext26
  3309  3AC1                     __pstringtext26:	
  3310  3AC1                     STR_22:	
  3311  3AC1  3430               	retlw	48	;'0'
  3312  3AC2  3478               	retlw	120	;'x'
  3313  3AC3  3430               	retlw	48	;'0'
  3314  3AC4  3441               	retlw	65	;'A'
  3315  3AC5  3420               	retlw	32	;' '
  3316  3AC6  3455               	retlw	85	;'U'
  3317  3AC7  3456               	retlw	86	;'V'
  3318  3AC8  345F               	retlw	95	;'_'
  3319  3AC9  3454               	retlw	84	;'T'
  3320  3ACA  3452               	retlw	82	;'R'
  3321  3ACB  3449               	retlw	73	;'I'
  3322  3ACC  3450               	retlw	80	;'P'
  3323  3ACD  343A               	retlw	58	;':'
  3324  3ACE  3420               	retlw	32	;' '
  3325  3ACF  3425               	retlw	37	;'%'
  3326  3AD0  3469               	retlw	105	;'i'
  3327  3AD1  3420               	retlw	32	;' '
  3328  3AD2  340A               	retlw	10
  3329  3AD3  340D               	retlw	13
  3330  3AD4  3400               	retlw	0
  3331                           
  3332                           	psect	stringtext27
  3333  3AD5                     __pstringtext27:	
  3334  3AD5                     STR_23:	
  3335  3AD5  3430               	retlw	48	;'0'
  3336  3AD6  3478               	retlw	120	;'x'
  3337  3AD7  3430               	retlw	48	;'0'
  3338  3AD8  3442               	retlw	66	;'B'
  3339  3AD9  3420               	retlw	32	;' '
  3340  3ADA  3443               	retlw	67	;'C'
  3341  3ADB  3443               	retlw	67	;'C'
  3342  3ADC  345F               	retlw	95	;'_'
  3343  3ADD  3443               	retlw	67	;'C'
  3344  3ADE  3446               	retlw	70	;'F'
  3345  3ADF  3447               	retlw	71	;'G'
  3346  3AE0  343A               	retlw	58	;':'
  3347  3AE1  3420               	retlw	32	;' '
  3348  3AE2  3425               	retlw	37	;'%'
  3349  3AE3  3469               	retlw	105	;'i'
  3350  3AE4  3420               	retlw	32	;' '
  3351  3AE5  340A               	retlw	10
  3352  3AE6  340D               	retlw	13
  3353  3AE7  3400               	retlw	0
  3354                           
  3355                           	psect	stringtext28
  3356  3AE8                     __pstringtext28:	
  3357  3AE8                     STR_24:	
  3358  3AE8  3430               	retlw	48	;'0'
  3359  3AE9  3478               	retlw	120	;'x'
  3360  3AEA  3433               	retlw	51	;'3'
  3361  3AEB  3432               	retlw	50	;'2'
  3362  3AEC  3420               	retlw	32	;' '
  3363  3AED  3443               	retlw	67	;'C'
  3364  3AEE  3443               	retlw	67	;'C'
  3365  3AEF  345F               	retlw	95	;'_'
  3366  3AF0  3448               	retlw	72	;'H'
  3367  3AF1  3449               	retlw	73	;'I'
  3368  3AF2  343A               	retlw	58	;':'
  3369  3AF3  3420               	retlw	32	;' '
  3370  3AF4  3425               	retlw	37	;'%'
  3371  3AF5  3469               	retlw	105	;'i'
  3372  3AF6  3420               	retlw	32	;' '
  3373  3AF7  340A               	retlw	10
  3374  3AF8  340D               	retlw	13
  3375  3AF9  3400               	retlw	0
  3376                           
  3377                           	psect	stringtext29
  3378  3AFA                     __pstringtext29:	
  3379  3AFA                     STR_25:	
  3380  3AFA  3430               	retlw	48	;'0'
  3381  3AFB  3478               	retlw	120	;'x'
  3382  3AFC  3433               	retlw	51	;'3'
  3383  3AFD  3433               	retlw	51	;'3'
  3384  3AFE  3420               	retlw	32	;' '
  3385  3AFF  3443               	retlw	67	;'C'
  3386  3B00  3443               	retlw	67	;'C'
  3387  3B01  345F               	retlw	95	;'_'
  3388  3B02  344C               	retlw	76	;'L'
  3389  3B03  344F               	retlw	79	;'O'
  3390  3B04  343A               	retlw	58	;':'
  3391  3B05  3420               	retlw	32	;' '
  3392  3B06  3425               	retlw	37	;'%'
  3393  3B07  3469               	retlw	105	;'i'
  3394  3B08  3420               	retlw	32	;' '
  3395  3B09  340A               	retlw	10
  3396  3B0A  340D               	retlw	13
  3397  3B0B  3400               	retlw	0
  3398                           
  3399                           	psect	stringtext30
  3400  3B44                     __pstringtext30:	
  3401  3B44                     STR_27:	
  3402  3B44  3449               	retlw	73	;'I'
  3403  3B45  344E               	retlw	78	;'N'
  3404  3B46  3446               	retlw	70	;'F'
  3405  3B47  3400               	retlw	0
  3406                           
  3407                           	psect	stringtext31
  3408  3B48                     __pstringtext31:	
  3409  3B48                     STR_31:	
  3410  3B48  344E               	retlw	78	;'N'
  3411  3B49  3441               	retlw	65	;'A'
  3412  3B4A  344E               	retlw	78	;'N'
  3413  3B4B  3400               	retlw	0
  3414                           
  3415                           	psect	stringtext32
  3416  3B4C                     __pstringtext32:	
  3417  3B4C                     STR_140:	
  3418  3B4C  3468               	retlw	104	;'h'
  3419  3B4D  3468               	retlw	104	;'h'
  3420  3B4E  3458               	retlw	88	;'X'
  3421  3B4F  3400               	retlw	0
  3422                           
  3423                           	psect	stringtext33
  3424  3B50                     __pstringtext33:	
  3425  3B50                     STR_35:	
  3426  3B50  3468               	retlw	104	;'h'
  3427  3B51  3468               	retlw	104	;'h'
  3428  3B52  3464               	retlw	100	;'d'
  3429  3B53  3400               	retlw	0
  3430                           
  3431                           	psect	stringtext34
  3432  3B54                     __pstringtext34:	
  3433  3B54                     STR_28:	
  3434  3B54  3469               	retlw	105	;'i'
  3435  3B55  346E               	retlw	110	;'n'
  3436  3B56  3466               	retlw	102	;'f'
  3437  3B57  3400               	retlw	0
  3438                           
  3439                           	psect	stringtext35
  3440  3B58                     __pstringtext35:	
  3441  3B58                     STR_39:	
  3442  3B58  3468               	retlw	104	;'h'
  3443  3B59  3468               	retlw	104	;'h'
  3444  3B5A  3469               	retlw	105	;'i'
  3445  3B5B  3400               	retlw	0
  3446                           
  3447                           	psect	stringtext36
  3448  3B5C                     __pstringtext36:	
  3449  3B5C                     STR_32:	
  3450  3B5C  346E               	retlw	110	;'n'
  3451  3B5D  3461               	retlw	97	;'a'
  3452  3B5E  346E               	retlw	110	;'n'
  3453  3B5F  3400               	retlw	0
  3454                           
  3455                           	psect	stringtext37
  3456  3B60                     __pstringtext37:	
  3457  3B60                     STR_96:	
  3458  3B60  3468               	retlw	104	;'h'
  3459  3B61  3468               	retlw	104	;'h'
  3460  3B62  346E               	retlw	110	;'n'
  3461  3B63  3400               	retlw	0
  3462                           
  3463                           	psect	stringtext38
  3464  3B64                     __pstringtext38:	
  3465  3B64                     STR_76:	
  3466  3B64  3468               	retlw	104	;'h'
  3467  3B65  3468               	retlw	104	;'h'
  3468  3B66  346F               	retlw	111	;'o'
  3469  3B67  3400               	retlw	0
  3470                           
  3471                           	psect	stringtext39
  3472  3B68                     __pstringtext39:	
  3473  3B68                     STR_116:	
  3474  3B68  3468               	retlw	104	;'h'
  3475  3B69  3468               	retlw	104	;'h'
  3476  3B6A  3475               	retlw	117	;'u'
  3477  3B6B  3400               	retlw	0
  3478                           
  3479                           	psect	stringtext40
  3480  3B6C                     __pstringtext40:	
  3481  3B6C                     STR_136:	
  3482  3B6C  3468               	retlw	104	;'h'
  3483  3B6D  3468               	retlw	104	;'h'
  3484  3B6E  3478               	retlw	120	;'x'
  3485  3B6F  3400               	retlw	0
  3486                           
  3487                           	psect	stringtext41
  3488  3B70                     __pstringtext41:	
  3489  3B70                     STR_158:	
  3490  3B70  346C               	retlw	108	;'l'
  3491  3B71  3458               	retlw	88	;'X'
  3492  3B72  3400               	retlw	0
  3493                           
  3494                           	psect	stringtext42
  3495  3B73                     __pstringtext42:	
  3496  3B73                     STR_167:	
  3497  3B73  347A               	retlw	122	;'z'
  3498  3B74  3458               	retlw	88	;'X'
  3499  3B75  3400               	retlw	0
  3500                           
  3501                           	psect	stringtext43
  3502  3B76                     __pstringtext43:	
  3503  3B76                     STR_53:	
  3504  3B76  346C               	retlw	108	;'l'
  3505  3B77  3464               	retlw	100	;'d'
  3506  3B78  3400               	retlw	0
  3507                           
  3508                           	psect	stringtext44
  3509  3B79                     __pstringtext44:	
  3510  3B79                     STR_62:	
  3511  3B79  347A               	retlw	122	;'z'
  3512  3B7A  3464               	retlw	100	;'d'
  3513  3B7B  3400               	retlw	0
  3514                           
  3515                           	psect	stringtext45
  3516  3B7C                     __pstringtext45:	
  3517  3B7C                     STR_71:	
  3518  3B7C  346C               	retlw	108	;'l'
  3519  3B7D  3466               	retlw	102	;'f'
  3520  3B7E  3400               	retlw	0
  3521                           
  3522                           	psect	stringtext46
  3523  3B7F                     __pstringtext46:	
  3524  3B7F                     STR_57:	
  3525  3B7F  346C               	retlw	108	;'l'
  3526  3B80  3469               	retlw	105	;'i'
  3527  3B81  3400               	retlw	0
  3528                           
  3529                           	psect	stringtext47
  3530  3B82                     __pstringtext47:	
  3531  3B82                     STR_66:	
  3532  3B82  347A               	retlw	122	;'z'
  3533  3B83  3469               	retlw	105	;'i'
  3534  3B84  3400               	retlw	0
  3535                           
  3536                           	psect	stringtext48
  3537  3B85                     __pstringtext48:	
  3538  3B85                     STR_106:	
  3539  3B85  346C               	retlw	108	;'l'
  3540  3B86  346E               	retlw	110	;'n'
  3541  3B87  3400               	retlw	0
  3542                           
  3543                           	psect	stringtext49
  3544  3B88                     __pstringtext49:	
  3545  3B88                     STR_111:	
  3546  3B88  347A               	retlw	122	;'z'
  3547  3B89  346E               	retlw	110	;'n'
  3548  3B8A  3400               	retlw	0
  3549                           
  3550                           	psect	stringtext50
  3551  3B8B                     __pstringtext50:	
  3552  3B8B                     STR_86:	
  3553  3B8B  346C               	retlw	108	;'l'
  3554  3B8C  346F               	retlw	111	;'o'
  3555  3B8D  3400               	retlw	0
  3556                           
  3557                           	psect	stringtext51
  3558  3B8E                     __pstringtext51:	
  3559  3B8E                     STR_91:	
  3560  3B8E  347A               	retlw	122	;'z'
  3561  3B8F  346F               	retlw	111	;'o'
  3562  3B90  3400               	retlw	0
  3563                           
  3564                           	psect	stringtext52
  3565  3B91                     __pstringtext52:	
  3566  3B91                     STR_126:	
  3567  3B91  346C               	retlw	108	;'l'
  3568  3B92  3475               	retlw	117	;'u'
  3569  3B93  3400               	retlw	0
  3570                           
  3571                           	psect	stringtext53
  3572  3B94                     __pstringtext53:	
  3573  3B94                     STR_131:	
  3574  3B94  347A               	retlw	122	;'z'
  3575  3B95  3475               	retlw	117	;'u'
  3576  3B96  3400               	retlw	0
  3577                           
  3578                           	psect	stringtext54
  3579  3B97                     __pstringtext54:	
  3580  3B97                     STR_154:	
  3581  3B97  346C               	retlw	108	;'l'
  3582  3B98  3478               	retlw	120	;'x'
  3583  3B99  3400               	retlw	0
  3584                           
  3585                           	psect	stringtext55
  3586  3B9A                     __pstringtext55:	
  3587  3B9A                     STR_163:	
  3588  3B9A  347A               	retlw	122	;'z'
  3589  3B9B  3478               	retlw	120	;'x'
  3590  3B9C  3400               	retlw	0
  3591                           
  3592                           	psect	stringtext56
  3593  0000                     __pstringtext56:	
  3594  3A56                     
  3595                           ; #config settings
  3596  0000                     
  3597                           	psect	cinit
  3598  0020                     start_initialization:	
  3599  0020                     __initialization:		;BIGRAM
  3600                           
  3601                           ; Initialize objects allocated to BANK4
  3602  0020  301A               	movlw	low __pidataBANK4
  3603  0021  0084               	movwf	4
  3604  0022  30BE               	movlw	(high __pidataBANK4)| (0+128)
  3605  0023  0085               	movwf	5
  3606  0024  0024               	movlb	4	; select bank4
  3607  0025  0012               	moviw fsr0++
  3608  0026  00B6               	movwf	__pdataBANK4& (0+127)
  3609  0027  0012               	moviw fsr0++
  3610  0028  00B7               	movwf	(__pdataBANK4+1)& (0+127)
  3611  0029  0012               	moviw fsr0++
  3612  002A  00B8               	movwf	(__pdataBANK4+2)& (0+127)
  3613  002B  0012               	moviw fsr0++
  3614  002C  00B9               	movwf	(__pdataBANK4+3)& (0+127)
  3615  002D  0012               	moviw fsr0++
  3616  002E  00BA               	movwf	(__pdataBANK4+4)& (0+127)
  3617  002F  0012               	moviw fsr0++
  3618  0030  00BB               	movwf	(__pdataBANK4+5)& (0+127)
  3619  0031  0012               	moviw fsr0++
  3620  0032  00BC               	movwf	(__pdataBANK4+6)& (0+127)
  3621                           
  3622                           ; Clear objects allocated to BIGRAM
  3623  0033  3071               	movlw	low (0+10097)
  3624  0034  0084               	movwf	4
  3625  0035  3027               	movlw	high (0+10097)
  3626  0036  0085               	movwf	5
  3627  0037  307F               	movlw	127
  3628  0038  00FE               	movwf	btemp
  3629  0039  3000               	movlw	0
  3630  003A  00FF               	movwf	btemp+1
  3631  003B  3188  2000  3180   	fcall	clear_ram0
  3632                           
  3633                           ; Clear objects allocated to COMMON
  3634  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3635                           
  3636                           ; Clear objects allocated to BANK3
  3637  003F  30A0               	movlw	low __pbssBANK3
  3638  0040  0084               	movwf	4
  3639  0041  3001               	movlw	high __pbssBANK3
  3640  0042  0085               	movwf	5
  3641  0043  3031               	movlw	49
  3642  0044  00FE               	movwf	btemp
  3643  0045  3000               	movlw	0
  3644  0046  00FF               	movwf	btemp+1
  3645  0047  3188  2000  3180   	fcall	clear_ram0
  3646                           
  3647                           ; Clear objects allocated to BANK4
  3648  004A  3020               	movlw	low __pbssBANK4
  3649  004B  0084               	movwf	4
  3650  004C  3002               	movlw	high __pbssBANK4
  3651  004D  0085               	movwf	5
  3652  004E  3016               	movlw	22
  3653  004F  00FE               	movwf	btemp
  3654  0050  3000               	movlw	0
  3655  0051  00FF               	movwf	btemp+1
  3656  0052  3188  2000  3180   	fcall	clear_ram0
  3657                           
  3658                           ; Clear objects allocated to BANK5
  3659  0055  30A0               	movlw	low __pbssBANK5
  3660  0056  0084               	movwf	4
  3661  0057  3002               	movlw	high __pbssBANK5
  3662  0058  0085               	movwf	5
  3663  0059  3050               	movlw	80
  3664  005A  00FE               	movwf	btemp
  3665  005B  3000               	movlw	0
  3666  005C  00FF               	movwf	btemp+1
  3667  005D  3188  2000         	fcall	clear_ram0
  3668  005F                     end_of_initialization:	
  3669                           ;End of C runtime variable initialization code
  3670                           
  3671  005F                     __end_of__initialization:	
  3672  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3673  0060  0020               	movlb	0
  3674  0061  31B1  2911         	ljmp	_main	;jump to C main() function
  3675                           
  3676                           	psect	bssCOMMON
  3677  007C                     __pbssCOMMON:	
  3678  007C                     _toggleColor:	
  3679  007C                     	ds	1
  3680                           
  3681                           	psect	bssBANK3
  3682  01A0                     __pbssBANK3:	
  3683  01A0                     ___fpclassifyf@F463:	
  3684  01A0                     	ds	4
  3685  01A4                     BQ76920@shuntResistorValue_mOhm:	
  3686  01A4                     	ds	4
  3687  01A8                     _batVoltage:	
  3688  01A8                     	ds	4
  3689  01AC                     _errno:	
  3690  01AC                     	ds	2
  3691  01AE                     _nout:	
  3692  01AE                     	ds	2
  3693  01B0                     _width:	
  3694  01B0                     	ds	2
  3695  01B2                     _prec:	
  3696  01B2                     	ds	2
  3697  01B4                     _flags:	
  3698  01B4                     	ds	2
  3699  01B6                     _temperatures:	
  3700  01B6                     	ds	2
  3701  01B8                     _minCellVoltage:	
  3702  01B8                     	ds	2
  3703  01BA                     _maxCellVoltage:	
  3704  01BA                     	ds	2
  3705  01BC                     _maxCellTempDischarge:	
  3706  01BC                     	ds	2
  3707  01BE                     _maxCellTempCharge:	
  3708  01BE                     	ds	2
  3709  01C0                     _minCellTempDischarge:	
  3710  01C0                     	ds	2
  3711  01C2                     _minCellTempCharge:	
  3712  01C2                     	ds	2
  3713  01C4                     _adcOffset:	
  3714  01C4                     	ds	2
  3715  01C6                     BQ76920@protect3:	
  3716  01C6                     	ds	1
  3717  01C7                     BQ76920@protect2:	
  3718  01C7                     	ds	1
  3719  01C8                     BQ76920@protect1:	
  3720  01C8                     	ds	1
  3721  01C9                     myIsr@count:	
  3722  01C9                     	ds	1
  3723  01CA                     _tmr1_flag:	
  3724  01CA                     	ds	1
  3725  01CB                     _currState:	
  3726  01CB                     	ds	1
  3727  01CC                     _protect3:	
  3728  01CC                     	ds	1
  3729  01CD                     _protect2:	
  3730  01CD                     	ds	1
  3731  01CE                     _protect1:	
  3732  01CE                     	ds	1
  3733  01CF                     _adcGain:	
  3734  01CF                     	ds	2
  3735                           
  3736                           	psect	bssBANK4
  3737  0220                     __pbssBANK4:	
  3738  0220                     _cellVoltages:	
  3739  0220                     	ds	10
  3740  022A                     floorf@F524:	
  3741  022A                     	ds	4
  3742  022E                     _shuntResistorValue_mOhm:	
  3743  022E                     	ds	4
  3744  0232                     _batCurrent:	
  3745  0232                     	ds	4
  3746                           
  3747                           	psect	dataBANK4
  3748  0236                     __pdataBANK4:	
  3749  0236                     stoa@F1174:	
  3750  0236                     	ds	7
  3751                           
  3752                           	psect	bssBANK5
  3753  02A0                     __pbssBANK5:	
  3754  02A0                     _dbuf:	
  3755  02A0                     	ds	80
  3756                           
  3757                           	psect	clrtext
  3758  0800                     clear_ram0:	
  3759                           ;	Called with FSR0 containing the base address, and
  3760                           ;	btemp/btemp+1 has the size to clear
  3761                           
  3762  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  3763  0801                     clrloop0:	
  3764  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  3765  0802  3101               	addfsr 0,1
  3766  0803  3001               	movlw	1
  3767  0804  02FE               	subwf	126,f
  3768  0805  3000               	movlw	0
  3769  0806  3BFF               	subwfb	127,f
  3770  0807  087F               	movf	127,w
  3771  0808  047E               	iorwf	126,w
  3772  0809  1903               	btfsc	3,2
  3773  080A  3400               	retlw	0	;all done for this memory range, return
  3774  080B  2801               	goto	clrloop0	;have we reached the end yet?
  3775                           
  3776                           	psect	cstackBANK3
  3777  01D1                     __pcstackBANK3:	
  3778  01D1                     ?_snprintf:	
  3779  01D1                     snprintf@s:	
  3780                           ; 2 bytes @ 0x0
  3781                           
  3782                           
  3783                           ; 2 bytes @ 0x0
  3784  01D1                     	ds	2
  3785  01D3                     snprintf@n:	
  3786                           
  3787                           ; 2 bytes @ 0x2
  3788  01D3                     	ds	2
  3789  01D5                     snprintf@fmt:	
  3790                           
  3791                           ; 2 bytes @ 0x4
  3792  01D5                     	ds	20
  3793  01E9                     ??_main:	
  3794                           
  3795                           ; 1 bytes @ 0x18
  3796  01E9                     	ds	2
  3797                           
  3798                           	psect	cstackBANK2
  3799  0120                     __pcstackBANK2:	
  3800  0120                     ??_vfpfcnvrt:	
  3801                           
  3802                           ; 1 bytes @ 0x0
  3803  0120                     	ds	12
  3804  012C                     vfpfcnvrt@cp:	
  3805                           
  3806                           ; 1 bytes @ 0xC
  3807  012C                     	ds	1
  3808  012D                     vfpfcnvrt@done:	
  3809                           
  3810                           ; 2 bytes @ 0xD
  3811  012D                     	ds	2
  3812  012F                     _vfpfcnvrt$1316:	
  3813                           
  3814                           ; 2 bytes @ 0xF
  3815  012F                     	ds	2
  3816  0131                     _vfpfcnvrt$1317:	
  3817                           
  3818                           ; 2 bytes @ 0x11
  3819  0131                     	ds	2
  3820  0133                     _vfpfcnvrt$1343:	
  3821                           
  3822                           ; 2 bytes @ 0x13
  3823  0133                     	ds	2
  3824  0135                     vfpfcnvrt@ct:	
  3825                           
  3826                           ; 3 bytes @ 0x15
  3827  0135                     	ds	3
  3828  0138                     vfpfcnvrt@f:	
  3829                           
  3830                           ; 4 bytes @ 0x18
  3831  0138                     	ds	4
  3832  013C                     vfpfcnvrt@ll:	
  3833                           
  3834                           ; 8 bytes @ 0x1C
  3835  013C                     	ds	8
  3836  0144                     vfpfcnvrt@vp:	
  3837                           
  3838                           ; 1 bytes @ 0x24
  3839  0144                     	ds	1
  3840  0145                     vfpfcnvrt@c:	
  3841                           
  3842                           ; 1 bytes @ 0x25
  3843  0145                     	ds	1
  3844  0146                     vfpfcnvrt@llu:	
  3845                           
  3846                           ; 8 bytes @ 0x26
  3847  0146                     	ds	8
  3848  014E                     ?_vfprintf:	
  3849  014E                     vfprintf@fp:	
  3850                           ; 2 bytes @ 0x2E
  3851                           
  3852                           
  3853                           ; 2 bytes @ 0x2E
  3854  014E                     	ds	2
  3855  0150                     vfprintf@fmt:	
  3856                           
  3857                           ; 2 bytes @ 0x30
  3858  0150                     	ds	2
  3859  0152                     vfprintf@ap:	
  3860                           
  3861                           ; 1 bytes @ 0x32
  3862  0152                     	ds	1
  3863  0153                     vfprintf@cfmt:	
  3864                           
  3865                           ; 2 bytes @ 0x33
  3866  0153                     	ds	2
  3867  0155                     ?_vsnprintf:	
  3868  0155                     vsnprintf@s:	
  3869                           ; 2 bytes @ 0x35
  3870                           
  3871                           
  3872                           ; 2 bytes @ 0x35
  3873  0155                     	ds	2
  3874  0157                     vsnprintf@n:	
  3875                           
  3876                           ; 2 bytes @ 0x37
  3877  0157                     	ds	2
  3878  0159                     vsnprintf@fmt:	
  3879                           
  3880                           ; 2 bytes @ 0x39
  3881  0159                     	ds	2
  3882  015B                     vsnprintf@ap:	
  3883                           
  3884                           ; 1 bytes @ 0x3B
  3885  015B                     	ds	1
  3886  015C                     ??_vsnprintf:	
  3887                           
  3888                           ; 1 bytes @ 0x3C
  3889  015C                     	ds	2
  3890  015E                     _vsnprintf$1945:	
  3891                           
  3892                           ; 2 bytes @ 0x3E
  3893  015E                     	ds	2
  3894  0160                     vsnprintf@cnt:	
  3895                           
  3896                           ; 2 bytes @ 0x40
  3897  0160                     	ds	2
  3898  0162                     vsnprintf@f:	
  3899                           
  3900                           ; 6 bytes @ 0x42
  3901  0162                     	ds	6
  3902  0168                     ??_snprintf:	
  3903                           
  3904                           ; 1 bytes @ 0x48
  3905  0168                     	ds	3
  3906  016B                     snprintf@ap:	
  3907                           
  3908                           ; 1 bytes @ 0x4B
  3909  016B                     	ds	1
  3910  016C                     ??_printotAFERegisters:	
  3911                           
  3912                           ; 1 bytes @ 0x4C
  3913  016C                     	ds	1
  3914  016D                     ??_statemachine:	
  3915                           
  3916                           ; 1 bytes @ 0x4D
  3917  016D                     	ds	2
  3918  016F                     statemachine@success:	
  3919                           
  3920                           ; 1 bytes @ 0x4F
  3921  016F                     	ds	1
  3922                           
  3923                           	psect	cstackBANK1
  3924  00A0                     __pcstackBANK1:	
  3925  00A0                     ?___fltol:	
  3926  00A0                     ?___flsub:	
  3927                           ; 4 bytes @ 0x0
  3928                           
  3929  00A0                     setShortCircuitProtection@scaler:	
  3930                           ; 4 bytes @ 0x0
  3931                           
  3932  00A0                     setOverCurrentDischargeProtection@scaler:	
  3933                           ; 4 bytes @ 0x0
  3934                           
  3935  00A0                     ___fltol@f1:	
  3936                           ; 4 bytes @ 0x0
  3937                           
  3938  00A0                     ___flsub@a:	
  3939                           ; 4 bytes @ 0x0
  3940                           
  3941                           
  3942                           ; 4 bytes @ 0x0
  3943  00A0                     	ds	4
  3944  00A4                     ??___fltol:	
  3945  00A4                     ___flsub@b:	
  3946                           ; 1 bytes @ 0x4
  3947                           
  3948  00A4                     _setShortCircuitProtection$2138:	
  3949                           ; 4 bytes @ 0x4
  3950                           
  3951  00A4                     _setOverCurrentDischargeProtection$2139:	
  3952                           ; 4 bytes @ 0x4
  3953                           
  3954                           
  3955                           ; 4 bytes @ 0x4
  3956  00A4                     	ds	4
  3957  00A8                     setShortCircuitProtection@i:	
  3958  00A8                     setOverCurrentDischargeProtection@i:	
  3959                           ; 2 bytes @ 0x8
  3960                           
  3961                           
  3962                           ; 2 bytes @ 0x8
  3963  00A8                     	ds	1
  3964  00A9                     ??_updateVoltages:	
  3965  00A9                     ?_efgtoa:	
  3966                           ; 1 bytes @ 0x9
  3967                           
  3968  00A9                     ?_AFE_getSetShortCircuitCurrent:	
  3969                           ; 2 bytes @ 0x9
  3970                           
  3971  00A9                     ?_AFE_getOverCurrentDischargeCurrent:	
  3972                           ; 4 bytes @ 0x9
  3973                           
  3974  00A9                     efgtoa@fp:	
  3975                           ; 4 bytes @ 0x9
  3976                           
  3977                           
  3978                           ; 2 bytes @ 0x9
  3979  00A9                     	ds	1
  3980  00AA                     setShortCircuitProtection@i_980:	
  3981  00AA                     setOverCurrentDischargeProtection@i_989:	
  3982                           ; 2 bytes @ 0xA
  3983                           
  3984                           
  3985                           ; 2 bytes @ 0xA
  3986  00AA                     	ds	1
  3987  00AB                     efgtoa@f:	
  3988                           
  3989                           ; 4 bytes @ 0xB
  3990  00AB                     	ds	2
  3991  00AD                     ??_AFE_getSetShortCircuitCurrent:	
  3992  00AD                     ??_AFE_getOverCurrentDischargeCurrent:	
  3993                           ; 1 bytes @ 0xD
  3994                           
  3995                           
  3996                           ; 1 bytes @ 0xD
  3997  00AD                     	ds	2
  3998  00AF                     efgtoa@c:	
  3999                           
  4000                           ; 1 bytes @ 0xF
  4001  00AF                     	ds	1
  4002  00B0                     ??_efgtoa:	
  4003                           
  4004                           ; 1 bytes @ 0x10
  4005  00B0                     	ds	1
  4006  00B1                     _updateVoltages$2140:	
  4007                           
  4008                           ; 4 bytes @ 0x11
  4009  00B1                     	ds	3
  4010  00B4                     efgtoa@ou:	
  4011                           
  4012                           ; 4 bytes @ 0x14
  4013  00B4                     	ds	1
  4014  00B5                     updateVoltages@adcVal:	
  4015                           
  4016                           ; 4 bytes @ 0x15
  4017  00B5                     	ds	3
  4018  00B8                     _efgtoa$1254:	
  4019                           
  4020                           ; 2 bytes @ 0x18
  4021  00B8                     	ds	1
  4022  00B9                     updateVoltages@i:	
  4023                           
  4024                           ; 2 bytes @ 0x19
  4025  00B9                     	ds	1
  4026  00BA                     _efgtoa$1255:	
  4027                           
  4028                           ; 2 bytes @ 0x1A
  4029  00BA                     	ds	2
  4030  00BC                     _efgtoa$1259:	
  4031                           
  4032                           ; 2 bytes @ 0x1C
  4033  00BC                     	ds	2
  4034  00BE                     _efgtoa$1263:	
  4035                           
  4036                           ; 2 bytes @ 0x1E
  4037  00BE                     	ds	2
  4038  00C0                     _efgtoa$1264:	
  4039                           
  4040                           ; 2 bytes @ 0x20
  4041  00C0                     	ds	2
  4042  00C2                     _efgtoa$1265:	
  4043                           
  4044                           ; 2 bytes @ 0x22
  4045  00C2                     	ds	2
  4046  00C4                     efgtoa@t:	
  4047                           
  4048                           ; 2 bytes @ 0x24
  4049  00C4                     	ds	2
  4050  00C6                     efgtoa@pp:	
  4051                           
  4052                           ; 2 bytes @ 0x26
  4053  00C6                     	ds	2
  4054  00C8                     efgtoa@m:	
  4055                           
  4056                           ; 2 bytes @ 0x28
  4057  00C8                     	ds	2
  4058  00CA                     efgtoa@ne:	
  4059                           
  4060                           ; 2 bytes @ 0x2A
  4061  00CA                     	ds	2
  4062  00CC                     efgtoa@d:	
  4063                           
  4064                           ; 2 bytes @ 0x2C
  4065  00CC                     	ds	2
  4066  00CE                     efgtoa@sign:	
  4067                           
  4068                           ; 2 bytes @ 0x2E
  4069  00CE                     	ds	2
  4070  00D0                     efgtoa@p:	
  4071                           
  4072                           ; 2 bytes @ 0x30
  4073  00D0                     	ds	2
  4074  00D2                     efgtoa@nmode:	
  4075                           
  4076                           ; 1 bytes @ 0x32
  4077  00D2                     	ds	1
  4078  00D3                     efgtoa@w:	
  4079                           
  4080                           ; 2 bytes @ 0x33
  4081  00D3                     	ds	2
  4082  00D5                     efgtoa@mode:	
  4083                           
  4084                           ; 1 bytes @ 0x35
  4085  00D5                     	ds	1
  4086  00D6                     efgtoa@h:	
  4087                           
  4088                           ; 4 bytes @ 0x36
  4089  00D6                     	ds	4
  4090  00DA                     efgtoa@l:	
  4091                           
  4092                           ; 4 bytes @ 0x3A
  4093  00DA                     	ds	4
  4094  00DE                     efgtoa@i:	
  4095                           
  4096                           ; 2 bytes @ 0x3E
  4097  00DE                     	ds	2
  4098  00E0                     efgtoa@g:	
  4099                           
  4100                           ; 4 bytes @ 0x40
  4101  00E0                     	ds	4
  4102  00E4                     efgtoa@e:	
  4103                           
  4104                           ; 2 bytes @ 0x44
  4105  00E4                     	ds	2
  4106  00E6                     efgtoa@n:	
  4107                           
  4108                           ; 2 bytes @ 0x46
  4109  00E6                     	ds	2
  4110  00E8                     efgtoa@u:	
  4111                           
  4112                           ; 4 bytes @ 0x48
  4113  00E8                     	ds	4
  4114  00EC                     ?_vfpfcnvrt:	
  4115  00EC                     vfpfcnvrt@fp:	
  4116                           ; 2 bytes @ 0x4C
  4117                           
  4118                           
  4119                           ; 2 bytes @ 0x4C
  4120  00EC                     	ds	2
  4121  00EE                     vfpfcnvrt@fmt:	
  4122                           
  4123                           ; 1 bytes @ 0x4E
  4124  00EE                     	ds	1
  4125  00EF                     vfpfcnvrt@ap:	
  4126                           
  4127                           ; 1 bytes @ 0x4F
  4128  00EF                     	ds	1
  4129                           
  4130                           	psect	cstackCOMMON
  4131  0070                     __pcstackCOMMON:	
  4132  0070                     ?_initClock:	
  4133  0070                     ?_init_GPIO:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0070                     ?_initWDT:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0070                     ?_init_I2C:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142  0070                     ?_init_TMR1:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0070                     ?_init_RGB:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0070                     ?_watchdog_timeout_shutdown:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0070                     ?_statemachine:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0070                     ?_RGB_AWAIT_AFE_CONN:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157  0070                     ?_init_AFE:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160  0070                     ?_printotAFERegisters:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0070                     ?_AFE_UPDATE:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0070                     ?_printcellParameters:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0070                     ?_internal_16:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0070                     ?_updateCurrent:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0070                     ?_updateVoltages:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0070                     ?_shutdown_BMS:	
  4179                           ; 1 bytes @ 0x0
  4180                           
  4181  0070                     ?_putch:	
  4182                           ; 1 bytes @ 0x0
  4183                           
  4184  0070                     ?_myIsr:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187  0070                     ??_myIsr:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190  0070                     ?_main:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193  0070                     ?_EUSART_Write:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196  0070                     ?_send_I2C_startBit:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0070                     ?_send_I2C_stopBit:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202  0070                     ?_send_I2C_ACK:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205  0070                     ?_send_I2C_NACK:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208  0070                     putch@c:	
  4209                           ; 1 bytes @ 0x0
  4210                           
  4211                           
  4212                           ; 1 bytes @ 0x0
  4213  0070                     	ds	1
  4214  0071                     ?___fleq:	
  4215  0071                     ??_initClock:	
  4216                           ; 1 bit 
  4217                           
  4218  0071                     ??_init_GPIO:	
  4219                           ; 1 bytes @ 0x1
  4220                           
  4221  0071                     ??_initWDT:	
  4222                           ; 1 bytes @ 0x1
  4223                           
  4224  0071                     ??_init_I2C:	
  4225                           ; 1 bytes @ 0x1
  4226                           
  4227  0071                     ??_init_TMR1:	
  4228                           ; 1 bytes @ 0x1
  4229                           
  4230  0071                     ??_init_RGB:	
  4231                           ; 1 bytes @ 0x1
  4232                           
  4233  0071                     ?_RGB_color:	
  4234                           ; 1 bytes @ 0x1
  4235                           
  4236  0071                     ??_internal_16:	
  4237                           ; 1 bytes @ 0x1
  4238                           
  4239  0071                     ?_setShuntResistorValue:	
  4240                           ; 1 bytes @ 0x1
  4241                           
  4242  0071                     ??_shutdown_BMS:	
  4243                           ; 1 bytes @ 0x1
  4244                           
  4245  0071                     ?_strcpy:	
  4246                           ; 1 bytes @ 0x1
  4247                           
  4248  0071                     ??_putch:	
  4249                           ; 1 bytes @ 0x1
  4250                           
  4251  0071                     ??_EUSART_Write:	
  4252                           ; 1 bytes @ 0x1
  4253                           
  4254  0071                     ?_send_I2C_data:	
  4255                           ; 1 bytes @ 0x1
  4256                           
  4257  0071                     ?_send_I2C_controlByte:	
  4258                           ; 1 bytes @ 0x1
  4259                           
  4260  0071                     ??_send_I2C_startBit:	
  4261                           ; 1 bytes @ 0x1
  4262                           
  4263  0071                     ??_send_I2C_stopBit:	
  4264                           ; 1 bytes @ 0x1
  4265                           
  4266  0071                     ??_send_I2C_ACK:	
  4267                           ; 1 bytes @ 0x1
  4268                           
  4269  0071                     ??_send_I2C_NACK:	
  4270                           ; 1 bytes @ 0x1
  4271                           
  4272  0071                     ??___aodiv:	
  4273                           ; 1 bytes @ 0x1
  4274                           
  4275  0071                     ??___aomod:	
  4276                           ; 1 bytes @ 0x1
  4277                           
  4278  0071                     ??___lodiv:	
  4279                           ; 1 bytes @ 0x1
  4280                           
  4281  0071                     ??___lomod:	
  4282                           ; 1 bytes @ 0x1
  4283                           
  4284  0071                     ?_fputc:	
  4285                           ; 1 bytes @ 0x1
  4286                           
  4287  0071                     ?_strlen:	
  4288                           ; 2 bytes @ 0x1
  4289                           
  4290  0071                     ?___fpclassifyf:	
  4291                           ; 2 bytes @ 0x1
  4292                           
  4293  0071                     ?_isupper:	
  4294                           ; 2 bytes @ 0x1
  4295                           
  4296  0071                     ?_isalpha:	
  4297                           ; 2 bytes @ 0x1
  4298                           
  4299  0071                     ?_isdigit:	
  4300                           ; 2 bytes @ 0x1
  4301                           
  4302  0071                     ?_strncmp:	
  4303                           ; 2 bytes @ 0x1
  4304                           
  4305  0071                     ?__Umul8_16:	
  4306                           ; 2 bytes @ 0x1
  4307                           
  4308  0071                     ?_isspace:	
  4309                           ; 2 bytes @ 0x1
  4310                           
  4311  0071                     ?_islower:	
  4312                           ; 2 bytes @ 0x1
  4313                           
  4314  0071                     ?_read_I2C_data:	
  4315                           ; 2 bytes @ 0x1
  4316                           
  4317  0071                     ?___wmul:	
  4318                           ; 2 bytes @ 0x1
  4319                           
  4320  0071                     ?___awdiv:	
  4321                           ; 2 bytes @ 0x1
  4322                           
  4323  0071                     ?___awmod:	
  4324                           ; 2 bytes @ 0x1
  4325                           
  4326  0071                     ?_AFE_getSetCurrentSenseRes:	
  4327                           ; 2 bytes @ 0x1
  4328                           
  4329  0071                     ?___lmul:	
  4330                           ; 4 bytes @ 0x1
  4331                           
  4332  0071                     ?___flneg:	
  4333                           ; 4 bytes @ 0x1
  4334                           
  4335  0071                     ?___xxtofl:	
  4336                           ; 4 bytes @ 0x1
  4337                           
  4338  0071                     EUSART_Write@txData:	
  4339                           ; 4 bytes @ 0x1
  4340                           
  4341  0071                     __Umul8_16@multiplicand:	
  4342                           ; 1 bytes @ 0x1
  4343                           
  4344  0071                     send_I2C_data@databyte:	
  4345                           ; 1 bytes @ 0x1
  4346                           
  4347  0071                     send_I2C_controlByte@BlockAddress:	
  4348                           ; 2 bytes @ 0x1
  4349                           
  4350  0071                     RGB_color@color:	
  4351                           ; 2 bytes @ 0x1
  4352                           
  4353  0071                     ___wmul@multiplier:	
  4354                           ; 2 bytes @ 0x1
  4355                           
  4356  0071                     ___awdiv@divisor:	
  4357                           ; 2 bytes @ 0x1
  4358                           
  4359  0071                     ___awmod@divisor:	
  4360                           ; 2 bytes @ 0x1
  4361                           
  4362  0071                     isalpha@c:	
  4363                           ; 2 bytes @ 0x1
  4364                           
  4365  0071                     isdigit@c:	
  4366                           ; 2 bytes @ 0x1
  4367                           
  4368  0071                     isspace@c:	
  4369                           ; 2 bytes @ 0x1
  4370                           
  4371  0071                     isupper@c:	
  4372                           ; 2 bytes @ 0x1
  4373                           
  4374  0071                     fputc@c:	
  4375                           ; 2 bytes @ 0x1
  4376                           
  4377  0071                     strcpy@src:	
  4378                           ; 2 bytes @ 0x1
  4379                           
  4380  0071                     strlen@s:	
  4381                           ; 2 bytes @ 0x1
  4382                           
  4383  0071                     strncmp@_l:	
  4384                           ; 2 bytes @ 0x1
  4385                           
  4386  0071                     islower@c:	
  4387                           ; 2 bytes @ 0x1
  4388                           
  4389  0071                     setShuntResistorValue@res_mOhm:	
  4390                           ; 2 bytes @ 0x1
  4391                           
  4392  0071                     ___lmul@multiplier:	
  4393                           ; 4 bytes @ 0x1
  4394                           
  4395  0071                     ___fleq@ff1:	
  4396                           ; 4 bytes @ 0x1
  4397                           
  4398  0071                     ___flneg@f1:	
  4399                           ; 4 bytes @ 0x1
  4400                           
  4401  0071                     ___xxtofl@val:	
  4402                           ; 4 bytes @ 0x1
  4403                           
  4404  0071                     ___fpclassifyf@x:	
  4405                           ; 4 bytes @ 0x1
  4406                           
  4407                           
  4408                           ; 4 bytes @ 0x1
  4409  0071                     	ds	1
  4410  0072                     ?_EUSART_Write_Text:	
  4411  0072                     ___aodiv@counter:	
  4412                           ; 1 bytes @ 0x2
  4413                           
  4414  0072                     ___aomod@counter:	
  4415                           ; 1 bytes @ 0x2
  4416                           
  4417  0072                     ___lomod@counter:	
  4418                           ; 1 bytes @ 0x2
  4419                           
  4420  0072                     EUSART_Write_Text@text:	
  4421                           ; 1 bytes @ 0x2
  4422                           
  4423  0072                     ___lodiv@quotient:	
  4424                           ; 2 bytes @ 0x2
  4425                           
  4426                           
  4427                           ; 8 bytes @ 0x2
  4428  0072                     	ds	1
  4429  0073                     ??_watchdog_timeout_shutdown:	
  4430  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4431                           ; 1 bytes @ 0x3
  4432                           
  4433  0073                     ??_RGB_color:	
  4434                           ; 1 bytes @ 0x3
  4435                           
  4436  0073                     ??_strlen:	
  4437                           ; 1 bytes @ 0x3
  4438                           
  4439  0073                     ??_isupper:	
  4440                           ; 1 bytes @ 0x3
  4441                           
  4442  0073                     ??_strcpy:	
  4443                           ; 1 bytes @ 0x3
  4444                           
  4445  0073                     ??_isalpha:	
  4446                           ; 1 bytes @ 0x3
  4447                           
  4448  0073                     ??_isdigit:	
  4449                           ; 1 bytes @ 0x3
  4450                           
  4451  0073                     ??__Umul8_16:	
  4452                           ; 1 bytes @ 0x3
  4453                           
  4454  0073                     ??_isspace:	
  4455                           ; 1 bytes @ 0x3
  4456                           
  4457  0073                     ??_islower:	
  4458                           ; 1 bytes @ 0x3
  4459                           
  4460  0073                     ??_send_I2C_data:	
  4461                           ; 1 bytes @ 0x3
  4462                           
  4463  0073                     ??_read_I2C_data:	
  4464                           ; 1 bytes @ 0x3
  4465                           
  4466  0073                     ___aodiv@sign:	
  4467                           ; 1 bytes @ 0x3
  4468                           
  4469  0073                     ___aomod@sign:	
  4470                           ; 1 bytes @ 0x3
  4471                           
  4472  0073                     send_I2C_controlByte@RW_bit:	
  4473                           ; 1 bytes @ 0x3
  4474                           
  4475  0073                     ___wmul@multiplicand:	
  4476                           ; 2 bytes @ 0x3
  4477                           
  4478  0073                     ___awdiv@dividend:	
  4479                           ; 2 bytes @ 0x3
  4480                           
  4481  0073                     ___awmod@dividend:	
  4482                           ; 2 bytes @ 0x3
  4483                           
  4484  0073                     fputc@fp:	
  4485                           ; 2 bytes @ 0x3
  4486                           
  4487  0073                     strlen@a:	
  4488                           ; 2 bytes @ 0x3
  4489                           
  4490  0073                     strncmp@_r:	
  4491                           ; 2 bytes @ 0x3
  4492                           
  4493                           
  4494                           ; 2 bytes @ 0x3
  4495  0073                     	ds	1
  4496  0074                     ??_EUSART_Write_Text:	
  4497  0074                     ?_abs:	
  4498                           ; 1 bytes @ 0x4
  4499                           
  4500  0074                     abs@a:	
  4501                           ; 2 bytes @ 0x4
  4502                           
  4503  0074                     ___aodiv@quotient:	
  4504                           ; 2 bytes @ 0x4
  4505                           
  4506                           
  4507                           ; 8 bytes @ 0x4
  4508  0074                     	ds	1
  4509  0075                     ??_AFE_getSetCurrentSenseRes:	
  4510  0075                     ??_setShuntResistorValue:	
  4511                           ; 1 bytes @ 0x5
  4512                           
  4513  0075                     ??_fputc:	
  4514                           ; 1 bytes @ 0x5
  4515                           
  4516  0075                     ??___fpclassifyf:	
  4517                           ; 1 bytes @ 0x5
  4518                           
  4519  0075                     ??_send_I2C_controlByte:	
  4520                           ; 1 bytes @ 0x5
  4521                           
  4522  0075                     ?_I2C_writeRegister:	
  4523                           ; 1 bytes @ 0x5
  4524                           
  4525  0075                     ??___wmul:	
  4526                           ; 1 bytes @ 0x5
  4527                           
  4528  0075                     ??___awdiv:	
  4529                           ; 1 bytes @ 0x5
  4530                           
  4531  0075                     ??___awmod:	
  4532                           ; 1 bytes @ 0x5
  4533                           
  4534  0075                     ??___flneg:	
  4535                           ; 1 bytes @ 0x5
  4536                           
  4537  0075                     ??___xxtofl:	
  4538                           ; 1 bytes @ 0x5
  4539                           
  4540  0075                     ?_readRegister:	
  4541                           ; 1 bytes @ 0x5
  4542                           
  4543  0075                     _isspace$1810:	
  4544                           ; 2 bytes @ 0x5
  4545                           
  4546  0075                     EUSART_Write_Text@i:	
  4547                           ; 1 bytes @ 0x5
  4548                           
  4549  0075                     I2C_writeRegister@slaveAddress:	
  4550                           ; 2 bytes @ 0x5
  4551                           
  4552  0075                     readRegister@slaveAddress:	
  4553                           ; 2 bytes @ 0x5
  4554                           
  4555  0075                     ___wmul@product:	
  4556                           ; 2 bytes @ 0x5
  4557                           
  4558  0075                     strcpy@s:	
  4559                           ; 2 bytes @ 0x5
  4560                           
  4561  0075                     strncmp@n:	
  4562                           ; 2 bytes @ 0x5
  4563                           
  4564  0075                     __Umul8_16@product:	
  4565                           ; 2 bytes @ 0x5
  4566                           
  4567  0075                     ___lmul@multiplicand:	
  4568                           ; 2 bytes @ 0x5
  4569                           
  4570  0075                     ___fleq@ff2:	
  4571                           ; 4 bytes @ 0x5
  4572                           
  4573                           
  4574                           ; 4 bytes @ 0x5
  4575  0075                     	ds	1
  4576  0076                     ??_abs:	
  4577  0076                     ___awdiv@counter:	
  4578                           ; 1 bytes @ 0x6
  4579                           
  4580  0076                     ___awmod@counter:	
  4581                           ; 1 bytes @ 0x6
  4582                           
  4583                           
  4584                           ; 1 bytes @ 0x6
  4585  0076                     	ds	1
  4586  0077                     ??_setTemperatureLimitsint:	
  4587  0077                     ??_strncmp:	
  4588                           ; 1 bytes @ 0x7
  4589                           
  4590  0077                     ?_tolower:	
  4591                           ; 1 bytes @ 0x7
  4592                           
  4593  0077                     ?_toupper:	
  4594                           ; 2 bytes @ 0x7
  4595                           
  4596  0077                     ?_atoi:	
  4597                           ; 2 bytes @ 0x7
  4598                           
  4599  0077                     ___awdiv@sign:	
  4600                           ; 2 bytes @ 0x7
  4601                           
  4602  0077                     ___awmod@sign:	
  4603                           ; 1 bytes @ 0x7
  4604                           
  4605  0077                     strcpy@d:	
  4606                           ; 1 bytes @ 0x7
  4607                           
  4608  0077                     I2C_writeRegister@regAddress:	
  4609                           ; 1 bytes @ 0x7
  4610                           
  4611  0077                     readRegister@regAddress:	
  4612                           ; 2 bytes @ 0x7
  4613                           
  4614  0077                     atoi@s:	
  4615                           ; 2 bytes @ 0x7
  4616                           
  4617  0077                     tolower@c:	
  4618                           ; 2 bytes @ 0x7
  4619                           
  4620  0077                     toupper@c:	
  4621                           ; 2 bytes @ 0x7
  4622                           
  4623  0077                     __Umul8_16@word_mpld:	
  4624                           ; 2 bytes @ 0x7
  4625                           
  4626                           
  4627                           ; 2 bytes @ 0x7
  4628  0077                     	ds	1
  4629  0078                     strcpy@dest:	
  4630  0078                     ___awdiv@quotient:	
  4631                           ; 1 bytes @ 0x8
  4632                           
  4633  0078                     strncmp@l:	
  4634                           ; 2 bytes @ 0x8
  4635                           
  4636                           
  4637                           ; 2 bytes @ 0x8
  4638  0078                     	ds	1
  4639  0079                     ??_readRegister:	
  4640  0079                     ??___lmul:	
  4641                           ; 1 bytes @ 0x9
  4642                           
  4643  0079                     ??___aldiv:	
  4644                           ; 1 bytes @ 0x9
  4645                           
  4646  0079                     __Umul8_16@multiplier:	
  4647                           ; 1 bytes @ 0x9
  4648                           
  4649  0079                     I2C_writeRegister@data:	
  4650                           ; 1 bytes @ 0x9
  4651                           
  4652  0079                     readRegister@recievedData:	
  4653                           ; 2 bytes @ 0x9
  4654                           
  4655  0079                     _tolower$1893:	
  4656                           ; 2 bytes @ 0x9
  4657                           
  4658  0079                     _toupper$1908:	
  4659                           ; 2 bytes @ 0x9
  4660                           
  4661                           
  4662                           ; 2 bytes @ 0x9
  4663  0079                     	ds	1
  4664  007A                     ??_stoa:	
  4665  007A                     ??___flsub:	
  4666                           ; 1 bytes @ 0xA
  4667                           
  4668  007A                     ?_fputs:	
  4669                           ; 1 bytes @ 0xA
  4670                           
  4671  007A                     ___fltol@sign1:	
  4672                           ; 2 bytes @ 0xA
  4673                           
  4674  007A                     ___lodiv@counter:	
  4675                           ; 1 bytes @ 0xA
  4676                           
  4677  007A                     EUSART_Initialize@x:	
  4678                           ; 1 bytes @ 0xA
  4679                           
  4680  007A                     fputs@fp:	
  4681                           ; 2 bytes @ 0xA
  4682                           
  4683  007A                     strncmp@r:	
  4684                           ; 2 bytes @ 0xA
  4685                           
  4686                           
  4687                           ; 2 bytes @ 0xA
  4688  007A                     	ds	1
  4689  007B                     ??_init_AFE:	
  4690  007B                     ??_updateCurrent:	
  4691                           ; 1 bytes @ 0xB
  4692                           
  4693  007B                     ??_I2C_writeRegister:	
  4694                           ; 1 bytes @ 0xB
  4695                           
  4696  007B                     ___fltol@exp1:	
  4697                           ; 1 bytes @ 0xB
  4698                           
  4699                           
  4700                           ; 1 bytes @ 0xB
  4701  007B                     	ds	1
  4702  007C                     ??_AFE_UPDATE:	
  4703  007C                     ??_printcellParameters:	
  4704                           ; 1 bytes @ 0xC
  4705                           
  4706                           
  4707                           	psect	cstackBANK0
  4708  0020                     __pcstackBANK0:	
  4709                           ; 1 bytes @ 0xC
  4710                           
  4711  0020                     ?_setTemperatureLimitsint:	
  4712  0020                     ??_fputs:	
  4713                           ; 1 bytes @ 0x0
  4714                           
  4715  0020                     ??_tolower:	
  4716                           ; 1 bytes @ 0x0
  4717                           
  4718  0020                     ??_toupper:	
  4719                           ; 1 bytes @ 0x0
  4720                           
  4721  0020                     ??_atoi:	
  4722                           ; 1 bytes @ 0x0
  4723                           
  4724  0020                     ??___fleq:	
  4725                           ; 1 bytes @ 0x0
  4726                           
  4727  0020                     ?_beginAFEcommunication:	
  4728                           ; 1 bytes @ 0x0
  4729                           
  4730  0020                     ?_stoa:	
  4731                           ; 2 bytes @ 0x0
  4732                           
  4733  0020                     ?___aodiv:	
  4734                           ; 2 bytes @ 0x0
  4735                           
  4736  0020                     ?___aomod:	
  4737                           ; 8 bytes @ 0x0
  4738                           
  4739  0020                     ?___lodiv:	
  4740                           ; 8 bytes @ 0x0
  4741                           
  4742  0020                     ?___lomod:	
  4743                           ; 8 bytes @ 0x0
  4744                           
  4745  0020                     ___xxtofl@sign:	
  4746                           ; 8 bytes @ 0x0
  4747                           
  4748  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4749                           ; 1 bytes @ 0x0
  4750                           
  4751  0020                     stoa@fp:	
  4752                           ; 2 bytes @ 0x0
  4753                           
  4754  0020                     ___fpclassifyf@e:	
  4755                           ; 2 bytes @ 0x0
  4756                           
  4757  0020                     ___lmul@product:	
  4758                           ; 2 bytes @ 0x0
  4759                           
  4760  0020                     ___aodiv@divisor:	
  4761                           ; 4 bytes @ 0x0
  4762                           
  4763  0020                     ___aomod@divisor:	
  4764                           ; 8 bytes @ 0x0
  4765                           
  4766  0020                     ___lodiv@divisor:	
  4767                           ; 8 bytes @ 0x0
  4768                           
  4769  0020                     ___lomod@divisor:	
  4770                           ; 8 bytes @ 0x0
  4771                           
  4772                           
  4773                           ; 8 bytes @ 0x0
  4774  0020                     	ds	1
  4775  0021                     ___xxtofl@exp:	
  4776                           
  4777                           ; 1 bytes @ 0x1
  4778  0021                     	ds	1
  4779  0022                     ??_beginAFEcommunication:	
  4780  0022                     stoa@s:	
  4781                           ; 1 bytes @ 0x2
  4782                           
  4783  0022                     fputs@c:	
  4784                           ; 1 bytes @ 0x2
  4785                           
  4786  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4787                           ; 1 bytes @ 0x2
  4788                           
  4789  0022                     ___xxtofl@arg:	
  4790                           ; 2 bytes @ 0x2
  4791                           
  4792  0022                     ___fpclassifyf@u:	
  4793                           ; 4 bytes @ 0x2
  4794                           
  4795                           
  4796                           ; 4 bytes @ 0x2
  4797  0022                     	ds	1
  4798  0023                     fputs@i:	
  4799  0023                     stoa@nuls:	
  4800                           ; 2 bytes @ 0x3
  4801                           
  4802                           
  4803                           ; 7 bytes @ 0x3
  4804  0023                     	ds	1
  4805  0024                     ?___aldiv:	
  4806  0024                     setTemperatureLimitsint@minCharge_degC:	
  4807                           ; 4 bytes @ 0x4
  4808                           
  4809  0024                     atoi@neg:	
  4810                           ; 2 bytes @ 0x4
  4811                           
  4812  0024                     ___aldiv@divisor:	
  4813                           ; 2 bytes @ 0x4
  4814                           
  4815                           
  4816                           ; 4 bytes @ 0x4
  4817  0024                     	ds	1
  4818  0025                     fputs@s:	
  4819                           
  4820                           ; 1 bytes @ 0x5
  4821  0025                     	ds	1
  4822  0026                     ?_pad:	
  4823  0026                     ?___flmul:	
  4824                           ; 2 bytes @ 0x6
  4825                           
  4826  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4827                           ; 4 bytes @ 0x6
  4828                           
  4829  0026                     pad@fp:	
  4830                           ; 2 bytes @ 0x6
  4831                           
  4832  0026                     _atoi$1770:	
  4833                           ; 2 bytes @ 0x6
  4834                           
  4835  0026                     ___flmul@b:	
  4836                           ; 2 bytes @ 0x6
  4837                           
  4838                           
  4839                           ; 4 bytes @ 0x6
  4840  0026                     	ds	2
  4841  0028                     pad@buf:	
  4842  0028                     _atoi$1772:	
  4843                           ; 1 bytes @ 0x8
  4844                           
  4845  0028                     ___aldiv@dividend:	
  4846                           ; 2 bytes @ 0x8
  4847                           
  4848  0028                     ___aodiv@dividend:	
  4849                           ; 4 bytes @ 0x8
  4850                           
  4851  0028                     ___aomod@dividend:	
  4852                           ; 8 bytes @ 0x8
  4853                           
  4854  0028                     ___lodiv@dividend:	
  4855                           ; 8 bytes @ 0x8
  4856                           
  4857  0028                     ___lomod@dividend:	
  4858                           ; 8 bytes @ 0x8
  4859                           
  4860                           
  4861                           ; 8 bytes @ 0x8
  4862  0028                     	ds	1
  4863  0029                     pad@p:	
  4864                           
  4865                           ; 2 bytes @ 0x9
  4866  0029                     	ds	1
  4867  002A                     _atoi$1771:	
  4868  002A                     stoa@i:	
  4869                           ; 1 bytes @ 0xA
  4870                           
  4871  002A                     ___flmul@a:	
  4872                           ; 2 bytes @ 0xA
  4873                           
  4874                           
  4875                           ; 4 bytes @ 0xA
  4876  002A                     	ds	1
  4877  002B                     ??_pad:	
  4878  002B                     beginAFEcommunication@commSuccess:	
  4879                           ; 1 bytes @ 0xB
  4880                           
  4881  002B                     atoi@n:	
  4882                           ; 2 bytes @ 0xB
  4883                           
  4884                           
  4885                           ; 2 bytes @ 0xB
  4886  002B                     	ds	1
  4887  002C                     ___aldiv@counter:	
  4888  002C                     pad@i:	
  4889                           ; 1 bytes @ 0xC
  4890                           
  4891  002C                     stoa@w:	
  4892                           ; 2 bytes @ 0xC
  4893                           
  4894                           
  4895                           ; 2 bytes @ 0xC
  4896  002C                     	ds	1
  4897  002D                     ___aldiv@sign:	
  4898  002D                     beginAFEcommunication@i:	
  4899                           ; 1 bytes @ 0xD
  4900                           
  4901                           
  4902                           ; 2 bytes @ 0xD
  4903  002D                     	ds	1
  4904  002E                     ??___flmul:	
  4905  002E                     pad@w:	
  4906                           ; 1 bytes @ 0xE
  4907                           
  4908  002E                     stoa@cp:	
  4909                           ; 2 bytes @ 0xE
  4910                           
  4911  002E                     ___aldiv@quotient:	
  4912                           ; 2 bytes @ 0xE
  4913                           
  4914                           
  4915                           ; 4 bytes @ 0xE
  4916  002E                     	ds	2
  4917  0030                     ?_ctoa:	
  4918  0030                     ?_dtoa:	
  4919                           ; 2 bytes @ 0x10
  4920                           
  4921  0030                     ?_otoa:	
  4922                           ; 2 bytes @ 0x10
  4923                           
  4924  0030                     ?_utoa:	
  4925                           ; 2 bytes @ 0x10
  4926                           
  4927  0030                     ?_xtoa:	
  4928                           ; 2 bytes @ 0x10
  4929                           
  4930  0030                     ctoa@fp:	
  4931                           ; 2 bytes @ 0x10
  4932                           
  4933  0030                     dtoa@fp:	
  4934                           ; 2 bytes @ 0x10
  4935                           
  4936  0030                     otoa@fp:	
  4937                           ; 2 bytes @ 0x10
  4938                           
  4939  0030                     stoa@p:	
  4940                           ; 2 bytes @ 0x10
  4941                           
  4942  0030                     utoa@fp:	
  4943                           ; 2 bytes @ 0x10
  4944                           
  4945  0030                     xtoa@fp:	
  4946                           ; 2 bytes @ 0x10
  4947                           
  4948                           
  4949                           ; 2 bytes @ 0x10
  4950  0030                     	ds	2
  4951  0032                     ?_EUSART_Initialize:	
  4952  0032                     ?_setCellUndervoltageProtection:	
  4953                           ; 1 bytes @ 0x12
  4954                           
  4955  0032                     ?_setCellOvervoltageProtection:	
  4956                           ; 1 bytes @ 0x12
  4957                           
  4958  0032                     ctoa@c:	
  4959                           ; 1 bytes @ 0x12
  4960                           
  4961  0032                     setCellUndervoltageProtection@voltage_mV:	
  4962                           ; 1 bytes @ 0x12
  4963                           
  4964  0032                     setCellOvervoltageProtection@voltage_mV:	
  4965                           ; 2 bytes @ 0x12
  4966                           
  4967  0032                     stoa@l:	
  4968                           ; 2 bytes @ 0x12
  4969                           
  4970  0032                     EUSART_Initialize@baudrate:	
  4971                           ; 2 bytes @ 0x12
  4972                           
  4973  0032                     dtoa@d:	
  4974                           ; 4 bytes @ 0x12
  4975                           
  4976  0032                     otoa@d:	
  4977                           ; 8 bytes @ 0x12
  4978                           
  4979  0032                     utoa@d:	
  4980                           ; 8 bytes @ 0x12
  4981                           
  4982  0032                     xtoa@d:	
  4983                           ; 8 bytes @ 0x12
  4984                           
  4985                           
  4986                           ; 8 bytes @ 0x12
  4987  0032                     	ds	1
  4988  0033                     ??_ctoa:	
  4989  0033                     ___flmul@sign:	
  4990                           ; 1 bytes @ 0x13
  4991                           
  4992                           
  4993                           ; 1 bytes @ 0x13
  4994  0033                     	ds	1
  4995  0034                     setCellUndervoltageProtection@delay_s:	
  4996  0034                     setCellOvervoltageProtection@delay_s:	
  4997                           ; 2 bytes @ 0x14
  4998                           
  4999  0034                     ctoa@w:	
  5000                           ; 2 bytes @ 0x14
  5001                           
  5002  0034                     ___flmul@grs:	
  5003                           ; 2 bytes @ 0x14
  5004                           
  5005                           
  5006                           ; 4 bytes @ 0x14
  5007  0034                     	ds	2
  5008  0036                     ??_EUSART_Initialize:	
  5009  0036                     ??_setCellUndervoltageProtection:	
  5010                           ; 1 bytes @ 0x16
  5011                           
  5012  0036                     ??_setCellOvervoltageProtection:	
  5013                           ; 1 bytes @ 0x16
  5014                           
  5015                           
  5016                           ; 1 bytes @ 0x16
  5017  0036                     	ds	2
  5018  0038                     ___flmul@aexp:	
  5019                           
  5020                           ; 1 bytes @ 0x18
  5021  0038                     	ds	1
  5022  0039                     ___flmul@bexp:	
  5023                           
  5024                           ; 1 bytes @ 0x19
  5025  0039                     	ds	1
  5026  003A                     ??_dtoa:	
  5027  003A                     ??_otoa:	
  5028                           ; 1 bytes @ 0x1A
  5029                           
  5030  003A                     ??_utoa:	
  5031                           ; 1 bytes @ 0x1A
  5032                           
  5033  003A                     xtoa@x:	
  5034                           ; 1 bytes @ 0x1A
  5035                           
  5036  003A                     ___flmul@prod:	
  5037                           ; 1 bytes @ 0x1A
  5038                           
  5039                           
  5040                           ; 4 bytes @ 0x1A
  5041  003A                     	ds	1
  5042  003B                     ??_xtoa:	
  5043  003B                     utoa@p:	
  5044                           ; 1 bytes @ 0x1B
  5045                           
  5046                           
  5047                           ; 2 bytes @ 0x1B
  5048  003B                     	ds	2
  5049  003D                     _dtoa$1231:	
  5050  003D                     utoa@w:	
  5051                           ; 2 bytes @ 0x1D
  5052                           
  5053                           
  5054                           ; 2 bytes @ 0x1D
  5055  003D                     	ds	1
  5056  003E                     ___flmul@temp:	
  5057                           
  5058                           ; 2 bytes @ 0x1E
  5059  003E                     	ds	1
  5060  003F                     dtoa@p:	
  5061  003F                     utoa@n:	
  5062                           ; 2 bytes @ 0x1F
  5063                           
  5064                           
  5065                           ; 8 bytes @ 0x1F
  5066  003F                     	ds	1
  5067  0040                     ?___fldiv:	
  5068  0040                     ___fldiv@a:	
  5069                           ; 4 bytes @ 0x20
  5070                           
  5071                           
  5072                           ; 4 bytes @ 0x20
  5073  0040                     	ds	1
  5074  0041                     dtoa@w:	
  5075                           
  5076                           ; 2 bytes @ 0x21
  5077  0041                     	ds	1
  5078  0042                     otoa@p:	
  5079                           
  5080                           ; 2 bytes @ 0x22
  5081  0042                     	ds	1
  5082  0043                     dtoa@s:	
  5083  0043                     _xtoa$1301:	
  5084                           ; 2 bytes @ 0x23
  5085                           
  5086                           
  5087                           ; 2 bytes @ 0x23
  5088  0043                     	ds	1
  5089  0044                     setCellUndervoltageProtection@uv_trip:	
  5090  0044                     setCellOvervoltageProtection@ov_trip:	
  5091                           ; 1 bytes @ 0x24
  5092                           
  5093  0044                     otoa@t:	
  5094                           ; 1 bytes @ 0x24
  5095                           
  5096  0044                     ___fldiv@b:	
  5097                           ; 2 bytes @ 0x24
  5098                           
  5099                           
  5100                           ; 4 bytes @ 0x24
  5101  0044                     	ds	1
  5102  0045                     setCellUndervoltageProtection@i:	
  5103  0045                     setCellOvervoltageProtection@i:	
  5104                           ; 2 bytes @ 0x25
  5105                           
  5106  0045                     _xtoa$1302:	
  5107                           ; 2 bytes @ 0x25
  5108                           
  5109  0045                     dtoa@n:	
  5110                           ; 2 bytes @ 0x25
  5111                           
  5112                           
  5113                           ; 8 bytes @ 0x25
  5114  0045                     	ds	1
  5115  0046                     otoa@w:	
  5116                           
  5117                           ; 2 bytes @ 0x26
  5118  0046                     	ds	1
  5119  0047                     utoa@i:	
  5120  0047                     xtoa@p:	
  5121                           ; 2 bytes @ 0x27
  5122                           
  5123                           
  5124                           ; 2 bytes @ 0x27
  5125  0047                     	ds	1
  5126  0048                     ??___fldiv:	
  5127  0048                     otoa@n:	
  5128                           ; 1 bytes @ 0x28
  5129                           
  5130                           
  5131                           ; 8 bytes @ 0x28
  5132  0048                     	ds	1
  5133  0049                     xtoa@w:	
  5134                           
  5135                           ; 2 bytes @ 0x29
  5136  0049                     	ds	2
  5137  004B                     xtoa@n:	
  5138                           
  5139                           ; 8 bytes @ 0x2B
  5140  004B                     	ds	2
  5141  004D                     dtoa@i:	
  5142  004D                     ___fldiv@rem:	
  5143                           ; 2 bytes @ 0x2D
  5144                           
  5145                           
  5146                           ; 4 bytes @ 0x2D
  5147  004D                     	ds	3
  5148  0050                     otoa@i:	
  5149                           
  5150                           ; 2 bytes @ 0x30
  5151  0050                     	ds	1
  5152  0051                     ___fldiv@sign:	
  5153                           
  5154                           ; 1 bytes @ 0x31
  5155  0051                     	ds	1
  5156  0052                     ___fldiv@new_exp:	
  5157                           
  5158                           ; 2 bytes @ 0x32
  5159  0052                     	ds	1
  5160  0053                     xtoa@i:	
  5161                           
  5162                           ; 2 bytes @ 0x33
  5163  0053                     	ds	1
  5164  0054                     ___fldiv@grs:	
  5165                           
  5166                           ; 4 bytes @ 0x34
  5167  0054                     	ds	1
  5168  0055                     xtoa@c:	
  5169                           
  5170                           ; 2 bytes @ 0x35
  5171  0055                     	ds	3
  5172  0058                     ___fldiv@bexp:	
  5173                           
  5174                           ; 1 bytes @ 0x38
  5175  0058                     	ds	1
  5176  0059                     ___fldiv@aexp:	
  5177                           
  5178                           ; 1 bytes @ 0x39
  5179  0059                     	ds	1
  5180  005A                     ?___flge:	
  5181  005A                     ?_floorf:	
  5182                           ; 1 bit 
  5183                           
  5184  005A                     ?___fladd:	
  5185                           ; 4 bytes @ 0x3A
  5186                           
  5187  005A                     ___flge@ff1:	
  5188                           ; 4 bytes @ 0x3A
  5189                           
  5190  005A                     ___fladd@b:	
  5191                           ; 4 bytes @ 0x3A
  5192                           
  5193  005A                     floorf@x:	
  5194                           ; 4 bytes @ 0x3A
  5195                           
  5196                           
  5197                           ; 4 bytes @ 0x3A
  5198  005A                     	ds	4
  5199  005E                     ??_floorf:	
  5200  005E                     ___flge@ff2:	
  5201                           ; 1 bytes @ 0x3E
  5202                           
  5203  005E                     ___fladd@a:	
  5204                           ; 4 bytes @ 0x3E
  5205                           
  5206                           
  5207                           ; 4 bytes @ 0x3E
  5208  005E                     	ds	4
  5209  0062                     ??___flge:	
  5210  0062                     ??___fladd:	
  5211                           ; 1 bytes @ 0x42
  5212                           
  5213                           
  5214                           ; 1 bytes @ 0x42
  5215  0062                     	ds	2
  5216  0064                     floorf@m:	
  5217                           
  5218                           ; 4 bytes @ 0x44
  5219  0064                     	ds	2
  5220  0066                     ?_setShortCircuitProtection:	
  5221  0066                     ?_setOverCurrentDischargeProtection:	
  5222                           ; 1 bytes @ 0x46
  5223                           
  5224  0066                     setShortCircuitProtection@current_mA:	
  5225                           ; 1 bytes @ 0x46
  5226                           
  5227  0066                     setOverCurrentDischargeProtection@current_mA:	
  5228                           ; 4 bytes @ 0x46
  5229                           
  5230                           
  5231                           ; 4 bytes @ 0x46
  5232  0066                     	ds	2
  5233  0068                     floorf@e:	
  5234                           
  5235                           ; 2 bytes @ 0x48
  5236  0068                     	ds	2
  5237  006A                     ___fladd@signs:	
  5238  006A                     setShortCircuitProtection@delay_us:	
  5239                           ; 1 bytes @ 0x4A
  5240                           
  5241  006A                     setOverCurrentDischargeProtection@delay_ms:	
  5242                           ; 2 bytes @ 0x4A
  5243                           
  5244  006A                     floorf@u:	
  5245                           ; 2 bytes @ 0x4A
  5246                           
  5247                           
  5248                           ; 4 bytes @ 0x4A
  5249  006A                     	ds	1
  5250  006B                     ___fladd@aexp:	
  5251                           
  5252                           ; 1 bytes @ 0x4B
  5253  006B                     	ds	1
  5254  006C                     ??_setShortCircuitProtection:	
  5255  006C                     ??_setOverCurrentDischargeProtection:	
  5256                           ; 1 bytes @ 0x4C
  5257                           
  5258  006C                     ___fladd@bexp:	
  5259                           ; 1 bytes @ 0x4C
  5260                           
  5261                           
  5262                           ; 1 bytes @ 0x4C
  5263  006C                     	ds	1
  5264  006D                     ___fladd@grs:	
  5265                           
  5266                           ; 1 bytes @ 0x4D
  5267  006D                     	ds	1
  5268  006E                     ??_vfprintf:	
  5269                           
  5270                           ; 1 bytes @ 0x4E
  5271  006E                     	ds	2
  5272                           
  5273                           	psect	maintext
  5274  3111                     __pmaintext:	
  5275 ;;
  5276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5277 ;;
  5278 ;; *************** function _main *****************
  5279 ;; Defined at:
  5280 ;;		line 77 in file "main.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : B1F/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5297 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5298 ;;Total ram usage:        2 bytes
  5299 ;; Hardware stack levels required when called:   12
  5300 ;; This function calls:
  5301 ;;		_EUSART_Initialize
  5302 ;;		_initClock
  5303 ;;		_initWDT
  5304 ;;		_init_GPIO
  5305 ;;		_init_I2C
  5306 ;;		_init_RGB
  5307 ;;		_init_TMR1
  5308 ;;		_statemachine
  5309 ;;		_watchdog_timeout_shutdown
  5310 ;; This function is called by:
  5311 ;;		Startup code after reset
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function _main
  5317  3111                     _main:	
  5318                           
  5319                           ;main.c: 80:     initClock();
  5320                           
  5321                           ;incstack = 0
  5322                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5323  3111  31BE  2606  31B1   	fcall	_initClock
  5324                           
  5325                           ;main.c: 81:     init_GPIO();
  5326  3114  31B1  21E7  31B1   	fcall	_init_GPIO
  5327                           
  5328                           ;main.c: 82:     initWDT();
  5329  3117  31BE  260E  31B1   	fcall	_initWDT
  5330                           
  5331                           ;main.c: 83:     init_I2C();
  5332  311A  31BE  268E  31B1   	fcall	_init_I2C
  5333                           
  5334                           ;main.c: 84:     EUSART_Initialize(9600);
  5335  311D  3000               	movlw	0
  5336  311E  0020               	movlb	0	; select bank0
  5337  311F  00B5               	movwf	EUSART_Initialize@baudrate+3
  5338  3120  3000               	movlw	0
  5339  3121  00B4               	movwf	EUSART_Initialize@baudrate+2
  5340  3122  3025               	movlw	37
  5341  3123  00B3               	movwf	EUSART_Initialize@baudrate+1
  5342  3124  3080               	movlw	128
  5343  3125  00B2               	movwf	EUSART_Initialize@baudrate
  5344  3126  31AB  2336  31B1   	fcall	_EUSART_Initialize
  5345                           
  5346                           ;main.c: 85:     init_TMR1();
  5347  3129  3190  2004  31B1   	fcall	_init_TMR1
  5348                           
  5349                           ;main.c: 86:     init_RGB();
  5350  312C  31BE  2609  31B1   	fcall	_init_RGB
  5351                           
  5352                           ;main.c: 89:     watchdog_timeout_shutdown();
  5353  312F  31BE  26FA  31B1   	fcall	_watchdog_timeout_shutdown
  5354  3132                     l8805:	
  5355                           
  5356                           ;main.c: 93:         statemachine();
  5357  3132  3198  20C4  31B1   	fcall	_statemachine
  5358                           
  5359                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5360  3135  3015               	movlw	21
  5361  3136  0023               	movlb	3	; select bank3
  5362  3137  00EA               	movwf	(??_main^(0+384)+1)
  5363  3138  304B               	movlw	75
  5364  3139  00E9               	movwf	??_main^(0+384)
  5365  313A  30BE               	movlw	190
  5366  313B                     u12027:	
  5367  313B  0B89               	decfsz	9,f
  5368  313C  293B               	goto	u12027
  5369  313D  0BE9               	decfsz	??_main^(0+384),f
  5370  313E  293B               	goto	u12027
  5371  313F  0BEA               	decfsz	(??_main^(0+384)+1),f
  5372  3140  293B               	goto	u12027
  5373  3141  0000               	nop
  5374  3142  2932               	goto	l8805
  5375  3143                     __end_of_main:	
  5376                           
  5377                           	psect	text1
  5378  3EFA                     __ptext1:	
  5379 ;; *************** function _watchdog_timeout_shutdown *****************
  5380 ;; Defined at:
  5381 ;;		line 3 in file "algorithms.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5399 ;;Total ram usage:        2 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    2
  5402 ;; This function calls:
  5403 ;;		_RGB_color
  5404 ;;		_shutdown_BMS
  5405 ;; This function is called by:
  5406 ;;		_main
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _watchdog_timeout_shutdown
  5412  3EFA                     _watchdog_timeout_shutdown:	
  5413                           
  5414                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5418  3EFA  0020               	movlb	0	; select bank0
  5419  3EFB  1A03               	btfsc	3,4	;volatile
  5420  3EFC  0008               	return
  5421                           
  5422                           ;algorithms.c: 6:         RGB_color(0);
  5423  3EFD  3000               	movlw	0
  5424  3EFE  00F1               	movwf	RGB_color@color
  5425  3EFF  00F2               	movwf	RGB_color@color+1
  5426  3F00  31BF  27BD  31BE   	fcall	_RGB_color
  5427                           
  5428                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5429  3F03  3029               	movlw	41
  5430  3F04  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5431  3F05  3096               	movlw	150
  5432  3F06  00F3               	movwf	??_watchdog_timeout_shutdown
  5433  3F07  307F               	movlw	127
  5434  3F08                     u12037:	
  5435  3F08  0B89               	decfsz	9,f
  5436  3F09  2F08               	goto	u12037
  5437  3F0A  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5438  3F0B  2F08               	goto	u12037
  5439  3F0C  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5440  3F0D  2F08               	goto	u12037
  5441  3F0E  0000               	nop
  5442                           
  5443                           ;algorithms.c: 8:         shutdown_BMS();
  5444  3F0F  3190  2001         	fcall	_shutdown_BMS
  5445  3F11  0008               	return
  5446  3F12                     __end_of_watchdog_timeout_shutdown:	
  5447                           
  5448                           	psect	text2
  5449  1001                     __ptext2:	
  5450 ;; *************** function _shutdown_BMS *****************
  5451 ;; Defined at:
  5452 ;;		line 12 in file "algorithms.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		None
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_watchdog_timeout_shutdown
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _shutdown_BMS
  5482  1001                     _shutdown_BMS:	
  5483                           
  5484                           ;algorithms.c: 13:  LATAbits.LATA3 = 1;
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in _shutdown_BMS: []
  5488  1001  0022               	movlb	2	; select bank2
  5489  1002  158C               	bsf	12,3	;volatile
  5490  1003  0008               	return
  5491  1004                     __end_of_shutdown_BMS:	
  5492                           
  5493                           	psect	text3
  5494  18C4                     __ptext3:	
  5495 ;; *************** function _statemachine *****************
  5496 ;; Defined at:
  5497 ;;		line 101 in file "main.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  success         1   79[BANK2 ] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        3 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   11
  5518 ;; This function calls:
  5519 ;;		_AFE_UPDATE
  5520 ;;		_AFE_getOverCurrentDischargeCurrent
  5521 ;;		_AFE_getSetCurrentSenseRes
  5522 ;;		_AFE_getSetShortCircuitCurrent
  5523 ;;		_EUSART_Write_Text
  5524 ;;		_RGB_AWAIT_AFE_CONN
  5525 ;;		_RGB_color
  5526 ;;		_beginAFEcommunication
  5527 ;;		_init_AFE
  5528 ;;		_printcellParameters
  5529 ;;		_printotAFERegisters
  5530 ;;		_snprintf
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _statemachine
  5538  18C4                     _statemachine:	
  5539                           
  5540                           ;main.c: 103:     switch (currState) {
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5544  18C4  29E2               	goto	l8781
  5545  18C5                     l8717:	
  5546                           
  5547                           ;main.c: 106:             if (tmr1_flag) {
  5548  18C5  0023               	movlb	3	; select bank3
  5549  18C6  084A               	movf	_tmr1_flag^(0+384),w	;volatile
  5550  18C7  1903               	btfsc	3,2
  5551  18C8  0008               	return
  5552                           
  5553                           ;main.c: 107:                 tmr1_flag = 0;
  5554  18C9  01CA               	clrf	_tmr1_flag^(0+384)	;volatile
  5555                           
  5556                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  5557  18CA  31BF  27DE  3198   	fcall	_RGB_AWAIT_AFE_CONN
  5558                           
  5559                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  5560  18CD  3198  2010  3198   	fcall	_beginAFEcommunication
  5561  18D0  0020               	movlb	0	; select bank0
  5562  18D1  0820               	movf	?_beginAFEcommunication,w
  5563  18D2  0022               	movlb	2	; select bank2
  5564  18D3  00ED               	movwf	??_statemachine^(0+256)
  5565  18D4  086D               	movf	??_statemachine^(0+256),w
  5566  18D5  00EF               	movwf	statemachine@success^(0+256)
  5567                           
  5568                           ;main.c: 112:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  5569  18D6  30AA               	movlw	low (STR_1| (0+32768))
  5570  18D7  00F2               	movwf	EUSART_Write_Text@text
  5571  18D8  30B9               	movlw	high (STR_1| (0+32768))
  5572  18D9  00F3               	movwf	EUSART_Write_Text@text+1
  5573  18DA  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5574                           
  5575                           ;main.c: 114:                 if (success) {
  5576  18DD  0022               	movlb	2	; select bank2
  5577  18DE  086F               	movf	statemachine@success^(0+256),w
  5578  18DF  1903               	btfsc	3,2
  5579  18E0  0008               	return
  5580                           
  5581                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  5582  18E1  0020               	movlb	0	; select bank0
  5583  18E2  1018               	bcf	24,0	;volatile
  5584                           
  5585                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  5586  18E3  0021               	movlb	1	; select bank1
  5587  18E4  1011               	bcf	17,0	;volatile
  5588                           
  5589                           ;main.c: 117:                     RGB_color(0);
  5590  18E5  3000               	movlw	0
  5591  18E6  00F1               	movwf	RGB_color@color
  5592  18E7  00F2               	movwf	RGB_color@color+1
  5593  18E8  31BF  27BD  3198   	fcall	_RGB_color
  5594                           
  5595                           ;main.c: 118:                     tmr1_flag = 0;
  5596  18EB  0023               	movlb	3	; select bank3
  5597  18EC  01CA               	clrf	_tmr1_flag^(0+384)	;volatile
  5598                           
  5599                           ;main.c: 122:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  5600  18ED  301A               	movlw	26
  5601  18EE  0022               	movlb	2	; select bank2
  5602  18EF  00ED               	movwf	??_statemachine^(0+256)
  5603  18F0  30F8               	movlw	248
  5604  18F1                     u12047:	
  5605  18F1  0B89               	decfsz	9,f
  5606  18F2  28F1               	goto	u12047
  5607  18F3  0BED               	decfsz	??_statemachine^(0+256),f
  5608  18F4  28F1               	goto	u12047
  5609  18F5  0000               	nop
  5610                           
  5611                           ;main.c: 123:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  5612  18F6  30A4               	movlw	low (STR_2| (0+32768))
  5613  18F7  00F2               	movwf	EUSART_Write_Text@text
  5614  18F8  30B8               	movlw	high (STR_2| (0+32768))
  5615  18F9  00F3               	movwf	EUSART_Write_Text@text+1
  5616  18FA  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5617                           
  5618                           ;main.c: 125:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  5619  18FD  3071               	movlw	113
  5620  18FE  0023               	movlb	3	; select bank3
  5621  18FF  00D1               	movwf	snprintf@s^(0+384)
  5622  1900  3027               	movlw	39
  5623  1901  00D2               	movwf	(snprintf@s^(0+384)+1)
  5624  1902  307F               	movlw	127
  5625  1903  00D3               	movwf	snprintf@n^(0+384)
  5626  1904  3000               	movlw	0
  5627  1905  00D4               	movwf	(snprintf@n^(0+384)+1)
  5628  1906  302B               	movlw	low (STR_3| (0+32768))
  5629  1907  00D5               	movwf	snprintf@fmt^(0+384)
  5630  1908  30B9               	movlw	high (STR_3| (0+32768))
  5631  1909  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  5632  190A  0845               	movf	(_adcOffset+1)^(0+384),w
  5633  190B  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  5634  190C  0844               	movf	_adcOffset^(0+384),w
  5635  190D  00D7               	movwf	(?_snprintf^(0+384)+6)
  5636  190E  0850               	movf	(_adcGain+1)^(0+384),w
  5637  190F  00DA               	movwf	((?_snprintf+1)^(0+384)+8)
  5638  1910  084F               	movf	_adcGain^(0+384),w
  5639  1911  00D9               	movwf	(?_snprintf^(0+384)+8)
  5640  1912  31B0  2064  3198   	fcall	_snprintf
  5641                           
  5642                           ;main.c: 126:                     EUSART_Write_Text(messageBuffer);
  5643  1915  3071               	movlw	113
  5644  1916  00F2               	movwf	EUSART_Write_Text@text
  5645  1917  3027               	movlw	39
  5646  1918  00F3               	movwf	EUSART_Write_Text@text+1
  5647  1919  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5648                           
  5649                           ;main.c: 127:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5650  191C  303B               	movlw	low (STR_4| (0+32768))
  5651  191D  00F2               	movwf	EUSART_Write_Text@text
  5652  191E  30B8               	movlw	high (STR_4| (0+32768))
  5653  191F  00F3               	movwf	EUSART_Write_Text@text+1
  5654  1920  31BF  2712         	fcall	_EUSART_Write_Text
  5655                           
  5656                           ;main.c: 131:                     currState = 1;
  5657  1922  0023               	movlb	3	; select bank3
  5658  1923  01CB               	clrf	_currState^(0+384)
  5659  1924  0ACB               	incf	_currState^(0+384),f
  5660  1925  0008               	return
  5661  1926                     l8747:	
  5662                           
  5663                           ;main.c: 140:             init_AFE();
  5664  1926  31B4  2437  3198   	fcall	_init_AFE
  5665                           
  5666                           ;main.c: 144:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5667  1929  301A               	movlw	26
  5668  192A  0022               	movlb	2	; select bank2
  5669  192B  00ED               	movwf	??_statemachine^(0+256)
  5670  192C  30F8               	movlw	248
  5671  192D                     u12057:	
  5672  192D  0B89               	decfsz	9,f
  5673  192E  292D               	goto	u12057
  5674  192F  0BED               	decfsz	??_statemachine^(0+256),f
  5675  1930  292D               	goto	u12057
  5676  1931  0000               	nop
  5677                           
  5678                           ;main.c: 147:             EUSART_Write_Text("\n\r");
  5679  1932  3056               	movlw	low ((STR_15+18)| (0+32768))
  5680  1933  00F2               	movwf	EUSART_Write_Text@text
  5681  1934  30BA               	movlw	high ((STR_15+18)| (0+32768))
  5682  1935  00F3               	movwf	EUSART_Write_Text@text+1
  5683  1936  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5684                           
  5685                           ;main.c: 148:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5686  1939  3071               	movlw	113
  5687  193A  0023               	movlb	3	; select bank3
  5688  193B  00D1               	movwf	snprintf@s^(0+384)
  5689  193C  3027               	movlw	39
  5690  193D  00D2               	movwf	(snprintf@s^(0+384)+1)
  5691  193E  307F               	movlw	127
  5692  193F  00D3               	movwf	snprintf@n^(0+384)
  5693  1940  3000               	movlw	0
  5694  1941  00D4               	movwf	(snprintf@n^(0+384)+1)
  5695  1942  3080               	movlw	low (STR_6| (0+32768))
  5696  1943  00D5               	movwf	snprintf@fmt^(0+384)
  5697  1944  30B9               	movlw	high (STR_6| (0+32768))
  5698  1945  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  5699  1946  31BE  267A  3198   	fcall	_AFE_getSetCurrentSenseRes
  5700  1949  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5701  194A  0023               	movlb	3	; select bank3
  5702  194B  00DA               	movwf	((?_snprintf+3)^(0+384)+6)
  5703  194C  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5704  194D  00D9               	movwf	((?_snprintf+2)^(0+384)+6)
  5705  194E  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5706  194F  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  5707  1950  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5708  1951  00D7               	movwf	(?_snprintf^(0+384)+6)
  5709  1952  31B0  2064  3198   	fcall	_snprintf
  5710                           
  5711                           ;main.c: 149:             EUSART_Write_Text(messageBuffer);
  5712  1955  3071               	movlw	113
  5713  1956  00F2               	movwf	EUSART_Write_Text@text
  5714  1957  3027               	movlw	39
  5715  1958  00F3               	movwf	EUSART_Write_Text@text+1
  5716  1959  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5717                           
  5718                           ;main.c: 150:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5719  195C  3071               	movlw	113
  5720  195D  0023               	movlb	3	; select bank3
  5721  195E  00D1               	movwf	snprintf@s^(0+384)
  5722  195F  3027               	movlw	39
  5723  1960  00D2               	movwf	(snprintf@s^(0+384)+1)
  5724  1961  307F               	movlw	127
  5725  1962  00D3               	movwf	snprintf@n^(0+384)
  5726  1963  3000               	movlw	0
  5727  1964  00D4               	movwf	(snprintf@n^(0+384)+1)
  5728  1965  30FF               	movlw	low (STR_7| (0+32768))
  5729  1966  00D5               	movwf	snprintf@fmt^(0+384)
  5730  1967  30B8               	movlw	high (STR_7| (0+32768))
  5731  1968  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  5732  1969  31B4  24E4  3198   	fcall	_AFE_getSetShortCircuitCurrent
  5733  196C  0021               	movlb	1	; select bank1
  5734  196D  082C               	movf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128),w
  5735  196E  0023               	movlb	3	; select bank3
  5736  196F  00DA               	movwf	((?_snprintf+3)^(0+384)+6)
  5737  1970  0021               	movlb	1	; select bank1
  5738  1971  082B               	movf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128),w
  5739  1972  0023               	movlb	3	; select bank3
  5740  1973  00D9               	movwf	((?_snprintf+2)^(0+384)+6)
  5741  1974  0021               	movlb	1	; select bank1
  5742  1975  082A               	movf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128),w
  5743  1976  0023               	movlb	3	; select bank3
  5744  1977  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  5745  1978  0021               	movlb	1	; select bank1
  5746  1979  0829               	movf	?_AFE_getSetShortCircuitCurrent^(0+128),w
  5747  197A  0023               	movlb	3	; select bank3
  5748  197B  00D7               	movwf	(?_snprintf^(0+384)+6)
  5749  197C  31B0  2064  3198   	fcall	_snprintf
  5750                           
  5751                           ;main.c: 151:             EUSART_Write_Text(messageBuffer);
  5752  197F  3071               	movlw	113
  5753  1980  00F2               	movwf	EUSART_Write_Text@text
  5754  1981  3027               	movlw	39
  5755  1982  00F3               	movwf	EUSART_Write_Text@text+1
  5756  1983  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5757                           
  5758                           ;main.c: 152:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5759  1986  3071               	movlw	113
  5760  1987  0023               	movlb	3	; select bank3
  5761  1988  00D1               	movwf	snprintf@s^(0+384)
  5762  1989  3027               	movlw	39
  5763  198A  00D2               	movwf	(snprintf@s^(0+384)+1)
  5764  198B  307F               	movlw	127
  5765  198C  00D3               	movwf	snprintf@n^(0+384)
  5766  198D  3000               	movlw	0
  5767  198E  00D4               	movwf	(snprintf@n^(0+384)+1)
  5768  198F  3002               	movlw	low (STR_8| (0+32768))
  5769  1990  00D5               	movwf	snprintf@fmt^(0+384)
  5770  1991  30B8               	movlw	high (STR_8| (0+32768))
  5771  1992  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  5772  1993  31B4  248D  3198   	fcall	_AFE_getOverCurrentDischargeCurrent
  5773  1996  0021               	movlb	1	; select bank1
  5774  1997  082C               	movf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
  5775  1998  0023               	movlb	3	; select bank3
  5776  1999  00DA               	movwf	((?_snprintf+3)^(0+384)+6)
  5777  199A  0021               	movlb	1	; select bank1
  5778  199B  082B               	movf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
  5779  199C  0023               	movlb	3	; select bank3
  5780  199D  00D9               	movwf	((?_snprintf+2)^(0+384)+6)
  5781  199E  0021               	movlb	1	; select bank1
  5782  199F  082A               	movf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
  5783  19A0  0023               	movlb	3	; select bank3
  5784  19A1  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  5785  19A2  0021               	movlb	1	; select bank1
  5786  19A3  0829               	movf	?_AFE_getOverCurrentDischargeCurrent^(0+128),w
  5787  19A4  0023               	movlb	3	; select bank3
  5788  19A5  00D7               	movwf	(?_snprintf^(0+384)+6)
  5789  19A6  31B0  2064  3198   	fcall	_snprintf
  5790                           
  5791                           ;main.c: 153:             EUSART_Write_Text(messageBuffer);
  5792  19A9  3071               	movlw	113
  5793  19AA  00F2               	movwf	EUSART_Write_Text@text
  5794  19AB  3027               	movlw	39
  5795  19AC  00F3               	movwf	EUSART_Write_Text@text+1
  5796  19AD  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5797                           
  5798                           ;main.c: 154:             printotAFERegisters();
  5799  19B0  3191  21B7  3198   	fcall	_printotAFERegisters
  5800                           
  5801                           ;main.c: 155:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5802  19B3  3056               	movlw	low (STR_9| (0+32768))
  5803  19B4  00F2               	movwf	EUSART_Write_Text@text
  5804  19B5  30B9               	movlw	high (STR_9| (0+32768))
  5805  19B6  00F3               	movwf	EUSART_Write_Text@text+1
  5806  19B7  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5807                           
  5808                           ;main.c: 156:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5809  19BA  30D2               	movlw	low (STR_10| (0+32768))
  5810  19BB  00F2               	movwf	EUSART_Write_Text@text
  5811  19BC  30B8               	movlw	high (STR_10| (0+32768))
  5812  19BD  00F3               	movwf	EUSART_Write_Text@text+1
  5813  19BE  31BF  2712  3198   	fcall	_EUSART_Write_Text
  5814                           
  5815                           ;main.c: 159:             RGB_color(1);
  5816  19C1  3001               	movlw	1
  5817  19C2  00F1               	movwf	RGB_color@color
  5818  19C3  3000               	movlw	0
  5819  19C4  00F2               	movwf	RGB_color@color+1
  5820  19C5  31BF  27BD         	fcall	_RGB_color
  5821                           
  5822                           ;main.c: 160:             currState = 2;
  5823  19C7  3002               	movlw	2
  5824  19C8  0022               	movlb	2	; select bank2
  5825  19C9  00ED               	movwf	??_statemachine^(0+256)
  5826  19CA  086D               	movf	??_statemachine^(0+256),w
  5827  19CB  0023               	movlb	3	; select bank3
  5828  19CC  00CB               	movwf	_currState^(0+384)
  5829                           
  5830                           ;main.c: 161:             break;
  5831  19CD  0008               	return
  5832  19CE                     l8773:	
  5833                           
  5834                           ;main.c: 165:             AFE_UPDATE();
  5835  19CE  31BE  2614  3198   	fcall	_AFE_UPDATE
  5836  19D1  0064               	clrwdt	;# 
  5837                           
  5838                           ;main.c: 169:             printcellParameters();
  5839  19D2  31B2  22F4  3198   	fcall	_printcellParameters
  5840                           
  5841                           ;main.c: 171:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5842  19D5  3066               	movlw	102
  5843  19D6  0022               	movlb	2	; select bank2
  5844  19D7  00EE               	movwf	(??_statemachine^(0+256)+1)
  5845  19D8  3076               	movlw	118
  5846  19D9  00ED               	movwf	??_statemachine^(0+256)
  5847  19DA  30C1               	movlw	193
  5848  19DB                     u12067:	
  5849  19DB  0B89               	decfsz	9,f
  5850  19DC  29DB               	goto	u12067
  5851  19DD  0BED               	decfsz	??_statemachine^(0+256),f
  5852  19DE  29DB               	goto	u12067
  5853  19DF  0BEE               	decfsz	(??_statemachine^(0+256)+1),f
  5854  19E0  29DB               	goto	u12067
  5855                           
  5856                           ;main.c: 173:             break;
  5857  19E1  0008               	return
  5858  19E2                     l8781:	
  5859  19E2  0023               	movlb	3	; select bank3
  5860  19E3  084B               	movf	_currState^(0+384),w
  5861  19E4  0022               	movlb	2	; select bank2
  5862  19E5  00ED               	movwf	??_statemachine^(0+256)
  5863  19E6  01EE               	clrf	(??_statemachine^(0+256)+1)
  5864                           
  5865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5866                           ; Switch size 1, requested type "simple"
  5867                           ; Number of cases is 1, Range of values is 0 to 0
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte            4     3 (average)
  5871                           ; direct_byte            8     6 (fixed)
  5872                           ; jumptable            260     6 (fixed)
  5873                           ;	Chosen strategy is simple_byte
  5874  19E7  086E               	movf	(??_statemachine+1)^(0+256),w
  5875  19E8  3A00               	xorlw	0	; case 0
  5876  19E9  1903               	skipnz
  5877  19EA  29EC               	goto	l8909
  5878  19EB  29F7               	goto	l169
  5879  19EC                     l8909:	
  5880                           
  5881                           ; Switch size 1, requested type "simple"
  5882                           ; Number of cases is 3, Range of values is 0 to 2
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           10     6 (average)
  5886                           ; direct_byte           12     6 (fixed)
  5887                           ; jumptable            260     6 (fixed)
  5888                           ;	Chosen strategy is simple_byte
  5889  19EC  086D               	movf	??_statemachine^(0+256),w
  5890  19ED  3A00               	xorlw	0	; case 0
  5891  19EE  1903               	skipnz
  5892  19EF  28C5               	goto	l8717
  5893  19F0  3A01               	xorlw	1	; case 1
  5894  19F1  1903               	skipnz
  5895  19F2  2926               	goto	l8747
  5896  19F3  3A03               	xorlw	3	; case 2
  5897  19F4  1903               	skipnz
  5898  19F5  29CE               	goto	l8773
  5899  19F6  29F7               	goto	l169
  5900  19F7                     l169:	
  5901  19F7  0008               	return
  5902  19F8                     __end_of_statemachine:	
  5903                           
  5904                           	psect	text4
  5905  11B7                     __ptext4:	
  5906 ;; *************** function _printotAFERegisters *****************
  5907 ;; Defined at:
  5908 ;;		line 265 in file "BQ76920.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5924 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5925 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5926 ;;Total ram usage:        1 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:   10
  5929 ;; This function calls:
  5930 ;;		_EUSART_Write_Text
  5931 ;;		_readRegister
  5932 ;;		_snprintf
  5933 ;; This function is called by:
  5934 ;;		_statemachine
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function _printotAFERegisters
  5940  11B7                     _printotAFERegisters:	
  5941                           
  5942                           ;BQ76920.c: 267:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5946  11B7  301A               	movlw	26
  5947  11B8  0022               	movlb	2	; select bank2
  5948  11B9  00EC               	movwf	??_printotAFERegisters^(0+256)
  5949  11BA  30F8               	movlw	248
  5950  11BB                     u12077:	
  5951  11BB  0B89               	decfsz	9,f
  5952  11BC  29BB               	goto	u12077
  5953  11BD  0BEC               	decfsz	??_printotAFERegisters^(0+256),f
  5954  11BE  29BB               	goto	u12077
  5955  11BF  0000               	nop
  5956                           
  5957                           ;BQ76920.c: 269:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5958  11C0  30D2               	movlw	low (STR_12| (0+32768))
  5959  11C1  00F2               	movwf	EUSART_Write_Text@text
  5960  11C2  30B9               	movlw	high (STR_12| (0+32768))
  5961  11C3  00F3               	movwf	EUSART_Write_Text@text+1
  5962  11C4  31BF  2712  3191   	fcall	_EUSART_Write_Text
  5963                           
  5964                           ;BQ76920.c: 270:     EUSART_Write_Text("\n\r");
  5965  11C7  3056               	movlw	low ((STR_15+18)| (0+32768))
  5966  11C8  00F2               	movwf	EUSART_Write_Text@text
  5967  11C9  30BA               	movlw	high ((STR_15+18)| (0+32768))
  5968  11CA  00F3               	movwf	EUSART_Write_Text@text+1
  5969  11CB  31BF  2712  3191   	fcall	_EUSART_Write_Text
  5970                           
  5971                           ;BQ76920.c: 271:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5972  11CE  3071               	movlw	113
  5973  11CF  0023               	movlb	3	; select bank3
  5974  11D0  00D1               	movwf	snprintf@s^(0+384)
  5975  11D1  3027               	movlw	39
  5976  11D2  00D2               	movwf	(snprintf@s^(0+384)+1)
  5977  11D3  307F               	movlw	127
  5978  11D4  00D3               	movwf	snprintf@n^(0+384)
  5979  11D5  3000               	movlw	0
  5980  11D6  00D4               	movwf	(snprintf@n^(0+384)+1)
  5981  11D7  3098               	movlw	low (STR_14| (0+32768))
  5982  11D8  00D5               	movwf	snprintf@fmt^(0+384)
  5983  11D9  30BA               	movlw	high (STR_14| (0+32768))
  5984  11DA  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  5985  11DB  3018               	movlw	24
  5986  11DC  00F5               	movwf	readRegister@slaveAddress
  5987  11DD  3000               	movlw	0
  5988  11DE  00F6               	movwf	readRegister@slaveAddress+1
  5989  11DF  3000               	movlw	0
  5990  11E0  00F7               	movwf	readRegister@regAddress
  5991  11E1  00F8               	movwf	readRegister@regAddress+1
  5992  11E2  31B1  2178  3191   	fcall	_readRegister
  5993  11E5  0876               	movf	?_readRegister+1,w
  5994  11E6  0023               	movlb	3	; select bank3
  5995  11E7  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  5996  11E8  0875               	movf	?_readRegister,w
  5997  11E9  00D7               	movwf	(?_snprintf^(0+384)+6)
  5998  11EA  31B0  2064  3191   	fcall	_snprintf
  5999                           
  6000                           ;BQ76920.c: 272:     EUSART_Write_Text(messageBuffer);
  6001  11ED  3071               	movlw	113
  6002  11EE  00F2               	movwf	EUSART_Write_Text@text
  6003  11EF  3027               	movlw	39
  6004  11F0  00F3               	movwf	EUSART_Write_Text@text+1
  6005  11F1  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6006                           
  6007                           ;BQ76920.c: 273:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  6008  11F4  3071               	movlw	113
  6009  11F5  0023               	movlb	3	; select bank3
  6010  11F6  00D1               	movwf	snprintf@s^(0+384)
  6011  11F7  3027               	movlw	39
  6012  11F8  00D2               	movwf	(snprintf@s^(0+384)+1)
  6013  11F9  307F               	movlw	127
  6014  11FA  00D3               	movwf	snprintf@n^(0+384)
  6015  11FB  3000               	movlw	0
  6016  11FC  00D4               	movwf	(snprintf@n^(0+384)+1)
  6017  11FD  3044               	movlw	low (STR_15| (0+32768))
  6018  11FE  00D5               	movwf	snprintf@fmt^(0+384)
  6019  11FF  30BA               	movlw	high (STR_15| (0+32768))
  6020  1200  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6021  1201  3018               	movlw	24
  6022  1202  00F5               	movwf	readRegister@slaveAddress
  6023  1203  3000               	movlw	0
  6024  1204  00F6               	movwf	readRegister@slaveAddress+1
  6025  1205  3001               	movlw	1
  6026  1206  00F7               	movwf	readRegister@regAddress
  6027  1207  3000               	movlw	0
  6028  1208  00F8               	movwf	readRegister@regAddress+1
  6029  1209  31B1  2178  3191   	fcall	_readRegister
  6030  120C  0876               	movf	?_readRegister+1,w
  6031  120D  0023               	movlb	3	; select bank3
  6032  120E  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6033  120F  0875               	movf	?_readRegister,w
  6034  1210  00D7               	movwf	(?_snprintf^(0+384)+6)
  6035  1211  31B0  2064  3191   	fcall	_snprintf
  6036                           
  6037                           ;BQ76920.c: 274:     EUSART_Write_Text(messageBuffer);
  6038  1214  3071               	movlw	113
  6039  1215  00F2               	movwf	EUSART_Write_Text@text
  6040  1216  3027               	movlw	39
  6041  1217  00F3               	movwf	EUSART_Write_Text@text+1
  6042  1218  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6043                           
  6044                           ;BQ76920.c: 275:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  6045  121B  3071               	movlw	113
  6046  121C  0023               	movlb	3	; select bank3
  6047  121D  00D1               	movwf	snprintf@s^(0+384)
  6048  121E  3027               	movlw	39
  6049  121F  00D2               	movwf	(snprintf@s^(0+384)+1)
  6050  1220  307F               	movlw	127
  6051  1221  00D3               	movwf	snprintf@n^(0+384)
  6052  1222  3000               	movlw	0
  6053  1223  00D4               	movwf	(snprintf@n^(0+384)+1)
  6054  1224  3018               	movlw	low (STR_16| (0+32768))
  6055  1225  00D5               	movwf	snprintf@fmt^(0+384)
  6056  1226  30BA               	movlw	high (STR_16| (0+32768))
  6057  1227  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6058  1228  3018               	movlw	24
  6059  1229  00F5               	movwf	readRegister@slaveAddress
  6060  122A  3000               	movlw	0
  6061  122B  00F6               	movwf	readRegister@slaveAddress+1
  6062  122C  3004               	movlw	4
  6063  122D  00F7               	movwf	readRegister@regAddress
  6064  122E  3000               	movlw	0
  6065  122F  00F8               	movwf	readRegister@regAddress+1
  6066  1230  31B1  2178  3191   	fcall	_readRegister
  6067  1233  0876               	movf	?_readRegister+1,w
  6068  1234  0023               	movlb	3	; select bank3
  6069  1235  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6070  1236  0875               	movf	?_readRegister,w
  6071  1237  00D7               	movwf	(?_snprintf^(0+384)+6)
  6072  1238  31B0  2064  3191   	fcall	_snprintf
  6073                           
  6074                           ;BQ76920.c: 276:     EUSART_Write_Text(messageBuffer);
  6075  123B  3071               	movlw	113
  6076  123C  00F2               	movwf	EUSART_Write_Text@text
  6077  123D  3027               	movlw	39
  6078  123E  00F3               	movwf	EUSART_Write_Text@text+1
  6079  123F  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6080                           
  6081                           ;BQ76920.c: 277:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  6082  1242  3071               	movlw	113
  6083  1243  0023               	movlb	3	; select bank3
  6084  1244  00D1               	movwf	snprintf@s^(0+384)
  6085  1245  3027               	movlw	39
  6086  1246  00D2               	movwf	(snprintf@s^(0+384)+1)
  6087  1247  307F               	movlw	127
  6088  1248  00D3               	movwf	snprintf@n^(0+384)
  6089  1249  3000               	movlw	0
  6090  124A  00D4               	movwf	(snprintf@n^(0+384)+1)
  6091  124B  302E               	movlw	low (STR_17| (0+32768))
  6092  124C  00D5               	movwf	snprintf@fmt^(0+384)
  6093  124D  30BA               	movlw	high (STR_17| (0+32768))
  6094  124E  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6095  124F  3018               	movlw	24
  6096  1250  00F5               	movwf	readRegister@slaveAddress
  6097  1251  3000               	movlw	0
  6098  1252  00F6               	movwf	readRegister@slaveAddress+1
  6099  1253  3005               	movlw	5
  6100  1254  00F7               	movwf	readRegister@regAddress
  6101  1255  3000               	movlw	0
  6102  1256  00F8               	movwf	readRegister@regAddress+1
  6103  1257  31B1  2178  3191   	fcall	_readRegister
  6104  125A  0876               	movf	?_readRegister+1,w
  6105  125B  0023               	movlb	3	; select bank3
  6106  125C  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6107  125D  0875               	movf	?_readRegister,w
  6108  125E  00D7               	movwf	(?_snprintf^(0+384)+6)
  6109  125F  31B0  2064  3191   	fcall	_snprintf
  6110                           
  6111                           ;BQ76920.c: 278:     EUSART_Write_Text(messageBuffer);
  6112  1262  3071               	movlw	113
  6113  1263  00F2               	movwf	EUSART_Write_Text@text
  6114  1264  3027               	movlw	39
  6115  1265  00F3               	movwf	EUSART_Write_Text@text+1
  6116  1266  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6117                           
  6118                           ;BQ76920.c: 279:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  6119  1269  3071               	movlw	113
  6120  126A  0023               	movlb	3	; select bank3
  6121  126B  00D1               	movwf	snprintf@s^(0+384)
  6122  126C  3027               	movlw	39
  6123  126D  00D2               	movwf	(snprintf@s^(0+384)+1)
  6124  126E  307F               	movlw	127
  6125  126F  00D3               	movwf	snprintf@n^(0+384)
  6126  1270  3000               	movlw	0
  6127  1271  00D4               	movwf	(snprintf@n^(0+384)+1)
  6128  1272  3059               	movlw	low (STR_18| (0+32768))
  6129  1273  00D5               	movwf	snprintf@fmt^(0+384)
  6130  1274  30BA               	movlw	high (STR_18| (0+32768))
  6131  1275  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6132  1276  3018               	movlw	24
  6133  1277  00F5               	movwf	readRegister@slaveAddress
  6134  1278  3000               	movlw	0
  6135  1279  00F6               	movwf	readRegister@slaveAddress+1
  6136  127A  3006               	movlw	6
  6137  127B  00F7               	movwf	readRegister@regAddress
  6138  127C  3000               	movlw	0
  6139  127D  00F8               	movwf	readRegister@regAddress+1
  6140  127E  31B1  2178  3191   	fcall	_readRegister
  6141  1281  0876               	movf	?_readRegister+1,w
  6142  1282  0023               	movlb	3	; select bank3
  6143  1283  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6144  1284  0875               	movf	?_readRegister,w
  6145  1285  00D7               	movwf	(?_snprintf^(0+384)+6)
  6146  1286  31B0  2064  3191   	fcall	_snprintf
  6147                           
  6148                           ;BQ76920.c: 280:     EUSART_Write_Text(messageBuffer);
  6149  1289  3071               	movlw	113
  6150  128A  00F2               	movwf	EUSART_Write_Text@text
  6151  128B  3027               	movlw	39
  6152  128C  00F3               	movwf	EUSART_Write_Text@text+1
  6153  128D  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6154                           
  6155                           ;BQ76920.c: 281:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  6156  1290  3071               	movlw	113
  6157  1291  0023               	movlb	3	; select bank3
  6158  1292  00D1               	movwf	snprintf@s^(0+384)
  6159  1293  3027               	movlw	39
  6160  1294  00D2               	movwf	(snprintf@s^(0+384)+1)
  6161  1295  307F               	movlw	127
  6162  1296  00D3               	movwf	snprintf@n^(0+384)
  6163  1297  3000               	movlw	0
  6164  1298  00D4               	movwf	(snprintf@n^(0+384)+1)
  6165  1299  306E               	movlw	low (STR_19| (0+32768))
  6166  129A  00D5               	movwf	snprintf@fmt^(0+384)
  6167  129B  30BA               	movlw	high (STR_19| (0+32768))
  6168  129C  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6169  129D  3018               	movlw	24
  6170  129E  00F5               	movwf	readRegister@slaveAddress
  6171  129F  3000               	movlw	0
  6172  12A0  00F6               	movwf	readRegister@slaveAddress+1
  6173  12A1  3007               	movlw	7
  6174  12A2  00F7               	movwf	readRegister@regAddress
  6175  12A3  3000               	movlw	0
  6176  12A4  00F8               	movwf	readRegister@regAddress+1
  6177  12A5  31B1  2178  3191   	fcall	_readRegister
  6178  12A8  0876               	movf	?_readRegister+1,w
  6179  12A9  0023               	movlb	3	; select bank3
  6180  12AA  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6181  12AB  0875               	movf	?_readRegister,w
  6182  12AC  00D7               	movwf	(?_snprintf^(0+384)+6)
  6183  12AD  31B0  2064  3191   	fcall	_snprintf
  6184                           
  6185                           ;BQ76920.c: 282:     EUSART_Write_Text(messageBuffer);
  6186  12B0  3071               	movlw	113
  6187  12B1  00F2               	movwf	EUSART_Write_Text@text
  6188  12B2  3027               	movlw	39
  6189  12B3  00F3               	movwf	EUSART_Write_Text@text+1
  6190  12B4  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6191                           
  6192                           ;BQ76920.c: 283:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  6193  12B7  3071               	movlw	113
  6194  12B8  0023               	movlb	3	; select bank3
  6195  12B9  00D1               	movwf	snprintf@s^(0+384)
  6196  12BA  3027               	movlw	39
  6197  12BB  00D2               	movwf	(snprintf@s^(0+384)+1)
  6198  12BC  307F               	movlw	127
  6199  12BD  00D3               	movwf	snprintf@n^(0+384)
  6200  12BE  3000               	movlw	0
  6201  12BF  00D4               	movwf	(snprintf@n^(0+384)+1)
  6202  12C0  3083               	movlw	low (STR_20| (0+32768))
  6203  12C1  00D5               	movwf	snprintf@fmt^(0+384)
  6204  12C2  30BA               	movlw	high (STR_20| (0+32768))
  6205  12C3  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6206  12C4  3018               	movlw	24
  6207  12C5  00F5               	movwf	readRegister@slaveAddress
  6208  12C6  3000               	movlw	0
  6209  12C7  00F6               	movwf	readRegister@slaveAddress+1
  6210  12C8  3008               	movlw	8
  6211  12C9  00F7               	movwf	readRegister@regAddress
  6212  12CA  3000               	movlw	0
  6213  12CB  00F8               	movwf	readRegister@regAddress+1
  6214  12CC  31B1  2178  3191   	fcall	_readRegister
  6215  12CF  0876               	movf	?_readRegister+1,w
  6216  12D0  0023               	movlb	3	; select bank3
  6217  12D1  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6218  12D2  0875               	movf	?_readRegister,w
  6219  12D3  00D7               	movwf	(?_snprintf^(0+384)+6)
  6220  12D4  31B0  2064  3191   	fcall	_snprintf
  6221                           
  6222                           ;BQ76920.c: 284:     EUSART_Write_Text(messageBuffer);
  6223  12D7  3071               	movlw	113
  6224  12D8  00F2               	movwf	EUSART_Write_Text@text
  6225  12D9  3027               	movlw	39
  6226  12DA  00F3               	movwf	EUSART_Write_Text@text+1
  6227  12DB  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6228                           
  6229                           ;BQ76920.c: 285:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  6230  12DE  3071               	movlw	113
  6231  12DF  0023               	movlb	3	; select bank3
  6232  12E0  00D1               	movwf	snprintf@s^(0+384)
  6233  12E1  3027               	movlw	39
  6234  12E2  00D2               	movwf	(snprintf@s^(0+384)+1)
  6235  12E3  307F               	movlw	127
  6236  12E4  00D3               	movwf	snprintf@n^(0+384)
  6237  12E5  3000               	movlw	0
  6238  12E6  00D4               	movwf	(snprintf@n^(0+384)+1)
  6239  12E7  30AD               	movlw	low (STR_21| (0+32768))
  6240  12E8  00D5               	movwf	snprintf@fmt^(0+384)
  6241  12E9  30BA               	movlw	high (STR_21| (0+32768))
  6242  12EA  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6243  12EB  3018               	movlw	24
  6244  12EC  00F5               	movwf	readRegister@slaveAddress
  6245  12ED  3000               	movlw	0
  6246  12EE  00F6               	movwf	readRegister@slaveAddress+1
  6247  12EF  3009               	movlw	9
  6248  12F0  00F7               	movwf	readRegister@regAddress
  6249  12F1  3000               	movlw	0
  6250  12F2  00F8               	movwf	readRegister@regAddress+1
  6251  12F3  31B1  2178  3191   	fcall	_readRegister
  6252  12F6  0876               	movf	?_readRegister+1,w
  6253  12F7  0023               	movlb	3	; select bank3
  6254  12F8  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6255  12F9  0875               	movf	?_readRegister,w
  6256  12FA  00D7               	movwf	(?_snprintf^(0+384)+6)
  6257  12FB  31B0  2064  3191   	fcall	_snprintf
  6258                           
  6259                           ;BQ76920.c: 286:     EUSART_Write_Text(messageBuffer);
  6260  12FE  3071               	movlw	113
  6261  12FF  00F2               	movwf	EUSART_Write_Text@text
  6262  1300  3027               	movlw	39
  6263  1301  00F3               	movwf	EUSART_Write_Text@text+1
  6264  1302  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6265                           
  6266                           ;BQ76920.c: 287:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  6267  1305  3071               	movlw	113
  6268  1306  0023               	movlb	3	; select bank3
  6269  1307  00D1               	movwf	snprintf@s^(0+384)
  6270  1308  3027               	movlw	39
  6271  1309  00D2               	movwf	(snprintf@s^(0+384)+1)
  6272  130A  307F               	movlw	127
  6273  130B  00D3               	movwf	snprintf@n^(0+384)
  6274  130C  3000               	movlw	0
  6275  130D  00D4               	movwf	(snprintf@n^(0+384)+1)
  6276  130E  30C1               	movlw	low (STR_22| (0+32768))
  6277  130F  00D5               	movwf	snprintf@fmt^(0+384)
  6278  1310  30BA               	movlw	high (STR_22| (0+32768))
  6279  1311  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6280  1312  3018               	movlw	24
  6281  1313  00F5               	movwf	readRegister@slaveAddress
  6282  1314  3000               	movlw	0
  6283  1315  00F6               	movwf	readRegister@slaveAddress+1
  6284  1316  300A               	movlw	10
  6285  1317  00F7               	movwf	readRegister@regAddress
  6286  1318  3000               	movlw	0
  6287  1319  00F8               	movwf	readRegister@regAddress+1
  6288  131A  31B1  2178  3191   	fcall	_readRegister
  6289  131D  0876               	movf	?_readRegister+1,w
  6290  131E  0023               	movlb	3	; select bank3
  6291  131F  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6292  1320  0875               	movf	?_readRegister,w
  6293  1321  00D7               	movwf	(?_snprintf^(0+384)+6)
  6294  1322  31B0  2064  3191   	fcall	_snprintf
  6295                           
  6296                           ;BQ76920.c: 288:     EUSART_Write_Text(messageBuffer);
  6297  1325  3071               	movlw	113
  6298  1326  00F2               	movwf	EUSART_Write_Text@text
  6299  1327  3027               	movlw	39
  6300  1328  00F3               	movwf	EUSART_Write_Text@text+1
  6301  1329  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6302                           
  6303                           ;BQ76920.c: 289:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  6304  132C  3071               	movlw	113
  6305  132D  0023               	movlb	3	; select bank3
  6306  132E  00D1               	movwf	snprintf@s^(0+384)
  6307  132F  3027               	movlw	39
  6308  1330  00D2               	movwf	(snprintf@s^(0+384)+1)
  6309  1331  307F               	movlw	127
  6310  1332  00D3               	movwf	snprintf@n^(0+384)
  6311  1333  3000               	movlw	0
  6312  1334  00D4               	movwf	(snprintf@n^(0+384)+1)
  6313  1335  30D5               	movlw	low (STR_23| (0+32768))
  6314  1336  00D5               	movwf	snprintf@fmt^(0+384)
  6315  1337  30BA               	movlw	high (STR_23| (0+32768))
  6316  1338  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6317  1339  3018               	movlw	24
  6318  133A  00F5               	movwf	readRegister@slaveAddress
  6319  133B  3000               	movlw	0
  6320  133C  00F6               	movwf	readRegister@slaveAddress+1
  6321  133D  300B               	movlw	11
  6322  133E  00F7               	movwf	readRegister@regAddress
  6323  133F  3000               	movlw	0
  6324  1340  00F8               	movwf	readRegister@regAddress+1
  6325  1341  31B1  2178  3191   	fcall	_readRegister
  6326  1344  0876               	movf	?_readRegister+1,w
  6327  1345  0023               	movlb	3	; select bank3
  6328  1346  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6329  1347  0875               	movf	?_readRegister,w
  6330  1348  00D7               	movwf	(?_snprintf^(0+384)+6)
  6331  1349  31B0  2064  3191   	fcall	_snprintf
  6332                           
  6333                           ;BQ76920.c: 290:     EUSART_Write_Text(messageBuffer);
  6334  134C  3071               	movlw	113
  6335  134D  00F2               	movwf	EUSART_Write_Text@text
  6336  134E  3027               	movlw	39
  6337  134F  00F3               	movwf	EUSART_Write_Text@text+1
  6338  1350  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6339                           
  6340                           ;BQ76920.c: 291:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  6341  1353  3071               	movlw	113
  6342  1354  0023               	movlb	3	; select bank3
  6343  1355  00D1               	movwf	snprintf@s^(0+384)
  6344  1356  3027               	movlw	39
  6345  1357  00D2               	movwf	(snprintf@s^(0+384)+1)
  6346  1358  307F               	movlw	127
  6347  1359  00D3               	movwf	snprintf@n^(0+384)
  6348  135A  3000               	movlw	0
  6349  135B  00D4               	movwf	(snprintf@n^(0+384)+1)
  6350  135C  30E8               	movlw	low (STR_24| (0+32768))
  6351  135D  00D5               	movwf	snprintf@fmt^(0+384)
  6352  135E  30BA               	movlw	high (STR_24| (0+32768))
  6353  135F  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6354  1360  3018               	movlw	24
  6355  1361  00F5               	movwf	readRegister@slaveAddress
  6356  1362  3000               	movlw	0
  6357  1363  00F6               	movwf	readRegister@slaveAddress+1
  6358  1364  3032               	movlw	50
  6359  1365  00F7               	movwf	readRegister@regAddress
  6360  1366  3000               	movlw	0
  6361  1367  00F8               	movwf	readRegister@regAddress+1
  6362  1368  31B1  2178  3191   	fcall	_readRegister
  6363  136B  0876               	movf	?_readRegister+1,w
  6364  136C  0023               	movlb	3	; select bank3
  6365  136D  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6366  136E  0875               	movf	?_readRegister,w
  6367  136F  00D7               	movwf	(?_snprintf^(0+384)+6)
  6368  1370  31B0  2064  3191   	fcall	_snprintf
  6369                           
  6370                           ;BQ76920.c: 292:     EUSART_Write_Text(messageBuffer);
  6371  1373  3071               	movlw	113
  6372  1374  00F2               	movwf	EUSART_Write_Text@text
  6373  1375  3027               	movlw	39
  6374  1376  00F3               	movwf	EUSART_Write_Text@text+1
  6375  1377  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6376                           
  6377                           ;BQ76920.c: 293:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  6378  137A  3071               	movlw	113
  6379  137B  0023               	movlb	3	; select bank3
  6380  137C  00D1               	movwf	snprintf@s^(0+384)
  6381  137D  3027               	movlw	39
  6382  137E  00D2               	movwf	(snprintf@s^(0+384)+1)
  6383  137F  307F               	movlw	127
  6384  1380  00D3               	movwf	snprintf@n^(0+384)
  6385  1381  3000               	movlw	0
  6386  1382  00D4               	movwf	(snprintf@n^(0+384)+1)
  6387  1383  30FA               	movlw	low (STR_25| (0+32768))
  6388  1384  00D5               	movwf	snprintf@fmt^(0+384)
  6389  1385  30BA               	movlw	high (STR_25| (0+32768))
  6390  1386  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6391  1387  3018               	movlw	24
  6392  1388  00F5               	movwf	readRegister@slaveAddress
  6393  1389  3000               	movlw	0
  6394  138A  00F6               	movwf	readRegister@slaveAddress+1
  6395  138B  3033               	movlw	51
  6396  138C  00F7               	movwf	readRegister@regAddress
  6397  138D  3000               	movlw	0
  6398  138E  00F8               	movwf	readRegister@regAddress+1
  6399  138F  31B1  2178  3191   	fcall	_readRegister
  6400  1392  0876               	movf	?_readRegister+1,w
  6401  1393  0023               	movlb	3	; select bank3
  6402  1394  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6403  1395  0875               	movf	?_readRegister,w
  6404  1396  00D7               	movwf	(?_snprintf^(0+384)+6)
  6405  1397  31B0  2064  3191   	fcall	_snprintf
  6406                           
  6407                           ;BQ76920.c: 294:     EUSART_Write_Text(messageBuffer);
  6408  139A  3071               	movlw	113
  6409  139B  00F2               	movwf	EUSART_Write_Text@text
  6410  139C  3027               	movlw	39
  6411  139D  00F3               	movwf	EUSART_Write_Text@text+1
  6412  139E  31BF  2712  3191   	fcall	_EUSART_Write_Text
  6413                           
  6414                           ;BQ76920.c: 295:     EUSART_Write_Text("\n\r");
  6415  13A1  3056               	movlw	low ((STR_15+18)| (0+32768))
  6416  13A2  00F2               	movwf	EUSART_Write_Text@text
  6417  13A3  30BA               	movlw	high ((STR_15+18)| (0+32768))
  6418  13A4  00F3               	movwf	EUSART_Write_Text@text+1
  6419  13A5  31BF  2712         	fcall	_EUSART_Write_Text
  6420  13A7  0008               	return
  6421  13A8                     __end_of_printotAFERegisters:	
  6422                           
  6423                           	psect	text5
  6424  32F4                     __ptext5:	
  6425 ;; *************** function _printcellParameters *****************
  6426 ;; Defined at:
  6427 ;;		line 261 in file "BQ76920.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:   10
  6448 ;; This function calls:
  6449 ;;		_EUSART_Write_Text
  6450 ;;		_snprintf
  6451 ;; This function is called by:
  6452 ;;		_statemachine
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _printcellParameters
  6458  32F4                     _printcellParameters:	
  6459                           
  6460                           ;BQ76920.c: 262:     snprintf(messageBuffer, 127, "Cell batt: %i ,%i, %i , %i, %i, %i Ba
      +                          tt Curr: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVoltages[2],cellVoltag
      +                          es[3],cellVoltages[4], batCurrent);
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6464  32F4  3071               	movlw	113
  6465  32F5  0023               	movlb	3	; select bank3
  6466  32F6  00D1               	movwf	snprintf@s^(0+384)
  6467  32F7  3027               	movlw	39
  6468  32F8  00D2               	movwf	(snprintf@s^(0+384)+1)
  6469  32F9  307F               	movlw	127
  6470  32FA  00D3               	movwf	snprintf@n^(0+384)
  6471  32FB  3000               	movlw	0
  6472  32FC  00D4               	movwf	(snprintf@n^(0+384)+1)
  6473  32FD  3070               	movlw	low (STR_11| (0+32768))
  6474  32FE  00D5               	movwf	snprintf@fmt^(0+384)
  6475  32FF  30B8               	movlw	high (STR_11| (0+32768))
  6476  3300  00D6               	movwf	(snprintf@fmt^(0+384)+1)
  6477  3301  082B               	movf	(_batVoltage+3)^(0+384),w
  6478  3302  00DA               	movwf	((?_snprintf+3)^(0+384)+6)
  6479  3303  082A               	movf	(_batVoltage+2)^(0+384),w
  6480  3304  00D9               	movwf	((?_snprintf+2)^(0+384)+6)
  6481  3305  0829               	movf	(_batVoltage+1)^(0+384),w
  6482  3306  00D8               	movwf	((?_snprintf+1)^(0+384)+6)
  6483  3307  0828               	movf	_batVoltage^(0+384),w
  6484  3308  00D7               	movwf	(?_snprintf^(0+384)+6)
  6485  3309  0024               	movlb	4	; select bank4
  6486  330A  0821               	movf	(_cellVoltages+1)^(0+512),w
  6487  330B  0023               	movlb	3	; select bank3
  6488  330C  00DC               	movwf	((?_snprintf+1)^(0+384)+10)
  6489  330D  0024               	movlb	4	; select bank4
  6490  330E  0820               	movf	_cellVoltages^(0+512),w
  6491  330F  0023               	movlb	3	; select bank3
  6492  3310  00DB               	movwf	(?_snprintf^(0+384)+10)
  6493  3311  0024               	movlb	4	; select bank4
  6494  3312  0823               	movf	((_cellVoltages+1)^(0+512)+2),w
  6495  3313  0023               	movlb	3	; select bank3
  6496  3314  00DE               	movwf	((?_snprintf+1)^(0+384)+12)
  6497  3315  0024               	movlb	4	; select bank4
  6498  3316  0822               	movf	(_cellVoltages^(0+512)+2),w
  6499  3317  0023               	movlb	3	; select bank3
  6500  3318  00DD               	movwf	(?_snprintf^(0+384)+12)
  6501  3319  0024               	movlb	4	; select bank4
  6502  331A  0825               	movf	((_cellVoltages+1)^(0+512)+4),w
  6503  331B  0023               	movlb	3	; select bank3
  6504  331C  00E0               	movwf	((?_snprintf+1)^(0+384)+14)
  6505  331D  0024               	movlb	4	; select bank4
  6506  331E  0824               	movf	(_cellVoltages^(0+512)+4),w
  6507  331F  0023               	movlb	3	; select bank3
  6508  3320  00DF               	movwf	(?_snprintf^(0+384)+14)
  6509  3321  0024               	movlb	4	; select bank4
  6510  3322  0827               	movf	((_cellVoltages+1)^(0+512)+6),w
  6511  3323  0023               	movlb	3	; select bank3
  6512  3324  00E2               	movwf	((?_snprintf+1)^(0+384)+16)
  6513  3325  0024               	movlb	4	; select bank4
  6514  3326  0826               	movf	(_cellVoltages^(0+512)+6),w
  6515  3327  0023               	movlb	3	; select bank3
  6516  3328  00E1               	movwf	(?_snprintf^(0+384)+16)
  6517  3329  0024               	movlb	4	; select bank4
  6518  332A  0829               	movf	((_cellVoltages+1)^(0+512)+8),w
  6519  332B  0023               	movlb	3	; select bank3
  6520  332C  00E4               	movwf	((?_snprintf+1)^(0+384)+18)
  6521  332D  0024               	movlb	4	; select bank4
  6522  332E  0828               	movf	(_cellVoltages^(0+512)+8),w
  6523  332F  0023               	movlb	3	; select bank3
  6524  3330  00E3               	movwf	(?_snprintf^(0+384)+18)
  6525  3331  3000               	movlw	0
  6526  3332  00E8               	movwf	((?_snprintf+3)^(0+384)+20)
  6527  3333  3000               	movlw	0
  6528  3334  00E7               	movwf	((?_snprintf+2)^(0+384)+20)
  6529  3335  3000               	movlw	0
  6530  3336  00E6               	movwf	((?_snprintf+1)^(0+384)+20)
  6531  3337  3000               	movlw	0
  6532  3338  00E5               	movwf	(?_snprintf^(0+384)+20)
  6533  3339  31B0  2064  31B2   	fcall	_snprintf
  6534                           
  6535                           ;BQ76920.c: 263:     EUSART_Write_Text(messageBuffer);
  6536  333C  3071               	movlw	113
  6537  333D  00F2               	movwf	EUSART_Write_Text@text
  6538  333E  3027               	movlw	39
  6539  333F  00F3               	movwf	EUSART_Write_Text@text+1
  6540  3340  31BF  2712         	fcall	_EUSART_Write_Text
  6541  3342  0008               	return
  6542  3343                     __end_of_printcellParameters:	
  6543                           
  6544                           	psect	text6
  6545  3064                     __ptext6:	
  6546 ;; *************** function _snprintf *****************
  6547 ;; Defined at:
  6548 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  s               2    0[BANK3 ] PTR unsigned char 
  6551 ;;		 -> messageBuffer(127), 
  6552 ;;  n               2    2[BANK3 ] unsigned int 
  6553 ;;  fmt             2    4[BANK3 ] PTR const unsigned char 
  6554 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6555 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6556 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6557 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6558 ;;		 -> STR_3(43), 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  ret             2    0        int 
  6561 ;;  ap              1   75[BANK2 ] PTR void [1]
  6562 ;;		 -> ?_snprintf(2), 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    0[BANK3 ] int 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6572 ;;      Params:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6573 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6574 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6575 ;;      Totals:         0       0       0       4      24       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6576 ;;Total ram usage:       28 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    9
  6579 ;; This function calls:
  6580 ;;		_vsnprintf
  6581 ;; This function is called by:
  6582 ;;		_statemachine
  6583 ;;		_printcellParameters
  6584 ;;		_printotAFERegisters
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _snprintf
  6590  3064                     _snprintf:	
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6594  3064  30D7               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  6595  3065  0022               	movlb	2	; select bank2
  6596  3066  00E8               	movwf	??_snprintf^(0+256)
  6597  3067  0868               	movf	??_snprintf^(0+256),w
  6598  3068  00EB               	movwf	snprintf@ap^(0+256)
  6599  3069  0023               	movlb	3	; select bank3
  6600  306A  0852               	movf	(snprintf@s+1)^(0+384),w
  6601  306B  0022               	movlb	2	; select bank2
  6602  306C  00D6               	movwf	(vsnprintf@s+1)^(0+256)
  6603  306D  0023               	movlb	3	; select bank3
  6604  306E  0851               	movf	snprintf@s^(0+384),w
  6605  306F  0022               	movlb	2	; select bank2
  6606  3070  00D5               	movwf	vsnprintf@s^(0+256)
  6607  3071  0023               	movlb	3	; select bank3
  6608  3072  0854               	movf	(snprintf@n+1)^(0+384),w
  6609  3073  0022               	movlb	2	; select bank2
  6610  3074  00D8               	movwf	(vsnprintf@n+1)^(0+256)
  6611  3075  0023               	movlb	3	; select bank3
  6612  3076  0853               	movf	snprintf@n^(0+384),w
  6613  3077  0022               	movlb	2	; select bank2
  6614  3078  00D7               	movwf	vsnprintf@n^(0+256)
  6615  3079  0023               	movlb	3	; select bank3
  6616  307A  0856               	movf	(snprintf@fmt+1)^(0+384),w
  6617  307B  0022               	movlb	2	; select bank2
  6618  307C  00DA               	movwf	(vsnprintf@fmt+1)^(0+256)
  6619  307D  0023               	movlb	3	; select bank3
  6620  307E  0855               	movf	snprintf@fmt^(0+384),w
  6621  307F  0022               	movlb	2	; select bank2
  6622  3080  00D9               	movwf	vsnprintf@fmt^(0+256)
  6623  3081  306B               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  6624  3082  00E8               	movwf	??_snprintf^(0+256)
  6625  3083  0868               	movf	??_snprintf^(0+256),w
  6626  3084  00DB               	movwf	vsnprintf@ap^(0+256)
  6627  3085  31B5  25A1         	fcall	_vsnprintf
  6628  3087  0008               	return
  6629  3088                     __end_of_snprintf:	
  6630                           
  6631                           	psect	text7
  6632  35A1                     __ptext7:	
  6633 ;; *************** function _vsnprintf *****************
  6634 ;; Defined at:
  6635 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  s               2   53[BANK2 ] PTR unsigned char 
  6638 ;;		 -> messageBuffer(127), 
  6639 ;;  n               2   55[BANK2 ] unsigned int 
  6640 ;;  fmt             2   57[BANK2 ] PTR const unsigned char 
  6641 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6642 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6643 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6644 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6645 ;;		 -> STR_3(43), 
  6646 ;;  ap              1   59[BANK2 ] PTR PTR void 
  6647 ;;		 -> snprintf@ap(1), 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  f               6   66[BANK2 ] struct _IO_FILE
  6650 ;;  cnt             2   64[BANK2 ] int 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2   53[BANK2 ] int 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6660 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6661 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6663 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6664 ;;Total ram usage:       19 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    8
  6667 ;; This function calls:
  6668 ;;		_vfprintf
  6669 ;; This function is called by:
  6670 ;;		_snprintf
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           
  6675                           ;psect for function _vsnprintf
  6676  35A1                     _vsnprintf:	
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6680  35A1  3080               	movlw	128
  6681  35A2  0022               	movlb	2	; select bank2
  6682  35A3  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6683  35A4  3000               	movlw	0
  6684  35A5  1903               	skipnz
  6685  35A6  0257               	subwf	vsnprintf@n^(0+256),w
  6686  35A7  1C03               	skipc
  6687  35A8  2DB4               	goto	l8459
  6688  35A9  304B               	movlw	75
  6689  35AA  0023               	movlb	3	; select bank3
  6690  35AB  00AC               	movwf	_errno^(0+384)
  6691  35AC  3000               	movlw	0
  6692  35AD  00AD               	movwf	(_errno^(0+384)+1)
  6693  35AE  30FF               	movlw	255
  6694  35AF  0022               	movlb	2	; select bank2
  6695  35B0  00D5               	movwf	?_vsnprintf^(0+256)
  6696  35B1  30FF               	movlw	255
  6697  35B2  00D6               	movwf	(?_vsnprintf^(0+256)+1)
  6698  35B3  0008               	return
  6699  35B4                     l8459:	
  6700  35B4  0856               	movf	(vsnprintf@s+1)^(0+256),w
  6701  35B5  00E3               	movwf	(vsnprintf@f+1)^(0+256)
  6702  35B6  0855               	movf	vsnprintf@s^(0+256),w
  6703  35B7  00E2               	movwf	vsnprintf@f^(0+256)
  6704  35B8  3000               	movlw	0
  6705  35B9  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6706  35BA  3002               	movlw	2
  6707  35BB  1903               	skipnz
  6708  35BC  0257               	subwf	vsnprintf@n^(0+256),w
  6709  35BD  1C03               	skipc
  6710  35BE  2DC8               	goto	l8465
  6711  35BF  0857               	movf	vsnprintf@n^(0+256),w
  6712  35C0  3EFF               	addlw	255
  6713  35C1  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6714  35C2  30FF               	movlw	255
  6715  35C3  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6716  35C4  00E7               	movwf	((vsnprintf@f+1)^(0+256)+4)
  6717  35C5  01E4               	clrf	(vsnprintf@f^(0+256)+2)
  6718  35C6  01E5               	clrf	((vsnprintf@f+1)^(0+256)+2)
  6719  35C7  2DD0               	goto	l8467
  6720  35C8                     l8465:	
  6721  35C8  3001               	movlw	1
  6722  35C9  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6723  35CA  3000               	movlw	0
  6724  35CB  00E7               	movwf	(vsnprintf@f^(0+256)+5)
  6725  35CC  3001               	movlw	1
  6726  35CD  00E4               	movwf	(vsnprintf@f^(0+256)+2)
  6727  35CE  3000               	movlw	0
  6728  35CF  00E5               	movwf	(vsnprintf@f^(0+256)+3)
  6729  35D0                     l8467:	
  6730  35D0  3062               	movlw	low vsnprintf@f
  6731  35D1  00CE               	movwf	vfprintf@fp^(0+256)
  6732  35D2  3001               	movlw	high vsnprintf@f
  6733  35D3  00CF               	movwf	(vfprintf@fp^(0+256)+1)
  6734  35D4  085A               	movf	(vsnprintf@fmt+1)^(0+256),w
  6735  35D5  00D1               	movwf	(vfprintf@fmt+1)^(0+256)
  6736  35D6  0859               	movf	vsnprintf@fmt^(0+256),w
  6737  35D7  00D0               	movwf	vfprintf@fmt^(0+256)
  6738  35D8  085B               	movf	vsnprintf@ap^(0+256),w
  6739  35D9  00DC               	movwf	??_vsnprintf^(0+256)
  6740  35DA  085C               	movf	??_vsnprintf^(0+256),w
  6741  35DB  00D2               	movwf	vfprintf@ap^(0+256)
  6742  35DC  31B1  21AE  31B5   	fcall	_vfprintf
  6743  35DF  0022               	movlb	2	; select bank2
  6744  35E0  084F               	movf	(?_vfprintf+1)^(0+256),w
  6745  35E1  00E1               	movwf	(vsnprintf@cnt+1)^(0+256)
  6746  35E2  084E               	movf	?_vfprintf^(0+256),w
  6747  35E3  00E0               	movwf	vsnprintf@cnt^(0+256)
  6748  35E4  0857               	movf	vsnprintf@n^(0+256),w
  6749  35E5  0458               	iorwf	(vsnprintf@n+1)^(0+256),w
  6750  35E6  1D03               	btfss	3,2
  6751  35E7  1BE1               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  6752  35E8  2E09               	goto	l8481
  6753  35E9  0857               	movf	vsnprintf@n^(0+256),w
  6754  35EA  3EFF               	addlw	255
  6755  35EB  00DC               	movwf	??_vsnprintf^(0+256)
  6756  35EC  30FF               	movlw	255
  6757  35ED  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6758  35EE  00DD               	movwf	(??_vsnprintf+1)^(0+256)
  6759  35EF  085D               	movf	(??_vsnprintf+1)^(0+256),w
  6760  35F0  0261               	subwf	(vsnprintf@cnt+1)^(0+256),w
  6761  35F1  1D03               	skipz
  6762  35F2  2DF5               	goto	u11825
  6763  35F3  085C               	movf	??_vsnprintf^(0+256),w
  6764  35F4  0260               	subwf	vsnprintf@cnt^(0+256),w
  6765  35F5                     u11825:	
  6766  35F5  1C03               	skipc
  6767  35F6  2DFE               	goto	l8477
  6768  35F7  0857               	movf	vsnprintf@n^(0+256),w
  6769  35F8  3EFF               	addlw	255
  6770  35F9  00DE               	movwf	_vsnprintf$1945^(0+256)
  6771  35FA  30FF               	movlw	255
  6772  35FB  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6773  35FC  00DF               	movwf	(_vsnprintf$1945+1)^(0+256)
  6774  35FD  2E02               	goto	l8479
  6775  35FE                     l8477:	
  6776  35FE  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6777  35FF  00DF               	movwf	(_vsnprintf$1945+1)^(0+256)
  6778  3600  0860               	movf	vsnprintf@cnt^(0+256),w
  6779  3601  00DE               	movwf	_vsnprintf$1945^(0+256)
  6780  3602                     l8479:	
  6781  3602  085E               	movf	_vsnprintf$1945^(0+256),w
  6782  3603  0755               	addwf	vsnprintf@s^(0+256),w
  6783  3604  0086               	movwf	6
  6784  3605  085F               	movf	(_vsnprintf$1945+1)^(0+256),w
  6785  3606  3D56               	addwfc	(vsnprintf@s+1)^(0+256),w
  6786  3607  0087               	movwf	7
  6787  3608  0181               	clrf	1
  6788  3609                     l8481:	
  6789  3609  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6790  360A  00D6               	movwf	(?_vsnprintf+1)^(0+256)
  6791  360B  0860               	movf	vsnprintf@cnt^(0+256),w
  6792  360C  00D5               	movwf	?_vsnprintf^(0+256)
  6793  360D  0008               	return
  6794  360E                     __end_of_vsnprintf:	
  6795                           
  6796                           	psect	text8
  6797  31AE                     __ptext8:	
  6798 ;; *************** function _vfprintf *****************
  6799 ;; Defined at:
  6800 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  fp              2   46[BANK2 ] PTR struct _IO_FILE
  6803 ;;		 -> vsnprintf@f(6), 
  6804 ;;  fmt             2   48[BANK2 ] PTR const unsigned char 
  6805 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6806 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6807 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6808 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6809 ;;		 -> STR_3(43), 
  6810 ;;  ap              1   50[BANK2 ] PTR PTR void 
  6811 ;;		 -> snprintf@ap(1), 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  cfmt            2   51[BANK2 ] PTR unsigned char 
  6814 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6815 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6816 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6817 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6818 ;;		 -> STR_3(43), 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  2   46[BANK2 ] int 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6828 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6829 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;      Totals:         0       2       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;Total ram usage:        9 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    7
  6835 ;; This function calls:
  6836 ;;		_vfpfcnvrt
  6837 ;; This function is called by:
  6838 ;;		_vsnprintf
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function _vfprintf
  6844  31AE                     _vfprintf:	
  6845                           
  6846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6850  31AE  0022               	movlb	2	; select bank2
  6851  31AF  0851               	movf	(vfprintf@fmt+1)^(0+256),w
  6852  31B0  00D4               	movwf	(vfprintf@cfmt+1)^(0+256)
  6853  31B1  0850               	movf	vfprintf@fmt^(0+256),w
  6854  31B2  00D3               	movwf	vfprintf@cfmt^(0+256)
  6855                           
  6856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6857  31B3  0023               	movlb	3	; select bank3
  6858  31B4  01AE               	clrf	_nout^(0+384)
  6859  31B5  01AF               	clrf	(_nout+1)^(0+384)
  6860  31B6                     l8393:	
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6862                           
  6863                           
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6865  31B6  0022               	movlb	2	; select bank2
  6866  31B7  0853               	movf	vfprintf@cfmt^(0+256),w
  6867  31B8  0084               	movwf	4
  6868  31B9  0854               	movf	(vfprintf@cfmt+1)^(0+256),w
  6869  31BA  0085               	movwf	5
  6870  31BB  0012               	moviw fsr0++
  6871  31BC  1903               	btfsc	3,2
  6872  31BD  29DE               	goto	l8395
  6873                           
  6874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6875  31BE  084F               	movf	(vfprintf@fp+1)^(0+256),w
  6876  31BF  0021               	movlb	1	; select bank1
  6877  31C0  00ED               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6878  31C1  0022               	movlb	2	; select bank2
  6879  31C2  084E               	movf	vfprintf@fp^(0+256),w
  6880  31C3  0021               	movlb	1	; select bank1
  6881  31C4  00EC               	movwf	vfpfcnvrt@fp^(0+128)
  6882  31C5  3053               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  6883  31C6  0020               	movlb	0	; select bank0
  6884  31C7  00EE               	movwf	??_vfprintf
  6885  31C8  086E               	movf	??_vfprintf,w
  6886  31C9  0021               	movlb	1	; select bank1
  6887  31CA  00EE               	movwf	vfpfcnvrt@fmt^(0+128)
  6888  31CB  0022               	movlb	2	; select bank2
  6889  31CC  0852               	movf	vfprintf@ap^(0+256),w
  6890  31CD  0020               	movlb	0	; select bank0
  6891  31CE  00EF               	movwf	??_vfprintf+1
  6892  31CF  086F               	movf	??_vfprintf+1,w
  6893  31D0  0021               	movlb	1	; select bank1
  6894  31D1  00EF               	movwf	vfpfcnvrt@ap^(0+128)
  6895  31D2  3195  25D4  31B1   	fcall	_vfpfcnvrt
  6896  31D5  0021               	movlb	1	; select bank1
  6897  31D6  086C               	movf	?_vfpfcnvrt^(0+128),w
  6898  31D7  0023               	movlb	3	; select bank3
  6899  31D8  07AE               	addwf	_nout^(0+384),f
  6900  31D9  0021               	movlb	1	; select bank1
  6901  31DA  086D               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6902  31DB  0023               	movlb	3	; select bank3
  6903  31DC  3DAF               	addwfc	(_nout+1)^(0+384),f
  6904  31DD  29B6               	goto	l8393
  6905  31DE                     l8395:	
  6906                           
  6907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6908  31DE  0023               	movlb	3	; select bank3
  6909  31DF  082F               	movf	(_nout+1)^(0+384),w
  6910  31E0  0022               	movlb	2	; select bank2
  6911  31E1  00CF               	movwf	(?_vfprintf+1)^(0+256)
  6912  31E2  0023               	movlb	3	; select bank3
  6913  31E3  082E               	movf	_nout^(0+384),w
  6914  31E4  0022               	movlb	2	; select bank2
  6915  31E5  00CE               	movwf	?_vfprintf^(0+256)
  6916  31E6  0008               	return
  6917  31E7                     __end_of_vfprintf:	
  6918                           
  6919                           	psect	text9
  6920  15D4                     __ptext9:	
  6921 ;; *************** function _vfpfcnvrt *****************
  6922 ;; Defined at:
  6923 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  fp              2   76[BANK1 ] PTR struct _IO_FILE
  6926 ;;		 -> vsnprintf@f(6), 
  6927 ;;  fmt             1   78[BANK1 ] PTR PTR unsigned char 
  6928 ;;		 -> vfprintf@cfmt(2), 
  6929 ;;  ap              1   79[BANK1 ] PTR PTR void 
  6930 ;;		 -> snprintf@ap(1), 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  llu             8   38[BANK2 ] unsigned long long 
  6933 ;;  ll              8   28[BANK2 ] long long 
  6934 ;;  f               4   24[BANK2 ] long long 
  6935 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6936 ;;  done            2   13[BANK2 ] int 
  6937 ;;  i               2    0        int 
  6938 ;;  c               1   37[BANK2 ] unsigned char 
  6939 ;;  vp              1   36[BANK2 ] PTR void 
  6940 ;;		 -> ?_snprintf(2), adcGain(2), 
  6941 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6942 ;;		 -> ?_snprintf(2), adcGain(2), 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  2   76[BANK1 ] int 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6952 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6953 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6955 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6956 ;;Total ram usage:       50 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    6
  6959 ;; This function calls:
  6960 ;;		_atoi
  6961 ;;		_ctoa
  6962 ;;		_dtoa
  6963 ;;		_efgtoa
  6964 ;;		_fputc
  6965 ;;		_isdigit
  6966 ;;		_isupper
  6967 ;;		_otoa
  6968 ;;		_stoa
  6969 ;;		_strncmp
  6970 ;;		_tolower
  6971 ;;		_utoa
  6972 ;;		_xtoa
  6973 ;; This function is called by:
  6974 ;;		_vfprintf
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _vfpfcnvrt
  6980  15D4                     _vfpfcnvrt:	
  6981                           
  6982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6986  15D4  0021               	movlb	1	; select bank1
  6987  15D5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  6988  15D6  0086               	movwf	6
  6989  15D7  3001               	movlw	1	; select bank2/3
  6990  15D8  0087               	movwf	7
  6991  15D9  3F40               	moviw [0]fsr1
  6992  15DA  0022               	movlb	2	; select bank2
  6993  15DB  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6994  15DC  3F41               	moviw [1]fsr1
  6995  15DD  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6996  15DE  0820               	movf	??_vfpfcnvrt^(0+256),w
  6997  15DF  0084               	movwf	4
  6998  15E0  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6999  15E1  0085               	movwf	5
  7000  15E2  0012               	moviw fsr0++
  7001  15E3  3A25               	xorlw	37
  7002  15E4  1D03               	btfss	3,2
  7003  15E5  2FFE               	goto	L16
  7004                           
  7005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7006  15E6  0021               	movlb	1	; select bank1
  7007  15E7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7008  15E8  0086               	movwf	6
  7009  15E9  3001               	movlw	1	; select bank2/3
  7010  15EA  0087               	movwf	7
  7011  15EB  3001               	movlw	1
  7012  15EC  0781               	addwf	1,f
  7013  15ED  3141               	addfsr 1,1
  7014  15EE  1803               	skipnc
  7015  15EF  0A81               	incf	1,f
  7016                           
  7017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7018  15F0  0023               	movlb	3	; select bank3
  7019  15F1  01B0               	clrf	_width^(0+384)
  7020  15F2  01B1               	clrf	(_width+1)^(0+384)
  7021  15F3  01B4               	clrf	_flags^(0+384)
  7022  15F4  01B5               	clrf	(_flags+1)^(0+384)
  7023                           
  7024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7025  15F5  30FF               	movlw	255
  7026  15F6  00B2               	movwf	_prec^(0+384)
  7027  15F7  30FF               	movlw	255
  7028  15F8  00B3               	movwf	(_prec^(0+384)+1)
  7029                           
  7030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7031  15F9  0022               	movlb	2	; select bank2
  7032  15FA  01AD               	clrf	vfpfcnvrt@done^(0+256)
  7033  15FB  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  7034                           
  7035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7036  15FC  2E1A               	goto	l7951
  7037  15FD                     l861:	
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  7039                           
  7040                           
  7041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7042  15FD  0023               	movlb	3	; select bank3
  7043  15FE  1434               	bsf	_flags^(0+384),0
  7044  15FF                     l7935:	
  7045                           
  7046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7047  15FF  0021               	movlb	1	; select bank1
  7048  1600  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7049  1601  0086               	movwf	6
  7050  1602  3001               	movlw	1	; select bank2/3
  7051  1603  0087               	movwf	7
  7052  1604  3001               	movlw	1
  7053  1605  0781               	addwf	1,f
  7054  1606  3141               	addfsr 1,1
  7055  1607  1803               	skipnc
  7056  1608  0A81               	incf	1,f
  7057                           
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7059  1609  2E1A               	goto	l7951
  7060  160A                     l863:	
  7061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  7062                           
  7063                           
  7064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7065  160A  0023               	movlb	3	; select bank3
  7066  160B  14B4               	bsf	_flags^(0+384),1
  7067  160C  2DFF               	goto	l7935
  7068  160D                     l864:	
  7069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  7070                           
  7071                           
  7072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7073  160D  0023               	movlb	3	; select bank3
  7074  160E  1534               	bsf	_flags^(0+384),2
  7075  160F  2DFF               	goto	l7935
  7076  1610                     l865:	
  7077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  7078                           
  7079                           
  7080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7081  1610  0023               	movlb	3	; select bank3
  7082  1611  15B4               	bsf	_flags^(0+384),3
  7083  1612  2DFF               	goto	l7935
  7084  1613                     l866:	
  7085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  7086                           
  7087                           
  7088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7089  1613  0023               	movlb	3	; select bank3
  7090  1614  1634               	bsf	_flags^(0+384),4
  7091  1615  2DFF               	goto	l7935
  7092  1616                     l7945:	
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7095  1616  3001               	movlw	1
  7096  1617  00AD               	movwf	vfpfcnvrt@done^(0+256)
  7097  1618  3000               	movlw	0
  7098  1619  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  7099  161A                     l7951:	
  7100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7101                           
  7102                           
  7103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7104  161A  0022               	movlb	2	; select bank2
  7105  161B  082D               	movf	vfpfcnvrt@done^(0+256),w
  7106  161C  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  7107  161D  1D03               	btfss	3,2
  7108  161E  2E47               	goto	l868
  7109  161F  0021               	movlb	1	; select bank1
  7110  1620  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7111  1621  0086               	movwf	6
  7112  1622  3001               	movlw	1	; select bank2/3
  7113  1623  0087               	movwf	7
  7114  1624  3F40               	moviw [0]fsr1
  7115  1625  0022               	movlb	2	; select bank2
  7116  1626  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7117  1627  3F41               	moviw [1]fsr1
  7118  1628  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7119  1629  0820               	movf	??_vfpfcnvrt^(0+256),w
  7120  162A  0084               	movwf	4
  7121  162B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7122  162C  0085               	movwf	5
  7123  162D  0800               	movf	0,w	;code access
  7124  162E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7125  162F  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7126                           
  7127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7128                           ; Switch size 1, requested type "simple"
  7129                           ; Number of cases is 1, Range of values is 0 to 0
  7130                           ; switch strategies available:
  7131                           ; Name         Instructions Cycles
  7132                           ; simple_byte            4     3 (average)
  7133                           ; direct_byte            8     6 (fixed)
  7134                           ; jumptable            260     6 (fixed)
  7135                           ;	Chosen strategy is simple_byte
  7136  1630  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7137  1631  3A00               	xorlw	0	; case 0
  7138  1632  1903               	skipnz
  7139  1633  2E35               	goto	l8911
  7140  1634  2E16               	goto	l7945
  7141  1635                     l8911:	
  7142                           
  7143                           ; Switch size 1, requested type "simple"
  7144                           ; Number of cases is 5, Range of values is 32 to 48
  7145                           ; switch strategies available:
  7146                           ; Name         Instructions Cycles
  7147                           ; simple_byte           16     9 (average)
  7148                           ; direct_byte           43     9 (fixed)
  7149                           ; jumptable            263     9 (fixed)
  7150                           ;	Chosen strategy is simple_byte
  7151  1635  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7152  1636  3A20               	xorlw	32	; case 32
  7153  1637  1903               	skipnz
  7154  1638  2E10               	goto	l865
  7155  1639  3A03               	xorlw	3	; case 35
  7156  163A  1903               	skipnz
  7157  163B  2E13               	goto	l866
  7158  163C  3A08               	xorlw	8	; case 43
  7159  163D  1903               	skipnz
  7160  163E  2E0D               	goto	l864
  7161  163F  3A06               	xorlw	6	; case 45
  7162  1640  1903               	skipnz
  7163  1641  2DFD               	goto	l861
  7164  1642  3A1D               	xorlw	29	; case 48
  7165  1643  1903               	skipnz
  7166  1644  2E0A               	goto	l863
  7167  1645  2E16               	goto	l7945
  7168  1646  2E1A               	goto	l7951
  7169  1647                     l868:	
  7170                           
  7171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7172  1647  0023               	movlb	3	; select bank3
  7173  1648  1C34               	btfss	_flags^(0+384),0
  7174  1649  2E4E               	goto	l7955
  7175                           
  7176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7177  164A  30FD               	movlw	253
  7178  164B  05B4               	andwf	_flags^(0+384),f
  7179  164C  30FF               	movlw	255
  7180  164D  05B5               	andwf	(_flags+1)^(0+384),f
  7181  164E                     l7955:	
  7182                           
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7184  164E  0021               	movlb	1	; select bank1
  7185  164F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7186  1650  0086               	movwf	6
  7187  1651  3001               	movlw	1	; select bank2/3
  7188  1652  0087               	movwf	7
  7189  1653  3F40               	moviw [0]fsr1
  7190  1654  0022               	movlb	2	; select bank2
  7191  1655  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7192  1656  3F41               	moviw [1]fsr1
  7193  1657  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7194  1658  0820               	movf	??_vfpfcnvrt^(0+256),w
  7195  1659  0084               	movwf	4
  7196  165A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7197  165B  0085               	movwf	5
  7198  165C  0012               	moviw fsr0++
  7199  165D  3A2A               	xorlw	42
  7200  165E  1D03               	btfss	3,2
  7201  165F  2E82               	goto	l7967
  7202                           
  7203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7204  1660  0021               	movlb	1	; select bank1
  7205  1661  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7206  1662  0086               	movwf	6
  7207  1663  3001               	movlw	1	; select bank2/3
  7208  1664  0087               	movwf	7
  7209  1665  3001               	movlw	1
  7210  1666  0781               	addwf	1,f
  7211  1667  3141               	addfsr 1,1
  7212  1668  1803               	skipnc
  7213  1669  0A81               	incf	1,f
  7214                           
  7215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7216  166A  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7217  166B  0086               	movwf	6
  7218  166C  3001               	movlw	1	; select bank2/3
  7219  166D  0087               	movwf	7
  7220  166E  0801               	movf	1,w
  7221  166F  0084               	movwf	4
  7222  1670  3001               	movlw	1	; select bank2/3
  7223  1671  0085               	movwf	5
  7224  1672  3002               	movlw	2
  7225  1673  0781               	addwf	1,f
  7226  1674  3F00               	moviw [0]fsr0
  7227  1675  0023               	movlb	3	; select bank3
  7228  1676  00B0               	movwf	_width^(0+384)
  7229  1677  3F01               	moviw [1]fsr0
  7230  1678  00B1               	movwf	(_width+1)^(0+384)
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7233  1679  1FB1               	btfss	(_width+1)^(0+384),7
  7234  167A  2EC7               	goto	l7977
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7237  167B  1434               	bsf	_flags^(0+384),0
  7238                           
  7239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7240  167C  09B0               	comf	_width^(0+384),f
  7241  167D  09B1               	comf	(_width+1)^(0+384),f
  7242  167E  0AB0               	incf	_width^(0+384),f
  7243  167F  1903               	skipnz
  7244  1680  0AB1               	incf	(_width+1)^(0+384),f
  7245  1681  2EC7               	goto	l7977
  7246  1682                     l7967:	
  7247                           
  7248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7249  1682  0021               	movlb	1	; select bank1
  7250  1683  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7251  1684  0086               	movwf	6
  7252  1685  3001               	movlw	1	; select bank2/3
  7253  1686  0087               	movwf	7
  7254  1687  3F40               	moviw [0]fsr1
  7255  1688  00F7               	movwf	atoi@s
  7256  1689  3F41               	moviw [1]fsr1
  7257  168A  00F8               	movwf	atoi@s+1
  7258  168B  31AA  2295  3195   	fcall	_atoi
  7259  168E  0878               	movf	?_atoi+1,w
  7260  168F  0023               	movlb	3	; select bank3
  7261  1690  00B1               	movwf	(_width+1)^(0+384)
  7262  1691  0877               	movf	?_atoi,w
  7263  1692  00B0               	movwf	_width^(0+384)
  7264                           
  7265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7266  1693  2E9E               	goto	l7971
  7267  1694                     l7969:	
  7268                           
  7269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7270  1694  0021               	movlb	1	; select bank1
  7271  1695  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7272  1696  0086               	movwf	6
  7273  1697  3001               	movlw	1	; select bank2/3
  7274  1698  0087               	movwf	7
  7275  1699  3001               	movlw	1
  7276  169A  0781               	addwf	1,f
  7277  169B  3141               	addfsr 1,1
  7278  169C  1803               	skipnc
  7279  169D  0A81               	incf	1,f
  7280  169E                     l7971:	
  7281  169E  0021               	movlb	1	; select bank1
  7282  169F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7283  16A0  0086               	movwf	6
  7284  16A1  3001               	movlw	1	; select bank2/3
  7285  16A2  0087               	movwf	7
  7286  16A3  3F40               	moviw [0]fsr1
  7287  16A4  0022               	movlb	2	; select bank2
  7288  16A5  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7289  16A6  3F41               	moviw [1]fsr1
  7290  16A7  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7291  16A8  0820               	movf	??_vfpfcnvrt^(0+256),w
  7292  16A9  0084               	movwf	4
  7293  16AA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7294  16AB  0085               	movwf	5
  7295  16AC  0800               	movf	0,w	;code access
  7296  16AD  3ED0               	addlw	208
  7297  16AE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7298  16AF  30FF               	movlw	255
  7299  16B0  1803               	skipnc
  7300  16B1  3000               	movlw	0
  7301  16B2  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7302  16B3  3000               	movlw	0
  7303  16B4  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7304  16B5  300A               	movlw	10
  7305  16B6  1903               	skipnz
  7306  16B7  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7307  16B8  1803               	btfsc	3,0
  7308  16B9  2EBC               	goto	u11090
  7309  16BA  3001               	movlw	1
  7310  16BB  2EBD               	goto	u11100
  7311  16BC                     u11090:	
  7312  16BC  3000               	movlw	0
  7313  16BD                     u11100:	
  7314  16BD  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7315  16BE  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7316  16BF  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7317  16C0  00AF               	movwf	_vfpfcnvrt$1316^(0+256)
  7318  16C1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7319  16C2  00B0               	movwf	(_vfpfcnvrt$1316+1)^(0+256)
  7320  16C3  082F               	movf	_vfpfcnvrt$1316^(0+256),w
  7321  16C4  0430               	iorwf	(_vfpfcnvrt$1316+1)^(0+256),w
  7322  16C5  1D03               	btfss	3,2
  7323  16C6  2E94               	goto	l7969
  7324  16C7                     l7977:	
  7325                           
  7326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7327  16C7  0021               	movlb	1	; select bank1
  7328  16C8  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7329  16C9  0086               	movwf	6
  7330  16CA  3001               	movlw	1	; select bank2/3
  7331  16CB  0087               	movwf	7
  7332  16CC  3F40               	moviw [0]fsr1
  7333  16CD  0022               	movlb	2	; select bank2
  7334  16CE  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7335  16CF  3F41               	moviw [1]fsr1
  7336  16D0  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7337  16D1  0820               	movf	??_vfpfcnvrt^(0+256),w
  7338  16D2  0084               	movwf	4
  7339  16D3  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7340  16D4  0085               	movwf	5
  7341  16D5  0012               	moviw fsr0++
  7342  16D6  3A2E               	xorlw	46
  7343  16D7  1D03               	btfss	3,2
  7344  16D8  2F56               	goto	l7999
  7345                           
  7346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7347  16D9  0023               	movlb	3	; select bank3
  7348  16DA  01B2               	clrf	_prec^(0+384)
  7349  16DB  01B3               	clrf	(_prec+1)^(0+384)
  7350                           
  7351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7352  16DC  0021               	movlb	1	; select bank1
  7353  16DD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7354  16DE  0086               	movwf	6
  7355  16DF  3001               	movlw	1	; select bank2/3
  7356  16E0  0087               	movwf	7
  7357  16E1  3001               	movlw	1
  7358  16E2  0781               	addwf	1,f
  7359  16E3  3141               	addfsr 1,1
  7360  16E4  1803               	skipnc
  7361  16E5  0A81               	incf	1,f
  7362                           
  7363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7364  16E6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7365  16E7  0086               	movwf	6
  7366  16E8  3001               	movlw	1	; select bank2/3
  7367  16E9  0087               	movwf	7
  7368  16EA  3F40               	moviw [0]fsr1
  7369  16EB  0022               	movlb	2	; select bank2
  7370  16EC  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7371  16ED  3F41               	moviw [1]fsr1
  7372  16EE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7373  16EF  0820               	movf	??_vfpfcnvrt^(0+256),w
  7374  16F0  0084               	movwf	4
  7375  16F1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7376  16F2  0085               	movwf	5
  7377  16F3  0012               	moviw fsr0++
  7378  16F4  3A2A               	xorlw	42
  7379  16F5  1D03               	btfss	3,2
  7380  16F6  2F11               	goto	l7989
  7381                           
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7383  16F7  0021               	movlb	1	; select bank1
  7384  16F8  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7385  16F9  0086               	movwf	6
  7386  16FA  3001               	movlw	1	; select bank2/3
  7387  16FB  0087               	movwf	7
  7388  16FC  3001               	movlw	1
  7389  16FD  0781               	addwf	1,f
  7390  16FE  3141               	addfsr 1,1
  7391  16FF  1803               	skipnc
  7392  1700  0A81               	incf	1,f
  7393                           
  7394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7395  1701  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7396  1702  0086               	movwf	6
  7397  1703  3001               	movlw	1	; select bank2/3
  7398  1704  0087               	movwf	7
  7399  1705  0801               	movf	1,w
  7400  1706  0084               	movwf	4
  7401  1707  3001               	movlw	1	; select bank2/3
  7402  1708  0085               	movwf	5
  7403  1709  3002               	movlw	2
  7404  170A  0781               	addwf	1,f
  7405  170B  3F00               	moviw [0]fsr0
  7406  170C  0023               	movlb	3	; select bank3
  7407  170D  00B2               	movwf	_prec^(0+384)
  7408  170E  3F01               	moviw [1]fsr0
  7409  170F  00B3               	movwf	(_prec+1)^(0+384)
  7410                           
  7411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7412  1710  2F56               	goto	l7999
  7413  1711                     l7989:	
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7416  1711  0021               	movlb	1	; select bank1
  7417  1712  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7418  1713  0086               	movwf	6
  7419  1714  3001               	movlw	1	; select bank2/3
  7420  1715  0087               	movwf	7
  7421  1716  3F40               	moviw [0]fsr1
  7422  1717  00F7               	movwf	atoi@s
  7423  1718  3F41               	moviw [1]fsr1
  7424  1719  00F8               	movwf	atoi@s+1
  7425  171A  31AA  2295  3195   	fcall	_atoi
  7426  171D  0878               	movf	?_atoi+1,w
  7427  171E  0023               	movlb	3	; select bank3
  7428  171F  00B3               	movwf	(_prec+1)^(0+384)
  7429  1720  0877               	movf	?_atoi,w
  7430  1721  00B2               	movwf	_prec^(0+384)
  7431                           
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7433  1722  2F2D               	goto	l7993
  7434  1723                     l7991:	
  7435                           
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7437  1723  0021               	movlb	1	; select bank1
  7438  1724  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7439  1725  0086               	movwf	6
  7440  1726  3001               	movlw	1	; select bank2/3
  7441  1727  0087               	movwf	7
  7442  1728  3001               	movlw	1
  7443  1729  0781               	addwf	1,f
  7444  172A  3141               	addfsr 1,1
  7445  172B  1803               	skipnc
  7446  172C  0A81               	incf	1,f
  7447  172D                     l7993:	
  7448  172D  0021               	movlb	1	; select bank1
  7449  172E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7450  172F  0086               	movwf	6
  7451  1730  3001               	movlw	1	; select bank2/3
  7452  1731  0087               	movwf	7
  7453  1732  3F40               	moviw [0]fsr1
  7454  1733  0022               	movlb	2	; select bank2
  7455  1734  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7456  1735  3F41               	moviw [1]fsr1
  7457  1736  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7458  1737  0820               	movf	??_vfpfcnvrt^(0+256),w
  7459  1738  0084               	movwf	4
  7460  1739  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7461  173A  0085               	movwf	5
  7462  173B  0800               	movf	0,w	;code access
  7463  173C  3ED0               	addlw	208
  7464  173D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7465  173E  30FF               	movlw	255
  7466  173F  1803               	skipnc
  7467  1740  3000               	movlw	0
  7468  1741  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7469  1742  3000               	movlw	0
  7470  1743  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7471  1744  300A               	movlw	10
  7472  1745  1903               	skipnz
  7473  1746  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7474  1747  1803               	btfsc	3,0
  7475  1748  2F4B               	goto	u11140
  7476  1749  3001               	movlw	1
  7477  174A  2F4C               	goto	u11150
  7478  174B                     u11140:	
  7479  174B  3000               	movlw	0
  7480  174C                     u11150:	
  7481  174C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7482  174D  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7483  174E  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7484  174F  00B1               	movwf	_vfpfcnvrt$1317^(0+256)
  7485  1750  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7486  1751  00B2               	movwf	(_vfpfcnvrt$1317+1)^(0+256)
  7487  1752  0831               	movf	_vfpfcnvrt$1317^(0+256),w
  7488  1753  0432               	iorwf	(_vfpfcnvrt$1317+1)^(0+256),w
  7489  1754  1D03               	btfss	3,2
  7490  1755  2F23               	goto	l7991
  7491  1756                     l7999:	
  7492                           
  7493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  7494  1756  0021               	movlb	1	; select bank1
  7495  1757  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7496  1758  0086               	movwf	6
  7497  1759  3001               	movlw	1	; select bank2/3
  7498  175A  0087               	movwf	7
  7499  175B  3F40               	moviw [0]fsr1
  7500  175C  0022               	movlb	2	; select bank2
  7501  175D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7502  175E  3F41               	moviw [1]fsr1
  7503  175F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7504  1760  0820               	movf	??_vfpfcnvrt^(0+256),w
  7505  1761  0084               	movwf	4
  7506  1762  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7507  1763  0085               	movwf	5
  7508  1764  0800               	movf	0,w	;code access
  7509  1765  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7510  1766  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7511  1767  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7512  1768  00F7               	movwf	tolower@c
  7513  1769  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7514  176A  00F8               	movwf	tolower@c+1
  7515  176B  31B0  2020  3195   	fcall	_tolower
  7516  176E  0877               	movf	?_tolower,w
  7517  176F  0022               	movlb	2	; select bank2
  7518  1770  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7519  1771  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7520  1772  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  7521                           
  7522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  7523  1773  0835               	movf	vfpfcnvrt@ct^(0+256),w
  7524  1774  1903               	btfsc	3,2
  7525  1775  2FB9               	goto	l8009
  7526                           
  7527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  7528  1776  0021               	movlb	1	; select bank1
  7529  1777  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7530  1778  0086               	movwf	6
  7531  1779  3001               	movlw	1	; select bank2/3
  7532  177A  0087               	movwf	7
  7533  177B  3F40               	moviw [0]fsr1
  7534  177C  0022               	movlb	2	; select bank2
  7535  177D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7536  177E  3F41               	moviw [1]fsr1
  7537  177F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7538  1780  3001               	movlw	1
  7539  1781  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7540  1782  0084               	movwf	4
  7541  1783  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7542  1784  1803               	skipnc
  7543  1785  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7544  1786  0085               	movwf	5
  7545  1787  0800               	movf	0,w	;code access
  7546  1788  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7547  1789  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7548  178A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7549  178B  00F7               	movwf	tolower@c
  7550  178C  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7551  178D  00F8               	movwf	tolower@c+1
  7552  178E  31B0  2020  3195   	fcall	_tolower
  7553  1791  0877               	movf	?_tolower,w
  7554  1792  0022               	movlb	2	; select bank2
  7555  1793  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7556  1794  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7557  1795  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  7558                           
  7559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  7560  1796  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  7561  1797  1903               	btfsc	3,2
  7562  1798  2FB9               	goto	l8009
  7563                           
  7564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  7565  1799  0021               	movlb	1	; select bank1
  7566  179A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7567  179B  0086               	movwf	6
  7568  179C  3001               	movlw	1	; select bank2/3
  7569  179D  0087               	movwf	7
  7570  179E  3F40               	moviw [0]fsr1
  7571  179F  0022               	movlb	2	; select bank2
  7572  17A0  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7573  17A1  3F41               	moviw [1]fsr1
  7574  17A2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7575  17A3  3002               	movlw	2
  7576  17A4  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7577  17A5  0084               	movwf	4
  7578  17A6  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7579  17A7  1803               	skipnc
  7580  17A8  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7581  17A9  0085               	movwf	5
  7582  17AA  0800               	movf	0,w	;code access
  7583  17AB  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7584  17AC  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7585  17AD  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7586  17AE  00F7               	movwf	tolower@c
  7587  17AF  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7588  17B0  00F8               	movwf	tolower@c+1
  7589  17B1  31B0  2020  3195   	fcall	_tolower
  7590  17B4  0877               	movf	?_tolower,w
  7591  17B5  0022               	movlb	2	; select bank2
  7592  17B6  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7593  17B7  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7594  17B8  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  7595  17B9                     l8009:	
  7596                           
  7597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7598  17B9  0021               	movlb	1	; select bank1
  7599  17BA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7600  17BB  0086               	movwf	6
  7601  17BC  3001               	movlw	1	; select bank2/3
  7602  17BD  0087               	movwf	7
  7603  17BE  3F40               	moviw [0]fsr1
  7604  17BF  0022               	movlb	2	; select bank2
  7605  17C0  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7606  17C1  3F41               	moviw [1]fsr1
  7607  17C2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7608  17C3  0820               	movf	??_vfpfcnvrt^(0+256),w
  7609  17C4  0084               	movwf	4
  7610  17C5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7611  17C6  0085               	movwf	5
  7612  17C7  0012               	moviw fsr0++
  7613  17C8  3A63               	xorlw	99
  7614  17C9  31A8  1D03         	btfss	3,2
  7615  17CB  28EE               	goto	l8019
  7616                           
  7617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7618  17CC  0021               	movlb	1	; select bank1
  7619  17CD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7620  17CE  0086               	movwf	6
  7621  17CF  3001               	movlw	1	; select bank2/3
  7622  17D0  0087               	movwf	7
  7623  17D1  3001               	movlw	1
  7624  17D2  0781               	addwf	1,f
  7625  17D3  3141               	addfsr 1,1
  7626  17D4  1803               	skipnc
  7627  17D5  0A81               	incf	1,f
  7628                           
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7630  17D6  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7631  17D7  0086               	movwf	6
  7632  17D8  3001               	movlw	1	; select bank2/3
  7633  17D9  0087               	movwf	7
  7634  17DA  0801               	movf	1,w
  7635  17DB  0084               	movwf	4
  7636  17DC  3001               	movlw	1	; select bank2/3
  7637  17DD  0085               	movwf	5
  7638  17DE  3002               	movlw	2
  7639  17DF  0781               	addwf	1,f
  7640  17E0  0800               	movf	0,w
  7641  17E1  0022               	movlb	2	; select bank2
  7642  17E2  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7643  17E3  0820               	movf	??_vfpfcnvrt^(0+256),w
  7644  17E4  00C5               	movwf	vfpfcnvrt@c^(0+256)
  7645                           
  7646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7647  17E5  0021               	movlb	1	; select bank1
  7648  17E6  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  7649  17E7  0020               	movlb	0	; select bank0
  7650  17E8  00B1               	movwf	ctoa@fp+1
  7651  17E9  0021               	movlb	1	; select bank1
  7652  17EA  086C               	movf	vfpfcnvrt@fp^(0+128),w
  7653  17EB  0020               	movlb	0	; select bank0
  7654  17EC  00B0               	movwf	ctoa@fp
  7655  17ED  0022               	movlb	2	; select bank2
  7656  17EE  0845               	movf	vfpfcnvrt@c^(0+256),w
  7657  17EF  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7658  17F0  0820               	movf	??_vfpfcnvrt^(0+256),w
  7659  17F1  0020               	movlb	0	; select bank0
  7660  17F2  00B2               	movwf	ctoa@c
  7661  17F3  31B0  20AE         	fcall	_ctoa
  7662  17F5  0020               	movlb	0	; select bank0
  7663  17F6  0831               	movf	?_ctoa+1,w
  7664  17F7  0021               	movlb	1	; select bank1
  7665  17F8  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
  7666  17F9  0020               	movlb	0	; select bank0
  7667  17FA  0830               	movf	?_ctoa,w
  7668  17FB  0021               	movlb	1	; select bank1
  7669  17FC  00EC               	movwf	?_vfpfcnvrt^(0+128)
  7670  17FD  0008               	return
  7671  17FE                     L16:	
  7672  17FE                     L15:	
  7673  17FE  318F  2FD8         	ljmp	l8375
  7674                           
  7675                           	psect	text10
  7676  1B4B                     __ptext10:	
  7677 ;; *************** function _xtoa *****************
  7678 ;; Defined at:
  7679 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7682 ;;		 -> vsnprintf@f(6), 
  7683 ;;  d               8   18[BANK0 ] unsigned long long 
  7684 ;;  x               1   26[BANK0 ] unsigned char 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  n               8   43[BANK0 ] unsigned long long 
  7687 ;;  c               2   53[BANK0 ] int 
  7688 ;;  i               2   51[BANK0 ] int 
  7689 ;;  w               2   41[BANK0 ] int 
  7690 ;;  p               2   39[BANK0 ] int 
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  2   16[BANK0 ] int 
  7693 ;; Registers used:
  7694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7700 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7701 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7702 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7703 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7704 ;;Total ram usage:       39 bytes
  7705 ;; Hardware stack levels used:    1
  7706 ;; Hardware stack levels required when called:    5
  7707 ;; This function calls:
  7708 ;;		_isalpha
  7709 ;;		_isupper
  7710 ;;		_pad
  7711 ;;		_toupper
  7712 ;; This function is called by:
  7713 ;;		_vfpfcnvrt
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function _xtoa
  7719  1B4B                     _xtoa:	
  7720                           
  7721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7722                           
  7723                           ;incstack = 0
  7724                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7725  1B4B  0023               	movlb	3	; select bank3
  7726  1B4C  1BB3               	btfsc	(_prec+1)^(0+384),7
  7727  1B4D  2B52               	goto	l827
  7728                           
  7729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7730  1B4E  30FD               	movlw	253
  7731  1B4F  05B4               	andwf	_flags^(0+384),f
  7732  1B50  30FF               	movlw	255
  7733  1B51  05B5               	andwf	(_flags+1)^(0+384),f
  7734  1B52                     l827:	
  7735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  7736                           
  7737                           
  7738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7739  1B52  0833               	movf	(_prec+1)^(0+384),w
  7740  1B53  3A80               	xorlw	128
  7741  1B54  0020               	movlb	0	; select bank0
  7742  1B55  00BB               	movwf	??_xtoa
  7743  1B56  3080               	movlw	128
  7744  1B57  023B               	subwf	??_xtoa,w
  7745  1B58  1D03               	skipz
  7746  1B59  2B5D               	goto	u10815
  7747  1B5A  3001               	movlw	1
  7748  1B5B  0023               	movlb	3	; select bank3
  7749  1B5C  0232               	subwf	_prec^(0+384),w
  7750  1B5D                     u10815:	
  7751  1B5D  1803               	skipnc
  7752  1B5E  2B65               	goto	l7821
  7753  1B5F  3001               	movlw	1
  7754  1B60  0020               	movlb	0	; select bank0
  7755  1B61  00C7               	movwf	xtoa@p
  7756  1B62  3000               	movlw	0
  7757  1B63  00C8               	movwf	xtoa@p+1
  7758  1B64  2B6D               	goto	l831
  7759  1B65                     l7821:	
  7760  1B65  0023               	movlb	3	; select bank3
  7761  1B66  0833               	movf	(_prec+1)^(0+384),w
  7762  1B67  0020               	movlb	0	; select bank0
  7763  1B68  00C8               	movwf	xtoa@p+1
  7764  1B69  0023               	movlb	3	; select bank3
  7765  1B6A  0832               	movf	_prec^(0+384),w
  7766  1B6B  0020               	movlb	0	; select bank0
  7767  1B6C  00C7               	movwf	xtoa@p
  7768  1B6D                     l831:	
  7769                           
  7770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7771  1B6D  0023               	movlb	3	; select bank3
  7772  1B6E  0831               	movf	(_width+1)^(0+384),w
  7773  1B6F  0020               	movlb	0	; select bank0
  7774  1B70  00CA               	movwf	xtoa@w+1
  7775  1B71  0023               	movlb	3	; select bank3
  7776  1B72  0830               	movf	_width^(0+384),w
  7777  1B73  0020               	movlb	0	; select bank0
  7778  1B74  00C9               	movwf	xtoa@w
  7779                           
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7781  1B75  0023               	movlb	3	; select bank3
  7782  1B76  1E34               	btfss	_flags^(0+384),4
  7783  1B77  2B7D               	goto	l7827
  7784                           
  7785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7786  1B78  30FE               	movlw	254
  7787  1B79  0020               	movlb	0	; select bank0
  7788  1B7A  07C9               	addwf	xtoa@w,f
  7789  1B7B  30FF               	movlw	255
  7790  1B7C  3DCA               	addwfc	xtoa@w+1,f
  7791  1B7D                     l7827:	
  7792                           
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7794  1B7D  0020               	movlb	0	; select bank0
  7795  1B7E  0832               	movf	xtoa@d,w
  7796  1B7F  00CB               	movwf	xtoa@n
  7797  1B80  0833               	movf	xtoa@d+1,w
  7798  1B81  00CC               	movwf	xtoa@n+1
  7799  1B82  0834               	movf	xtoa@d+2,w
  7800  1B83  00CD               	movwf	xtoa@n+2
  7801  1B84  0835               	movf	xtoa@d+3,w
  7802  1B85  00CE               	movwf	xtoa@n+3
  7803  1B86  0836               	movf	xtoa@d+4,w
  7804  1B87  00CF               	movwf	xtoa@n+4
  7805  1B88  0837               	movf	xtoa@d+5,w
  7806  1B89  00D0               	movwf	xtoa@n+5
  7807  1B8A  0838               	movf	xtoa@d+6,w
  7808  1B8B  00D1               	movwf	xtoa@n+6
  7809  1B8C  0839               	movf	xtoa@d+7,w
  7810  1B8D  00D2               	movwf	xtoa@n+7
  7811                           
  7812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7813  1B8E  304F               	movlw	79
  7814  1B8F  00D3               	movwf	xtoa@i
  7815  1B90  3000               	movlw	0
  7816  1B91  00D4               	movwf	xtoa@i+1
  7817                           
  7818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7819  1B92  0025               	movlb	5	; select bank5
  7820  1B93  01EF               	clrf	(_dbuf^(0+640)+79)
  7821                           
  7822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7823  1B94  2C3F               	goto	l7859
  7824  1B95                     l7831:	
  7825                           
  7826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7827  1B95  30FF               	movlw	255
  7828  1B96  0020               	movlb	0	; select bank0
  7829  1B97  07D3               	addwf	xtoa@i,f
  7830  1B98  30FF               	movlw	255
  7831  1B99  3DD4               	addwfc	xtoa@i+1,f
  7832                           
  7833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7834  1B9A  300F               	movlw	15
  7835  1B9B  054B               	andwf	xtoa@n,w
  7836  1B9C  00D5               	movwf	xtoa@c
  7837  1B9D  3000               	movlw	0
  7838  1B9E  054C               	andwf	xtoa@n+1,w
  7839  1B9F  00D6               	movwf	xtoa@c+1
  7840                           
  7841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7842  1BA0  0856               	movf	xtoa@c+1,w
  7843  1BA1  3A80               	xorlw	128
  7844  1BA2  00BB               	movwf	??_xtoa
  7845  1BA3  3080               	movlw	128
  7846  1BA4  023B               	subwf	??_xtoa,w
  7847  1BA5  1D03               	skipz
  7848  1BA6  2BA9               	goto	u10835
  7849  1BA7  300A               	movlw	10
  7850  1BA8  0255               	subwf	xtoa@c,w
  7851  1BA9                     u10835:	
  7852  1BA9  1C03               	skipc
  7853  1BAA  2BAF               	goto	l7835
  7854  1BAB  0020               	movlb	0	; select bank0
  7855  1BAC  0855               	movf	xtoa@c,w
  7856  1BAD  3E57               	addlw	87
  7857  1BAE  2BB2               	goto	L2
  7858  1BAF                     l7835:	
  7859  1BAF  0020               	movlb	0	; select bank0
  7860  1BB0  0855               	movf	xtoa@c,w
  7861  1BB1  3E30               	addlw	48
  7862  1BB2                     L2:	
  7863  1BB2  00D5               	movwf	xtoa@c
  7864  1BB3  3000               	movlw	0
  7865  1BB4  3D56               	addwfc	xtoa@c+1,w
  7866  1BB5  00D6               	movwf	xtoa@c+1
  7867  1BB6  083A               	movf	xtoa@x,w
  7868  1BB7  3EBF               	addlw	191
  7869  1BB8  00BB               	movwf	??_xtoa
  7870  1BB9  30FF               	movlw	255
  7871  1BBA  1803               	skipnc
  7872  1BBB  3000               	movlw	0
  7873  1BBC  00BC               	movwf	??_xtoa+1
  7874  1BBD  3000               	movlw	0
  7875  1BBE  023C               	subwf	??_xtoa+1,w
  7876  1BBF  301A               	movlw	26
  7877  1BC0  1903               	skipnz
  7878  1BC1  023B               	subwf	??_xtoa,w
  7879  1BC2  1803               	btfsc	3,0
  7880  1BC3  2BC6               	goto	u10840
  7881  1BC4  3001               	movlw	1
  7882  1BC5  2BC7               	goto	u10850
  7883  1BC6                     u10840:	
  7884  1BC6  3000               	movlw	0
  7885  1BC7                     u10850:	
  7886  1BC7  00BD               	movwf	??_xtoa+2
  7887  1BC8  01BE               	clrf	??_xtoa+3
  7888  1BC9  083D               	movf	??_xtoa+2,w
  7889  1BCA  00C3               	movwf	_xtoa$1301
  7890  1BCB  083E               	movf	??_xtoa+3,w
  7891  1BCC  00C4               	movwf	_xtoa$1301+1
  7892  1BCD  0843               	movf	_xtoa$1301,w
  7893  1BCE  0444               	iorwf	_xtoa$1301+1,w
  7894  1BCF  1903               	btfsc	3,2
  7895  1BD0  2BFD               	goto	l7851
  7896  1BD1  3020               	movlw	32
  7897  1BD2  0455               	iorwf	xtoa@c,w
  7898  1BD3  00BB               	movwf	??_xtoa
  7899  1BD4  3000               	movlw	0
  7900  1BD5  0456               	iorwf	xtoa@c+1,w
  7901  1BD6  00BC               	movwf	??_xtoa+1
  7902  1BD7  083B               	movf	??_xtoa,w
  7903  1BD8  3E9F               	addlw	159
  7904  1BD9  00BD               	movwf	??_xtoa+2
  7905  1BDA  30FF               	movlw	255
  7906  1BDB  3D3C               	addwfc	??_xtoa+1,w
  7907  1BDC  00BE               	movwf	??_xtoa+3
  7908  1BDD  3000               	movlw	0
  7909  1BDE  023E               	subwf	??_xtoa+3,w
  7910  1BDF  301A               	movlw	26
  7911  1BE0  1903               	skipnz
  7912  1BE1  023D               	subwf	??_xtoa+2,w
  7913  1BE2  1803               	btfsc	3,0
  7914  1BE3  2BE6               	goto	u10870
  7915  1BE4  3001               	movlw	1
  7916  1BE5  2BE7               	goto	u10880
  7917  1BE6                     u10870:	
  7918  1BE6  3000               	movlw	0
  7919  1BE7                     u10880:	
  7920  1BE7  00BF               	movwf	??_xtoa+4
  7921  1BE8  01C0               	clrf	??_xtoa+5
  7922  1BE9  083F               	movf	??_xtoa+4,w
  7923  1BEA  00C5               	movwf	_xtoa$1302
  7924  1BEB  0840               	movf	??_xtoa+5,w
  7925  1BEC  00C6               	movwf	_xtoa$1302+1
  7926  1BED  0845               	movf	_xtoa$1302,w
  7927  1BEE  0446               	iorwf	_xtoa$1302+1,w
  7928  1BEF  1903               	btfsc	3,2
  7929  1BF0  2BFD               	goto	l7851
  7930                           
  7931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7932  1BF1  0856               	movf	xtoa@c+1,w
  7933  1BF2  00F8               	movwf	toupper@c+1
  7934  1BF3  0855               	movf	xtoa@c,w
  7935  1BF4  00F7               	movwf	toupper@c
  7936  1BF5  31B0  2042  319B   	fcall	_toupper
  7937  1BF8  0878               	movf	?_toupper+1,w
  7938  1BF9  0020               	movlb	0	; select bank0
  7939  1BFA  00D6               	movwf	xtoa@c+1
  7940  1BFB  0877               	movf	?_toupper,w
  7941  1BFC  00D5               	movwf	xtoa@c
  7942  1BFD                     l7851:	
  7943                           
  7944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7945  1BFD  0855               	movf	xtoa@c,w
  7946  1BFE  00BB               	movwf	??_xtoa
  7947  1BFF  0853               	movf	xtoa@i,w
  7948  1C00  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7949  1C01  0086               	movwf	6
  7950  1C02  3002               	movlw	2	; select bank5/6
  7951  1C03  0087               	movwf	7
  7952  1C04  083B               	movf	??_xtoa,w
  7953  1C05  0081               	movwf	1
  7954                           
  7955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7956  1C06  30FF               	movlw	255
  7957  1C07  07C7               	addwf	xtoa@p,f
  7958  1C08  30FF               	movlw	255
  7959  1C09  3DC8               	addwfc	xtoa@p+1,f
  7960                           
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7962  1C0A  30FF               	movlw	255
  7963  1C0B  07C9               	addwf	xtoa@w,f
  7964  1C0C  30FF               	movlw	255
  7965  1C0D  3DCA               	addwfc	xtoa@w+1,f
  7966                           
  7967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7968  1C0E  304B               	movlw	low xtoa@n
  7969  1C0F  0086               	movwf	6
  7970  1C10  3000               	movlw	high xtoa@n
  7971  1C11  0087               	movwf	7
  7972  1C12  3F40               	moviw [0]fsr1
  7973  1C13  00BB               	movwf	??_xtoa
  7974  1C14  3F41               	moviw [1]fsr1
  7975  1C15  00BC               	movwf	??_xtoa+1
  7976  1C16  3F42               	moviw [2]fsr1
  7977  1C17  00BD               	movwf	??_xtoa+2
  7978  1C18  3F43               	moviw [3]fsr1
  7979  1C19  00BE               	movwf	??_xtoa+3
  7980  1C1A  3F44               	moviw [4]fsr1
  7981  1C1B  00BF               	movwf	??_xtoa+4
  7982  1C1C  3F45               	moviw [5]fsr1
  7983  1C1D  00C0               	movwf	??_xtoa+5
  7984  1C1E  3F46               	moviw [6]fsr1
  7985  1C1F  00C1               	movwf	??_xtoa+6
  7986  1C20  3F47               	moviw [7]fsr1
  7987  1C21  00C2               	movwf	??_xtoa+7
  7988  1C22  3004               	movlw	4
  7989  1C23                     u10905:	
  7990  1C23  0020               	movlb	0	; select bank0
  7991  1C24  36C2               	lsrf	??_xtoa+7,f
  7992  1C25  0CC1               	rrf	??_xtoa+6,f
  7993  1C26  0CC0               	rrf	??_xtoa+5,f
  7994  1C27  0CBF               	rrf	??_xtoa+4,f
  7995  1C28  0CBE               	rrf	??_xtoa+3,f
  7996  1C29  0CBD               	rrf	??_xtoa+2,f
  7997  1C2A  0CBC               	rrf	??_xtoa+1,f
  7998  1C2B  0CBB               	rrf	??_xtoa,f
  7999  1C2C  0B89               	decfsz	9,f
  8000  1C2D  2C23               	goto	u10905
  8001  1C2E  0020               	movlb	0	; select bank0
  8002  1C2F  0842               	movf	??_xtoa+7,w
  8003  1C30  00D2               	movwf	xtoa@n+7
  8004  1C31  0841               	movf	??_xtoa+6,w
  8005  1C32  00D1               	movwf	xtoa@n+6
  8006  1C33  0840               	movf	??_xtoa+5,w
  8007  1C34  00D0               	movwf	xtoa@n+5
  8008  1C35  083F               	movf	??_xtoa+4,w
  8009  1C36  00CF               	movwf	xtoa@n+4
  8010  1C37  083E               	movf	??_xtoa+3,w
  8011  1C38  00CE               	movwf	xtoa@n+3
  8012  1C39  083D               	movf	??_xtoa+2,w
  8013  1C3A  00CD               	movwf	xtoa@n+2
  8014  1C3B  083C               	movf	??_xtoa+1,w
  8015  1C3C  00CC               	movwf	xtoa@n+1
  8016  1C3D  083B               	movf	??_xtoa,w
  8017  1C3E  00CB               	movwf	xtoa@n
  8018  1C3F                     l7859:	
  8019                           
  8020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8021  1C3F  0020               	movlb	0	; select bank0
  8022  1C40  0854               	movf	xtoa@i+1,w
  8023  1C41  3A80               	xorlw	128
  8024  1C42  00BB               	movwf	??_xtoa
  8025  1C43  3080               	movlw	128
  8026  1C44  023B               	subwf	??_xtoa,w
  8027  1C45  1D03               	skipz
  8028  1C46  2C49               	goto	u10915
  8029  1C47  3002               	movlw	2
  8030  1C48  0253               	subwf	xtoa@i,w
  8031  1C49                     u10915:	
  8032  1C49  1C03               	skipc
  8033  1C4A  2C70               	goto	l852
  8034  1C4B  0020               	movlb	0	; select bank0
  8035  1C4C  084B               	movf	xtoa@n,w
  8036  1C4D  044C               	iorwf	xtoa@n+1,w
  8037  1C4E  044D               	iorwf	xtoa@n+2,w
  8038  1C4F  044E               	iorwf	xtoa@n+3,w
  8039  1C50  044F               	iorwf	xtoa@n+4,w
  8040  1C51  0450               	iorwf	xtoa@n+5,w
  8041  1C52  0451               	iorwf	xtoa@n+6,w
  8042  1C53  0452               	iorwf	xtoa@n+7,w
  8043  1C54  1D03               	skipz
  8044  1C55  2B95               	goto	l7831
  8045  1C56  0848               	movf	xtoa@p+1,w
  8046  1C57  3A80               	xorlw	128
  8047  1C58  00BB               	movwf	??_xtoa
  8048  1C59  3080               	movlw	128
  8049  1C5A  023B               	subwf	??_xtoa,w
  8050  1C5B  1D03               	skipz
  8051  1C5C  2C5F               	goto	u10935
  8052  1C5D  3001               	movlw	1
  8053  1C5E  0247               	subwf	xtoa@p,w
  8054  1C5F                     u10935:	
  8055  1C5F  1803               	skipnc
  8056  1C60  2B95               	goto	l7831
  8057  1C61  0020               	movlb	0	; select bank0
  8058  1C62  084A               	movf	xtoa@w+1,w
  8059  1C63  3A80               	xorlw	128
  8060  1C64  00BB               	movwf	??_xtoa
  8061  1C65  3080               	movlw	128
  8062  1C66  023B               	subwf	??_xtoa,w
  8063  1C67  1D03               	skipz
  8064  1C68  2C6B               	goto	u10945
  8065  1C69  3001               	movlw	1
  8066  1C6A  0249               	subwf	xtoa@w,w
  8067  1C6B                     u10945:	
  8068  1C6B  1C03               	skipc
  8069  1C6C  2C70               	goto	l852
  8070  1C6D  0023               	movlb	3	; select bank3
  8071  1C6E  18B4               	btfsc	_flags^(0+384),1
  8072  1C6F  2B95               	goto	l7831
  8073  1C70                     l852:	
  8074                           
  8075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8076  1C70  0023               	movlb	3	; select bank3
  8077  1C71  1E34               	btfss	_flags^(0+384),4
  8078  1C72  2C8E               	goto	l7875
  8079                           
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8081  1C73  30FF               	movlw	255
  8082  1C74  0020               	movlb	0	; select bank0
  8083  1C75  07D3               	addwf	xtoa@i,f
  8084  1C76  30FF               	movlw	255
  8085  1C77  3DD4               	addwfc	xtoa@i+1,f
  8086                           
  8087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8088  1C78  083A               	movf	xtoa@x,w
  8089  1C79  00BB               	movwf	??_xtoa
  8090  1C7A  0853               	movf	xtoa@i,w
  8091  1C7B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8092  1C7C  0086               	movwf	6
  8093  1C7D  3002               	movlw	2	; select bank5/6
  8094  1C7E  0087               	movwf	7
  8095  1C7F  083B               	movf	??_xtoa,w
  8096  1C80  0081               	movwf	1
  8097                           
  8098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  8099  1C81  30FF               	movlw	255
  8100  1C82  07D3               	addwf	xtoa@i,f
  8101  1C83  30FF               	movlw	255
  8102  1C84  3DD4               	addwfc	xtoa@i+1,f
  8103                           
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  8105  1C85  3030               	movlw	48
  8106  1C86  00BB               	movwf	??_xtoa
  8107  1C87  0853               	movf	xtoa@i,w
  8108  1C88  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8109  1C89  0086               	movwf	6
  8110  1C8A  3002               	movlw	2	; select bank5/6
  8111  1C8B  0087               	movwf	7
  8112  1C8C  083B               	movf	??_xtoa,w
  8113  1C8D  0081               	movwf	1
  8114  1C8E                     l7875:	
  8115                           
  8116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8117  1C8E  0020               	movlb	0	; select bank0
  8118  1C8F  0831               	movf	xtoa@fp+1,w
  8119  1C90  00A7               	movwf	pad@fp+1
  8120  1C91  0830               	movf	xtoa@fp,w
  8121  1C92  00A6               	movwf	pad@fp
  8122  1C93  0853               	movf	xtoa@i,w
  8123  1C94  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8124  1C95  00BB               	movwf	??_xtoa
  8125  1C96  083B               	movf	??_xtoa,w
  8126  1C97  00A8               	movwf	pad@buf
  8127  1C98  084A               	movf	xtoa@w+1,w
  8128  1C99  00AA               	movwf	pad@p+1
  8129  1C9A  0849               	movf	xtoa@w,w
  8130  1C9B  00A9               	movwf	pad@p
  8131  1C9C  31B3  2343         	fcall	_pad
  8132  1C9E  0020               	movlb	0	; select bank0
  8133  1C9F  0827               	movf	?_pad+1,w
  8134  1CA0  00B1               	movwf	?_xtoa+1
  8135  1CA1  0826               	movf	?_pad,w
  8136  1CA2  00B0               	movwf	?_xtoa
  8137  1CA3  0008               	return
  8138  1CA4                     __end_of_xtoa:	
  8139                           
  8140                           	psect	text11
  8141  3042                     __ptext11:	
  8142 ;; *************** function _toupper *****************
  8143 ;; Defined at:
  8144 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  c               2    7[COMMON] int 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  2    7[COMMON] int 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8160 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8161 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8162 ;;Total ram usage:        8 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    2
  8165 ;; This function calls:
  8166 ;;		_islower
  8167 ;; This function is called by:
  8168 ;;		_xtoa
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function _toupper
  8174  3042                     _toupper:	
  8175                           
  8176                           ;incstack = 0
  8177                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8178  3042  0877               	movf	toupper@c,w
  8179  3043  3E9F               	addlw	159
  8180  3044  0020               	movlb	0	; select bank0
  8181  3045  00A0               	movwf	??_toupper
  8182  3046  30FF               	movlw	255
  8183  3047  3D78               	addwfc	toupper@c+1,w
  8184  3048  00A1               	movwf	??_toupper+1
  8185  3049  3000               	movlw	0
  8186  304A  0221               	subwf	??_toupper+1,w
  8187  304B  301A               	movlw	26
  8188  304C  1903               	skipnz
  8189  304D  0220               	subwf	??_toupper,w
  8190  304E  1803               	btfsc	3,0
  8191  304F  2852               	goto	u9790
  8192  3050  3001               	movlw	1
  8193  3051  2853               	goto	u9800
  8194  3052                     u9790:	
  8195  3052  3000               	movlw	0
  8196  3053                     u9800:	
  8197  3053  00A2               	movwf	??_toupper+2
  8198  3054  01A3               	clrf	??_toupper+3
  8199  3055  0822               	movf	??_toupper+2,w
  8200  3056  00F9               	movwf	_toupper$1908
  8201  3057  0823               	movf	??_toupper+3,w
  8202  3058  00FA               	movwf	_toupper$1908+1
  8203  3059  0879               	movf	_toupper$1908,w
  8204  305A  047A               	iorwf	_toupper$1908+1,w
  8205  305B  1903               	btfsc	3,2
  8206  305C  0008               	return
  8207  305D  305F               	movlw	95
  8208  305E  0577               	andwf	toupper@c,w
  8209  305F  00F7               	movwf	?_toupper
  8210  3060  3000               	movlw	0
  8211  3061  0578               	andwf	toupper@c+1,w
  8212  3062  00F8               	movwf	?_toupper+1
  8213  3063  0008               	return
  8214  3064                     __end_of_toupper:	
  8215                           
  8216                           	psect	text12
  8217  07E9                     __ptext12:	
  8218 ;; *************** function _islower *****************
  8219 ;; Defined at:
  8220 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  c               2    1[COMMON] int 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  2    1[COMMON] int 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:        6 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_toupper
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           
  8249                           ;psect for function _islower
  8250  07E9                     _islower:	
  8251                           
  8252                           ;incstack = 0
  8253                           ; Regs used in _islower: [wreg+status,2+status,0]
  8254  07E9  0871               	movf	islower@c,w
  8255  07EA  3E9F               	addlw	159
  8256  07EB  00F3               	movwf	??_islower
  8257  07EC  30FF               	movlw	255
  8258  07ED  3D72               	addwfc	islower@c+1,w
  8259  07EE  00F4               	movwf	??_islower+1
  8260  07EF  3000               	movlw	0
  8261  07F0  0274               	subwf	??_islower+1,w
  8262  07F1  301A               	movlw	26
  8263  07F2  1903               	skipnz
  8264  07F3  0273               	subwf	??_islower,w
  8265  07F4  1803               	btfsc	3,0
  8266  07F5  2FF8               	goto	u9700
  8267  07F6  3001               	movlw	1
  8268  07F7  2FF9               	goto	u9710
  8269  07F8                     u9700:	
  8270  07F8  3000               	movlw	0
  8271  07F9                     u9710:	
  8272  07F9  00F5               	movwf	??_islower+2
  8273  07FA  01F6               	clrf	??_islower+3
  8274  07FB  0875               	movf	??_islower+2,w
  8275  07FC  00F1               	movwf	?_islower
  8276  07FD  0876               	movf	??_islower+3,w
  8277  07FE  00F2               	movwf	?_islower+1
  8278  07FF  0008               	return
  8279  0800                     __end_of_islower:	
  8280                           
  8281                           	psect	text13
  8282  3F63                     __ptext13:	
  8283 ;; *************** function _isalpha *****************
  8284 ;; Defined at:
  8285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  c               2    1[COMMON] int 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  2    1[COMMON] int 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8301 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8302 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8303 ;;Total ram usage:        8 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    1
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_xtoa
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function _isalpha
  8315  3F63                     _isalpha:	
  8316                           
  8317                           ;incstack = 0
  8318                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8319  3F63  3020               	movlw	32
  8320  3F64  0471               	iorwf	isalpha@c,w
  8321  3F65  00F3               	movwf	??_isalpha
  8322  3F66  3000               	movlw	0
  8323  3F67  0472               	iorwf	isalpha@c+1,w
  8324  3F68  00F4               	movwf	??_isalpha+1
  8325  3F69  0873               	movf	??_isalpha,w
  8326  3F6A  3E9F               	addlw	159
  8327  3F6B  00F5               	movwf	??_isalpha+2
  8328  3F6C  30FF               	movlw	255
  8329  3F6D  3D74               	addwfc	??_isalpha+1,w
  8330  3F6E  00F6               	movwf	??_isalpha+3
  8331  3F6F  3000               	movlw	0
  8332  3F70  0276               	subwf	??_isalpha+3,w
  8333  3F71  301A               	movlw	26
  8334  3F72  1903               	skipnz
  8335  3F73  0275               	subwf	??_isalpha+2,w
  8336  3F74  1803               	btfsc	3,0
  8337  3F75  2F78               	goto	u5700
  8338  3F76  3001               	movlw	1
  8339  3F77  2F79               	goto	u5710
  8340  3F78                     u5700:	
  8341  3F78  3000               	movlw	0
  8342  3F79                     u5710:	
  8343  3F79  00F7               	movwf	??_isalpha+4
  8344  3F7A  01F8               	clrf	??_isalpha+5
  8345  3F7B  0877               	movf	??_isalpha+4,w
  8346  3F7C  00F1               	movwf	?_isalpha
  8347  3F7D  0878               	movf	??_isalpha+5,w
  8348  3F7E  00F2               	movwf	?_isalpha+1
  8349  3F7F  0008               	return
  8350  3F80                     __end_of_isalpha:	
  8351                           
  8352                           	psect	text14
  8353  2130                     __ptext14:	
  8354 ;; *************** function _utoa *****************
  8355 ;; Defined at:
  8356 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8359 ;;		 -> vsnprintf@f(6), 
  8360 ;;  d               8   18[BANK0 ] unsigned long long 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  n               8   31[BANK0 ] unsigned long long 
  8363 ;;  i               2   39[BANK0 ] int 
  8364 ;;  w               2   29[BANK0 ] int 
  8365 ;;  p               2   27[BANK0 ] int 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  2   16[BANK0 ] int 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8375 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8376 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8378 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8379 ;;Total ram usage:       25 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    5
  8382 ;; This function calls:
  8383 ;;		___lodiv
  8384 ;;		___lomod
  8385 ;;		_pad
  8386 ;; This function is called by:
  8387 ;;		_vfpfcnvrt
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function _utoa
  8393  2130                     _utoa:	
  8394                           
  8395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8396                           
  8397                           ;incstack = 0
  8398                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8399  2130  0023               	movlb	3	; select bank3
  8400  2131  1BB3               	btfsc	(_prec+1)^(0+384),7
  8401  2132  2937               	goto	l812
  8402                           
  8403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8404  2133  30FD               	movlw	253
  8405  2134  05B4               	andwf	_flags^(0+384),f
  8406  2135  30FF               	movlw	255
  8407  2136  05B5               	andwf	(_flags+1)^(0+384),f
  8408  2137                     l812:	
  8409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  8410                           
  8411                           
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8413  2137  0833               	movf	(_prec+1)^(0+384),w
  8414  2138  3A80               	xorlw	128
  8415  2139  0020               	movlb	0	; select bank0
  8416  213A  00BA               	movwf	??_utoa
  8417  213B  3080               	movlw	128
  8418  213C  023A               	subwf	??_utoa,w
  8419  213D  1D03               	skipz
  8420  213E  2942               	goto	u10745
  8421  213F  3001               	movlw	1
  8422  2140  0023               	movlb	3	; select bank3
  8423  2141  0232               	subwf	_prec^(0+384),w
  8424  2142                     u10745:	
  8425  2142  1803               	skipnc
  8426  2143  294A               	goto	l7785
  8427  2144  3001               	movlw	1
  8428  2145  0020               	movlb	0	; select bank0
  8429  2146  00BB               	movwf	utoa@p
  8430  2147  3000               	movlw	0
  8431  2148  00BC               	movwf	utoa@p+1
  8432  2149  2952               	goto	l816
  8433  214A                     l7785:	
  8434  214A  0023               	movlb	3	; select bank3
  8435  214B  0833               	movf	(_prec+1)^(0+384),w
  8436  214C  0020               	movlb	0	; select bank0
  8437  214D  00BC               	movwf	utoa@p+1
  8438  214E  0023               	movlb	3	; select bank3
  8439  214F  0832               	movf	_prec^(0+384),w
  8440  2150  0020               	movlb	0	; select bank0
  8441  2151  00BB               	movwf	utoa@p
  8442  2152                     l816:	
  8443                           
  8444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8445  2152  0023               	movlb	3	; select bank3
  8446  2153  0831               	movf	(_width+1)^(0+384),w
  8447  2154  0020               	movlb	0	; select bank0
  8448  2155  00BE               	movwf	utoa@w+1
  8449  2156  0023               	movlb	3	; select bank3
  8450  2157  0830               	movf	_width^(0+384),w
  8451  2158  0020               	movlb	0	; select bank0
  8452  2159  00BD               	movwf	utoa@w
  8453                           
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8455  215A  0832               	movf	utoa@d,w
  8456  215B  00BF               	movwf	utoa@n
  8457  215C  0833               	movf	utoa@d+1,w
  8458  215D  00C0               	movwf	utoa@n+1
  8459  215E  0834               	movf	utoa@d+2,w
  8460  215F  00C1               	movwf	utoa@n+2
  8461  2160  0835               	movf	utoa@d+3,w
  8462  2161  00C2               	movwf	utoa@n+3
  8463  2162  0836               	movf	utoa@d+4,w
  8464  2163  00C3               	movwf	utoa@n+4
  8465  2164  0837               	movf	utoa@d+5,w
  8466  2165  00C4               	movwf	utoa@n+5
  8467  2166  0838               	movf	utoa@d+6,w
  8468  2167  00C5               	movwf	utoa@n+6
  8469  2168  0839               	movf	utoa@d+7,w
  8470  2169  00C6               	movwf	utoa@n+7
  8471                           
  8472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8473  216A  304F               	movlw	79
  8474  216B  00C7               	movwf	utoa@i
  8475  216C  3000               	movlw	0
  8476  216D  00C8               	movwf	utoa@i+1
  8477                           
  8478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8479  216E  0025               	movlb	5	; select bank5
  8480  216F  01EF               	clrf	(_dbuf^(0+640)+79)
  8481                           
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8483  2170  29F6               	goto	l7801
  8484  2171                     l7803:	
  8485  2171  083F               	movf	utoa@n,w
  8486  2172  0440               	iorwf	utoa@n+1,w
  8487  2173  0441               	iorwf	utoa@n+2,w
  8488  2174  0442               	iorwf	utoa@n+3,w
  8489  2175  0443               	iorwf	utoa@n+4,w
  8490  2176  0444               	iorwf	utoa@n+5,w
  8491  2177  0445               	iorwf	utoa@n+6,w
  8492  2178  0446               	iorwf	utoa@n+7,w
  8493  2179  1D03               	skipz
  8494  217A  2995               	goto	l7791
  8495  217B  083C               	movf	utoa@p+1,w
  8496  217C  3A80               	xorlw	128
  8497  217D  00BA               	movwf	??_utoa
  8498  217E  3080               	movlw	128
  8499  217F  023A               	subwf	??_utoa,w
  8500  2180  1D03               	skipz
  8501  2181  2984               	goto	u10775
  8502  2182  3001               	movlw	1
  8503  2183  023B               	subwf	utoa@p,w
  8504  2184                     u10775:	
  8505  2184  1803               	skipnc
  8506  2185  2995               	goto	l7791
  8507  2186  0020               	movlb	0	; select bank0
  8508  2187  083E               	movf	utoa@w+1,w
  8509  2188  3A80               	xorlw	128
  8510  2189  00BA               	movwf	??_utoa
  8511  218A  3080               	movlw	128
  8512  218B  023A               	subwf	??_utoa,w
  8513  218C  1D03               	skipz
  8514  218D  2990               	goto	u10785
  8515  218E  3001               	movlw	1
  8516  218F  023D               	subwf	utoa@w,w
  8517  2190                     u10785:	
  8518  2190  1C03               	skipc
  8519  2191  29FB               	goto	l7811
  8520  2192  0023               	movlb	3	; select bank3
  8521  2193  1CB4               	btfss	_flags^(0+384),1
  8522  2194  29FB               	goto	l7811
  8523  2195                     l7791:	
  8524                           
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8526  2195  30FF               	movlw	255
  8527  2196  0020               	movlb	0	; select bank0
  8528  2197  07C7               	addwf	utoa@i,f
  8529  2198  30FF               	movlw	255
  8530  2199  3DC8               	addwfc	utoa@i+1,f
  8531                           
  8532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8533  219A  300A               	movlw	10
  8534  219B  00A0               	movwf	___lomod@divisor
  8535  219C  01A1               	clrf	___lomod@divisor+1
  8536  219D  01A2               	clrf	___lomod@divisor+2
  8537  219E  01A3               	clrf	___lomod@divisor+3
  8538  219F  01A4               	clrf	___lomod@divisor+4
  8539  21A0  01A5               	clrf	___lomod@divisor+5
  8540  21A1  01A6               	clrf	___lomod@divisor+6
  8541  21A2  01A7               	clrf	___lomod@divisor+7
  8542  21A3  083F               	movf	utoa@n,w
  8543  21A4  00A8               	movwf	___lomod@dividend
  8544  21A5  0840               	movf	utoa@n+1,w
  8545  21A6  00A9               	movwf	___lomod@dividend+1
  8546  21A7  0841               	movf	utoa@n+2,w
  8547  21A8  00AA               	movwf	___lomod@dividend+2
  8548  21A9  0842               	movf	utoa@n+3,w
  8549  21AA  00AB               	movwf	___lomod@dividend+3
  8550  21AB  0843               	movf	utoa@n+4,w
  8551  21AC  00AC               	movwf	___lomod@dividend+4
  8552  21AD  0844               	movf	utoa@n+5,w
  8553  21AE  00AD               	movwf	___lomod@dividend+5
  8554  21AF  0845               	movf	utoa@n+6,w
  8555  21B0  00AE               	movwf	___lomod@dividend+6
  8556  21B1  0846               	movf	utoa@n+7,w
  8557  21B2  00AF               	movwf	___lomod@dividend+7
  8558  21B3  31A8  2001  31A1   	fcall	___lomod
  8559  21B6  0020               	movlb	0	; select bank0
  8560  21B7  0820               	movf	?___lomod,w
  8561  21B8  3E30               	addlw	48
  8562  21B9  00BA               	movwf	??_utoa
  8563  21BA  0847               	movf	utoa@i,w
  8564  21BB  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8565  21BC  0086               	movwf	6
  8566  21BD  3002               	movlw	2	; select bank5/6
  8567  21BE  0087               	movwf	7
  8568  21BF  083A               	movf	??_utoa,w
  8569  21C0  0081               	movwf	1
  8570                           
  8571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8572  21C1  30FF               	movlw	255
  8573  21C2  07BB               	addwf	utoa@p,f
  8574  21C3  30FF               	movlw	255
  8575  21C4  3DBC               	addwfc	utoa@p+1,f
  8576                           
  8577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8578  21C5  30FF               	movlw	255
  8579  21C6  07BD               	addwf	utoa@w,f
  8580  21C7  30FF               	movlw	255
  8581  21C8  3DBE               	addwfc	utoa@w+1,f
  8582                           
  8583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8584  21C9  300A               	movlw	10
  8585  21CA  00A0               	movwf	___lodiv@divisor
  8586  21CB  01A1               	clrf	___lodiv@divisor+1
  8587  21CC  01A2               	clrf	___lodiv@divisor+2
  8588  21CD  01A3               	clrf	___lodiv@divisor+3
  8589  21CE  01A4               	clrf	___lodiv@divisor+4
  8590  21CF  01A5               	clrf	___lodiv@divisor+5
  8591  21D0  01A6               	clrf	___lodiv@divisor+6
  8592  21D1  01A7               	clrf	___lodiv@divisor+7
  8593  21D2  083F               	movf	utoa@n,w
  8594  21D3  00A8               	movwf	___lodiv@dividend
  8595  21D4  0840               	movf	utoa@n+1,w
  8596  21D5  00A9               	movwf	___lodiv@dividend+1
  8597  21D6  0841               	movf	utoa@n+2,w
  8598  21D7  00AA               	movwf	___lodiv@dividend+2
  8599  21D8  0842               	movf	utoa@n+3,w
  8600  21D9  00AB               	movwf	___lodiv@dividend+3
  8601  21DA  0843               	movf	utoa@n+4,w
  8602  21DB  00AC               	movwf	___lodiv@dividend+4
  8603  21DC  0844               	movf	utoa@n+5,w
  8604  21DD  00AD               	movwf	___lodiv@dividend+5
  8605  21DE  0845               	movf	utoa@n+6,w
  8606  21DF  00AE               	movwf	___lodiv@dividend+6
  8607  21E0  0846               	movf	utoa@n+7,w
  8608  21E1  00AF               	movwf	___lodiv@dividend+7
  8609  21E2  31B7  2702  31A1   	fcall	___lodiv
  8610  21E5  0020               	movlb	0	; select bank0
  8611  21E6  0820               	movf	?___lodiv,w
  8612  21E7  00BF               	movwf	utoa@n
  8613  21E8  0821               	movf	?___lodiv+1,w
  8614  21E9  00C0               	movwf	utoa@n+1
  8615  21EA  0822               	movf	?___lodiv+2,w
  8616  21EB  00C1               	movwf	utoa@n+2
  8617  21EC  0823               	movf	?___lodiv+3,w
  8618  21ED  00C2               	movwf	utoa@n+3
  8619  21EE  0824               	movf	?___lodiv+4,w
  8620  21EF  00C3               	movwf	utoa@n+4
  8621  21F0  0825               	movf	?___lodiv+5,w
  8622  21F1  00C4               	movwf	utoa@n+5
  8623  21F2  0826               	movf	?___lodiv+6,w
  8624  21F3  00C5               	movwf	utoa@n+6
  8625  21F4  0827               	movf	?___lodiv+7,w
  8626  21F5  00C6               	movwf	utoa@n+7
  8627  21F6                     l7801:	
  8628                           
  8629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8630  21F6  0020               	movlb	0	; select bank0
  8631  21F7  0847               	movf	utoa@i,w
  8632  21F8  0448               	iorwf	utoa@i+1,w
  8633  21F9  1D03               	btfss	3,2
  8634  21FA  2971               	goto	l7803
  8635  21FB                     l7811:	
  8636                           
  8637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8638  21FB  0020               	movlb	0	; select bank0
  8639  21FC  0831               	movf	utoa@fp+1,w
  8640  21FD  00A7               	movwf	pad@fp+1
  8641  21FE  0830               	movf	utoa@fp,w
  8642  21FF  00A6               	movwf	pad@fp
  8643  2200  0847               	movf	utoa@i,w
  8644  2201  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8645  2202  00BA               	movwf	??_utoa
  8646  2203  083A               	movf	??_utoa,w
  8647  2204  00A8               	movwf	pad@buf
  8648  2205  083E               	movf	utoa@w+1,w
  8649  2206  00AA               	movwf	pad@p+1
  8650  2207  083D               	movf	utoa@w,w
  8651  2208  00A9               	movwf	pad@p
  8652  2209  31B3  2343         	fcall	_pad
  8653  220B  0020               	movlb	0	; select bank0
  8654  220C  0827               	movf	?_pad+1,w
  8655  220D  00B1               	movwf	?_utoa+1
  8656  220E  0826               	movf	?_pad,w
  8657  220F  00B0               	movwf	?_utoa
  8658  2210  0008               	return
  8659  2211                     __end_of_utoa:	
  8660                           
  8661                           	psect	text15
  8662  2801                     __ptext15:	
  8663 ;; *************** function ___lomod *****************
  8664 ;; Defined at:
  8665 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8668 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  counter         1    2[COMMON] unsigned char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  8    0[BANK0 ] unsigned long long 
  8673 ;; Registers used:
  8674 ;;		wreg, status,2, status,0
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8680 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8683 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8684 ;;Total ram usage:       18 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    1
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_utoa
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           
  8695                           ;psect for function ___lomod
  8696  2801                     ___lomod:	
  8697                           
  8698                           ;incstack = 0
  8699                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  8700  2801  0020               	movlb	0	; select bank0
  8701  2802  0820               	movf	___lomod@divisor,w
  8702  2803  0421               	iorwf	___lomod@divisor+1,w
  8703  2804  0422               	iorwf	___lomod@divisor+2,w
  8704  2805  0423               	iorwf	___lomod@divisor+3,w
  8705  2806  0424               	iorwf	___lomod@divisor+4,w
  8706  2807  0425               	iorwf	___lomod@divisor+5,w
  8707  2808  0426               	iorwf	___lomod@divisor+6,w
  8708  2809  0427               	iorwf	___lomod@divisor+7,w
  8709  280A  1903               	skipnz
  8710  280B  2859               	goto	l1202
  8711  280C  01F2               	clrf	___lomod@counter
  8712  280D  0AF2               	incf	___lomod@counter,f
  8713  280E                     l5101:	
  8714  280E  1BA7               	btfsc	___lomod@divisor+7,7
  8715  280F  281D               	goto	l5103
  8716  2810  35A0               	lslf	___lomod@divisor,f
  8717  2811  0DA1               	rlf	___lomod@divisor+1,f
  8718  2812  0DA2               	rlf	___lomod@divisor+2,f
  8719  2813  0DA3               	rlf	___lomod@divisor+3,f
  8720  2814  0DA4               	rlf	___lomod@divisor+4,f
  8721  2815  0DA5               	rlf	___lomod@divisor+5,f
  8722  2816  0DA6               	rlf	___lomod@divisor+6,f
  8723  2817  0DA7               	rlf	___lomod@divisor+7,f
  8724  2818  3001               	movlw	1
  8725  2819  00F1               	movwf	??___lomod
  8726  281A  0871               	movf	??___lomod,w
  8727  281B  07F2               	addwf	___lomod@counter,f
  8728  281C  280E               	goto	l5101
  8729  281D                     l5103:	
  8730  281D  0827               	movf	___lomod@divisor+7,w
  8731  281E  022F               	subwf	___lomod@dividend+7,w
  8732  281F  1D03               	skipz
  8733  2820  283B               	goto	u6475
  8734  2821  0826               	movf	___lomod@divisor+6,w
  8735  2822  022E               	subwf	___lomod@dividend+6,w
  8736  2823  1D03               	skipz
  8737  2824  283B               	goto	u6475
  8738  2825  0825               	movf	___lomod@divisor+5,w
  8739  2826  022D               	subwf	___lomod@dividend+5,w
  8740  2827  1D03               	skipz
  8741  2828  283B               	goto	u6475
  8742  2829  0824               	movf	___lomod@divisor+4,w
  8743  282A  022C               	subwf	___lomod@dividend+4,w
  8744  282B  1D03               	skipz
  8745  282C  283B               	goto	u6475
  8746  282D  0823               	movf	___lomod@divisor+3,w
  8747  282E  022B               	subwf	___lomod@dividend+3,w
  8748  282F  1D03               	skipz
  8749  2830  283B               	goto	u6475
  8750  2831  0822               	movf	___lomod@divisor+2,w
  8751  2832  022A               	subwf	___lomod@dividend+2,w
  8752  2833  1D03               	skipz
  8753  2834  283B               	goto	u6475
  8754  2835  0821               	movf	___lomod@divisor+1,w
  8755  2836  0229               	subwf	___lomod@dividend+1,w
  8756  2837  1D03               	skipz
  8757  2838  283B               	goto	u6475
  8758  2839  0820               	movf	___lomod@divisor,w
  8759  283A  0228               	subwf	___lomod@dividend,w
  8760  283B                     u6475:	
  8761  283B  1C03               	skipc
  8762  283C  284D               	goto	l5107
  8763  283D  0820               	movf	___lomod@divisor,w
  8764  283E  02A8               	subwf	___lomod@dividend,f
  8765  283F  0821               	movf	___lomod@divisor+1,w
  8766  2840  3BA9               	subwfb	___lomod@dividend+1,f
  8767  2841  0822               	movf	___lomod@divisor+2,w
  8768  2842  3BAA               	subwfb	___lomod@dividend+2,f
  8769  2843  0823               	movf	___lomod@divisor+3,w
  8770  2844  3BAB               	subwfb	___lomod@dividend+3,f
  8771  2845  0824               	movf	___lomod@divisor+4,w
  8772  2846  3BAC               	subwfb	___lomod@dividend+4,f
  8773  2847  0825               	movf	___lomod@divisor+5,w
  8774  2848  3BAD               	subwfb	___lomod@dividend+5,f
  8775  2849  0826               	movf	___lomod@divisor+6,w
  8776  284A  3BAE               	subwfb	___lomod@dividend+6,f
  8777  284B  0827               	movf	___lomod@divisor+7,w
  8778  284C  3BAF               	subwfb	___lomod@dividend+7,f
  8779  284D                     l5107:	
  8780  284D  36A7               	lsrf	___lomod@divisor+7,f
  8781  284E  0CA6               	rrf	___lomod@divisor+6,f
  8782  284F  0CA5               	rrf	___lomod@divisor+5,f
  8783  2850  0CA4               	rrf	___lomod@divisor+4,f
  8784  2851  0CA3               	rrf	___lomod@divisor+3,f
  8785  2852  0CA2               	rrf	___lomod@divisor+2,f
  8786  2853  0CA1               	rrf	___lomod@divisor+1,f
  8787  2854  0CA0               	rrf	___lomod@divisor,f
  8788  2855  3001               	movlw	1
  8789  2856  02F2               	subwf	___lomod@counter,f
  8790  2857  1D03               	btfss	3,2
  8791  2858  281D               	goto	l5103
  8792  2859                     l1202:	
  8793  2859  0828               	movf	___lomod@dividend,w
  8794  285A  00A0               	movwf	?___lomod
  8795  285B  0829               	movf	___lomod@dividend+1,w
  8796  285C  00A1               	movwf	?___lomod+1
  8797  285D  082A               	movf	___lomod@dividend+2,w
  8798  285E  00A2               	movwf	?___lomod+2
  8799  285F  082B               	movf	___lomod@dividend+3,w
  8800  2860  00A3               	movwf	?___lomod+3
  8801  2861  082C               	movf	___lomod@dividend+4,w
  8802  2862  00A4               	movwf	?___lomod+4
  8803  2863  082D               	movf	___lomod@dividend+5,w
  8804  2864  00A5               	movwf	?___lomod+5
  8805  2865  082E               	movf	___lomod@dividend+6,w
  8806  2866  00A6               	movwf	?___lomod+6
  8807  2867  082F               	movf	___lomod@dividend+7,w
  8808  2868  00A7               	movwf	?___lomod+7
  8809  2869  0008               	return
  8810  286A                     __end_of___lomod:	
  8811                           
  8812                           	psect	text16
  8813  3702                     __ptext16:	
  8814 ;; *************** function ___lodiv *****************
  8815 ;; Defined at:
  8816 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8819 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  quotient        8    2[COMMON] unsigned long long 
  8822 ;;  counter         1   10[COMMON] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  8    0[BANK0 ] unsigned long long 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8832 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8833 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8835 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8836 ;;Total ram usage:       26 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:    1
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_utoa
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           
  8847                           ;psect for function ___lodiv
  8848  3702                     ___lodiv:	
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8852  3702  3072               	movlw	low ___lodiv@quotient
  8853  3703  0086               	movwf	6
  8854  3704  3000               	movlw	high ___lodiv@quotient
  8855  3705  0087               	movwf	7
  8856  3706  3008               	movlw	8
  8857  3707  00F1               	movwf	??___lodiv
  8858  3708  3000               	movlw	0
  8859  3709                     u6400:	
  8860  3709  001E               	movwi fsr1++
  8861  370A  0BF1               	decfsz	??___lodiv,f
  8862  370B  2F09               	goto	u6400
  8863  370C  0020               	movlb	0	; select bank0
  8864  370D  0820               	movf	___lodiv@divisor,w
  8865  370E  0421               	iorwf	___lodiv@divisor+1,w
  8866  370F  0422               	iorwf	___lodiv@divisor+2,w
  8867  3710  0423               	iorwf	___lodiv@divisor+3,w
  8868  3711  0424               	iorwf	___lodiv@divisor+4,w
  8869  3712  0425               	iorwf	___lodiv@divisor+5,w
  8870  3713  0426               	iorwf	___lodiv@divisor+6,w
  8871  3714  0427               	iorwf	___lodiv@divisor+7,w
  8872  3715  1903               	skipnz
  8873  3716  2F6D               	goto	l1192
  8874  3717  01FA               	clrf	___lodiv@counter
  8875  3718  0AFA               	incf	___lodiv@counter,f
  8876  3719                     l5081:	
  8877  3719  1BA7               	btfsc	___lodiv@divisor+7,7
  8878  371A  2F28               	goto	l5083
  8879  371B  35A0               	lslf	___lodiv@divisor,f
  8880  371C  0DA1               	rlf	___lodiv@divisor+1,f
  8881  371D  0DA2               	rlf	___lodiv@divisor+2,f
  8882  371E  0DA3               	rlf	___lodiv@divisor+3,f
  8883  371F  0DA4               	rlf	___lodiv@divisor+4,f
  8884  3720  0DA5               	rlf	___lodiv@divisor+5,f
  8885  3721  0DA6               	rlf	___lodiv@divisor+6,f
  8886  3722  0DA7               	rlf	___lodiv@divisor+7,f
  8887  3723  3001               	movlw	1
  8888  3724  00F1               	movwf	??___lodiv
  8889  3725  0871               	movf	??___lodiv,w
  8890  3726  07FA               	addwf	___lodiv@counter,f
  8891  3727  2F19               	goto	l5081
  8892  3728                     l5083:	
  8893  3728  35F2               	lslf	___lodiv@quotient,f
  8894  3729  0DF3               	rlf	___lodiv@quotient+1,f
  8895  372A  0DF4               	rlf	___lodiv@quotient+2,f
  8896  372B  0DF5               	rlf	___lodiv@quotient+3,f
  8897  372C  0DF6               	rlf	___lodiv@quotient+4,f
  8898  372D  0DF7               	rlf	___lodiv@quotient+5,f
  8899  372E  0DF8               	rlf	___lodiv@quotient+6,f
  8900  372F  0DF9               	rlf	___lodiv@quotient+7,f
  8901  3730  0827               	movf	___lodiv@divisor+7,w
  8902  3731  022F               	subwf	___lodiv@dividend+7,w
  8903  3732  1D03               	skipz
  8904  3733  2F4E               	goto	u6435
  8905  3734  0826               	movf	___lodiv@divisor+6,w
  8906  3735  022E               	subwf	___lodiv@dividend+6,w
  8907  3736  1D03               	skipz
  8908  3737  2F4E               	goto	u6435
  8909  3738  0825               	movf	___lodiv@divisor+5,w
  8910  3739  022D               	subwf	___lodiv@dividend+5,w
  8911  373A  1D03               	skipz
  8912  373B  2F4E               	goto	u6435
  8913  373C  0824               	movf	___lodiv@divisor+4,w
  8914  373D  022C               	subwf	___lodiv@dividend+4,w
  8915  373E  1D03               	skipz
  8916  373F  2F4E               	goto	u6435
  8917  3740  0823               	movf	___lodiv@divisor+3,w
  8918  3741  022B               	subwf	___lodiv@dividend+3,w
  8919  3742  1D03               	skipz
  8920  3743  2F4E               	goto	u6435
  8921  3744  0822               	movf	___lodiv@divisor+2,w
  8922  3745  022A               	subwf	___lodiv@dividend+2,w
  8923  3746  1D03               	skipz
  8924  3747  2F4E               	goto	u6435
  8925  3748  0821               	movf	___lodiv@divisor+1,w
  8926  3749  0229               	subwf	___lodiv@dividend+1,w
  8927  374A  1D03               	skipz
  8928  374B  2F4E               	goto	u6435
  8929  374C  0820               	movf	___lodiv@divisor,w
  8930  374D  0228               	subwf	___lodiv@dividend,w
  8931  374E                     u6435:	
  8932  374E  1C03               	skipc
  8933  374F  2F61               	goto	l5091
  8934  3750  0820               	movf	___lodiv@divisor,w
  8935  3751  02A8               	subwf	___lodiv@dividend,f
  8936  3752  0821               	movf	___lodiv@divisor+1,w
  8937  3753  3BA9               	subwfb	___lodiv@dividend+1,f
  8938  3754  0822               	movf	___lodiv@divisor+2,w
  8939  3755  3BAA               	subwfb	___lodiv@dividend+2,f
  8940  3756  0823               	movf	___lodiv@divisor+3,w
  8941  3757  3BAB               	subwfb	___lodiv@dividend+3,f
  8942  3758  0824               	movf	___lodiv@divisor+4,w
  8943  3759  3BAC               	subwfb	___lodiv@dividend+4,f
  8944  375A  0825               	movf	___lodiv@divisor+5,w
  8945  375B  3BAD               	subwfb	___lodiv@dividend+5,f
  8946  375C  0826               	movf	___lodiv@divisor+6,w
  8947  375D  3BAE               	subwfb	___lodiv@dividend+6,f
  8948  375E  0827               	movf	___lodiv@divisor+7,w
  8949  375F  3BAF               	subwfb	___lodiv@dividend+7,f
  8950  3760  1472               	bsf	___lodiv@quotient,0
  8951  3761                     l5091:	
  8952  3761  36A7               	lsrf	___lodiv@divisor+7,f
  8953  3762  0CA6               	rrf	___lodiv@divisor+6,f
  8954  3763  0CA5               	rrf	___lodiv@divisor+5,f
  8955  3764  0CA4               	rrf	___lodiv@divisor+4,f
  8956  3765  0CA3               	rrf	___lodiv@divisor+3,f
  8957  3766  0CA2               	rrf	___lodiv@divisor+2,f
  8958  3767  0CA1               	rrf	___lodiv@divisor+1,f
  8959  3768  0CA0               	rrf	___lodiv@divisor,f
  8960  3769  3001               	movlw	1
  8961  376A  02FA               	subwf	___lodiv@counter,f
  8962  376B  1D03               	btfss	3,2
  8963  376C  2F28               	goto	l5083
  8964  376D                     l1192:	
  8965  376D  0872               	movf	___lodiv@quotient,w
  8966  376E  00A0               	movwf	?___lodiv
  8967  376F  0873               	movf	___lodiv@quotient+1,w
  8968  3770  00A1               	movwf	?___lodiv+1
  8969  3771  0874               	movf	___lodiv@quotient+2,w
  8970  3772  00A2               	movwf	?___lodiv+2
  8971  3773  0875               	movf	___lodiv@quotient+3,w
  8972  3774  00A3               	movwf	?___lodiv+3
  8973  3775  0876               	movf	___lodiv@quotient+4,w
  8974  3776  00A4               	movwf	?___lodiv+4
  8975  3777  0877               	movf	___lodiv@quotient+5,w
  8976  3778  00A5               	movwf	?___lodiv+5
  8977  3779  0878               	movf	___lodiv@quotient+6,w
  8978  377A  00A6               	movwf	?___lodiv+6
  8979  377B  0879               	movf	___lodiv@quotient+7,w
  8980  377C  00A7               	movwf	?___lodiv+7
  8981  377D  0008               	return
  8982  377E                     __end_of___lodiv:	
  8983                           
  8984                           	psect	text17
  8985  33E5                     __ptext17:	
  8986 ;; *************** function _strncmp *****************
  8987 ;; Defined at:
  8988 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8991 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  8992 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  8993 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  8994 ;;		 -> STR_14(21), STR_11(52), STR_8(57), STR_7(44), 
  8995 ;;		 -> STR_6(42), STR_3(43), 
  8996 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8997 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  8998 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  8999 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  9000 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  9001 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  9002 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  9003 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  9004 ;;		 -> STR_37(4), 
  9005 ;;  n               2    5[COMMON] unsigned int 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  r               2   10[COMMON] PTR const unsigned char 
  9008 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  9009 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  9010 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  9011 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  9012 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  9013 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  9014 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  9015 ;;		 -> STR_37(4), 
  9016 ;;  l               2    8[COMMON] PTR const unsigned char 
  9017 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  9018 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  9019 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  9020 ;;		 -> STR_14(21), STR_11(52), STR_8(57), STR_7(44), 
  9021 ;;		 -> STR_6(42), STR_3(43), 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2    1[COMMON] int 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9034 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9035 ;;Total ram usage:       11 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    1
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_vfpfcnvrt
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           
  9046                           ;psect for function _strncmp
  9047  33E5                     _strncmp:	
  9048                           
  9049                           ;incstack = 0
  9050                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  9051  33E5  0872               	movf	strncmp@_l+1,w
  9052  33E6  00F9               	movwf	strncmp@l+1
  9053  33E7  0871               	movf	strncmp@_l,w
  9054  33E8  00F8               	movwf	strncmp@l
  9055  33E9  0874               	movf	strncmp@_r+1,w
  9056  33EA  00FB               	movwf	strncmp@r+1
  9057  33EB  0873               	movf	strncmp@_r,w
  9058  33EC  00FA               	movwf	strncmp@r
  9059  33ED  3001               	movlw	1
  9060  33EE  02F5               	subwf	strncmp@n,f
  9061  33EF  3000               	movlw	0
  9062  33F0  3BF6               	subwfb	strncmp@n+1,f
  9063  33F1  0A75               	incf	strncmp@n,w
  9064  33F2  1D03               	skipz
  9065  33F3  2C1F               	goto	l6021
  9066  33F4  0A76               	incf	strncmp@n+1,w
  9067  33F5  1D03               	btfss	3,2
  9068  33F6  2C1F               	goto	l6021
  9069  33F7  01F1               	clrf	?_strncmp
  9070  33F8  01F2               	clrf	?_strncmp+1
  9071  33F9  0008               	return
  9072  33FA                     l6023:	
  9073  33FA  087A               	movf	strncmp@r,w
  9074  33FB  0084               	movwf	4
  9075  33FC  087B               	movf	strncmp@r+1,w
  9076  33FD  0085               	movwf	5
  9077  33FE  0012               	moviw fsr0++
  9078  33FF  1903               	btfsc	3,2
  9079  3400  2C26               	goto	l6029
  9080  3401  0875               	movf	strncmp@n,w
  9081  3402  0476               	iorwf	strncmp@n+1,w
  9082  3403  1903               	btfsc	3,2
  9083  3404  2C26               	goto	l6029
  9084  3405  087A               	movf	strncmp@r,w
  9085  3406  0084               	movwf	4
  9086  3407  087B               	movf	strncmp@r+1,w
  9087  3408  0085               	movwf	5
  9088  3409  0800               	movf	0,w	;code access
  9089  340A  00F7               	movwf	??_strncmp
  9090  340B  0878               	movf	strncmp@l,w
  9091  340C  0084               	movwf	4
  9092  340D  0879               	movf	strncmp@l+1,w
  9093  340E  0085               	movwf	5
  9094  340F  0800               	movf	0,w	;code access
  9095  3410  0677               	xorwf	??_strncmp,w
  9096  3411  1D03               	btfss	3,2
  9097  3412  2C26               	goto	l6029
  9098  3413  3001               	movlw	1
  9099  3414  07F8               	addwf	strncmp@l,f
  9100  3415  3000               	movlw	0
  9101  3416  3DF9               	addwfc	strncmp@l+1,f
  9102  3417  3001               	movlw	1
  9103  3418  07FA               	addwf	strncmp@r,f
  9104  3419  3000               	movlw	0
  9105  341A  3DFB               	addwfc	strncmp@r+1,f
  9106  341B  3001               	movlw	1
  9107  341C  02F5               	subwf	strncmp@n,f
  9108  341D  3000               	movlw	0
  9109  341E  3BF6               	subwfb	strncmp@n+1,f
  9110  341F                     l6021:	
  9111  341F  0878               	movf	strncmp@l,w
  9112  3420  0084               	movwf	4
  9113  3421  0879               	movf	strncmp@l+1,w
  9114  3422  0085               	movwf	5
  9115  3423  0012               	moviw fsr0++
  9116  3424  1D03               	btfss	3,2
  9117  3425  2BFA               	goto	l6023
  9118  3426                     l6029:	
  9119  3426  0878               	movf	strncmp@l,w
  9120  3427  0084               	movwf	4
  9121  3428  0879               	movf	strncmp@l+1,w
  9122  3429  0085               	movwf	5
  9123  342A  0800               	movf	0,w	;code access
  9124  342B  00F7               	movwf	??_strncmp
  9125  342C  087A               	movf	strncmp@r,w
  9126  342D  0084               	movwf	4
  9127  342E  087B               	movf	strncmp@r+1,w
  9128  342F  0085               	movwf	5
  9129  3430  0800               	movf	0,w	;code access
  9130  3431  0277               	subwf	??_strncmp,w
  9131  3432  00F1               	movwf	?_strncmp
  9132  3433  01F2               	clrf	?_strncmp+1
  9133  3434  1C03               	skipc
  9134  3435  03F2               	decf	?_strncmp+1,f
  9135  3436  0008               	return
  9136  3437                     __end_of_strncmp:	
  9137                           
  9138                           	psect	text18
  9139  2BDF                     __ptext18:	
  9140 ;; *************** function _stoa *****************
  9141 ;; Defined at:
  9142 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9145 ;;		 -> vsnprintf@f(6), 
  9146 ;;  s               1    2[BANK0 ] PTR unsigned char 
  9147 ;;		 -> ?_snprintf(2), adcGain(2), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  9150 ;;  l               2   18[BANK0 ] int 
  9151 ;;  p               2   16[BANK0 ] int 
  9152 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  9153 ;;		 -> ?_snprintf(2), stoa@nuls(7), adcGain(2), 
  9154 ;;  w               2   12[BANK0 ] int 
  9155 ;;  i               2   10[BANK0 ] int 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  2    0[BANK0 ] int 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9165 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9166 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9168 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9169 ;;Total ram usage:       22 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    3
  9172 ;; This function calls:
  9173 ;;		_fputc
  9174 ;;		_strlen
  9175 ;; This function is called by:
  9176 ;;		_vfpfcnvrt
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           
  9181                           ;psect for function _stoa
  9182  2BDF                     _stoa:	
  9183                           
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9185                           
  9186                           ;incstack = 0
  9187                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9188  2BDF  3036               	movlw	low stoa@F1174
  9189  2BE0  0086               	movwf	6
  9190  2BE1  3002               	movlw	high stoa@F1174
  9191  2BE2  0087               	movwf	7
  9192  2BE3  3023               	movlw	low stoa@nuls
  9193  2BE4  0084               	movwf	4
  9194  2BE5  3000               	movlw	high stoa@nuls
  9195  2BE6  0085               	movwf	5
  9196  2BE7  3007               	movlw	7
  9197  2BE8  00FA               	movwf	??_stoa
  9198  2BE9                     u10640:	
  9199  2BE9  0016               	moviw fsr1++
  9200  2BEA  001A               	movwi fsr0++
  9201  2BEB  0BFA               	decfsz	??_stoa,f
  9202  2BEC  2BE9               	goto	u10640
  9203                           
  9204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9205  2BED  0020               	movlb	0	; select bank0
  9206  2BEE  0822               	movf	stoa@s,w
  9207  2BEF  00AE               	movwf	stoa@cp
  9208  2BF0  3001               	movlw	1
  9209  2BF1  00AF               	movwf	stoa@cp+1
  9210                           
  9211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9212  2BF2  082E               	movf	stoa@cp,w
  9213  2BF3  042F               	iorwf	stoa@cp+1,w
  9214  2BF4  1D03               	btfss	3,2
  9215  2BF5  2BFA               	goto	l7737
  9216                           
  9217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9218  2BF6  3023               	movlw	low stoa@nuls
  9219  2BF7  00AE               	movwf	stoa@cp
  9220  2BF8  3000               	movlw	high stoa@nuls
  9221  2BF9  00AF               	movwf	stoa@cp+1
  9222  2BFA                     l7737:	
  9223                           
  9224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9225  2BFA  082F               	movf	stoa@cp+1,w
  9226  2BFB  00F2               	movwf	strlen@s+1
  9227  2BFC  082E               	movf	stoa@cp,w
  9228  2BFD  00F1               	movwf	strlen@s
  9229  2BFE  31BE  26B5  31AB   	fcall	_strlen
  9230  2C01  0872               	movf	?_strlen+1,w
  9231  2C02  0020               	movlb	0	; select bank0
  9232  2C03  00B3               	movwf	stoa@l+1
  9233  2C04  0871               	movf	?_strlen,w
  9234  2C05  00B2               	movwf	stoa@l
  9235                           
  9236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9237  2C06  0023               	movlb	3	; select bank3
  9238  2C07  0833               	movf	(_prec+1)^(0+384),w
  9239  2C08  0020               	movlb	0	; select bank0
  9240  2C09  00B1               	movwf	stoa@p+1
  9241  2C0A  0023               	movlb	3	; select bank3
  9242  2C0B  0832               	movf	_prec^(0+384),w
  9243  2C0C  0020               	movlb	0	; select bank0
  9244  2C0D  00B0               	movwf	stoa@p
  9245                           
  9246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9247  2C0E  1BB1               	btfsc	stoa@p+1,7
  9248  2C0F  2C21               	goto	l795
  9249  2C10  0831               	movf	stoa@p+1,w
  9250  2C11  3A80               	xorlw	128
  9251  2C12  00FA               	movwf	??_stoa
  9252  2C13  0833               	movf	stoa@l+1,w
  9253  2C14  3A80               	xorlw	128
  9254  2C15  027A               	subwf	??_stoa,w
  9255  2C16  1D03               	skipz
  9256  2C17  2C1A               	goto	u10675
  9257  2C18  0832               	movf	stoa@l,w
  9258  2C19  0230               	subwf	stoa@p,w
  9259  2C1A                     u10675:	
  9260  2C1A  1803               	btfsc	3,0
  9261  2C1B  2C21               	goto	l795
  9262  2C1C  0020               	movlb	0	; select bank0
  9263  2C1D  0831               	movf	stoa@p+1,w
  9264  2C1E  00B3               	movwf	stoa@l+1
  9265  2C1F  0830               	movf	stoa@p,w
  9266  2C20  00B2               	movwf	stoa@l
  9267  2C21                     l795:	
  9268                           
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9270  2C21  0020               	movlb	0	; select bank0
  9271  2C22  0833               	movf	stoa@l+1,w
  9272  2C23  00B1               	movwf	stoa@p+1
  9273  2C24  0832               	movf	stoa@l,w
  9274  2C25  00B0               	movwf	stoa@p
  9275                           
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9277  2C26  0023               	movlb	3	; select bank3
  9278  2C27  0831               	movf	(_width+1)^(0+384),w
  9279  2C28  0020               	movlb	0	; select bank0
  9280  2C29  00AD               	movwf	stoa@w+1
  9281  2C2A  0023               	movlb	3	; select bank3
  9282  2C2B  0830               	movf	_width^(0+384),w
  9283  2C2C  0020               	movlb	0	; select bank0
  9284  2C2D  00AC               	movwf	stoa@w
  9285                           
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9287  2C2E  0023               	movlb	3	; select bank3
  9288  2C2F  1C34               	btfss	_flags^(0+384),0
  9289  2C30  2C43               	goto	l7755
  9290  2C31  2C50               	goto	l7757
  9291  2C32                     l7751:	
  9292                           
  9293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9294  2C32  3020               	movlw	32
  9295  2C33  00F1               	movwf	fputc@c
  9296  2C34  3000               	movlw	0
  9297  2C35  00F2               	movwf	fputc@c+1
  9298  2C36  0020               	movlb	0	; select bank0
  9299  2C37  0821               	movf	stoa@fp+1,w
  9300  2C38  00F4               	movwf	fputc@fp+1
  9301  2C39  0820               	movf	stoa@fp,w
  9302  2C3A  00F3               	movwf	fputc@fp
  9303  2C3B  31A0  2000  31AB   	fcall	_fputc
  9304                           
  9305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9306  2C3E  3001               	movlw	1
  9307  2C3F  0020               	movlb	0	; select bank0
  9308  2C40  07B2               	addwf	stoa@l,f
  9309  2C41  3000               	movlw	0
  9310  2C42  3DB3               	addwfc	stoa@l+1,f
  9311  2C43                     l7755:	
  9312                           
  9313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9314  2C43  0020               	movlb	0	; select bank0
  9315  2C44  0833               	movf	stoa@l+1,w
  9316  2C45  3A80               	xorlw	128
  9317  2C46  00FA               	movwf	??_stoa
  9318  2C47  082D               	movf	stoa@w+1,w
  9319  2C48  3A80               	xorlw	128
  9320  2C49  027A               	subwf	??_stoa,w
  9321  2C4A  1D03               	skipz
  9322  2C4B  2C4E               	goto	u10695
  9323  2C4C  082C               	movf	stoa@w,w
  9324  2C4D  0232               	subwf	stoa@l,w
  9325  2C4E                     u10695:	
  9326  2C4E  1C03               	skipc
  9327  2C4F  2C32               	goto	l7751
  9328  2C50                     l7757:	
  9329                           
  9330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9331  2C50  0020               	movlb	0	; select bank0
  9332  2C51  01AA               	clrf	stoa@i
  9333  2C52  01AB               	clrf	stoa@i+1
  9334  2C53                     l7765:	
  9335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9336                           
  9337                           
  9338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9339  2C53  082B               	movf	stoa@i+1,w
  9340  2C54  3A80               	xorlw	128
  9341  2C55  00FA               	movwf	??_stoa
  9342  2C56  0831               	movf	stoa@p+1,w
  9343  2C57  3A80               	xorlw	128
  9344  2C58  027A               	subwf	??_stoa,w
  9345  2C59  1D03               	skipz
  9346  2C5A  2C5D               	goto	u10705
  9347  2C5B  0830               	movf	stoa@p,w
  9348  2C5C  022A               	subwf	stoa@i,w
  9349  2C5D                     u10705:	
  9350  2C5D  1803               	btfsc	3,0
  9351  2C5E  2C7C               	goto	l804
  9352                           
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9354  2C5F  0020               	movlb	0	; select bank0
  9355  2C60  082E               	movf	stoa@cp,w
  9356  2C61  0086               	movwf	6
  9357  2C62  082F               	movf	stoa@cp+1,w
  9358  2C63  0087               	movwf	7
  9359  2C64  0801               	movf	1,w
  9360  2C65  00FA               	movwf	??_stoa
  9361  2C66  01FB               	clrf	??_stoa+1
  9362  2C67  087A               	movf	??_stoa,w
  9363  2C68  00F1               	movwf	fputc@c
  9364  2C69  087B               	movf	??_stoa+1,w
  9365  2C6A  00F2               	movwf	fputc@c+1
  9366  2C6B  0821               	movf	stoa@fp+1,w
  9367  2C6C  00F4               	movwf	fputc@fp+1
  9368  2C6D  0820               	movf	stoa@fp,w
  9369  2C6E  00F3               	movwf	fputc@fp
  9370  2C6F  31A0  2000  31AB   	fcall	_fputc
  9371                           
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9373  2C72  3001               	movlw	1
  9374  2C73  0020               	movlb	0	; select bank0
  9375  2C74  07AE               	addwf	stoa@cp,f
  9376  2C75  3000               	movlw	0
  9377  2C76  3DAF               	addwfc	stoa@cp+1,f
  9378                           
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9380  2C77  3001               	movlw	1
  9381  2C78  07AA               	addwf	stoa@i,f
  9382  2C79  3000               	movlw	0
  9383  2C7A  3DAB               	addwfc	stoa@i+1,f
  9384  2C7B  2C53               	goto	l7765
  9385  2C7C                     l804:	
  9386                           
  9387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9388  2C7C  0023               	movlb	3	; select bank3
  9389  2C7D  1834               	btfsc	_flags^(0+384),0
  9390  2C7E  2C91               	goto	l7773
  9391  2C7F  2C9E               	goto	l7775
  9392  2C80                     l7769:	
  9393                           
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9395  2C80  3020               	movlw	32
  9396  2C81  00F1               	movwf	fputc@c
  9397  2C82  3000               	movlw	0
  9398  2C83  00F2               	movwf	fputc@c+1
  9399  2C84  0020               	movlb	0	; select bank0
  9400  2C85  0821               	movf	stoa@fp+1,w
  9401  2C86  00F4               	movwf	fputc@fp+1
  9402  2C87  0820               	movf	stoa@fp,w
  9403  2C88  00F3               	movwf	fputc@fp
  9404  2C89  31A0  2000  31AB   	fcall	_fputc
  9405                           
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9407  2C8C  3001               	movlw	1
  9408  2C8D  0020               	movlb	0	; select bank0
  9409  2C8E  07B2               	addwf	stoa@l,f
  9410  2C8F  3000               	movlw	0
  9411  2C90  3DB3               	addwfc	stoa@l+1,f
  9412  2C91                     l7773:	
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9415  2C91  0020               	movlb	0	; select bank0
  9416  2C92  0833               	movf	stoa@l+1,w
  9417  2C93  3A80               	xorlw	128
  9418  2C94  00FA               	movwf	??_stoa
  9419  2C95  082D               	movf	stoa@w+1,w
  9420  2C96  3A80               	xorlw	128
  9421  2C97  027A               	subwf	??_stoa,w
  9422  2C98  1D03               	skipz
  9423  2C99  2C9C               	goto	u10725
  9424  2C9A  082C               	movf	stoa@w,w
  9425  2C9B  0232               	subwf	stoa@l,w
  9426  2C9C                     u10725:	
  9427  2C9C  1C03               	skipc
  9428  2C9D  2C80               	goto	l7769
  9429  2C9E                     l7775:	
  9430                           
  9431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9432  2C9E  0020               	movlb	0	; select bank0
  9433  2C9F  0833               	movf	stoa@l+1,w
  9434  2CA0  00A1               	movwf	?_stoa+1
  9435  2CA1  0832               	movf	stoa@l,w
  9436  2CA2  00A0               	movwf	?_stoa
  9437  2CA3  0008               	return
  9438  2CA4                     __end_of_stoa:	
  9439                           
  9440                           	psect	text19
  9441  22FB                     __ptext19:	
  9442 ;; *************** function _otoa *****************
  9443 ;; Defined at:
  9444 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9447 ;;		 -> vsnprintf@f(6), 
  9448 ;;  d               8   18[BANK0 ] unsigned long long 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  n               8   40[BANK0 ] unsigned long long 
  9451 ;;  i               2   48[BANK0 ] int 
  9452 ;;  w               2   38[BANK0 ] int 
  9453 ;;  t               2   36[BANK0 ] int 
  9454 ;;  p               2   34[BANK0 ] int 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  2   16[BANK0 ] int 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9464 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9465 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9466 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9467 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9468 ;;Total ram usage:       34 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    5
  9471 ;; This function calls:
  9472 ;;		_pad
  9473 ;; This function is called by:
  9474 ;;		_vfpfcnvrt
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           
  9479                           ;psect for function _otoa
  9480  22FB                     _otoa:	
  9481                           
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9486  22FB  0023               	movlb	3	; select bank3
  9487  22FC  1BB3               	btfsc	(_prec+1)^(0+384),7
  9488  22FD  2B02               	goto	l773
  9489                           
  9490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9491  22FE  30FD               	movlw	253
  9492  22FF  05B4               	andwf	_flags^(0+384),f
  9493  2300  30FF               	movlw	255
  9494  2301  05B5               	andwf	(_flags+1)^(0+384),f
  9495  2302                     l773:	
  9496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  9497                           
  9498                           
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9500  2302  0833               	movf	(_prec+1)^(0+384),w
  9501  2303  3A80               	xorlw	128
  9502  2304  0020               	movlb	0	; select bank0
  9503  2305  00BA               	movwf	??_otoa
  9504  2306  3080               	movlw	128
  9505  2307  023A               	subwf	??_otoa,w
  9506  2308  1D03               	skipz
  9507  2309  2B0D               	goto	u10555
  9508  230A  3001               	movlw	1
  9509  230B  0023               	movlb	3	; select bank3
  9510  230C  0232               	subwf	_prec^(0+384),w
  9511  230D                     u10555:	
  9512  230D  1803               	skipnc
  9513  230E  2B15               	goto	l7691
  9514  230F  3001               	movlw	1
  9515  2310  0020               	movlb	0	; select bank0
  9516  2311  00C2               	movwf	otoa@p
  9517  2312  3000               	movlw	0
  9518  2313  00C3               	movwf	otoa@p+1
  9519  2314  2B1D               	goto	l777
  9520  2315                     l7691:	
  9521  2315  0023               	movlb	3	; select bank3
  9522  2316  0833               	movf	(_prec+1)^(0+384),w
  9523  2317  0020               	movlb	0	; select bank0
  9524  2318  00C3               	movwf	otoa@p+1
  9525  2319  0023               	movlb	3	; select bank3
  9526  231A  0832               	movf	_prec^(0+384),w
  9527  231B  0020               	movlb	0	; select bank0
  9528  231C  00C2               	movwf	otoa@p
  9529  231D                     l777:	
  9530                           
  9531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9532  231D  0023               	movlb	3	; select bank3
  9533  231E  0831               	movf	(_width+1)^(0+384),w
  9534  231F  0020               	movlb	0	; select bank0
  9535  2320  00C7               	movwf	otoa@w+1
  9536  2321  0023               	movlb	3	; select bank3
  9537  2322  0830               	movf	_width^(0+384),w
  9538  2323  0020               	movlb	0	; select bank0
  9539  2324  00C6               	movwf	otoa@w
  9540                           
  9541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9542  2325  0832               	movf	otoa@d,w
  9543  2326  00C8               	movwf	otoa@n
  9544  2327  0833               	movf	otoa@d+1,w
  9545  2328  00C9               	movwf	otoa@n+1
  9546  2329  0834               	movf	otoa@d+2,w
  9547  232A  00CA               	movwf	otoa@n+2
  9548  232B  0835               	movf	otoa@d+3,w
  9549  232C  00CB               	movwf	otoa@n+3
  9550  232D  0836               	movf	otoa@d+4,w
  9551  232E  00CC               	movwf	otoa@n+4
  9552  232F  0837               	movf	otoa@d+5,w
  9553  2330  00CD               	movwf	otoa@n+5
  9554  2331  0838               	movf	otoa@d+6,w
  9555  2332  00CE               	movwf	otoa@n+6
  9556  2333  0839               	movf	otoa@d+7,w
  9557  2334  00CF               	movwf	otoa@n+7
  9558                           
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9560  2335  304F               	movlw	79
  9561  2336  00D0               	movwf	otoa@i
  9562  2337  3000               	movlw	0
  9563  2338  00D1               	movwf	otoa@i+1
  9564                           
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9566  2339  0025               	movlb	5	; select bank5
  9567  233A  01EF               	clrf	(_dbuf^(0+640)+79)
  9568                           
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9570  233B  0020               	movlb	0	; select bank0
  9571  233C  01C4               	clrf	otoa@t
  9572  233D  01C5               	clrf	otoa@t+1
  9573                           
  9574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9575  233E  2BB2               	goto	l778
  9576  233F                     l7709:	
  9577  233F  0020               	movlb	0	; select bank0
  9578  2340  0848               	movf	otoa@n,w
  9579  2341  0449               	iorwf	otoa@n+1,w
  9580  2342  044A               	iorwf	otoa@n+2,w
  9581  2343  044B               	iorwf	otoa@n+3,w
  9582  2344  044C               	iorwf	otoa@n+4,w
  9583  2345  044D               	iorwf	otoa@n+5,w
  9584  2346  044E               	iorwf	otoa@n+6,w
  9585  2347  044F               	iorwf	otoa@n+7,w
  9586  2348  1D03               	skipz
  9587  2349  2B64               	goto	l7699
  9588  234A  0843               	movf	otoa@p+1,w
  9589  234B  3A80               	xorlw	128
  9590  234C  00BA               	movwf	??_otoa
  9591  234D  3080               	movlw	128
  9592  234E  023A               	subwf	??_otoa,w
  9593  234F  1D03               	skipz
  9594  2350  2B53               	goto	u10595
  9595  2351  3001               	movlw	1
  9596  2352  0242               	subwf	otoa@p,w
  9597  2353                     u10595:	
  9598  2353  1803               	skipnc
  9599  2354  2B64               	goto	l7699
  9600  2355  0020               	movlb	0	; select bank0
  9601  2356  0847               	movf	otoa@w+1,w
  9602  2357  3A80               	xorlw	128
  9603  2358  00BA               	movwf	??_otoa
  9604  2359  3080               	movlw	128
  9605  235A  023A               	subwf	??_otoa,w
  9606  235B  1D03               	skipz
  9607  235C  2B5F               	goto	u10605
  9608  235D  3001               	movlw	1
  9609  235E  0246               	subwf	otoa@w,w
  9610  235F                     u10605:	
  9611  235F  1C03               	skipc
  9612  2360  2BBD               	goto	l784
  9613  2361  0023               	movlb	3	; select bank3
  9614  2362  1CB4               	btfss	_flags^(0+384),1
  9615  2363  2BBD               	goto	l784
  9616  2364                     l7699:	
  9617                           
  9618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9619  2364  30FF               	movlw	255
  9620  2365  0020               	movlb	0	; select bank0
  9621  2366  07D0               	addwf	otoa@i,f
  9622  2367  30FF               	movlw	255
  9623  2368  3DD1               	addwfc	otoa@i+1,f
  9624                           
  9625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9626  2369  3007               	movlw	7
  9627  236A  0548               	andwf	otoa@n,w
  9628  236B  00C4               	movwf	otoa@t
  9629  236C  3000               	movlw	0
  9630  236D  0549               	andwf	otoa@n+1,w
  9631  236E  00C5               	movwf	otoa@t+1
  9632                           
  9633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9634  236F  0844               	movf	otoa@t,w
  9635  2370  3E30               	addlw	48
  9636  2371  00BA               	movwf	??_otoa
  9637  2372  0850               	movf	otoa@i,w
  9638  2373  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9639  2374  0086               	movwf	6
  9640  2375  3002               	movlw	2	; select bank5/6
  9641  2376  0087               	movwf	7
  9642  2377  083A               	movf	??_otoa,w
  9643  2378  0081               	movwf	1
  9644                           
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9646  2379  30FF               	movlw	255
  9647  237A  07C2               	addwf	otoa@p,f
  9648  237B  30FF               	movlw	255
  9649  237C  3DC3               	addwfc	otoa@p+1,f
  9650                           
  9651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9652  237D  30FF               	movlw	255
  9653  237E  07C6               	addwf	otoa@w,f
  9654  237F  30FF               	movlw	255
  9655  2380  3DC7               	addwfc	otoa@w+1,f
  9656                           
  9657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9658  2381  3048               	movlw	low otoa@n
  9659  2382  0086               	movwf	6
  9660  2383  3000               	movlw	high otoa@n
  9661  2384  0087               	movwf	7
  9662  2385  3F40               	moviw [0]fsr1
  9663  2386  00BA               	movwf	??_otoa
  9664  2387  3F41               	moviw [1]fsr1
  9665  2388  00BB               	movwf	??_otoa+1
  9666  2389  3F42               	moviw [2]fsr1
  9667  238A  00BC               	movwf	??_otoa+2
  9668  238B  3F43               	moviw [3]fsr1
  9669  238C  00BD               	movwf	??_otoa+3
  9670  238D  3F44               	moviw [4]fsr1
  9671  238E  00BE               	movwf	??_otoa+4
  9672  238F  3F45               	moviw [5]fsr1
  9673  2390  00BF               	movwf	??_otoa+5
  9674  2391  3F46               	moviw [6]fsr1
  9675  2392  00C0               	movwf	??_otoa+6
  9676  2393  3F47               	moviw [7]fsr1
  9677  2394  00C1               	movwf	??_otoa+7
  9678  2395  3003               	movlw	3
  9679  2396                     u10565:	
  9680  2396  0020               	movlb	0	; select bank0
  9681  2397  36C1               	lsrf	??_otoa+7,f
  9682  2398  0CC0               	rrf	??_otoa+6,f
  9683  2399  0CBF               	rrf	??_otoa+5,f
  9684  239A  0CBE               	rrf	??_otoa+4,f
  9685  239B  0CBD               	rrf	??_otoa+3,f
  9686  239C  0CBC               	rrf	??_otoa+2,f
  9687  239D  0CBB               	rrf	??_otoa+1,f
  9688  239E  0CBA               	rrf	??_otoa,f
  9689  239F  0B89               	decfsz	9,f
  9690  23A0  2B96               	goto	u10565
  9691  23A1  0020               	movlb	0	; select bank0
  9692  23A2  0841               	movf	??_otoa+7,w
  9693  23A3  00CF               	movwf	otoa@n+7
  9694  23A4  0840               	movf	??_otoa+6,w
  9695  23A5  00CE               	movwf	otoa@n+6
  9696  23A6  083F               	movf	??_otoa+5,w
  9697  23A7  00CD               	movwf	otoa@n+5
  9698  23A8  083E               	movf	??_otoa+4,w
  9699  23A9  00CC               	movwf	otoa@n+4
  9700  23AA  083D               	movf	??_otoa+3,w
  9701  23AB  00CB               	movwf	otoa@n+3
  9702  23AC  083C               	movf	??_otoa+2,w
  9703  23AD  00CA               	movwf	otoa@n+2
  9704  23AE  083B               	movf	??_otoa+1,w
  9705  23AF  00C9               	movwf	otoa@n+1
  9706  23B0  083A               	movf	??_otoa,w
  9707  23B1  00C8               	movwf	otoa@n
  9708  23B2                     l778:	
  9709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  9710                           
  9711                           
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9713  23B2  0851               	movf	otoa@i+1,w
  9714  23B3  3A80               	xorlw	128
  9715  23B4  00BA               	movwf	??_otoa
  9716  23B5  3080               	movlw	128
  9717  23B6  023A               	subwf	??_otoa,w
  9718  23B7  1D03               	skipz
  9719  23B8  2BBB               	goto	u10575
  9720  23B9  3001               	movlw	1
  9721  23BA  0250               	subwf	otoa@i,w
  9722  23BB                     u10575:	
  9723  23BB  1803               	btfsc	3,0
  9724  23BC  2B3F               	goto	l7709
  9725  23BD                     l784:	
  9726                           
  9727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9728  23BD  0023               	movlb	3	; select bank3
  9729  23BE  1E34               	btfss	_flags^(0+384),4
  9730  23BF  2BD6               	goto	l7725
  9731  23C0  0020               	movlb	0	; select bank0
  9732  23C1  0844               	movf	otoa@t,w
  9733  23C2  0445               	iorwf	otoa@t+1,w
  9734  23C3  1903               	btfsc	3,2
  9735  23C4  2BD6               	goto	l7725
  9736                           
  9737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9738  23C5  30FF               	movlw	255
  9739  23C6  07D0               	addwf	otoa@i,f
  9740  23C7  30FF               	movlw	255
  9741  23C8  3DD1               	addwfc	otoa@i+1,f
  9742                           
  9743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9744  23C9  3030               	movlw	48
  9745  23CA  00BA               	movwf	??_otoa
  9746  23CB  0850               	movf	otoa@i,w
  9747  23CC  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9748  23CD  0086               	movwf	6
  9749  23CE  3002               	movlw	2	; select bank5/6
  9750  23CF  0087               	movwf	7
  9751  23D0  083A               	movf	??_otoa,w
  9752  23D1  0081               	movwf	1
  9753                           
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9755  23D2  30FF               	movlw	255
  9756  23D3  07C6               	addwf	otoa@w,f
  9757  23D4  30FF               	movlw	255
  9758  23D5  3DC7               	addwfc	otoa@w+1,f
  9759  23D6                     l7725:	
  9760                           
  9761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9762  23D6  0020               	movlb	0	; select bank0
  9763  23D7  0831               	movf	otoa@fp+1,w
  9764  23D8  00A7               	movwf	pad@fp+1
  9765  23D9  0830               	movf	otoa@fp,w
  9766  23DA  00A6               	movwf	pad@fp
  9767  23DB  0850               	movf	otoa@i,w
  9768  23DC  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9769  23DD  00BA               	movwf	??_otoa
  9770  23DE  083A               	movf	??_otoa,w
  9771  23DF  00A8               	movwf	pad@buf
  9772  23E0  0847               	movf	otoa@w+1,w
  9773  23E1  00AA               	movwf	pad@p+1
  9774  23E2  0846               	movf	otoa@w,w
  9775  23E3  00A9               	movwf	pad@p
  9776  23E4  31B3  2343         	fcall	_pad
  9777  23E6  0020               	movlb	0	; select bank0
  9778  23E7  0827               	movf	?_pad+1,w
  9779  23E8  00B1               	movwf	?_otoa+1
  9780  23E9  0826               	movf	?_pad,w
  9781  23EA  00B0               	movwf	?_otoa
  9782  23EB  0008               	return
  9783  23EC                     __end_of_otoa:	
  9784                           
  9785                           	psect	text20
  9786  0063                     __ptext20:	
  9787 ;; *************** function _efgtoa *****************
  9788 ;; Defined at:
  9789 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;  fp              2    9[BANK1 ] PTR struct _IO_FILE
  9792 ;;		 -> vsnprintf@f(6), 
  9793 ;;  f               4   11[BANK1 ] PTR struct _IO_FILE
  9794 ;;  c               1   15[BANK1 ] unsigned char 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  u               4   72[BANK1 ] unsigned char 
  9797 ;;  g               4   64[BANK1 ] unsigned char 
  9798 ;;  l               4   58[BANK1 ] unsigned char 
  9799 ;;  h               4   54[BANK1 ] unsigned char 
  9800 ;;  ou              4   20[BANK1 ] unsigned char 
  9801 ;;  n               2   70[BANK1 ] int 
  9802 ;;  e               2   68[BANK1 ] int 
  9803 ;;  i               2   62[BANK1 ] int 
  9804 ;;  w               2   51[BANK1 ] int 
  9805 ;;  p               2   48[BANK1 ] int 
  9806 ;;  sign            2   46[BANK1 ] int 
  9807 ;;  d               2   44[BANK1 ] int 
  9808 ;;  ne              2   42[BANK1 ] int 
  9809 ;;  m               2   40[BANK1 ] int 
  9810 ;;  pp              2   38[BANK1 ] int 
  9811 ;;  t               2   36[BANK1 ] int 
  9812 ;;  mode            1   53[BANK1 ] unsigned char 
  9813 ;;  nmode           1   50[BANK1 ] unsigned char 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    9[BANK1 ] int 
  9816 ;; Registers used:
  9817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9823 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9824 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9825 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9826 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9827 ;;Total ram usage:       67 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    5
  9830 ;; This function calls:
  9831 ;;		___awdiv
  9832 ;;		___awmod
  9833 ;;		___fladd
  9834 ;;		___fldiv
  9835 ;;		___fleq
  9836 ;;		___flge
  9837 ;;		___flmul
  9838 ;;		___flneg
  9839 ;;		___flsub
  9840 ;;		___fltol
  9841 ;;		___fpclassifyf
  9842 ;;		_floorf
  9843 ;;		_isupper
  9844 ;;		_pad
  9845 ;;		_strcpy
  9846 ;;		_tolower
  9847 ;; This function is called by:
  9848 ;;		_vfpfcnvrt
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           
  9853                           ;psect for function _efgtoa
  9854  0063                     _efgtoa:	
  9855                           
  9856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9857                           
  9858                           ;incstack = 0
  9859                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9860  0063  0021               	movlb	1	; select bank1
  9861  0064  01CE               	clrf	efgtoa@sign^(0+128)
  9862  0065  01CF               	clrf	(efgtoa@sign+1)^(0+128)
  9863                           
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9865  0066  082E               	movf	(efgtoa@f+3)^(0+128),w
  9866  0067  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9867  0068  082D               	movf	(efgtoa@f+2)^(0+128),w
  9868  0069  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9869  006A  082C               	movf	(efgtoa@f+1)^(0+128),w
  9870  006B  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9871  006C  082B               	movf	efgtoa@f^(0+128),w
  9872  006D  00E0               	movwf	efgtoa@g^(0+128)
  9873                           
  9874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9875  006E  0863               	movf	(efgtoa@g+3)^(0+128),w
  9876  006F  0020               	movlb	0	; select bank0
  9877  0070  00DD               	movwf	___flge@ff1+3
  9878  0071  0021               	movlb	1	; select bank1
  9879  0072  0862               	movf	(efgtoa@g+2)^(0+128),w
  9880  0073  0020               	movlb	0	; select bank0
  9881  0074  00DC               	movwf	___flge@ff1+2
  9882  0075  0021               	movlb	1	; select bank1
  9883  0076  0861               	movf	(efgtoa@g+1)^(0+128),w
  9884  0077  0020               	movlb	0	; select bank0
  9885  0078  00DB               	movwf	___flge@ff1+1
  9886  0079  0021               	movlb	1	; select bank1
  9887  007A  0860               	movf	efgtoa@g^(0+128),w
  9888  007B  0020               	movlb	0	; select bank0
  9889  007C  00DA               	movwf	___flge@ff1
  9890  007D  3000               	movlw	0
  9891  007E  00E1               	movwf	___flge@ff2+3
  9892  007F  3000               	movlw	0
  9893  0080  00E0               	movwf	___flge@ff2+2
  9894  0081  3000               	movlw	0
  9895  0082  00DF               	movwf	___flge@ff2+1
  9896  0083  3000               	movlw	0
  9897  0084  00DE               	movwf	___flge@ff2
  9898  0085  31B6  2686  3180   	fcall	___flge
  9899  0088  1803               	btfsc	3,0
  9900  0089  28A3               	goto	l7403
  9901                           
  9902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9903  008A  3001               	movlw	1
  9904  008B  0021               	movlb	1	; select bank1
  9905  008C  00CE               	movwf	efgtoa@sign^(0+128)
  9906  008D  3000               	movlw	0
  9907  008E  00CF               	movwf	(efgtoa@sign^(0+128)+1)
  9908                           
  9909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9910  008F  0863               	movf	(efgtoa@g+3)^(0+128),w
  9911  0090  00F4               	movwf	___flneg@f1+3
  9912  0091  0862               	movf	(efgtoa@g+2)^(0+128),w
  9913  0092  00F3               	movwf	___flneg@f1+2
  9914  0093  0861               	movf	(efgtoa@g+1)^(0+128),w
  9915  0094  00F2               	movwf	___flneg@f1+1
  9916  0095  0860               	movf	efgtoa@g^(0+128),w
  9917  0096  00F1               	movwf	___flneg@f1
  9918  0097  31BE  265D  3180   	fcall	___flneg
  9919  009A  0874               	movf	?___flneg+3,w
  9920  009B  0021               	movlb	1	; select bank1
  9921  009C  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9922  009D  0873               	movf	?___flneg+2,w
  9923  009E  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9924  009F  0872               	movf	?___flneg+1,w
  9925  00A0  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9926  00A1  0871               	movf	?___flneg,w
  9927  00A2  00E0               	movwf	efgtoa@g^(0+128)
  9928  00A3                     l7403:	
  9929                           
  9930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9931  00A3  0021               	movlb	1	; select bank1
  9932  00A4  01E6               	clrf	efgtoa@n^(0+128)
  9933  00A5  01E7               	clrf	(efgtoa@n+1)^(0+128)
  9934                           
  9935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9936  00A6  0023               	movlb	3	; select bank3
  9937  00A7  0831               	movf	(_width+1)^(0+384),w
  9938  00A8  0021               	movlb	1	; select bank1
  9939  00A9  00D4               	movwf	(efgtoa@w+1)^(0+128)
  9940  00AA  0023               	movlb	3	; select bank3
  9941  00AB  0830               	movf	_width^(0+384),w
  9942  00AC  0021               	movlb	1	; select bank1
  9943  00AD  00D3               	movwf	efgtoa@w^(0+128)
  9944                           
  9945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9946  00AE  084E               	movf	efgtoa@sign^(0+128),w
  9947  00AF  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9948  00B0  1D03               	btfss	3,2
  9949  00B1  28B5               	goto	l7411
  9950  00B2  0023               	movlb	3	; select bank3
  9951  00B3  1D34               	btfss	_flags^(0+384),2
  9952  00B4  28CE               	goto	l7423
  9953  00B5                     l7411:	
  9954                           
  9955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9956  00B5  0021               	movlb	1	; select bank1
  9957  00B6  084E               	movf	efgtoa@sign^(0+128),w
  9958  00B7  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9959  00B8  1D03               	btfss	3,2
  9960  00B9  28BC               	goto	l7415
  9961  00BA  302B               	movlw	43
  9962  00BB  28BD               	goto	L3
  9963  00BC                     l7415:	
  9964  00BC  302D               	movlw	45
  9965  00BD                     L3:	
  9966  00BD  00B8               	movwf	_efgtoa$1254^(0+128)
  9967  00BE  3000               	movlw	0
  9968  00BF  00B9               	movwf	(_efgtoa$1254^(0+128)+1)
  9969  00C0  0838               	movf	_efgtoa$1254^(0+128),w
  9970  00C1  00B0               	movwf	??_efgtoa^(0+128)
  9971  00C2  0830               	movf	??_efgtoa^(0+128),w
  9972  00C3  0025               	movlb	5	; select bank5
  9973  00C4  00A0               	movwf	_dbuf^(0+640)
  9974                           
  9975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9976  00C5  3001               	movlw	1
  9977  00C6  0021               	movlb	1	; select bank1
  9978  00C7  07E6               	addwf	efgtoa@n^(0+128),f
  9979  00C8  3000               	movlw	0
  9980  00C9  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
  9981                           
  9982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9983  00CA  30FF               	movlw	255
  9984  00CB  07D3               	addwf	efgtoa@w^(0+128),f
  9985  00CC  30FF               	movlw	255
  9986  00CD  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
  9987  00CE                     l7423:	
  9988                           
  9989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9990  00CE  0021               	movlb	1	; select bank1
  9991  00CF  0863               	movf	(efgtoa@g+3)^(0+128),w
  9992  00D0  00F4               	movwf	___fpclassifyf@x+3
  9993  00D1  0862               	movf	(efgtoa@g+2)^(0+128),w
  9994  00D2  00F3               	movwf	___fpclassifyf@x+2
  9995  00D3  0861               	movf	(efgtoa@g+1)^(0+128),w
  9996  00D4  00F2               	movwf	___fpclassifyf@x+1
  9997  00D5  0860               	movf	efgtoa@g^(0+128),w
  9998  00D6  00F1               	movwf	___fpclassifyf@x
  9999  00D7  31B6  260E  3180   	fcall	___fpclassifyf
 10000  00DA  0371               	decf	?___fpclassifyf,w
 10001  00DB  0472               	iorwf	?___fpclassifyf+1,w
 10002  00DC  1D03               	btfss	3,2
 10003  00DD  292C               	goto	l7441
 10004  00DE  0021               	movlb	1	; select bank1
 10005  00DF  082F               	movf	efgtoa@c^(0+128),w
 10006  00E0  3EBF               	addlw	191
 10007  00E1  00B0               	movwf	??_efgtoa^(0+128)
 10008  00E2  30FF               	movlw	255
 10009  00E3  1803               	skipnc
 10010  00E4  3000               	movlw	0
 10011  00E5  00B1               	movwf	(??_efgtoa^(0+128)+1)
 10012  00E6  3000               	movlw	0
 10013  00E7  0231               	subwf	(??_efgtoa+1)^(0+128),w
 10014  00E8  301A               	movlw	26
 10015  00E9  1903               	skipnz
 10016  00EA  0230               	subwf	??_efgtoa^(0+128),w
 10017  00EB  1803               	btfsc	3,0
 10018  00EC  28EF               	goto	u10070
 10019  00ED  3001               	movlw	1
 10020  00EE  28F0               	goto	u10080
 10021  00EF                     u10070:	
 10022  00EF  3000               	movlw	0
 10023  00F0                     u10080:	
 10024  00F0  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10025  00F1  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 10026  00F2  0832               	movf	(??_efgtoa+2)^(0+128),w
 10027  00F3  00BA               	movwf	_efgtoa$1255^(0+128)
 10028  00F4  0833               	movf	(??_efgtoa+3)^(0+128),w
 10029  00F5  00BB               	movwf	(_efgtoa$1255+1)^(0+128)
 10030  00F6  083A               	movf	_efgtoa$1255^(0+128),w
 10031  00F7  043B               	iorwf	(_efgtoa$1255+1)^(0+128),w
 10032  00F8  1903               	btfsc	3,2
 10033  00F9  28FE               	goto	l7433
 10034                           
 10035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 10036  00FA  3044               	movlw	low (STR_27| (0+32768))
 10037  00FB  00F1               	movwf	strcpy@src
 10038  00FC  30BB               	movlw	high (STR_27| (0+32768))
 10039  00FD  2901               	goto	L4
 10040  00FE                     l7433:	
 10041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 10042                           
 10043                           
 10044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 10045  00FE  3054               	movlw	low (STR_28| (0+32768))
 10046  00FF  00F1               	movwf	strcpy@src
 10047  0100  30BB               	movlw	high (STR_28| (0+32768))
 10048  0101                     L4:	
 10049  0101  00F2               	movwf	strcpy@src+1
 10050  0102  0866               	movf	efgtoa@n^(0+128),w
 10051  0103  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10052  0104  31B0  2001  3180   	fcall	_strcpy
 10053                           
 10054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10055  0107  30FD               	movlw	253
 10056  0108  0021               	movlb	1	; select bank1
 10057  0109  07D3               	addwf	efgtoa@w^(0+128),f
 10058  010A  30FF               	movlw	255
 10059  010B  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10060                           
 10061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 10062  010C  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10063  010D  0020               	movlb	0	; select bank0
 10064  010E  00A7               	movwf	pad@fp+1
 10065  010F  0021               	movlb	1	; select bank1
 10066  0110  0829               	movf	efgtoa@fp^(0+128),w
 10067  0111  0020               	movlb	0	; select bank0
 10068  0112  00A6               	movwf	pad@fp
 10069  0113  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10070  0114  0021               	movlb	1	; select bank1
 10071  0115  00B0               	movwf	??_efgtoa^(0+128)
 10072  0116  0830               	movf	??_efgtoa^(0+128),w
 10073  0117  0020               	movlb	0	; select bank0
 10074  0118  00A8               	movwf	pad@buf
 10075  0119  0021               	movlb	1	; select bank1
 10076  011A  0854               	movf	(efgtoa@w+1)^(0+128),w
 10077  011B  0020               	movlb	0	; select bank0
 10078  011C  00AA               	movwf	pad@p+1
 10079  011D  0021               	movlb	1	; select bank1
 10080  011E  0853               	movf	efgtoa@w^(0+128),w
 10081  011F  0020               	movlb	0	; select bank0
 10082  0120  00A9               	movwf	pad@p
 10083  0121  31B3  2343         	fcall	_pad
 10084  0123  0020               	movlb	0	; select bank0
 10085  0124  0827               	movf	?_pad+1,w
 10086  0125  0021               	movlb	1	; select bank1
 10087  0126  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10088  0127  0020               	movlb	0	; select bank0
 10089  0128  0826               	movf	?_pad,w
 10090  0129  0021               	movlb	1	; select bank1
 10091  012A  00A9               	movwf	?_efgtoa^(0+128)
 10092  012B  0008               	return
 10093  012C                     l7441:	
 10094                           
 10095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10096  012C  0021               	movlb	1	; select bank1
 10097  012D  0863               	movf	(efgtoa@g+3)^(0+128),w
 10098  012E  00F4               	movwf	___fpclassifyf@x+3
 10099  012F  0862               	movf	(efgtoa@g+2)^(0+128),w
 10100  0130  00F3               	movwf	___fpclassifyf@x+2
 10101  0131  0861               	movf	(efgtoa@g+1)^(0+128),w
 10102  0132  00F2               	movwf	___fpclassifyf@x+1
 10103  0133  0860               	movf	efgtoa@g^(0+128),w
 10104  0134  00F1               	movwf	___fpclassifyf@x
 10105  0135  31B6  260E  3180   	fcall	___fpclassifyf
 10106  0138  0871               	movf	?___fpclassifyf,w
 10107  0139  0472               	iorwf	?___fpclassifyf+1,w
 10108  013A  1D03               	btfss	3,2
 10109  013B  298A               	goto	l7459
 10110  013C  0021               	movlb	1	; select bank1
 10111  013D  082F               	movf	efgtoa@c^(0+128),w
 10112  013E  3EBF               	addlw	191
 10113  013F  00B0               	movwf	??_efgtoa^(0+128)
 10114  0140  30FF               	movlw	255
 10115  0141  1803               	skipnc
 10116  0142  3000               	movlw	0
 10117  0143  00B1               	movwf	(??_efgtoa^(0+128)+1)
 10118  0144  3000               	movlw	0
 10119  0145  0231               	subwf	(??_efgtoa+1)^(0+128),w
 10120  0146  301A               	movlw	26
 10121  0147  1903               	skipnz
 10122  0148  0230               	subwf	??_efgtoa^(0+128),w
 10123  0149  1803               	btfsc	3,0
 10124  014A  294D               	goto	u10110
 10125  014B  3001               	movlw	1
 10126  014C  294E               	goto	u10120
 10127  014D                     u10110:	
 10128  014D  3000               	movlw	0
 10129  014E                     u10120:	
 10130  014E  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10131  014F  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 10132  0150  0832               	movf	(??_efgtoa+2)^(0+128),w
 10133  0151  00BC               	movwf	_efgtoa$1259^(0+128)
 10134  0152  0833               	movf	(??_efgtoa+3)^(0+128),w
 10135  0153  00BD               	movwf	(_efgtoa$1259+1)^(0+128)
 10136  0154  083C               	movf	_efgtoa$1259^(0+128),w
 10137  0155  043D               	iorwf	(_efgtoa$1259+1)^(0+128),w
 10138  0156  1903               	btfsc	3,2
 10139  0157  295C               	goto	l7451
 10140                           
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 10142  0158  3048               	movlw	low (STR_31| (0+32768))
 10143  0159  00F1               	movwf	strcpy@src
 10144  015A  30BB               	movlw	high (STR_31| (0+32768))
 10145  015B  295F               	goto	L5
 10146  015C                     l7451:	
 10147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 10148                           
 10149                           
 10150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 10151  015C  305C               	movlw	low (STR_32| (0+32768))
 10152  015D  00F1               	movwf	strcpy@src
 10153  015E  30BB               	movlw	high (STR_32| (0+32768))
 10154  015F                     L5:	
 10155  015F  00F2               	movwf	strcpy@src+1
 10156  0160  0866               	movf	efgtoa@n^(0+128),w
 10157  0161  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10158  0162  31B0  2001  3180   	fcall	_strcpy
 10159                           
 10160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10161  0165  30FD               	movlw	253
 10162  0166  0021               	movlb	1	; select bank1
 10163  0167  07D3               	addwf	efgtoa@w^(0+128),f
 10164  0168  30FF               	movlw	255
 10165  0169  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10166                           
 10167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
 10168  016A  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10169  016B  0020               	movlb	0	; select bank0
 10170  016C  00A7               	movwf	pad@fp+1
 10171  016D  0021               	movlb	1	; select bank1
 10172  016E  0829               	movf	efgtoa@fp^(0+128),w
 10173  016F  0020               	movlb	0	; select bank0
 10174  0170  00A6               	movwf	pad@fp
 10175  0171  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10176  0172  0021               	movlb	1	; select bank1
 10177  0173  00B0               	movwf	??_efgtoa^(0+128)
 10178  0174  0830               	movf	??_efgtoa^(0+128),w
 10179  0175  0020               	movlb	0	; select bank0
 10180  0176  00A8               	movwf	pad@buf
 10181  0177  0021               	movlb	1	; select bank1
 10182  0178  0854               	movf	(efgtoa@w+1)^(0+128),w
 10183  0179  0020               	movlb	0	; select bank0
 10184  017A  00AA               	movwf	pad@p+1
 10185  017B  0021               	movlb	1	; select bank1
 10186  017C  0853               	movf	efgtoa@w^(0+128),w
 10187  017D  0020               	movlb	0	; select bank0
 10188  017E  00A9               	movwf	pad@p
 10189  017F  31B3  2343         	fcall	_pad
 10190  0181  0020               	movlb	0	; select bank0
 10191  0182  0827               	movf	?_pad+1,w
 10192  0183  0021               	movlb	1	; select bank1
 10193  0184  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10194  0185  0020               	movlb	0	; select bank0
 10195  0186  0826               	movf	?_pad,w
 10196  0187  0021               	movlb	1	; select bank1
 10197  0188  00A9               	movwf	?_efgtoa^(0+128)
 10198  0189  0008               	return
 10199  018A                     l7459:	
 10200                           
 10201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 10202  018A  303F               	movlw	63
 10203  018B  0021               	movlb	1	; select bank1
 10204  018C  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10205  018D  3080               	movlw	128
 10206  018E  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10207  018F  3000               	movlw	0
 10208  0190  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10209  0191  3000               	movlw	0
 10210  0192  00E8               	movwf	efgtoa@u^(0+128)
 10211                           
 10212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 10213  0193  01E4               	clrf	efgtoa@e^(0+128)
 10214  0194  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10215                           
 10216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 10217  0195  0863               	movf	(efgtoa@g+3)^(0+128),w
 10218  0196  00F4               	movwf	___fleq@ff1+3
 10219  0197  0862               	movf	(efgtoa@g+2)^(0+128),w
 10220  0198  00F3               	movwf	___fleq@ff1+2
 10221  0199  0861               	movf	(efgtoa@g+1)^(0+128),w
 10222  019A  00F2               	movwf	___fleq@ff1+1
 10223  019B  0860               	movf	efgtoa@g^(0+128),w
 10224  019C  00F1               	movwf	___fleq@ff1
 10225  019D  3000               	movlw	0
 10226  019E  00F8               	movwf	___fleq@ff2+3
 10227  019F  3000               	movlw	0
 10228  01A0  00F7               	movwf	___fleq@ff2+2
 10229  01A1  3000               	movlw	0
 10230  01A2  00F6               	movwf	___fleq@ff2+1
 10231  01A3  3000               	movlw	0
 10232  01A4  00F5               	movwf	___fleq@ff2
 10233  01A5  31B2  22AB  3180   	fcall	___fleq
 10234  01A8  1C03               	btfss	3,0
 10235  01A9  29DB               	goto	l7471
 10236  01AA  2A6A               	goto	l7479
 10237  01AB                     l7467:	
 10238                           
 10239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 10240  01AB  3041               	movlw	65
 10241  01AC  0020               	movlb	0	; select bank0
 10242  01AD  00A9               	movwf	___flmul@b+3
 10243  01AE  3020               	movlw	32
 10244  01AF  00A8               	movwf	___flmul@b+2
 10245  01B0  3000               	movlw	0
 10246  01B1  00A7               	movwf	___flmul@b+1
 10247  01B2  3000               	movlw	0
 10248  01B3  00A6               	movwf	___flmul@b
 10249  01B4  0021               	movlb	1	; select bank1
 10250  01B5  086B               	movf	(efgtoa@u+3)^(0+128),w
 10251  01B6  0020               	movlb	0	; select bank0
 10252  01B7  00AD               	movwf	___flmul@a+3
 10253  01B8  0021               	movlb	1	; select bank1
 10254  01B9  086A               	movf	(efgtoa@u+2)^(0+128),w
 10255  01BA  0020               	movlb	0	; select bank0
 10256  01BB  00AC               	movwf	___flmul@a+2
 10257  01BC  0021               	movlb	1	; select bank1
 10258  01BD  0869               	movf	(efgtoa@u+1)^(0+128),w
 10259  01BE  0020               	movlb	0	; select bank0
 10260  01BF  00AB               	movwf	___flmul@a+1
 10261  01C0  0021               	movlb	1	; select bank1
 10262  01C1  0868               	movf	efgtoa@u^(0+128),w
 10263  01C2  0020               	movlb	0	; select bank0
 10264  01C3  00AA               	movwf	___flmul@a
 10265  01C4  3193  23A8  3180   	fcall	___flmul
 10266  01C7  0020               	movlb	0	; select bank0
 10267  01C8  0829               	movf	?___flmul+3,w
 10268  01C9  0021               	movlb	1	; select bank1
 10269  01CA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10270  01CB  0020               	movlb	0	; select bank0
 10271  01CC  0828               	movf	?___flmul+2,w
 10272  01CD  0021               	movlb	1	; select bank1
 10273  01CE  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10274  01CF  0020               	movlb	0	; select bank0
 10275  01D0  0827               	movf	?___flmul+1,w
 10276  01D1  0021               	movlb	1	; select bank1
 10277  01D2  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10278  01D3  0020               	movlb	0	; select bank0
 10279  01D4  0826               	movf	?___flmul,w
 10280  01D5  0021               	movlb	1	; select bank1
 10281  01D6  00E8               	movwf	efgtoa@u^(0+128)
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 10284  01D7  3001               	movlw	1
 10285  01D8  07E4               	addwf	efgtoa@e^(0+128),f
 10286  01D9  3000               	movlw	0
 10287  01DA  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10288  01DB                     l7471:	
 10289                           
 10290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 10291  01DB  0021               	movlb	1	; select bank1
 10292  01DC  0863               	movf	(efgtoa@g+3)^(0+128),w
 10293  01DD  0020               	movlb	0	; select bank0
 10294  01DE  00DD               	movwf	___flge@ff1+3
 10295  01DF  0021               	movlb	1	; select bank1
 10296  01E0  0862               	movf	(efgtoa@g+2)^(0+128),w
 10297  01E1  0020               	movlb	0	; select bank0
 10298  01E2  00DC               	movwf	___flge@ff1+2
 10299  01E3  0021               	movlb	1	; select bank1
 10300  01E4  0861               	movf	(efgtoa@g+1)^(0+128),w
 10301  01E5  0020               	movlb	0	; select bank0
 10302  01E6  00DB               	movwf	___flge@ff1+1
 10303  01E7  0021               	movlb	1	; select bank1
 10304  01E8  0860               	movf	efgtoa@g^(0+128),w
 10305  01E9  0020               	movlb	0	; select bank0
 10306  01EA  00DA               	movwf	___flge@ff1
 10307  01EB  3041               	movlw	65
 10308  01EC  00A9               	movwf	___flmul@b+3
 10309  01ED  3020               	movlw	32
 10310  01EE  00A8               	movwf	___flmul@b+2
 10311  01EF  3000               	movlw	0
 10312  01F0  00A7               	movwf	___flmul@b+1
 10313  01F1  3000               	movlw	0
 10314  01F2  00A6               	movwf	___flmul@b
 10315  01F3  0021               	movlb	1	; select bank1
 10316  01F4  086B               	movf	(efgtoa@u+3)^(0+128),w
 10317  01F5  0020               	movlb	0	; select bank0
 10318  01F6  00AD               	movwf	___flmul@a+3
 10319  01F7  0021               	movlb	1	; select bank1
 10320  01F8  086A               	movf	(efgtoa@u+2)^(0+128),w
 10321  01F9  0020               	movlb	0	; select bank0
 10322  01FA  00AC               	movwf	___flmul@a+2
 10323  01FB  0021               	movlb	1	; select bank1
 10324  01FC  0869               	movf	(efgtoa@u+1)^(0+128),w
 10325  01FD  0020               	movlb	0	; select bank0
 10326  01FE  00AB               	movwf	___flmul@a+1
 10327  01FF  0021               	movlb	1	; select bank1
 10328  0200  0868               	movf	efgtoa@u^(0+128),w
 10329  0201  0020               	movlb	0	; select bank0
 10330  0202  00AA               	movwf	___flmul@a
 10331  0203  3193  23A8  3180   	fcall	___flmul
 10332  0206  0020               	movlb	0	; select bank0
 10333  0207  0829               	movf	?___flmul+3,w
 10334  0208  00E1               	movwf	___flge@ff2+3
 10335  0209  0828               	movf	?___flmul+2,w
 10336  020A  00E0               	movwf	___flge@ff2+2
 10337  020B  0827               	movf	?___flmul+1,w
 10338  020C  00DF               	movwf	___flge@ff2+1
 10339  020D  0826               	movf	?___flmul,w
 10340  020E  00DE               	movwf	___flge@ff2
 10341  020F  31B6  2686  3180   	fcall	___flge
 10342  0212  1C03               	btfss	3,0
 10343  0213  2A45               	goto	l7477
 10344  0214  29AB               	goto	l7467
 10345  0215                     l7473:	
 10346                           
 10347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 10348  0215  3041               	movlw	65
 10349  0216  0020               	movlb	0	; select bank0
 10350  0217  00C3               	movwf	___fldiv@a+3
 10351  0218  3020               	movlw	32
 10352  0219  00C2               	movwf	___fldiv@a+2
 10353  021A  3000               	movlw	0
 10354  021B  00C1               	movwf	___fldiv@a+1
 10355  021C  3000               	movlw	0
 10356  021D  00C0               	movwf	___fldiv@a
 10357  021E  0021               	movlb	1	; select bank1
 10358  021F  086B               	movf	(efgtoa@u+3)^(0+128),w
 10359  0220  0020               	movlb	0	; select bank0
 10360  0221  00C7               	movwf	___fldiv@b+3
 10361  0222  0021               	movlb	1	; select bank1
 10362  0223  086A               	movf	(efgtoa@u+2)^(0+128),w
 10363  0224  0020               	movlb	0	; select bank0
 10364  0225  00C6               	movwf	___fldiv@b+2
 10365  0226  0021               	movlb	1	; select bank1
 10366  0227  0869               	movf	(efgtoa@u+1)^(0+128),w
 10367  0228  0020               	movlb	0	; select bank0
 10368  0229  00C5               	movwf	___fldiv@b+1
 10369  022A  0021               	movlb	1	; select bank1
 10370  022B  0868               	movf	efgtoa@u^(0+128),w
 10371  022C  0020               	movlb	0	; select bank0
 10372  022D  00C4               	movwf	___fldiv@b
 10373  022E  319C  24A4  3180   	fcall	___fldiv
 10374  0231  0020               	movlb	0	; select bank0
 10375  0232  0843               	movf	?___fldiv+3,w
 10376  0233  0021               	movlb	1	; select bank1
 10377  0234  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10378  0235  0020               	movlb	0	; select bank0
 10379  0236  0842               	movf	?___fldiv+2,w
 10380  0237  0021               	movlb	1	; select bank1
 10381  0238  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10382  0239  0020               	movlb	0	; select bank0
 10383  023A  0841               	movf	?___fldiv+1,w
 10384  023B  0021               	movlb	1	; select bank1
 10385  023C  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10386  023D  0020               	movlb	0	; select bank0
 10387  023E  0840               	movf	?___fldiv,w
 10388  023F  0021               	movlb	1	; select bank1
 10389  0240  00E8               	movwf	efgtoa@u^(0+128)
 10390                           
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 10392  0241  30FF               	movlw	255
 10393  0242  07E4               	addwf	efgtoa@e^(0+128),f
 10394  0243  30FF               	movlw	255
 10395  0244  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10396  0245                     l7477:	
 10397                           
 10398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 10399  0245  0021               	movlb	1	; select bank1
 10400  0246  0863               	movf	(efgtoa@g+3)^(0+128),w
 10401  0247  0020               	movlb	0	; select bank0
 10402  0248  00DD               	movwf	___flge@ff1+3
 10403  0249  0021               	movlb	1	; select bank1
 10404  024A  0862               	movf	(efgtoa@g+2)^(0+128),w
 10405  024B  0020               	movlb	0	; select bank0
 10406  024C  00DC               	movwf	___flge@ff1+2
 10407  024D  0021               	movlb	1	; select bank1
 10408  024E  0861               	movf	(efgtoa@g+1)^(0+128),w
 10409  024F  0020               	movlb	0	; select bank0
 10410  0250  00DB               	movwf	___flge@ff1+1
 10411  0251  0021               	movlb	1	; select bank1
 10412  0252  0860               	movf	efgtoa@g^(0+128),w
 10413  0253  0020               	movlb	0	; select bank0
 10414  0254  00DA               	movwf	___flge@ff1
 10415  0255  0021               	movlb	1	; select bank1
 10416  0256  086B               	movf	(efgtoa@u+3)^(0+128),w
 10417  0257  0020               	movlb	0	; select bank0
 10418  0258  00E1               	movwf	___flge@ff2+3
 10419  0259  0021               	movlb	1	; select bank1
 10420  025A  086A               	movf	(efgtoa@u+2)^(0+128),w
 10421  025B  0020               	movlb	0	; select bank0
 10422  025C  00E0               	movwf	___flge@ff2+2
 10423  025D  0021               	movlb	1	; select bank1
 10424  025E  0869               	movf	(efgtoa@u+1)^(0+128),w
 10425  025F  0020               	movlb	0	; select bank0
 10426  0260  00DF               	movwf	___flge@ff2+1
 10427  0261  0021               	movlb	1	; select bank1
 10428  0262  0868               	movf	efgtoa@u^(0+128),w
 10429  0263  0020               	movlb	0	; select bank0
 10430  0264  00DE               	movwf	___flge@ff2
 10431  0265  31B6  2686  3180   	fcall	___flge
 10432  0268  1C03               	btfss	3,0
 10433  0269  2A15               	goto	l7473
 10434  026A                     l7479:	
 10435                           
 10436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 10437  026A  0021               	movlb	1	; select bank1
 10438  026B  082F               	movf	efgtoa@c^(0+128),w
 10439  026C  00B0               	movwf	??_efgtoa^(0+128)
 10440  026D  01B1               	clrf	(??_efgtoa^(0+128)+1)
 10441  026E  0830               	movf	??_efgtoa^(0+128),w
 10442  026F  00F7               	movwf	tolower@c
 10443  0270  0831               	movf	(??_efgtoa+1)^(0+128),w
 10444  0271  00F8               	movwf	tolower@c+1
 10445  0272  31B0  2020  3180   	fcall	_tolower
 10446  0275  0877               	movf	?_tolower,w
 10447  0276  0021               	movlb	1	; select bank1
 10448  0277  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10449  0278  0832               	movf	(??_efgtoa+2)^(0+128),w
 10450  0279  00D5               	movwf	efgtoa@mode^(0+128)
 10451                           
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 10453  027A  0855               	movf	efgtoa@mode^(0+128),w
 10454  027B  00B0               	movwf	??_efgtoa^(0+128)
 10455  027C  0830               	movf	??_efgtoa^(0+128),w
 10456  027D  00D2               	movwf	efgtoa@nmode^(0+128)
 10457                           
 10458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 10459  027E  3067               	movlw	103
 10460  027F  0655               	xorwf	efgtoa@mode^(0+128),w
 10461  0280  1D03               	btfss	3,2
 10462  0281  2A9E               	goto	l712
 10463                           
 10464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 10465  0282  0023               	movlb	3	; select bank3
 10466  0283  0832               	movf	_prec^(0+384),w
 10467  0284  0433               	iorwf	(_prec+1)^(0+384),w
 10468  0285  1D03               	btfss	3,2
 10469  0286  2A8B               	goto	l713
 10470                           
 10471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 10472  0287  3001               	movlw	1
 10473  0288  00B2               	movwf	_prec^(0+384)
 10474  0289  3000               	movlw	0
 10475  028A  00B3               	movwf	(_prec^(0+384)+1)
 10476  028B                     l713:	
 10477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
 10478                           
 10479                           
 10480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 10481  028B  0833               	movf	(_prec+1)^(0+384),w
 10482  028C  3A80               	xorlw	128
 10483  028D  0021               	movlb	1	; select bank1
 10484  028E  00B0               	movwf	??_efgtoa^(0+128)
 10485  028F  3080               	movlw	128
 10486  0290  0230               	subwf	??_efgtoa^(0+128),w
 10487  0291  1D03               	skipz
 10488  0292  2A96               	goto	u10195
 10489  0293  3001               	movlw	1
 10490  0294  0023               	movlb	3	; select bank3
 10491  0295  0232               	subwf	_prec^(0+384),w
 10492  0296                     u10195:	
 10493  0296  1803               	skipnc
 10494  0297  2AA1               	goto	l7491
 10495  0298                     l7489:	
 10496  0298  3006               	movlw	6
 10497  0299  0021               	movlb	1	; select bank1
 10498  029A  00D0               	movwf	efgtoa@p^(0+128)
 10499  029B  3000               	movlw	0
 10500  029C  00D1               	movwf	(efgtoa@p^(0+128)+1)
 10501  029D  2AA9               	goto	l7497
 10502  029E                     l712:	
 10503                           
 10504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 10505  029E  0023               	movlb	3	; select bank3
 10506  029F  1BB3               	btfsc	(_prec+1)^(0+384),7
 10507  02A0  2A98               	goto	l7489
 10508  02A1                     l7491:	
 10509  02A1  0023               	movlb	3	; select bank3
 10510  02A2  0833               	movf	(_prec+1)^(0+384),w
 10511  02A3  0021               	movlb	1	; select bank1
 10512  02A4  00D1               	movwf	(efgtoa@p+1)^(0+128)
 10513  02A5  0023               	movlb	3	; select bank3
 10514  02A6  0832               	movf	_prec^(0+384),w
 10515  02A7  0021               	movlb	1	; select bank1
 10516  02A8  00D0               	movwf	efgtoa@p^(0+128)
 10517  02A9                     l7497:	
 10518                           
 10519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10520  02A9  3067               	movlw	103
 10521  02AA  0655               	xorwf	efgtoa@mode^(0+128),w
 10522  02AB  1D03               	btfss	3,2
 10523  02AC  2AD2               	goto	l723
 10524                           
 10525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10526  02AD  0865               	movf	(efgtoa@e+1)^(0+128),w
 10527  02AE  3A80               	xorlw	128
 10528  02AF  00B0               	movwf	??_efgtoa^(0+128)
 10529  02B0  307F               	movlw	127
 10530  02B1  0230               	subwf	??_efgtoa^(0+128),w
 10531  02B2  1D03               	skipz
 10532  02B3  2AB6               	goto	u10225
 10533  02B4  30FC               	movlw	252
 10534  02B5  0264               	subwf	efgtoa@e^(0+128),w
 10535  02B6                     u10225:	
 10536  02B6  1C03               	skipc
 10537  02B7  2ACD               	goto	l7505
 10538  02B8  0021               	movlb	1	; select bank1
 10539  02B9  0850               	movf	efgtoa@p^(0+128),w
 10540  02BA  3EFF               	addlw	255
 10541  02BB  00B0               	movwf	??_efgtoa^(0+128)
 10542  02BC  30FF               	movlw	255
 10543  02BD  3D51               	addwfc	(efgtoa@p+1)^(0+128),w
 10544  02BE  00B1               	movwf	(??_efgtoa+1)^(0+128)
 10545  02BF  0831               	movf	(??_efgtoa+1)^(0+128),w
 10546  02C0  3A80               	xorlw	128
 10547  02C1  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10548  02C2  0865               	movf	(efgtoa@e+1)^(0+128),w
 10549  02C3  3A80               	xorlw	128
 10550  02C4  0232               	subwf	(??_efgtoa+2)^(0+128),w
 10551  02C5  1D03               	skipz
 10552  02C6  2AC9               	goto	u10235
 10553  02C7  0864               	movf	efgtoa@e^(0+128),w
 10554  02C8  0230               	subwf	??_efgtoa^(0+128),w
 10555  02C9                     u10235:	
 10556  02C9  1C03               	skipc
 10557  02CA  2ACD               	goto	l7505
 10558                           
 10559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10560  02CB  3066               	movlw	102
 10561  02CC  2ACE               	goto	L6
 10562  02CD                     l7505:	
 10563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10564                           
 10565                           
 10566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10567  02CD  3065               	movlw	101
 10568  02CE                     L6:	
 10569  02CE  0021               	movlb	1	; select bank1
 10570  02CF  00B0               	movwf	??_efgtoa^(0+128)
 10571  02D0  0830               	movf	??_efgtoa^(0+128),w
 10572  02D1  00D2               	movwf	efgtoa@nmode^(0+128)
 10573  02D2                     l723:	
 10574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
 10575                           
 10576                           
 10577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10578  02D2  0851               	movf	(efgtoa@p+1)^(0+128),w
 10579  02D3  00C9               	movwf	(efgtoa@m+1)^(0+128)
 10580  02D4  0850               	movf	efgtoa@p^(0+128),w
 10581  02D5  00C8               	movwf	efgtoa@m^(0+128)
 10582                           
 10583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10584  02D6  3067               	movlw	103
 10585  02D7  0655               	xorwf	efgtoa@mode^(0+128),w
 10586  02D8  1D03               	btfss	3,2
 10587  02D9  2ADF               	goto	l7513
 10588  02DA  3066               	movlw	102
 10589  02DB  0652               	xorwf	efgtoa@nmode^(0+128),w
 10590  02DC  1903               	btfsc	3,2
 10591  02DD  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10592  02DE  2AE3               	goto	l7515
 10593  02DF                     l7513:	
 10594                           
 10595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10596  02DF  3001               	movlw	1
 10597  02E0  07C8               	addwf	efgtoa@m^(0+128),f
 10598  02E1  3000               	movlw	0
 10599  02E2  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10600  02E3                     l7515:	
 10601                           
 10602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10603  02E3  3066               	movlw	102
 10604  02E4  0652               	xorwf	efgtoa@nmode^(0+128),w
 10605  02E5  1D03               	btfss	3,2
 10606  02E6  2AFB               	goto	l7527
 10607                           
 10608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10609  02E7  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10610  02E8  2AF3               	goto	l7523
 10611                           
 10612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10613  02E9  303F               	movlw	63
 10614  02EA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10615  02EB  3080               	movlw	128
 10616  02EC  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10617  02ED  3000               	movlw	0
 10618  02EE  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10619  02EF  3000               	movlw	0
 10620  02F0  00E8               	movwf	efgtoa@u^(0+128)
 10621                           
 10622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10623  02F1  01E4               	clrf	efgtoa@e^(0+128)
 10624  02F2  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10625  02F3                     l7523:	
 10626                           
 10627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10628  02F3  3067               	movlw	103
 10629  02F4  0655               	xorwf	efgtoa@mode^(0+128),w
 10630  02F5  1903               	btfsc	3,2
 10631  02F6  2AFB               	goto	l7527
 10632                           
 10633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10634  02F7  0864               	movf	efgtoa@e^(0+128),w
 10635  02F8  07C8               	addwf	efgtoa@m^(0+128),f
 10636  02F9  0865               	movf	(efgtoa@e+1)^(0+128),w
 10637  02FA  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10638  02FB                     l7527:	
 10639                           
 10640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10641  02FB  01DE               	clrf	efgtoa@i^(0+128)
 10642  02FC  01DF               	clrf	(efgtoa@i+1)^(0+128)
 10643                           
 10644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10645  02FD  0863               	movf	(efgtoa@g+3)^(0+128),w
 10646  02FE  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10647  02FF  0862               	movf	(efgtoa@g+2)^(0+128),w
 10648  0300  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10649  0301  0861               	movf	(efgtoa@g+1)^(0+128),w
 10650  0302  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10651  0303  0860               	movf	efgtoa@g^(0+128),w
 10652  0304  00D6               	movwf	efgtoa@h^(0+128)
 10653                           
 10654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10655  0305  086B               	movf	(efgtoa@u+3)^(0+128),w
 10656  0306  00B7               	movwf	(efgtoa@ou+3)^(0+128)
 10657  0307  086A               	movf	(efgtoa@u+2)^(0+128),w
 10658  0308  00B6               	movwf	(efgtoa@ou+2)^(0+128)
 10659  0309  0869               	movf	(efgtoa@u+1)^(0+128),w
 10660  030A  00B5               	movwf	(efgtoa@ou+1)^(0+128)
 10661  030B  0868               	movf	efgtoa@u^(0+128),w
 10662  030C  00B4               	movwf	efgtoa@ou^(0+128)
 10663  030D                     l7537:	
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10665                           
 10666                           
 10667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10668  030D  085F               	movf	(efgtoa@i+1)^(0+128),w
 10669  030E  3A80               	xorlw	128
 10670  030F  00B0               	movwf	??_efgtoa^(0+128)
 10671  0310  0849               	movf	(efgtoa@m+1)^(0+128),w
 10672  0311  3A80               	xorlw	128
 10673  0312  0230               	subwf	??_efgtoa^(0+128),w
 10674  0313  1D03               	skipz
 10675  0314  2B17               	goto	u10305
 10676  0315  0848               	movf	efgtoa@m^(0+128),w
 10677  0316  025E               	subwf	efgtoa@i^(0+128),w
 10678  0317                     u10305:	
 10679  0317  1803               	btfsc	3,0
 10680  0318  2BDF               	goto	l7539
 10681                           
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10683  0319  0021               	movlb	1	; select bank1
 10684  031A  086B               	movf	(efgtoa@u+3)^(0+128),w
 10685  031B  0020               	movlb	0	; select bank0
 10686  031C  00C3               	movwf	___fldiv@a+3
 10687  031D  0021               	movlb	1	; select bank1
 10688  031E  086A               	movf	(efgtoa@u+2)^(0+128),w
 10689  031F  0020               	movlb	0	; select bank0
 10690  0320  00C2               	movwf	___fldiv@a+2
 10691  0321  0021               	movlb	1	; select bank1
 10692  0322  0869               	movf	(efgtoa@u+1)^(0+128),w
 10693  0323  0020               	movlb	0	; select bank0
 10694  0324  00C1               	movwf	___fldiv@a+1
 10695  0325  0021               	movlb	1	; select bank1
 10696  0326  0868               	movf	efgtoa@u^(0+128),w
 10697  0327  0020               	movlb	0	; select bank0
 10698  0328  00C0               	movwf	___fldiv@a
 10699  0329  0021               	movlb	1	; select bank1
 10700  032A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10701  032B  0020               	movlb	0	; select bank0
 10702  032C  00C7               	movwf	___fldiv@b+3
 10703  032D  0021               	movlb	1	; select bank1
 10704  032E  0858               	movf	(efgtoa@h+2)^(0+128),w
 10705  032F  0020               	movlb	0	; select bank0
 10706  0330  00C6               	movwf	___fldiv@b+2
 10707  0331  0021               	movlb	1	; select bank1
 10708  0332  0857               	movf	(efgtoa@h+1)^(0+128),w
 10709  0333  0020               	movlb	0	; select bank0
 10710  0334  00C5               	movwf	___fldiv@b+1
 10711  0335  0021               	movlb	1	; select bank1
 10712  0336  0856               	movf	efgtoa@h^(0+128),w
 10713  0337  0020               	movlb	0	; select bank0
 10714  0338  00C4               	movwf	___fldiv@b
 10715  0339  319C  24A4  3180   	fcall	___fldiv
 10716  033C  0020               	movlb	0	; select bank0
 10717  033D  0843               	movf	?___fldiv+3,w
 10718  033E  00DD               	movwf	floorf@x+3
 10719  033F  0842               	movf	?___fldiv+2,w
 10720  0340  00DC               	movwf	floorf@x+2
 10721  0341  0841               	movf	?___fldiv+1,w
 10722  0342  00DB               	movwf	floorf@x+1
 10723  0343  0840               	movf	?___fldiv,w
 10724  0344  00DA               	movwf	floorf@x
 10725  0345  31AE  264D  3180   	fcall	_floorf
 10726  0348  0020               	movlb	0	; select bank0
 10727  0349  085D               	movf	?_floorf+3,w
 10728  034A  0021               	movlb	1	; select bank1
 10729  034B  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10730  034C  0020               	movlb	0	; select bank0
 10731  034D  085C               	movf	?_floorf+2,w
 10732  034E  0021               	movlb	1	; select bank1
 10733  034F  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10734  0350  0020               	movlb	0	; select bank0
 10735  0351  085B               	movf	?_floorf+1,w
 10736  0352  0021               	movlb	1	; select bank1
 10737  0353  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10738  0354  0020               	movlb	0	; select bank0
 10739  0355  085A               	movf	?_floorf,w
 10740  0356  0021               	movlb	1	; select bank1
 10741  0357  00DA               	movwf	efgtoa@l^(0+128)
 10742                           
 10743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10744  0358  085D               	movf	(efgtoa@l+3)^(0+128),w
 10745  0359  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10746  035A  085C               	movf	(efgtoa@l+2)^(0+128),w
 10747  035B  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10748  035C  085B               	movf	(efgtoa@l+1)^(0+128),w
 10749  035D  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10750  035E  085A               	movf	efgtoa@l^(0+128),w
 10751  035F  00A0               	movwf	___fltol@f1^(0+128)
 10752  0360  31B5  253B  3180   	fcall	___fltol
 10753  0363  0021               	movlb	1	; select bank1
 10754  0364  0821               	movf	(?___fltol+1)^(0+128),w
 10755  0365  00CD               	movwf	(efgtoa@d+1)^(0+128)
 10756  0366  0820               	movf	?___fltol^(0+128),w
 10757  0367  00CC               	movwf	efgtoa@d^(0+128)
 10758                           
 10759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10760  0368  085D               	movf	(efgtoa@l+3)^(0+128),w
 10761  0369  0020               	movlb	0	; select bank0
 10762  036A  00AD               	movwf	___flmul@a+3
 10763  036B  0021               	movlb	1	; select bank1
 10764  036C  085C               	movf	(efgtoa@l+2)^(0+128),w
 10765  036D  0020               	movlb	0	; select bank0
 10766  036E  00AC               	movwf	___flmul@a+2
 10767  036F  0021               	movlb	1	; select bank1
 10768  0370  085B               	movf	(efgtoa@l+1)^(0+128),w
 10769  0371  0020               	movlb	0	; select bank0
 10770  0372  00AB               	movwf	___flmul@a+1
 10771  0373  0021               	movlb	1	; select bank1
 10772  0374  085A               	movf	efgtoa@l^(0+128),w
 10773  0375  0020               	movlb	0	; select bank0
 10774  0376  00AA               	movwf	___flmul@a
 10775  0377  0021               	movlb	1	; select bank1
 10776  0378  086B               	movf	(efgtoa@u+3)^(0+128),w
 10777  0379  0020               	movlb	0	; select bank0
 10778  037A  00A9               	movwf	___flmul@b+3
 10779  037B  0021               	movlb	1	; select bank1
 10780  037C  086A               	movf	(efgtoa@u+2)^(0+128),w
 10781  037D  0020               	movlb	0	; select bank0
 10782  037E  00A8               	movwf	___flmul@b+2
 10783  037F  0021               	movlb	1	; select bank1
 10784  0380  0869               	movf	(efgtoa@u+1)^(0+128),w
 10785  0381  0020               	movlb	0	; select bank0
 10786  0382  00A7               	movwf	___flmul@b+1
 10787  0383  0021               	movlb	1	; select bank1
 10788  0384  0868               	movf	efgtoa@u^(0+128),w
 10789  0385  0020               	movlb	0	; select bank0
 10790  0386  00A6               	movwf	___flmul@b
 10791  0387  3193  23A8  3180   	fcall	___flmul
 10792  038A  0020               	movlb	0	; select bank0
 10793  038B  0829               	movf	?___flmul+3,w
 10794  038C  0021               	movlb	1	; select bank1
 10795  038D  00A3               	movwf	(___flsub@a+3)^(0+128)
 10796  038E  0020               	movlb	0	; select bank0
 10797  038F  0828               	movf	?___flmul+2,w
 10798  0390  0021               	movlb	1	; select bank1
 10799  0391  00A2               	movwf	(___flsub@a+2)^(0+128)
 10800  0392  0020               	movlb	0	; select bank0
 10801  0393  0827               	movf	?___flmul+1,w
 10802  0394  0021               	movlb	1	; select bank1
 10803  0395  00A1               	movwf	(___flsub@a+1)^(0+128)
 10804  0396  0020               	movlb	0	; select bank0
 10805  0397  0826               	movf	?___flmul,w
 10806  0398  0021               	movlb	1	; select bank1
 10807  0399  00A0               	movwf	___flsub@a^(0+128)
 10808  039A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10809  039B  00A7               	movwf	(___flsub@b+3)^(0+128)
 10810  039C  0858               	movf	(efgtoa@h+2)^(0+128),w
 10811  039D  00A6               	movwf	(___flsub@b+2)^(0+128)
 10812  039E  0857               	movf	(efgtoa@h+1)^(0+128),w
 10813  039F  00A5               	movwf	(___flsub@b+1)^(0+128)
 10814  03A0  0856               	movf	efgtoa@h^(0+128),w
 10815  03A1  00A4               	movwf	___flsub@b^(0+128)
 10816  03A2  31B1  2143  3180   	fcall	___flsub
 10817  03A5  0021               	movlb	1	; select bank1
 10818  03A6  0823               	movf	(?___flsub+3)^(0+128),w
 10819  03A7  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10820  03A8  0822               	movf	(?___flsub+2)^(0+128),w
 10821  03A9  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10822  03AA  0821               	movf	(?___flsub+1)^(0+128),w
 10823  03AB  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10824  03AC  0820               	movf	?___flsub^(0+128),w
 10825  03AD  00D6               	movwf	efgtoa@h^(0+128)
 10826                           
 10827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10828  03AE  3041               	movlw	65
 10829  03AF  0020               	movlb	0	; select bank0
 10830  03B0  00C3               	movwf	___fldiv@a+3
 10831  03B1  3020               	movlw	32
 10832  03B2  00C2               	movwf	___fldiv@a+2
 10833  03B3  3000               	movlw	0
 10834  03B4  00C1               	movwf	___fldiv@a+1
 10835  03B5  3000               	movlw	0
 10836  03B6  00C0               	movwf	___fldiv@a
 10837  03B7  0021               	movlb	1	; select bank1
 10838  03B8  086B               	movf	(efgtoa@u+3)^(0+128),w
 10839  03B9  0020               	movlb	0	; select bank0
 10840  03BA  00C7               	movwf	___fldiv@b+3
 10841  03BB  0021               	movlb	1	; select bank1
 10842  03BC  086A               	movf	(efgtoa@u+2)^(0+128),w
 10843  03BD  0020               	movlb	0	; select bank0
 10844  03BE  00C6               	movwf	___fldiv@b+2
 10845  03BF  0021               	movlb	1	; select bank1
 10846  03C0  0869               	movf	(efgtoa@u+1)^(0+128),w
 10847  03C1  0020               	movlb	0	; select bank0
 10848  03C2  00C5               	movwf	___fldiv@b+1
 10849  03C3  0021               	movlb	1	; select bank1
 10850  03C4  0868               	movf	efgtoa@u^(0+128),w
 10851  03C5  0020               	movlb	0	; select bank0
 10852  03C6  00C4               	movwf	___fldiv@b
 10853  03C7  319C  24A4  3180   	fcall	___fldiv
 10854  03CA  0020               	movlb	0	; select bank0
 10855  03CB  0843               	movf	?___fldiv+3,w
 10856  03CC  0021               	movlb	1	; select bank1
 10857  03CD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10858  03CE  0020               	movlb	0	; select bank0
 10859  03CF  0842               	movf	?___fldiv+2,w
 10860  03D0  0021               	movlb	1	; select bank1
 10861  03D1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10862  03D2  0020               	movlb	0	; select bank0
 10863  03D3  0841               	movf	?___fldiv+1,w
 10864  03D4  0021               	movlb	1	; select bank1
 10865  03D5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10866  03D6  0020               	movlb	0	; select bank0
 10867  03D7  0840               	movf	?___fldiv,w
 10868  03D8  0021               	movlb	1	; select bank1
 10869  03D9  00E8               	movwf	efgtoa@u^(0+128)
 10870                           
 10871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10872  03DA  3001               	movlw	1
 10873  03DB  07DE               	addwf	efgtoa@i^(0+128),f
 10874  03DC  3000               	movlw	0
 10875  03DD  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 10876  03DE  2B0D               	goto	l7537
 10877  03DF                     l7539:	
 10878                           
 10879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10880  03DF  3040               	movlw	64
 10881  03E0  0020               	movlb	0	; select bank0
 10882  03E1  00A9               	movwf	___flmul@b+3
 10883  03E2  30A0               	movlw	160
 10884  03E3  00A8               	movwf	___flmul@b+2
 10885  03E4  3000               	movlw	0
 10886  03E5  00A7               	movwf	___flmul@b+1
 10887  03E6  3000               	movlw	0
 10888  03E7  00A6               	movwf	___flmul@b
 10889  03E8  0021               	movlb	1	; select bank1
 10890  03E9  086B               	movf	(efgtoa@u+3)^(0+128),w
 10891  03EA  0020               	movlb	0	; select bank0
 10892  03EB  00AD               	movwf	___flmul@a+3
 10893  03EC  0021               	movlb	1	; select bank1
 10894  03ED  086A               	movf	(efgtoa@u+2)^(0+128),w
 10895  03EE  0020               	movlb	0	; select bank0
 10896  03EF  00AC               	movwf	___flmul@a+2
 10897  03F0  0021               	movlb	1	; select bank1
 10898  03F1  0869               	movf	(efgtoa@u+1)^(0+128),w
 10899  03F2  0020               	movlb	0	; select bank0
 10900  03F3  00AB               	movwf	___flmul@a+1
 10901  03F4  0021               	movlb	1	; select bank1
 10902  03F5  0868               	movf	efgtoa@u^(0+128),w
 10903  03F6  0020               	movlb	0	; select bank0
 10904  03F7  00AA               	movwf	___flmul@a
 10905  03F8  3193  23A8  3180   	fcall	___flmul
 10906  03FB  0020               	movlb	0	; select bank0
 10907  03FC  0829               	movf	?___flmul+3,w
 10908  03FD  0021               	movlb	1	; select bank1
 10909  03FE  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10910  03FF  0020               	movlb	0	; select bank0
 10911  0400  0828               	movf	?___flmul+2,w
 10912  0401  0021               	movlb	1	; select bank1
 10913  0402  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10914  0403  0020               	movlb	0	; select bank0
 10915  0404  0827               	movf	?___flmul+1,w
 10916  0405  0021               	movlb	1	; select bank1
 10917  0406  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10918  0407  0020               	movlb	0	; select bank0
 10919  0408  0826               	movf	?___flmul,w
 10920  0409  0021               	movlb	1	; select bank1
 10921  040A  00DA               	movwf	efgtoa@l^(0+128)
 10922                           
 10923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10924  040B  0859               	movf	(efgtoa@h+3)^(0+128),w
 10925  040C  0020               	movlb	0	; select bank0
 10926  040D  00DD               	movwf	___flge@ff1+3
 10927  040E  0021               	movlb	1	; select bank1
 10928  040F  0858               	movf	(efgtoa@h+2)^(0+128),w
 10929  0410  0020               	movlb	0	; select bank0
 10930  0411  00DC               	movwf	___flge@ff1+2
 10931  0412  0021               	movlb	1	; select bank1
 10932  0413  0857               	movf	(efgtoa@h+1)^(0+128),w
 10933  0414  0020               	movlb	0	; select bank0
 10934  0415  00DB               	movwf	___flge@ff1+1
 10935  0416  0021               	movlb	1	; select bank1
 10936  0417  0856               	movf	efgtoa@h^(0+128),w
 10937  0418  0020               	movlb	0	; select bank0
 10938  0419  00DA               	movwf	___flge@ff1
 10939  041A  0021               	movlb	1	; select bank1
 10940  041B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10941  041C  0020               	movlb	0	; select bank0
 10942  041D  00E1               	movwf	___flge@ff2+3
 10943  041E  0021               	movlb	1	; select bank1
 10944  041F  085C               	movf	(efgtoa@l+2)^(0+128),w
 10945  0420  0020               	movlb	0	; select bank0
 10946  0421  00E0               	movwf	___flge@ff2+2
 10947  0422  0021               	movlb	1	; select bank1
 10948  0423  085B               	movf	(efgtoa@l+1)^(0+128),w
 10949  0424  0020               	movlb	0	; select bank0
 10950  0425  00DF               	movwf	___flge@ff2+1
 10951  0426  0021               	movlb	1	; select bank1
 10952  0427  085A               	movf	efgtoa@l^(0+128),w
 10953  0428  0020               	movlb	0	; select bank0
 10954  0429  00DE               	movwf	___flge@ff2
 10955  042A  31B6  2686  3180   	fcall	___flge
 10956  042D  1803               	btfsc	3,0
 10957  042E  2C32               	goto	l7543
 10958                           
 10959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10960  042F  3000               	movlw	0
 10961  0430  0021               	movlb	1	; select bank1
 10962  0431  2C4C               	goto	L7
 10963  0432                     l7543:	
 10964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10965                           
 10966                           
 10967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10968  0432  0021               	movlb	1	; select bank1
 10969  0433  0859               	movf	(efgtoa@h+3)^(0+128),w
 10970  0434  00F4               	movwf	___fleq@ff1+3
 10971  0435  0858               	movf	(efgtoa@h+2)^(0+128),w
 10972  0436  00F3               	movwf	___fleq@ff1+2
 10973  0437  0857               	movf	(efgtoa@h+1)^(0+128),w
 10974  0438  00F2               	movwf	___fleq@ff1+1
 10975  0439  0856               	movf	efgtoa@h^(0+128),w
 10976  043A  00F1               	movwf	___fleq@ff1
 10977  043B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10978  043C  00F8               	movwf	___fleq@ff2+3
 10979  043D  085C               	movf	(efgtoa@l+2)^(0+128),w
 10980  043E  00F7               	movwf	___fleq@ff2+2
 10981  043F  085B               	movf	(efgtoa@l+1)^(0+128),w
 10982  0440  00F6               	movwf	___fleq@ff2+1
 10983  0441  085A               	movf	efgtoa@l^(0+128),w
 10984  0442  00F5               	movwf	___fleq@ff2
 10985  0443  31B2  22AB  3180   	fcall	___fleq
 10986  0446  1C03               	btfss	3,0
 10987  0447  2C53               	goto	l7549
 10988  0448  0021               	movlb	1	; select bank1
 10989  0449  184C               	btfsc	efgtoa@d^(0+128),0
 10990  044A  2C53               	goto	l7549
 10991                           
 10992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10993  044B  3000               	movlw	0
 10994  044C                     L7:	
 10995  044C  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10996  044D  3000               	movlw	0
 10997  044E  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10998  044F  3000               	movlw	0
 10999  0450  00DB               	movwf	(efgtoa@l+1)^(0+128)
 11000  0451  3000               	movlw	0
 11001  0452  00DA               	movwf	efgtoa@l^(0+128)
 11002  0453                     l7549:	
 11003                           
 11004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 11005  0453  0021               	movlb	1	; select bank1
 11006  0454  085D               	movf	(efgtoa@l+3)^(0+128),w
 11007  0455  0020               	movlb	0	; select bank0
 11008  0456  00DD               	movwf	___fladd@b+3
 11009  0457  0021               	movlb	1	; select bank1
 11010  0458  085C               	movf	(efgtoa@l+2)^(0+128),w
 11011  0459  0020               	movlb	0	; select bank0
 11012  045A  00DC               	movwf	___fladd@b+2
 11013  045B  0021               	movlb	1	; select bank1
 11014  045C  085B               	movf	(efgtoa@l+1)^(0+128),w
 11015  045D  0020               	movlb	0	; select bank0
 11016  045E  00DB               	movwf	___fladd@b+1
 11017  045F  0021               	movlb	1	; select bank1
 11018  0460  085A               	movf	efgtoa@l^(0+128),w
 11019  0461  0020               	movlb	0	; select bank0
 11020  0462  00DA               	movwf	___fladd@b
 11021  0463  0021               	movlb	1	; select bank1
 11022  0464  0863               	movf	(efgtoa@g+3)^(0+128),w
 11023  0465  0020               	movlb	0	; select bank0
 11024  0466  00E1               	movwf	___fladd@a+3
 11025  0467  0021               	movlb	1	; select bank1
 11026  0468  0862               	movf	(efgtoa@g+2)^(0+128),w
 11027  0469  0020               	movlb	0	; select bank0
 11028  046A  00E0               	movwf	___fladd@a+2
 11029  046B  0021               	movlb	1	; select bank1
 11030  046C  0861               	movf	(efgtoa@g+1)^(0+128),w
 11031  046D  0020               	movlb	0	; select bank0
 11032  046E  00DF               	movwf	___fladd@a+1
 11033  046F  0021               	movlb	1	; select bank1
 11034  0470  0860               	movf	efgtoa@g^(0+128),w
 11035  0471  0020               	movlb	0	; select bank0
 11036  0472  00DE               	movwf	___fladd@a
 11037  0473  319E  261E  3180   	fcall	___fladd
 11038  0476  0020               	movlb	0	; select bank0
 11039  0477  085D               	movf	?___fladd+3,w
 11040  0478  0021               	movlb	1	; select bank1
 11041  0479  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11042  047A  0020               	movlb	0	; select bank0
 11043  047B  085C               	movf	?___fladd+2,w
 11044  047C  0021               	movlb	1	; select bank1
 11045  047D  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11046  047E  0020               	movlb	0	; select bank0
 11047  047F  085B               	movf	?___fladd+1,w
 11048  0480  0021               	movlb	1	; select bank1
 11049  0481  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11050  0482  0020               	movlb	0	; select bank0
 11051  0483  085A               	movf	?___fladd,w
 11052  0484  0021               	movlb	1	; select bank1
 11053  0485  00D6               	movwf	efgtoa@h^(0+128)
 11054                           
 11055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 11056  0486  0837               	movf	(efgtoa@ou+3)^(0+128),w
 11057  0487  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11058  0488  0836               	movf	(efgtoa@ou+2)^(0+128),w
 11059  0489  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11060  048A  0835               	movf	(efgtoa@ou+1)^(0+128),w
 11061  048B  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11062  048C  0834               	movf	efgtoa@ou^(0+128),w
 11063  048D  00E8               	movwf	efgtoa@u^(0+128)
 11064                           
 11065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 11066  048E  3065               	movlw	101
 11067  048F  0652               	xorwf	efgtoa@nmode^(0+128),w
 11068  0490  1903               	btfsc	3,2
 11069  0491  2C97               	goto	l7557
 11070  0492  0865               	movf	(efgtoa@e+1)^(0+128),w
 11071  0493  00CB               	movwf	(efgtoa@ne+1)^(0+128)
 11072  0494  0864               	movf	efgtoa@e^(0+128),w
 11073  0495  00CA               	movwf	efgtoa@ne^(0+128)
 11074  0496  2C99               	goto	l741
 11075  0497                     l7557:	
 11076  0497  01CA               	clrf	efgtoa@ne^(0+128)
 11077  0498  01CB               	clrf	(efgtoa@ne+1)^(0+128)
 11078  0499                     l741:	
 11079                           
 11080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 11081  0499  01C6               	clrf	efgtoa@pp^(0+128)
 11082  049A  01C7               	clrf	(efgtoa@pp+1)^(0+128)
 11083                           
 11084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 11085  049B  01C4               	clrf	efgtoa@t^(0+128)
 11086  049C  01C5               	clrf	(efgtoa@t+1)^(0+128)
 11087                           
 11088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 11089  049D  01DE               	clrf	efgtoa@i^(0+128)
 11090  049E  01DF               	clrf	(efgtoa@i+1)^(0+128)
 11091                           
 11092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11093  049F  2DC2               	goto	l7607
 11094  04A0                     l7559:	
 11095                           
 11096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 11097  04A0  0021               	movlb	1	; select bank1
 11098  04A1  086B               	movf	(efgtoa@u+3)^(0+128),w
 11099  04A2  0020               	movlb	0	; select bank0
 11100  04A3  00C3               	movwf	___fldiv@a+3
 11101  04A4  0021               	movlb	1	; select bank1
 11102  04A5  086A               	movf	(efgtoa@u+2)^(0+128),w
 11103  04A6  0020               	movlb	0	; select bank0
 11104  04A7  00C2               	movwf	___fldiv@a+2
 11105  04A8  0021               	movlb	1	; select bank1
 11106  04A9  0869               	movf	(efgtoa@u+1)^(0+128),w
 11107  04AA  0020               	movlb	0	; select bank0
 11108  04AB  00C1               	movwf	___fldiv@a+1
 11109  04AC  0021               	movlb	1	; select bank1
 11110  04AD  0868               	movf	efgtoa@u^(0+128),w
 11111  04AE  0020               	movlb	0	; select bank0
 11112  04AF  00C0               	movwf	___fldiv@a
 11113  04B0  0021               	movlb	1	; select bank1
 11114  04B1  0859               	movf	(efgtoa@h+3)^(0+128),w
 11115  04B2  0020               	movlb	0	; select bank0
 11116  04B3  00C7               	movwf	___fldiv@b+3
 11117  04B4  0021               	movlb	1	; select bank1
 11118  04B5  0858               	movf	(efgtoa@h+2)^(0+128),w
 11119  04B6  0020               	movlb	0	; select bank0
 11120  04B7  00C6               	movwf	___fldiv@b+2
 11121  04B8  0021               	movlb	1	; select bank1
 11122  04B9  0857               	movf	(efgtoa@h+1)^(0+128),w
 11123  04BA  0020               	movlb	0	; select bank0
 11124  04BB  00C5               	movwf	___fldiv@b+1
 11125  04BC  0021               	movlb	1	; select bank1
 11126  04BD  0856               	movf	efgtoa@h^(0+128),w
 11127  04BE  0020               	movlb	0	; select bank0
 11128  04BF  00C4               	movwf	___fldiv@b
 11129  04C0  319C  24A4  3180   	fcall	___fldiv
 11130  04C3  0020               	movlb	0	; select bank0
 11131  04C4  0843               	movf	?___fldiv+3,w
 11132  04C5  00DD               	movwf	floorf@x+3
 11133  04C6  0842               	movf	?___fldiv+2,w
 11134  04C7  00DC               	movwf	floorf@x+2
 11135  04C8  0841               	movf	?___fldiv+1,w
 11136  04C9  00DB               	movwf	floorf@x+1
 11137  04CA  0840               	movf	?___fldiv,w
 11138  04CB  00DA               	movwf	floorf@x
 11139  04CC  31AE  264D  3180   	fcall	_floorf
 11140  04CF  0020               	movlb	0	; select bank0
 11141  04D0  085D               	movf	?_floorf+3,w
 11142  04D1  0021               	movlb	1	; select bank1
 11143  04D2  00DD               	movwf	(efgtoa@l+3)^(0+128)
 11144  04D3  0020               	movlb	0	; select bank0
 11145  04D4  085C               	movf	?_floorf+2,w
 11146  04D5  0021               	movlb	1	; select bank1
 11147  04D6  00DC               	movwf	(efgtoa@l+2)^(0+128)
 11148  04D7  0020               	movlb	0	; select bank0
 11149  04D8  085B               	movf	?_floorf+1,w
 11150  04D9  0021               	movlb	1	; select bank1
 11151  04DA  00DB               	movwf	(efgtoa@l+1)^(0+128)
 11152  04DB  0020               	movlb	0	; select bank0
 11153  04DC  085A               	movf	?_floorf,w
 11154  04DD  0021               	movlb	1	; select bank1
 11155  04DE  00DA               	movwf	efgtoa@l^(0+128)
 11156                           
 11157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 11158  04DF  085D               	movf	(efgtoa@l+3)^(0+128),w
 11159  04E0  00A3               	movwf	(___fltol@f1+3)^(0+128)
 11160  04E1  085C               	movf	(efgtoa@l+2)^(0+128),w
 11161  04E2  00A2               	movwf	(___fltol@f1+2)^(0+128)
 11162  04E3  085B               	movf	(efgtoa@l+1)^(0+128),w
 11163  04E4  00A1               	movwf	(___fltol@f1+1)^(0+128)
 11164  04E5  085A               	movf	efgtoa@l^(0+128),w
 11165  04E6  00A0               	movwf	___fltol@f1^(0+128)
 11166  04E7  31B5  253B  3180   	fcall	___fltol
 11167  04EA  0021               	movlb	1	; select bank1
 11168  04EB  0821               	movf	(?___fltol+1)^(0+128),w
 11169  04EC  00CD               	movwf	(efgtoa@d+1)^(0+128)
 11170  04ED  0820               	movf	?___fltol^(0+128),w
 11171  04EE  00CC               	movwf	efgtoa@d^(0+128)
 11172                           
 11173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11174  04EF  0023               	movlb	3	; select bank3
 11175  04F0  1A34               	btfsc	_flags^(0+384),4
 11176  04F1  2D01               	goto	l7571
 11177  04F2  0021               	movlb	1	; select bank1
 11178  04F3  084C               	movf	efgtoa@d^(0+128),w
 11179  04F4  044D               	iorwf	(efgtoa@d+1)^(0+128),w
 11180  04F5  1D03               	btfss	3,2
 11181  04F6  2D01               	goto	l7571
 11182  04F7  3067               	movlw	103
 11183  04F8  0655               	xorwf	efgtoa@mode^(0+128),w
 11184  04F9  1903               	btfsc	3,2
 11185  04FA  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11186  04FB  2D01               	goto	l7571
 11187                           
 11188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 11189  04FC  3001               	movlw	1
 11190  04FD  07C4               	addwf	efgtoa@t^(0+128),f
 11191  04FE  3000               	movlw	0
 11192  04FF  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11193                           
 11194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 11195  0500  2D48               	goto	l7599
 11196  0501                     l7571:	
 11197                           
 11198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 11199  0501  0021               	movlb	1	; select bank1
 11200  0502  0846               	movf	efgtoa@pp^(0+128),w
 11201  0503  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11202  0504  1903               	btfsc	3,2
 11203  0505  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11204  0506  2D1C               	goto	l7591
 11205                           
 11206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 11207  0507  302E               	movlw	46
 11208  0508  00B0               	movwf	??_efgtoa^(0+128)
 11209  0509  0866               	movf	efgtoa@n^(0+128),w
 11210  050A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11211  050B  0086               	movwf	6
 11212  050C  3002               	movlw	2	; select bank5/6
 11213  050D  0087               	movwf	7
 11214  050E  0830               	movf	??_efgtoa^(0+128),w
 11215  050F  0081               	movwf	1
 11216  0510  3001               	movlw	1
 11217  0511  07E6               	addwf	efgtoa@n^(0+128),f
 11218  0512  3000               	movlw	0
 11219  0513  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11220                           
 11221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 11222  0514  30FF               	movlw	255
 11223  0515  07D3               	addwf	efgtoa@w^(0+128),f
 11224  0516  30FF               	movlw	255
 11225  0517  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11226                           
 11227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 11228  0518  3001               	movlw	1
 11229  0519  00C6               	movwf	efgtoa@pp^(0+128)
 11230  051A  3000               	movlw	0
 11231  051B  00C7               	movwf	(efgtoa@pp^(0+128)+1)
 11232  051C                     l7591:	
 11233                           
 11234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 11235  051C  0844               	movf	efgtoa@t^(0+128),w
 11236  051D  0445               	iorwf	(efgtoa@t+1)^(0+128),w
 11237  051E  1903               	btfsc	3,2
 11238  051F  2D36               	goto	l7593
 11239                           
 11240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 11241  0520  3030               	movlw	48
 11242  0521  00B0               	movwf	??_efgtoa^(0+128)
 11243  0522  0866               	movf	efgtoa@n^(0+128),w
 11244  0523  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11245  0524  0086               	movwf	6
 11246  0525  3002               	movlw	2	; select bank5/6
 11247  0526  0087               	movwf	7
 11248  0527  0830               	movf	??_efgtoa^(0+128),w
 11249  0528  0081               	movwf	1
 11250  0529  3001               	movlw	1
 11251  052A  07E6               	addwf	efgtoa@n^(0+128),f
 11252  052B  3000               	movlw	0
 11253  052C  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11254                           
 11255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 11256  052D  30FF               	movlw	255
 11257  052E  07D3               	addwf	efgtoa@w^(0+128),f
 11258  052F  30FF               	movlw	255
 11259  0530  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11260                           
 11261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 11262  0531  30FF               	movlw	255
 11263  0532  07C4               	addwf	efgtoa@t^(0+128),f
 11264  0533  30FF               	movlw	255
 11265  0534  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11266  0535  2D1C               	goto	l7591
 11267  0536                     l7593:	
 11268                           
 11269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 11270  0536  084C               	movf	efgtoa@d^(0+128),w
 11271  0537  3E30               	addlw	48
 11272  0538  00B0               	movwf	??_efgtoa^(0+128)
 11273  0539  0866               	movf	efgtoa@n^(0+128),w
 11274  053A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11275  053B  0086               	movwf	6
 11276  053C  3002               	movlw	2	; select bank5/6
 11277  053D  0087               	movwf	7
 11278  053E  0830               	movf	??_efgtoa^(0+128),w
 11279  053F  0081               	movwf	1
 11280  0540  3001               	movlw	1
 11281  0541  07E6               	addwf	efgtoa@n^(0+128),f
 11282  0542  3000               	movlw	0
 11283  0543  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11284                           
 11285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 11286  0544  30FF               	movlw	255
 11287  0545  07D3               	addwf	efgtoa@w^(0+128),f
 11288  0546  30FF               	movlw	255
 11289  0547  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11290  0548                     l7599:	
 11291                           
 11292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 11293  0548  085D               	movf	(efgtoa@l+3)^(0+128),w
 11294  0549  0020               	movlb	0	; select bank0
 11295  054A  00AD               	movwf	___flmul@a+3
 11296  054B  0021               	movlb	1	; select bank1
 11297  054C  085C               	movf	(efgtoa@l+2)^(0+128),w
 11298  054D  0020               	movlb	0	; select bank0
 11299  054E  00AC               	movwf	___flmul@a+2
 11300  054F  0021               	movlb	1	; select bank1
 11301  0550  085B               	movf	(efgtoa@l+1)^(0+128),w
 11302  0551  0020               	movlb	0	; select bank0
 11303  0552  00AB               	movwf	___flmul@a+1
 11304  0553  0021               	movlb	1	; select bank1
 11305  0554  085A               	movf	efgtoa@l^(0+128),w
 11306  0555  0020               	movlb	0	; select bank0
 11307  0556  00AA               	movwf	___flmul@a
 11308  0557  0021               	movlb	1	; select bank1
 11309  0558  086B               	movf	(efgtoa@u+3)^(0+128),w
 11310  0559  0020               	movlb	0	; select bank0
 11311  055A  00A9               	movwf	___flmul@b+3
 11312  055B  0021               	movlb	1	; select bank1
 11313  055C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11314  055D  0020               	movlb	0	; select bank0
 11315  055E  00A8               	movwf	___flmul@b+2
 11316  055F  0021               	movlb	1	; select bank1
 11317  0560  0869               	movf	(efgtoa@u+1)^(0+128),w
 11318  0561  0020               	movlb	0	; select bank0
 11319  0562  00A7               	movwf	___flmul@b+1
 11320  0563  0021               	movlb	1	; select bank1
 11321  0564  0868               	movf	efgtoa@u^(0+128),w
 11322  0565  0020               	movlb	0	; select bank0
 11323  0566  00A6               	movwf	___flmul@b
 11324  0567  3193  23A8  3180   	fcall	___flmul
 11325  056A  0020               	movlb	0	; select bank0
 11326  056B  0829               	movf	?___flmul+3,w
 11327  056C  0021               	movlb	1	; select bank1
 11328  056D  00A3               	movwf	(___flsub@a+3)^(0+128)
 11329  056E  0020               	movlb	0	; select bank0
 11330  056F  0828               	movf	?___flmul+2,w
 11331  0570  0021               	movlb	1	; select bank1
 11332  0571  00A2               	movwf	(___flsub@a+2)^(0+128)
 11333  0572  0020               	movlb	0	; select bank0
 11334  0573  0827               	movf	?___flmul+1,w
 11335  0574  0021               	movlb	1	; select bank1
 11336  0575  00A1               	movwf	(___flsub@a+1)^(0+128)
 11337  0576  0020               	movlb	0	; select bank0
 11338  0577  0826               	movf	?___flmul,w
 11339  0578  0021               	movlb	1	; select bank1
 11340  0579  00A0               	movwf	___flsub@a^(0+128)
 11341  057A  0859               	movf	(efgtoa@h+3)^(0+128),w
 11342  057B  00A7               	movwf	(___flsub@b+3)^(0+128)
 11343  057C  0858               	movf	(efgtoa@h+2)^(0+128),w
 11344  057D  00A6               	movwf	(___flsub@b+2)^(0+128)
 11345  057E  0857               	movf	(efgtoa@h+1)^(0+128),w
 11346  057F  00A5               	movwf	(___flsub@b+1)^(0+128)
 11347  0580  0856               	movf	efgtoa@h^(0+128),w
 11348  0581  00A4               	movwf	___flsub@b^(0+128)
 11349  0582  31B1  2143  3180   	fcall	___flsub
 11350  0585  0021               	movlb	1	; select bank1
 11351  0586  0823               	movf	(?___flsub+3)^(0+128),w
 11352  0587  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11353  0588  0822               	movf	(?___flsub+2)^(0+128),w
 11354  0589  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11355  058A  0821               	movf	(?___flsub+1)^(0+128),w
 11356  058B  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11357  058C  0820               	movf	?___flsub^(0+128),w
 11358  058D  00D6               	movwf	efgtoa@h^(0+128)
 11359                           
 11360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 11361  058E  3041               	movlw	65
 11362  058F  0020               	movlb	0	; select bank0
 11363  0590  00C3               	movwf	___fldiv@a+3
 11364  0591  3020               	movlw	32
 11365  0592  00C2               	movwf	___fldiv@a+2
 11366  0593  3000               	movlw	0
 11367  0594  00C1               	movwf	___fldiv@a+1
 11368  0595  3000               	movlw	0
 11369  0596  00C0               	movwf	___fldiv@a
 11370  0597  0021               	movlb	1	; select bank1
 11371  0598  086B               	movf	(efgtoa@u+3)^(0+128),w
 11372  0599  0020               	movlb	0	; select bank0
 11373  059A  00C7               	movwf	___fldiv@b+3
 11374  059B  0021               	movlb	1	; select bank1
 11375  059C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11376  059D  0020               	movlb	0	; select bank0
 11377  059E  00C6               	movwf	___fldiv@b+2
 11378  059F  0021               	movlb	1	; select bank1
 11379  05A0  0869               	movf	(efgtoa@u+1)^(0+128),w
 11380  05A1  0020               	movlb	0	; select bank0
 11381  05A2  00C5               	movwf	___fldiv@b+1
 11382  05A3  0021               	movlb	1	; select bank1
 11383  05A4  0868               	movf	efgtoa@u^(0+128),w
 11384  05A5  0020               	movlb	0	; select bank0
 11385  05A6  00C4               	movwf	___fldiv@b
 11386  05A7  319C  24A4  3180   	fcall	___fldiv
 11387  05AA  0020               	movlb	0	; select bank0
 11388  05AB  0843               	movf	?___fldiv+3,w
 11389  05AC  0021               	movlb	1	; select bank1
 11390  05AD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11391  05AE  0020               	movlb	0	; select bank0
 11392  05AF  0842               	movf	?___fldiv+2,w
 11393  05B0  0021               	movlb	1	; select bank1
 11394  05B1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11395  05B2  0020               	movlb	0	; select bank0
 11396  05B3  0841               	movf	?___fldiv+1,w
 11397  05B4  0021               	movlb	1	; select bank1
 11398  05B5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11399  05B6  0020               	movlb	0	; select bank0
 11400  05B7  0840               	movf	?___fldiv,w
 11401  05B8  0021               	movlb	1	; select bank1
 11402  05B9  00E8               	movwf	efgtoa@u^(0+128)
 11403                           
 11404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 11405  05BA  30FF               	movlw	255
 11406  05BB  07CA               	addwf	efgtoa@ne^(0+128),f
 11407  05BC  30FF               	movlw	255
 11408  05BD  3DCB               	addwfc	(efgtoa@ne+1)^(0+128),f
 11409                           
 11410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 11411  05BE  3001               	movlw	1
 11412  05BF  07DE               	addwf	efgtoa@i^(0+128),f
 11413  05C0  3000               	movlw	0
 11414  05C1  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11415  05C2                     l7607:	
 11416                           
 11417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11418  05C2  085F               	movf	(efgtoa@i+1)^(0+128),w
 11419  05C3  3A80               	xorlw	128
 11420  05C4  00B0               	movwf	??_efgtoa^(0+128)
 11421  05C5  0849               	movf	(efgtoa@m+1)^(0+128),w
 11422  05C6  3A80               	xorlw	128
 11423  05C7  0230               	subwf	??_efgtoa^(0+128),w
 11424  05C8  1D03               	skipz
 11425  05C9  2DCC               	goto	u10425
 11426  05CA  0848               	movf	efgtoa@m^(0+128),w
 11427  05CB  025E               	subwf	efgtoa@i^(0+128),w
 11428  05CC                     u10425:	
 11429  05CC  1803               	skipnc
 11430  05CD  2DDA               	goto	l7611
 11431  05CE  0021               	movlb	1	; select bank1
 11432  05CF  0867               	movf	(efgtoa@n+1)^(0+128),w
 11433  05D0  3A80               	xorlw	128
 11434  05D1  00B0               	movwf	??_efgtoa^(0+128)
 11435  05D2  3080               	movlw	128
 11436  05D3  0230               	subwf	??_efgtoa^(0+128),w
 11437  05D4  1D03               	skipz
 11438  05D5  2DD8               	goto	u10435
 11439  05D6  304B               	movlw	75
 11440  05D7  0266               	subwf	efgtoa@n^(0+128),w
 11441  05D8                     u10435:	
 11442  05D8  1C03               	skipc
 11443  05D9  2CA0               	goto	l7559
 11444  05DA                     l7611:	
 11445                           
 11446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 11447  05DA  0021               	movlb	1	; select bank1
 11448  05DB  0846               	movf	efgtoa@pp^(0+128),w
 11449  05DC  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11450  05DD  1D03               	btfss	3,2
 11451  05DE  2DF0               	goto	l7619
 11452  05DF  0023               	movlb	3	; select bank3
 11453  05E0  1E34               	btfss	_flags^(0+384),4
 11454  05E1  2DF0               	goto	l7619
 11455                           
 11456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 11457  05E2  302E               	movlw	46
 11458  05E3  0021               	movlb	1	; select bank1
 11459  05E4  00B0               	movwf	??_efgtoa^(0+128)
 11460  05E5  0866               	movf	efgtoa@n^(0+128),w
 11461  05E6  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11462  05E7  0086               	movwf	6
 11463  05E8  3002               	movlw	2	; select bank5/6
 11464  05E9  0087               	movwf	7
 11465  05EA  0830               	movf	??_efgtoa^(0+128),w
 11466  05EB  0081               	movwf	1
 11467  05EC  3001               	movlw	1
 11468  05ED  07E6               	addwf	efgtoa@n^(0+128),f
 11469  05EE  3000               	movlw	0
 11470  05EF  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11471  05F0                     l7619:	
 11472                           
 11473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 11474  05F0  0021               	movlb	1	; select bank1
 11475  05F1  0866               	movf	efgtoa@n^(0+128),w
 11476  05F2  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11477  05F3  0086               	movwf	6
 11478  05F4  3002               	movlw	2	; select bank5/6
 11479  05F5  0087               	movwf	7
 11480  05F6  0181               	clrf	1
 11481                           
 11482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 11483  05F7  3065               	movlw	101
 11484  05F8  0652               	xorwf	efgtoa@nmode^(0+128),w
 11485  05F9  1D03               	btfss	3,2
 11486  05FA  2EB1               	goto	l7681
 11487                           
 11488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 11489  05FB  304F               	movlw	79
 11490  05FC  00DE               	movwf	efgtoa@i^(0+128)
 11491  05FD  3000               	movlw	0
 11492  05FE  00DF               	movwf	(efgtoa@i^(0+128)+1)
 11493                           
 11494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 11495  05FF  085E               	movf	efgtoa@i^(0+128),w
 11496  0600  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11497  0601  0086               	movwf	6
 11498  0602  3002               	movlw	2	; select bank5/6
 11499  0603  0087               	movwf	7
 11500  0604  0181               	clrf	1
 11501                           
 11502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 11503  0605  01CE               	clrf	efgtoa@sign^(0+128)
 11504  0606  01CF               	clrf	(efgtoa@sign+1)^(0+128)
 11505                           
 11506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 11507  0607  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 11508  0608  2E12               	goto	l7635
 11509                           
 11510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 11511  0609  3001               	movlw	1
 11512  060A  00CE               	movwf	efgtoa@sign^(0+128)
 11513  060B  3000               	movlw	0
 11514  060C  00CF               	movwf	(efgtoa@sign^(0+128)+1)
 11515                           
 11516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 11517  060D  09E4               	comf	efgtoa@e^(0+128),f
 11518  060E  09E5               	comf	(efgtoa@e+1)^(0+128),f
 11519  060F  0AE4               	incf	efgtoa@e^(0+128),f
 11520  0610  1903               	skipnz
 11521  0611  0AE5               	incf	(efgtoa@e+1)^(0+128),f
 11522  0612                     l7635:	
 11523                           
 11524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 11525  0612  3002               	movlw	2
 11526  0613  00D0               	movwf	efgtoa@p^(0+128)
 11527  0614  3000               	movlw	0
 11528  0615  00D1               	movwf	(efgtoa@p^(0+128)+1)
 11529  0616                     l7647:	
 11530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11531                           
 11532                           
 11533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11534  0616  0864               	movf	efgtoa@e^(0+128),w
 11535  0617  0465               	iorwf	(efgtoa@e+1)^(0+128),w
 11536  0618  1903               	btfsc	3,2
 11537  0619  2E4E               	goto	l7649
 11538  061A                     l7637:	
 11539                           
 11540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 11541  061A  30FF               	movlw	255
 11542  061B  0021               	movlb	1	; select bank1
 11543  061C  07DE               	addwf	efgtoa@i^(0+128),f
 11544  061D  30FF               	movlw	255
 11545  061E  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11546                           
 11547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 11548  061F  300A               	movlw	10
 11549  0620  00F1               	movwf	___awmod@divisor
 11550  0621  3000               	movlw	0
 11551  0622  00F2               	movwf	___awmod@divisor+1
 11552  0623  0865               	movf	(efgtoa@e+1)^(0+128),w
 11553  0624  00F4               	movwf	___awmod@dividend+1
 11554  0625  0864               	movf	efgtoa@e^(0+128),w
 11555  0626  00F3               	movwf	___awmod@dividend
 11556  0627  31B2  2266  3180   	fcall	___awmod
 11557  062A  0871               	movf	?___awmod,w
 11558  062B  3E30               	addlw	48
 11559  062C  0021               	movlb	1	; select bank1
 11560  062D  00B0               	movwf	??_efgtoa^(0+128)
 11561  062E  085E               	movf	efgtoa@i^(0+128),w
 11562  062F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11563  0630  0086               	movwf	6
 11564  0631  3002               	movlw	2	; select bank5/6
 11565  0632  0087               	movwf	7
 11566  0633  0830               	movf	??_efgtoa^(0+128),w
 11567  0634  0081               	movwf	1
 11568                           
 11569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 11570  0635  300A               	movlw	10
 11571  0636  00F1               	movwf	___awdiv@divisor
 11572  0637  3000               	movlw	0
 11573  0638  00F2               	movwf	___awdiv@divisor+1
 11574  0639  0865               	movf	(efgtoa@e+1)^(0+128),w
 11575  063A  00F4               	movwf	___awdiv@dividend+1
 11576  063B  0864               	movf	efgtoa@e^(0+128),w
 11577  063C  00F3               	movwf	___awdiv@dividend
 11578  063D  31B3  2394  3180   	fcall	___awdiv
 11579  0640  0872               	movf	?___awdiv+1,w
 11580  0641  0021               	movlb	1	; select bank1
 11581  0642  00E5               	movwf	(efgtoa@e+1)^(0+128)
 11582  0643  0871               	movf	?___awdiv,w
 11583  0644  00E4               	movwf	efgtoa@e^(0+128)
 11584                           
 11585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 11586  0645  30FF               	movlw	255
 11587  0646  07D0               	addwf	efgtoa@p^(0+128),f
 11588  0647  30FF               	movlw	255
 11589  0648  3DD1               	addwfc	(efgtoa@p+1)^(0+128),f
 11590                           
 11591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 11592  0649  30FF               	movlw	255
 11593  064A  07D3               	addwf	efgtoa@w^(0+128),f
 11594  064B  30FF               	movlw	255
 11595  064C  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11596  064D  2E16               	goto	l7647
 11597  064E                     l7649:	
 11598  064E  0851               	movf	(efgtoa@p+1)^(0+128),w
 11599  064F  3A80               	xorlw	128
 11600  0650  00B0               	movwf	??_efgtoa^(0+128)
 11601  0651  3080               	movlw	128
 11602  0652  0230               	subwf	??_efgtoa^(0+128),w
 11603  0653  1D03               	skipz
 11604  0654  2E57               	goto	u10495
 11605  0655  3001               	movlw	1
 11606  0656  0250               	subwf	efgtoa@p^(0+128),w
 11607  0657                     u10495:	
 11608  0657  1803               	skipnc
 11609  0658  2E1A               	goto	l7637
 11610                           
 11611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 11612  0659  30FF               	movlw	255
 11613  065A  0021               	movlb	1	; select bank1
 11614  065B  07DE               	addwf	efgtoa@i^(0+128),f
 11615  065C  30FF               	movlw	255
 11616  065D  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11617                           
 11618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 11619  065E  084E               	movf	efgtoa@sign^(0+128),w
 11620  065F  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
 11621  0660  1D03               	btfss	3,2
 11622  0661  2E64               	goto	l7657
 11623  0662  302B               	movlw	43
 11624  0663  2E65               	goto	L8
 11625  0664                     l7657:	
 11626  0664  302D               	movlw	45
 11627  0665                     L8:	
 11628  0665  00BE               	movwf	_efgtoa$1263^(0+128)
 11629  0666  3000               	movlw	0
 11630  0667  00BF               	movwf	(_efgtoa$1263^(0+128)+1)
 11631  0668  083E               	movf	_efgtoa$1263^(0+128),w
 11632  0669  00B0               	movwf	??_efgtoa^(0+128)
 11633  066A  085E               	movf	efgtoa@i^(0+128),w
 11634  066B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11635  066C  0086               	movwf	6
 11636  066D  3002               	movlw	2	; select bank5/6
 11637  066E  0087               	movwf	7
 11638  066F  0830               	movf	??_efgtoa^(0+128),w
 11639  0670  0081               	movwf	1
 11640                           
 11641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 11642  0671  30FF               	movlw	255
 11643  0672  07D3               	addwf	efgtoa@w^(0+128),f
 11644  0673  30FF               	movlw	255
 11645  0674  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11646                           
 11647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11648  0675  30FF               	movlw	255
 11649  0676  07DE               	addwf	efgtoa@i^(0+128),f
 11650  0677  30FF               	movlw	255
 11651  0678  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11652  0679  082F               	movf	efgtoa@c^(0+128),w
 11653  067A  3EBF               	addlw	191
 11654  067B  00B0               	movwf	??_efgtoa^(0+128)
 11655  067C  30FF               	movlw	255
 11656  067D  1803               	skipnc
 11657  067E  3000               	movlw	0
 11658  067F  00B1               	movwf	(??_efgtoa^(0+128)+1)
 11659  0680  3000               	movlw	0
 11660  0681  0231               	subwf	(??_efgtoa+1)^(0+128),w
 11661  0682  301A               	movlw	26
 11662  0683  1903               	skipnz
 11663  0684  0230               	subwf	??_efgtoa^(0+128),w
 11664  0685  1803               	btfsc	3,0
 11665  0686  2E89               	goto	u10510
 11666  0687  3001               	movlw	1
 11667  0688  2E8A               	goto	u10520
 11668  0689                     u10510:	
 11669  0689  3000               	movlw	0
 11670  068A                     u10520:	
 11671  068A  00B2               	movwf	(??_efgtoa+2)^(0+128)
 11672  068B  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 11673  068C  0832               	movf	(??_efgtoa+2)^(0+128),w
 11674  068D  00C2               	movwf	_efgtoa$1265^(0+128)
 11675  068E  0833               	movf	(??_efgtoa+3)^(0+128),w
 11676  068F  00C3               	movwf	(_efgtoa$1265+1)^(0+128)
 11677  0690  0842               	movf	_efgtoa$1265^(0+128),w
 11678  0691  0443               	iorwf	(_efgtoa$1265+1)^(0+128),w
 11679  0692  1D03               	btfss	3,2
 11680  0693  2E96               	goto	l7673
 11681  0694  3065               	movlw	101
 11682  0695  2E97               	goto	L9
 11683  0696                     l7673:	
 11684  0696  3045               	movlw	69
 11685  0697                     L9:	
 11686  0697  00C0               	movwf	_efgtoa$1264^(0+128)
 11687  0698  3000               	movlw	0
 11688  0699  00C1               	movwf	(_efgtoa$1264^(0+128)+1)
 11689  069A  0840               	movf	_efgtoa$1264^(0+128),w
 11690  069B  00B0               	movwf	??_efgtoa^(0+128)
 11691  069C  085E               	movf	efgtoa@i^(0+128),w
 11692  069D  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11693  069E  0086               	movwf	6
 11694  069F  3002               	movlw	2	; select bank5/6
 11695  06A0  0087               	movwf	7
 11696  06A1  0830               	movf	??_efgtoa^(0+128),w
 11697  06A2  0081               	movwf	1
 11698                           
 11699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11700  06A3  30FF               	movlw	255
 11701  06A4  07D3               	addwf	efgtoa@w^(0+128),f
 11702  06A5  30FF               	movlw	255
 11703  06A6  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11704                           
 11705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11706  06A7  085E               	movf	efgtoa@i^(0+128),w
 11707  06A8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11708  06A9  00F1               	movwf	strcpy@src
 11709  06AA  3002               	movlw	2
 11710  06AB  00F2               	movwf	strcpy@src+1
 11711  06AC  0866               	movf	efgtoa@n^(0+128),w
 11712  06AD  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11713  06AE  31B0  2001  3180   	fcall	_strcpy
 11714  06B1                     l7681:	
 11715                           
 11716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 11717  06B1  0021               	movlb	1	; select bank1
 11718  06B2  082A               	movf	(efgtoa@fp+1)^(0+128),w
 11719  06B3  0020               	movlb	0	; select bank0
 11720  06B4  00A7               	movwf	pad@fp+1
 11721  06B5  0021               	movlb	1	; select bank1
 11722  06B6  0829               	movf	efgtoa@fp^(0+128),w
 11723  06B7  0020               	movlb	0	; select bank0
 11724  06B8  00A6               	movwf	pad@fp
 11725  06B9  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 11726  06BA  0021               	movlb	1	; select bank1
 11727  06BB  00B0               	movwf	??_efgtoa^(0+128)
 11728  06BC  0830               	movf	??_efgtoa^(0+128),w
 11729  06BD  0020               	movlb	0	; select bank0
 11730  06BE  00A8               	movwf	pad@buf
 11731  06BF  0021               	movlb	1	; select bank1
 11732  06C0  0854               	movf	(efgtoa@w+1)^(0+128),w
 11733  06C1  0020               	movlb	0	; select bank0
 11734  06C2  00AA               	movwf	pad@p+1
 11735  06C3  0021               	movlb	1	; select bank1
 11736  06C4  0853               	movf	efgtoa@w^(0+128),w
 11737  06C5  0020               	movlb	0	; select bank0
 11738  06C6  00A9               	movwf	pad@p
 11739  06C7  31B3  2343         	fcall	_pad
 11740  06C9  0020               	movlb	0	; select bank0
 11741  06CA  0827               	movf	?_pad+1,w
 11742  06CB  0021               	movlb	1	; select bank1
 11743  06CC  00AA               	movwf	(?_efgtoa+1)^(0+128)
 11744  06CD  0020               	movlb	0	; select bank0
 11745  06CE  0826               	movf	?_pad,w
 11746  06CF  0021               	movlb	1	; select bank1
 11747  06D0  00A9               	movwf	?_efgtoa^(0+128)
 11748  06D1  0008               	return
 11749  06D2                     __end_of_efgtoa:	
 11750                           
 11751                           	psect	text21
 11752  3020                     __ptext21:	
 11753 ;; *************** function _tolower *****************
 11754 ;; Defined at:
 11755 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  c               2    7[COMMON] int 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  2    7[COMMON] int 
 11762 ;; Registers used:
 11763 ;;		wreg, status,2, status,0
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11771 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11772 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11773 ;;Total ram usage:        8 bytes
 11774 ;; Hardware stack levels used:    1
 11775 ;; Hardware stack levels required when called:    2
 11776 ;; This function calls:
 11777 ;;		_isupper
 11778 ;; This function is called by:
 11779 ;;		_efgtoa
 11780 ;;		_vfpfcnvrt
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           
 11785                           ;psect for function _tolower
 11786  3020                     _tolower:	
 11787                           
 11788                           ;incstack = 0
 11789                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11790  3020  0877               	movf	tolower@c,w
 11791  3021  3EBF               	addlw	191
 11792  3022  0020               	movlb	0	; select bank0
 11793  3023  00A0               	movwf	??_tolower
 11794  3024  30FF               	movlw	255
 11795  3025  3D78               	addwfc	tolower@c+1,w
 11796  3026  00A1               	movwf	??_tolower+1
 11797  3027  3000               	movlw	0
 11798  3028  0221               	subwf	??_tolower+1,w
 11799  3029  301A               	movlw	26
 11800  302A  1903               	skipnz
 11801  302B  0220               	subwf	??_tolower,w
 11802  302C  1803               	btfsc	3,0
 11803  302D  2830               	goto	u9760
 11804  302E  3001               	movlw	1
 11805  302F  2831               	goto	u9770
 11806  3030                     u9760:	
 11807  3030  3000               	movlw	0
 11808  3031                     u9770:	
 11809  3031  00A2               	movwf	??_tolower+2
 11810  3032  01A3               	clrf	??_tolower+3
 11811  3033  0822               	movf	??_tolower+2,w
 11812  3034  00F9               	movwf	_tolower$1893
 11813  3035  0823               	movf	??_tolower+3,w
 11814  3036  00FA               	movwf	_tolower$1893+1
 11815  3037  0879               	movf	_tolower$1893,w
 11816  3038  047A               	iorwf	_tolower$1893+1,w
 11817  3039  1903               	btfsc	3,2
 11818  303A  0008               	return
 11819  303B  3020               	movlw	32
 11820  303C  0477               	iorwf	tolower@c,w
 11821  303D  00F7               	movwf	?_tolower
 11822  303E  3000               	movlw	0
 11823  303F  0478               	iorwf	tolower@c+1,w
 11824  3040  00F8               	movwf	?_tolower+1
 11825  3041  0008               	return
 11826  3042                     __end_of_tolower:	
 11827                           
 11828                           	psect	text22
 11829  3EE3                     __ptext22:	
 11830 ;; *************** function _isupper *****************
 11831 ;; Defined at:
 11832 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  c               2    1[COMMON] int 
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;		None
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  2    1[COMMON] int 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11850 ;;Total ram usage:        6 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    1
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_efgtoa
 11857 ;;		_xtoa
 11858 ;;		_vfpfcnvrt
 11859 ;;		_tolower
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           
 11864                           ;psect for function _isupper
 11865  3EE3                     _isupper:	
 11866                           
 11867                           ;incstack = 0
 11868                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11869  3EE3  0871               	movf	isupper@c,w
 11870  3EE4  3EBF               	addlw	191
 11871  3EE5  00F3               	movwf	??_isupper
 11872  3EE6  30FF               	movlw	255
 11873  3EE7  3D72               	addwfc	isupper@c+1,w
 11874  3EE8  00F4               	movwf	??_isupper+1
 11875  3EE9  3000               	movlw	0
 11876  3EEA  0274               	subwf	??_isupper+1,w
 11877  3EEB  301A               	movlw	26
 11878  3EEC  1903               	skipnz
 11879  3EED  0273               	subwf	??_isupper,w
 11880  3EEE  1803               	btfsc	3,0
 11881  3EEF  2EF2               	goto	u9680
 11882  3EF0  3001               	movlw	1
 11883  3EF1  2EF3               	goto	u9690
 11884  3EF2                     u9680:	
 11885  3EF2  3000               	movlw	0
 11886  3EF3                     u9690:	
 11887  3EF3  00F5               	movwf	??_isupper+2
 11888  3EF4  01F6               	clrf	??_isupper+3
 11889  3EF5  0875               	movf	??_isupper+2,w
 11890  3EF6  00F1               	movwf	?_isupper
 11891  3EF7  0876               	movf	??_isupper+3,w
 11892  3EF8  00F2               	movwf	?_isupper+1
 11893  3EF9  0008               	return
 11894  3EFA                     __end_of_isupper:	
 11895                           
 11896                           	psect	text23
 11897  3001                     __ptext23:	
 11898 ;; *************** function _strcpy *****************
 11899 ;; Defined at:
 11900 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  dest            1    wreg     PTR unsigned char 
 11903 ;;		 -> dbuf(80), 
 11904 ;;  src             2    1[COMMON] PTR const unsigned char 
 11905 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11906 ;;		 -> dbuf(80), 
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;  dest            1    8[COMMON] PTR unsigned char 
 11909 ;;		 -> dbuf(80), 
 11910 ;;  s               2    5[COMMON] PTR const unsigned char 
 11911 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11912 ;;		 -> dbuf(80), 
 11913 ;;  d               1    7[COMMON] PTR unsigned char 
 11914 ;;		 -> dbuf(80), 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      PTR unsigned char 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11928 ;;Total ram usage:        8 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    1
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_efgtoa
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           
 11939                           ;psect for function _strcpy
 11940  3001                     _strcpy:	
 11941                           
 11942                           ;incstack = 0
 11943                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11944                           ;strcpy@dest stored from wreg
 11945  3001  00F8               	movwf	strcpy@dest
 11946  3002  0872               	movf	strcpy@src+1,w
 11947  3003  00F6               	movwf	strcpy@s+1
 11948  3004  0871               	movf	strcpy@src,w
 11949  3005  00F5               	movwf	strcpy@s
 11950  3006  0878               	movf	strcpy@dest,w
 11951  3007  00F3               	movwf	??_strcpy
 11952  3008  0873               	movf	??_strcpy,w
 11953  3009  00F7               	movwf	strcpy@d
 11954  300A                     l4771:	
 11955  300A  0877               	movf	strcpy@d,w
 11956  300B  0086               	movwf	6
 11957  300C  3002               	movlw	2	; select bank4/5
 11958  300D  0087               	movwf	7
 11959  300E  0AF7               	incf	strcpy@d,f
 11960  300F  0876               	movf	strcpy@s+1,w
 11961  3010  00F4               	movwf	??_strcpy+1
 11962  3011  0875               	movf	strcpy@s,w
 11963  3012  00F3               	movwf	??_strcpy
 11964  3013  0AF5               	incf	strcpy@s,f
 11965  3014  1903               	skipnz
 11966  3015  0AF6               	incf	strcpy@s+1,f
 11967  3016  0873               	movf	??_strcpy,w
 11968  3017  0084               	movwf	4
 11969  3018  0874               	movf	??_strcpy+1,w
 11970  3019  0085               	movwf	5
 11971  301A  0800               	movf	0,w	;code access
 11972  301B  3FC0               	movwi [0]fsr1
 11973  301C  0889               	movf	9,f
 11974  301D  1903               	btfsc	3,2
 11975  301E  0008               	return
 11976  301F  280A               	goto	l4771
 11977  3020                     __end_of_strcpy:	
 11978                           
 11979                           	psect	text24
 11980  2E4D                     __ptext24:	
 11981 ;; *************** function _floorf *****************
 11982 ;; Defined at:
 11983 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;  x               4   58[BANK0 ] float 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;  u               4   74[BANK0 ] struct .
 11988 ;;  m               4   68[BANK0 ] unsigned long 
 11989 ;;  e               2   72[BANK0 ] int 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  4   58[BANK0 ] float 
 11992 ;; Registers used:
 11993 ;;		wreg, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12001 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12002 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12003 ;;Total ram usage:       20 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:    1
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_efgtoa
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           
 12014                           ;psect for function _floorf
 12015  2E4D                     _floorf:	
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _floorf: [wreg+status,2+status,0]
 12019  2E4D  0024               	movlb	4	; select bank4
 12020  2E4E  082D               	movf	(floorf@F524+3)^(0+512),w
 12021  2E4F  0020               	movlb	0	; select bank0
 12022  2E50  00ED               	movwf	floorf@u+3
 12023  2E51  0024               	movlb	4	; select bank4
 12024  2E52  082C               	movf	(floorf@F524+2)^(0+512),w
 12025  2E53  0020               	movlb	0	; select bank0
 12026  2E54  00EC               	movwf	floorf@u+2
 12027  2E55  0024               	movlb	4	; select bank4
 12028  2E56  082B               	movf	(floorf@F524+1)^(0+512),w
 12029  2E57  0020               	movlb	0	; select bank0
 12030  2E58  00EB               	movwf	floorf@u+1
 12031  2E59  0024               	movlb	4	; select bank4
 12032  2E5A  082A               	movf	floorf@F524^(0+512),w
 12033  2E5B  0020               	movlb	0	; select bank0
 12034  2E5C  00EA               	movwf	floorf@u
 12035  2E5D  085D               	movf	floorf@x+3,w
 12036  2E5E  00ED               	movwf	floorf@u+3
 12037  2E5F  085C               	movf	floorf@x+2,w
 12038  2E60  00EC               	movwf	floorf@u+2
 12039  2E61  085B               	movf	floorf@x+1,w
 12040  2E62  00EB               	movwf	floorf@u+1
 12041  2E63  085A               	movf	floorf@x,w
 12042  2E64  00EA               	movwf	floorf@u
 12043  2E65  086A               	movf	floorf@u,w
 12044  2E66  00DE               	movwf	??_floorf
 12045  2E67  086B               	movf	floorf@u+1,w
 12046  2E68  00DF               	movwf	??_floorf+1
 12047  2E69  086C               	movf	floorf@u+2,w
 12048  2E6A  00E0               	movwf	??_floorf+2
 12049  2E6B  086D               	movf	floorf@u+3,w
 12050  2E6C  00E1               	movwf	??_floorf+3
 12051  2E6D  3017               	movlw	23
 12052  2E6E                     u5595:	
 12053  2E6E  36E1               	lsrf	??_floorf+3,f
 12054  2E6F  0CE0               	rrf	??_floorf+2,f
 12055  2E70  0CDF               	rrf	??_floorf+1,f
 12056  2E71  0CDE               	rrf	??_floorf,f
 12057  2E72  0B89               	decfsz	9,f
 12058  2E73  2E6E               	goto	u5595
 12059  2E74  30FF               	movlw	255
 12060  2E75  055E               	andwf	??_floorf,w
 12061  2E76  00E2               	movwf	??_floorf+4
 12062  2E77  3000               	movlw	0
 12063  2E78  055F               	andwf	??_floorf+1,w
 12064  2E79  00E3               	movwf	??_floorf+5
 12065  2E7A  0862               	movf	??_floorf+4,w
 12066  2E7B  3E81               	addlw	129
 12067  2E7C  00E8               	movwf	floorf@e
 12068  2E7D  30FF               	movlw	255
 12069  2E7E  3D63               	addwfc	??_floorf+5,w
 12070  2E7F  00E9               	movwf	floorf@e+1
 12071  2E80  0869               	movf	floorf@e+1,w
 12072  2E81  3A80               	xorlw	128
 12073  2E82  00DE               	movwf	??_floorf
 12074  2E83  3080               	movlw	128
 12075  2E84  025E               	subwf	??_floorf,w
 12076  2E85  1D03               	skipz
 12077  2E86  2E89               	goto	u5605
 12078  2E87  3017               	movlw	23
 12079  2E88  0268               	subwf	floorf@e,w
 12080  2E89                     u5605:	
 12081  2E89  1803               	btfsc	3,0
 12082  2E8A  0008               	return
 12083  2E8B  0020               	movlb	0	; select bank0
 12084  2E8C  1BE9               	btfsc	floorf@e+1,7
 12085  2E8D  2EE6               	goto	l4803
 12086  2E8E  30FF               	movlw	255
 12087  2E8F  00DE               	movwf	??_floorf
 12088  2E90  30FF               	movlw	255
 12089  2E91  00DF               	movwf	??_floorf+1
 12090  2E92  307F               	movlw	127
 12091  2E93  00E0               	movwf	??_floorf+2
 12092  2E94  3000               	movlw	0
 12093  2E95  00E1               	movwf	??_floorf+3
 12094  2E96  0A68               	incf	floorf@e,w
 12095  2E97  2E9C               	goto	u5620
 12096  2E98                     u5625:	
 12097  2E98  37E1               	asrf	??_floorf+3,f
 12098  2E99  0CE0               	rrf	??_floorf+2,f
 12099  2E9A  0CDF               	rrf	??_floorf+1,f
 12100  2E9B  0CDE               	rrf	??_floorf,f
 12101  2E9C                     u5620:	
 12102  2E9C  0B89               	decfsz	9,f
 12103  2E9D  2E98               	goto	u5625
 12104  2E9E  0861               	movf	??_floorf+3,w
 12105  2E9F  00E7               	movwf	floorf@m+3
 12106  2EA0  0860               	movf	??_floorf+2,w
 12107  2EA1  00E6               	movwf	floorf@m+2
 12108  2EA2  085F               	movf	??_floorf+1,w
 12109  2EA3  00E5               	movwf	floorf@m+1
 12110  2EA4  085E               	movf	??_floorf,w
 12111  2EA5  00E4               	movwf	floorf@m
 12112  2EA6  086A               	movf	floorf@u,w
 12113  2EA7  0564               	andwf	floorf@m,w
 12114  2EA8  00DE               	movwf	??_floorf
 12115  2EA9  086B               	movf	floorf@u+1,w
 12116  2EAA  0565               	andwf	floorf@m+1,w
 12117  2EAB  00DF               	movwf	??_floorf+1
 12118  2EAC  086C               	movf	floorf@u+2,w
 12119  2EAD  0566               	andwf	floorf@m+2,w
 12120  2EAE  00E0               	movwf	??_floorf+2
 12121  2EAF  086D               	movf	floorf@u+3,w
 12122  2EB0  0567               	andwf	floorf@m+3,w
 12123  2EB1  00E1               	movwf	??_floorf+3
 12124  2EB2  0861               	movf	??_floorf+3,w
 12125  2EB3  0460               	iorwf	??_floorf+2,w
 12126  2EB4  045F               	iorwf	??_floorf+1,w
 12127  2EB5  045E               	iorwf	??_floorf,w
 12128  2EB6  1903               	btfsc	3,2
 12129  2EB7  0008               	return
 12130  2EB8  086A               	movf	floorf@u,w
 12131  2EB9  00DE               	movwf	??_floorf
 12132  2EBA  086B               	movf	floorf@u+1,w
 12133  2EBB  00DF               	movwf	??_floorf+1
 12134  2EBC  086C               	movf	floorf@u+2,w
 12135  2EBD  00E0               	movwf	??_floorf+2
 12136  2EBE  086D               	movf	floorf@u+3,w
 12137  2EBF  00E1               	movwf	??_floorf+3
 12138  2EC0  301F               	movlw	31
 12139  2EC1                     u5645:	
 12140  2EC1  36E1               	lsrf	??_floorf+3,f
 12141  2EC2  0CE0               	rrf	??_floorf+2,f
 12142  2EC3  0CDF               	rrf	??_floorf+1,f
 12143  2EC4  0CDE               	rrf	??_floorf,f
 12144  2EC5  0B89               	decfsz	9,f
 12145  2EC6  2EC1               	goto	u5645
 12146  2EC7  0861               	movf	??_floorf+3,w
 12147  2EC8  0460               	iorwf	??_floorf+2,w
 12148  2EC9  045F               	iorwf	??_floorf+1,w
 12149  2ECA  045E               	iorwf	??_floorf,w
 12150  2ECB  1903               	skipnz
 12151  2ECC  2ED5               	goto	l4801
 12152  2ECD  0864               	movf	floorf@m,w
 12153  2ECE  07EA               	addwf	floorf@u,f
 12154  2ECF  0865               	movf	floorf@m+1,w
 12155  2ED0  3DEB               	addwfc	floorf@u+1,f
 12156  2ED1  0866               	movf	floorf@m+2,w
 12157  2ED2  3DEC               	addwfc	floorf@u+2,f
 12158  2ED3  0867               	movf	floorf@m+3,w
 12159  2ED4  3DED               	addwfc	floorf@u+3,f
 12160  2ED5                     l4801:	
 12161  2ED5  0964               	comf	floorf@m,w
 12162  2ED6  00DE               	movwf	??_floorf
 12163  2ED7  0965               	comf	floorf@m+1,w
 12164  2ED8  00DF               	movwf	??_floorf+1
 12165  2ED9  0966               	comf	floorf@m+2,w
 12166  2EDA  00E0               	movwf	??_floorf+2
 12167  2EDB  0967               	comf	floorf@m+3,w
 12168  2EDC  00E1               	movwf	??_floorf+3
 12169  2EDD  085E               	movf	??_floorf,w
 12170  2EDE  05EA               	andwf	floorf@u,f
 12171  2EDF  085F               	movf	??_floorf+1,w
 12172  2EE0  05EB               	andwf	floorf@u+1,f
 12173  2EE1  0860               	movf	??_floorf+2,w
 12174  2EE2  05EC               	andwf	floorf@u+2,f
 12175  2EE3  0861               	movf	??_floorf+3,w
 12176  2EE4  05ED               	andwf	floorf@u+3,f
 12177  2EE5  2F1C               	goto	l1468
 12178  2EE6                     l4803:	
 12179  2EE6  086A               	movf	floorf@u,w
 12180  2EE7  00DE               	movwf	??_floorf
 12181  2EE8  086B               	movf	floorf@u+1,w
 12182  2EE9  00DF               	movwf	??_floorf+1
 12183  2EEA  086C               	movf	floorf@u+2,w
 12184  2EEB  00E0               	movwf	??_floorf+2
 12185  2EEC  086D               	movf	floorf@u+3,w
 12186  2EED  00E1               	movwf	??_floorf+3
 12187  2EEE  301F               	movlw	31
 12188  2EEF                     u5665:	
 12189  2EEF  36E1               	lsrf	??_floorf+3,f
 12190  2EF0  0CE0               	rrf	??_floorf+2,f
 12191  2EF1  0CDF               	rrf	??_floorf+1,f
 12192  2EF2  0CDE               	rrf	??_floorf,f
 12193  2EF3  0B89               	decfsz	9,f
 12194  2EF4  2EEF               	goto	u5665
 12195  2EF5  0861               	movf	??_floorf+3,w
 12196  2EF6  0460               	iorwf	??_floorf+2,w
 12197  2EF7  045F               	iorwf	??_floorf+1,w
 12198  2EF8  045E               	iorwf	??_floorf,w
 12199  2EF9  1D03               	skipz
 12200  2EFA  2EFF               	goto	l4807
 12201  2EFB  3000               	movlw	0
 12202  2EFC  00ED               	movwf	floorf@u+3
 12203  2EFD  3000               	movlw	0
 12204  2EFE  2F17               	goto	L10
 12205  2EFF                     l4807:	
 12206  2EFF  086A               	movf	floorf@u,w
 12207  2F00  00DE               	movwf	??_floorf
 12208  2F01  086B               	movf	floorf@u+1,w
 12209  2F02  00DF               	movwf	??_floorf+1
 12210  2F03  086C               	movf	floorf@u+2,w
 12211  2F04  00E0               	movwf	??_floorf+2
 12212  2F05  086D               	movf	floorf@u+3,w
 12213  2F06  00E1               	movwf	??_floorf+3
 12214  2F07  3001               	movlw	1
 12215  2F08                     u5685:	
 12216  2F08  35DE               	lslf	??_floorf,f
 12217  2F09  0DDF               	rlf	??_floorf+1,f
 12218  2F0A  0DE0               	rlf	??_floorf+2,f
 12219  2F0B  0DE1               	rlf	??_floorf+3,f
 12220  2F0C  0B89               	decfsz	9,f
 12221  2F0D  2F08               	goto	u5685
 12222  2F0E  0861               	movf	??_floorf+3,w
 12223  2F0F  0460               	iorwf	??_floorf+2,w
 12224  2F10  045F               	iorwf	??_floorf+1,w
 12225  2F11  045E               	iorwf	??_floorf,w
 12226  2F12  1903               	skipnz
 12227  2F13  2F1C               	goto	l1468
 12228  2F14  30BF               	movlw	191
 12229  2F15  00ED               	movwf	floorf@u+3
 12230  2F16  3080               	movlw	128
 12231  2F17                     L10:	
 12232  2F17  00EC               	movwf	floorf@u+2
 12233  2F18  3000               	movlw	0
 12234  2F19  00EB               	movwf	floorf@u+1
 12235  2F1A  3000               	movlw	0
 12236  2F1B  00EA               	movwf	floorf@u
 12237  2F1C                     l1468:	
 12238  2F1C  086D               	movf	floorf@u+3,w
 12239  2F1D  00DD               	movwf	?_floorf+3
 12240  2F1E  086C               	movf	floorf@u+2,w
 12241  2F1F  00DC               	movwf	?_floorf+2
 12242  2F20  086B               	movf	floorf@u+1,w
 12243  2F21  00DB               	movwf	?_floorf+1
 12244  2F22  086A               	movf	floorf@u,w
 12245  2F23  00DA               	movwf	?_floorf
 12246  2F24  0008               	return
 12247  2F25                     __end_of_floorf:	
 12248                           
 12249                           	psect	text25
 12250  360E                     __ptext25:	
 12251 ;; *************** function ___fpclassifyf *****************
 12252 ;; Defined at:
 12253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  x               4    1[COMMON] float 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;  u               4    2[BANK0 ] struct .
 12258 ;;  e               2    0[BANK0 ] int 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  2    1[COMMON] int 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12271 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12272 ;;Total ram usage:       16 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    1
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_efgtoa
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           
 12283                           ;psect for function ___fpclassifyf
 12284  360E                     ___fpclassifyf:	
 12285                           
 12286                           ;incstack = 0
 12287                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12288  360E  0023               	movlb	3	; select bank3
 12289  360F  0823               	movf	(___fpclassifyf@F463+3)^(0+384),w
 12290  3610  0020               	movlb	0	; select bank0
 12291  3611  00A5               	movwf	___fpclassifyf@u+3
 12292  3612  0023               	movlb	3	; select bank3
 12293  3613  0822               	movf	(___fpclassifyf@F463+2)^(0+384),w
 12294  3614  0020               	movlb	0	; select bank0
 12295  3615  00A4               	movwf	___fpclassifyf@u+2
 12296  3616  0023               	movlb	3	; select bank3
 12297  3617  0821               	movf	(___fpclassifyf@F463+1)^(0+384),w
 12298  3618  0020               	movlb	0	; select bank0
 12299  3619  00A3               	movwf	___fpclassifyf@u+1
 12300  361A  0023               	movlb	3	; select bank3
 12301  361B  0820               	movf	___fpclassifyf@F463^(0+384),w
 12302  361C  0020               	movlb	0	; select bank0
 12303  361D  00A2               	movwf	___fpclassifyf@u
 12304  361E  0874               	movf	___fpclassifyf@x+3,w
 12305  361F  00A5               	movwf	___fpclassifyf@u+3
 12306  3620  0873               	movf	___fpclassifyf@x+2,w
 12307  3621  00A4               	movwf	___fpclassifyf@u+2
 12308  3622  0872               	movf	___fpclassifyf@x+1,w
 12309  3623  00A3               	movwf	___fpclassifyf@u+1
 12310  3624  0871               	movf	___fpclassifyf@x,w
 12311  3625  00A2               	movwf	___fpclassifyf@u
 12312  3626  0822               	movf	___fpclassifyf@u,w
 12313  3627  00F5               	movwf	??___fpclassifyf
 12314  3628  0823               	movf	___fpclassifyf@u+1,w
 12315  3629  00F6               	movwf	??___fpclassifyf+1
 12316  362A  0824               	movf	___fpclassifyf@u+2,w
 12317  362B  00F7               	movwf	??___fpclassifyf+2
 12318  362C  0825               	movf	___fpclassifyf@u+3,w
 12319  362D  00F8               	movwf	??___fpclassifyf+3
 12320  362E  3017               	movlw	23
 12321  362F                     u5475:	
 12322  362F  36F8               	lsrf	??___fpclassifyf+3,f
 12323  3630  0CF7               	rrf	??___fpclassifyf+2,f
 12324  3631  0CF6               	rrf	??___fpclassifyf+1,f
 12325  3632  0CF5               	rrf	??___fpclassifyf,f
 12326  3633  0B89               	decfsz	9,f
 12327  3634  2E2F               	goto	u5475
 12328  3635  30FF               	movlw	255
 12329  3636  0575               	andwf	??___fpclassifyf,w
 12330  3637  00A0               	movwf	___fpclassifyf@e
 12331  3638  3000               	movlw	0
 12332  3639  0576               	andwf	??___fpclassifyf+1,w
 12333  363A  00A1               	movwf	___fpclassifyf@e+1
 12334  363B  0820               	movf	___fpclassifyf@e,w
 12335  363C  0421               	iorwf	___fpclassifyf@e+1,w
 12336  363D  1D03               	btfss	3,2
 12337  363E  2E5E               	goto	l4759
 12338  363F  0822               	movf	___fpclassifyf@u,w
 12339  3640  00F5               	movwf	??___fpclassifyf
 12340  3641  0823               	movf	___fpclassifyf@u+1,w
 12341  3642  00F6               	movwf	??___fpclassifyf+1
 12342  3643  0824               	movf	___fpclassifyf@u+2,w
 12343  3644  00F7               	movwf	??___fpclassifyf+2
 12344  3645  0825               	movf	___fpclassifyf@u+3,w
 12345  3646  00F8               	movwf	??___fpclassifyf+3
 12346  3647  3001               	movlw	1
 12347  3648                     u5495:	
 12348  3648  35F5               	lslf	??___fpclassifyf,f
 12349  3649  0DF6               	rlf	??___fpclassifyf+1,f
 12350  364A  0DF7               	rlf	??___fpclassifyf+2,f
 12351  364B  0DF8               	rlf	??___fpclassifyf+3,f
 12352  364C  0B89               	decfsz	9,f
 12353  364D  2E48               	goto	u5495
 12354  364E  0878               	movf	??___fpclassifyf+3,w
 12355  364F  0477               	iorwf	??___fpclassifyf+2,w
 12356  3650  0476               	iorwf	??___fpclassifyf+1,w
 12357  3651  0475               	iorwf	??___fpclassifyf,w
 12358  3652  1D03               	skipz
 12359  3653  2E59               	goto	l4755
 12360  3654  3002               	movlw	2
 12361  3655  00F1               	movwf	?___fpclassifyf
 12362  3656  3000               	movlw	0
 12363  3657  00F2               	movwf	?___fpclassifyf+1
 12364  3658  0008               	return
 12365  3659                     l4755:	
 12366  3659  3003               	movlw	3
 12367  365A  00F1               	movwf	?___fpclassifyf
 12368  365B  3000               	movlw	0
 12369  365C  00F2               	movwf	?___fpclassifyf+1
 12370  365D  0008               	return
 12371  365E                     l4759:	
 12372  365E  0A20               	incf	___fpclassifyf@e,w
 12373  365F  0421               	iorwf	___fpclassifyf@e+1,w
 12374  3660  1D03               	btfss	3,2
 12375  3661  2E81               	goto	l4765
 12376  3662  0822               	movf	___fpclassifyf@u,w
 12377  3663  00F5               	movwf	??___fpclassifyf
 12378  3664  0823               	movf	___fpclassifyf@u+1,w
 12379  3665  00F6               	movwf	??___fpclassifyf+1
 12380  3666  0824               	movf	___fpclassifyf@u+2,w
 12381  3667  00F7               	movwf	??___fpclassifyf+2
 12382  3668  0825               	movf	___fpclassifyf@u+3,w
 12383  3669  00F8               	movwf	??___fpclassifyf+3
 12384  366A  3009               	movlw	9
 12385  366B                     u5525:	
 12386  366B  35F5               	lslf	??___fpclassifyf,f
 12387  366C  0DF6               	rlf	??___fpclassifyf+1,f
 12388  366D  0DF7               	rlf	??___fpclassifyf+2,f
 12389  366E  0DF8               	rlf	??___fpclassifyf+3,f
 12390  366F  0B89               	decfsz	9,f
 12391  3670  2E6B               	goto	u5525
 12392  3671  0878               	movf	??___fpclassifyf+3,w
 12393  3672  0477               	iorwf	??___fpclassifyf+2,w
 12394  3673  0476               	iorwf	??___fpclassifyf+1,w
 12395  3674  0475               	iorwf	??___fpclassifyf,w
 12396  3675  1D03               	btfss	3,2
 12397  3676  2E79               	goto	u5530
 12398  3677  3001               	movlw	1
 12399  3678  2E7A               	goto	u5540
 12400  3679                     u5530:	
 12401  3679  3000               	movlw	0
 12402  367A                     u5540:	
 12403  367A  00F9               	movwf	??___fpclassifyf+4
 12404  367B  01FA               	clrf	??___fpclassifyf+5
 12405  367C  0879               	movf	??___fpclassifyf+4,w
 12406  367D  00F1               	movwf	?___fpclassifyf
 12407  367E  087A               	movf	??___fpclassifyf+5,w
 12408  367F  00F2               	movwf	?___fpclassifyf+1
 12409  3680  0008               	return
 12410  3681                     l4765:	
 12411  3681  3004               	movlw	4
 12412  3682  00F1               	movwf	?___fpclassifyf
 12413  3683  3000               	movlw	0
 12414  3684  00F2               	movwf	?___fpclassifyf+1
 12415  3685  0008               	return
 12416  3686                     __end_of___fpclassifyf:	
 12417                           
 12418                           	psect	text26
 12419  3143                     __ptext26:	
 12420 ;; *************** function ___flsub *****************
 12421 ;; Defined at:
 12422 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;  a               4    0[BANK1 ] int 
 12425 ;;  b               4    4[BANK1 ] int 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;		None
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  4    0[BANK1 ] int 
 12430 ;; Registers used:
 12431 ;;		wreg, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12437 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12441 ;;Total ram usage:        8 bytes
 12442 ;; Hardware stack levels used:    1
 12443 ;; Hardware stack levels required when called:    2
 12444 ;; This function calls:
 12445 ;;		___fladd
 12446 ;; This function is called by:
 12447 ;;		_efgtoa
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           
 12452                           ;psect for function ___flsub
 12453  3143                     ___flsub:	
 12454                           
 12455                           ;incstack = 0
 12456                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12457  3143  3080               	movlw	128
 12458  3144  0021               	movlb	1	; select bank1
 12459  3145  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 12460  3146  0827               	movf	(___flsub@b+3)^(0+128),w
 12461  3147  0020               	movlb	0	; select bank0
 12462  3148  00DD               	movwf	___fladd@b+3
 12463  3149  0021               	movlb	1	; select bank1
 12464  314A  0826               	movf	(___flsub@b+2)^(0+128),w
 12465  314B  0020               	movlb	0	; select bank0
 12466  314C  00DC               	movwf	___fladd@b+2
 12467  314D  0021               	movlb	1	; select bank1
 12468  314E  0825               	movf	(___flsub@b+1)^(0+128),w
 12469  314F  0020               	movlb	0	; select bank0
 12470  3150  00DB               	movwf	___fladd@b+1
 12471  3151  0021               	movlb	1	; select bank1
 12472  3152  0824               	movf	___flsub@b^(0+128),w
 12473  3153  0020               	movlb	0	; select bank0
 12474  3154  00DA               	movwf	___fladd@b
 12475  3155  0021               	movlb	1	; select bank1
 12476  3156  0823               	movf	(___flsub@a+3)^(0+128),w
 12477  3157  0020               	movlb	0	; select bank0
 12478  3158  00E1               	movwf	___fladd@a+3
 12479  3159  0021               	movlb	1	; select bank1
 12480  315A  0822               	movf	(___flsub@a+2)^(0+128),w
 12481  315B  0020               	movlb	0	; select bank0
 12482  315C  00E0               	movwf	___fladd@a+2
 12483  315D  0021               	movlb	1	; select bank1
 12484  315E  0821               	movf	(___flsub@a+1)^(0+128),w
 12485  315F  0020               	movlb	0	; select bank0
 12486  3160  00DF               	movwf	___fladd@a+1
 12487  3161  0021               	movlb	1	; select bank1
 12488  3162  0820               	movf	___flsub@a^(0+128),w
 12489  3163  0020               	movlb	0	; select bank0
 12490  3164  00DE               	movwf	___fladd@a
 12491  3165  319E  261E         	fcall	___fladd
 12492  3167  0020               	movlb	0	; select bank0
 12493  3168  085D               	movf	?___fladd+3,w
 12494  3169  0021               	movlb	1	; select bank1
 12495  316A  00A3               	movwf	(?___flsub+3)^(0+128)
 12496  316B  0020               	movlb	0	; select bank0
 12497  316C  085C               	movf	?___fladd+2,w
 12498  316D  0021               	movlb	1	; select bank1
 12499  316E  00A2               	movwf	(?___flsub+2)^(0+128)
 12500  316F  0020               	movlb	0	; select bank0
 12501  3170  085B               	movf	?___fladd+1,w
 12502  3171  0021               	movlb	1	; select bank1
 12503  3172  00A1               	movwf	(?___flsub+1)^(0+128)
 12504  3173  0020               	movlb	0	; select bank0
 12505  3174  085A               	movf	?___fladd,w
 12506  3175  0021               	movlb	1	; select bank1
 12507  3176  00A0               	movwf	?___flsub^(0+128)
 12508  3177  0008               	return
 12509  3178                     __end_of___flsub:	
 12510                           
 12511                           	psect	text27
 12512  3E5D                     __ptext27:	
 12513 ;; *************** function ___flneg *****************
 12514 ;; Defined at:
 12515 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  f1              4    1[COMMON] int 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;		None
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  4    1[COMMON] int 
 12522 ;; Registers used:
 12523 ;;		wreg
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;Total ram usage:        4 bytes
 12534 ;; Hardware stack levels used:    1
 12535 ;; Hardware stack levels required when called:    1
 12536 ;; This function calls:
 12537 ;;		Nothing
 12538 ;; This function is called by:
 12539 ;;		_efgtoa
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           
 12544                           ;psect for function ___flneg
 12545  3E5D                     ___flneg:	
 12546                           
 12547                           ;incstack = 0
 12548                           ; Regs used in ___flneg: [wreg]
 12549  3E5D  0874               	movf	___flneg@f1+3,w
 12550  3E5E  0473               	iorwf	___flneg@f1+2,w
 12551  3E5F  0472               	iorwf	___flneg@f1+1,w
 12552  3E60  0471               	iorwf	___flneg@f1,w
 12553  3E61  1903               	skipnz
 12554  3E62  0008               	return
 12555  3E63  3080               	movlw	128
 12556  3E64  06F4               	xorwf	___flneg@f1+3,f
 12557  3E65  0008               	return
 12558  3E66                     __end_of___flneg:	
 12559                           
 12560                           	psect	text28
 12561  32AB                     __ptext28:	
 12562 ;; *************** function ___fleq *****************
 12563 ;; Defined at:
 12564 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;  ff1             4    1[COMMON] int 
 12567 ;;  ff2             4    5[COMMON] int 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;		None               void
 12572 ;; Registers used:
 12573 ;;		wreg, status,2, status,0
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12579 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12582 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12583 ;;Total ram usage:       12 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; Hardware stack levels required when called:    1
 12586 ;; This function calls:
 12587 ;;		Nothing
 12588 ;; This function is called by:
 12589 ;;		_efgtoa
 12590 ;; This function uses a non-reentrant model
 12591 ;;
 12592                           
 12593                           
 12594                           ;psect for function ___fleq
 12595  32AB                     ___fleq:	
 12596                           
 12597                           ;incstack = 0
 12598                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12599  32AB  3000               	movlw	0
 12600  32AC  0571               	andwf	___fleq@ff1,w
 12601  32AD  0020               	movlb	0	; select bank0
 12602  32AE  00A0               	movwf	??___fleq
 12603  32AF  3000               	movlw	0
 12604  32B0  0572               	andwf	___fleq@ff1+1,w
 12605  32B1  00A1               	movwf	??___fleq+1
 12606  32B2  3080               	movlw	128
 12607  32B3  0573               	andwf	___fleq@ff1+2,w
 12608  32B4  00A2               	movwf	??___fleq+2
 12609  32B5  307F               	movlw	127
 12610  32B6  0574               	andwf	___fleq@ff1+3,w
 12611  32B7  00A3               	movwf	??___fleq+3
 12612  32B8  0823               	movf	??___fleq+3,w
 12613  32B9  0422               	iorwf	??___fleq+2,w
 12614  32BA  0421               	iorwf	??___fleq+1,w
 12615  32BB  0420               	iorwf	??___fleq,w
 12616  32BC  1D03               	skipz
 12617  32BD  2AC6               	goto	l1128
 12618  32BE  3000               	movlw	0
 12619  32BF  00F4               	movwf	___fleq@ff1+3
 12620  32C0  3000               	movlw	0
 12621  32C1  00F3               	movwf	___fleq@ff1+2
 12622  32C2  3000               	movlw	0
 12623  32C3  00F2               	movwf	___fleq@ff1+1
 12624  32C4  3000               	movlw	0
 12625  32C5  00F1               	movwf	___fleq@ff1
 12626  32C6                     l1128:	
 12627  32C6  3000               	movlw	0
 12628  32C7  0575               	andwf	___fleq@ff2,w
 12629  32C8  00A0               	movwf	??___fleq
 12630  32C9  3000               	movlw	0
 12631  32CA  0576               	andwf	___fleq@ff2+1,w
 12632  32CB  00A1               	movwf	??___fleq+1
 12633  32CC  3080               	movlw	128
 12634  32CD  0577               	andwf	___fleq@ff2+2,w
 12635  32CE  00A2               	movwf	??___fleq+2
 12636  32CF  307F               	movlw	127
 12637  32D0  0578               	andwf	___fleq@ff2+3,w
 12638  32D1  00A3               	movwf	??___fleq+3
 12639  32D2  0823               	movf	??___fleq+3,w
 12640  32D3  0422               	iorwf	??___fleq+2,w
 12641  32D4  0421               	iorwf	??___fleq+1,w
 12642  32D5  0420               	iorwf	??___fleq,w
 12643  32D6  1D03               	skipz
 12644  32D7  2AE0               	goto	l1129
 12645  32D8  3000               	movlw	0
 12646  32D9  00F8               	movwf	___fleq@ff2+3
 12647  32DA  3000               	movlw	0
 12648  32DB  00F7               	movwf	___fleq@ff2+2
 12649  32DC  3000               	movlw	0
 12650  32DD  00F6               	movwf	___fleq@ff2+1
 12651  32DE  3000               	movlw	0
 12652  32DF  00F5               	movwf	___fleq@ff2
 12653  32E0                     l1129:	
 12654  32E0  0878               	movf	___fleq@ff2+3,w
 12655  32E1  0674               	xorwf	___fleq@ff1+3,w
 12656  32E2  1D03               	skipz
 12657  32E3  2AEE               	goto	u9845
 12658  32E4  0877               	movf	___fleq@ff2+2,w
 12659  32E5  0673               	xorwf	___fleq@ff1+2,w
 12660  32E6  1D03               	skipz
 12661  32E7  2AEE               	goto	u9845
 12662  32E8  0876               	movf	___fleq@ff2+1,w
 12663  32E9  0672               	xorwf	___fleq@ff1+1,w
 12664  32EA  1D03               	skipz
 12665  32EB  2AEE               	goto	u9845
 12666  32EC  0875               	movf	___fleq@ff2,w
 12667  32ED  0671               	xorwf	___fleq@ff1,w
 12668  32EE                     u9845:	
 12669  32EE  1903               	skipnz
 12670  32EF  2AF2               	goto	l7317
 12671  32F0  1003               	clrc
 12672  32F1  0008               	return
 12673  32F2                     l7317:	
 12674  32F2  1403               	setc
 12675  32F3  0008               	return
 12676  32F4                     __end_of___fleq:	
 12677                           
 12678                           	psect	text29
 12679  3266                     __ptext29:	
 12680 ;; *************** function ___awmod *****************
 12681 ;; Defined at:
 12682 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  divisor         2    1[COMMON] int 
 12685 ;;  dividend        2    3[COMMON] int 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  sign            1    7[COMMON] unsigned char 
 12688 ;;  counter         1    6[COMMON] unsigned char 
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  2    1[COMMON] int 
 12691 ;; Registers used:
 12692 ;;		wreg, status,2, status,0
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12702 ;;Total ram usage:        7 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; Hardware stack levels required when called:    1
 12705 ;; This function calls:
 12706 ;;		Nothing
 12707 ;; This function is called by:
 12708 ;;		_efgtoa
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           
 12713                           ;psect for function ___awmod
 12714  3266                     ___awmod:	
 12715                           
 12716                           ;incstack = 0
 12717                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12718  3266  01F7               	clrf	___awmod@sign
 12719  3267  1FF4               	btfss	___awmod@dividend+1,7
 12720  3268  2A70               	goto	l4965
 12721  3269  09F3               	comf	___awmod@dividend,f
 12722  326A  09F4               	comf	___awmod@dividend+1,f
 12723  326B  0AF3               	incf	___awmod@dividend,f
 12724  326C  1903               	skipnz
 12725  326D  0AF4               	incf	___awmod@dividend+1,f
 12726  326E  01F7               	clrf	___awmod@sign
 12727  326F  0AF7               	incf	___awmod@sign,f
 12728  3270                     l4965:	
 12729  3270  1FF2               	btfss	___awmod@divisor+1,7
 12730  3271  2A77               	goto	l4969
 12731  3272  09F1               	comf	___awmod@divisor,f
 12732  3273  09F2               	comf	___awmod@divisor+1,f
 12733  3274  0AF1               	incf	___awmod@divisor,f
 12734  3275  1903               	skipnz
 12735  3276  0AF2               	incf	___awmod@divisor+1,f
 12736  3277                     l4969:	
 12737  3277  0871               	movf	___awmod@divisor,w
 12738  3278  0472               	iorwf	___awmod@divisor+1,w
 12739  3279  1903               	btfsc	3,2
 12740  327A  2A9E               	goto	l4987
 12741  327B  01F6               	clrf	___awmod@counter
 12742  327C  0AF6               	incf	___awmod@counter,f
 12743  327D                     l4977:	
 12744  327D  1BF2               	btfsc	___awmod@divisor+1,7
 12745  327E  2A89               	goto	l4979
 12746  327F  3001               	movlw	1
 12747  3280                     u6155:	
 12748  3280  35F1               	lslf	___awmod@divisor,f
 12749  3281  0DF2               	rlf	___awmod@divisor+1,f
 12750  3282  0B89               	decfsz	9,f
 12751  3283  2A80               	goto	u6155
 12752  3284  3001               	movlw	1
 12753  3285  00F5               	movwf	??___awmod
 12754  3286  0875               	movf	??___awmod,w
 12755  3287  07F6               	addwf	___awmod@counter,f
 12756  3288  2A7D               	goto	l4977
 12757  3289                     l4979:	
 12758  3289  0872               	movf	___awmod@divisor+1,w
 12759  328A  0274               	subwf	___awmod@dividend+1,w
 12760  328B  1D03               	skipz
 12761  328C  2A8F               	goto	u6175
 12762  328D  0871               	movf	___awmod@divisor,w
 12763  328E  0273               	subwf	___awmod@dividend,w
 12764  328F                     u6175:	
 12765  328F  1C03               	skipc
 12766  3290  2A95               	goto	l4983
 12767  3291  0871               	movf	___awmod@divisor,w
 12768  3292  02F3               	subwf	___awmod@dividend,f
 12769  3293  0872               	movf	___awmod@divisor+1,w
 12770  3294  3BF4               	subwfb	___awmod@dividend+1,f
 12771  3295                     l4983:	
 12772  3295  3001               	movlw	1
 12773  3296                     u6185:	
 12774  3296  36F2               	lsrf	___awmod@divisor+1,f
 12775  3297  0CF1               	rrf	___awmod@divisor,f
 12776  3298  0B89               	decfsz	9,f
 12777  3299  2A96               	goto	u6185
 12778  329A  3001               	movlw	1
 12779  329B  02F6               	subwf	___awmod@counter,f
 12780  329C  1D03               	btfss	3,2
 12781  329D  2A89               	goto	l4979
 12782  329E                     l4987:	
 12783  329E  0877               	movf	___awmod@sign,w
 12784  329F  1903               	btfsc	3,2
 12785  32A0  2AA6               	goto	l4991
 12786  32A1  09F3               	comf	___awmod@dividend,f
 12787  32A2  09F4               	comf	___awmod@dividend+1,f
 12788  32A3  0AF3               	incf	___awmod@dividend,f
 12789  32A4  1903               	skipnz
 12790  32A5  0AF4               	incf	___awmod@dividend+1,f
 12791  32A6                     l4991:	
 12792  32A6  0874               	movf	___awmod@dividend+1,w
 12793  32A7  00F2               	movwf	?___awmod+1
 12794  32A8  0873               	movf	___awmod@dividend,w
 12795  32A9  00F1               	movwf	?___awmod
 12796  32AA  0008               	return
 12797  32AB                     __end_of___awmod:	
 12798                           
 12799                           	psect	text30
 12800  3394                     __ptext30:	
 12801 ;; *************** function ___awdiv *****************
 12802 ;; Defined at:
 12803 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  divisor         2    1[COMMON] int 
 12806 ;;  dividend        2    3[COMMON] int 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  quotient        2    8[COMMON] int 
 12809 ;;  sign            1    7[COMMON] unsigned char 
 12810 ;;  counter         1    6[COMMON] unsigned char 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  2    1[COMMON] int 
 12813 ;; Registers used:
 12814 ;;		wreg, status,2, status,0
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12821 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12823 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12824 ;;Total ram usage:        9 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    1
 12827 ;; This function calls:
 12828 ;;		Nothing
 12829 ;; This function is called by:
 12830 ;;		_efgtoa
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function ___awdiv
 12836  3394                     ___awdiv:	
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12840  3394  01F7               	clrf	___awdiv@sign
 12841  3395  1FF2               	btfss	___awdiv@divisor+1,7
 12842  3396  2B9E               	goto	l4921
 12843  3397  09F1               	comf	___awdiv@divisor,f
 12844  3398  09F2               	comf	___awdiv@divisor+1,f
 12845  3399  0AF1               	incf	___awdiv@divisor,f
 12846  339A  1903               	skipnz
 12847  339B  0AF2               	incf	___awdiv@divisor+1,f
 12848  339C  01F7               	clrf	___awdiv@sign
 12849  339D  0AF7               	incf	___awdiv@sign,f
 12850  339E                     l4921:	
 12851  339E  1FF4               	btfss	___awdiv@dividend+1,7
 12852  339F  2BA9               	goto	l4927
 12853  33A0  09F3               	comf	___awdiv@dividend,f
 12854  33A1  09F4               	comf	___awdiv@dividend+1,f
 12855  33A2  0AF3               	incf	___awdiv@dividend,f
 12856  33A3  1903               	skipnz
 12857  33A4  0AF4               	incf	___awdiv@dividend+1,f
 12858  33A5  3001               	movlw	1
 12859  33A6  00F5               	movwf	??___awdiv
 12860  33A7  0875               	movf	??___awdiv,w
 12861  33A8  06F7               	xorwf	___awdiv@sign,f
 12862  33A9                     l4927:	
 12863  33A9  01F8               	clrf	___awdiv@quotient
 12864  33AA  01F9               	clrf	___awdiv@quotient+1
 12865  33AB  0871               	movf	___awdiv@divisor,w
 12866  33AC  0472               	iorwf	___awdiv@divisor+1,w
 12867  33AD  1903               	btfsc	3,2
 12868  33AE  2BD8               	goto	l4949
 12869  33AF  01F6               	clrf	___awdiv@counter
 12870  33B0  0AF6               	incf	___awdiv@counter,f
 12871  33B1                     l4937:	
 12872  33B1  1BF2               	btfsc	___awdiv@divisor+1,7
 12873  33B2  2BBD               	goto	l4939
 12874  33B3  3001               	movlw	1
 12875  33B4                     u6055:	
 12876  33B4  35F1               	lslf	___awdiv@divisor,f
 12877  33B5  0DF2               	rlf	___awdiv@divisor+1,f
 12878  33B6  0B89               	decfsz	9,f
 12879  33B7  2BB4               	goto	u6055
 12880  33B8  3001               	movlw	1
 12881  33B9  00F5               	movwf	??___awdiv
 12882  33BA  0875               	movf	??___awdiv,w
 12883  33BB  07F6               	addwf	___awdiv@counter,f
 12884  33BC  2BB1               	goto	l4937
 12885  33BD                     l4939:	
 12886  33BD  3001               	movlw	1
 12887  33BE                     u6075:	
 12888  33BE  35F8               	lslf	___awdiv@quotient,f
 12889  33BF  0DF9               	rlf	___awdiv@quotient+1,f
 12890  33C0  0B89               	decfsz	9,f
 12891  33C1  2BBE               	goto	u6075
 12892  33C2  0872               	movf	___awdiv@divisor+1,w
 12893  33C3  0274               	subwf	___awdiv@dividend+1,w
 12894  33C4  1D03               	skipz
 12895  33C5  2BC8               	goto	u6085
 12896  33C6  0871               	movf	___awdiv@divisor,w
 12897  33C7  0273               	subwf	___awdiv@dividend,w
 12898  33C8                     u6085:	
 12899  33C8  1C03               	skipc
 12900  33C9  2BCF               	goto	l4945
 12901  33CA  0871               	movf	___awdiv@divisor,w
 12902  33CB  02F3               	subwf	___awdiv@dividend,f
 12903  33CC  0872               	movf	___awdiv@divisor+1,w
 12904  33CD  3BF4               	subwfb	___awdiv@dividend+1,f
 12905  33CE  1478               	bsf	___awdiv@quotient,0
 12906  33CF                     l4945:	
 12907  33CF  3001               	movlw	1
 12908  33D0                     u6095:	
 12909  33D0  36F2               	lsrf	___awdiv@divisor+1,f
 12910  33D1  0CF1               	rrf	___awdiv@divisor,f
 12911  33D2  0B89               	decfsz	9,f
 12912  33D3  2BD0               	goto	u6095
 12913  33D4  3001               	movlw	1
 12914  33D5  02F6               	subwf	___awdiv@counter,f
 12915  33D6  1D03               	btfss	3,2
 12916  33D7  2BBD               	goto	l4939
 12917  33D8                     l4949:	
 12918  33D8  0877               	movf	___awdiv@sign,w
 12919  33D9  1903               	btfsc	3,2
 12920  33DA  2BE0               	goto	l4953
 12921  33DB  09F8               	comf	___awdiv@quotient,f
 12922  33DC  09F9               	comf	___awdiv@quotient+1,f
 12923  33DD  0AF8               	incf	___awdiv@quotient,f
 12924  33DE  1903               	skipnz
 12925  33DF  0AF9               	incf	___awdiv@quotient+1,f
 12926  33E0                     l4953:	
 12927  33E0  0879               	movf	___awdiv@quotient+1,w
 12928  33E1  00F2               	movwf	?___awdiv+1
 12929  33E2  0878               	movf	___awdiv@quotient,w
 12930  33E3  00F1               	movwf	?___awdiv
 12931  33E4  0008               	return
 12932  33E5                     __end_of___awdiv:	
 12933                           
 12934                           	psect	text31
 12935  19F8                     __ptext31:	
 12936 ;; *************** function _dtoa *****************
 12937 ;; Defined at:
 12938 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12941 ;;		 -> vsnprintf@f(6), 
 12942 ;;  d               8   18[BANK0 ] long long 
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  n               8   37[BANK0 ] long long 
 12945 ;;  i               2   45[BANK0 ] int 
 12946 ;;  s               2   35[BANK0 ] int 
 12947 ;;  w               2   33[BANK0 ] int 
 12948 ;;  p               2   31[BANK0 ] int 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  2   16[BANK0 ] int 
 12951 ;; Registers used:
 12952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12958 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12959 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12960 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12962 ;;Total ram usage:       31 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    5
 12965 ;; This function calls:
 12966 ;;		___aodiv
 12967 ;;		___aomod
 12968 ;;		_abs
 12969 ;;		_pad
 12970 ;; This function is called by:
 12971 ;;		_vfpfcnvrt
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           
 12976                           ;psect for function _dtoa
 12977  19F8                     _dtoa:	
 12978                           
 12979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12980                           
 12981                           ;incstack = 0
 12982                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12983  19F8  0020               	movlb	0	; select bank0
 12984  19F9  0832               	movf	dtoa@d,w
 12985  19FA  00C5               	movwf	dtoa@n
 12986  19FB  0833               	movf	dtoa@d+1,w
 12987  19FC  00C6               	movwf	dtoa@n+1
 12988  19FD  0834               	movf	dtoa@d+2,w
 12989  19FE  00C7               	movwf	dtoa@n+2
 12990  19FF  0835               	movf	dtoa@d+3,w
 12991  1A00  00C8               	movwf	dtoa@n+3
 12992  1A01  0836               	movf	dtoa@d+4,w
 12993  1A02  00C9               	movwf	dtoa@n+4
 12994  1A03  0837               	movf	dtoa@d+5,w
 12995  1A04  00CA               	movwf	dtoa@n+5
 12996  1A05  0838               	movf	dtoa@d+6,w
 12997  1A06  00CB               	movwf	dtoa@n+6
 12998  1A07  0839               	movf	dtoa@d+7,w
 12999  1A08  00CC               	movwf	dtoa@n+7
 13000                           
 13001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13002  1A09  3045               	movlw	low dtoa@n
 13003  1A0A  0086               	movwf	6
 13004  1A0B  3000               	movlw	high dtoa@n
 13005  1A0C  0087               	movwf	7
 13006  1A0D  3F47               	moviw [7]fsr1
 13007  1A0E  00BA               	movwf	??_dtoa
 13008  1A0F  1FBA               	btfss	??_dtoa,7
 13009  1A10  2A13               	goto	u9860
 13010  1A11  3001               	movlw	1
 13011  1A12  2A14               	goto	u9870
 13012  1A13                     u9860:	
 13013  1A13  3000               	movlw	0
 13014  1A14                     u9870:	
 13015  1A14  0020               	movlb	0	; select bank0
 13016  1A15  00BB               	movwf	??_dtoa+1
 13017  1A16  01BC               	clrf	??_dtoa+2
 13018  1A17  083B               	movf	??_dtoa+1,w
 13019  1A18  00C3               	movwf	dtoa@s
 13020  1A19  083C               	movf	??_dtoa+2,w
 13021  1A1A  00C4               	movwf	dtoa@s+1
 13022                           
 13023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13024  1A1B  0843               	movf	dtoa@s,w
 13025  1A1C  0444               	iorwf	dtoa@s+1,w
 13026  1A1D  1903               	btfsc	3,2
 13027  1A1E  2A3D               	goto	l656
 13028                           
 13029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13030  1A1F  09C5               	comf	dtoa@n,f
 13031  1A20  09C6               	comf	dtoa@n+1,f
 13032  1A21  09C7               	comf	dtoa@n+2,f
 13033  1A22  09C8               	comf	dtoa@n+3,f
 13034  1A23  09C9               	comf	dtoa@n+4,f
 13035  1A24  09CA               	comf	dtoa@n+5,f
 13036  1A25  09CB               	comf	dtoa@n+6,f
 13037  1A26  09CC               	comf	dtoa@n+7,f
 13038  1A27  0AC5               	incf	dtoa@n,f
 13039  1A28  1D03               	skipz
 13040  1A29  2A3D               	goto	l656
 13041  1A2A  0AC6               	incf	dtoa@n+1,f
 13042  1A2B  1D03               	skipz
 13043  1A2C  2A3D               	goto	l656
 13044  1A2D  0AC7               	incf	dtoa@n+2,f
 13045  1A2E  1D03               	skipz
 13046  1A2F  2A3D               	goto	l656
 13047  1A30  0AC8               	incf	dtoa@n+3,f
 13048  1A31  1D03               	skipz
 13049  1A32  2A3D               	goto	l656
 13050  1A33  0AC9               	incf	dtoa@n+4,f
 13051  1A34  1D03               	skipz
 13052  1A35  2A3D               	goto	l656
 13053  1A36  0ACA               	incf	dtoa@n+5,f
 13054  1A37  1D03               	skipz
 13055  1A38  2A3D               	goto	l656
 13056  1A39  0ACB               	incf	dtoa@n+6,f
 13057  1A3A  1D03               	skipz
 13058  1A3B  2A3D               	goto	l656
 13059  1A3C  0ACC               	incf	dtoa@n+7,f
 13060  1A3D                     l656:	
 13061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 13062                           
 13063                           
 13064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13065  1A3D  0023               	movlb	3	; select bank3
 13066  1A3E  1BB3               	btfsc	(_prec+1)^(0+384),7
 13067  1A3F  2A44               	goto	l657
 13068                           
 13069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13070  1A40  30FD               	movlw	253
 13071  1A41  05B4               	andwf	_flags^(0+384),f
 13072  1A42  30FF               	movlw	255
 13073  1A43  05B5               	andwf	(_flags+1)^(0+384),f
 13074  1A44                     l657:	
 13075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 13076                           
 13077                           
 13078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13079  1A44  0833               	movf	(_prec+1)^(0+384),w
 13080  1A45  3A80               	xorlw	128
 13081  1A46  0020               	movlb	0	; select bank0
 13082  1A47  00BA               	movwf	??_dtoa
 13083  1A48  3080               	movlw	128
 13084  1A49  023A               	subwf	??_dtoa,w
 13085  1A4A  1D03               	skipz
 13086  1A4B  2A4F               	goto	u9915
 13087  1A4C  3001               	movlw	1
 13088  1A4D  0023               	movlb	3	; select bank3
 13089  1A4E  0232               	subwf	_prec^(0+384),w
 13090  1A4F                     u9915:	
 13091  1A4F  1803               	skipnc
 13092  1A50  2A57               	goto	l7347
 13093  1A51  3001               	movlw	1
 13094  1A52  0020               	movlb	0	; select bank0
 13095  1A53  00BF               	movwf	dtoa@p
 13096  1A54  3000               	movlw	0
 13097  1A55  00C0               	movwf	dtoa@p+1
 13098  1A56  2A5F               	goto	l661
 13099  1A57                     l7347:	
 13100  1A57  0023               	movlb	3	; select bank3
 13101  1A58  0833               	movf	(_prec+1)^(0+384),w
 13102  1A59  0020               	movlb	0	; select bank0
 13103  1A5A  00C0               	movwf	dtoa@p+1
 13104  1A5B  0023               	movlb	3	; select bank3
 13105  1A5C  0832               	movf	_prec^(0+384),w
 13106  1A5D  0020               	movlb	0	; select bank0
 13107  1A5E  00BF               	movwf	dtoa@p
 13108  1A5F                     l661:	
 13109                           
 13110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13111  1A5F  0023               	movlb	3	; select bank3
 13112  1A60  0831               	movf	(_width+1)^(0+384),w
 13113  1A61  0020               	movlb	0	; select bank0
 13114  1A62  00C2               	movwf	dtoa@w+1
 13115  1A63  0023               	movlb	3	; select bank3
 13116  1A64  0830               	movf	_width^(0+384),w
 13117  1A65  0020               	movlb	0	; select bank0
 13118  1A66  00C1               	movwf	dtoa@w
 13119                           
 13120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13121  1A67  0843               	movf	dtoa@s,w
 13122  1A68  0444               	iorwf	dtoa@s+1,w
 13123  1A69  1D03               	btfss	3,2
 13124  1A6A  2A6E               	goto	l7353
 13125  1A6B  0023               	movlb	3	; select bank3
 13126  1A6C  1D34               	btfss	_flags^(0+384),2
 13127  1A6D  2A73               	goto	l662
 13128  1A6E                     l7353:	
 13129                           
 13130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13131  1A6E  30FF               	movlw	255
 13132  1A6F  0020               	movlb	0	; select bank0
 13133  1A70  07C1               	addwf	dtoa@w,f
 13134  1A71  30FF               	movlw	255
 13135  1A72  3DC2               	addwfc	dtoa@w+1,f
 13136  1A73                     l662:	
 13137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 13138                           
 13139                           
 13140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13141  1A73  304F               	movlw	79
 13142  1A74  0020               	movlb	0	; select bank0
 13143  1A75  00CD               	movwf	dtoa@i
 13144  1A76  3000               	movlw	0
 13145  1A77  00CE               	movwf	dtoa@i+1
 13146                           
 13147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13148  1A78  0025               	movlb	5	; select bank5
 13149  1A79  01EF               	clrf	(_dbuf^(0+640)+79)
 13150                           
 13151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13152  1A7A  2B09               	goto	l665
 13153  1A7B                     l7367:	
 13154  1A7B  0020               	movlb	0	; select bank0
 13155  1A7C  0845               	movf	dtoa@n,w
 13156  1A7D  0446               	iorwf	dtoa@n+1,w
 13157  1A7E  0447               	iorwf	dtoa@n+2,w
 13158  1A7F  0448               	iorwf	dtoa@n+3,w
 13159  1A80  0449               	iorwf	dtoa@n+4,w
 13160  1A81  044A               	iorwf	dtoa@n+5,w
 13161  1A82  044B               	iorwf	dtoa@n+6,w
 13162  1A83  044C               	iorwf	dtoa@n+7,w
 13163  1A84  1D03               	skipz
 13164  1A85  2AA0               	goto	l7357
 13165  1A86  0840               	movf	dtoa@p+1,w
 13166  1A87  3A80               	xorlw	128
 13167  1A88  00BA               	movwf	??_dtoa
 13168  1A89  3080               	movlw	128
 13169  1A8A  023A               	subwf	??_dtoa,w
 13170  1A8B  1D03               	skipz
 13171  1A8C  2A8F               	goto	u9965
 13172  1A8D  3001               	movlw	1
 13173  1A8E  023F               	subwf	dtoa@p,w
 13174  1A8F                     u9965:	
 13175  1A8F  1803               	skipnc
 13176  1A90  2AA0               	goto	l7357
 13177  1A91  0020               	movlb	0	; select bank0
 13178  1A92  0842               	movf	dtoa@w+1,w
 13179  1A93  3A80               	xorlw	128
 13180  1A94  00BA               	movwf	??_dtoa
 13181  1A95  3080               	movlw	128
 13182  1A96  023A               	subwf	??_dtoa,w
 13183  1A97  1D03               	skipz
 13184  1A98  2A9B               	goto	u9975
 13185  1A99  3001               	movlw	1
 13186  1A9A  0241               	subwf	dtoa@w,w
 13187  1A9B                     u9975:	
 13188  1A9B  1C03               	skipc
 13189  1A9C  2B15               	goto	l7375
 13190  1A9D  0023               	movlb	3	; select bank3
 13191  1A9E  1CB4               	btfss	_flags^(0+384),1
 13192  1A9F  2B15               	goto	l7375
 13193  1AA0                     l7357:	
 13194                           
 13195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13196  1AA0  30FF               	movlw	255
 13197  1AA1  0020               	movlb	0	; select bank0
 13198  1AA2  07CD               	addwf	dtoa@i,f
 13199  1AA3  30FF               	movlw	255
 13200  1AA4  3DCE               	addwfc	dtoa@i+1,f
 13201                           
 13202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13203  1AA5  300A               	movlw	10
 13204  1AA6  00A0               	movwf	___aomod@divisor
 13205  1AA7  01A1               	clrf	___aomod@divisor+1
 13206  1AA8  01A2               	clrf	___aomod@divisor+2
 13207  1AA9  01A3               	clrf	___aomod@divisor+3
 13208  1AAA  01A4               	clrf	___aomod@divisor+4
 13209  1AAB  01A5               	clrf	___aomod@divisor+5
 13210  1AAC  01A6               	clrf	___aomod@divisor+6
 13211  1AAD  01A7               	clrf	___aomod@divisor+7
 13212  1AAE  0845               	movf	dtoa@n,w
 13213  1AAF  00A8               	movwf	___aomod@dividend
 13214  1AB0  0846               	movf	dtoa@n+1,w
 13215  1AB1  00A9               	movwf	___aomod@dividend+1
 13216  1AB2  0847               	movf	dtoa@n+2,w
 13217  1AB3  00AA               	movwf	___aomod@dividend+2
 13218  1AB4  0848               	movf	dtoa@n+3,w
 13219  1AB5  00AB               	movwf	___aomod@dividend+3
 13220  1AB6  0849               	movf	dtoa@n+4,w
 13221  1AB7  00AC               	movwf	___aomod@dividend+4
 13222  1AB8  084A               	movf	dtoa@n+5,w
 13223  1AB9  00AD               	movwf	___aomod@dividend+5
 13224  1ABA  084B               	movf	dtoa@n+6,w
 13225  1ABB  00AE               	movwf	___aomod@dividend+6
 13226  1ABC  084C               	movf	dtoa@n+7,w
 13227  1ABD  00AF               	movwf	___aomod@dividend+7
 13228  1ABE  31A0  2054  3199   	fcall	___aomod
 13229  1AC1  0020               	movlb	0	; select bank0
 13230  1AC2  0821               	movf	?___aomod+1,w
 13231  1AC3  00F5               	movwf	abs@a+1
 13232  1AC4  0820               	movf	?___aomod,w
 13233  1AC5  00F4               	movwf	abs@a
 13234  1AC6  31BE  26CC  3199   	fcall	_abs
 13235  1AC9  0874               	movf	?_abs,w
 13236  1ACA  3E30               	addlw	48
 13237  1ACB  0020               	movlb	0	; select bank0
 13238  1ACC  00BA               	movwf	??_dtoa
 13239  1ACD  084D               	movf	dtoa@i,w
 13240  1ACE  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13241  1ACF  0086               	movwf	6
 13242  1AD0  3002               	movlw	2	; select bank5/6
 13243  1AD1  0087               	movwf	7
 13244  1AD2  083A               	movf	??_dtoa,w
 13245  1AD3  0081               	movwf	1
 13246                           
 13247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13248  1AD4  30FF               	movlw	255
 13249  1AD5  07BF               	addwf	dtoa@p,f
 13250  1AD6  30FF               	movlw	255
 13251  1AD7  3DC0               	addwfc	dtoa@p+1,f
 13252                           
 13253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13254  1AD8  30FF               	movlw	255
 13255  1AD9  07C1               	addwf	dtoa@w,f
 13256  1ADA  30FF               	movlw	255
 13257  1ADB  3DC2               	addwfc	dtoa@w+1,f
 13258                           
 13259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13260  1ADC  300A               	movlw	10
 13261  1ADD  00A0               	movwf	___aodiv@divisor
 13262  1ADE  01A1               	clrf	___aodiv@divisor+1
 13263  1ADF  01A2               	clrf	___aodiv@divisor+2
 13264  1AE0  01A3               	clrf	___aodiv@divisor+3
 13265  1AE1  01A4               	clrf	___aodiv@divisor+4
 13266  1AE2  01A5               	clrf	___aodiv@divisor+5
 13267  1AE3  01A6               	clrf	___aodiv@divisor+6
 13268  1AE4  01A7               	clrf	___aodiv@divisor+7
 13269  1AE5  0845               	movf	dtoa@n,w
 13270  1AE6  00A8               	movwf	___aodiv@dividend
 13271  1AE7  0846               	movf	dtoa@n+1,w
 13272  1AE8  00A9               	movwf	___aodiv@dividend+1
 13273  1AE9  0847               	movf	dtoa@n+2,w
 13274  1AEA  00AA               	movwf	___aodiv@dividend+2
 13275  1AEB  0848               	movf	dtoa@n+3,w
 13276  1AEC  00AB               	movwf	___aodiv@dividend+3
 13277  1AED  0849               	movf	dtoa@n+4,w
 13278  1AEE  00AC               	movwf	___aodiv@dividend+4
 13279  1AEF  084A               	movf	dtoa@n+5,w
 13280  1AF0  00AD               	movwf	___aodiv@dividend+5
 13281  1AF1  084B               	movf	dtoa@n+6,w
 13282  1AF2  00AE               	movwf	___aodiv@dividend+6
 13283  1AF3  084C               	movf	dtoa@n+7,w
 13284  1AF4  00AF               	movwf	___aodiv@dividend+7
 13285  1AF5  31A3  23EC  3199   	fcall	___aodiv
 13286  1AF8  0020               	movlb	0	; select bank0
 13287  1AF9  0820               	movf	?___aodiv,w
 13288  1AFA  00C5               	movwf	dtoa@n
 13289  1AFB  0821               	movf	?___aodiv+1,w
 13290  1AFC  00C6               	movwf	dtoa@n+1
 13291  1AFD  0822               	movf	?___aodiv+2,w
 13292  1AFE  00C7               	movwf	dtoa@n+2
 13293  1AFF  0823               	movf	?___aodiv+3,w
 13294  1B00  00C8               	movwf	dtoa@n+3
 13295  1B01  0824               	movf	?___aodiv+4,w
 13296  1B02  00C9               	movwf	dtoa@n+4
 13297  1B03  0825               	movf	?___aodiv+5,w
 13298  1B04  00CA               	movwf	dtoa@n+5
 13299  1B05  0826               	movf	?___aodiv+6,w
 13300  1B06  00CB               	movwf	dtoa@n+6
 13301  1B07  0827               	movf	?___aodiv+7,w
 13302  1B08  00CC               	movwf	dtoa@n+7
 13303  1B09                     l665:	
 13304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13305                           
 13306                           
 13307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13308  1B09  0020               	movlb	0	; select bank0
 13309  1B0A  084E               	movf	dtoa@i+1,w
 13310  1B0B  3A80               	xorlw	128
 13311  1B0C  00BA               	movwf	??_dtoa
 13312  1B0D  3080               	movlw	128
 13313  1B0E  023A               	subwf	??_dtoa,w
 13314  1B0F  1D03               	skipz
 13315  1B10  2B13               	goto	u9945
 13316  1B11  3001               	movlw	1
 13317  1B12  024D               	subwf	dtoa@i,w
 13318  1B13                     u9945:	
 13319  1B13  1803               	btfsc	3,0
 13320  1B14  2A7B               	goto	l7367
 13321  1B15                     l7375:	
 13322                           
 13323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13324  1B15  0020               	movlb	0	; select bank0
 13325  1B16  0843               	movf	dtoa@s,w
 13326  1B17  0444               	iorwf	dtoa@s+1,w
 13327  1B18  1D03               	btfss	3,2
 13328  1B19  2B1D               	goto	l7379
 13329  1B1A  0023               	movlb	3	; select bank3
 13330  1B1B  1D34               	btfss	_flags^(0+384),2
 13331  1B1C  2B35               	goto	l7389
 13332  1B1D                     l7379:	
 13333                           
 13334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13335  1B1D  30FF               	movlw	255
 13336  1B1E  0020               	movlb	0	; select bank0
 13337  1B1F  07CD               	addwf	dtoa@i,f
 13338  1B20  30FF               	movlw	255
 13339  1B21  3DCE               	addwfc	dtoa@i+1,f
 13340                           
 13341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13342  1B22  0843               	movf	dtoa@s,w
 13343  1B23  0444               	iorwf	dtoa@s+1,w
 13344  1B24  1D03               	btfss	3,2
 13345  1B25  2B28               	goto	l7385
 13346  1B26  302B               	movlw	43
 13347  1B27  2B29               	goto	L11
 13348  1B28                     l7385:	
 13349  1B28  302D               	movlw	45
 13350  1B29                     L11:	
 13351  1B29  00BD               	movwf	_dtoa$1231
 13352  1B2A  3000               	movlw	0
 13353  1B2B  00BE               	movwf	_dtoa$1231+1
 13354  1B2C  083D               	movf	_dtoa$1231,w
 13355  1B2D  00BA               	movwf	??_dtoa
 13356  1B2E  084D               	movf	dtoa@i,w
 13357  1B2F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13358  1B30  0086               	movwf	6
 13359  1B31  3002               	movlw	2	; select bank5/6
 13360  1B32  0087               	movwf	7
 13361  1B33  083A               	movf	??_dtoa,w
 13362  1B34  0081               	movwf	1
 13363  1B35                     l7389:	
 13364                           
 13365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13366  1B35  0020               	movlb	0	; select bank0
 13367  1B36  0831               	movf	dtoa@fp+1,w
 13368  1B37  00A7               	movwf	pad@fp+1
 13369  1B38  0830               	movf	dtoa@fp,w
 13370  1B39  00A6               	movwf	pad@fp
 13371  1B3A  084D               	movf	dtoa@i,w
 13372  1B3B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13373  1B3C  00BA               	movwf	??_dtoa
 13374  1B3D  083A               	movf	??_dtoa,w
 13375  1B3E  00A8               	movwf	pad@buf
 13376  1B3F  0842               	movf	dtoa@w+1,w
 13377  1B40  00AA               	movwf	pad@p+1
 13378  1B41  0841               	movf	dtoa@w,w
 13379  1B42  00A9               	movwf	pad@p
 13380  1B43  31B3  2343         	fcall	_pad
 13381  1B45  0020               	movlb	0	; select bank0
 13382  1B46  0827               	movf	?_pad+1,w
 13383  1B47  00B1               	movwf	?_dtoa+1
 13384  1B48  0826               	movf	?_pad,w
 13385  1B49  00B0               	movwf	?_dtoa
 13386  1B4A  0008               	return
 13387  1B4B                     __end_of_dtoa:	
 13388                           
 13389                           	psect	text32
 13390  3ECC                     __ptext32:	
 13391 ;; *************** function _abs *****************
 13392 ;; Defined at:
 13393 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;  a               2    4[COMMON] int 
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  2    4[COMMON] int 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2, status,0
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13411 ;;Total ram usage:        4 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:    1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_dtoa
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           
 13422                           ;psect for function _abs
 13423  3ECC                     _abs:	
 13424                           
 13425                           ;incstack = 0
 13426                           ; Regs used in _abs: [wreg+status,2+status,0]
 13427  3ECC  0875               	movf	abs@a+1,w
 13428  3ECD  3A80               	xorlw	128
 13429  3ECE  00F6               	movwf	??_abs
 13430  3ECF  3080               	movlw	128
 13431  3ED0  0276               	subwf	??_abs,w
 13432  3ED1  1D03               	skipz
 13433  3ED2  2ED5               	goto	u5465
 13434  3ED3  3001               	movlw	1
 13435  3ED4  0274               	subwf	abs@a,w
 13436  3ED5                     u5465:	
 13437  3ED5  1803               	skipnc
 13438  3ED6  0008               	return
 13439  3ED7  0974               	comf	abs@a,w
 13440  3ED8  00F6               	movwf	??_abs
 13441  3ED9  0975               	comf	abs@a+1,w
 13442  3EDA  00F7               	movwf	??_abs+1
 13443  3EDB  0AF6               	incf	??_abs,f
 13444  3EDC  1903               	skipnz
 13445  3EDD  0AF7               	incf	??_abs+1,f
 13446  3EDE  0876               	movf	??_abs,w
 13447  3EDF  00F4               	movwf	?_abs
 13448  3EE0  0877               	movf	??_abs+1,w
 13449  3EE1  00F5               	movwf	?_abs+1
 13450  3EE2  0008               	return
 13451  3EE3                     __end_of_abs:	
 13452                           
 13453                           	psect	text33
 13454  2054                     __ptext33:	
 13455 ;; *************** function ___aomod *****************
 13456 ;; Defined at:
 13457 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  divisor         8    0[BANK0 ] long long 
 13460 ;;  dividend        8    8[BANK0 ] long long 
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;  sign            1    3[COMMON] unsigned char 
 13463 ;;  counter         1    2[COMMON] unsigned char 
 13464 ;; Return value:  Size  Location     Type
 13465 ;;                  8    0[BANK0 ] long long 
 13466 ;; Registers used:
 13467 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13468 ;; Tracked objects:
 13469 ;;		On entry : 0/0
 13470 ;;		On exit  : 0/0
 13471 ;;		Unchanged: 0/0
 13472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13473 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13477 ;;Total ram usage:       19 bytes
 13478 ;; Hardware stack levels used:    1
 13479 ;; Hardware stack levels required when called:    1
 13480 ;; This function calls:
 13481 ;;		Nothing
 13482 ;; This function is called by:
 13483 ;;		_dtoa
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487                           
 13488                           ;psect for function ___aomod
 13489  2054                     ___aomod:	
 13490                           
 13491                           ;incstack = 0
 13492                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13493  2054  01F3               	clrf	___aomod@sign
 13494  2055  3028               	movlw	low ___aomod@dividend
 13495  2056  0086               	movwf	6
 13496  2057  3000               	movlw	high ___aomod@dividend
 13497  2058  0087               	movwf	7
 13498  2059  3F47               	moviw [7]fsr1
 13499  205A  00F1               	movwf	??___aomod
 13500  205B  1FF1               	btfss	??___aomod,7
 13501  205C  287E               	goto	l4889
 13502  205D  0020               	movlb	0	; select bank0
 13503  205E  09A8               	comf	___aomod@dividend,f
 13504  205F  09A9               	comf	___aomod@dividend+1,f
 13505  2060  09AA               	comf	___aomod@dividend+2,f
 13506  2061  09AB               	comf	___aomod@dividend+3,f
 13507  2062  09AC               	comf	___aomod@dividend+4,f
 13508  2063  09AD               	comf	___aomod@dividend+5,f
 13509  2064  09AE               	comf	___aomod@dividend+6,f
 13510  2065  09AF               	comf	___aomod@dividend+7,f
 13511  2066  0AA8               	incf	___aomod@dividend,f
 13512  2067  1D03               	skipz
 13513  2068  287C               	goto	u593lld
 13514  2069  0AA9               	incf	___aomod@dividend+1,f
 13515  206A  1D03               	skipz
 13516  206B  287C               	goto	u593lld
 13517  206C  0AAA               	incf	___aomod@dividend+2,f
 13518  206D  1D03               	skipz
 13519  206E  287C               	goto	u593lld
 13520  206F  0AAB               	incf	___aomod@dividend+3,f
 13521  2070  1D03               	skipz
 13522  2071  287C               	goto	u593lld
 13523  2072  0AAC               	incf	___aomod@dividend+4,f
 13524  2073  1D03               	skipz
 13525  2074  287C               	goto	u593lld
 13526  2075  0AAD               	incf	___aomod@dividend+5,f
 13527  2076  1D03               	skipz
 13528  2077  287C               	goto	u593lld
 13529  2078  0AAE               	incf	___aomod@dividend+6,f
 13530  2079  1D03               	skipz
 13531  207A  287C               	goto	u593lld
 13532  207B  0AAF               	incf	___aomod@dividend+7,f
 13533  207C                     u593lld:	
 13534  207C  01F3               	clrf	___aomod@sign
 13535  207D  0AF3               	incf	___aomod@sign,f
 13536  207E                     l4889:	
 13537  207E  3020               	movlw	low ___aomod@divisor
 13538  207F  0086               	movwf	6
 13539  2080  3000               	movlw	high ___aomod@divisor
 13540  2081  0087               	movwf	7
 13541  2082  3F47               	moviw [7]fsr1
 13542  2083  00F1               	movwf	??___aomod
 13543  2084  1FF1               	btfss	??___aomod,7
 13544  2085  28A5               	goto	l4893
 13545  2086  0020               	movlb	0	; select bank0
 13546  2087  09A0               	comf	___aomod@divisor,f
 13547  2088  09A1               	comf	___aomod@divisor+1,f
 13548  2089  09A2               	comf	___aomod@divisor+2,f
 13549  208A  09A3               	comf	___aomod@divisor+3,f
 13550  208B  09A4               	comf	___aomod@divisor+4,f
 13551  208C  09A5               	comf	___aomod@divisor+5,f
 13552  208D  09A6               	comf	___aomod@divisor+6,f
 13553  208E  09A7               	comf	___aomod@divisor+7,f
 13554  208F  0AA0               	incf	___aomod@divisor,f
 13555  2090  1D03               	skipz
 13556  2091  28A5               	goto	l4893
 13557  2092  0AA1               	incf	___aomod@divisor+1,f
 13558  2093  1D03               	skipz
 13559  2094  28A5               	goto	l4893
 13560  2095  0AA2               	incf	___aomod@divisor+2,f
 13561  2096  1D03               	skipz
 13562  2097  28A5               	goto	l4893
 13563  2098  0AA3               	incf	___aomod@divisor+3,f
 13564  2099  1D03               	skipz
 13565  209A  28A5               	goto	l4893
 13566  209B  0AA4               	incf	___aomod@divisor+4,f
 13567  209C  1D03               	skipz
 13568  209D  28A5               	goto	l4893
 13569  209E  0AA5               	incf	___aomod@divisor+5,f
 13570  209F  1D03               	skipz
 13571  20A0  28A5               	goto	l4893
 13572  20A1  0AA6               	incf	___aomod@divisor+6,f
 13573  20A2  1D03               	skipz
 13574  20A3  28A5               	goto	l4893
 13575  20A4  0AA7               	incf	___aomod@divisor+7,f
 13576  20A5                     l4893:	
 13577  20A5  0020               	movlb	0	; select bank0
 13578  20A6  0820               	movf	___aomod@divisor,w
 13579  20A7  0421               	iorwf	___aomod@divisor+1,w
 13580  20A8  0422               	iorwf	___aomod@divisor+2,w
 13581  20A9  0423               	iorwf	___aomod@divisor+3,w
 13582  20AA  0424               	iorwf	___aomod@divisor+4,w
 13583  20AB  0425               	iorwf	___aomod@divisor+5,w
 13584  20AC  0426               	iorwf	___aomod@divisor+6,w
 13585  20AD  0427               	iorwf	___aomod@divisor+7,w
 13586  20AE  1903               	skipnz
 13587  20AF  28FD               	goto	l4909
 13588  20B0  01F2               	clrf	___aomod@counter
 13589  20B1  0AF2               	incf	___aomod@counter,f
 13590  20B2                     l4901:	
 13591  20B2  1BA7               	btfsc	___aomod@divisor+7,7
 13592  20B3  28C1               	goto	l4903
 13593  20B4  35A0               	lslf	___aomod@divisor,f
 13594  20B5  0DA1               	rlf	___aomod@divisor+1,f
 13595  20B6  0DA2               	rlf	___aomod@divisor+2,f
 13596  20B7  0DA3               	rlf	___aomod@divisor+3,f
 13597  20B8  0DA4               	rlf	___aomod@divisor+4,f
 13598  20B9  0DA5               	rlf	___aomod@divisor+5,f
 13599  20BA  0DA6               	rlf	___aomod@divisor+6,f
 13600  20BB  0DA7               	rlf	___aomod@divisor+7,f
 13601  20BC  3001               	movlw	1
 13602  20BD  00F1               	movwf	??___aomod
 13603  20BE  0871               	movf	??___aomod,w
 13604  20BF  07F2               	addwf	___aomod@counter,f
 13605  20C0  28B2               	goto	l4901
 13606  20C1                     l4903:	
 13607  20C1  0827               	movf	___aomod@divisor+7,w
 13608  20C2  022F               	subwf	___aomod@dividend+7,w
 13609  20C3  1D03               	skipz
 13610  20C4  28DF               	goto	u5985
 13611  20C5  0826               	movf	___aomod@divisor+6,w
 13612  20C6  022E               	subwf	___aomod@dividend+6,w
 13613  20C7  1D03               	skipz
 13614  20C8  28DF               	goto	u5985
 13615  20C9  0825               	movf	___aomod@divisor+5,w
 13616  20CA  022D               	subwf	___aomod@dividend+5,w
 13617  20CB  1D03               	skipz
 13618  20CC  28DF               	goto	u5985
 13619  20CD  0824               	movf	___aomod@divisor+4,w
 13620  20CE  022C               	subwf	___aomod@dividend+4,w
 13621  20CF  1D03               	skipz
 13622  20D0  28DF               	goto	u5985
 13623  20D1  0823               	movf	___aomod@divisor+3,w
 13624  20D2  022B               	subwf	___aomod@dividend+3,w
 13625  20D3  1D03               	skipz
 13626  20D4  28DF               	goto	u5985
 13627  20D5  0822               	movf	___aomod@divisor+2,w
 13628  20D6  022A               	subwf	___aomod@dividend+2,w
 13629  20D7  1D03               	skipz
 13630  20D8  28DF               	goto	u5985
 13631  20D9  0821               	movf	___aomod@divisor+1,w
 13632  20DA  0229               	subwf	___aomod@dividend+1,w
 13633  20DB  1D03               	skipz
 13634  20DC  28DF               	goto	u5985
 13635  20DD  0820               	movf	___aomod@divisor,w
 13636  20DE  0228               	subwf	___aomod@dividend,w
 13637  20DF                     u5985:	
 13638  20DF  1C03               	skipc
 13639  20E0  28F1               	goto	l4907
 13640  20E1  0820               	movf	___aomod@divisor,w
 13641  20E2  02A8               	subwf	___aomod@dividend,f
 13642  20E3  0821               	movf	___aomod@divisor+1,w
 13643  20E4  3BA9               	subwfb	___aomod@dividend+1,f
 13644  20E5  0822               	movf	___aomod@divisor+2,w
 13645  20E6  3BAA               	subwfb	___aomod@dividend+2,f
 13646  20E7  0823               	movf	___aomod@divisor+3,w
 13647  20E8  3BAB               	subwfb	___aomod@dividend+3,f
 13648  20E9  0824               	movf	___aomod@divisor+4,w
 13649  20EA  3BAC               	subwfb	___aomod@dividend+4,f
 13650  20EB  0825               	movf	___aomod@divisor+5,w
 13651  20EC  3BAD               	subwfb	___aomod@dividend+5,f
 13652  20ED  0826               	movf	___aomod@divisor+6,w
 13653  20EE  3BAE               	subwfb	___aomod@dividend+6,f
 13654  20EF  0827               	movf	___aomod@divisor+7,w
 13655  20F0  3BAF               	subwfb	___aomod@dividend+7,f
 13656  20F1                     l4907:	
 13657  20F1  36A7               	lsrf	___aomod@divisor+7,f
 13658  20F2  0CA6               	rrf	___aomod@divisor+6,f
 13659  20F3  0CA5               	rrf	___aomod@divisor+5,f
 13660  20F4  0CA4               	rrf	___aomod@divisor+4,f
 13661  20F5  0CA3               	rrf	___aomod@divisor+3,f
 13662  20F6  0CA2               	rrf	___aomod@divisor+2,f
 13663  20F7  0CA1               	rrf	___aomod@divisor+1,f
 13664  20F8  0CA0               	rrf	___aomod@divisor,f
 13665  20F9  3001               	movlw	1
 13666  20FA  02F2               	subwf	___aomod@counter,f
 13667  20FB  1D03               	btfss	3,2
 13668  20FC  28C1               	goto	l4903
 13669  20FD                     l4909:	
 13670  20FD  0873               	movf	___aomod@sign,w
 13671  20FE  1903               	btfsc	3,2
 13672  20FF  291E               	goto	l1072
 13673  2100  09A8               	comf	___aomod@dividend,f
 13674  2101  09A9               	comf	___aomod@dividend+1,f
 13675  2102  09AA               	comf	___aomod@dividend+2,f
 13676  2103  09AB               	comf	___aomod@dividend+3,f
 13677  2104  09AC               	comf	___aomod@dividend+4,f
 13678  2105  09AD               	comf	___aomod@dividend+5,f
 13679  2106  09AE               	comf	___aomod@dividend+6,f
 13680  2107  09AF               	comf	___aomod@dividend+7,f
 13681  2108  0AA8               	incf	___aomod@dividend,f
 13682  2109  1D03               	skipz
 13683  210A  291E               	goto	l1072
 13684  210B  0AA9               	incf	___aomod@dividend+1,f
 13685  210C  1D03               	skipz
 13686  210D  291E               	goto	l1072
 13687  210E  0AAA               	incf	___aomod@dividend+2,f
 13688  210F  1D03               	skipz
 13689  2110  291E               	goto	l1072
 13690  2111  0AAB               	incf	___aomod@dividend+3,f
 13691  2112  1D03               	skipz
 13692  2113  291E               	goto	l1072
 13693  2114  0AAC               	incf	___aomod@dividend+4,f
 13694  2115  1D03               	skipz
 13695  2116  291E               	goto	l1072
 13696  2117  0AAD               	incf	___aomod@dividend+5,f
 13697  2118  1D03               	skipz
 13698  2119  291E               	goto	l1072
 13699  211A  0AAE               	incf	___aomod@dividend+6,f
 13700  211B  1D03               	skipz
 13701  211C  291E               	goto	l1072
 13702  211D  0AAF               	incf	___aomod@dividend+7,f
 13703  211E                     l1072:	
 13704  211E  0020               	movlb	0	; select bank0
 13705  211F  0828               	movf	___aomod@dividend,w
 13706  2120  00A0               	movwf	?___aomod
 13707  2121  0829               	movf	___aomod@dividend+1,w
 13708  2122  00A1               	movwf	?___aomod+1
 13709  2123  082A               	movf	___aomod@dividend+2,w
 13710  2124  00A2               	movwf	?___aomod+2
 13711  2125  082B               	movf	___aomod@dividend+3,w
 13712  2126  00A3               	movwf	?___aomod+3
 13713  2127  082C               	movf	___aomod@dividend+4,w
 13714  2128  00A4               	movwf	?___aomod+4
 13715  2129  082D               	movf	___aomod@dividend+5,w
 13716  212A  00A5               	movwf	?___aomod+5
 13717  212B  082E               	movf	___aomod@dividend+6,w
 13718  212C  00A6               	movwf	?___aomod+6
 13719  212D  082F               	movf	___aomod@dividend+7,w
 13720  212E  00A7               	movwf	?___aomod+7
 13721  212F  0008               	return
 13722  2130                     __end_of___aomod:	
 13723                           
 13724                           	psect	text34
 13725  23EC                     __ptext34:	
 13726 ;; *************** function ___aodiv *****************
 13727 ;; Defined at:
 13728 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  divisor         8    0[BANK0 ] long long 
 13731 ;;  dividend        8    8[BANK0 ] long long 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  quotient        8    4[COMMON] long long 
 13734 ;;  sign            1    3[COMMON] unsigned char 
 13735 ;;  counter         1    2[COMMON] unsigned char 
 13736 ;; Return value:  Size  Location     Type
 13737 ;;                  8    0[BANK0 ] long long 
 13738 ;; Registers used:
 13739 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13740 ;; Tracked objects:
 13741 ;;		On entry : 0/0
 13742 ;;		On exit  : 0/0
 13743 ;;		Unchanged: 0/0
 13744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13745 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13746 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13748 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13749 ;;Total ram usage:       27 bytes
 13750 ;; Hardware stack levels used:    1
 13751 ;; Hardware stack levels required when called:    1
 13752 ;; This function calls:
 13753 ;;		Nothing
 13754 ;; This function is called by:
 13755 ;;		_dtoa
 13756 ;; This function uses a non-reentrant model
 13757 ;;
 13758                           
 13759                           
 13760                           ;psect for function ___aodiv
 13761  23EC                     ___aodiv:	
 13762                           
 13763                           ;incstack = 0
 13764                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13765  23EC  01F3               	clrf	___aodiv@sign
 13766  23ED  3020               	movlw	low ___aodiv@divisor
 13767  23EE  0086               	movwf	6
 13768  23EF  3000               	movlw	high ___aodiv@divisor
 13769  23F0  0087               	movwf	7
 13770  23F1  3F47               	moviw [7]fsr1
 13771  23F2  00F1               	movwf	??___aodiv
 13772  23F3  1FF1               	btfss	??___aodiv,7
 13773  23F4  2C16               	goto	l4851
 13774  23F5  0020               	movlb	0	; select bank0
 13775  23F6  09A0               	comf	___aodiv@divisor,f
 13776  23F7  09A1               	comf	___aodiv@divisor+1,f
 13777  23F8  09A2               	comf	___aodiv@divisor+2,f
 13778  23F9  09A3               	comf	___aodiv@divisor+3,f
 13779  23FA  09A4               	comf	___aodiv@divisor+4,f
 13780  23FB  09A5               	comf	___aodiv@divisor+5,f
 13781  23FC  09A6               	comf	___aodiv@divisor+6,f
 13782  23FD  09A7               	comf	___aodiv@divisor+7,f
 13783  23FE  0AA0               	incf	___aodiv@divisor,f
 13784  23FF  1D03               	skipz
 13785  2400  2C14               	goto	u582lld
 13786  2401  0AA1               	incf	___aodiv@divisor+1,f
 13787  2402  1D03               	skipz
 13788  2403  2C14               	goto	u582lld
 13789  2404  0AA2               	incf	___aodiv@divisor+2,f
 13790  2405  1D03               	skipz
 13791  2406  2C14               	goto	u582lld
 13792  2407  0AA3               	incf	___aodiv@divisor+3,f
 13793  2408  1D03               	skipz
 13794  2409  2C14               	goto	u582lld
 13795  240A  0AA4               	incf	___aodiv@divisor+4,f
 13796  240B  1D03               	skipz
 13797  240C  2C14               	goto	u582lld
 13798  240D  0AA5               	incf	___aodiv@divisor+5,f
 13799  240E  1D03               	skipz
 13800  240F  2C14               	goto	u582lld
 13801  2410  0AA6               	incf	___aodiv@divisor+6,f
 13802  2411  1D03               	skipz
 13803  2412  2C14               	goto	u582lld
 13804  2413  0AA7               	incf	___aodiv@divisor+7,f
 13805  2414                     u582lld:	
 13806  2414  01F3               	clrf	___aodiv@sign
 13807  2415  0AF3               	incf	___aodiv@sign,f
 13808  2416                     l4851:	
 13809  2416  3028               	movlw	low ___aodiv@dividend
 13810  2417  0086               	movwf	6
 13811  2418  3000               	movlw	high ___aodiv@dividend
 13812  2419  0087               	movwf	7
 13813  241A  3F47               	moviw [7]fsr1
 13814  241B  00F1               	movwf	??___aodiv
 13815  241C  1FF1               	btfss	??___aodiv,7
 13816  241D  2C41               	goto	l4857
 13817  241E  0020               	movlb	0	; select bank0
 13818  241F  09A8               	comf	___aodiv@dividend,f
 13819  2420  09A9               	comf	___aodiv@dividend+1,f
 13820  2421  09AA               	comf	___aodiv@dividend+2,f
 13821  2422  09AB               	comf	___aodiv@dividend+3,f
 13822  2423  09AC               	comf	___aodiv@dividend+4,f
 13823  2424  09AD               	comf	___aodiv@dividend+5,f
 13824  2425  09AE               	comf	___aodiv@dividend+6,f
 13825  2426  09AF               	comf	___aodiv@dividend+7,f
 13826  2427  0AA8               	incf	___aodiv@dividend,f
 13827  2428  1D03               	skipz
 13828  2429  2C3D               	goto	l4855
 13829  242A  0AA9               	incf	___aodiv@dividend+1,f
 13830  242B  1D03               	skipz
 13831  242C  2C3D               	goto	l4855
 13832  242D  0AAA               	incf	___aodiv@dividend+2,f
 13833  242E  1D03               	skipz
 13834  242F  2C3D               	goto	l4855
 13835  2430  0AAB               	incf	___aodiv@dividend+3,f
 13836  2431  1D03               	skipz
 13837  2432  2C3D               	goto	l4855
 13838  2433  0AAC               	incf	___aodiv@dividend+4,f
 13839  2434  1D03               	skipz
 13840  2435  2C3D               	goto	l4855
 13841  2436  0AAD               	incf	___aodiv@dividend+5,f
 13842  2437  1D03               	skipz
 13843  2438  2C3D               	goto	l4855
 13844  2439  0AAE               	incf	___aodiv@dividend+6,f
 13845  243A  1D03               	skipz
 13846  243B  2C3D               	goto	l4855
 13847  243C  0AAF               	incf	___aodiv@dividend+7,f
 13848  243D                     l4855:	
 13849  243D  3001               	movlw	1
 13850  243E  00F1               	movwf	??___aodiv
 13851  243F  0871               	movf	??___aodiv,w
 13852  2440  06F3               	xorwf	___aodiv@sign,f
 13853  2441                     l4857:	
 13854  2441  3074               	movlw	low ___aodiv@quotient
 13855  2442  0086               	movwf	6
 13856  2443  3000               	movlw	high ___aodiv@quotient
 13857  2444  0087               	movwf	7
 13858  2445  3008               	movlw	8
 13859  2446  00F1               	movwf	??___aodiv
 13860  2447  3000               	movlw	0
 13861  2448                     u5850:	
 13862  2448  001E               	movwi fsr1++
 13863  2449  0BF1               	decfsz	??___aodiv,f
 13864  244A  2C48               	goto	u5850
 13865  244B  0020               	movlb	0	; select bank0
 13866  244C  0820               	movf	___aodiv@divisor,w
 13867  244D  0421               	iorwf	___aodiv@divisor+1,w
 13868  244E  0422               	iorwf	___aodiv@divisor+2,w
 13869  244F  0423               	iorwf	___aodiv@divisor+3,w
 13870  2450  0424               	iorwf	___aodiv@divisor+4,w
 13871  2451  0425               	iorwf	___aodiv@divisor+5,w
 13872  2452  0426               	iorwf	___aodiv@divisor+6,w
 13873  2453  0427               	iorwf	___aodiv@divisor+7,w
 13874  2454  1903               	skipnz
 13875  2455  2CAC               	goto	l4879
 13876  2456  01F2               	clrf	___aodiv@counter
 13877  2457  0AF2               	incf	___aodiv@counter,f
 13878  2458                     l4867:	
 13879  2458  1BA7               	btfsc	___aodiv@divisor+7,7
 13880  2459  2C67               	goto	l4869
 13881  245A  35A0               	lslf	___aodiv@divisor,f
 13882  245B  0DA1               	rlf	___aodiv@divisor+1,f
 13883  245C  0DA2               	rlf	___aodiv@divisor+2,f
 13884  245D  0DA3               	rlf	___aodiv@divisor+3,f
 13885  245E  0DA4               	rlf	___aodiv@divisor+4,f
 13886  245F  0DA5               	rlf	___aodiv@divisor+5,f
 13887  2460  0DA6               	rlf	___aodiv@divisor+6,f
 13888  2461  0DA7               	rlf	___aodiv@divisor+7,f
 13889  2462  3001               	movlw	1
 13890  2463  00F1               	movwf	??___aodiv
 13891  2464  0871               	movf	??___aodiv,w
 13892  2465  07F2               	addwf	___aodiv@counter,f
 13893  2466  2C58               	goto	l4867
 13894  2467                     l4869:	
 13895  2467  35F4               	lslf	___aodiv@quotient,f
 13896  2468  0DF5               	rlf	___aodiv@quotient+1,f
 13897  2469  0DF6               	rlf	___aodiv@quotient+2,f
 13898  246A  0DF7               	rlf	___aodiv@quotient+3,f
 13899  246B  0DF8               	rlf	___aodiv@quotient+4,f
 13900  246C  0DF9               	rlf	___aodiv@quotient+5,f
 13901  246D  0DFA               	rlf	___aodiv@quotient+6,f
 13902  246E  0DFB               	rlf	___aodiv@quotient+7,f
 13903  246F  0827               	movf	___aodiv@divisor+7,w
 13904  2470  022F               	subwf	___aodiv@dividend+7,w
 13905  2471  1D03               	skipz
 13906  2472  2C8D               	goto	u5885
 13907  2473  0826               	movf	___aodiv@divisor+6,w
 13908  2474  022E               	subwf	___aodiv@dividend+6,w
 13909  2475  1D03               	skipz
 13910  2476  2C8D               	goto	u5885
 13911  2477  0825               	movf	___aodiv@divisor+5,w
 13912  2478  022D               	subwf	___aodiv@dividend+5,w
 13913  2479  1D03               	skipz
 13914  247A  2C8D               	goto	u5885
 13915  247B  0824               	movf	___aodiv@divisor+4,w
 13916  247C  022C               	subwf	___aodiv@dividend+4,w
 13917  247D  1D03               	skipz
 13918  247E  2C8D               	goto	u5885
 13919  247F  0823               	movf	___aodiv@divisor+3,w
 13920  2480  022B               	subwf	___aodiv@dividend+3,w
 13921  2481  1D03               	skipz
 13922  2482  2C8D               	goto	u5885
 13923  2483  0822               	movf	___aodiv@divisor+2,w
 13924  2484  022A               	subwf	___aodiv@dividend+2,w
 13925  2485  1D03               	skipz
 13926  2486  2C8D               	goto	u5885
 13927  2487  0821               	movf	___aodiv@divisor+1,w
 13928  2488  0229               	subwf	___aodiv@dividend+1,w
 13929  2489  1D03               	skipz
 13930  248A  2C8D               	goto	u5885
 13931  248B  0820               	movf	___aodiv@divisor,w
 13932  248C  0228               	subwf	___aodiv@dividend,w
 13933  248D                     u5885:	
 13934  248D  1C03               	skipc
 13935  248E  2CA0               	goto	l4877
 13936  248F  0820               	movf	___aodiv@divisor,w
 13937  2490  02A8               	subwf	___aodiv@dividend,f
 13938  2491  0821               	movf	___aodiv@divisor+1,w
 13939  2492  3BA9               	subwfb	___aodiv@dividend+1,f
 13940  2493  0822               	movf	___aodiv@divisor+2,w
 13941  2494  3BAA               	subwfb	___aodiv@dividend+2,f
 13942  2495  0823               	movf	___aodiv@divisor+3,w
 13943  2496  3BAB               	subwfb	___aodiv@dividend+3,f
 13944  2497  0824               	movf	___aodiv@divisor+4,w
 13945  2498  3BAC               	subwfb	___aodiv@dividend+4,f
 13946  2499  0825               	movf	___aodiv@divisor+5,w
 13947  249A  3BAD               	subwfb	___aodiv@dividend+5,f
 13948  249B  0826               	movf	___aodiv@divisor+6,w
 13949  249C  3BAE               	subwfb	___aodiv@dividend+6,f
 13950  249D  0827               	movf	___aodiv@divisor+7,w
 13951  249E  3BAF               	subwfb	___aodiv@dividend+7,f
 13952  249F  1474               	bsf	___aodiv@quotient,0
 13953  24A0                     l4877:	
 13954  24A0  36A7               	lsrf	___aodiv@divisor+7,f
 13955  24A1  0CA6               	rrf	___aodiv@divisor+6,f
 13956  24A2  0CA5               	rrf	___aodiv@divisor+5,f
 13957  24A3  0CA4               	rrf	___aodiv@divisor+4,f
 13958  24A4  0CA3               	rrf	___aodiv@divisor+3,f
 13959  24A5  0CA2               	rrf	___aodiv@divisor+2,f
 13960  24A6  0CA1               	rrf	___aodiv@divisor+1,f
 13961  24A7  0CA0               	rrf	___aodiv@divisor,f
 13962  24A8  3001               	movlw	1
 13963  24A9  02F2               	subwf	___aodiv@counter,f
 13964  24AA  1D03               	btfss	3,2
 13965  24AB  2C67               	goto	l4869
 13966  24AC                     l4879:	
 13967  24AC  0873               	movf	___aodiv@sign,w
 13968  24AD  1903               	btfsc	3,2
 13969  24AE  2CCD               	goto	l1059
 13970  24AF  09F4               	comf	___aodiv@quotient,f
 13971  24B0  09F5               	comf	___aodiv@quotient+1,f
 13972  24B1  09F6               	comf	___aodiv@quotient+2,f
 13973  24B2  09F7               	comf	___aodiv@quotient+3,f
 13974  24B3  09F8               	comf	___aodiv@quotient+4,f
 13975  24B4  09F9               	comf	___aodiv@quotient+5,f
 13976  24B5  09FA               	comf	___aodiv@quotient+6,f
 13977  24B6  09FB               	comf	___aodiv@quotient+7,f
 13978  24B7  0AF4               	incf	___aodiv@quotient,f
 13979  24B8  1D03               	skipz
 13980  24B9  2CCD               	goto	l1059
 13981  24BA  0AF5               	incf	___aodiv@quotient+1,f
 13982  24BB  1D03               	skipz
 13983  24BC  2CCD               	goto	l1059
 13984  24BD  0AF6               	incf	___aodiv@quotient+2,f
 13985  24BE  1D03               	skipz
 13986  24BF  2CCD               	goto	l1059
 13987  24C0  0AF7               	incf	___aodiv@quotient+3,f
 13988  24C1  1D03               	skipz
 13989  24C2  2CCD               	goto	l1059
 13990  24C3  0AF8               	incf	___aodiv@quotient+4,f
 13991  24C4  1D03               	skipz
 13992  24C5  2CCD               	goto	l1059
 13993  24C6  0AF9               	incf	___aodiv@quotient+5,f
 13994  24C7  1D03               	skipz
 13995  24C8  2CCD               	goto	l1059
 13996  24C9  0AFA               	incf	___aodiv@quotient+6,f
 13997  24CA  1D03               	skipz
 13998  24CB  2CCD               	goto	l1059
 13999  24CC  0AFB               	incf	___aodiv@quotient+7,f
 14000  24CD                     l1059:	
 14001  24CD  0874               	movf	___aodiv@quotient,w
 14002  24CE  0020               	movlb	0	; select bank0
 14003  24CF  00A0               	movwf	?___aodiv
 14004  24D0  0875               	movf	___aodiv@quotient+1,w
 14005  24D1  00A1               	movwf	?___aodiv+1
 14006  24D2  0876               	movf	___aodiv@quotient+2,w
 14007  24D3  00A2               	movwf	?___aodiv+2
 14008  24D4  0877               	movf	___aodiv@quotient+3,w
 14009  24D5  00A3               	movwf	?___aodiv+3
 14010  24D6  0878               	movf	___aodiv@quotient+4,w
 14011  24D7  00A4               	movwf	?___aodiv+4
 14012  24D8  0879               	movf	___aodiv@quotient+5,w
 14013  24D9  00A5               	movwf	?___aodiv+5
 14014  24DA  087A               	movf	___aodiv@quotient+6,w
 14015  24DB  00A6               	movwf	?___aodiv+6
 14016  24DC  087B               	movf	___aodiv@quotient+7,w
 14017  24DD  00A7               	movwf	?___aodiv+7
 14018  24DE  0008               	return
 14019  24DF                     __end_of___aodiv:	
 14020                           
 14021                           	psect	text35
 14022  30AE                     __ptext35:	
 14023 ;; *************** function _ctoa *****************
 14024 ;; Defined at:
 14025 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 14028 ;;		 -> vsnprintf@f(6), 
 14029 ;;  c               1   18[BANK0 ] unsigned char 
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;  w               2   20[BANK0 ] int 
 14032 ;;  l               2    0        int 
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  2   16[BANK0 ] int 
 14035 ;; Registers used:
 14036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14043 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14045 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14046 ;;Total ram usage:        6 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    5
 14049 ;; This function calls:
 14050 ;;		_pad
 14051 ;; This function is called by:
 14052 ;;		_vfpfcnvrt
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           
 14057                           ;psect for function _ctoa
 14058  30AE                     _ctoa:	
 14059                           
 14060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14061                           
 14062                           ;incstack = 0
 14063                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14064  30AE  0023               	movlb	3	; select bank3
 14065  30AF  0830               	movf	_width^(0+384),w
 14066  30B0  0431               	iorwf	(_width+1)^(0+384),w
 14067  30B1  1D03               	btfss	3,2
 14068  30B2  28BB               	goto	l7325
 14069  30B3  0831               	movf	(_width+1)^(0+384),w
 14070  30B4  0020               	movlb	0	; select bank0
 14071  30B5  00B5               	movwf	ctoa@w+1
 14072  30B6  0023               	movlb	3	; select bank3
 14073  30B7  0830               	movf	_width^(0+384),w
 14074  30B8  0020               	movlb	0	; select bank0
 14075  30B9  00B4               	movwf	ctoa@w
 14076  30BA  28C4               	goto	l7327
 14077  30BB                     l7325:	
 14078  30BB  0830               	movf	_width^(0+384),w
 14079  30BC  3EFF               	addlw	255
 14080  30BD  0020               	movlb	0	; select bank0
 14081  30BE  00B4               	movwf	ctoa@w
 14082  30BF  30FF               	movlw	255
 14083  30C0  0023               	movlb	3	; select bank3
 14084  30C1  3D31               	addwfc	(_width+1)^(0+384),w
 14085  30C2  0020               	movlb	0	; select bank0
 14086  30C3  00B5               	movwf	ctoa@w+1
 14087  30C4                     l7327:	
 14088                           
 14089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14090  30C4  0832               	movf	ctoa@c,w
 14091  30C5  00B3               	movwf	??_ctoa
 14092  30C6  0833               	movf	??_ctoa,w
 14093  30C7  0025               	movlb	5	; select bank5
 14094  30C8  00A0               	movwf	_dbuf^(0+640)
 14095                           
 14096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14097  30C9  01A1               	clrf	(_dbuf^(0+640)+1)
 14098                           
 14099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14100  30CA  0020               	movlb	0	; select bank0
 14101  30CB  0831               	movf	ctoa@fp+1,w
 14102  30CC  00A7               	movwf	pad@fp+1
 14103  30CD  0830               	movf	ctoa@fp,w
 14104  30CE  00A6               	movwf	pad@fp
 14105  30CF  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 14106  30D0  00B3               	movwf	??_ctoa
 14107  30D1  0833               	movf	??_ctoa,w
 14108  30D2  00A8               	movwf	pad@buf
 14109  30D3  0835               	movf	ctoa@w+1,w
 14110  30D4  00AA               	movwf	pad@p+1
 14111  30D5  0834               	movf	ctoa@w,w
 14112  30D6  00A9               	movwf	pad@p
 14113  30D7  31B3  2343         	fcall	_pad
 14114  30D9  0020               	movlb	0	; select bank0
 14115  30DA  0827               	movf	?_pad+1,w
 14116  30DB  00B1               	movwf	?_ctoa+1
 14117  30DC  0826               	movf	?_pad,w
 14118  30DD  00B0               	movwf	?_ctoa
 14119  30DE  0008               	return
 14120  30DF                     __end_of_ctoa:	
 14121                           
 14122                           	psect	text36
 14123  3343                     __ptext36:	
 14124 ;; *************** function _pad *****************
 14125 ;; Defined at:
 14126 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14127 ;; Parameters:    Size  Location     Type
 14128 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 14129 ;;		 -> vsnprintf@f(6), 
 14130 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 14131 ;;		 -> dbuf(80), 
 14132 ;;  p               2    9[BANK0 ] int 
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  w               2   14[BANK0 ] int 
 14135 ;;  i               2   12[BANK0 ] int 
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  2    6[BANK0 ] int 
 14138 ;; Registers used:
 14139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14145 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14146 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14148 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14149 ;;Total ram usage:       10 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    4
 14152 ;; This function calls:
 14153 ;;		_fputc
 14154 ;;		_fputs
 14155 ;;		_strlen
 14156 ;; This function is called by:
 14157 ;;		_ctoa
 14158 ;;		_dtoa
 14159 ;;		_efgtoa
 14160 ;;		_otoa
 14161 ;;		_utoa
 14162 ;;		_xtoa
 14163 ;; This function uses a non-reentrant model
 14164 ;;
 14165                           
 14166                           
 14167                           ;psect for function _pad
 14168  3343                     _pad:	
 14169                           
 14170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14171                           
 14172                           ;incstack = 0
 14173                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14174  3343  0023               	movlb	3	; select bank3
 14175  3344  1C34               	btfss	_flags^(0+384),0
 14176  3345  2B4F               	goto	l7271
 14177                           
 14178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14179  3346  0020               	movlb	0	; select bank0
 14180  3347  0827               	movf	pad@fp+1,w
 14181  3348  00FB               	movwf	fputs@fp+1
 14182  3349  0826               	movf	pad@fp,w
 14183  334A  00FA               	movwf	fputs@fp
 14184  334B  0828               	movf	pad@buf,w
 14185  334C  31B0  2088  31B3   	fcall	_fputs
 14186  334F                     l7271:	
 14187                           
 14188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14189  334F  0020               	movlb	0	; select bank0
 14190  3350  1BAA               	btfsc	pad@p+1,7
 14191  3351  2B57               	goto	l7275
 14192  3352  082A               	movf	pad@p+1,w
 14193  3353  00AF               	movwf	pad@w+1
 14194  3354  0829               	movf	pad@p,w
 14195  3355  00AE               	movwf	pad@w
 14196  3356  2B59               	goto	l641
 14197  3357                     l7275:	
 14198  3357  01AE               	clrf	pad@w
 14199  3358  01AF               	clrf	pad@w+1
 14200  3359                     l641:	
 14201                           
 14202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14203  3359  01AC               	clrf	pad@i
 14204  335A  01AD               	clrf	pad@i+1
 14205  335B                     l7281:	
 14206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14207                           
 14208                           
 14209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14210  335B  082D               	movf	pad@i+1,w
 14211  335C  3A80               	xorlw	128
 14212  335D  00AB               	movwf	??_pad
 14213  335E  082F               	movf	pad@w+1,w
 14214  335F  3A80               	xorlw	128
 14215  3360  022B               	subwf	??_pad,w
 14216  3361  1D03               	skipz
 14217  3362  2B65               	goto	u9745
 14218  3363  082E               	movf	pad@w,w
 14219  3364  022C               	subwf	pad@i,w
 14220  3365                     u9745:	
 14221  3365  1803               	btfsc	3,0
 14222  3366  2B79               	goto	l644
 14223                           
 14224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14225  3367  3020               	movlw	32
 14226  3368  00F1               	movwf	fputc@c
 14227  3369  3000               	movlw	0
 14228  336A  00F2               	movwf	fputc@c+1
 14229  336B  0020               	movlb	0	; select bank0
 14230  336C  0827               	movf	pad@fp+1,w
 14231  336D  00F4               	movwf	fputc@fp+1
 14232  336E  0826               	movf	pad@fp,w
 14233  336F  00F3               	movwf	fputc@fp
 14234  3370  31A0  2000  31B3   	fcall	_fputc
 14235                           
 14236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14237  3373  3001               	movlw	1
 14238  3374  0020               	movlb	0	; select bank0
 14239  3375  07AC               	addwf	pad@i,f
 14240  3376  3000               	movlw	0
 14241  3377  3DAD               	addwfc	pad@i+1,f
 14242  3378  2B5B               	goto	l7281
 14243  3379                     l644:	
 14244                           
 14245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14246  3379  0023               	movlb	3	; select bank3
 14247  337A  1834               	btfsc	_flags^(0+384),0
 14248  337B  2B85               	goto	l7285
 14249                           
 14250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14251  337C  0020               	movlb	0	; select bank0
 14252  337D  0827               	movf	pad@fp+1,w
 14253  337E  00FB               	movwf	fputs@fp+1
 14254  337F  0826               	movf	pad@fp,w
 14255  3380  00FA               	movwf	fputs@fp
 14256  3381  0828               	movf	pad@buf,w
 14257  3382  31B0  2088  31B3   	fcall	_fputs
 14258  3385                     l7285:	
 14259                           
 14260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14261  3385  0020               	movlb	0	; select bank0
 14262  3386  0828               	movf	pad@buf,w
 14263  3387  00F1               	movwf	strlen@s
 14264  3388  3002               	movlw	2
 14265  3389  00F2               	movwf	strlen@s+1
 14266  338A  31BE  26B5         	fcall	_strlen
 14267  338C  0020               	movlb	0	; select bank0
 14268  338D  082E               	movf	pad@w,w
 14269  338E  0771               	addwf	?_strlen,w
 14270  338F  00A6               	movwf	?_pad
 14271  3390  082F               	movf	pad@w+1,w
 14272  3391  3D72               	addwfc	?_strlen+1,w
 14273  3392  00A7               	movwf	?_pad+1
 14274  3393  0008               	return
 14275  3394                     __end_of_pad:	
 14276                           
 14277                           	psect	text37
 14278  3EB5                     __ptext37:	
 14279 ;; *************** function _strlen *****************
 14280 ;; Defined at:
 14281 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;  s               2    1[COMMON] PTR const unsigned char 
 14284 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  a               2    3[COMMON] PTR const unsigned char 
 14287 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  2    1[COMMON] unsigned int 
 14290 ;; Registers used:
 14291 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14301 ;;Total ram usage:        4 bytes
 14302 ;; Hardware stack levels used:    1
 14303 ;; Hardware stack levels required when called:    1
 14304 ;; This function calls:
 14305 ;;		Nothing
 14306 ;; This function is called by:
 14307 ;;		_pad
 14308 ;;		_stoa
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           
 14313                           ;psect for function _strlen
 14314  3EB5                     _strlen:	
 14315                           
 14316                           ;incstack = 0
 14317                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14318  3EB5  0872               	movf	strlen@s+1,w
 14319  3EB6  00F4               	movwf	strlen@a+1
 14320  3EB7  0871               	movf	strlen@s,w
 14321  3EB8  00F3               	movwf	strlen@a
 14322  3EB9                     l4497:	
 14323  3EB9  0871               	movf	strlen@s,w
 14324  3EBA  0086               	movwf	6
 14325  3EBB  0872               	movf	strlen@s+1,w
 14326  3EBC  0087               	movwf	7
 14327  3EBD  0801               	movf	1,w
 14328  3EBE  1903               	btfsc	3,2
 14329  3EBF  2EC5               	goto	l4499
 14330  3EC0  3001               	movlw	1
 14331  3EC1  07F1               	addwf	strlen@s,f
 14332  3EC2  3000               	movlw	0
 14333  3EC3  3DF2               	addwfc	strlen@s+1,f
 14334  3EC4  2EB9               	goto	l4497
 14335  3EC5                     l4499:	
 14336  3EC5  0873               	movf	strlen@a,w
 14337  3EC6  0271               	subwf	strlen@s,w
 14338  3EC7  00F1               	movwf	?_strlen
 14339  3EC8  0874               	movf	strlen@a+1,w
 14340  3EC9  3B72               	subwfb	strlen@s+1,w
 14341  3ECA  00F2               	movwf	?_strlen+1
 14342  3ECB  0008               	return
 14343  3ECC                     __end_of_strlen:	
 14344                           
 14345                           	psect	text38
 14346  3088                     __ptext38:	
 14347 ;; *************** function _fputs *****************
 14348 ;; Defined at:
 14349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;  s               1    wreg     PTR const unsigned char 
 14352 ;;		 -> dbuf(80), 
 14353 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14354 ;;		 -> vsnprintf@f(6), 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14357 ;;		 -> dbuf(80), 
 14358 ;;  i               2    3[BANK0 ] int 
 14359 ;;  c               1    2[BANK0 ] unsigned char 
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  2   10[COMMON] int 
 14362 ;; Registers used:
 14363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14370 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;Total ram usage:        8 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:    3
 14376 ;; This function calls:
 14377 ;;		_fputc
 14378 ;; This function is called by:
 14379 ;;		_pad
 14380 ;; This function uses a non-reentrant model
 14381 ;;
 14382                           
 14383                           
 14384                           ;psect for function _fputs
 14385  3088                     _fputs:	
 14386                           
 14387                           ;incstack = 0
 14388                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14389                           ;fputs@s stored from wreg
 14390  3088  0020               	movlb	0	; select bank0
 14391  3089  00A5               	movwf	fputs@s
 14392  308A  01A3               	clrf	fputs@i
 14393  308B  01A4               	clrf	fputs@i+1
 14394  308C                     l4491:	
 14395  308C  0823               	movf	fputs@i,w
 14396  308D  0725               	addwf	fputs@s,w
 14397  308E  00A0               	movwf	??_fputs
 14398  308F  0820               	movf	??_fputs,w
 14399  3090  0086               	movwf	6
 14400  3091  3002               	movlw	2	; select bank4/5
 14401  3092  0087               	movwf	7
 14402  3093  0801               	movf	1,w
 14403  3094  00A1               	movwf	??_fputs+1
 14404  3095  0821               	movf	??_fputs+1,w
 14405  3096  00A2               	movwf	fputs@c
 14406  3097  0822               	movf	fputs@c,w
 14407  3098  1903               	btfsc	3,2
 14408  3099  0008               	return
 14409  309A  0822               	movf	fputs@c,w
 14410  309B  00A0               	movwf	??_fputs
 14411  309C  01A1               	clrf	??_fputs+1
 14412  309D  0820               	movf	??_fputs,w
 14413  309E  00F1               	movwf	fputc@c
 14414  309F  0821               	movf	??_fputs+1,w
 14415  30A0  00F2               	movwf	fputc@c+1
 14416  30A1  087B               	movf	fputs@fp+1,w
 14417  30A2  00F4               	movwf	fputc@fp+1
 14418  30A3  087A               	movf	fputs@fp,w
 14419  30A4  00F3               	movwf	fputc@fp
 14420  30A5  31A0  2000  31B0   	fcall	_fputc
 14421  30A8  3001               	movlw	1
 14422  30A9  0020               	movlb	0	; select bank0
 14423  30AA  07A3               	addwf	fputs@i,f
 14424  30AB  3000               	movlw	0
 14425  30AC  3DA4               	addwfc	fputs@i+1,f
 14426  30AD  288C               	goto	l4491
 14427  30AE                     __end_of_fputs:	
 14428                           
 14429                           	psect	text39
 14430  2000                     __ptext39:	
 14431 ;; *************** function _fputc *****************
 14432 ;; Defined at:
 14433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14434 ;; Parameters:    Size  Location     Type
 14435 ;;  c               2    1[COMMON] int 
 14436 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14437 ;;		 -> vsnprintf@f(6), 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  2    1[COMMON] int 
 14442 ;; Registers used:
 14443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14451 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14452 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14453 ;;Total ram usage:        9 bytes
 14454 ;; Hardware stack levels used:    1
 14455 ;; Hardware stack levels required when called:    2
 14456 ;; This function calls:
 14457 ;;		_putch
 14458 ;; This function is called by:
 14459 ;;		_pad
 14460 ;;		_stoa
 14461 ;;		_vfpfcnvrt
 14462 ;;		_fputs
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           
 14467                           ;psect for function _fputc
 14468  2000                     _fputc:	
 14469                           
 14470                           ;incstack = 0
 14471                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14472  2000  0873               	movf	fputc@fp,w
 14473  2001  0474               	iorwf	fputc@fp+1,w
 14474  2002  1903               	btfsc	3,2
 14475  2003  2808               	goto	l4473
 14476  2004  0873               	movf	fputc@fp,w
 14477  2005  0474               	iorwf	fputc@fp+1,w
 14478  2006  1D03               	btfss	3,2
 14479  2007  280C               	goto	l4475
 14480  2008                     l4473:	
 14481  2008  0871               	movf	fputc@c,w
 14482  2009  3180  2003         	fcall	_putch
 14483  200B  0008               	return
 14484  200C                     l4475:	
 14485  200C  0873               	movf	fputc@fp,w
 14486  200D  0086               	movwf	6
 14487  200E  0874               	movf	fputc@fp+1,w
 14488  200F  0087               	movwf	7
 14489  2010  3144               	addfsr 1,4
 14490  2011  0016               	moviw fsr1++
 14491  2012  0401               	iorwf	1,w
 14492  2013  1903               	btfsc	3,2
 14493  2014  2833               	goto	l4479
 14494  2015  0873               	movf	fputc@fp,w
 14495  2016  0086               	movwf	6
 14496  2017  0874               	movf	fputc@fp+1,w
 14497  2018  0087               	movwf	7
 14498  2019  3144               	addfsr 1,4
 14499  201A  3F40               	moviw [0]fsr1
 14500  201B  00F5               	movwf	??_fputc
 14501  201C  3F41               	moviw [1]fsr1
 14502  201D  00F6               	movwf	??_fputc+1
 14503  201E  0873               	movf	fputc@fp,w
 14504  201F  0086               	movwf	6
 14505  2020  0874               	movf	fputc@fp+1,w
 14506  2021  0087               	movwf	7
 14507  2022  3142               	addfsr 1,2
 14508  2023  3F40               	moviw [0]fsr1
 14509  2024  00F7               	movwf	??_fputc+2
 14510  2025  3F41               	moviw [1]fsr1
 14511  2026  00F8               	movwf	??_fputc+3
 14512  2027  0878               	movf	??_fputc+3,w
 14513  2028  3A80               	xorlw	128
 14514  2029  00F9               	movwf	??_fputc+4
 14515  202A  0876               	movf	??_fputc+1,w
 14516  202B  3A80               	xorlw	128
 14517  202C  0279               	subwf	??_fputc+4,w
 14518  202D  1D03               	skipz
 14519  202E  2831               	goto	u4895
 14520  202F  0875               	movf	??_fputc,w
 14521  2030  0277               	subwf	??_fputc+2,w
 14522  2031                     u4895:	
 14523  2031  1803               	skipnc
 14524  2032  0008               	return
 14525  2033                     l4479:	
 14526  2033  0873               	movf	fputc@fp,w
 14527  2034  0086               	movwf	6
 14528  2035  0874               	movf	fputc@fp+1,w
 14529  2036  0087               	movwf	7
 14530  2037  3142               	addfsr 1,2
 14531  2038  0873               	movf	fputc@fp,w
 14532  2039  0084               	movwf	4
 14533  203A  0874               	movf	fputc@fp+1,w
 14534  203B  0085               	movwf	5
 14535  203C  3F40               	moviw [0]fsr1
 14536  203D  0700               	addwf	0,w
 14537  203E  00F5               	movwf	??_fputc
 14538  203F  3101               	addfsr 0,1
 14539  2040  3F41               	moviw [1]fsr1
 14540  2041  3D00               	addwfc	0,w
 14541  2042  00F6               	movwf	??_fputc+1
 14542  2043  0875               	movf	??_fputc,w
 14543  2044  0086               	movwf	6
 14544  2045  0876               	movf	??_fputc+1,w
 14545  2046  0087               	movwf	7
 14546  2047  0871               	movf	fputc@c,w
 14547  2048  0081               	movwf	1
 14548  2049  0873               	movf	fputc@fp,w
 14549  204A  0086               	movwf	6
 14550  204B  0874               	movf	fputc@fp+1,w
 14551  204C  0087               	movwf	7
 14552  204D  3142               	addfsr 1,2
 14553  204E  3001               	movlw	1
 14554  204F  0781               	addwf	1,f
 14555  2050  3141               	addfsr 1,1
 14556  2051  1803               	skipnc
 14557  2052  0A81               	incf	1,f
 14558  2053  0008               	return
 14559  2054                     __end_of_fputc:	
 14560                           
 14561                           	psect	text40
 14562  0003                     __ptext40:	
 14563 ;; *************** function _putch *****************
 14564 ;; Defined at:
 14565 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;  c               1    wreg     unsigned char 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  c               1    0[COMMON] unsigned char 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      void 
 14572 ;; Registers used:
 14573 ;;		wreg
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    1
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		_fputc
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           
 14594                           ;psect for function _putch
 14595  0003                     _putch:	
 14596                           
 14597                           ;incstack = 0
 14598                           ; Regs used in _putch: [wreg]
 14599  0003  0008               	return
 14600  0004                     __end_of_putch:	
 14601                           
 14602                           	psect	text41
 14603  2A95                     __ptext41:	
 14604 ;; *************** function _atoi *****************
 14605 ;; Defined at:
 14606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;  s               2    7[COMMON] PTR const unsigned char 
 14609 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
 14610 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
 14611 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
 14612 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
 14613 ;;		 -> STR_3(43), 
 14614 ;; Auto vars:     Size  Location     Type
 14615 ;;  n               2   11[BANK0 ] int 
 14616 ;;  neg             2    4[BANK0 ] int 
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  2    7[COMMON] int 
 14619 ;; Registers used:
 14620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14621 ;; Tracked objects:
 14622 ;;		On entry : 0/0
 14623 ;;		On exit  : 0/0
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14627 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14628 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14629 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14630 ;;Total ram usage:       15 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; Hardware stack levels required when called:    2
 14633 ;; This function calls:
 14634 ;;		___wmul
 14635 ;;		_isdigit
 14636 ;;		_isspace
 14637 ;; This function is called by:
 14638 ;;		_vfpfcnvrt
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           
 14643                           ;psect for function _atoi
 14644  2A95                     _atoi:	
 14645                           
 14646                           ;incstack = 0
 14647                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14648  2A95  0020               	movlb	0	; select bank0
 14649  2A96  01AB               	clrf	atoi@n
 14650  2A97  01AC               	clrf	atoi@n+1
 14651  2A98  01A4               	clrf	atoi@neg
 14652  2A99  01A5               	clrf	atoi@neg+1
 14653  2A9A                     l7883:	
 14654  2A9A  01AA               	clrf	_atoi$1771
 14655  2A9B  0AAA               	incf	_atoi$1771,f
 14656  2A9C  0877               	movf	atoi@s,w
 14657  2A9D  0084               	movwf	4
 14658  2A9E  0878               	movf	atoi@s+1,w
 14659  2A9F  0085               	movwf	5
 14660  2AA0  0012               	moviw fsr0++
 14661  2AA1  3A20               	xorlw	32
 14662  2AA2  1903               	btfsc	3,2
 14663  2AA3  2AB6               	goto	l7891
 14664  2AA4  0877               	movf	atoi@s,w
 14665  2AA5  0084               	movwf	4
 14666  2AA6  0878               	movf	atoi@s+1,w
 14667  2AA7  0085               	movwf	5
 14668  2AA8  0800               	movf	0,w	;code access
 14669  2AA9  3EF7               	addlw	247
 14670  2AAA  00A0               	movwf	??_atoi
 14671  2AAB  30FF               	movlw	255
 14672  2AAC  1803               	skipnc
 14673  2AAD  3000               	movlw	0
 14674  2AAE  00A1               	movwf	??_atoi+1
 14675  2AAF  3000               	movlw	0
 14676  2AB0  0221               	subwf	??_atoi+1,w
 14677  2AB1  3005               	movlw	5
 14678  2AB2  1903               	skipnz
 14679  2AB3  0220               	subwf	??_atoi,w
 14680  2AB4  1803               	btfsc	3,0
 14681  2AB5  01AA               	clrf	_atoi$1771
 14682  2AB6                     l7891:	
 14683  2AB6  082A               	movf	_atoi$1771,w
 14684  2AB7  00A0               	movwf	??_atoi
 14685  2AB8  01A1               	clrf	??_atoi+1
 14686  2AB9  0820               	movf	??_atoi,w
 14687  2ABA  00A6               	movwf	_atoi$1770
 14688  2ABB  0821               	movf	??_atoi+1,w
 14689  2ABC  00A7               	movwf	_atoi$1770+1
 14690  2ABD  0826               	movf	_atoi$1770,w
 14691  2ABE  0427               	iorwf	_atoi$1770+1,w
 14692  2ABF  1903               	btfsc	3,2
 14693  2AC0  2ACB               	goto	l7899
 14694  2AC1  3001               	movlw	1
 14695  2AC2  07F7               	addwf	atoi@s,f
 14696  2AC3  3000               	movlw	0
 14697  2AC4  3DF8               	addwfc	atoi@s+1,f
 14698  2AC5  2A9A               	goto	l7883
 14699  2AC6                     l7897:	
 14700  2AC6  3001               	movlw	1
 14701  2AC7  00A4               	movwf	atoi@neg
 14702  2AC8  3000               	movlw	0
 14703  2AC9  00A5               	movwf	atoi@neg+1
 14704  2ACA  2AFE               	goto	l1445
 14705  2ACB                     l7899:	
 14706  2ACB  0877               	movf	atoi@s,w
 14707  2ACC  0084               	movwf	4
 14708  2ACD  0878               	movf	atoi@s+1,w
 14709  2ACE  0085               	movwf	5
 14710  2ACF  0800               	movf	0,w	;code access
 14711  2AD0  00A0               	movwf	??_atoi
 14712  2AD1  01A1               	clrf	??_atoi+1
 14713                           
 14714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14715                           ; Switch size 1, requested type "simple"
 14716                           ; Number of cases is 1, Range of values is 0 to 0
 14717                           ; switch strategies available:
 14718                           ; Name         Instructions Cycles
 14719                           ; simple_byte            4     3 (average)
 14720                           ; direct_byte            8     6 (fixed)
 14721                           ; jumptable            260     6 (fixed)
 14722                           ;	Chosen strategy is simple_byte
 14723  2AD2  0821               	movf	??_atoi+1,w
 14724  2AD3  3A00               	xorlw	0	; case 0
 14725  2AD4  1903               	skipnz
 14726  2AD5  2AD7               	goto	l8913
 14727  2AD6  2B02               	goto	l7905
 14728  2AD7                     l8913:	
 14729                           
 14730                           ; Switch size 1, requested type "simple"
 14731                           ; Number of cases is 2, Range of values is 43 to 45
 14732                           ; switch strategies available:
 14733                           ; Name         Instructions Cycles
 14734                           ; simple_byte            7     4 (average)
 14735                           ; direct_byte           15     9 (fixed)
 14736                           ; jumptable            263     9 (fixed)
 14737                           ;	Chosen strategy is simple_byte
 14738  2AD7  0820               	movf	??_atoi,w
 14739  2AD8  3A2B               	xorlw	43	; case 43
 14740  2AD9  1903               	skipnz
 14741  2ADA  2AFE               	goto	l1445
 14742  2ADB  3A06               	xorlw	6	; case 45
 14743  2ADC  1903               	skipnz
 14744  2ADD  2AC6               	goto	l7897
 14745  2ADE  2B02               	goto	l7905
 14746  2ADF                     l7901:	
 14747  2ADF  0877               	movf	atoi@s,w
 14748  2AE0  0084               	movwf	4
 14749  2AE1  0878               	movf	atoi@s+1,w
 14750  2AE2  0085               	movwf	5
 14751  2AE3  0800               	movf	0,w	;code access
 14752  2AE4  00A0               	movwf	??_atoi
 14753  2AE5  082C               	movf	atoi@n+1,w
 14754  2AE6  00F2               	movwf	___wmul@multiplier+1
 14755  2AE7  082B               	movf	atoi@n,w
 14756  2AE8  00F1               	movwf	___wmul@multiplier
 14757  2AE9  300A               	movlw	10
 14758  2AEA  00F3               	movwf	___wmul@multiplicand
 14759  2AEB  3000               	movlw	0
 14760  2AEC  00F4               	movwf	___wmul@multiplicand+1
 14761  2AED  31BF  272C  31AA   	fcall	___wmul
 14762  2AF0  0872               	movf	?___wmul+1,w
 14763  2AF1  0020               	movlb	0	; select bank0
 14764  2AF2  00A2               	movwf	??_atoi+2
 14765  2AF3  0820               	movf	??_atoi,w
 14766  2AF4  0271               	subwf	?___wmul,w
 14767  2AF5  00A1               	movwf	??_atoi+1
 14768  2AF6  1C03               	skipc
 14769  2AF7  03A2               	decf	??_atoi+2,f
 14770  2AF8  0821               	movf	??_atoi+1,w
 14771  2AF9  3E30               	addlw	48
 14772  2AFA  00AB               	movwf	atoi@n
 14773  2AFB  3000               	movlw	0
 14774  2AFC  3D22               	addwfc	??_atoi+2,w
 14775  2AFD  00AC               	movwf	atoi@n+1
 14776  2AFE                     l1445:	
 14777  2AFE  3001               	movlw	1
 14778  2AFF  07F7               	addwf	atoi@s,f
 14779  2B00  3000               	movlw	0
 14780  2B01  3DF8               	addwfc	atoi@s+1,f
 14781  2B02                     l7905:	
 14782  2B02  0877               	movf	atoi@s,w
 14783  2B03  0084               	movwf	4
 14784  2B04  0878               	movf	atoi@s+1,w
 14785  2B05  0085               	movwf	5
 14786  2B06  0800               	movf	0,w	;code access
 14787  2B07  3ED0               	addlw	208
 14788  2B08  00A0               	movwf	??_atoi
 14789  2B09  30FF               	movlw	255
 14790  2B0A  1803               	skipnc
 14791  2B0B  3000               	movlw	0
 14792  2B0C  00A1               	movwf	??_atoi+1
 14793  2B0D  3000               	movlw	0
 14794  2B0E  0221               	subwf	??_atoi+1,w
 14795  2B0F  300A               	movlw	10
 14796  2B10  1903               	skipnz
 14797  2B11  0220               	subwf	??_atoi,w
 14798  2B12  1803               	btfsc	3,0
 14799  2B13  2B16               	goto	u11000
 14800  2B14  3001               	movlw	1
 14801  2B15  2B17               	goto	u11010
 14802  2B16                     u11000:	
 14803  2B16  3000               	movlw	0
 14804  2B17                     u11010:	
 14805  2B17  00A2               	movwf	??_atoi+2
 14806  2B18  01A3               	clrf	??_atoi+3
 14807  2B19  0822               	movf	??_atoi+2,w
 14808  2B1A  00A8               	movwf	_atoi$1772
 14809  2B1B  0823               	movf	??_atoi+3,w
 14810  2B1C  00A9               	movwf	_atoi$1772+1
 14811  2B1D  0828               	movf	_atoi$1772,w
 14812  2B1E  0429               	iorwf	_atoi$1772+1,w
 14813  2B1F  1D03               	btfss	3,2
 14814  2B20  2ADF               	goto	l7901
 14815  2B21  0824               	movf	atoi@neg,w
 14816  2B22  0425               	iorwf	atoi@neg+1,w
 14817  2B23  1D03               	btfss	3,2
 14818  2B24  2B31               	goto	l7915
 14819  2B25  092B               	comf	atoi@n,w
 14820  2B26  00A0               	movwf	??_atoi
 14821  2B27  092C               	comf	atoi@n+1,w
 14822  2B28  00A1               	movwf	??_atoi+1
 14823  2B29  0AA0               	incf	??_atoi,f
 14824  2B2A  1903               	skipnz
 14825  2B2B  0AA1               	incf	??_atoi+1,f
 14826  2B2C  0820               	movf	??_atoi,w
 14827  2B2D  00F7               	movwf	?_atoi
 14828  2B2E  0821               	movf	??_atoi+1,w
 14829  2B2F  00F8               	movwf	?_atoi+1
 14830  2B30  0008               	return
 14831  2B31                     l7915:	
 14832  2B31  082C               	movf	atoi@n+1,w
 14833  2B32  00F8               	movwf	?_atoi+1
 14834  2B33  082B               	movf	atoi@n,w
 14835  2B34  00F7               	movwf	?_atoi
 14836  2B35  0008               	return
 14837  2B36                     __end_of_atoi:	
 14838                           
 14839                           	psect	text42
 14840  3F47                     __ptext42:	
 14841 ;; *************** function _isspace *****************
 14842 ;; Defined at:
 14843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  c               2    1[COMMON] int 
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;		None
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  2    1[COMMON] int 
 14850 ;; Registers used:
 14851 ;;		wreg, status,2, status,0
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/0
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14861 ;;Total ram usage:        5 bytes
 14862 ;; Hardware stack levels used:    1
 14863 ;; Hardware stack levels required when called:    1
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_atoi
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871                           
 14872                           ;psect for function _isspace
 14873  3F47                     _isspace:	
 14874                           
 14875                           ;incstack = 0
 14876                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14877  3F47  01F5               	clrf	_isspace$1810
 14878  3F48  0AF5               	incf	_isspace$1810,f
 14879  3F49  3020               	movlw	32
 14880  3F4A  0671               	xorwf	isspace@c,w
 14881  3F4B  0472               	iorwf	isspace@c+1,w
 14882  3F4C  1903               	btfsc	3,2
 14883  3F4D  2F5B               	goto	l5403
 14884  3F4E  0871               	movf	isspace@c,w
 14885  3F4F  3EF7               	addlw	247
 14886  3F50  00F3               	movwf	??_isspace
 14887  3F51  30FF               	movlw	255
 14888  3F52  3D72               	addwfc	isspace@c+1,w
 14889  3F53  00F4               	movwf	??_isspace+1
 14890  3F54  3000               	movlw	0
 14891  3F55  0274               	subwf	??_isspace+1,w
 14892  3F56  3005               	movlw	5
 14893  3F57  1903               	skipnz
 14894  3F58  0273               	subwf	??_isspace,w
 14895  3F59  1803               	btfsc	3,0
 14896  3F5A  01F5               	clrf	_isspace$1810
 14897  3F5B                     l5403:	
 14898  3F5B  0875               	movf	_isspace$1810,w
 14899  3F5C  00F3               	movwf	??_isspace
 14900  3F5D  01F4               	clrf	??_isspace+1
 14901  3F5E  0873               	movf	??_isspace,w
 14902  3F5F  00F1               	movwf	?_isspace
 14903  3F60  0874               	movf	??_isspace+1,w
 14904  3F61  00F2               	movwf	?_isspace+1
 14905  3F62  0008               	return
 14906  3F63                     __end_of_isspace:	
 14907                           
 14908                           	psect	text43
 14909  3E9E                     __ptext43:	
 14910 ;; *************** function _isdigit *****************
 14911 ;; Defined at:
 14912 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  c               2    1[COMMON] int 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;		None
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  2    1[COMMON] int 
 14919 ;; Registers used:
 14920 ;;		wreg, status,2, status,0
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14930 ;;Total ram usage:        6 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:    1
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_vfpfcnvrt
 14937 ;;		_atoi
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941                           
 14942                           ;psect for function _isdigit
 14943  3E9E                     _isdigit:	
 14944                           
 14945                           ;incstack = 0
 14946                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14947  3E9E  0871               	movf	isdigit@c,w
 14948  3E9F  3ED0               	addlw	208
 14949  3EA0  00F3               	movwf	??_isdigit
 14950  3EA1  30FF               	movlw	255
 14951  3EA2  3D72               	addwfc	isdigit@c+1,w
 14952  3EA3  00F4               	movwf	??_isdigit+1
 14953  3EA4  3000               	movlw	0
 14954  3EA5  0274               	subwf	??_isdigit+1,w
 14955  3EA6  300A               	movlw	10
 14956  3EA7  1903               	skipnz
 14957  3EA8  0273               	subwf	??_isdigit,w
 14958  3EA9  1803               	btfsc	3,0
 14959  3EAA  2EAD               	goto	u5750
 14960  3EAB  3001               	movlw	1
 14961  3EAC  2EAE               	goto	u5760
 14962  3EAD                     u5750:	
 14963  3EAD  3000               	movlw	0
 14964  3EAE                     u5760:	
 14965  3EAE  00F5               	movwf	??_isdigit+2
 14966  3EAF  01F6               	clrf	??_isdigit+3
 14967  3EB0  0875               	movf	??_isdigit+2,w
 14968  3EB1  00F1               	movwf	?_isdigit
 14969  3EB2  0876               	movf	??_isdigit+3,w
 14970  3EB3  00F2               	movwf	?_isdigit+1
 14971  3EB4  0008               	return
 14972  3EB5                     __end_of_isdigit:	
 14973                           
 14974                           	psect	text44
 14975  3F12                     __ptext44:	
 14976 ;; *************** function _EUSART_Write_Text *****************
 14977 ;; Defined at:
 14978 ;;		line 75 in file "EUSART.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  text            2    2[COMMON] PTR unsigned char 
 14981 ;;		 -> STR_26(3), STR_13(3), STR_12(38), STR_10(45), 
 14982 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14983 ;;		 -> STR_2(46), STR_1(40), 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;  i               2    5[COMMON] int 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14999 ;;Total ram usage:        5 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    2
 15002 ;; This function calls:
 15003 ;;		_EUSART_Write
 15004 ;; This function is called by:
 15005 ;;		_statemachine
 15006 ;;		_printcellParameters
 15007 ;;		_printotAFERegisters
 15008 ;; This function uses a non-reentrant model
 15009 ;;
 15010                           
 15011                           
 15012                           ;psect for function _EUSART_Write_Text
 15013  3F12                     _EUSART_Write_Text:	
 15014                           
 15015                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 15016                           
 15017                           ;incstack = 0
 15018                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15019  3F12  01F5               	clrf	EUSART_Write_Text@i
 15020  3F13  01F6               	clrf	EUSART_Write_Text@i+1
 15021  3F14                     l6697:	
 15022  3F14  0872               	movf	EUSART_Write_Text@text,w
 15023  3F15  0775               	addwf	EUSART_Write_Text@i,w
 15024  3F16  0084               	movwf	4
 15025  3F17  0873               	movf	EUSART_Write_Text@text+1,w
 15026  3F18  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15027  3F19  0085               	movwf	5
 15028  3F1A  0012               	moviw fsr0++
 15029  3F1B  1903               	btfsc	3,2
 15030  3F1C  0008               	return
 15031                           
 15032                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 15033  3F1D  0872               	movf	EUSART_Write_Text@text,w
 15034  3F1E  0775               	addwf	EUSART_Write_Text@i,w
 15035  3F1F  0084               	movwf	4
 15036  3F20  0873               	movf	EUSART_Write_Text@text+1,w
 15037  3F21  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15038  3F22  0085               	movwf	5
 15039  3F23  0800               	movf	0,w	;code access
 15040  3F24  31BE  2631  31BF   	fcall	_EUSART_Write
 15041  3F27  3001               	movlw	1
 15042  3F28  07F5               	addwf	EUSART_Write_Text@i,f
 15043  3F29  3000               	movlw	0
 15044  3F2A  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 15045  3F2B  2F14               	goto	l6697
 15046  3F2C                     __end_of_EUSART_Write_Text:	
 15047                           
 15048                           	psect	text45
 15049  3E31                     __ptext45:	
 15050 ;; *************** function _EUSART_Write *****************
 15051 ;; Defined at:
 15052 ;;		line 56 in file "EUSART.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;  txData          1    wreg     unsigned char 
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;  txData          1    1[COMMON] unsigned char 
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15070 ;;Total ram usage:        1 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:    1
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_EUSART_Write_Text
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           
 15081                           ;psect for function _EUSART_Write
 15082  3E31                     _EUSART_Write:	
 15083                           
 15084                           ;incstack = 0
 15085                           ; Regs used in _EUSART_Write: [wreg]
 15086                           ;EUSART_Write@txData stored from wreg
 15087  3E31  00F1               	movwf	EUSART_Write@txData
 15088  3E32                     l248:	
 15089                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 15090                           
 15091                           
 15092                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 15093  3E32  0020               	movlb	0	; select bank0
 15094  3E33  1E11               	btfss	17,4	;volatile
 15095  3E34  2E32               	goto	l248
 15096                           
 15097                           ;EUSART.c: 62:     TX1REG = txData;
 15098  3E35  0871               	movf	EUSART_Write@txData,w
 15099  3E36  0023               	movlb	3	; select bank3
 15100  3E37  009A               	movwf	26	;volatile
 15101  3E38  0008               	return
 15102  3E39                     __end_of_EUSART_Write:	
 15103                           
 15104                           	psect	text46
 15105  3437                     __ptext46:	
 15106 ;; *************** function _init_AFE *****************
 15107 ;; Defined at:
 15108 ;;		line 3 in file "BQ76920.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;		None
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;		None
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      void 
 15115 ;; Registers used:
 15116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15126 ;;Total ram usage:        0 bytes
 15127 ;; Hardware stack levels used:    1
 15128 ;; Hardware stack levels required when called:    4
 15129 ;; This function calls:
 15130 ;;		_setCellOvervoltageProtection
 15131 ;;		_setCellUndervoltageProtection
 15132 ;;		_setOverCurrentDischargeProtection
 15133 ;;		_setShortCircuitProtection
 15134 ;;		_setShuntResistorValue
 15135 ;;		_setTemperatureLimitsint
 15136 ;; This function is called by:
 15137 ;;		_statemachine
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           
 15142                           ;psect for function _init_AFE
 15143  3437                     _init_AFE:	
 15144                           
 15145                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 15146                           
 15147                           ;incstack = 0
 15148                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15149  3437  30EC               	movlw	236
 15150  3438  0020               	movlb	0	; select bank0
 15151  3439  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 15152  343A  30FF               	movlw	255
 15153  343B  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 15154  343C  302D               	movlw	45
 15155  343D  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 15156  343E  3000               	movlw	0
 15157  343F  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 15158  3440  3000               	movlw	0
 15159  3441  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 15160  3442  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 15161  3443  302D               	movlw	45
 15162  3444  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 15163  3445  3000               	movlw	0
 15164  3446  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 15165  3447  31B2  2222  31B4   	fcall	_setTemperatureLimitsint
 15166                           
 15167                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 15168  344A  303C               	movlw	60
 15169  344B  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 15170  344C  30A3               	movlw	163
 15171  344D  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 15172  344E  30D7               	movlw	215
 15173  344F  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 15174  3450  300A               	movlw	10
 15175  3451  00F1               	movwf	setShuntResistorValue@res_mOhm
 15176  3452  31BE  2684  31B4   	fcall	_setShuntResistorValue
 15177                           
 15178                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 15179  3455  3000               	movlw	0
 15180  3456  0020               	movlb	0	; select bank0
 15181  3457  00E9               	movwf	setShortCircuitProtection@current_mA+3
 15182  3458  3000               	movlw	0
 15183  3459  00E8               	movwf	setShortCircuitProtection@current_mA+2
 15184  345A  3009               	movlw	9
 15185  345B  00E7               	movwf	setShortCircuitProtection@current_mA+1
 15186  345C  30C4               	movlw	196
 15187  345D  00E6               	movwf	setShortCircuitProtection@current_mA
 15188  345E  30C8               	movlw	200
 15189  345F  00EA               	movwf	setShortCircuitProtection@delay_us
 15190  3460  3000               	movlw	0
 15191  3461  00EB               	movwf	setShortCircuitProtection@delay_us+1
 15192  3462  3186  26D2  31B4   	fcall	_setShortCircuitProtection
 15193                           
 15194                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 15195  3465  3000               	movlw	0
 15196  3466  0020               	movlb	0	; select bank0
 15197  3467  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 15198  3468  3000               	movlw	0
 15199  3469  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 15200  346A  304E               	movlw	78
 15201  346B  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 15202  346C  3020               	movlw	32
 15203  346D  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 15204  346E  3040               	movlw	64
 15205  346F  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 15206  3470  3001               	movlw	1
 15207  3471  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 15208  3472  31A6  26EB  31B4   	fcall	_setOverCurrentDischargeProtection
 15209                           
 15210                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 15211  3475  3054               	movlw	84
 15212  3476  0020               	movlb	0	; select bank0
 15213  3477  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 15214  3478  300B               	movlw	11
 15215  3479  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 15216  347A  3002               	movlw	2
 15217  347B  00B4               	movwf	setCellUndervoltageProtection@delay_s
 15218  347C  3000               	movlw	0
 15219  347D  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 15220  347E  31AF  2725  31B4   	fcall	_setCellUndervoltageProtection
 15221                           
 15222                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 15223  3481  3004               	movlw	4
 15224  3482  0020               	movlb	0	; select bank0
 15225  3483  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 15226  3484  3010               	movlw	16
 15227  3485  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 15228  3486  3002               	movlw	2
 15229  3487  00B4               	movwf	setCellOvervoltageProtection@delay_s
 15230  3488  3000               	movlw	0
 15231  3489  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 15232  348A  31AC  24A4         	fcall	_setCellOvervoltageProtection
 15233  348C  0008               	return
 15234  348D                     __end_of_init_AFE:	
 15235                           
 15236                           	psect	text47
 15237  3222                     __ptext47:	
 15238 ;; *************** function _setTemperatureLimitsint *****************
 15239 ;; Defined at:
 15240 ;;		line 56 in file "BQ76920.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;  minDischarge    2    0[BANK0 ] int 
 15243 ;;  maxDischarge    2    2[BANK0 ] int 
 15244 ;;  minCharge_de    2    4[BANK0 ] int 
 15245 ;;  maxCharge_de    2    6[BANK0 ] int 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;		None
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		wreg, status,2, status,0, pclath, cstack
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15257 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        8 bytes
 15262 ;; Hardware stack levels used:    1
 15263 ;; Hardware stack levels required when called:    2
 15264 ;; This function calls:
 15265 ;;		___wmul
 15266 ;; This function is called by:
 15267 ;;		_init_AFE
 15268 ;; This function uses a non-reentrant model
 15269 ;;
 15270                           
 15271                           
 15272                           ;psect for function _setTemperatureLimitsint
 15273  3222                     _setTemperatureLimitsint:	
 15274                           
 15275                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 15276                           
 15277                           ;incstack = 0
 15278                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 15279  3222  0020               	movlb	0	; select bank0
 15280  3223  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15281  3224  00F2               	movwf	___wmul@multiplier+1
 15282  3225  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15283  3226  00F1               	movwf	___wmul@multiplier
 15284  3227  300A               	movlw	10
 15285  3228  00F3               	movwf	___wmul@multiplicand
 15286  3229  3000               	movlw	0
 15287  322A  00F4               	movwf	___wmul@multiplicand+1
 15288  322B  31BF  272C  31B2   	fcall	___wmul
 15289  322E  0872               	movf	?___wmul+1,w
 15290  322F  0023               	movlb	3	; select bank3
 15291  3230  00C1               	movwf	(_minCellTempDischarge+1)^(0+384)
 15292  3231  0871               	movf	?___wmul,w
 15293  3232  00C0               	movwf	_minCellTempDischarge^(0+384)
 15294                           
 15295                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 15296  3233  0020               	movlb	0	; select bank0
 15297  3234  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15298  3235  00F2               	movwf	___wmul@multiplier+1
 15299  3236  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15300  3237  00F1               	movwf	___wmul@multiplier
 15301  3238  300A               	movlw	10
 15302  3239  00F3               	movwf	___wmul@multiplicand
 15303  323A  3000               	movlw	0
 15304  323B  00F4               	movwf	___wmul@multiplicand+1
 15305  323C  31BF  272C  31B2   	fcall	___wmul
 15306  323F  0872               	movf	?___wmul+1,w
 15307  3240  0023               	movlb	3	; select bank3
 15308  3241  00BD               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15309  3242  0871               	movf	?___wmul,w
 15310  3243  00BC               	movwf	_maxCellTempDischarge^(0+384)
 15311                           
 15312                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 15313  3244  0020               	movlb	0	; select bank0
 15314  3245  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15315  3246  00F2               	movwf	___wmul@multiplier+1
 15316  3247  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15317  3248  00F1               	movwf	___wmul@multiplier
 15318  3249  300A               	movlw	10
 15319  324A  00F3               	movwf	___wmul@multiplicand
 15320  324B  3000               	movlw	0
 15321  324C  00F4               	movwf	___wmul@multiplicand+1
 15322  324D  31BF  272C  31B2   	fcall	___wmul
 15323  3250  0872               	movf	?___wmul+1,w
 15324  3251  0023               	movlb	3	; select bank3
 15325  3252  00C3               	movwf	(_minCellTempCharge+1)^(0+384)
 15326  3253  0871               	movf	?___wmul,w
 15327  3254  00C2               	movwf	_minCellTempCharge^(0+384)
 15328                           
 15329                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 15330  3255  0020               	movlb	0	; select bank0
 15331  3256  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15332  3257  00F2               	movwf	___wmul@multiplier+1
 15333  3258  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15334  3259  00F1               	movwf	___wmul@multiplier
 15335  325A  300A               	movlw	10
 15336  325B  00F3               	movwf	___wmul@multiplicand
 15337  325C  3000               	movlw	0
 15338  325D  00F4               	movwf	___wmul@multiplicand+1
 15339  325E  31BF  272C         	fcall	___wmul
 15340  3260  0872               	movf	?___wmul+1,w
 15341  3261  0023               	movlb	3	; select bank3
 15342  3262  00BF               	movwf	(_maxCellTempCharge+1)^(0+384)
 15343  3263  0871               	movf	?___wmul,w
 15344  3264  00BE               	movwf	_maxCellTempCharge^(0+384)
 15345  3265  0008               	return
 15346  3266                     __end_of_setTemperatureLimitsint:	
 15347                           
 15348                           	psect	text48
 15349  3F2C                     __ptext48:	
 15350 ;; *************** function ___wmul *****************
 15351 ;; Defined at:
 15352 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;  multiplier      2    1[COMMON] unsigned int 
 15355 ;;  multiplicand    2    3[COMMON] unsigned int 
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  product         2    5[COMMON] unsigned int 
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  2    1[COMMON] unsigned int 
 15360 ;; Registers used:
 15361 ;;		wreg, status,2, status,0
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;Total ram usage:        6 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    1
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		_setTemperatureLimitsint
 15378 ;;		_atoi
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           
 15383                           ;psect for function ___wmul
 15384  3F2C                     ___wmul:	
 15385                           
 15386                           ;incstack = 0
 15387                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15388  3F2C  01F5               	clrf	___wmul@product
 15389  3F2D  01F6               	clrf	___wmul@product+1
 15390  3F2E                     l4833:	
 15391  3F2E  1C71               	btfss	___wmul@multiplier,0
 15392  3F2F  2F34               	goto	l959
 15393  3F30  0873               	movf	___wmul@multiplicand,w
 15394  3F31  07F5               	addwf	___wmul@product,f
 15395  3F32  0874               	movf	___wmul@multiplicand+1,w
 15396  3F33  3DF6               	addwfc	___wmul@product+1,f
 15397  3F34                     l959:	
 15398  3F34  3001               	movlw	1
 15399  3F35                     u5785:	
 15400  3F35  35F3               	lslf	___wmul@multiplicand,f
 15401  3F36  0DF4               	rlf	___wmul@multiplicand+1,f
 15402  3F37  0B89               	decfsz	9,f
 15403  3F38  2F35               	goto	u5785
 15404  3F39  3001               	movlw	1
 15405  3F3A                     u5795:	
 15406  3F3A  36F2               	lsrf	___wmul@multiplier+1,f
 15407  3F3B  0CF1               	rrf	___wmul@multiplier,f
 15408  3F3C  0B89               	decfsz	9,f
 15409  3F3D  2F3A               	goto	u5795
 15410  3F3E  0871               	movf	___wmul@multiplier,w
 15411  3F3F  0472               	iorwf	___wmul@multiplier+1,w
 15412  3F40  1D03               	btfss	3,2
 15413  3F41  2F2E               	goto	l4833
 15414  3F42  0876               	movf	___wmul@product+1,w
 15415  3F43  00F2               	movwf	?___wmul+1
 15416  3F44  0875               	movf	___wmul@product,w
 15417  3F45  00F1               	movwf	?___wmul
 15418  3F46  0008               	return
 15419  3F47                     __end_of___wmul:	
 15420                           
 15421                           	psect	text49
 15422  3E84                     __ptext49:	
 15423 ;; *************** function _setShuntResistorValue *****************
 15424 ;; Defined at:
 15425 ;;		line 68 in file "BQ76920.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  res_mOhm        4    1[COMMON] float 
 15428 ;; Auto vars:     Size  Location     Type
 15429 ;;		None
 15430 ;; Return value:  Size  Location     Type
 15431 ;;                  1    wreg      void 
 15432 ;; Registers used:
 15433 ;;		wreg
 15434 ;; Tracked objects:
 15435 ;;		On entry : 0/0
 15436 ;;		On exit  : 0/0
 15437 ;;		Unchanged: 0/0
 15438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15443 ;;Total ram usage:        4 bytes
 15444 ;; Hardware stack levels used:    1
 15445 ;; Hardware stack levels required when called:    1
 15446 ;; This function calls:
 15447 ;;		Nothing
 15448 ;; This function is called by:
 15449 ;;		_init_AFE
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           
 15454                           ;psect for function _setShuntResistorValue
 15455  3E84                     _setShuntResistorValue:	
 15456                           
 15457                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 15458                           
 15459                           ;incstack = 0
 15460                           ; Regs used in _setShuntResistorValue: [wreg]
 15461  3E84  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15462  3E85  0023               	movlb	3	; select bank3
 15463  3E86  00A7               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15464  3E87  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15465  3E88  00A6               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15466  3E89  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15467  3E8A  00A5               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15468  3E8B  0871               	movf	setShuntResistorValue@res_mOhm,w
 15469  3E8C  00A4               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15470  3E8D  0008               	return
 15471  3E8E                     __end_of_setShuntResistorValue:	
 15472                           
 15473                           	psect	text50
 15474  06D2                     __ptext50:	
 15475 ;; *************** function _setShortCircuitProtection *****************
 15476 ;; Defined at:
 15477 ;;		line 76 in file "BQ76920.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  current_mA      4   70[BANK0 ] long 
 15480 ;;  delay_us        2   74[BANK0 ] int 
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;  i               2   10[BANK1 ] int 
 15483 ;;  i               2    8[BANK1 ] int 
 15484 ;;  scaler          4    0[BANK1 ] float 
 15485 ;; Return value:  Size  Location     Type
 15486 ;;                  1    wreg      void 
 15487 ;; Registers used:
 15488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15489 ;; Tracked objects:
 15490 ;;		On entry : 0/0
 15491 ;;		On exit  : 0/0
 15492 ;;		Unchanged: 0/0
 15493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15494 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15497 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15498 ;;Total ram usage:       21 bytes
 15499 ;; Hardware stack levels used:    1
 15500 ;; Hardware stack levels required when called:    3
 15501 ;; This function calls:
 15502 ;;		_I2C_writeRegister
 15503 ;;		___fldiv
 15504 ;;		___flge
 15505 ;;		___flmul
 15506 ;;		___xxtofl
 15507 ;; This function is called by:
 15508 ;;		_init_AFE
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           
 15513                           ;psect for function _setShortCircuitProtection
 15514  06D2                     _setShortCircuitProtection:	
 15515                           
 15516                           ;BQ76920.c: 81:     float scaler = 1000.0;
 15517                           
 15518                           ;incstack = 0
 15519                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15520  06D2  3044               	movlw	68
 15521  06D3  0021               	movlb	1	; select bank1
 15522  06D4  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15523  06D5  307A               	movlw	122
 15524  06D6  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15525  06D7  3000               	movlw	0
 15526  06D8  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15527  06D9  3000               	movlw	0
 15528  06DA  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15529                           
 15530                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 15531  06DB  30F8               	movlw	-8
 15532  06DC  0023               	movlb	3	; select bank3
 15533  06DD  05C8               	andwf	BQ76920@protect1^(0+384),f
 15534                           
 15535                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15536  06DE  0021               	movlb	1	; select bank1
 15537  06DF  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15538  06E0  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15539  06E1                     l6729:	
 15540                           
 15541                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15542  06E1  0023               	movlb	3	; select bank3
 15543  06E2  0827               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15544  06E3  0020               	movlb	0	; select bank0
 15545  06E4  00A9               	movwf	___flmul@b+3
 15546  06E5  0023               	movlb	3	; select bank3
 15547  06E6  0826               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15548  06E7  0020               	movlb	0	; select bank0
 15549  06E8  00A8               	movwf	___flmul@b+2
 15550  06E9  0023               	movlb	3	; select bank3
 15551  06EA  0825               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15552  06EB  0020               	movlb	0	; select bank0
 15553  06EC  00A7               	movwf	___flmul@b+1
 15554  06ED  0023               	movlb	3	; select bank3
 15555  06EE  0824               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15556  06EF  0020               	movlb	0	; select bank0
 15557  06F0  00A6               	movwf	___flmul@b
 15558  06F1  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15559  06F2  00F4               	movwf	___xxtofl@val+3
 15560  06F3  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15561  06F4  00F3               	movwf	___xxtofl@val+2
 15562  06F5  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15563  06F6  00F2               	movwf	___xxtofl@val+1
 15564  06F7  0866               	movf	setShortCircuitProtection@current_mA,w
 15565  06F8  00F1               	movwf	___xxtofl@val
 15566  06F9  3001               	movlw	1
 15567  06FA  31A9  21FF  3186   	fcall	___xxtofl
 15568  06FD  0874               	movf	?___xxtofl+3,w
 15569  06FE  0020               	movlb	0	; select bank0
 15570  06FF  00AD               	movwf	___flmul@a+3
 15571  0700  0873               	movf	?___xxtofl+2,w
 15572  0701  00AC               	movwf	___flmul@a+2
 15573  0702  0872               	movf	?___xxtofl+1,w
 15574  0703  00AB               	movwf	___flmul@a+1
 15575  0704  0871               	movf	?___xxtofl,w
 15576  0705  00AA               	movwf	___flmul@a
 15577  0706  3193  23A8  3186   	fcall	___flmul
 15578  0709  0020               	movlb	0	; select bank0
 15579  070A  0829               	movf	?___flmul+3,w
 15580  070B  0021               	movlb	1	; select bank1
 15581  070C  00A7               	movwf	(_setShortCircuitProtection$2138+3)^(0+128)
 15582  070D  0020               	movlb	0	; select bank0
 15583  070E  0828               	movf	?___flmul+2,w
 15584  070F  0021               	movlb	1	; select bank1
 15585  0710  00A6               	movwf	(_setShortCircuitProtection$2138+2)^(0+128)
 15586  0711  0020               	movlb	0	; select bank0
 15587  0712  0827               	movf	?___flmul+1,w
 15588  0713  0021               	movlb	1	; select bank1
 15589  0714  00A5               	movwf	(_setShortCircuitProtection$2138+1)^(0+128)
 15590  0715  0020               	movlb	0	; select bank0
 15591  0716  0826               	movf	?___flmul,w
 15592  0717  0021               	movlb	1	; select bank1
 15593  0718  00A4               	movwf	_setShortCircuitProtection$2138^(0+128)
 15594                           
 15595                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15596  0719  3044               	movlw	68
 15597  071A  0020               	movlb	0	; select bank0
 15598  071B  00C3               	movwf	___fldiv@a+3
 15599  071C  307A               	movlw	122
 15600  071D  00C2               	movwf	___fldiv@a+2
 15601  071E  3000               	movlw	0
 15602  071F  00C1               	movwf	___fldiv@a+1
 15603  0720  3000               	movlw	0
 15604  0721  00C0               	movwf	___fldiv@a
 15605  0722  0021               	movlb	1	; select bank1
 15606  0723  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15607  0724  0020               	movlb	0	; select bank0
 15608  0725  00A9               	movwf	___flmul@b+3
 15609  0726  0021               	movlb	1	; select bank1
 15610  0727  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15611  0728  0020               	movlb	0	; select bank0
 15612  0729  00A8               	movwf	___flmul@b+2
 15613  072A  0021               	movlb	1	; select bank1
 15614  072B  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15615  072C  0020               	movlb	0	; select bank0
 15616  072D  00A7               	movwf	___flmul@b+1
 15617  072E  0021               	movlb	1	; select bank1
 15618  072F  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15619  0730  0020               	movlb	0	; select bank0
 15620  0731  00A6               	movwf	___flmul@b
 15621  0732  0021               	movlb	1	; select bank1
 15622  0733  0827               	movf	(_setShortCircuitProtection$2138+3)^(0+128),w
 15623  0734  0020               	movlb	0	; select bank0
 15624  0735  00AD               	movwf	___flmul@a+3
 15625  0736  0021               	movlb	1	; select bank1
 15626  0737  0826               	movf	(_setShortCircuitProtection$2138+2)^(0+128),w
 15627  0738  0020               	movlb	0	; select bank0
 15628  0739  00AC               	movwf	___flmul@a+2
 15629  073A  0021               	movlb	1	; select bank1
 15630  073B  0825               	movf	(_setShortCircuitProtection$2138+1)^(0+128),w
 15631  073C  0020               	movlb	0	; select bank0
 15632  073D  00AB               	movwf	___flmul@a+1
 15633  073E  0021               	movlb	1	; select bank1
 15634  073F  0824               	movf	_setShortCircuitProtection$2138^(0+128),w
 15635  0740  0020               	movlb	0	; select bank0
 15636  0741  00AA               	movwf	___flmul@a
 15637  0742  3193  23A8  3186   	fcall	___flmul
 15638  0745  0020               	movlb	0	; select bank0
 15639  0746  0829               	movf	?___flmul+3,w
 15640  0747  00C7               	movwf	___fldiv@b+3
 15641  0748  0828               	movf	?___flmul+2,w
 15642  0749  00C6               	movwf	___fldiv@b+2
 15643  074A  0827               	movf	?___flmul+1,w
 15644  074B  00C5               	movwf	___fldiv@b+1
 15645  074C  0826               	movf	?___flmul,w
 15646  074D  00C4               	movwf	___fldiv@b
 15647  074E  319C  24A4  3186   	fcall	___fldiv
 15648  0751  0020               	movlb	0	; select bank0
 15649  0752  0843               	movf	?___fldiv+3,w
 15650  0753  00DD               	movwf	___flge@ff1+3
 15651  0754  0842               	movf	?___fldiv+2,w
 15652  0755  00DC               	movwf	___flge@ff1+2
 15653  0756  0841               	movf	?___fldiv+1,w
 15654  0757  00DB               	movwf	___flge@ff1+1
 15655  0758  0840               	movf	?___fldiv,w
 15656  0759  00DA               	movwf	___flge@ff1
 15657  075A  0021               	movlb	1	; select bank1
 15658  075B  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15659  075C  0085               	movwf	5
 15660  075D  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15661  075E  0084               	movwf	4
 15662  075F  3584               	lslf	4,f
 15663  0760  0D85               	rlf	5,f
 15664  0761  301C               	movlw	low (_SCD_threshold_setting| (0+32768))
 15665  0762  0784               	addwf	4,f
 15666  0763  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 15667  0764  3D85               	addwfc	5,f
 15668  0765  3F00               	moviw [0]fsr0
 15669  0766  0020               	movlb	0	; select bank0
 15670  0767  00EC               	movwf	??_setShortCircuitProtection
 15671  0768  3F01               	moviw [1]fsr0
 15672  0769  00ED               	movwf	??_setShortCircuitProtection+1
 15673  076A  086C               	movf	??_setShortCircuitProtection,w
 15674  076B  00F1               	movwf	___xxtofl@val
 15675  076C  086D               	movf	??_setShortCircuitProtection+1,w
 15676  076D  00F2               	movwf	___xxtofl@val+1
 15677  076E  0D89               	rlf	9,f
 15678  076F  3B89               	subwfb	9,f
 15679  0770  0989               	comf	9,f
 15680  0771  00F3               	movwf	___xxtofl@val+2
 15681  0772  00F4               	movwf	___xxtofl@val+3
 15682  0773  3001               	movlw	1
 15683  0774  31A9  21FF  3186   	fcall	___xxtofl
 15684  0777  0874               	movf	?___xxtofl+3,w
 15685  0778  0020               	movlb	0	; select bank0
 15686  0779  00E1               	movwf	___flge@ff2+3
 15687  077A  0873               	movf	?___xxtofl+2,w
 15688  077B  00E0               	movwf	___flge@ff2+2
 15689  077C  0872               	movf	?___xxtofl+1,w
 15690  077D  00DF               	movwf	___flge@ff2+1
 15691  077E  0871               	movf	?___xxtofl,w
 15692  077F  00DE               	movwf	___flge@ff2
 15693  0780  31B6  2686  3186   	fcall	___flge
 15694  0783  1C03               	btfss	3,0
 15695  0784  2F8D               	goto	l6735
 15696                           
 15697                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 15698  0785  0023               	movlb	3	; select bank3
 15699  0786  0848               	movf	BQ76920@protect1^(0+384),w
 15700  0787  0021               	movlb	1	; select bank1
 15701  0788  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15702  0789  39F8               	andlw	-8
 15703  078A  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15704  078B  0023               	movlb	3	; select bank3
 15705  078C  00C8               	movwf	BQ76920@protect1^(0+384)
 15706  078D                     l6735:	
 15707                           
 15708                           ;BQ76920.c: 87:     }
 15709  078D  3001               	movlw	1
 15710  078E  0021               	movlb	1	; select bank1
 15711  078F  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15712  0790  3000               	movlw	0
 15713  0791  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15714  0792  3000               	movlw	0
 15715  0793  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15716  0794  3007               	movlw	7
 15717  0795  1903               	skipnz
 15718  0796  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15719  0797  1C03               	skipc
 15720  0798  2EE1               	goto	l6729
 15721                           
 15722                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 15723  0799  30E7               	movlw	-25
 15724  079A  0023               	movlb	3	; select bank3
 15725  079B  05C8               	andwf	BQ76920@protect1^(0+384),f
 15726                           
 15727                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15728  079C  0021               	movlb	1	; select bank1
 15729  079D  01AA               	clrf	setShortCircuitProtection@i_980^(0+128)
 15730  079E  01AB               	clrf	(setShortCircuitProtection@i_980+1)^(0+128)
 15731  079F                     l6747:	
 15732                           
 15733                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 15734  079F  082B               	movf	(setShortCircuitProtection@i_980+1)^(0+128),w
 15735  07A0  0085               	movwf	5
 15736  07A1  082A               	movf	setShortCircuitProtection@i_980^(0+128),w
 15737  07A2  0084               	movwf	4
 15738  07A3  3584               	lslf	4,f
 15739  07A4  0D85               	rlf	5,f
 15740  07A5  303C               	movlw	low (_SCD_delay_setting| (0+32768))
 15741  07A6  0784               	addwf	4,f
 15742  07A7  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15743  07A8  3D85               	addwfc	5,f
 15744  07A9  3F00               	moviw [0]fsr0
 15745  07AA  0020               	movlb	0	; select bank0
 15746  07AB  00EC               	movwf	??_setShortCircuitProtection
 15747  07AC  3F01               	moviw [1]fsr0
 15748  07AD  00ED               	movwf	??_setShortCircuitProtection+1
 15749  07AE  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15750  07AF  3A80               	xorlw	128
 15751  07B0  00EE               	movwf	??_setShortCircuitProtection+2
 15752  07B1  086D               	movf	??_setShortCircuitProtection+1,w
 15753  07B2  3A80               	xorlw	128
 15754  07B3  026E               	subwf	??_setShortCircuitProtection+2,w
 15755  07B4  1D03               	skipz
 15756  07B5  2FB8               	goto	u9345
 15757  07B6  086C               	movf	??_setShortCircuitProtection,w
 15758  07B7  026A               	subwf	setShortCircuitProtection@delay_us,w
 15759  07B8                     u9345:	
 15760  07B8  1C03               	skipc
 15761  07B9  2FC9               	goto	l6751
 15762                           
 15763                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 15764  07BA  0021               	movlb	1	; select bank1
 15765  07BB  082A               	movf	setShortCircuitProtection@i_980^(0+128),w
 15766  07BC  0020               	movlb	0	; select bank0
 15767  07BD  00EC               	movwf	??_setShortCircuitProtection
 15768  07BE  0DEC               	rlf	??_setShortCircuitProtection,f
 15769  07BF  0DEC               	rlf	??_setShortCircuitProtection,f
 15770  07C0  0DEC               	rlf	??_setShortCircuitProtection,f
 15771  07C1  0023               	movlb	3	; select bank3
 15772  07C2  0848               	movf	BQ76920@protect1^(0+384),w
 15773  07C3  0020               	movlb	0	; select bank0
 15774  07C4  066C               	xorwf	??_setShortCircuitProtection,w
 15775  07C5  39E7               	andlw	-25
 15776  07C6  066C               	xorwf	??_setShortCircuitProtection,w
 15777  07C7  0023               	movlb	3	; select bank3
 15778  07C8  00C8               	movwf	BQ76920@protect1^(0+384)
 15779  07C9                     l6751:	
 15780                           
 15781                           ;BQ76920.c: 94:     }
 15782  07C9  3001               	movlw	1
 15783  07CA  0021               	movlb	1	; select bank1
 15784  07CB  07AA               	addwf	setShortCircuitProtection@i_980^(0+128),f
 15785  07CC  3000               	movlw	0
 15786  07CD  3DAB               	addwfc	(setShortCircuitProtection@i_980+1)^(0+128),f
 15787  07CE  3000               	movlw	0
 15788  07CF  022B               	subwf	(setShortCircuitProtection@i_980+1)^(0+128),w
 15789  07D0  3007               	movlw	7
 15790  07D1  1903               	skipnz
 15791  07D2  022A               	subwf	setShortCircuitProtection@i_980^(0+128),w
 15792  07D3  1C03               	skipc
 15793  07D4  2F9F               	goto	l6747
 15794                           
 15795                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15796  07D5  3018               	movlw	24
 15797  07D6  00F5               	movwf	I2C_writeRegister@slaveAddress
 15798  07D7  3000               	movlw	0
 15799  07D8  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15800  07D9  3006               	movlw	6
 15801  07DA  00F7               	movwf	I2C_writeRegister@regAddress
 15802  07DB  3000               	movlw	0
 15803  07DC  00F8               	movwf	I2C_writeRegister@regAddress+1
 15804  07DD  0023               	movlb	3	; select bank3
 15805  07DE  0848               	movf	BQ76920@protect1^(0+384),w
 15806  07DF  0020               	movlb	0	; select bank0
 15807  07E0  00EC               	movwf	??_setShortCircuitProtection
 15808  07E1  01ED               	clrf	??_setShortCircuitProtection+1
 15809  07E2  086C               	movf	??_setShortCircuitProtection,w
 15810  07E3  00F9               	movwf	I2C_writeRegister@data
 15811  07E4  086D               	movf	??_setShortCircuitProtection+1,w
 15812  07E5  00FA               	movwf	I2C_writeRegister@data+1
 15813  07E6  31BF  2780         	fcall	_I2C_writeRegister
 15814  07E8  0008               	return
 15815  07E9                     __end_of_setShortCircuitProtection:	
 15816                           
 15817                           	psect	text51
 15818  26EB                     __ptext51:	
 15819 ;; *************** function _setOverCurrentDischargeProtection *****************
 15820 ;; Defined at:
 15821 ;;		line 103 in file "BQ76920.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  current_mA      4   70[BANK0 ] long 
 15824 ;;  delay_ms        2   74[BANK0 ] int 
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;  i               2   10[BANK1 ] int 
 15827 ;;  i               2    8[BANK1 ] int 
 15828 ;;  scaler          4    0[BANK1 ] float 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15838 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15839 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15840 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15841 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15842 ;;Total ram usage:       21 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    3
 15845 ;; This function calls:
 15846 ;;		_I2C_writeRegister
 15847 ;;		___fldiv
 15848 ;;		___flge
 15849 ;;		___flmul
 15850 ;;		___xxtofl
 15851 ;; This function is called by:
 15852 ;;		_init_AFE
 15853 ;; This function uses a non-reentrant model
 15854 ;;
 15855                           
 15856                           
 15857                           ;psect for function _setOverCurrentDischargeProtection
 15858  26EB                     _setOverCurrentDischargeProtection:	
 15859                           
 15860                           ;BQ76920.c: 106:     float scaler = 1000.0;
 15861                           
 15862                           ;incstack = 0
 15863                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15864  26EB  3044               	movlw	68
 15865  26EC  0021               	movlb	1	; select bank1
 15866  26ED  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15867  26EE  307A               	movlw	122
 15868  26EF  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15869  26F0  3000               	movlw	0
 15870  26F1  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15871  26F2  3000               	movlw	0
 15872  26F3  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15873                           
 15874                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 15875  26F4  30F0               	movlw	-16
 15876  26F5  0023               	movlb	3	; select bank3
 15877  26F6  05C7               	andwf	BQ76920@protect2^(0+384),f
 15878                           
 15879                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15880  26F7  0021               	movlb	1	; select bank1
 15881  26F8  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15882  26F9  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15883  26FA                     l6767:	
 15884                           
 15885                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15886  26FA  0023               	movlb	3	; select bank3
 15887  26FB  0827               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15888  26FC  0020               	movlb	0	; select bank0
 15889  26FD  00A9               	movwf	___flmul@b+3
 15890  26FE  0023               	movlb	3	; select bank3
 15891  26FF  0826               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15892  2700  0020               	movlb	0	; select bank0
 15893  2701  00A8               	movwf	___flmul@b+2
 15894  2702  0023               	movlb	3	; select bank3
 15895  2703  0825               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15896  2704  0020               	movlb	0	; select bank0
 15897  2705  00A7               	movwf	___flmul@b+1
 15898  2706  0023               	movlb	3	; select bank3
 15899  2707  0824               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15900  2708  0020               	movlb	0	; select bank0
 15901  2709  00A6               	movwf	___flmul@b
 15902  270A  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15903  270B  00F4               	movwf	___xxtofl@val+3
 15904  270C  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15905  270D  00F3               	movwf	___xxtofl@val+2
 15906  270E  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15907  270F  00F2               	movwf	___xxtofl@val+1
 15908  2710  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15909  2711  00F1               	movwf	___xxtofl@val
 15910  2712  3001               	movlw	1
 15911  2713  31A9  21FF  31A6   	fcall	___xxtofl
 15912  2716  0874               	movf	?___xxtofl+3,w
 15913  2717  0020               	movlb	0	; select bank0
 15914  2718  00AD               	movwf	___flmul@a+3
 15915  2719  0873               	movf	?___xxtofl+2,w
 15916  271A  00AC               	movwf	___flmul@a+2
 15917  271B  0872               	movf	?___xxtofl+1,w
 15918  271C  00AB               	movwf	___flmul@a+1
 15919  271D  0871               	movf	?___xxtofl,w
 15920  271E  00AA               	movwf	___flmul@a
 15921  271F  3193  23A8  31A6   	fcall	___flmul
 15922  2722  0020               	movlb	0	; select bank0
 15923  2723  0829               	movf	?___flmul+3,w
 15924  2724  0021               	movlb	1	; select bank1
 15925  2725  00A7               	movwf	(_setOverCurrentDischargeProtection$2139+3)^(0+128)
 15926  2726  0020               	movlb	0	; select bank0
 15927  2727  0828               	movf	?___flmul+2,w
 15928  2728  0021               	movlb	1	; select bank1
 15929  2729  00A6               	movwf	(_setOverCurrentDischargeProtection$2139+2)^(0+128)
 15930  272A  0020               	movlb	0	; select bank0
 15931  272B  0827               	movf	?___flmul+1,w
 15932  272C  0021               	movlb	1	; select bank1
 15933  272D  00A5               	movwf	(_setOverCurrentDischargeProtection$2139+1)^(0+128)
 15934  272E  0020               	movlb	0	; select bank0
 15935  272F  0826               	movf	?___flmul,w
 15936  2730  0021               	movlb	1	; select bank1
 15937  2731  00A4               	movwf	_setOverCurrentDischargeProtection$2139^(0+128)
 15938                           
 15939                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15940  2732  3044               	movlw	68
 15941  2733  0020               	movlb	0	; select bank0
 15942  2734  00C3               	movwf	___fldiv@a+3
 15943  2735  307A               	movlw	122
 15944  2736  00C2               	movwf	___fldiv@a+2
 15945  2737  3000               	movlw	0
 15946  2738  00C1               	movwf	___fldiv@a+1
 15947  2739  3000               	movlw	0
 15948  273A  00C0               	movwf	___fldiv@a
 15949  273B  0021               	movlb	1	; select bank1
 15950  273C  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15951  273D  0020               	movlb	0	; select bank0
 15952  273E  00A9               	movwf	___flmul@b+3
 15953  273F  0021               	movlb	1	; select bank1
 15954  2740  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15955  2741  0020               	movlb	0	; select bank0
 15956  2742  00A8               	movwf	___flmul@b+2
 15957  2743  0021               	movlb	1	; select bank1
 15958  2744  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15959  2745  0020               	movlb	0	; select bank0
 15960  2746  00A7               	movwf	___flmul@b+1
 15961  2747  0021               	movlb	1	; select bank1
 15962  2748  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15963  2749  0020               	movlb	0	; select bank0
 15964  274A  00A6               	movwf	___flmul@b
 15965  274B  0021               	movlb	1	; select bank1
 15966  274C  0827               	movf	(_setOverCurrentDischargeProtection$2139+3)^(0+128),w
 15967  274D  0020               	movlb	0	; select bank0
 15968  274E  00AD               	movwf	___flmul@a+3
 15969  274F  0021               	movlb	1	; select bank1
 15970  2750  0826               	movf	(_setOverCurrentDischargeProtection$2139+2)^(0+128),w
 15971  2751  0020               	movlb	0	; select bank0
 15972  2752  00AC               	movwf	___flmul@a+2
 15973  2753  0021               	movlb	1	; select bank1
 15974  2754  0825               	movf	(_setOverCurrentDischargeProtection$2139+1)^(0+128),w
 15975  2755  0020               	movlb	0	; select bank0
 15976  2756  00AB               	movwf	___flmul@a+1
 15977  2757  0021               	movlb	1	; select bank1
 15978  2758  0824               	movf	_setOverCurrentDischargeProtection$2139^(0+128),w
 15979  2759  0020               	movlb	0	; select bank0
 15980  275A  00AA               	movwf	___flmul@a
 15981  275B  3193  23A8  31A6   	fcall	___flmul
 15982  275E  0020               	movlb	0	; select bank0
 15983  275F  0829               	movf	?___flmul+3,w
 15984  2760  00C7               	movwf	___fldiv@b+3
 15985  2761  0828               	movf	?___flmul+2,w
 15986  2762  00C6               	movwf	___fldiv@b+2
 15987  2763  0827               	movf	?___flmul+1,w
 15988  2764  00C5               	movwf	___fldiv@b+1
 15989  2765  0826               	movf	?___flmul,w
 15990  2766  00C4               	movwf	___fldiv@b
 15991  2767  319C  24A4  31A6   	fcall	___fldiv
 15992  276A  0020               	movlb	0	; select bank0
 15993  276B  0843               	movf	?___fldiv+3,w
 15994  276C  00DD               	movwf	___flge@ff1+3
 15995  276D  0842               	movf	?___fldiv+2,w
 15996  276E  00DC               	movwf	___flge@ff1+2
 15997  276F  0841               	movf	?___fldiv+1,w
 15998  2770  00DB               	movwf	___flge@ff1+1
 15999  2771  0840               	movf	?___fldiv,w
 16000  2772  00DA               	movwf	___flge@ff1
 16001  2773  0021               	movlb	1	; select bank1
 16002  2774  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16003  2775  0085               	movwf	5
 16004  2776  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 16005  2777  0084               	movwf	4
 16006  2778  3584               	lslf	4,f
 16007  2779  0D85               	rlf	5,f
 16008  277A  30F8               	movlw	low (_OCD_threshold_setting| (0+32768))
 16009  277B  0784               	addwf	4,f
 16010  277C  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 16011  277D  3D85               	addwfc	5,f
 16012  277E  3F00               	moviw [0]fsr0
 16013  277F  0020               	movlb	0	; select bank0
 16014  2780  00EC               	movwf	??_setOverCurrentDischargeProtection
 16015  2781  3F01               	moviw [1]fsr0
 16016  2782  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16017  2783  086C               	movf	??_setOverCurrentDischargeProtection,w
 16018  2784  00F1               	movwf	___xxtofl@val
 16019  2785  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16020  2786  00F2               	movwf	___xxtofl@val+1
 16021  2787  0D89               	rlf	9,f
 16022  2788  3B89               	subwfb	9,f
 16023  2789  0989               	comf	9,f
 16024  278A  00F3               	movwf	___xxtofl@val+2
 16025  278B  00F4               	movwf	___xxtofl@val+3
 16026  278C  3001               	movlw	1
 16027  278D  31A9  21FF  31A6   	fcall	___xxtofl
 16028  2790  0874               	movf	?___xxtofl+3,w
 16029  2791  0020               	movlb	0	; select bank0
 16030  2792  00E1               	movwf	___flge@ff2+3
 16031  2793  0873               	movf	?___xxtofl+2,w
 16032  2794  00E0               	movwf	___flge@ff2+2
 16033  2795  0872               	movf	?___xxtofl+1,w
 16034  2796  00DF               	movwf	___flge@ff2+1
 16035  2797  0871               	movf	?___xxtofl,w
 16036  2798  00DE               	movwf	___flge@ff2
 16037  2799  31B6  2686  31A6   	fcall	___flge
 16038  279C  1C03               	btfss	3,0
 16039  279D  2FA6               	goto	l6773
 16040                           
 16041                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 16042  279E  0023               	movlb	3	; select bank3
 16043  279F  0847               	movf	BQ76920@protect2^(0+384),w
 16044  27A0  0021               	movlb	1	; select bank1
 16045  27A1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16046  27A2  39F0               	andlw	-16
 16047  27A3  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16048  27A4  0023               	movlb	3	; select bank3
 16049  27A5  00C7               	movwf	BQ76920@protect2^(0+384)
 16050  27A6                     l6773:	
 16051                           
 16052                           ;BQ76920.c: 112:     }
 16053  27A6  3001               	movlw	1
 16054  27A7  0021               	movlb	1	; select bank1
 16055  27A8  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 16056  27A9  3000               	movlw	0
 16057  27AA  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 16058  27AB  3000               	movlw	0
 16059  27AC  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16060  27AD  300F               	movlw	15
 16061  27AE  1903               	skipnz
 16062  27AF  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 16063  27B0  1C03               	skipc
 16064  27B1  2EFA               	goto	l6767
 16065                           
 16066                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 16067  27B2  308F               	movlw	-113
 16068  27B3  0023               	movlb	3	; select bank3
 16069  27B4  05C7               	andwf	BQ76920@protect2^(0+384),f
 16070                           
 16071                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 16072  27B5  0021               	movlb	1	; select bank1
 16073  27B6  01AA               	clrf	setOverCurrentDischargeProtection@i_989^(0+128)
 16074  27B7  01AB               	clrf	(setOverCurrentDischargeProtection@i_989+1)^(0+128)
 16075  27B8                     l6785:	
 16076                           
 16077                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 16078  27B8  082B               	movf	(setOverCurrentDischargeProtection@i_989+1)^(0+128),w
 16079  27B9  0085               	movwf	5
 16080  27BA  082A               	movf	setOverCurrentDischargeProtection@i_989^(0+128),w
 16081  27BB  0084               	movwf	4
 16082  27BC  3584               	lslf	4,f
 16083  27BD  0D85               	rlf	5,f
 16084  27BE  300C               	movlw	low (_OCD_delay_setting| (0+32768))
 16085  27BF  0784               	addwf	4,f
 16086  27C0  30BB               	movlw	high (_OCD_delay_setting| (0+32768))
 16087  27C1  3D85               	addwfc	5,f
 16088  27C2  3F00               	moviw [0]fsr0
 16089  27C3  0020               	movlb	0	; select bank0
 16090  27C4  00EC               	movwf	??_setOverCurrentDischargeProtection
 16091  27C5  3F01               	moviw [1]fsr0
 16092  27C6  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16093  27C7  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 16094  27C8  3A80               	xorlw	128
 16095  27C9  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 16096  27CA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16097  27CB  3A80               	xorlw	128
 16098  27CC  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 16099  27CD  1D03               	skipz
 16100  27CE  2FD1               	goto	u9385
 16101  27CF  086C               	movf	??_setOverCurrentDischargeProtection,w
 16102  27D0  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 16103  27D1                     u9385:	
 16104  27D1  1C03               	skipc
 16105  27D2  2FE0               	goto	l6789
 16106                           
 16107                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 16108  27D3  0021               	movlb	1	; select bank1
 16109  27D4  082A               	movf	setOverCurrentDischargeProtection@i_989^(0+128),w
 16110  27D5  0020               	movlb	0	; select bank0
 16111  27D6  00EC               	movwf	??_setOverCurrentDischargeProtection
 16112  27D7  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 16113  27D8  0023               	movlb	3	; select bank3
 16114  27D9  0847               	movf	BQ76920@protect2^(0+384),w
 16115  27DA  0020               	movlb	0	; select bank0
 16116  27DB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16117  27DC  398F               	andlw	-113
 16118  27DD  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16119  27DE  0023               	movlb	3	; select bank3
 16120  27DF  00C7               	movwf	BQ76920@protect2^(0+384)
 16121  27E0                     l6789:	
 16122                           
 16123                           ;BQ76920.c: 119:     }
 16124  27E0  3001               	movlw	1
 16125  27E1  0021               	movlb	1	; select bank1
 16126  27E2  07AA               	addwf	setOverCurrentDischargeProtection@i_989^(0+128),f
 16127  27E3  3000               	movlw	0
 16128  27E4  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_989+1)^(0+128),f
 16129  27E5  3000               	movlw	0
 16130  27E6  022B               	subwf	(setOverCurrentDischargeProtection@i_989+1)^(0+128),w
 16131  27E7  3007               	movlw	7
 16132  27E8  1903               	skipnz
 16133  27E9  022A               	subwf	setOverCurrentDischargeProtection@i_989^(0+128),w
 16134  27EA  1C03               	skipc
 16135  27EB  2FB8               	goto	l6785
 16136                           
 16137                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 16138  27EC  3018               	movlw	24
 16139  27ED  00F5               	movwf	I2C_writeRegister@slaveAddress
 16140  27EE  3000               	movlw	0
 16141  27EF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16142  27F0  3007               	movlw	7
 16143  27F1  00F7               	movwf	I2C_writeRegister@regAddress
 16144  27F2  3000               	movlw	0
 16145  27F3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16146  27F4  0023               	movlb	3	; select bank3
 16147  27F5  0847               	movf	BQ76920@protect2^(0+384),w
 16148  27F6  0020               	movlb	0	; select bank0
 16149  27F7  00EC               	movwf	??_setOverCurrentDischargeProtection
 16150  27F8  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 16151  27F9  086C               	movf	??_setOverCurrentDischargeProtection,w
 16152  27FA  00F9               	movwf	I2C_writeRegister@data
 16153  27FB  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16154  27FC  00FA               	movwf	I2C_writeRegister@data+1
 16155  27FD  31BF  2780         	fcall	_I2C_writeRegister
 16156  27FF  0008               	return
 16157  2800                     __end_of_setOverCurrentDischargeProtection:	
 16158                           
 16159                           	psect	text52
 16160  3686                     __ptext52:	
 16161 ;; *************** function ___flge *****************
 16162 ;; Defined at:
 16163 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;  ff1             4   58[BANK0 ] void 
 16166 ;;  ff2             4   62[BANK0 ] void 
 16167 ;; Auto vars:     Size  Location     Type
 16168 ;;		None
 16169 ;; Return value:  Size  Location     Type
 16170 ;;		None               void
 16171 ;; Registers used:
 16172 ;;		wreg, status,2, status,0
 16173 ;; Tracked objects:
 16174 ;;		On entry : 0/0
 16175 ;;		On exit  : 0/0
 16176 ;;		Unchanged: 0/0
 16177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16178 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16181 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16182 ;;Total ram usage:       12 bytes
 16183 ;; Hardware stack levels used:    1
 16184 ;; Hardware stack levels required when called:    1
 16185 ;; This function calls:
 16186 ;;		Nothing
 16187 ;; This function is called by:
 16188 ;;		_setShortCircuitProtection
 16189 ;;		_setOverCurrentDischargeProtection
 16190 ;;		_efgtoa
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194                           
 16195                           ;psect for function ___flge
 16196  3686                     ___flge:	
 16197                           
 16198                           ;incstack = 0
 16199                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16200  3686  3000               	movlw	0
 16201  3687  0020               	movlb	0	; select bank0
 16202  3688  055A               	andwf	___flge@ff1,w
 16203  3689  00E2               	movwf	??___flge
 16204  368A  3000               	movlw	0
 16205  368B  055B               	andwf	___flge@ff1+1,w
 16206  368C  00E3               	movwf	??___flge+1
 16207  368D  3080               	movlw	128
 16208  368E  055C               	andwf	___flge@ff1+2,w
 16209  368F  00E4               	movwf	??___flge+2
 16210  3690  307F               	movlw	127
 16211  3691  055D               	andwf	___flge@ff1+3,w
 16212  3692  00E5               	movwf	??___flge+3
 16213  3693  0865               	movf	??___flge+3,w
 16214  3694  0464               	iorwf	??___flge+2,w
 16215  3695  0463               	iorwf	??___flge+1,w
 16216  3696  0462               	iorwf	??___flge,w
 16217  3697  1D03               	skipz
 16218  3698  2EA1               	goto	l1137
 16219  3699  3000               	movlw	0
 16220  369A  00DD               	movwf	___flge@ff1+3
 16221  369B  3000               	movlw	0
 16222  369C  00DC               	movwf	___flge@ff1+2
 16223  369D  3000               	movlw	0
 16224  369E  00DB               	movwf	___flge@ff1+1
 16225  369F  3000               	movlw	0
 16226  36A0  00DA               	movwf	___flge@ff1
 16227  36A1                     l1137:	
 16228  36A1  3000               	movlw	0
 16229  36A2  055E               	andwf	___flge@ff2,w
 16230  36A3  00E2               	movwf	??___flge
 16231  36A4  3000               	movlw	0
 16232  36A5  055F               	andwf	___flge@ff2+1,w
 16233  36A6  00E3               	movwf	??___flge+1
 16234  36A7  3080               	movlw	128
 16235  36A8  0560               	andwf	___flge@ff2+2,w
 16236  36A9  00E4               	movwf	??___flge+2
 16237  36AA  307F               	movlw	127
 16238  36AB  0561               	andwf	___flge@ff2+3,w
 16239  36AC  00E5               	movwf	??___flge+3
 16240  36AD  0865               	movf	??___flge+3,w
 16241  36AE  0464               	iorwf	??___flge+2,w
 16242  36AF  0463               	iorwf	??___flge+1,w
 16243  36B0  0462               	iorwf	??___flge,w
 16244  36B1  1D03               	skipz
 16245  36B2  2EBB               	goto	l5013
 16246  36B3  3000               	movlw	0
 16247  36B4  00E1               	movwf	___flge@ff2+3
 16248  36B5  3000               	movlw	0
 16249  36B6  00E0               	movwf	___flge@ff2+2
 16250  36B7  3000               	movlw	0
 16251  36B8  00DF               	movwf	___flge@ff2+1
 16252  36B9  3000               	movlw	0
 16253  36BA  00DE               	movwf	___flge@ff2
 16254  36BB                     l5013:	
 16255  36BB  1FDD               	btfss	___flge@ff1+3,7
 16256  36BC  2ED5               	goto	l5017
 16257  36BD  3000               	movlw	0
 16258  36BE  00E2               	movwf	??___flge
 16259  36BF  3000               	movlw	0
 16260  36C0  00E3               	movwf	??___flge+1
 16261  36C1  3000               	movlw	0
 16262  36C2  00E4               	movwf	??___flge+2
 16263  36C3  3080               	movlw	128
 16264  36C4  00E5               	movwf	??___flge+3
 16265  36C5  085A               	movf	___flge@ff1,w
 16266  36C6  02E2               	subwf	??___flge,f
 16267  36C7  085B               	movf	___flge@ff1+1,w
 16268  36C8  3BE3               	subwfb	??___flge+1,f
 16269  36C9  085C               	movf	___flge@ff1+2,w
 16270  36CA  3BE4               	subwfb	??___flge+2,f
 16271  36CB  085D               	movf	___flge@ff1+3,w
 16272  36CC  3BE5               	subwfb	??___flge+3,f
 16273  36CD  0865               	movf	??___flge+3,w
 16274  36CE  00DD               	movwf	___flge@ff1+3
 16275  36CF  0864               	movf	??___flge+2,w
 16276  36D0  00DC               	movwf	___flge@ff1+2
 16277  36D1  0863               	movf	??___flge+1,w
 16278  36D2  00DB               	movwf	___flge@ff1+1
 16279  36D3  0862               	movf	??___flge,w
 16280  36D4  00DA               	movwf	___flge@ff1
 16281  36D5                     l5017:	
 16282  36D5  1FE1               	btfss	___flge@ff2+3,7
 16283  36D6  2EEF               	goto	l1140
 16284  36D7  3000               	movlw	0
 16285  36D8  00E2               	movwf	??___flge
 16286  36D9  3000               	movlw	0
 16287  36DA  00E3               	movwf	??___flge+1
 16288  36DB  3000               	movlw	0
 16289  36DC  00E4               	movwf	??___flge+2
 16290  36DD  3080               	movlw	128
 16291  36DE  00E5               	movwf	??___flge+3
 16292  36DF  085E               	movf	___flge@ff2,w
 16293  36E0  02E2               	subwf	??___flge,f
 16294  36E1  085F               	movf	___flge@ff2+1,w
 16295  36E2  3BE3               	subwfb	??___flge+1,f
 16296  36E3  0860               	movf	___flge@ff2+2,w
 16297  36E4  3BE4               	subwfb	??___flge+2,f
 16298  36E5  0861               	movf	___flge@ff2+3,w
 16299  36E6  3BE5               	subwfb	??___flge+3,f
 16300  36E7  0865               	movf	??___flge+3,w
 16301  36E8  00E1               	movwf	___flge@ff2+3
 16302  36E9  0864               	movf	??___flge+2,w
 16303  36EA  00E0               	movwf	___flge@ff2+2
 16304  36EB  0863               	movf	??___flge+1,w
 16305  36EC  00DF               	movwf	___flge@ff2+1
 16306  36ED  0862               	movf	??___flge,w
 16307  36EE  00DE               	movwf	___flge@ff2
 16308  36EF                     l1140:	
 16309  36EF  3080               	movlw	128
 16310  36F0  06DD               	xorwf	___flge@ff1+3,f
 16311  36F1  3080               	movlw	128
 16312  36F2  06E1               	xorwf	___flge@ff2+3,f
 16313  36F3  0861               	movf	___flge@ff2+3,w
 16314  36F4  025D               	subwf	___flge@ff1+3,w
 16315  36F5  1D03               	skipz
 16316  36F6  0008               	return
 16317  36F7  0860               	movf	___flge@ff2+2,w
 16318  36F8  025C               	subwf	___flge@ff1+2,w
 16319  36F9  1D03               	skipz
 16320  36FA  0008               	return
 16321  36FB  085F               	movf	___flge@ff2+1,w
 16322  36FC  025B               	subwf	___flge@ff1+1,w
 16323  36FD  1D03               	skipz
 16324  36FE  0008               	return
 16325  36FF  085E               	movf	___flge@ff2,w
 16326  3700  025A               	subwf	___flge@ff1,w
 16327  3701  0008               	return
 16328  3702                     __end_of___flge:	
 16329                           
 16330                           	psect	text53
 16331  2F25                     __ptext53:	
 16332 ;; *************** function _setCellUndervoltageProtection *****************
 16333 ;; Defined at:
 16334 ;;		line 127 in file "BQ76920.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;  voltage_mV      2   18[BANK0 ] int 
 16337 ;;  delay_s         2   20[BANK0 ] int 
 16338 ;; Auto vars:     Size  Location     Type
 16339 ;;  i               2   37[BANK0 ] int 
 16340 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 16341 ;; Return value:  Size  Location     Type
 16342 ;;                  1    wreg      void 
 16343 ;; Registers used:
 16344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16345 ;; Tracked objects:
 16346 ;;		On entry : 0/0
 16347 ;;		On exit  : 0/0
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16350 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16351 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16352 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16353 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16354 ;;Total ram usage:       21 bytes
 16355 ;; Hardware stack levels used:    1
 16356 ;; Hardware stack levels required when called:    3
 16357 ;; This function calls:
 16358 ;;		_I2C_writeRegister
 16359 ;;		___aldiv
 16360 ;;		___lmul
 16361 ;;		_readRegister
 16362 ;; This function is called by:
 16363 ;;		_init_AFE
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           
 16368                           ;psect for function _setCellUndervoltageProtection
 16369  2F25                     _setCellUndervoltageProtection:	
 16370                           
 16371                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 16372                           
 16373                           ;incstack = 0
 16374                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16375  2F25  0020               	movlb	0	; select bank0
 16376  2F26  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16377  2F27  0023               	movlb	3	; select bank3
 16378  2F28  00B9               	movwf	(_minCellVoltage+1)^(0+384)
 16379  2F29  0020               	movlb	0	; select bank0
 16380  2F2A  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16381  2F2B  0023               	movlb	3	; select bank3
 16382  2F2C  00B8               	movwf	_minCellVoltage^(0+384)
 16383                           
 16384                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 16385  2F2D  3018               	movlw	24
 16386  2F2E  00F5               	movwf	readRegister@slaveAddress
 16387  2F2F  3000               	movlw	0
 16388  2F30  00F6               	movwf	readRegister@slaveAddress+1
 16389  2F31  3008               	movlw	8
 16390  2F32  00F7               	movwf	readRegister@regAddress
 16391  2F33  3000               	movlw	0
 16392  2F34  00F8               	movwf	readRegister@regAddress+1
 16393  2F35  31B1  2178  31AF   	fcall	_readRegister
 16394  2F38  0875               	movf	?_readRegister,w
 16395  2F39  0020               	movlb	0	; select bank0
 16396  2F3A  00B6               	movwf	??_setCellUndervoltageProtection
 16397  2F3B  0836               	movf	??_setCellUndervoltageProtection,w
 16398  2F3C  0023               	movlb	3	; select bank3
 16399  2F3D  00C6               	movwf	BQ76920@protect3^(0+384)
 16400                           
 16401                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16402  2F3E  084F               	movf	_adcGain^(0+384),w
 16403  2F3F  0020               	movlb	0	; select bank0
 16404  2F40  00A4               	movwf	___aldiv@divisor
 16405  2F41  0023               	movlb	3	; select bank3
 16406  2F42  0850               	movf	(_adcGain+1)^(0+384),w
 16407  2F43  0020               	movlb	0	; select bank0
 16408  2F44  00A5               	movwf	___aldiv@divisor+1
 16409  2F45  0D89               	rlf	9,f
 16410  2F46  3B89               	subwfb	9,f
 16411  2F47  0989               	comf	9,f
 16412  2F48  00A6               	movwf	___aldiv@divisor+2
 16413  2F49  00A7               	movwf	___aldiv@divisor+3
 16414  2F4A  0023               	movlb	3	; select bank3
 16415  2F4B  0844               	movf	_adcOffset^(0+384),w
 16416  2F4C  0020               	movlb	0	; select bank0
 16417  2F4D  00B6               	movwf	??_setCellUndervoltageProtection
 16418  2F4E  0023               	movlb	3	; select bank3
 16419  2F4F  0845               	movf	(_adcOffset+1)^(0+384),w
 16420  2F50  0020               	movlb	0	; select bank0
 16421  2F51  00B7               	movwf	??_setCellUndervoltageProtection+1
 16422  2F52  3000               	movlw	0
 16423  2F53  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 16424  2F54  30FF               	movlw	255
 16425  2F55  00B8               	movwf	??_setCellUndervoltageProtection+2
 16426  2F56  00B9               	movwf	??_setCellUndervoltageProtection+3
 16427  2F57  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16428  2F58  00BA               	movwf	??_setCellUndervoltageProtection+4
 16429  2F59  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16430  2F5A  00BB               	movwf	??_setCellUndervoltageProtection+5
 16431  2F5B  3000               	movlw	0
 16432  2F5C  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 16433  2F5D  30FF               	movlw	255
 16434  2F5E  00BC               	movwf	??_setCellUndervoltageProtection+6
 16435  2F5F  00BD               	movwf	??_setCellUndervoltageProtection+7
 16436  2F60  0836               	movf	??_setCellUndervoltageProtection,w
 16437  2F61  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 16438  2F62  0837               	movf	??_setCellUndervoltageProtection+1,w
 16439  2F63  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 16440  2F64  0838               	movf	??_setCellUndervoltageProtection+2,w
 16441  2F65  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 16442  2F66  0839               	movf	??_setCellUndervoltageProtection+3,w
 16443  2F67  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 16444  2F68  083D               	movf	??_setCellUndervoltageProtection+7,w
 16445  2F69  00F4               	movwf	___lmul@multiplier+3
 16446  2F6A  083C               	movf	??_setCellUndervoltageProtection+6,w
 16447  2F6B  00F3               	movwf	___lmul@multiplier+2
 16448  2F6C  083B               	movf	??_setCellUndervoltageProtection+5,w
 16449  2F6D  00F2               	movwf	___lmul@multiplier+1
 16450  2F6E  083A               	movf	??_setCellUndervoltageProtection+4,w
 16451  2F6F  00F1               	movwf	___lmul@multiplier
 16452  2F70  3000               	movlw	0
 16453  2F71  00F8               	movwf	___lmul@multiplicand+3
 16454  2F72  3000               	movlw	0
 16455  2F73  00F7               	movwf	___lmul@multiplicand+2
 16456  2F74  3003               	movlw	3
 16457  2F75  00F6               	movwf	___lmul@multiplicand+1
 16458  2F76  30E8               	movlw	232
 16459  2F77  00F5               	movwf	___lmul@multiplicand
 16460  2F78  31B0  20DF  31AF   	fcall	___lmul
 16461  2F7B  0874               	movf	?___lmul+3,w
 16462  2F7C  0020               	movlb	0	; select bank0
 16463  2F7D  00AB               	movwf	___aldiv@dividend+3
 16464  2F7E  0873               	movf	?___lmul+2,w
 16465  2F7F  00AA               	movwf	___aldiv@dividend+2
 16466  2F80  0872               	movf	?___lmul+1,w
 16467  2F81  00A9               	movwf	___aldiv@dividend+1
 16468  2F82  0871               	movf	?___lmul,w
 16469  2F83  00A8               	movwf	___aldiv@dividend
 16470  2F84  31B7  277E  31AF   	fcall	___aldiv
 16471  2F87  0020               	movlb	0	; select bank0
 16472  2F88  0824               	movf	?___aldiv,w
 16473  2F89  00BE               	movwf	??_setCellUndervoltageProtection+8
 16474  2F8A  0825               	movf	?___aldiv+1,w
 16475  2F8B  00BF               	movwf	??_setCellUndervoltageProtection+9
 16476  2F8C  0826               	movf	?___aldiv+2,w
 16477  2F8D  00C0               	movwf	??_setCellUndervoltageProtection+10
 16478  2F8E  0827               	movf	?___aldiv+3,w
 16479  2F8F  00C1               	movwf	??_setCellUndervoltageProtection+11
 16480  2F90  3004               	movlw	4
 16481  2F91  00C2               	movwf	??_setCellUndervoltageProtection+12
 16482  2F92                     u11835:	
 16483  2F92  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 16484  2F93  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 16485  2F94  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 16486  2F95  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 16487  2F96  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 16488  2F97  2F92               	goto	u11835
 16489  2F98  083E               	movf	??_setCellUndervoltageProtection+8,w
 16490  2F99  00C3               	movwf	??_setCellUndervoltageProtection+13
 16491  2F9A  0843               	movf	??_setCellUndervoltageProtection+13,w
 16492  2F9B  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 16493                           
 16494                           ;BQ76920.c: 133:     uv_trip += 1;
 16495  2F9C  3001               	movlw	1
 16496  2F9D  00B6               	movwf	??_setCellUndervoltageProtection
 16497  2F9E  0836               	movf	??_setCellUndervoltageProtection,w
 16498  2F9F  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 16499                           
 16500                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 16501  2FA0  3018               	movlw	24
 16502  2FA1  00F5               	movwf	I2C_writeRegister@slaveAddress
 16503  2FA2  3000               	movlw	0
 16504  2FA3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16505  2FA4  300A               	movlw	10
 16506  2FA5  00F7               	movwf	I2C_writeRegister@regAddress
 16507  2FA6  3000               	movlw	0
 16508  2FA7  00F8               	movwf	I2C_writeRegister@regAddress+1
 16509  2FA8  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 16510  2FA9  00B6               	movwf	??_setCellUndervoltageProtection
 16511  2FAA  01B7               	clrf	??_setCellUndervoltageProtection+1
 16512  2FAB  0836               	movf	??_setCellUndervoltageProtection,w
 16513  2FAC  00F9               	movwf	I2C_writeRegister@data
 16514  2FAD  0837               	movf	??_setCellUndervoltageProtection+1,w
 16515  2FAE  00FA               	movwf	I2C_writeRegister@data+1
 16516  2FAF  31BF  2780  31AF   	fcall	_I2C_writeRegister
 16517                           
 16518                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 16519  2FB2  303F               	movlw	-193
 16520  2FB3  0023               	movlb	3	; select bank3
 16521  2FB4  05C6               	andwf	BQ76920@protect3^(0+384),f
 16522                           
 16523                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 16524  2FB5  0020               	movlb	0	; select bank0
 16525  2FB6  01C5               	clrf	setCellUndervoltageProtection@i
 16526  2FB7  01C6               	clrf	setCellUndervoltageProtection@i+1
 16527  2FB8                     l8511:	
 16528                           
 16529                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 16530  2FB8  0846               	movf	setCellUndervoltageProtection@i+1,w
 16531  2FB9  0085               	movwf	5
 16532  2FBA  0845               	movf	setCellUndervoltageProtection@i,w
 16533  2FBB  0084               	movwf	4
 16534  2FBC  3584               	lslf	4,f
 16535  2FBD  0D85               	rlf	5,f
 16536  2FBE  3034               	movlw	low (_UV_delay_setting| (0+32768))
 16537  2FBF  0784               	addwf	4,f
 16538  2FC0  30BB               	movlw	high (_UV_delay_setting| (0+32768))
 16539  2FC1  3D85               	addwfc	5,f
 16540  2FC2  3F00               	moviw [0]fsr0
 16541  2FC3  00B6               	movwf	??_setCellUndervoltageProtection
 16542  2FC4  3F01               	moviw [1]fsr0
 16543  2FC5  00B7               	movwf	??_setCellUndervoltageProtection+1
 16544  2FC6  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 16545  2FC7  3A80               	xorlw	128
 16546  2FC8  00B8               	movwf	??_setCellUndervoltageProtection+2
 16547  2FC9  0837               	movf	??_setCellUndervoltageProtection+1,w
 16548  2FCA  3A80               	xorlw	128
 16549  2FCB  0238               	subwf	??_setCellUndervoltageProtection+2,w
 16550  2FCC  1D03               	skipz
 16551  2FCD  2FD0               	goto	u11845
 16552  2FCE  0836               	movf	??_setCellUndervoltageProtection,w
 16553  2FCF  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 16554  2FD0                     u11845:	
 16555  2FD0  1C03               	skipc
 16556  2FD1  2FE0               	goto	l8515
 16557                           
 16558                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 16559  2FD2  0020               	movlb	0	; select bank0
 16560  2FD3  0845               	movf	setCellUndervoltageProtection@i,w
 16561  2FD4  00B6               	movwf	??_setCellUndervoltageProtection
 16562  2FD5  0EB6               	swapf	??_setCellUndervoltageProtection,f
 16563  2FD6  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16564  2FD7  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16565  2FD8  0023               	movlb	3	; select bank3
 16566  2FD9  0846               	movf	BQ76920@protect3^(0+384),w
 16567  2FDA  0020               	movlb	0	; select bank0
 16568  2FDB  0636               	xorwf	??_setCellUndervoltageProtection,w
 16569  2FDC  393F               	andlw	-193
 16570  2FDD  0636               	xorwf	??_setCellUndervoltageProtection,w
 16571  2FDE  0023               	movlb	3	; select bank3
 16572  2FDF  00C6               	movwf	BQ76920@protect3^(0+384)
 16573  2FE0                     l8515:	
 16574                           
 16575                           ;BQ76920.c: 141:     }
 16576  2FE0  3001               	movlw	1
 16577  2FE1  0020               	movlb	0	; select bank0
 16578  2FE2  07C5               	addwf	setCellUndervoltageProtection@i,f
 16579  2FE3  3000               	movlw	0
 16580  2FE4  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 16581  2FE5  3000               	movlw	0
 16582  2FE6  0246               	subwf	setCellUndervoltageProtection@i+1,w
 16583  2FE7  3003               	movlw	3
 16584  2FE8  1903               	skipnz
 16585  2FE9  0245               	subwf	setCellUndervoltageProtection@i,w
 16586  2FEA  1C03               	skipc
 16587  2FEB  2FB8               	goto	l8511
 16588                           
 16589                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 16590  2FEC  3018               	movlw	24
 16591  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 16592  2FEE  3000               	movlw	0
 16593  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16594  2FF0  3008               	movlw	8
 16595  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 16596  2FF2  3000               	movlw	0
 16597  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 16598  2FF4  0023               	movlb	3	; select bank3
 16599  2FF5  0846               	movf	BQ76920@protect3^(0+384),w
 16600  2FF6  0020               	movlb	0	; select bank0
 16601  2FF7  00B6               	movwf	??_setCellUndervoltageProtection
 16602  2FF8  01B7               	clrf	??_setCellUndervoltageProtection+1
 16603  2FF9  0836               	movf	??_setCellUndervoltageProtection,w
 16604  2FFA  00F9               	movwf	I2C_writeRegister@data
 16605  2FFB  0837               	movf	??_setCellUndervoltageProtection+1,w
 16606  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 16607  2FFD  31BF  2780         	fcall	_I2C_writeRegister
 16608  2FFF  0008               	return
 16609  3000                     __end_of_setCellUndervoltageProtection:	
 16610                           
 16611                           	psect	text54
 16612  2CA4                     __ptext54:	
 16613 ;; *************** function _setCellOvervoltageProtection *****************
 16614 ;; Defined at:
 16615 ;;		line 148 in file "BQ76920.c"
 16616 ;; Parameters:    Size  Location     Type
 16617 ;;  voltage_mV      2   18[BANK0 ] int 
 16618 ;;  delay_s         2   20[BANK0 ] int 
 16619 ;; Auto vars:     Size  Location     Type
 16620 ;;  i               2   37[BANK0 ] int 
 16621 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      void 
 16624 ;; Registers used:
 16625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16633 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16634 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16635 ;;Total ram usage:       21 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:    3
 16638 ;; This function calls:
 16639 ;;		_I2C_writeRegister
 16640 ;;		___aldiv
 16641 ;;		___lmul
 16642 ;;		_readRegister
 16643 ;; This function is called by:
 16644 ;;		_init_AFE
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           
 16648                           
 16649                           ;psect for function _setCellOvervoltageProtection
 16650  2CA4                     _setCellOvervoltageProtection:	
 16651                           
 16652                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 16653                           
 16654                           ;incstack = 0
 16655                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 16656  2CA4  0020               	movlb	0	; select bank0
 16657  2CA5  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16658  2CA6  0023               	movlb	3	; select bank3
 16659  2CA7  00BB               	movwf	(_maxCellVoltage+1)^(0+384)
 16660  2CA8  0020               	movlb	0	; select bank0
 16661  2CA9  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16662  2CAA  0023               	movlb	3	; select bank3
 16663  2CAB  00BA               	movwf	_maxCellVoltage^(0+384)
 16664                           
 16665                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 16666  2CAC  3018               	movlw	24
 16667  2CAD  00F5               	movwf	readRegister@slaveAddress
 16668  2CAE  3000               	movlw	0
 16669  2CAF  00F6               	movwf	readRegister@slaveAddress+1
 16670  2CB0  3008               	movlw	8
 16671  2CB1  00F7               	movwf	readRegister@regAddress
 16672  2CB2  3000               	movlw	0
 16673  2CB3  00F8               	movwf	readRegister@regAddress+1
 16674  2CB4  31B1  2178  31AC   	fcall	_readRegister
 16675  2CB7  0875               	movf	?_readRegister,w
 16676  2CB8  0020               	movlb	0	; select bank0
 16677  2CB9  00B6               	movwf	??_setCellOvervoltageProtection
 16678  2CBA  0836               	movf	??_setCellOvervoltageProtection,w
 16679  2CBB  0023               	movlb	3	; select bank3
 16680  2CBC  00C6               	movwf	BQ76920@protect3^(0+384)
 16681                           
 16682                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16683  2CBD  084F               	movf	_adcGain^(0+384),w
 16684  2CBE  0020               	movlb	0	; select bank0
 16685  2CBF  00A4               	movwf	___aldiv@divisor
 16686  2CC0  0023               	movlb	3	; select bank3
 16687  2CC1  0850               	movf	(_adcGain+1)^(0+384),w
 16688  2CC2  0020               	movlb	0	; select bank0
 16689  2CC3  00A5               	movwf	___aldiv@divisor+1
 16690  2CC4  0D89               	rlf	9,f
 16691  2CC5  3B89               	subwfb	9,f
 16692  2CC6  0989               	comf	9,f
 16693  2CC7  00A6               	movwf	___aldiv@divisor+2
 16694  2CC8  00A7               	movwf	___aldiv@divisor+3
 16695  2CC9  0023               	movlb	3	; select bank3
 16696  2CCA  0844               	movf	_adcOffset^(0+384),w
 16697  2CCB  0020               	movlb	0	; select bank0
 16698  2CCC  00B6               	movwf	??_setCellOvervoltageProtection
 16699  2CCD  0023               	movlb	3	; select bank3
 16700  2CCE  0845               	movf	(_adcOffset+1)^(0+384),w
 16701  2CCF  0020               	movlb	0	; select bank0
 16702  2CD0  00B7               	movwf	??_setCellOvervoltageProtection+1
 16703  2CD1  3000               	movlw	0
 16704  2CD2  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 16705  2CD3  30FF               	movlw	255
 16706  2CD4  00B8               	movwf	??_setCellOvervoltageProtection+2
 16707  2CD5  00B9               	movwf	??_setCellOvervoltageProtection+3
 16708  2CD6  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16709  2CD7  00BA               	movwf	??_setCellOvervoltageProtection+4
 16710  2CD8  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16711  2CD9  00BB               	movwf	??_setCellOvervoltageProtection+5
 16712  2CDA  3000               	movlw	0
 16713  2CDB  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 16714  2CDC  30FF               	movlw	255
 16715  2CDD  00BC               	movwf	??_setCellOvervoltageProtection+6
 16716  2CDE  00BD               	movwf	??_setCellOvervoltageProtection+7
 16717  2CDF  0836               	movf	??_setCellOvervoltageProtection,w
 16718  2CE0  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 16719  2CE1  0837               	movf	??_setCellOvervoltageProtection+1,w
 16720  2CE2  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 16721  2CE3  0838               	movf	??_setCellOvervoltageProtection+2,w
 16722  2CE4  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 16723  2CE5  0839               	movf	??_setCellOvervoltageProtection+3,w
 16724  2CE6  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 16725  2CE7  083D               	movf	??_setCellOvervoltageProtection+7,w
 16726  2CE8  00F4               	movwf	___lmul@multiplier+3
 16727  2CE9  083C               	movf	??_setCellOvervoltageProtection+6,w
 16728  2CEA  00F3               	movwf	___lmul@multiplier+2
 16729  2CEB  083B               	movf	??_setCellOvervoltageProtection+5,w
 16730  2CEC  00F2               	movwf	___lmul@multiplier+1
 16731  2CED  083A               	movf	??_setCellOvervoltageProtection+4,w
 16732  2CEE  00F1               	movwf	___lmul@multiplier
 16733  2CEF  3000               	movlw	0
 16734  2CF0  00F8               	movwf	___lmul@multiplicand+3
 16735  2CF1  3000               	movlw	0
 16736  2CF2  00F7               	movwf	___lmul@multiplicand+2
 16737  2CF3  3003               	movlw	3
 16738  2CF4  00F6               	movwf	___lmul@multiplicand+1
 16739  2CF5  30E8               	movlw	232
 16740  2CF6  00F5               	movwf	___lmul@multiplicand
 16741  2CF7  31B0  20DF  31AC   	fcall	___lmul
 16742  2CFA  0874               	movf	?___lmul+3,w
 16743  2CFB  0020               	movlb	0	; select bank0
 16744  2CFC  00AB               	movwf	___aldiv@dividend+3
 16745  2CFD  0873               	movf	?___lmul+2,w
 16746  2CFE  00AA               	movwf	___aldiv@dividend+2
 16747  2CFF  0872               	movf	?___lmul+1,w
 16748  2D00  00A9               	movwf	___aldiv@dividend+1
 16749  2D01  0871               	movf	?___lmul,w
 16750  2D02  00A8               	movwf	___aldiv@dividend
 16751  2D03  31B7  277E  31AC   	fcall	___aldiv
 16752  2D06  0020               	movlb	0	; select bank0
 16753  2D07  0824               	movf	?___aldiv,w
 16754  2D08  00BE               	movwf	??_setCellOvervoltageProtection+8
 16755  2D09  0825               	movf	?___aldiv+1,w
 16756  2D0A  00BF               	movwf	??_setCellOvervoltageProtection+9
 16757  2D0B  0826               	movf	?___aldiv+2,w
 16758  2D0C  00C0               	movwf	??_setCellOvervoltageProtection+10
 16759  2D0D  0827               	movf	?___aldiv+3,w
 16760  2D0E  00C1               	movwf	??_setCellOvervoltageProtection+11
 16761  2D0F  3004               	movlw	4
 16762  2D10  00C2               	movwf	??_setCellOvervoltageProtection+12
 16763  2D11                     u11865:	
 16764  2D11  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 16765  2D12  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 16766  2D13  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 16767  2D14  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 16768  2D15  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 16769  2D16  2D11               	goto	u11865
 16770  2D17  083E               	movf	??_setCellOvervoltageProtection+8,w
 16771  2D18  00C3               	movwf	??_setCellOvervoltageProtection+13
 16772  2D19  0843               	movf	??_setCellOvervoltageProtection+13,w
 16773  2D1A  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 16774                           
 16775                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 16776  2D1B  3018               	movlw	24
 16777  2D1C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16778  2D1D  3000               	movlw	0
 16779  2D1E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16780  2D1F  3009               	movlw	9
 16781  2D20  00F7               	movwf	I2C_writeRegister@regAddress
 16782  2D21  3000               	movlw	0
 16783  2D22  00F8               	movwf	I2C_writeRegister@regAddress+1
 16784  2D23  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 16785  2D24  00B6               	movwf	??_setCellOvervoltageProtection
 16786  2D25  01B7               	clrf	??_setCellOvervoltageProtection+1
 16787  2D26  0836               	movf	??_setCellOvervoltageProtection,w
 16788  2D27  00F9               	movwf	I2C_writeRegister@data
 16789  2D28  0837               	movf	??_setCellOvervoltageProtection+1,w
 16790  2D29  00FA               	movwf	I2C_writeRegister@data+1
 16791  2D2A  31BF  2780  31AC   	fcall	_I2C_writeRegister
 16792                           
 16793                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 16794  2D2D  0020               	movlb	0	; select bank0
 16795  2D2E  01C5               	clrf	setCellOvervoltageProtection@i
 16796  2D2F  01C6               	clrf	setCellOvervoltageProtection@i+1
 16797  2D30                     l8537:	
 16798                           
 16799                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 16800  2D30  0846               	movf	setCellOvervoltageProtection@i+1,w
 16801  2D31  0085               	movwf	5
 16802  2D32  0845               	movf	setCellOvervoltageProtection@i,w
 16803  2D33  0084               	movwf	4
 16804  2D34  3584               	lslf	4,f
 16805  2D35  0D85               	rlf	5,f
 16806  2D36  302C               	movlw	low (_OV_delay_setting| (0+32768))
 16807  2D37  0784               	addwf	4,f
 16808  2D38  30BB               	movlw	high (_OV_delay_setting| (0+32768))
 16809  2D39  3D85               	addwfc	5,f
 16810  2D3A  3F00               	moviw [0]fsr0
 16811  2D3B  00B6               	movwf	??_setCellOvervoltageProtection
 16812  2D3C  3F01               	moviw [1]fsr0
 16813  2D3D  00B7               	movwf	??_setCellOvervoltageProtection+1
 16814  2D3E  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 16815  2D3F  3A80               	xorlw	128
 16816  2D40  00B8               	movwf	??_setCellOvervoltageProtection+2
 16817  2D41  0837               	movf	??_setCellOvervoltageProtection+1,w
 16818  2D42  3A80               	xorlw	128
 16819  2D43  0238               	subwf	??_setCellOvervoltageProtection+2,w
 16820  2D44  1D03               	skipz
 16821  2D45  2D48               	goto	u11875
 16822  2D46  0836               	movf	??_setCellOvervoltageProtection,w
 16823  2D47  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 16824  2D48                     u11875:	
 16825  2D48  1C03               	skipc
 16826  2D49  2D58               	goto	l8541
 16827                           
 16828                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 16829  2D4A  0020               	movlb	0	; select bank0
 16830  2D4B  0845               	movf	setCellOvervoltageProtection@i,w
 16831  2D4C  00B6               	movwf	??_setCellOvervoltageProtection
 16832  2D4D  0EB6               	swapf	??_setCellOvervoltageProtection,f
 16833  2D4E  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16834  2D4F  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16835  2D50  0023               	movlb	3	; select bank3
 16836  2D51  0846               	movf	BQ76920@protect3^(0+384),w
 16837  2D52  0020               	movlb	0	; select bank0
 16838  2D53  0636               	xorwf	??_setCellOvervoltageProtection,w
 16839  2D54  393F               	andlw	-193
 16840  2D55  0636               	xorwf	??_setCellOvervoltageProtection,w
 16841  2D56  0023               	movlb	3	; select bank3
 16842  2D57  00C6               	movwf	BQ76920@protect3^(0+384)
 16843  2D58                     l8541:	
 16844                           
 16845                           ;BQ76920.c: 159:     }
 16846  2D58  3001               	movlw	1
 16847  2D59  0020               	movlb	0	; select bank0
 16848  2D5A  07C5               	addwf	setCellOvervoltageProtection@i,f
 16849  2D5B  3000               	movlw	0
 16850  2D5C  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 16851  2D5D  3000               	movlw	0
 16852  2D5E  0246               	subwf	setCellOvervoltageProtection@i+1,w
 16853  2D5F  3003               	movlw	3
 16854  2D60  1903               	skipnz
 16855  2D61  0245               	subwf	setCellOvervoltageProtection@i,w
 16856  2D62  1C03               	skipc
 16857  2D63  2D30               	goto	l8537
 16858                           
 16859                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 16860  2D64  3018               	movlw	24
 16861  2D65  00F5               	movwf	I2C_writeRegister@slaveAddress
 16862  2D66  3000               	movlw	0
 16863  2D67  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16864  2D68  3008               	movlw	8
 16865  2D69  00F7               	movwf	I2C_writeRegister@regAddress
 16866  2D6A  3000               	movlw	0
 16867  2D6B  00F8               	movwf	I2C_writeRegister@regAddress+1
 16868  2D6C  0023               	movlb	3	; select bank3
 16869  2D6D  0846               	movf	BQ76920@protect3^(0+384),w
 16870  2D6E  0020               	movlb	0	; select bank0
 16871  2D6F  00B6               	movwf	??_setCellOvervoltageProtection
 16872  2D70  01B7               	clrf	??_setCellOvervoltageProtection+1
 16873  2D71  0836               	movf	??_setCellOvervoltageProtection,w
 16874  2D72  00F9               	movwf	I2C_writeRegister@data
 16875  2D73  0837               	movf	??_setCellOvervoltageProtection+1,w
 16876  2D74  00FA               	movwf	I2C_writeRegister@data+1
 16877  2D75  31BF  2780         	fcall	_I2C_writeRegister
 16878  2D77  0008               	return
 16879  2D78                     __end_of_setCellOvervoltageProtection:	
 16880                           
 16881                           	psect	text55
 16882  1810                     __ptext55:	
 16883 ;; *************** function _beginAFEcommunication *****************
 16884 ;; Defined at:
 16885 ;;		line 23 in file "BQ76920.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;		None
 16888 ;; Auto vars:     Size  Location     Type
 16889 ;;  i               2   13[BANK0 ] int 
 16890 ;;  commSuccess     2   11[BANK0 ] int 
 16891 ;; Return value:  Size  Location     Type
 16892 ;;                  2    0[BANK0 ] int 
 16893 ;; Registers used:
 16894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16901 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16902 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16903 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16904 ;;Total ram usage:       15 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:    3
 16907 ;; This function calls:
 16908 ;;		_I2C_writeRegister
 16909 ;;		_readRegister
 16910 ;; This function is called by:
 16911 ;;		_statemachine
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           
 16916                           ;psect for function _beginAFEcommunication
 16917  1810                     _beginAFEcommunication:	
 16918                           
 16919                           ;BQ76920.c: 25:     int commSuccess = 0;
 16920                           
 16921                           ;incstack = 0
 16922                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16923  1810  0020               	movlb	0	; select bank0
 16924  1811  01AB               	clrf	beginAFEcommunication@commSuccess
 16925  1812  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16926                           
 16927                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 16928  1813  01AD               	clrf	beginAFEcommunication@i
 16929  1814  01AE               	clrf	beginAFEcommunication@i+1
 16930  1815                     l8595:	
 16931                           
 16932                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 16933  1815  0020               	movlb	0	; select bank0
 16934  1816  352D               	lslf	beginAFEcommunication@i,w
 16935  1817  3E20               	addlw	(low (_cellVoltages| (0+512)))& (0+255)
 16936  1818  0086               	movwf	6
 16937  1819  3002               	movlw	2	; select bank4/5
 16938  181A  0087               	movwf	7
 16939  181B  3000               	movlw	0
 16940  181C  3FC0               	movwi [0]fsr1
 16941  181D  3FC1               	movwi [1]fsr1
 16942                           
 16943                           ;BQ76920.c: 30:     }
 16944  181E  3001               	movlw	1
 16945  181F  07AD               	addwf	beginAFEcommunication@i,f
 16946  1820  3000               	movlw	0
 16947  1821  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16948  1822  082E               	movf	beginAFEcommunication@i+1,w
 16949  1823  3A80               	xorlw	128
 16950  1824  00A2               	movwf	??_beginAFEcommunication
 16951  1825  3080               	movlw	128
 16952  1826  0222               	subwf	??_beginAFEcommunication,w
 16953  1827  1D03               	skipz
 16954  1828  282B               	goto	u11915
 16955  1829  3004               	movlw	4
 16956  182A  022D               	subwf	beginAFEcommunication@i,w
 16957  182B                     u11915:	
 16958  182B  1C03               	skipc
 16959  182C  2815               	goto	l8595
 16960                           
 16961                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16962  182D  3018               	movlw	24
 16963  182E  00F5               	movwf	I2C_writeRegister@slaveAddress
 16964  182F  3000               	movlw	0
 16965  1830  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16966  1831  300B               	movlw	11
 16967  1832  00F7               	movwf	I2C_writeRegister@regAddress
 16968  1833  3000               	movlw	0
 16969  1834  00F8               	movwf	I2C_writeRegister@regAddress+1
 16970  1835  3019               	movlw	25
 16971  1836  00F9               	movwf	I2C_writeRegister@data
 16972  1837  3000               	movlw	0
 16973  1838  00FA               	movwf	I2C_writeRegister@data+1
 16974  1839  31BF  2780  3198   	fcall	_I2C_writeRegister
 16975                           
 16976                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 16977  183C  3018               	movlw	24
 16978  183D  00F5               	movwf	readRegister@slaveAddress
 16979  183E  3000               	movlw	0
 16980  183F  00F6               	movwf	readRegister@slaveAddress+1
 16981  1840  300B               	movlw	11
 16982  1841  00F7               	movwf	readRegister@regAddress
 16983  1842  3000               	movlw	0
 16984  1843  00F8               	movwf	readRegister@regAddress+1
 16985  1844  31B1  2178  3198   	fcall	_readRegister
 16986  1847  3019               	movlw	25
 16987  1848  0675               	xorwf	?_readRegister,w
 16988  1849  0476               	iorwf	?_readRegister+1,w
 16989  184A  1D03               	btfss	3,2
 16990  184B  28BE               	goto	l446
 16991                           
 16992                           ;BQ76920.c: 36:         commSuccess = 1;
 16993  184C  3001               	movlw	1
 16994  184D  0020               	movlb	0	; select bank0
 16995  184E  00AB               	movwf	beginAFEcommunication@commSuccess
 16996  184F  3000               	movlw	0
 16997  1850  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16998                           
 16999                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 17000  1851  3018               	movlw	24
 17001  1852  00F5               	movwf	I2C_writeRegister@slaveAddress
 17002  1853  3000               	movlw	0
 17003  1854  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17004  1855  3004               	movlw	4
 17005  1856  00F7               	movwf	I2C_writeRegister@regAddress
 17006  1857  3000               	movlw	0
 17007  1858  00F8               	movwf	I2C_writeRegister@regAddress+1
 17008  1859  3018               	movlw	24
 17009  185A  00F9               	movwf	I2C_writeRegister@data
 17010  185B  3000               	movlw	0
 17011  185C  00FA               	movwf	I2C_writeRegister@data+1
 17012  185D  31BF  2780  3198   	fcall	_I2C_writeRegister
 17013                           
 17014                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 17015  1860  3018               	movlw	24
 17016  1861  00F5               	movwf	I2C_writeRegister@slaveAddress
 17017  1862  3000               	movlw	0
 17018  1863  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17019  1864  3005               	movlw	5
 17020  1865  00F7               	movwf	I2C_writeRegister@regAddress
 17021  1866  3000               	movlw	0
 17022  1867  00F8               	movwf	I2C_writeRegister@regAddress+1
 17023  1868  3040               	movlw	64
 17024  1869  00F9               	movwf	I2C_writeRegister@data
 17025  186A  3000               	movlw	0
 17026  186B  00FA               	movwf	I2C_writeRegister@data+1
 17027  186C  31BF  2780  3198   	fcall	_I2C_writeRegister
 17028                           
 17029                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 17030  186F  3018               	movlw	24
 17031  1870  00F5               	movwf	readRegister@slaveAddress
 17032  1871  3000               	movlw	0
 17033  1872  00F6               	movwf	readRegister@slaveAddress+1
 17034  1873  3051               	movlw	81
 17035  1874  00F7               	movwf	readRegister@regAddress
 17036  1875  3000               	movlw	0
 17037  1876  00F8               	movwf	readRegister@regAddress+1
 17038  1877  31B1  2178  3198   	fcall	_readRegister
 17039  187A  0876               	movf	?_readRegister+1,w
 17040  187B  0023               	movlb	3	; select bank3
 17041  187C  00C5               	movwf	(_adcOffset+1)^(0+384)
 17042  187D  0875               	movf	?_readRegister,w
 17043  187E  00C4               	movwf	_adcOffset^(0+384)
 17044                           
 17045                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 17046  187F  3018               	movlw	24
 17047  1880  00F5               	movwf	readRegister@slaveAddress
 17048  1881  3000               	movlw	0
 17049  1882  00F6               	movwf	readRegister@slaveAddress+1
 17050  1883  3059               	movlw	89
 17051  1884  00F7               	movwf	readRegister@regAddress
 17052  1885  3000               	movlw	0
 17053  1886  00F8               	movwf	readRegister@regAddress+1
 17054  1887  31B1  2178  3198   	fcall	_readRegister
 17055  188A  0875               	movf	?_readRegister,w
 17056  188B  0020               	movlb	0	; select bank0
 17057  188C  00A2               	movwf	??_beginAFEcommunication
 17058  188D  0876               	movf	?_readRegister+1,w
 17059  188E  00A3               	movwf	??_beginAFEcommunication+1
 17060  188F  3005               	movlw	5
 17061  1890  00A4               	movwf	??_beginAFEcommunication+2
 17062  1891                     u11935:	
 17063  1891  0D23               	rlf	??_beginAFEcommunication+1,w
 17064  1892  0CA3               	rrf	??_beginAFEcommunication+1,f
 17065  1893  0CA2               	rrf	??_beginAFEcommunication,f
 17066  1894  0BA4               	decfsz	??_beginAFEcommunication+2,f
 17067  1895  2891               	goto	u11935
 17068  1896  3007               	movlw	7
 17069  1897  0522               	andwf	??_beginAFEcommunication,w
 17070  1898  00A5               	movwf	??_beginAFEcommunication+3
 17071  1899  3000               	movlw	0
 17072  189A  0523               	andwf	??_beginAFEcommunication+1,w
 17073  189B  00A6               	movwf	??_beginAFEcommunication+4
 17074  189C  3018               	movlw	24
 17075  189D  00F5               	movwf	readRegister@slaveAddress
 17076  189E  3000               	movlw	0
 17077  189F  00F6               	movwf	readRegister@slaveAddress+1
 17078  18A0  3050               	movlw	80
 17079  18A1  00F7               	movwf	readRegister@regAddress
 17080  18A2  3000               	movlw	0
 17081  18A3  00F8               	movwf	readRegister@regAddress+1
 17082  18A4  31B1  2178         	fcall	_readRegister
 17083  18A6  300C               	movlw	12
 17084  18A7  0575               	andwf	?_readRegister,w
 17085  18A8  0020               	movlb	0	; select bank0
 17086  18A9  00A7               	movwf	??_beginAFEcommunication+5
 17087  18AA  3000               	movlw	0
 17088  18AB  0576               	andwf	?_readRegister+1,w
 17089  18AC  00A8               	movwf	??_beginAFEcommunication+6
 17090  18AD  35A7               	lslf	??_beginAFEcommunication+5,f
 17091  18AE  0DA8               	rlf	??_beginAFEcommunication+6,f
 17092  18AF  0825               	movf	??_beginAFEcommunication+3,w
 17093  18B0  0427               	iorwf	??_beginAFEcommunication+5,w
 17094  18B1  00A9               	movwf	??_beginAFEcommunication+7
 17095  18B2  0826               	movf	??_beginAFEcommunication+4,w
 17096  18B3  0428               	iorwf	??_beginAFEcommunication+6,w
 17097  18B4  00AA               	movwf	??_beginAFEcommunication+8
 17098  18B5  0829               	movf	??_beginAFEcommunication+7,w
 17099  18B6  3E6D               	addlw	109
 17100  18B7  0023               	movlb	3	; select bank3
 17101  18B8  00CF               	movwf	_adcGain^(0+384)
 17102  18B9  3001               	movlw	1
 17103  18BA  0020               	movlb	0	; select bank0
 17104  18BB  3D2A               	addwfc	??_beginAFEcommunication+8,w
 17105  18BC  0023               	movlb	3	; select bank3
 17106  18BD  00D0               	movwf	(_adcGain+1)^(0+384)
 17107  18BE                     l446:	
 17108                           ;BQ76920.c: 48:     }
 17109                           
 17110                           
 17111                           ;BQ76920.c: 49:     return commSuccess;
 17112  18BE  0020               	movlb	0	; select bank0
 17113  18BF  082C               	movf	beginAFEcommunication@commSuccess+1,w
 17114  18C0  00A1               	movwf	?_beginAFEcommunication+1
 17115  18C1  082B               	movf	beginAFEcommunication@commSuccess,w
 17116  18C2  00A0               	movwf	?_beginAFEcommunication
 17117  18C3  0008               	return
 17118  18C4                     __end_of_beginAFEcommunication:	
 17119                           
 17120                           	psect	text56
 17121  3F80                     __ptext56:	
 17122 ;; *************** function _I2C_writeRegister *****************
 17123 ;; Defined at:
 17124 ;;		line 96 in file "I2C.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;  slaveAddress    2    5[COMMON] int 
 17127 ;;  regAddress      2    7[COMMON] int 
 17128 ;;  data            2    9[COMMON] int 
 17129 ;; Auto vars:     Size  Location     Type
 17130 ;;		None
 17131 ;; Return value:  Size  Location     Type
 17132 ;;                  1    wreg      void 
 17133 ;; Registers used:
 17134 ;;		wreg, status,2, status,0, pclath, cstack
 17135 ;; Tracked objects:
 17136 ;;		On entry : 0/0
 17137 ;;		On exit  : 0/0
 17138 ;;		Unchanged: 0/0
 17139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17140 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17144 ;;Total ram usage:        6 bytes
 17145 ;; Hardware stack levels used:    1
 17146 ;; Hardware stack levels required when called:    2
 17147 ;; This function calls:
 17148 ;;		_send_I2C_controlByte
 17149 ;;		_send_I2C_data
 17150 ;;		_send_I2C_startBit
 17151 ;;		_send_I2C_stopBit
 17152 ;; This function is called by:
 17153 ;;		_beginAFEcommunication
 17154 ;;		_setShortCircuitProtection
 17155 ;;		_setOverCurrentDischargeProtection
 17156 ;;		_setCellUndervoltageProtection
 17157 ;;		_setCellOvervoltageProtection
 17158 ;; This function uses a non-reentrant model
 17159 ;;
 17160                           
 17161                           
 17162                           ;psect for function _I2C_writeRegister
 17163  3F80                     _I2C_writeRegister:	
 17164                           
 17165                           ;I2C.c: 97:     send_I2C_startBit();
 17166                           
 17167                           ;incstack = 0
 17168                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17169  3F80  31BE  2621  31BF   	fcall	_send_I2C_startBit
 17170                           
 17171                           ;I2C.c: 98:     send_I2C_controlByte(slaveAddress, 0);
 17172  3F83  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17173  3F84  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17174  3F85  0875               	movf	I2C_writeRegister@slaveAddress,w
 17175  3F86  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17176  3F87  3000               	movlw	0
 17177  3F88  00F3               	movwf	send_I2C_controlByte@RW_bit
 17178  3F89  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17179  3F8A  31BE  2666  31BF   	fcall	_send_I2C_controlByte
 17180                           
 17181                           ;I2C.c: 99:     send_I2C_data(regAddress);
 17182  3F8D  0878               	movf	I2C_writeRegister@regAddress+1,w
 17183  3F8E  00F2               	movwf	send_I2C_data@databyte+1
 17184  3F8F  0877               	movf	I2C_writeRegister@regAddress,w
 17185  3F90  00F1               	movwf	send_I2C_data@databyte
 17186  3F91  31BE  264B  31BF   	fcall	_send_I2C_data
 17187                           
 17188                           ;I2C.c: 100:     send_I2C_data(data);
 17189  3F94  087A               	movf	I2C_writeRegister@data+1,w
 17190  3F95  00F2               	movwf	send_I2C_data@databyte+1
 17191  3F96  0879               	movf	I2C_writeRegister@data,w
 17192  3F97  00F1               	movwf	send_I2C_data@databyte
 17193  3F98  31BE  264B  31BF   	fcall	_send_I2C_data
 17194                           
 17195                           ;I2C.c: 101:     send_I2C_stopBit();
 17196  3F9B  31BE  2629         	fcall	_send_I2C_stopBit
 17197  3F9D  0008               	return
 17198  3F9E                     __end_of_I2C_writeRegister:	
 17199                           
 17200                           	psect	text57
 17201  3FDE                     __ptext57:	
 17202 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 17203 ;; Defined at:
 17204 ;;		line 43 in file "RGB.c"
 17205 ;; Parameters:    Size  Location     Type
 17206 ;;		None
 17207 ;; Auto vars:     Size  Location     Type
 17208 ;;		None
 17209 ;; Return value:  Size  Location     Type
 17210 ;;                  1    wreg      void 
 17211 ;; Registers used:
 17212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17213 ;; Tracked objects:
 17214 ;;		On entry : 0/0
 17215 ;;		On exit  : 0/0
 17216 ;;		Unchanged: 0/0
 17217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;Total ram usage:        1 bytes
 17223 ;; Hardware stack levels used:    1
 17224 ;; Hardware stack levels required when called:    2
 17225 ;; This function calls:
 17226 ;;		_RGB_color
 17227 ;; This function is called by:
 17228 ;;		_statemachine
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232                           
 17233                           ;psect for function _RGB_AWAIT_AFE_CONN
 17234  3FDE                     _RGB_AWAIT_AFE_CONN:	
 17235                           
 17236                           ;RGB.c: 45:     if (toggleColor) {
 17237                           
 17238                           ;incstack = 0
 17239                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17240  3FDE  087C               	movf	_toggleColor,w
 17241  3FDF  1903               	btfsc	3,2
 17242  3FE0  2FF0               	goto	l6903
 17243                           
 17244                           ;RGB.c: 46:         toggleColor = !toggleColor;
 17245  3FE1  087C               	movf	_toggleColor,w
 17246  3FE2  1D03               	btfss	3,2
 17247  3FE3  2FE6               	goto	u9490
 17248  3FE4  3001               	movlw	1
 17249  3FE5  2FE7               	goto	u9500
 17250  3FE6                     u9490:	
 17251  3FE6  3000               	movlw	0
 17252  3FE7                     u9500:	
 17253  3FE7  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17254  3FE8  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17255  3FE9  00FC               	movwf	_toggleColor
 17256                           
 17257                           ;RGB.c: 47:         RGB_color(0);
 17258  3FEA  3000               	movlw	0
 17259  3FEB  00F1               	movwf	RGB_color@color
 17260  3FEC  00F2               	movwf	RGB_color@color+1
 17261  3FED  31BF  27BD         	fcall	_RGB_color
 17262                           
 17263                           ;RGB.c: 48:     } else {
 17264  3FEF  0008               	return
 17265  3FF0                     l6903:	
 17266                           
 17267                           ;RGB.c: 49:         toggleColor = !toggleColor;
 17268  3FF0  087C               	movf	_toggleColor,w
 17269  3FF1  1D03               	btfss	3,2
 17270  3FF2  2FF5               	goto	u9510
 17271  3FF3  3001               	movlw	1
 17272  3FF4  2FF6               	goto	u9520
 17273  3FF5                     u9510:	
 17274  3FF5  3000               	movlw	0
 17275  3FF6                     u9520:	
 17276  3FF6  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17277  3FF7  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17278  3FF8  00FC               	movwf	_toggleColor
 17279                           
 17280                           ;RGB.c: 50:         RGB_color(1);
 17281  3FF9  3001               	movlw	1
 17282  3FFA  00F1               	movwf	RGB_color@color
 17283  3FFB  3000               	movlw	0
 17284  3FFC  00F2               	movwf	RGB_color@color+1
 17285  3FFD  31BF  27BD         	fcall	_RGB_color
 17286  3FFF  0008               	return
 17287  4000                     __end_of_RGB_AWAIT_AFE_CONN:	
 17288                           
 17289                           	psect	text58
 17290  3FBD                     __ptext58:	
 17291 ;; *************** function _RGB_color *****************
 17292 ;; Defined at:
 17293 ;;		line 17 in file "RGB.c"
 17294 ;; Parameters:    Size  Location     Type
 17295 ;;  color           2    1[COMMON] int 
 17296 ;; Auto vars:     Size  Location     Type
 17297 ;;		None
 17298 ;; Return value:  Size  Location     Type
 17299 ;;                  1    wreg      void 
 17300 ;; Registers used:
 17301 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17302 ;; Tracked objects:
 17303 ;;		On entry : 0/0
 17304 ;;		On exit  : 0/0
 17305 ;;		Unchanged: 0/0
 17306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17311 ;;Total ram usage:        2 bytes
 17312 ;; Hardware stack levels used:    1
 17313 ;; Hardware stack levels required when called:    1
 17314 ;; This function calls:
 17315 ;;		Nothing
 17316 ;; This function is called by:
 17317 ;;		_statemachine
 17318 ;;		_RGB_AWAIT_AFE_CONN
 17319 ;;		_watchdog_timeout_shutdown
 17320 ;; This function uses a non-reentrant model
 17321 ;;
 17322                           
 17323                           
 17324                           ;psect for function _RGB_color
 17325  3FBD                     _RGB_color:	
 17326                           
 17327                           ;RGB.c: 19:     switch (color) {
 17328                           
 17329                           ;incstack = 0
 17330                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 17331  3FBD  2FCD               	goto	l6703
 17332  3FBE                     l341:	
 17333                           ;RGB.c: 20:         case 0:
 17334                           
 17335                           
 17336                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 17337  3FBE  0022               	movlb	2	; select bank2
 17338  3FBF  120C               	bcf	12,4	;volatile
 17339                           
 17340                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 17341  3FC0  168C               	bsf	12,5	;volatile
 17342                           
 17343                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 17344  3FC1  1410               	bsf	16,0	;volatile
 17345                           
 17346                           ;RGB.c: 24:             break;
 17347  3FC2  0008               	return
 17348  3FC3                     l343:	
 17349                           ;RGB.c: 25:         case 1:
 17350                           
 17351                           
 17352                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 17353  3FC3  0022               	movlb	2	; select bank2
 17354  3FC4  160C               	bsf	12,4	;volatile
 17355                           
 17356                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 17357  3FC5  128C               	bcf	12,5	;volatile
 17358                           
 17359                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 17360  3FC6  1410               	bsf	16,0	;volatile
 17361                           
 17362                           ;RGB.c: 29:             break;
 17363  3FC7  0008               	return
 17364  3FC8                     l344:	
 17365                           ;RGB.c: 30:         case 2:
 17366                           
 17367                           
 17368                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 17369  3FC8  0022               	movlb	2	; select bank2
 17370  3FC9  160C               	bsf	12,4	;volatile
 17371                           
 17372                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 17373  3FCA  168C               	bsf	12,5	;volatile
 17374                           
 17375                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 17376  3FCB  1010               	bcf	16,0	;volatile
 17377                           
 17378                           ;RGB.c: 34:             break;
 17379  3FCC  0008               	return
 17380  3FCD                     l6703:	
 17381                           
 17382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17383                           ; Switch size 1, requested type "simple"
 17384                           ; Number of cases is 1, Range of values is 0 to 0
 17385                           ; switch strategies available:
 17386                           ; Name         Instructions Cycles
 17387                           ; simple_byte            4     3 (average)
 17388                           ; direct_byte            8     6 (fixed)
 17389                           ; jumptable            260     6 (fixed)
 17390                           ;	Chosen strategy is simple_byte
 17391  3FCD  0872               	movf	RGB_color@color+1,w
 17392  3FCE  3A00               	xorlw	0	; case 0
 17393  3FCF  1903               	skipnz
 17394  3FD0  2FD2               	goto	l8915
 17395  3FD1  2FDD               	goto	l345
 17396  3FD2                     l8915:	
 17397                           
 17398                           ; Switch size 1, requested type "simple"
 17399                           ; Number of cases is 3, Range of values is 0 to 2
 17400                           ; switch strategies available:
 17401                           ; Name         Instructions Cycles
 17402                           ; simple_byte           10     6 (average)
 17403                           ; direct_byte           12     6 (fixed)
 17404                           ; jumptable            260     6 (fixed)
 17405                           ;	Chosen strategy is simple_byte
 17406  3FD2  0871               	movf	RGB_color@color,w
 17407  3FD3  3A00               	xorlw	0	; case 0
 17408  3FD4  1903               	skipnz
 17409  3FD5  2FBE               	goto	l341
 17410  3FD6  3A01               	xorlw	1	; case 1
 17411  3FD7  1903               	skipnz
 17412  3FD8  2FC3               	goto	l343
 17413  3FD9  3A03               	xorlw	3	; case 2
 17414  3FDA  1903               	skipnz
 17415  3FDB  2FC8               	goto	l344
 17416  3FDC  2FDD               	goto	l345
 17417  3FDD                     l345:	
 17418  3FDD  0008               	return
 17419  3FDE                     __end_of_RGB_color:	
 17420                           
 17421                           	psect	text59
 17422  34E4                     __ptext59:	
 17423 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17424 ;; Defined at:
 17425 ;;		line 253 in file "BQ76920.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;		None
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;		None
 17430 ;; Return value:  Size  Location     Type
 17431 ;;                  4    9[BANK1 ] long 
 17432 ;; Registers used:
 17433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17434 ;; Tracked objects:
 17435 ;;		On entry : 0/0
 17436 ;;		On exit  : 0/0
 17437 ;;		Unchanged: 0/0
 17438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17439 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17441 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17442 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17443 ;;Total ram usage:        8 bytes
 17444 ;; Hardware stack levels used:    1
 17445 ;; Hardware stack levels required when called:    2
 17446 ;; This function calls:
 17447 ;;		___fldiv
 17448 ;;		___fltol
 17449 ;;		___xxtofl
 17450 ;; This function is called by:
 17451 ;;		_statemachine
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455                           
 17456                           ;psect for function _AFE_getSetShortCircuitCurrent
 17457  34E4                     _AFE_getSetShortCircuitCurrent:	
 17458                           
 17459                           ;BQ76920.c: 254:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17460                           
 17461                           ;incstack = 0
 17462                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17463  34E4  0023               	movlb	3	; select bank3
 17464  34E5  0848               	movf	BQ76920@protect1^(0+384),w
 17465  34E6  3907               	andlw	7
 17466  34E7  0021               	movlb	1	; select bank1
 17467  34E8  00AD               	movwf	??_AFE_getSetShortCircuitCurrent^(0+128)
 17468  34E9  01AE               	clrf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1)
 17469  34EA  35AD               	lslf	??_AFE_getSetShortCircuitCurrent^(0+128),f
 17470  34EB  0DAE               	rlf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1),f
 17471  34EC  301C               	movlw	low (_SCD_threshold_setting| (0+32768))
 17472  34ED  072D               	addwf	??_AFE_getSetShortCircuitCurrent^(0+128),w
 17473  34EE  0084               	movwf	4
 17474  34EF  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 17475  34F0  3D2E               	addwfc	(??_AFE_getSetShortCircuitCurrent+1)^(0+128),w
 17476  34F1  0085               	movwf	5
 17477  34F2  3F00               	moviw [0]fsr0
 17478  34F3  00AF               	movwf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17479  34F4  3F01               	moviw [1]fsr0
 17480  34F5  00B0               	movwf	((??_AFE_getSetShortCircuitCurrent+2)^(0+128)+1)
 17481  34F6  082F               	movf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128),w
 17482  34F7  00F1               	movwf	___xxtofl@val
 17483  34F8  0830               	movf	(??_AFE_getSetShortCircuitCurrent+3)^(0+128),w
 17484  34F9  00F2               	movwf	___xxtofl@val+1
 17485  34FA  0D89               	rlf	9,f
 17486  34FB  3B89               	subwfb	9,f
 17487  34FC  0989               	comf	9,f
 17488  34FD  00F3               	movwf	___xxtofl@val+2
 17489  34FE  00F4               	movwf	___xxtofl@val+3
 17490  34FF  3001               	movlw	1
 17491  3500  31A9  21FF  31B4   	fcall	___xxtofl
 17492  3503  0874               	movf	?___xxtofl+3,w
 17493  3504  0020               	movlb	0	; select bank0
 17494  3505  00C7               	movwf	___fldiv@b+3
 17495  3506  0873               	movf	?___xxtofl+2,w
 17496  3507  00C6               	movwf	___fldiv@b+2
 17497  3508  0872               	movf	?___xxtofl+1,w
 17498  3509  00C5               	movwf	___fldiv@b+1
 17499  350A  0871               	movf	?___xxtofl,w
 17500  350B  00C4               	movwf	___fldiv@b
 17501  350C  0023               	movlb	3	; select bank3
 17502  350D  0827               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17503  350E  0020               	movlb	0	; select bank0
 17504  350F  00C3               	movwf	___fldiv@a+3
 17505  3510  0023               	movlb	3	; select bank3
 17506  3511  0826               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17507  3512  0020               	movlb	0	; select bank0
 17508  3513  00C2               	movwf	___fldiv@a+2
 17509  3514  0023               	movlb	3	; select bank3
 17510  3515  0825               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17511  3516  0020               	movlb	0	; select bank0
 17512  3517  00C1               	movwf	___fldiv@a+1
 17513  3518  0023               	movlb	3	; select bank3
 17514  3519  0824               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17515  351A  0020               	movlb	0	; select bank0
 17516  351B  00C0               	movwf	___fldiv@a
 17517  351C  319C  24A4  31B4   	fcall	___fldiv
 17518  351F  0020               	movlb	0	; select bank0
 17519  3520  0843               	movf	?___fldiv+3,w
 17520  3521  0021               	movlb	1	; select bank1
 17521  3522  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17522  3523  0020               	movlb	0	; select bank0
 17523  3524  0842               	movf	?___fldiv+2,w
 17524  3525  0021               	movlb	1	; select bank1
 17525  3526  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17526  3527  0020               	movlb	0	; select bank0
 17527  3528  0841               	movf	?___fldiv+1,w
 17528  3529  0021               	movlb	1	; select bank1
 17529  352A  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17530  352B  0020               	movlb	0	; select bank0
 17531  352C  0840               	movf	?___fldiv,w
 17532  352D  0021               	movlb	1	; select bank1
 17533  352E  00A0               	movwf	___fltol@f1^(0+128)
 17534  352F  31B5  253B         	fcall	___fltol
 17535  3531  0021               	movlb	1	; select bank1
 17536  3532  0823               	movf	(?___fltol+3)^(0+128),w
 17537  3533  00AC               	movwf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128)
 17538  3534  0822               	movf	(?___fltol+2)^(0+128),w
 17539  3535  00AB               	movwf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17540  3536  0821               	movf	(?___fltol+1)^(0+128),w
 17541  3537  00AA               	movwf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128)
 17542  3538  0820               	movf	?___fltol^(0+128),w
 17543  3539  00A9               	movwf	?_AFE_getSetShortCircuitCurrent^(0+128)
 17544  353A  0008               	return
 17545  353B                     __end_of_AFE_getSetShortCircuitCurrent:	
 17546                           
 17547                           	psect	text60
 17548  3E7A                     __ptext60:	
 17549 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17550 ;; Defined at:
 17551 ;;		line 249 in file "BQ76920.c"
 17552 ;; Parameters:    Size  Location     Type
 17553 ;;		None
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;		None
 17556 ;; Return value:  Size  Location     Type
 17557 ;;                  4    1[COMMON] float 
 17558 ;; Registers used:
 17559 ;;		wreg
 17560 ;; Tracked objects:
 17561 ;;		On entry : 0/0
 17562 ;;		On exit  : 0/0
 17563 ;;		Unchanged: 0/0
 17564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17569 ;;Total ram usage:        4 bytes
 17570 ;; Hardware stack levels used:    1
 17571 ;; Hardware stack levels required when called:    1
 17572 ;; This function calls:
 17573 ;;		Nothing
 17574 ;; This function is called by:
 17575 ;;		_statemachine
 17576 ;; This function uses a non-reentrant model
 17577 ;;
 17578                           
 17579                           
 17580                           ;psect for function _AFE_getSetCurrentSenseRes
 17581  3E7A                     _AFE_getSetCurrentSenseRes:	
 17582                           
 17583                           ;BQ76920.c: 250:     return (float) shuntResistorValue_mOhm;
 17584                           
 17585                           ;incstack = 0
 17586                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17587  3E7A  0023               	movlb	3	; select bank3
 17588  3E7B  0827               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17589  3E7C  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17590  3E7D  0826               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17591  3E7E  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17592  3E7F  0825               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17593  3E80  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17594  3E81  0824               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17595  3E82  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17596  3E83  0008               	return
 17597  3E84                     __end_of_AFE_getSetCurrentSenseRes:	
 17598                           
 17599                           	psect	text61
 17600  348D                     __ptext61:	
 17601 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 17602 ;; Defined at:
 17603 ;;		line 257 in file "BQ76920.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;		None
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  4    9[BANK1 ] long 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17617 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;Total ram usage:        8 bytes
 17622 ;; Hardware stack levels used:    1
 17623 ;; Hardware stack levels required when called:    2
 17624 ;; This function calls:
 17625 ;;		___fldiv
 17626 ;;		___fltol
 17627 ;;		___xxtofl
 17628 ;; This function is called by:
 17629 ;;		_statemachine
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           
 17634                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17635  348D                     _AFE_getOverCurrentDischargeCurrent:	
 17636                           
 17637                           ;BQ76920.c: 258:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17638                           
 17639                           ;incstack = 0
 17640                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17641  348D  0023               	movlb	3	; select bank3
 17642  348E  0847               	movf	BQ76920@protect2^(0+384),w
 17643  348F  390F               	andlw	15
 17644  3490  0021               	movlb	1	; select bank1
 17645  3491  00AD               	movwf	??_AFE_getOverCurrentDischargeCurrent^(0+128)
 17646  3492  01AE               	clrf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1)
 17647  3493  35AD               	lslf	??_AFE_getOverCurrentDischargeCurrent^(0+128),f
 17648  3494  0DAE               	rlf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1),f
 17649  3495  30F8               	movlw	low (_OCD_threshold_setting| (0+32768))
 17650  3496  072D               	addwf	??_AFE_getOverCurrentDischargeCurrent^(0+128),w
 17651  3497  0084               	movwf	4
 17652  3498  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17653  3499  3D2E               	addwfc	(??_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
 17654  349A  0085               	movwf	5
 17655  349B  3F00               	moviw [0]fsr0
 17656  349C  00AF               	movwf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17657  349D  3F01               	moviw [1]fsr0
 17658  349E  00B0               	movwf	((??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)+1)
 17659  349F  082F               	movf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
 17660  34A0  00F1               	movwf	___xxtofl@val
 17661  34A1  0830               	movf	(??_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
 17662  34A2  00F2               	movwf	___xxtofl@val+1
 17663  34A3  0D89               	rlf	9,f
 17664  34A4  3B89               	subwfb	9,f
 17665  34A5  0989               	comf	9,f
 17666  34A6  00F3               	movwf	___xxtofl@val+2
 17667  34A7  00F4               	movwf	___xxtofl@val+3
 17668  34A8  3001               	movlw	1
 17669  34A9  31A9  21FF  31B4   	fcall	___xxtofl
 17670  34AC  0874               	movf	?___xxtofl+3,w
 17671  34AD  0020               	movlb	0	; select bank0
 17672  34AE  00C7               	movwf	___fldiv@b+3
 17673  34AF  0873               	movf	?___xxtofl+2,w
 17674  34B0  00C6               	movwf	___fldiv@b+2
 17675  34B1  0872               	movf	?___xxtofl+1,w
 17676  34B2  00C5               	movwf	___fldiv@b+1
 17677  34B3  0871               	movf	?___xxtofl,w
 17678  34B4  00C4               	movwf	___fldiv@b
 17679  34B5  0023               	movlb	3	; select bank3
 17680  34B6  0827               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17681  34B7  0020               	movlb	0	; select bank0
 17682  34B8  00C3               	movwf	___fldiv@a+3
 17683  34B9  0023               	movlb	3	; select bank3
 17684  34BA  0826               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17685  34BB  0020               	movlb	0	; select bank0
 17686  34BC  00C2               	movwf	___fldiv@a+2
 17687  34BD  0023               	movlb	3	; select bank3
 17688  34BE  0825               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17689  34BF  0020               	movlb	0	; select bank0
 17690  34C0  00C1               	movwf	___fldiv@a+1
 17691  34C1  0023               	movlb	3	; select bank3
 17692  34C2  0824               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17693  34C3  0020               	movlb	0	; select bank0
 17694  34C4  00C0               	movwf	___fldiv@a
 17695  34C5  319C  24A4  31B4   	fcall	___fldiv
 17696  34C8  0020               	movlb	0	; select bank0
 17697  34C9  0843               	movf	?___fldiv+3,w
 17698  34CA  0021               	movlb	1	; select bank1
 17699  34CB  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17700  34CC  0020               	movlb	0	; select bank0
 17701  34CD  0842               	movf	?___fldiv+2,w
 17702  34CE  0021               	movlb	1	; select bank1
 17703  34CF  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17704  34D0  0020               	movlb	0	; select bank0
 17705  34D1  0841               	movf	?___fldiv+1,w
 17706  34D2  0021               	movlb	1	; select bank1
 17707  34D3  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17708  34D4  0020               	movlb	0	; select bank0
 17709  34D5  0840               	movf	?___fldiv,w
 17710  34D6  0021               	movlb	1	; select bank1
 17711  34D7  00A0               	movwf	___fltol@f1^(0+128)
 17712  34D8  31B5  253B         	fcall	___fltol
 17713  34DA  0021               	movlb	1	; select bank1
 17714  34DB  0823               	movf	(?___fltol+3)^(0+128),w
 17715  34DC  00AC               	movwf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128)
 17716  34DD  0822               	movf	(?___fltol+2)^(0+128),w
 17717  34DE  00AB               	movwf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17718  34DF  0821               	movf	(?___fltol+1)^(0+128),w
 17719  34E0  00AA               	movwf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128)
 17720  34E1  0820               	movf	?___fltol^(0+128),w
 17721  34E2  00A9               	movwf	?_AFE_getOverCurrentDischargeCurrent^(0+128)
 17722  34E3  0008               	return
 17723  34E4                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 17724                           
 17725                           	psect	text62
 17726  3E14                     __ptext62:	
 17727 ;; *************** function _AFE_UPDATE *****************
 17728 ;; Defined at:
 17729 ;;		line 166 in file "BQ76920.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;		None
 17732 ;; Auto vars:     Size  Location     Type
 17733 ;;		None
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  1    wreg      void 
 17736 ;; Registers used:
 17737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17747 ;;Total ram usage:        0 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:    4
 17750 ;; This function calls:
 17751 ;;		_updateCurrent
 17752 ;;		_updateVoltages
 17753 ;; This function is called by:
 17754 ;;		_statemachine
 17755 ;; This function uses a non-reentrant model
 17756 ;;
 17757                           
 17758                           
 17759                           ;psect for function _AFE_UPDATE
 17760  3E14                     _AFE_UPDATE:	
 17761                           
 17762                           ;BQ76920.c: 167:     updateCurrent();
 17763                           
 17764                           ;incstack = 0
 17765                           ; Regs used in _AFE_UPDATE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17766  3E14  31BE  2670  31BE   	fcall	_updateCurrent
 17767                           
 17768                           ;BQ76920.c: 168:     updateVoltages();
 17769  3E17  3190  200F         	fcall	_updateVoltages
 17770  3E19  0008               	return
 17771  3E1A                     __end_of_AFE_UPDATE:	
 17772                           
 17773                           	psect	text63
 17774  100F                     __ptext63:	
 17775 ;; *************** function _updateVoltages *****************
 17776 ;; Defined at:
 17777 ;;		line 204 in file "BQ76920.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  i               2   25[BANK1 ] int 
 17782 ;;  adcVal          4   21[BANK1 ] long 
 17783 ;; Return value:  Size  Location     Type
 17784 ;;                  1    wreg      void 
 17785 ;; Registers used:
 17786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17787 ;; Tracked objects:
 17788 ;;		On entry : 0/0
 17789 ;;		On exit  : 0/0
 17790 ;;		Unchanged: 0/0
 17791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17793 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17794 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17795 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17796 ;;Total ram usage:       18 bytes
 17797 ;; Hardware stack levels used:    1
 17798 ;; Hardware stack levels required when called:    3
 17799 ;; This function calls:
 17800 ;;		___aldiv
 17801 ;;		___fladd
 17802 ;;		___fldiv
 17803 ;;		___flmul
 17804 ;;		___fltol
 17805 ;;		___lmul
 17806 ;;		___xxtofl
 17807 ;;		_readRegister
 17808 ;;		_read_I2C_data
 17809 ;;		_send_I2C_ACK
 17810 ;;		_send_I2C_NACK
 17811 ;;		_send_I2C_controlByte
 17812 ;;		_send_I2C_data
 17813 ;;		_send_I2C_startBit
 17814 ;;		_send_I2C_stopBit
 17815 ;; This function is called by:
 17816 ;;		_AFE_UPDATE
 17817 ;; This function uses a non-reentrant model
 17818 ;;
 17819                           
 17820                           
 17821                           ;psect for function _updateVoltages
 17822  100F                     _updateVoltages:	
 17823                           
 17824                           ;BQ76920.c: 210:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 17825                           
 17826                           ;incstack = 0
 17827                           ; Regs used in _updateVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17828  100F  3018               	movlw	24
 17829  1010  00F5               	movwf	readRegister@slaveAddress
 17830  1011  3000               	movlw	0
 17831  1012  00F6               	movwf	readRegister@slaveAddress+1
 17832  1013  302A               	movlw	42
 17833  1014  00F7               	movwf	readRegister@regAddress
 17834  1015  3000               	movlw	0
 17835  1016  00F8               	movwf	readRegister@regAddress+1
 17836  1017  31B1  2178  3190   	fcall	_readRegister
 17837  101A  0875               	movf	?_readRegister,w
 17838  101B  0021               	movlb	1	; select bank1
 17839  101C  00A9               	movwf	??_updateVoltages^(0+128)
 17840  101D  0876               	movf	?_readRegister+1,w
 17841  101E  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17842  101F  0829               	movf	??_updateVoltages^(0+128),w
 17843  1020  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17844  1021  01A9               	clrf	??_updateVoltages^(0+128)
 17845  1022  3018               	movlw	24
 17846  1023  00F5               	movwf	readRegister@slaveAddress
 17847  1024  3000               	movlw	0
 17848  1025  00F6               	movwf	readRegister@slaveAddress+1
 17849  1026  302B               	movlw	43
 17850  1027  00F7               	movwf	readRegister@regAddress
 17851  1028  3000               	movlw	0
 17852  1029  00F8               	movwf	readRegister@regAddress+1
 17853  102A  31B1  2178  3190   	fcall	_readRegister
 17854  102D  0875               	movf	?_readRegister,w
 17855  102E  0021               	movlb	1	; select bank1
 17856  102F  0429               	iorwf	??_updateVoltages^(0+128),w
 17857  1030  00B5               	movwf	updateVoltages@adcVal^(0+128)
 17858  1031  0876               	movf	?_readRegister+1,w
 17859  1032  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 17860  1033  00B6               	movwf	(updateVoltages@adcVal+1)^(0+128)
 17861  1034  01B7               	clrf	(updateVoltages@adcVal^(0+128)+2)
 17862  1035  1BB6               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 17863  1036  03B7               	decf	(updateVoltages@adcVal+2)^(0+128),f
 17864  1037  0837               	movf	(updateVoltages@adcVal^(0+128)+2),w
 17865  1038  00B8               	movwf	(updateVoltages@adcVal+3)^(0+128)
 17866                           
 17867                           ;BQ76920.c: 211:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17868  1039  0023               	movlb	3	; select bank3
 17869  103A  084F               	movf	_adcGain^(0+384),w
 17870  103B  00F1               	movwf	___xxtofl@val
 17871  103C  0850               	movf	(_adcGain+1)^(0+384),w
 17872  103D  00F2               	movwf	___xxtofl@val+1
 17873  103E  0D89               	rlf	9,f
 17874  103F  3B89               	subwfb	9,f
 17875  1040  0989               	comf	9,f
 17876  1041  00F3               	movwf	___xxtofl@val+2
 17877  1042  00F4               	movwf	___xxtofl@val+3
 17878  1043  3001               	movlw	1
 17879  1044  31A9  21FF  3190   	fcall	___xxtofl
 17880  1047  0874               	movf	?___xxtofl+3,w
 17881  1048  0020               	movlb	0	; select bank0
 17882  1049  00AD               	movwf	___flmul@a+3
 17883  104A  0873               	movf	?___xxtofl+2,w
 17884  104B  00AC               	movwf	___flmul@a+2
 17885  104C  0872               	movf	?___xxtofl+1,w
 17886  104D  00AB               	movwf	___flmul@a+1
 17887  104E  0871               	movf	?___xxtofl,w
 17888  104F  00AA               	movwf	___flmul@a
 17889  1050  3040               	movlw	64
 17890  1051  00A9               	movwf	___flmul@b+3
 17891  1052  3080               	movlw	128
 17892  1053  00A8               	movwf	___flmul@b+2
 17893  1054  3000               	movlw	0
 17894  1055  00A7               	movwf	___flmul@b+1
 17895  1056  3000               	movlw	0
 17896  1057  00A6               	movwf	___flmul@b
 17897  1058  3193  23A8  3190   	fcall	___flmul
 17898  105B  0020               	movlb	0	; select bank0
 17899  105C  0829               	movf	?___flmul+3,w
 17900  105D  0021               	movlb	1	; select bank1
 17901  105E  00B4               	movwf	(_updateVoltages$2140+3)^(0+128)
 17902  105F  0020               	movlb	0	; select bank0
 17903  1060  0828               	movf	?___flmul+2,w
 17904  1061  0021               	movlb	1	; select bank1
 17905  1062  00B3               	movwf	(_updateVoltages$2140+2)^(0+128)
 17906  1063  0020               	movlb	0	; select bank0
 17907  1064  0827               	movf	?___flmul+1,w
 17908  1065  0021               	movlb	1	; select bank1
 17909  1066  00B2               	movwf	(_updateVoltages$2140+1)^(0+128)
 17910  1067  0020               	movlb	0	; select bank0
 17911  1068  0826               	movf	?___flmul,w
 17912  1069  0021               	movlb	1	; select bank1
 17913  106A  00B1               	movwf	_updateVoltages$2140^(0+128)
 17914                           
 17915                           ;BQ76920.c: 211:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17916  106B  0834               	movf	(_updateVoltages$2140+3)^(0+128),w
 17917  106C  0020               	movlb	0	; select bank0
 17918  106D  00AD               	movwf	___flmul@a+3
 17919  106E  0021               	movlb	1	; select bank1
 17920  106F  0833               	movf	(_updateVoltages$2140+2)^(0+128),w
 17921  1070  0020               	movlb	0	; select bank0
 17922  1071  00AC               	movwf	___flmul@a+2
 17923  1072  0021               	movlb	1	; select bank1
 17924  1073  0832               	movf	(_updateVoltages$2140+1)^(0+128),w
 17925  1074  0020               	movlb	0	; select bank0
 17926  1075  00AB               	movwf	___flmul@a+1
 17927  1076  0021               	movlb	1	; select bank1
 17928  1077  0831               	movf	_updateVoltages$2140^(0+128),w
 17929  1078  0020               	movlb	0	; select bank0
 17930  1079  00AA               	movwf	___flmul@a
 17931  107A  0021               	movlb	1	; select bank1
 17932  107B  0838               	movf	(updateVoltages@adcVal+3)^(0+128),w
 17933  107C  00F4               	movwf	___xxtofl@val+3
 17934  107D  0837               	movf	(updateVoltages@adcVal+2)^(0+128),w
 17935  107E  00F3               	movwf	___xxtofl@val+2
 17936  107F  0836               	movf	(updateVoltages@adcVal+1)^(0+128),w
 17937  1080  00F2               	movwf	___xxtofl@val+1
 17938  1081  0835               	movf	updateVoltages@adcVal^(0+128),w
 17939  1082  00F1               	movwf	___xxtofl@val
 17940  1083  3001               	movlw	1
 17941  1084  31A9  21FF  3190   	fcall	___xxtofl
 17942  1087  0874               	movf	?___xxtofl+3,w
 17943  1088  0020               	movlb	0	; select bank0
 17944  1089  00A9               	movwf	___flmul@b+3
 17945  108A  0873               	movf	?___xxtofl+2,w
 17946  108B  00A8               	movwf	___flmul@b+2
 17947  108C  0872               	movf	?___xxtofl+1,w
 17948  108D  00A7               	movwf	___flmul@b+1
 17949  108E  0871               	movf	?___xxtofl,w
 17950  108F  00A6               	movwf	___flmul@b
 17951  1090  3193  23A8  3190   	fcall	___flmul
 17952  1093  0020               	movlb	0	; select bank0
 17953  1094  0829               	movf	?___flmul+3,w
 17954  1095  00C7               	movwf	___fldiv@b+3
 17955  1096  0828               	movf	?___flmul+2,w
 17956  1097  00C6               	movwf	___fldiv@b+2
 17957  1098  0827               	movf	?___flmul+1,w
 17958  1099  00C5               	movwf	___fldiv@b+1
 17959  109A  0826               	movf	?___flmul,w
 17960  109B  00C4               	movwf	___fldiv@b
 17961  109C  3044               	movlw	68
 17962  109D  00C3               	movwf	___fldiv@a+3
 17963  109E  307A               	movlw	122
 17964  109F  00C2               	movwf	___fldiv@a+2
 17965  10A0  3000               	movlw	0
 17966  10A1  00C1               	movwf	___fldiv@a+1
 17967  10A2  3000               	movlw	0
 17968  10A3  00C0               	movwf	___fldiv@a
 17969  10A4  319C  24A4  3190   	fcall	___fldiv
 17970  10A7  0020               	movlb	0	; select bank0
 17971  10A8  0843               	movf	?___fldiv+3,w
 17972  10A9  00E1               	movwf	___fladd@a+3
 17973  10AA  0842               	movf	?___fldiv+2,w
 17974  10AB  00E0               	movwf	___fladd@a+2
 17975  10AC  0841               	movf	?___fldiv+1,w
 17976  10AD  00DF               	movwf	___fladd@a+1
 17977  10AE  0840               	movf	?___fldiv,w
 17978  10AF  00DE               	movwf	___fladd@a
 17979  10B0  0023               	movlb	3	; select bank3
 17980  10B1  0845               	movf	(_adcOffset+1)^(0+384),w
 17981  10B2  0021               	movlb	1	; select bank1
 17982  10B3  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17983  10B4  0023               	movlb	3	; select bank3
 17984  10B5  0844               	movf	_adcOffset^(0+384),w
 17985  10B6  0021               	movlb	1	; select bank1
 17986  10B7  00A9               	movwf	??_updateVoltages^(0+128)
 17987  10B8  35A9               	lslf	??_updateVoltages^(0+128),f
 17988  10B9  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17989  10BA  35A9               	lslf	??_updateVoltages^(0+128),f
 17990  10BB  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17991  10BC  0829               	movf	??_updateVoltages^(0+128),w
 17992  10BD  00F1               	movwf	___xxtofl@val
 17993  10BE  082A               	movf	(??_updateVoltages+1)^(0+128),w
 17994  10BF  00F2               	movwf	___xxtofl@val+1
 17995  10C0  0D89               	rlf	9,f
 17996  10C1  3B89               	subwfb	9,f
 17997  10C2  0989               	comf	9,f
 17998  10C3  00F3               	movwf	___xxtofl@val+2
 17999  10C4  00F4               	movwf	___xxtofl@val+3
 18000  10C5  3001               	movlw	1
 18001  10C6  31A9  21FF  3190   	fcall	___xxtofl
 18002  10C9  0874               	movf	?___xxtofl+3,w
 18003  10CA  0020               	movlb	0	; select bank0
 18004  10CB  00DD               	movwf	___fladd@b+3
 18005  10CC  0873               	movf	?___xxtofl+2,w
 18006  10CD  00DC               	movwf	___fladd@b+2
 18007  10CE  0872               	movf	?___xxtofl+1,w
 18008  10CF  00DB               	movwf	___fladd@b+1
 18009  10D0  0871               	movf	?___xxtofl,w
 18010  10D1  00DA               	movwf	___fladd@b
 18011  10D2  319E  261E  3190   	fcall	___fladd
 18012  10D5  0020               	movlb	0	; select bank0
 18013  10D6  085D               	movf	?___fladd+3,w
 18014  10D7  0021               	movlb	1	; select bank1
 18015  10D8  00A3               	movwf	(___fltol@f1+3)^(0+128)
 18016  10D9  0020               	movlb	0	; select bank0
 18017  10DA  085C               	movf	?___fladd+2,w
 18018  10DB  0021               	movlb	1	; select bank1
 18019  10DC  00A2               	movwf	(___fltol@f1+2)^(0+128)
 18020  10DD  0020               	movlb	0	; select bank0
 18021  10DE  085B               	movf	?___fladd+1,w
 18022  10DF  0021               	movlb	1	; select bank1
 18023  10E0  00A1               	movwf	(___fltol@f1+1)^(0+128)
 18024  10E1  0020               	movlb	0	; select bank0
 18025  10E2  085A               	movf	?___fladd,w
 18026  10E3  0021               	movlb	1	; select bank1
 18027  10E4  00A0               	movwf	___fltol@f1^(0+128)
 18028  10E5  31B5  253B  3190   	fcall	___fltol
 18029  10E8  0021               	movlb	1	; select bank1
 18030  10E9  0823               	movf	(?___fltol+3)^(0+128),w
 18031  10EA  0023               	movlb	3	; select bank3
 18032  10EB  00AB               	movwf	(_batVoltage+3)^(0+384)
 18033  10EC  0021               	movlb	1	; select bank1
 18034  10ED  0822               	movf	(?___fltol+2)^(0+128),w
 18035  10EE  0023               	movlb	3	; select bank3
 18036  10EF  00AA               	movwf	(_batVoltage+2)^(0+384)
 18037  10F0  0021               	movlb	1	; select bank1
 18038  10F1  0821               	movf	(?___fltol+1)^(0+128),w
 18039  10F2  0023               	movlb	3	; select bank3
 18040  10F3  00A9               	movwf	(_batVoltage+1)^(0+384)
 18041  10F4  0021               	movlb	1	; select bank1
 18042  10F5  0820               	movf	?___fltol^(0+128),w
 18043  10F6  0023               	movlb	3	; select bank3
 18044  10F7  00A8               	movwf	_batVoltage^(0+384)
 18045                           
 18046                           ;BQ76920.c: 214:     send_I2C_startBit();
 18047  10F8  31BE  2621  3190   	fcall	_send_I2C_startBit
 18048                           
 18049                           ;BQ76920.c: 215:     send_I2C_controlByte(0x18, 0);
 18050  10FB  3018               	movlw	24
 18051  10FC  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18052  10FD  3000               	movlw	0
 18053  10FE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18054  10FF  3000               	movlw	0
 18055  1100  00F3               	movwf	send_I2C_controlByte@RW_bit
 18056  1101  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18057  1102  31BE  2666  3190   	fcall	_send_I2C_controlByte
 18058                           
 18059                           ;BQ76920.c: 216:     send_I2C_data(0x0C);
 18060  1105  300C               	movlw	12
 18061  1106  00F1               	movwf	send_I2C_data@databyte
 18062  1107  3000               	movlw	0
 18063  1108  00F2               	movwf	send_I2C_data@databyte+1
 18064  1109  31BE  264B  3190   	fcall	_send_I2C_data
 18065                           
 18066                           ;BQ76920.c: 217:     send_I2C_controlByte(0x18, 1);
 18067  110C  3018               	movlw	24
 18068  110D  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18069  110E  3000               	movlw	0
 18070  110F  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18071  1110  3001               	movlw	1
 18072  1111  00F3               	movwf	send_I2C_controlByte@RW_bit
 18073  1112  3000               	movlw	0
 18074  1113  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18075  1114  31BE  2666  3190   	fcall	_send_I2C_controlByte
 18076                           
 18077                           ;BQ76920.c: 220:     for(int i=0;i<(5);i++){
 18078  1117  0021               	movlb	1	; select bank1
 18079  1118  01B9               	clrf	updateVoltages@i^(0+128)
 18080  1119  01BA               	clrf	(updateVoltages@i+1)^(0+128)
 18081  111A                     l8567:	
 18082                           
 18083                           ;BQ76920.c: 223:      adcVal = ((read_I2C_data() & 0x3F ) << 8);
 18084  111A  3198  2000  3190   	fcall	_read_I2C_data
 18085  111D  303F               	movlw	63
 18086  111E  0571               	andwf	?_read_I2C_data,w
 18087  111F  0021               	movlb	1	; select bank1
 18088  1120  00A9               	movwf	??_updateVoltages^(0+128)
 18089  1121  3000               	movlw	0
 18090  1122  0572               	andwf	?_read_I2C_data+1,w
 18091  1123  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18092  1124  0829               	movf	??_updateVoltages^(0+128),w
 18093  1125  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18094  1126  01A9               	clrf	??_updateVoltages^(0+128)
 18095  1127  0829               	movf	??_updateVoltages^(0+128),w
 18096  1128  00B5               	movwf	updateVoltages@adcVal^(0+128)
 18097  1129  082A               	movf	(??_updateVoltages+1)^(0+128),w
 18098  112A  00B6               	movwf	(updateVoltages@adcVal^(0+128)+1)
 18099  112B  01B7               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18100  112C  01B8               	clrf	(updateVoltages@adcVal^(0+128)+3)
 18101                           
 18102                           ;BQ76920.c: 224:      send_I2C_ACK();
 18103  112D  31BE  2654  3190   	fcall	_send_I2C_ACK
 18104                           
 18105                           ;BQ76920.c: 225:      adcVal = adcVal | read_I2C_data();
 18106  1130  0021               	movlb	1	; select bank1
 18107  1131  0835               	movf	updateVoltages@adcVal^(0+128),w
 18108  1132  00A9               	movwf	??_updateVoltages^(0+128)
 18109  1133  0836               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18110  1134  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18111  1135  0837               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18112  1136  00AB               	movwf	(??_updateVoltages^(0+128)+2)
 18113  1137  0838               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18114  1138  00AC               	movwf	(??_updateVoltages^(0+128)+3)
 18115  1139  3198  2000  3190   	fcall	_read_I2C_data
 18116  113C  0871               	movf	?_read_I2C_data,w
 18117  113D  0021               	movlb	1	; select bank1
 18118  113E  00AD               	movwf	(??_updateVoltages+4)^(0+128)
 18119  113F  0872               	movf	?_read_I2C_data+1,w
 18120  1140  00AE               	movwf	((??_updateVoltages+4)^(0+128)+1)
 18121  1141  01AF               	clrf	((??_updateVoltages+4)^(0+128)+2)
 18122  1142  01B0               	clrf	((??_updateVoltages+4)^(0+128)+3)
 18123  1143  082D               	movf	(??_updateVoltages+4)^(0+128),w
 18124  1144  04A9               	iorwf	??_updateVoltages^(0+128),f
 18125  1145  082E               	movf	(??_updateVoltages+5)^(0+128),w
 18126  1146  04AA               	iorwf	(??_updateVoltages^(0+128)+1),f
 18127  1147  082F               	movf	(??_updateVoltages+6)^(0+128),w
 18128  1148  04AB               	iorwf	(??_updateVoltages^(0+128)+2),f
 18129  1149  0830               	movf	(??_updateVoltages+7)^(0+128),w
 18130  114A  04AC               	iorwf	(??_updateVoltages^(0+128)+3),f
 18131  114B  082C               	movf	(??_updateVoltages+3)^(0+128),w
 18132  114C  00B8               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18133  114D  082B               	movf	(??_updateVoltages+2)^(0+128),w
 18134  114E  00B7               	movwf	(updateVoltages@adcVal+2)^(0+128)
 18135  114F  082A               	movf	(??_updateVoltages+1)^(0+128),w
 18136  1150  00B6               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18137  1151  0829               	movf	??_updateVoltages^(0+128),w
 18138  1152  00B5               	movwf	updateVoltages@adcVal^(0+128)
 18139                           
 18140                           ;BQ76920.c: 226:      if(i<(5)){ send_I2C_ACK(); }else{send_I2C_NACK(); }
 18141  1153  083A               	movf	(updateVoltages@i+1)^(0+128),w
 18142  1154  3A80               	xorlw	128
 18143  1155  00A9               	movwf	??_updateVoltages^(0+128)
 18144  1156  3080               	movlw	128
 18145  1157  0229               	subwf	??_updateVoltages^(0+128),w
 18146  1158  1D03               	skipz
 18147  1159  295C               	goto	u11895
 18148  115A  3005               	movlw	5
 18149  115B  0239               	subwf	updateVoltages@i^(0+128),w
 18150  115C                     u11895:	
 18151  115C  1803               	skipnc
 18152  115D  2962               	goto	l8579
 18153  115E  31BE  2654  3190   	fcall	_send_I2C_ACK
 18154  1161  2965               	goto	l8581
 18155  1162                     l8579:	
 18156  1162  31BE  2642  3190   	fcall	_send_I2C_NACK
 18157  1165                     l8581:	
 18158                           
 18159                           ;BQ76920.c: 229:      cellVoltages[i] = adcVal * adcGain / 1000 + adcOffset;
 18160  1165  3000               	movlw	0
 18161  1166  0020               	movlb	0	; select bank0
 18162  1167  00A7               	movwf	___aldiv@divisor+3
 18163  1168  3000               	movlw	0
 18164  1169  00A6               	movwf	___aldiv@divisor+2
 18165  116A  3003               	movlw	3
 18166  116B  00A5               	movwf	___aldiv@divisor+1
 18167  116C  30E8               	movlw	232
 18168  116D  00A4               	movwf	___aldiv@divisor
 18169  116E  0023               	movlb	3	; select bank3
 18170  116F  084F               	movf	_adcGain^(0+384),w
 18171  1170  00F1               	movwf	___lmul@multiplier
 18172  1171  0850               	movf	(_adcGain+1)^(0+384),w
 18173  1172  00F2               	movwf	___lmul@multiplier+1
 18174  1173  0D89               	rlf	9,f
 18175  1174  3B89               	subwfb	9,f
 18176  1175  0989               	comf	9,f
 18177  1176  00F3               	movwf	___lmul@multiplier+2
 18178  1177  00F4               	movwf	___lmul@multiplier+3
 18179  1178  0021               	movlb	1	; select bank1
 18180  1179  0838               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18181  117A  00F8               	movwf	___lmul@multiplicand+3
 18182  117B  0837               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18183  117C  00F7               	movwf	___lmul@multiplicand+2
 18184  117D  0836               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18185  117E  00F6               	movwf	___lmul@multiplicand+1
 18186  117F  0835               	movf	updateVoltages@adcVal^(0+128),w
 18187  1180  00F5               	movwf	___lmul@multiplicand
 18188  1181  31B0  20DF  3190   	fcall	___lmul
 18189  1184  0874               	movf	?___lmul+3,w
 18190  1185  0020               	movlb	0	; select bank0
 18191  1186  00AB               	movwf	___aldiv@dividend+3
 18192  1187  0873               	movf	?___lmul+2,w
 18193  1188  00AA               	movwf	___aldiv@dividend+2
 18194  1189  0872               	movf	?___lmul+1,w
 18195  118A  00A9               	movwf	___aldiv@dividend+1
 18196  118B  0871               	movf	?___lmul,w
 18197  118C  00A8               	movwf	___aldiv@dividend
 18198  118D  31B7  277E  3190   	fcall	___aldiv
 18199  1190  0023               	movlb	3	; select bank3
 18200  1191  0844               	movf	_adcOffset^(0+384),w
 18201  1192  0020               	movlb	0	; select bank0
 18202  1193  0724               	addwf	?___aldiv,w
 18203  1194  0021               	movlb	1	; select bank1
 18204  1195  00A9               	movwf	??_updateVoltages^(0+128)
 18205  1196  0023               	movlb	3	; select bank3
 18206  1197  0845               	movf	(_adcOffset+1)^(0+384),w
 18207  1198  0020               	movlb	0	; select bank0
 18208  1199  3D25               	addwfc	?___aldiv+1,w
 18209  119A  0021               	movlb	1	; select bank1
 18210  119B  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18211  119C  3539               	lslf	updateVoltages@i^(0+128),w
 18212  119D  3E20               	addlw	(low (_cellVoltages| (0+512)))& (0+255)
 18213  119E  0086               	movwf	6
 18214  119F  3002               	movlw	2	; select bank4/5
 18215  11A0  0087               	movwf	7
 18216  11A1  0829               	movf	??_updateVoltages^(0+128),w
 18217  11A2  3FC0               	movwi [0]fsr1
 18218  11A3  082A               	movf	(??_updateVoltages+1)^(0+128),w
 18219  11A4  3FC1               	movwi [1]fsr1
 18220                           
 18221                           ;BQ76920.c: 238:     }
 18222  11A5  3001               	movlw	1
 18223  11A6  07B9               	addwf	updateVoltages@i^(0+128),f
 18224  11A7  3000               	movlw	0
 18225  11A8  3DBA               	addwfc	(updateVoltages@i+1)^(0+128),f
 18226  11A9  083A               	movf	(updateVoltages@i+1)^(0+128),w
 18227  11AA  3A80               	xorlw	128
 18228  11AB  00A9               	movwf	??_updateVoltages^(0+128)
 18229  11AC  3080               	movlw	128
 18230  11AD  0229               	subwf	??_updateVoltages^(0+128),w
 18231  11AE  1D03               	skipz
 18232  11AF  29B2               	goto	u11905
 18233  11B0  3005               	movlw	5
 18234  11B1  0239               	subwf	updateVoltages@i^(0+128),w
 18235  11B2                     u11905:	
 18236  11B2  1C03               	skipc
 18237  11B3  291A               	goto	l8567
 18238                           
 18239                           ;BQ76920.c: 239:     send_I2C_stopBit();
 18240  11B4  31BE  2629         	fcall	_send_I2C_stopBit
 18241  11B6  0008               	return
 18242  11B7                     __end_of_updateVoltages:	
 18243                           
 18244                           	psect	text64
 18245  3E54                     __ptext64:	
 18246 ;; *************** function _send_I2C_ACK *****************
 18247 ;; Defined at:
 18248 ;;		line 76 in file "I2C.c"
 18249 ;; Parameters:    Size  Location     Type
 18250 ;;		None
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;		None
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  1    wreg      void 
 18255 ;; Registers used:
 18256 ;;		None
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18266 ;;Total ram usage:        0 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:    1
 18269 ;; This function calls:
 18270 ;;		Nothing
 18271 ;; This function is called by:
 18272 ;;		_updateVoltages
 18273 ;; This function uses a non-reentrant model
 18274 ;;
 18275                           
 18276                           
 18277                           ;psect for function _send_I2C_ACK
 18278  3E54                     _send_I2C_ACK:	
 18279                           
 18280                           ;I2C.c: 77:     PIR1bits.SSP1IF = 0;
 18281                           
 18282                           ;incstack = 0
 18283                           ; Regs used in _send_I2C_ACK: []
 18284  3E54  0020               	movlb	0	; select bank0
 18285  3E55  1191               	bcf	17,3	;volatile
 18286                           
 18287                           ;I2C.c: 78:     SSPCON2bits.ACKDT = 0;
 18288  3E56  0024               	movlb	4	; select bank4
 18289  3E57  1296               	bcf	22,5	;volatile
 18290                           
 18291                           ;I2C.c: 79:     SSPCON2bits.ACKEN = 1;
 18292  3E58  1616               	bsf	22,4	;volatile
 18293  3E59                     l313:	
 18294                           ;I2C.c: 80:     while (!PIR1bits.SSP1IF);
 18295                           
 18296  3E59  0020               	movlb	0	; select bank0
 18297  3E5A  1991               	btfsc	17,3	;volatile
 18298  3E5B  0008               	return
 18299  3E5C  2E59               	goto	l313
 18300  3E5D                     __end_of_send_I2C_ACK:	
 18301                           
 18302                           	psect	text65
 18303  29FF                     __ptext65:	
 18304 ;; *************** function ___xxtofl *****************
 18305 ;; Defined at:
 18306 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18307 ;; Parameters:    Size  Location     Type
 18308 ;;  sign            1    wreg     unsigned char 
 18309 ;;  val             4    1[COMMON] long 
 18310 ;; Auto vars:     Size  Location     Type
 18311 ;;  sign            1    0[BANK0 ] unsigned char 
 18312 ;;  arg             4    2[BANK0 ] unsigned long 
 18313 ;;  exp             1    1[BANK0 ] unsigned char 
 18314 ;; Return value:  Size  Location     Type
 18315 ;;                  4    1[COMMON] unsigned char 
 18316 ;; Registers used:
 18317 ;;		wreg, status,2, status,0
 18318 ;; Tracked objects:
 18319 ;;		On entry : 0/0
 18320 ;;		On exit  : 0/0
 18321 ;;		Unchanged: 0/0
 18322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18324 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18326 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18327 ;;Total ram usage:       14 bytes
 18328 ;; Hardware stack levels used:    1
 18329 ;; Hardware stack levels required when called:    1
 18330 ;; This function calls:
 18331 ;;		Nothing
 18332 ;; This function is called by:
 18333 ;;		_setShortCircuitProtection
 18334 ;;		_setOverCurrentDischargeProtection
 18335 ;;		_updateVoltages
 18336 ;;		_AFE_getSetShortCircuitCurrent
 18337 ;;		_AFE_getOverCurrentDischargeCurrent
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341                           
 18342                           ;psect for function ___xxtofl
 18343  29FF                     ___xxtofl:	
 18344                           
 18345                           ;incstack = 0
 18346                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18347                           ;___xxtofl@sign stored from wreg
 18348  29FF  0020               	movlb	0	; select bank0
 18349  2A00  00A0               	movwf	___xxtofl@sign
 18350  2A01  0820               	movf	___xxtofl@sign,w
 18351  2A02  1D03               	btfss	3,2
 18352  2A03  1FF4               	btfss	___xxtofl@val+3,7
 18353  2A04  2A15               	goto	l6621
 18354  2A05  0971               	comf	___xxtofl@val,w
 18355  2A06  00A2               	movwf	___xxtofl@arg
 18356  2A07  0972               	comf	___xxtofl@val+1,w
 18357  2A08  00A3               	movwf	___xxtofl@arg+1
 18358  2A09  0973               	comf	___xxtofl@val+2,w
 18359  2A0A  00A4               	movwf	___xxtofl@arg+2
 18360  2A0B  0974               	comf	___xxtofl@val+3,w
 18361  2A0C  00A5               	movwf	___xxtofl@arg+3
 18362  2A0D  0AA2               	incf	___xxtofl@arg,f
 18363  2A0E  1903               	skipnz
 18364  2A0F  0AA3               	incf	___xxtofl@arg+1,f
 18365  2A10  1903               	skipnz
 18366  2A11  0AA4               	incf	___xxtofl@arg+2,f
 18367  2A12  1903               	skipnz
 18368  2A13  0AA5               	incf	___xxtofl@arg+3,f
 18369  2A14  2A1D               	goto	l1394
 18370  2A15                     l6621:	
 18371  2A15  0874               	movf	___xxtofl@val+3,w
 18372  2A16  00A5               	movwf	___xxtofl@arg+3
 18373  2A17  0873               	movf	___xxtofl@val+2,w
 18374  2A18  00A4               	movwf	___xxtofl@arg+2
 18375  2A19  0872               	movf	___xxtofl@val+1,w
 18376  2A1A  00A3               	movwf	___xxtofl@arg+1
 18377  2A1B  0871               	movf	___xxtofl@val,w
 18378  2A1C  00A2               	movwf	___xxtofl@arg
 18379  2A1D                     l1394:	
 18380  2A1D  0874               	movf	___xxtofl@val+3,w
 18381  2A1E  0473               	iorwf	___xxtofl@val+2,w
 18382  2A1F  0472               	iorwf	___xxtofl@val+1,w
 18383  2A20  0471               	iorwf	___xxtofl@val,w
 18384  2A21  1D03               	skipz
 18385  2A22  2A2C               	goto	l6627
 18386  2A23  3000               	movlw	0
 18387  2A24  00F4               	movwf	?___xxtofl+3
 18388  2A25  3000               	movlw	0
 18389  2A26  00F3               	movwf	?___xxtofl+2
 18390  2A27  3000               	movlw	0
 18391  2A28  00F2               	movwf	?___xxtofl+1
 18392  2A29  3000               	movlw	0
 18393  2A2A  00F1               	movwf	?___xxtofl
 18394  2A2B  0008               	return
 18395  2A2C                     l6627:	
 18396  2A2C  3096               	movlw	150
 18397  2A2D  00F5               	movwf	??___xxtofl
 18398  2A2E  0875               	movf	??___xxtofl,w
 18399  2A2F  00A1               	movwf	___xxtofl@exp
 18400  2A30                     l6631:	
 18401  2A30  30FE               	movlw	254
 18402  2A31  0525               	andwf	___xxtofl@arg+3,w
 18403  2A32  1903               	btfsc	3,2
 18404  2A33  2A53               	goto	l1400
 18405  2A34  3001               	movlw	1
 18406  2A35  00F5               	movwf	??___xxtofl
 18407  2A36  0875               	movf	??___xxtofl,w
 18408  2A37  07A1               	addwf	___xxtofl@exp,f
 18409  2A38  3001               	movlw	1
 18410  2A39                     u9155:	
 18411  2A39  36A5               	lsrf	___xxtofl@arg+3,f
 18412  2A3A  0CA4               	rrf	___xxtofl@arg+2,f
 18413  2A3B  0CA3               	rrf	___xxtofl@arg+1,f
 18414  2A3C  0CA2               	rrf	___xxtofl@arg,f
 18415  2A3D  0B89               	decfsz	9,f
 18416  2A3E  2A39               	goto	u9155
 18417  2A3F  2A30               	goto	l6631
 18418  2A40                     l6633:	
 18419  2A40  3001               	movlw	1
 18420  2A41  00F5               	movwf	??___xxtofl
 18421  2A42  0875               	movf	??___xxtofl,w
 18422  2A43  07A1               	addwf	___xxtofl@exp,f
 18423  2A44  3001               	movlw	1
 18424  2A45  07A2               	addwf	___xxtofl@arg,f
 18425  2A46  3000               	movlw	0
 18426  2A47  3DA3               	addwfc	___xxtofl@arg+1,f
 18427  2A48  3000               	movlw	0
 18428  2A49  3DA4               	addwfc	___xxtofl@arg+2,f
 18429  2A4A  3000               	movlw	0
 18430  2A4B  3DA5               	addwfc	___xxtofl@arg+3,f
 18431  2A4C  3001               	movlw	1
 18432  2A4D                     u9175:	
 18433  2A4D  36A5               	lsrf	___xxtofl@arg+3,f
 18434  2A4E  0CA4               	rrf	___xxtofl@arg+2,f
 18435  2A4F  0CA3               	rrf	___xxtofl@arg+1,f
 18436  2A50  0CA2               	rrf	___xxtofl@arg,f
 18437  2A51  0B89               	decfsz	9,f
 18438  2A52  2A4D               	goto	u9175
 18439  2A53                     l1400:	
 18440  2A53  30FF               	movlw	255
 18441  2A54  0525               	andwf	___xxtofl@arg+3,w
 18442  2A55  1903               	btfsc	3,2
 18443  2A56  2A65               	goto	l6641
 18444  2A57  2A40               	goto	l6633
 18445  2A58                     l6643:	
 18446  2A58  3002               	movlw	2
 18447  2A59  0221               	subwf	___xxtofl@exp,w
 18448  2A5A  1C03               	btfss	3,0
 18449  2A5B  2A67               	goto	l1407
 18450  2A5C  3001               	movlw	1
 18451  2A5D  02A1               	subwf	___xxtofl@exp,f
 18452  2A5E  3001               	movlw	1
 18453  2A5F                     u9195:	
 18454  2A5F  35A2               	lslf	___xxtofl@arg,f
 18455  2A60  0DA3               	rlf	___xxtofl@arg+1,f
 18456  2A61  0DA4               	rlf	___xxtofl@arg+2,f
 18457  2A62  0DA5               	rlf	___xxtofl@arg+3,f
 18458  2A63  0B89               	decfsz	9,f
 18459  2A64  2A5F               	goto	u9195
 18460  2A65                     l6641:	
 18461  2A65  1FA4               	btfss	___xxtofl@arg+2,7
 18462  2A66  2A58               	goto	l6643
 18463  2A67                     l1407:	
 18464  2A67  1821               	btfsc	___xxtofl@exp,0
 18465  2A68  2A71               	goto	l1408
 18466  2A69  30FF               	movlw	255
 18467  2A6A  05A2               	andwf	___xxtofl@arg,f
 18468  2A6B  30FF               	movlw	255
 18469  2A6C  05A3               	andwf	___xxtofl@arg+1,f
 18470  2A6D  307F               	movlw	127
 18471  2A6E  05A4               	andwf	___xxtofl@arg+2,f
 18472  2A6F  30FF               	movlw	255
 18473  2A70  05A5               	andwf	___xxtofl@arg+3,f
 18474  2A71                     l1408:	
 18475  2A71  1003               	clrc
 18476  2A72  0CA1               	rrf	___xxtofl@exp,f
 18477  2A73  0821               	movf	___xxtofl@exp,w
 18478  2A74  00F5               	movwf	??___xxtofl
 18479  2A75  01F6               	clrf	??___xxtofl+1
 18480  2A76  01F7               	clrf	??___xxtofl+2
 18481  2A77  01F8               	clrf	??___xxtofl+3
 18482  2A78  3018               	movlw	24
 18483  2A79                     u9235:	
 18484  2A79  35F5               	lslf	??___xxtofl,f
 18485  2A7A  0DF6               	rlf	??___xxtofl+1,f
 18486  2A7B  0DF7               	rlf	??___xxtofl+2,f
 18487  2A7C  0DF8               	rlf	??___xxtofl+3,f
 18488  2A7D  0B89               	decfsz	9,f
 18489  2A7E  2A79               	goto	u9235
 18490  2A7F  0875               	movf	??___xxtofl,w
 18491  2A80  04A2               	iorwf	___xxtofl@arg,f
 18492  2A81  0876               	movf	??___xxtofl+1,w
 18493  2A82  04A3               	iorwf	___xxtofl@arg+1,f
 18494  2A83  0877               	movf	??___xxtofl+2,w
 18495  2A84  04A4               	iorwf	___xxtofl@arg+2,f
 18496  2A85  0878               	movf	??___xxtofl+3,w
 18497  2A86  04A5               	iorwf	___xxtofl@arg+3,f
 18498  2A87  0820               	movf	___xxtofl@sign,w
 18499  2A88  1D03               	btfss	3,2
 18500  2A89  1FF4               	btfss	___xxtofl@val+3,7
 18501  2A8A  2A8C               	goto	l6655
 18502  2A8B  17A5               	bsf	___xxtofl@arg+3,7
 18503  2A8C                     l6655:	
 18504  2A8C  0825               	movf	___xxtofl@arg+3,w
 18505  2A8D  00F4               	movwf	?___xxtofl+3
 18506  2A8E  0824               	movf	___xxtofl@arg+2,w
 18507  2A8F  00F3               	movwf	?___xxtofl+2
 18508  2A90  0823               	movf	___xxtofl@arg+1,w
 18509  2A91  00F2               	movwf	?___xxtofl+1
 18510  2A92  0822               	movf	___xxtofl@arg,w
 18511  2A93  00F1               	movwf	?___xxtofl
 18512  2A94  0008               	return
 18513  2A95                     __end_of___xxtofl:	
 18514                           
 18515                           	psect	text66
 18516  30DF                     __ptext66:	
 18517 ;; *************** function ___lmul *****************
 18518 ;; Defined at:
 18519 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;  multiplier      4    1[COMMON] unsigned long 
 18522 ;;  multiplicand    4    5[COMMON] unsigned long 
 18523 ;; Auto vars:     Size  Location     Type
 18524 ;;  product         4    0[BANK0 ] unsigned long 
 18525 ;; Return value:  Size  Location     Type
 18526 ;;                  4    1[COMMON] unsigned long 
 18527 ;; Registers used:
 18528 ;;		wreg, status,2, status,0
 18529 ;; Tracked objects:
 18530 ;;		On entry : 0/0
 18531 ;;		On exit  : 0/0
 18532 ;;		Unchanged: 0/0
 18533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18534 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18535 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18537 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18538 ;;Total ram usage:       12 bytes
 18539 ;; Hardware stack levels used:    1
 18540 ;; Hardware stack levels required when called:    1
 18541 ;; This function calls:
 18542 ;;		Nothing
 18543 ;; This function is called by:
 18544 ;;		_setCellUndervoltageProtection
 18545 ;;		_setCellOvervoltageProtection
 18546 ;;		_updateVoltages
 18547 ;; This function uses a non-reentrant model
 18548 ;;
 18549                           
 18550                           
 18551                           ;psect for function ___lmul
 18552  30DF                     ___lmul:	
 18553                           
 18554                           ;incstack = 0
 18555                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 18556  30DF  3000               	movlw	0
 18557  30E0  0020               	movlb	0	; select bank0
 18558  30E1  00A3               	movwf	___lmul@product+3
 18559  30E2  3000               	movlw	0
 18560  30E3  00A2               	movwf	___lmul@product+2
 18561  30E4  3000               	movlw	0
 18562  30E5  00A1               	movwf	___lmul@product+1
 18563  30E6  3000               	movlw	0
 18564  30E7  00A0               	movwf	___lmul@product
 18565  30E8                     l8401:	
 18566  30E8  1C71               	btfss	___lmul@multiplier,0
 18567  30E9  28F3               	goto	l8405
 18568  30EA  0875               	movf	___lmul@multiplicand,w
 18569  30EB  0020               	movlb	0	; select bank0
 18570  30EC  07A0               	addwf	___lmul@product,f
 18571  30ED  0876               	movf	___lmul@multiplicand+1,w
 18572  30EE  3DA1               	addwfc	___lmul@product+1,f
 18573  30EF  0877               	movf	___lmul@multiplicand+2,w
 18574  30F0  3DA2               	addwfc	___lmul@product+2,f
 18575  30F1  0878               	movf	___lmul@multiplicand+3,w
 18576  30F2  3DA3               	addwfc	___lmul@product+3,f
 18577  30F3                     l8405:	
 18578  30F3  3001               	movlw	1
 18579  30F4                     u11655:	
 18580  30F4  35F5               	lslf	___lmul@multiplicand,f
 18581  30F5  0DF6               	rlf	___lmul@multiplicand+1,f
 18582  30F6  0DF7               	rlf	___lmul@multiplicand+2,f
 18583  30F7  0DF8               	rlf	___lmul@multiplicand+3,f
 18584  30F8  0B89               	decfsz	9,f
 18585  30F9  28F4               	goto	u11655
 18586  30FA  3001               	movlw	1
 18587  30FB                     u11665:	
 18588  30FB  36F4               	lsrf	___lmul@multiplier+3,f
 18589  30FC  0CF3               	rrf	___lmul@multiplier+2,f
 18590  30FD  0CF2               	rrf	___lmul@multiplier+1,f
 18591  30FE  0CF1               	rrf	___lmul@multiplier,f
 18592  30FF  0B89               	decfsz	9,f
 18593  3100  28FB               	goto	u11665
 18594  3101  0874               	movf	___lmul@multiplier+3,w
 18595  3102  0473               	iorwf	___lmul@multiplier+2,w
 18596  3103  0472               	iorwf	___lmul@multiplier+1,w
 18597  3104  0471               	iorwf	___lmul@multiplier,w
 18598  3105  1D03               	skipz
 18599  3106  28E8               	goto	l8401
 18600  3107  0020               	movlb	0	; select bank0
 18601  3108  0823               	movf	___lmul@product+3,w
 18602  3109  00F4               	movwf	?___lmul+3
 18603  310A  0822               	movf	___lmul@product+2,w
 18604  310B  00F3               	movwf	?___lmul+2
 18605  310C  0821               	movf	___lmul@product+1,w
 18606  310D  00F2               	movwf	?___lmul+1
 18607  310E  0820               	movf	___lmul@product,w
 18608  310F  00F1               	movwf	?___lmul
 18609  3110  0008               	return
 18610  3111                     __end_of___lmul:	
 18611                           
 18612                           	psect	text67
 18613  353B                     __ptext67:	
 18614 ;; *************** function ___fltol *****************
 18615 ;; Defined at:
 18616 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  f1              4    0[BANK1 ] unsigned long 
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;  exp1            1   11[COMMON] unsigned char 
 18621 ;;  sign1           1   10[COMMON] unsigned char 
 18622 ;; Return value:  Size  Location     Type
 18623 ;;                  4    0[BANK1 ] long 
 18624 ;; Registers used:
 18625 ;;		wreg, status,2, status,0
 18626 ;; Tracked objects:
 18627 ;;		On entry : 0/0
 18628 ;;		On exit  : 0/0
 18629 ;;		Unchanged: 0/0
 18630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18631 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18633 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18634 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18635 ;;Total ram usage:       11 bytes
 18636 ;; Hardware stack levels used:    1
 18637 ;; Hardware stack levels required when called:    1
 18638 ;; This function calls:
 18639 ;;		Nothing
 18640 ;; This function is called by:
 18641 ;;		_updateVoltages
 18642 ;;		_AFE_getSetShortCircuitCurrent
 18643 ;;		_AFE_getOverCurrentDischargeCurrent
 18644 ;;		_efgtoa
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           
 18649                           ;psect for function ___fltol
 18650  353B                     ___fltol:	
 18651                           
 18652                           ;incstack = 0
 18653                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18654  353B  1003               	clrc
 18655  353C  0021               	movlb	1	; select bank1
 18656  353D  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 18657  353E  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 18658  353F  00A4               	movwf	??___fltol^(0+128)
 18659  3540  0824               	movf	??___fltol^(0+128),w
 18660  3541  00FB               	movwf	___fltol@exp1
 18661  3542  087B               	movf	___fltol@exp1,w
 18662  3543  1D03               	btfss	3,2
 18663  3544  2D4E               	goto	l5041
 18664  3545                     l5037:	
 18665  3545  3000               	movlw	0
 18666  3546  00A3               	movwf	(?___fltol+3)^(0+128)
 18667  3547  3000               	movlw	0
 18668  3548  00A2               	movwf	(?___fltol+2)^(0+128)
 18669  3549  3000               	movlw	0
 18670  354A  00A1               	movwf	(?___fltol+1)^(0+128)
 18671  354B  3000               	movlw	0
 18672  354C  00A0               	movwf	?___fltol^(0+128)
 18673  354D  0008               	return
 18674  354E                     l5041:	
 18675  354E  0820               	movf	___fltol@f1^(0+128),w
 18676  354F  00A4               	movwf	??___fltol^(0+128)
 18677  3550  0821               	movf	(___fltol@f1+1)^(0+128),w
 18678  3551  00A5               	movwf	(??___fltol^(0+128)+1)
 18679  3552  0822               	movf	(___fltol@f1+2)^(0+128),w
 18680  3553  00A6               	movwf	(??___fltol^(0+128)+2)
 18681  3554  0823               	movf	(___fltol@f1+3)^(0+128),w
 18682  3555  00A7               	movwf	(??___fltol^(0+128)+3)
 18683  3556  301F               	movlw	31
 18684  3557                     u6315:	
 18685  3557  36A7               	lsrf	(??___fltol^(0+128)+3),f
 18686  3558  0CA6               	rrf	(??___fltol^(0+128)+2),f
 18687  3559  0CA5               	rrf	(??___fltol^(0+128)+1),f
 18688  355A  0CA4               	rrf	??___fltol^(0+128),f
 18689  355B  0B89               	decfsz	9,f
 18690  355C  2D57               	goto	u6315
 18691  355D  0824               	movf	??___fltol^(0+128),w
 18692  355E  00A8               	movwf	(??___fltol+4)^(0+128)
 18693  355F  0828               	movf	(??___fltol+4)^(0+128),w
 18694  3560  00FA               	movwf	___fltol@sign1
 18695  3561  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 18696  3562  30FF               	movlw	255
 18697  3563  05A0               	andwf	___fltol@f1^(0+128),f
 18698  3564  30FF               	movlw	255
 18699  3565  05A1               	andwf	(___fltol@f1+1)^(0+128),f
 18700  3566  30FF               	movlw	255
 18701  3567  05A2               	andwf	(___fltol@f1+2)^(0+128),f
 18702  3568  3000               	movlw	0
 18703  3569  05A3               	andwf	(___fltol@f1+3)^(0+128),f
 18704  356A  3096               	movlw	150
 18705  356B  02FB               	subwf	___fltol@exp1,f
 18706  356C  1FFB               	btfss	___fltol@exp1,7
 18707  356D  2D81               	goto	l5059
 18708  356E  087B               	movf	___fltol@exp1,w
 18709  356F  3A80               	xorlw	128
 18710  3570  3E97               	addlw	151
 18711  3571  1C03               	btfss	3,0
 18712  3572  2D45               	goto	l5037
 18713  3573                     l5057:	
 18714  3573  3001               	movlw	1
 18715  3574                     u6345:	
 18716  3574  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
 18717  3575  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 18718  3576  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 18719  3577  0CA0               	rrf	___fltol@f1^(0+128),f
 18720  3578  0B89               	decfsz	9,f
 18721  3579  2D74               	goto	u6345
 18722  357A  3001               	movlw	1
 18723  357B  00A4               	movwf	??___fltol^(0+128)
 18724  357C  0824               	movf	??___fltol^(0+128),w
 18725  357D  07FB               	addwf	___fltol@exp1,f
 18726  357E  1903               	btfsc	3,2
 18727  357F  2D92               	goto	l5067
 18728  3580  2D73               	goto	l5057
 18729  3581                     l5059:	
 18730  3581  3020               	movlw	32
 18731  3582  027B               	subwf	___fltol@exp1,w
 18732  3583  1803               	btfsc	3,0
 18733  3584  2D45               	goto	l5037
 18734  3585                     l1160:	
 18735  3585  087B               	movf	___fltol@exp1,w
 18736  3586  1903               	btfsc	3,2
 18737  3587  2D92               	goto	l5067
 18738  3588  3001               	movlw	1
 18739  3589                     u6375:	
 18740  3589  35A0               	lslf	___fltol@f1^(0+128),f
 18741  358A  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 18742  358B  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 18743  358C  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 18744  358D  0B89               	decfsz	9,f
 18745  358E  2D89               	goto	u6375
 18746  358F  3001               	movlw	1
 18747  3590  02FB               	subwf	___fltol@exp1,f
 18748  3591  2D85               	goto	l1160
 18749  3592                     l5067:	
 18750  3592  087A               	movf	___fltol@sign1,w
 18751  3593  1903               	btfsc	3,2
 18752  3594  0008               	return
 18753  3595  09A0               	comf	___fltol@f1^(0+128),f
 18754  3596  09A1               	comf	(___fltol@f1+1)^(0+128),f
 18755  3597  09A2               	comf	(___fltol@f1+2)^(0+128),f
 18756  3598  09A3               	comf	(___fltol@f1+3)^(0+128),f
 18757  3599  0AA0               	incf	___fltol@f1^(0+128),f
 18758  359A  1903               	skipnz
 18759  359B  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 18760  359C  1903               	skipnz
 18761  359D  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 18762  359E  1903               	skipnz
 18763  359F  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 18764  35A0  0008               	return
 18765  35A1                     __end_of___fltol:	
 18766                           
 18767                           	psect	text68
 18768  13A8                     __ptext68:	
 18769 ;; *************** function ___flmul *****************
 18770 ;; Defined at:
 18771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  b               4    6[BANK0 ] long 
 18774 ;;  a               4   10[BANK0 ] long 
 18775 ;; Auto vars:     Size  Location     Type
 18776 ;;  prod            4   26[BANK0 ] struct .
 18777 ;;  grs             4   20[BANK0 ] unsigned long 
 18778 ;;  temp            2   30[BANK0 ] struct .
 18779 ;;  bexp            1   25[BANK0 ] unsigned char 
 18780 ;;  aexp            1   24[BANK0 ] unsigned char 
 18781 ;;  sign            1   19[BANK0 ] unsigned char 
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  4    6[BANK0 ] unsigned char 
 18784 ;; Registers used:
 18785 ;;		wreg, status,2, status,0, pclath, cstack
 18786 ;; Tracked objects:
 18787 ;;		On entry : 0/0
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18791 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18792 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18794 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18795 ;;Total ram usage:       26 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:    2
 18798 ;; This function calls:
 18799 ;;		__Umul8_16
 18800 ;; This function is called by:
 18801 ;;		_setShortCircuitProtection
 18802 ;;		_setOverCurrentDischargeProtection
 18803 ;;		_updateVoltages
 18804 ;;		_efgtoa
 18805 ;; This function uses a non-reentrant model
 18806 ;;
 18807                           
 18808                           
 18809                           ;psect for function ___flmul
 18810  13A8                     ___flmul:	
 18811                           
 18812                           ;incstack = 0
 18813                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18814  13A8  0020               	movlb	0	; select bank0
 18815  13A9  0829               	movf	___flmul@b+3,w
 18816  13AA  3980               	andlw	128
 18817  13AB  00AE               	movwf	??___flmul
 18818  13AC  082E               	movf	??___flmul,w
 18819  13AD  00B3               	movwf	___flmul@sign
 18820  13AE  3529               	lslf	___flmul@b+3,w
 18821  13AF  00AE               	movwf	??___flmul
 18822  13B0  082E               	movf	??___flmul,w
 18823  13B1  00B9               	movwf	___flmul@bexp
 18824  13B2  1BA8               	btfsc	___flmul@b+2,7
 18825  13B3  1439               	bsf	___flmul@bexp,0
 18826  13B4  0839               	movf	___flmul@bexp,w
 18827  13B5  1903               	btfsc	3,2
 18828  13B6  2BC4               	goto	l5271
 18829  13B7  0A39               	incf	___flmul@bexp,w
 18830  13B8  1D03               	btfss	3,2
 18831  13B9  2BC2               	goto	l5269
 18832  13BA  3000               	movlw	0
 18833  13BB  00A9               	movwf	___flmul@b+3
 18834  13BC  3000               	movlw	0
 18835  13BD  00A8               	movwf	___flmul@b+2
 18836  13BE  3000               	movlw	0
 18837  13BF  00A7               	movwf	___flmul@b+1
 18838  13C0  3000               	movlw	0
 18839  13C1  00A6               	movwf	___flmul@b
 18840  13C2                     l5269:	
 18841  13C2  17A8               	bsf	___flmul@b+2,7
 18842  13C3  2BCC               	goto	l5273
 18843  13C4                     l5271:	
 18844  13C4  3000               	movlw	0
 18845  13C5  00A9               	movwf	___flmul@b+3
 18846  13C6  3000               	movlw	0
 18847  13C7  00A8               	movwf	___flmul@b+2
 18848  13C8  3000               	movlw	0
 18849  13C9  00A7               	movwf	___flmul@b+1
 18850  13CA  3000               	movlw	0
 18851  13CB  00A6               	movwf	___flmul@b
 18852  13CC                     l5273:	
 18853  13CC  082D               	movf	___flmul@a+3,w
 18854  13CD  3980               	andlw	128
 18855  13CE  00AE               	movwf	??___flmul
 18856  13CF  082E               	movf	??___flmul,w
 18857  13D0  06B3               	xorwf	___flmul@sign,f
 18858  13D1  352D               	lslf	___flmul@a+3,w
 18859  13D2  00AE               	movwf	??___flmul
 18860  13D3  082E               	movf	??___flmul,w
 18861  13D4  00B8               	movwf	___flmul@aexp
 18862  13D5  1BAC               	btfsc	___flmul@a+2,7
 18863  13D6  1438               	bsf	___flmul@aexp,0
 18864  13D7  0838               	movf	___flmul@aexp,w
 18865  13D8  1903               	btfsc	3,2
 18866  13D9  2BE7               	goto	l5289
 18867  13DA  0A38               	incf	___flmul@aexp,w
 18868  13DB  1D03               	btfss	3,2
 18869  13DC  2BE5               	goto	l5287
 18870  13DD  3000               	movlw	0
 18871  13DE  00AD               	movwf	___flmul@a+3
 18872  13DF  3000               	movlw	0
 18873  13E0  00AC               	movwf	___flmul@a+2
 18874  13E1  3000               	movlw	0
 18875  13E2  00AB               	movwf	___flmul@a+1
 18876  13E3  3000               	movlw	0
 18877  13E4  00AA               	movwf	___flmul@a
 18878  13E5                     l5287:	
 18879  13E5  17AC               	bsf	___flmul@a+2,7
 18880  13E6  2BEF               	goto	l5291
 18881  13E7                     l5289:	
 18882  13E7  3000               	movlw	0
 18883  13E8  00AD               	movwf	___flmul@a+3
 18884  13E9  3000               	movlw	0
 18885  13EA  00AC               	movwf	___flmul@a+2
 18886  13EB  3000               	movlw	0
 18887  13EC  00AB               	movwf	___flmul@a+1
 18888  13ED  3000               	movlw	0
 18889  13EE  00AA               	movwf	___flmul@a
 18890  13EF                     l5291:	
 18891  13EF  0838               	movf	___flmul@aexp,w
 18892  13F0  1D03               	btfss	3,2
 18893  13F1  0839               	movf	___flmul@bexp,w
 18894  13F2  1D03               	btfss	3,2
 18895  13F3  2BFD               	goto	l5299
 18896  13F4  3000               	movlw	0
 18897  13F5  00A9               	movwf	?___flmul+3
 18898  13F6  3000               	movlw	0
 18899  13F7  00A8               	movwf	?___flmul+2
 18900  13F8  3000               	movlw	0
 18901  13F9  00A7               	movwf	?___flmul+1
 18902  13FA  3000               	movlw	0
 18903  13FB  00A6               	movwf	?___flmul
 18904  13FC  0008               	return
 18905  13FD                     l5299:	
 18906  13FD  0826               	movf	___flmul@b,w
 18907  13FE  00AE               	movwf	??___flmul
 18908  13FF  082E               	movf	??___flmul,w
 18909  1400  00F1               	movwf	__Umul8_16@multiplicand
 18910  1401  082C               	movf	___flmul@a+2,w
 18911  1402  31BF  279E  3193   	fcall	__Umul8_16
 18912  1405  0872               	movf	?__Umul8_16+1,w
 18913  1406  0020               	movlb	0	; select bank0
 18914  1407  00BF               	movwf	___flmul@temp+1
 18915  1408  0871               	movf	?__Umul8_16,w
 18916  1409  00BE               	movwf	___flmul@temp
 18917  140A  083E               	movf	___flmul@temp,w
 18918  140B  00AE               	movwf	??___flmul
 18919  140C  01AF               	clrf	??___flmul+1
 18920  140D  01B0               	clrf	??___flmul+2
 18921  140E  01B1               	clrf	??___flmul+3
 18922  140F  0831               	movf	??___flmul+3,w
 18923  1410  00B7               	movwf	___flmul@grs+3
 18924  1411  0830               	movf	??___flmul+2,w
 18925  1412  00B6               	movwf	___flmul@grs+2
 18926  1413  082F               	movf	??___flmul+1,w
 18927  1414  00B5               	movwf	___flmul@grs+1
 18928  1415  082E               	movf	??___flmul,w
 18929  1416  00B4               	movwf	___flmul@grs
 18930  1417  083F               	movf	___flmul@temp+1,w
 18931  1418  00AE               	movwf	??___flmul
 18932  1419  01AF               	clrf	??___flmul+1
 18933  141A  01B0               	clrf	??___flmul+2
 18934  141B  01B1               	clrf	??___flmul+3
 18935  141C  0831               	movf	??___flmul+3,w
 18936  141D  00BD               	movwf	___flmul@prod+3
 18937  141E  0830               	movf	??___flmul+2,w
 18938  141F  00BC               	movwf	___flmul@prod+2
 18939  1420  082F               	movf	??___flmul+1,w
 18940  1421  00BB               	movwf	___flmul@prod+1
 18941  1422  082E               	movf	??___flmul,w
 18942  1423  00BA               	movwf	___flmul@prod
 18943  1424  0827               	movf	___flmul@b+1,w
 18944  1425  00AE               	movwf	??___flmul
 18945  1426  082E               	movf	??___flmul,w
 18946  1427  00F1               	movwf	__Umul8_16@multiplicand
 18947  1428  082B               	movf	___flmul@a+1,w
 18948  1429  31BF  279E  3193   	fcall	__Umul8_16
 18949  142C  0872               	movf	?__Umul8_16+1,w
 18950  142D  0020               	movlb	0	; select bank0
 18951  142E  00BF               	movwf	___flmul@temp+1
 18952  142F  0871               	movf	?__Umul8_16,w
 18953  1430  00BE               	movwf	___flmul@temp
 18954  1431  083E               	movf	___flmul@temp,w
 18955  1432  00AE               	movwf	??___flmul
 18956  1433  01AF               	clrf	??___flmul+1
 18957  1434  01B0               	clrf	??___flmul+2
 18958  1435  01B1               	clrf	??___flmul+3
 18959  1436  082E               	movf	??___flmul,w
 18960  1437  07B4               	addwf	___flmul@grs,f
 18961  1438  082F               	movf	??___flmul+1,w
 18962  1439  3DB5               	addwfc	___flmul@grs+1,f
 18963  143A  0830               	movf	??___flmul+2,w
 18964  143B  3DB6               	addwfc	___flmul@grs+2,f
 18965  143C  0831               	movf	??___flmul+3,w
 18966  143D  3DB7               	addwfc	___flmul@grs+3,f
 18967  143E  083F               	movf	___flmul@temp+1,w
 18968  143F  00AE               	movwf	??___flmul
 18969  1440  01AF               	clrf	??___flmul+1
 18970  1441  01B0               	clrf	??___flmul+2
 18971  1442  01B1               	clrf	??___flmul+3
 18972  1443  082E               	movf	??___flmul,w
 18973  1444  07BA               	addwf	___flmul@prod,f
 18974  1445  082F               	movf	??___flmul+1,w
 18975  1446  3DBB               	addwfc	___flmul@prod+1,f
 18976  1447  0830               	movf	??___flmul+2,w
 18977  1448  3DBC               	addwfc	___flmul@prod+2,f
 18978  1449  0831               	movf	??___flmul+3,w
 18979  144A  3DBD               	addwfc	___flmul@prod+3,f
 18980  144B  0828               	movf	___flmul@b+2,w
 18981  144C  00AE               	movwf	??___flmul
 18982  144D  082E               	movf	??___flmul,w
 18983  144E  00F1               	movwf	__Umul8_16@multiplicand
 18984  144F  082A               	movf	___flmul@a,w
 18985  1450  31BF  279E  3193   	fcall	__Umul8_16
 18986  1453  0872               	movf	?__Umul8_16+1,w
 18987  1454  0020               	movlb	0	; select bank0
 18988  1455  00BF               	movwf	___flmul@temp+1
 18989  1456  0871               	movf	?__Umul8_16,w
 18990  1457  00BE               	movwf	___flmul@temp
 18991  1458  083E               	movf	___flmul@temp,w
 18992  1459  00AE               	movwf	??___flmul
 18993  145A  01AF               	clrf	??___flmul+1
 18994  145B  01B0               	clrf	??___flmul+2
 18995  145C  01B1               	clrf	??___flmul+3
 18996  145D  082E               	movf	??___flmul,w
 18997  145E  07B4               	addwf	___flmul@grs,f
 18998  145F  082F               	movf	??___flmul+1,w
 18999  1460  3DB5               	addwfc	___flmul@grs+1,f
 19000  1461  0830               	movf	??___flmul+2,w
 19001  1462  3DB6               	addwfc	___flmul@grs+2,f
 19002  1463  0831               	movf	??___flmul+3,w
 19003  1464  3DB7               	addwfc	___flmul@grs+3,f
 19004  1465  083F               	movf	___flmul@temp+1,w
 19005  1466  00AE               	movwf	??___flmul
 19006  1467  01AF               	clrf	??___flmul+1
 19007  1468  01B0               	clrf	??___flmul+2
 19008  1469  01B1               	clrf	??___flmul+3
 19009  146A  082E               	movf	??___flmul,w
 19010  146B  07BA               	addwf	___flmul@prod,f
 19011  146C  082F               	movf	??___flmul+1,w
 19012  146D  3DBB               	addwfc	___flmul@prod+1,f
 19013  146E  0830               	movf	??___flmul+2,w
 19014  146F  3DBC               	addwfc	___flmul@prod+2,f
 19015  1470  0831               	movf	??___flmul+3,w
 19016  1471  3DBD               	addwfc	___flmul@prod+3,f
 19017  1472  3008               	movlw	8
 19018  1473                     u6865:	
 19019  1473  35B4               	lslf	___flmul@grs,f
 19020  1474  0DB5               	rlf	___flmul@grs+1,f
 19021  1475  0DB6               	rlf	___flmul@grs+2,f
 19022  1476  0DB7               	rlf	___flmul@grs+3,f
 19023  1477  0B89               	decfsz	9,f
 19024  1478  2C73               	goto	u6865
 19025  1479  0827               	movf	___flmul@b+1,w
 19026  147A  00AE               	movwf	??___flmul
 19027  147B  082E               	movf	??___flmul,w
 19028  147C  00F1               	movwf	__Umul8_16@multiplicand
 19029  147D  082A               	movf	___flmul@a,w
 19030  147E  31BF  279E  3193   	fcall	__Umul8_16
 19031  1481  0872               	movf	?__Umul8_16+1,w
 19032  1482  0020               	movlb	0	; select bank0
 19033  1483  00BF               	movwf	___flmul@temp+1
 19034  1484  0871               	movf	?__Umul8_16,w
 19035  1485  00BE               	movwf	___flmul@temp
 19036  1486  083E               	movf	___flmul@temp,w
 19037  1487  07B4               	addwf	___flmul@grs,f
 19038  1488  083F               	movf	___flmul@temp+1,w
 19039  1489  3DB5               	addwfc	___flmul@grs+1,f
 19040  148A  3000               	movlw	0
 19041  148B  3DB6               	addwfc	___flmul@grs+2,f
 19042  148C  3DB7               	addwfc	___flmul@grs+3,f
 19043  148D  0826               	movf	___flmul@b,w
 19044  148E  00AE               	movwf	??___flmul
 19045  148F  082E               	movf	??___flmul,w
 19046  1490  00F1               	movwf	__Umul8_16@multiplicand
 19047  1491  082B               	movf	___flmul@a+1,w
 19048  1492  31BF  279E  3193   	fcall	__Umul8_16
 19049  1495  0872               	movf	?__Umul8_16+1,w
 19050  1496  0020               	movlb	0	; select bank0
 19051  1497  00BF               	movwf	___flmul@temp+1
 19052  1498  0871               	movf	?__Umul8_16,w
 19053  1499  00BE               	movwf	___flmul@temp
 19054  149A  083E               	movf	___flmul@temp,w
 19055  149B  07B4               	addwf	___flmul@grs,f
 19056  149C  083F               	movf	___flmul@temp+1,w
 19057  149D  3DB5               	addwfc	___flmul@grs+1,f
 19058  149E  3000               	movlw	0
 19059  149F  3DB6               	addwfc	___flmul@grs+2,f
 19060  14A0  3DB7               	addwfc	___flmul@grs+3,f
 19061  14A1  3008               	movlw	8
 19062  14A2                     u6875:	
 19063  14A2  35B4               	lslf	___flmul@grs,f
 19064  14A3  0DB5               	rlf	___flmul@grs+1,f
 19065  14A4  0DB6               	rlf	___flmul@grs+2,f
 19066  14A5  0DB7               	rlf	___flmul@grs+3,f
 19067  14A6  0B89               	decfsz	9,f
 19068  14A7  2CA2               	goto	u6875
 19069  14A8  0826               	movf	___flmul@b,w
 19070  14A9  00AE               	movwf	??___flmul
 19071  14AA  082E               	movf	??___flmul,w
 19072  14AB  00F1               	movwf	__Umul8_16@multiplicand
 19073  14AC  082A               	movf	___flmul@a,w
 19074  14AD  31BF  279E  3193   	fcall	__Umul8_16
 19075  14B0  0872               	movf	?__Umul8_16+1,w
 19076  14B1  0020               	movlb	0	; select bank0
 19077  14B2  00BF               	movwf	___flmul@temp+1
 19078  14B3  0871               	movf	?__Umul8_16,w
 19079  14B4  00BE               	movwf	___flmul@temp
 19080  14B5  083E               	movf	___flmul@temp,w
 19081  14B6  07B4               	addwf	___flmul@grs,f
 19082  14B7  083F               	movf	___flmul@temp+1,w
 19083  14B8  3DB5               	addwfc	___flmul@grs+1,f
 19084  14B9  3000               	movlw	0
 19085  14BA  3DB6               	addwfc	___flmul@grs+2,f
 19086  14BB  3DB7               	addwfc	___flmul@grs+3,f
 19087  14BC  0827               	movf	___flmul@b+1,w
 19088  14BD  00AE               	movwf	??___flmul
 19089  14BE  082E               	movf	??___flmul,w
 19090  14BF  00F1               	movwf	__Umul8_16@multiplicand
 19091  14C0  082C               	movf	___flmul@a+2,w
 19092  14C1  31BF  279E  3193   	fcall	__Umul8_16
 19093  14C4  0872               	movf	?__Umul8_16+1,w
 19094  14C5  0020               	movlb	0	; select bank0
 19095  14C6  00BF               	movwf	___flmul@temp+1
 19096  14C7  0871               	movf	?__Umul8_16,w
 19097  14C8  00BE               	movwf	___flmul@temp
 19098  14C9  083E               	movf	___flmul@temp,w
 19099  14CA  07BA               	addwf	___flmul@prod,f
 19100  14CB  083F               	movf	___flmul@temp+1,w
 19101  14CC  3DBB               	addwfc	___flmul@prod+1,f
 19102  14CD  3000               	movlw	0
 19103  14CE  3DBC               	addwfc	___flmul@prod+2,f
 19104  14CF  3DBD               	addwfc	___flmul@prod+3,f
 19105  14D0  0828               	movf	___flmul@b+2,w
 19106  14D1  00AE               	movwf	??___flmul
 19107  14D2  082E               	movf	??___flmul,w
 19108  14D3  00F1               	movwf	__Umul8_16@multiplicand
 19109  14D4  082B               	movf	___flmul@a+1,w
 19110  14D5  31BF  279E  3193   	fcall	__Umul8_16
 19111  14D8  0872               	movf	?__Umul8_16+1,w
 19112  14D9  0020               	movlb	0	; select bank0
 19113  14DA  00BF               	movwf	___flmul@temp+1
 19114  14DB  0871               	movf	?__Umul8_16,w
 19115  14DC  00BE               	movwf	___flmul@temp
 19116  14DD  083E               	movf	___flmul@temp,w
 19117  14DE  07BA               	addwf	___flmul@prod,f
 19118  14DF  083F               	movf	___flmul@temp+1,w
 19119  14E0  3DBB               	addwfc	___flmul@prod+1,f
 19120  14E1  3000               	movlw	0
 19121  14E2  3DBC               	addwfc	___flmul@prod+2,f
 19122  14E3  3DBD               	addwfc	___flmul@prod+3,f
 19123  14E4  0828               	movf	___flmul@b+2,w
 19124  14E5  00AE               	movwf	??___flmul
 19125  14E6  082E               	movf	??___flmul,w
 19126  14E7  00F1               	movwf	__Umul8_16@multiplicand
 19127  14E8  082C               	movf	___flmul@a+2,w
 19128  14E9  31BF  279E  3193   	fcall	__Umul8_16
 19129  14EC  0872               	movf	?__Umul8_16+1,w
 19130  14ED  0020               	movlb	0	; select bank0
 19131  14EE  00BF               	movwf	___flmul@temp+1
 19132  14EF  0871               	movf	?__Umul8_16,w
 19133  14F0  00BE               	movwf	___flmul@temp
 19134  14F1  083E               	movf	___flmul@temp,w
 19135  14F2  00AE               	movwf	??___flmul
 19136  14F3  083F               	movf	___flmul@temp+1,w
 19137  14F4  00AF               	movwf	??___flmul+1
 19138  14F5  01B0               	clrf	??___flmul+2
 19139  14F6  01B1               	clrf	??___flmul+3
 19140  14F7  3008               	movlw	8
 19141  14F8                     u6885:	
 19142  14F8  35AE               	lslf	??___flmul,f
 19143  14F9  0DAF               	rlf	??___flmul+1,f
 19144  14FA  0DB0               	rlf	??___flmul+2,f
 19145  14FB  0DB1               	rlf	??___flmul+3,f
 19146  14FC  0B89               	decfsz	9,f
 19147  14FD  2CF8               	goto	u6885
 19148  14FE  082E               	movf	??___flmul,w
 19149  14FF  07BA               	addwf	___flmul@prod,f
 19150  1500  082F               	movf	??___flmul+1,w
 19151  1501  3DBB               	addwfc	___flmul@prod+1,f
 19152  1502  0830               	movf	??___flmul+2,w
 19153  1503  3DBC               	addwfc	___flmul@prod+2,f
 19154  1504  0831               	movf	??___flmul+3,w
 19155  1505  3DBD               	addwfc	___flmul@prod+3,f
 19156  1506  0834               	movf	___flmul@grs,w
 19157  1507  00AE               	movwf	??___flmul
 19158  1508  0835               	movf	___flmul@grs+1,w
 19159  1509  00AF               	movwf	??___flmul+1
 19160  150A  0836               	movf	___flmul@grs+2,w
 19161  150B  00B0               	movwf	??___flmul+2
 19162  150C  0837               	movf	___flmul@grs+3,w
 19163  150D  00B1               	movwf	??___flmul+3
 19164  150E  3018               	movlw	24
 19165  150F                     u6895:	
 19166  150F  36B1               	lsrf	??___flmul+3,f
 19167  1510  0CB0               	rrf	??___flmul+2,f
 19168  1511  0CAF               	rrf	??___flmul+1,f
 19169  1512  0CAE               	rrf	??___flmul,f
 19170  1513  0B89               	decfsz	9,f
 19171  1514  2D0F               	goto	u6895
 19172  1515  082E               	movf	??___flmul,w
 19173  1516  07BA               	addwf	___flmul@prod,f
 19174  1517  082F               	movf	??___flmul+1,w
 19175  1518  3DBB               	addwfc	___flmul@prod+1,f
 19176  1519  0830               	movf	??___flmul+2,w
 19177  151A  3DBC               	addwfc	___flmul@prod+2,f
 19178  151B  0831               	movf	??___flmul+3,w
 19179  151C  3DBD               	addwfc	___flmul@prod+3,f
 19180  151D  3008               	movlw	8
 19181  151E                     u6905:	
 19182  151E  35B4               	lslf	___flmul@grs,f
 19183  151F  0DB5               	rlf	___flmul@grs+1,f
 19184  1520  0DB6               	rlf	___flmul@grs+2,f
 19185  1521  0DB7               	rlf	___flmul@grs+3,f
 19186  1522  0B89               	decfsz	9,f
 19187  1523  2D1E               	goto	u6905
 19188  1524  0839               	movf	___flmul@bexp,w
 19189  1525  0738               	addwf	___flmul@aexp,w
 19190  1526  00AE               	movwf	??___flmul
 19191  1527  01AF               	clrf	??___flmul+1
 19192  1528  0DAF               	rlf	??___flmul+1,f
 19193  1529  082E               	movf	??___flmul,w
 19194  152A  3E82               	addlw	130
 19195  152B  00BE               	movwf	___flmul@temp
 19196  152C  30FF               	movlw	255
 19197  152D  3D2F               	addwfc	??___flmul+1,w
 19198  152E  00BF               	movwf	___flmul@temp+1
 19199  152F                     l5351:	
 19200  152F  1BBC               	btfsc	___flmul@prod+2,7
 19201  1530  2D46               	goto	l5353
 19202  1531  3001               	movlw	1
 19203  1532                     u6915:	
 19204  1532  35BA               	lslf	___flmul@prod,f
 19205  1533  0DBB               	rlf	___flmul@prod+1,f
 19206  1534  0DBC               	rlf	___flmul@prod+2,f
 19207  1535  0DBD               	rlf	___flmul@prod+3,f
 19208  1536  0B89               	decfsz	9,f
 19209  1537  2D32               	goto	u6915
 19210  1538  1BB7               	btfsc	___flmul@grs+3,7
 19211  1539  143A               	bsf	___flmul@prod,0
 19212  153A  3001               	movlw	1
 19213  153B                     u6935:	
 19214  153B  35B4               	lslf	___flmul@grs,f
 19215  153C  0DB5               	rlf	___flmul@grs+1,f
 19216  153D  0DB6               	rlf	___flmul@grs+2,f
 19217  153E  0DB7               	rlf	___flmul@grs+3,f
 19218  153F  0B89               	decfsz	9,f
 19219  1540  2D3B               	goto	u6935
 19220  1541  30FF               	movlw	255
 19221  1542  07BE               	addwf	___flmul@temp,f
 19222  1543  30FF               	movlw	255
 19223  1544  3DBF               	addwfc	___flmul@temp+1,f
 19224  1545  2D2F               	goto	l5351
 19225  1546                     l5353:	
 19226  1546  01B8               	clrf	___flmul@aexp
 19227  1547  1FB7               	btfss	___flmul@grs+3,7
 19228  1548  2D5F               	goto	l5363
 19229  1549  30FF               	movlw	255
 19230  154A  0534               	andwf	___flmul@grs,w
 19231  154B  00AE               	movwf	??___flmul
 19232  154C  30FF               	movlw	255
 19233  154D  0535               	andwf	___flmul@grs+1,w
 19234  154E  00AF               	movwf	??___flmul+1
 19235  154F  30FF               	movlw	255
 19236  1550  0536               	andwf	___flmul@grs+2,w
 19237  1551  00B0               	movwf	??___flmul+2
 19238  1552  307F               	movlw	127
 19239  1553  0537               	andwf	___flmul@grs+3,w
 19240  1554  00B1               	movwf	??___flmul+3
 19241  1555  0831               	movf	??___flmul+3,w
 19242  1556  0430               	iorwf	??___flmul+2,w
 19243  1557  042F               	iorwf	??___flmul+1,w
 19244  1558  042E               	iorwf	??___flmul,w
 19245  1559  1903               	skipnz
 19246  155A  183A               	btfsc	___flmul@prod,0
 19247  155B  2D5D               	goto	l5359
 19248  155C  2D5F               	goto	l5363
 19249  155D                     l5359:	
 19250  155D  01B8               	clrf	___flmul@aexp
 19251  155E  0AB8               	incf	___flmul@aexp,f
 19252  155F                     l5363:	
 19253  155F  0838               	movf	___flmul@aexp,w
 19254  1560  1903               	btfsc	3,2
 19255  1561  2D88               	goto	l5373
 19256  1562  3001               	movlw	1
 19257  1563  07BA               	addwf	___flmul@prod,f
 19258  1564  3000               	movlw	0
 19259  1565  3DBB               	addwfc	___flmul@prod+1,f
 19260  1566  3000               	movlw	0
 19261  1567  3DBC               	addwfc	___flmul@prod+2,f
 19262  1568  3000               	movlw	0
 19263  1569  3DBD               	addwfc	___flmul@prod+3,f
 19264  156A  1C3D               	btfss	___flmul@prod+3,0
 19265  156B  2D88               	goto	l5373
 19266  156C  083A               	movf	___flmul@prod,w
 19267  156D  00AE               	movwf	??___flmul
 19268  156E  083B               	movf	___flmul@prod+1,w
 19269  156F  00AF               	movwf	??___flmul+1
 19270  1570  083C               	movf	___flmul@prod+2,w
 19271  1571  00B0               	movwf	??___flmul+2
 19272  1572  083D               	movf	___flmul@prod+3,w
 19273  1573  00B1               	movwf	??___flmul+3
 19274  1574  3001               	movlw	1
 19275  1575  00B2               	movwf	??___flmul+4
 19276  1576                     u7005:	
 19277  1576  37B1               	asrf	??___flmul+3,f
 19278  1577  0CB0               	rrf	??___flmul+2,f
 19279  1578  0CAF               	rrf	??___flmul+1,f
 19280  1579  0CAE               	rrf	??___flmul,f
 19281  157A  0BB2               	decfsz	??___flmul+4,f
 19282  157B  2D76               	goto	u7005
 19283  157C  0831               	movf	??___flmul+3,w
 19284  157D  00BD               	movwf	___flmul@prod+3
 19285  157E  0830               	movf	??___flmul+2,w
 19286  157F  00BC               	movwf	___flmul@prod+2
 19287  1580  082F               	movf	??___flmul+1,w
 19288  1581  00BB               	movwf	___flmul@prod+1
 19289  1582  082E               	movf	??___flmul,w
 19290  1583  00BA               	movwf	___flmul@prod
 19291  1584  3001               	movlw	1
 19292  1585  07BE               	addwf	___flmul@temp,f
 19293  1586  3000               	movlw	0
 19294  1587  3DBF               	addwfc	___flmul@temp+1,f
 19295  1588                     l5373:	
 19296  1588  083F               	movf	___flmul@temp+1,w
 19297  1589  3A80               	xorlw	128
 19298  158A  00AE               	movwf	??___flmul
 19299  158B  3080               	movlw	128
 19300  158C  022E               	subwf	??___flmul,w
 19301  158D  1D03               	skipz
 19302  158E  2D91               	goto	u7015
 19303  158F  30FF               	movlw	255
 19304  1590  023E               	subwf	___flmul@temp,w
 19305  1591                     u7015:	
 19306  1591  1C03               	skipc
 19307  1592  2D9D               	goto	l5377
 19308  1593  307F               	movlw	127
 19309  1594  0020               	movlb	0	; select bank0
 19310  1595  00BD               	movwf	___flmul@prod+3
 19311  1596  3080               	movlw	128
 19312  1597  00BC               	movwf	___flmul@prod+2
 19313  1598  3000               	movlw	0
 19314  1599  00BB               	movwf	___flmul@prod+1
 19315  159A  3000               	movlw	0
 19316  159B  00BA               	movwf	___flmul@prod
 19317  159C  2DC7               	goto	l1368
 19318  159D                     l5377:	
 19319  159D  0020               	movlb	0	; select bank0
 19320  159E  083F               	movf	___flmul@temp+1,w
 19321  159F  3A80               	xorlw	128
 19322  15A0  00AE               	movwf	??___flmul
 19323  15A1  3080               	movlw	128
 19324  15A2  022E               	subwf	??___flmul,w
 19325  15A3  1D03               	skipz
 19326  15A4  2DA7               	goto	u7025
 19327  15A5  3001               	movlw	1
 19328  15A6  023E               	subwf	___flmul@temp,w
 19329  15A7                     u7025:	
 19330  15A7  1803               	skipnc
 19331  15A8  2DB4               	goto	l5383
 19332  15A9  3000               	movlw	0
 19333  15AA  0020               	movlb	0	; select bank0
 19334  15AB  00BD               	movwf	___flmul@prod+3
 19335  15AC  3000               	movlw	0
 19336  15AD  00BC               	movwf	___flmul@prod+2
 19337  15AE  3000               	movlw	0
 19338  15AF  00BB               	movwf	___flmul@prod+1
 19339  15B0  3000               	movlw	0
 19340  15B1  00BA               	movwf	___flmul@prod
 19341  15B2  01B3               	clrf	___flmul@sign
 19342  15B3  2DC7               	goto	l1368
 19343  15B4                     l5383:	
 19344  15B4  0020               	movlb	0	; select bank0
 19345  15B5  083E               	movf	___flmul@temp,w
 19346  15B6  00AE               	movwf	??___flmul
 19347  15B7  082E               	movf	??___flmul,w
 19348  15B8  00B9               	movwf	___flmul@bexp
 19349  15B9  30FF               	movlw	255
 19350  15BA  05BA               	andwf	___flmul@prod,f
 19351  15BB  30FF               	movlw	255
 19352  15BC  05BB               	andwf	___flmul@prod+1,f
 19353  15BD  307F               	movlw	127
 19354  15BE  05BC               	andwf	___flmul@prod+2,f
 19355  15BF  3000               	movlw	0
 19356  15C0  05BD               	andwf	___flmul@prod+3,f
 19357  15C1  1839               	btfsc	___flmul@bexp,0
 19358  15C2  17BC               	bsf	___flmul@prod+2,7
 19359  15C3  3639               	lsrf	___flmul@bexp,w
 19360  15C4  00AE               	movwf	??___flmul
 19361  15C5  082E               	movf	??___flmul,w
 19362  15C6  00BD               	movwf	___flmul@prod+3
 19363  15C7                     l1368:	
 19364  15C7  0833               	movf	___flmul@sign,w
 19365  15C8  00AE               	movwf	??___flmul
 19366  15C9  082E               	movf	??___flmul,w
 19367  15CA  04BD               	iorwf	___flmul@prod+3,f
 19368  15CB  083D               	movf	___flmul@prod+3,w
 19369  15CC  00A9               	movwf	?___flmul+3
 19370  15CD  083C               	movf	___flmul@prod+2,w
 19371  15CE  00A8               	movwf	?___flmul+2
 19372  15CF  083B               	movf	___flmul@prod+1,w
 19373  15D0  00A7               	movwf	?___flmul+1
 19374  15D1  083A               	movf	___flmul@prod,w
 19375  15D2  00A6               	movwf	?___flmul
 19376  15D3  0008               	return
 19377  15D4                     __end_of___flmul:	
 19378                           
 19379                           	psect	text69
 19380  3F9E                     __ptext69:	
 19381 ;; *************** function __Umul8_16 *****************
 19382 ;; Defined at:
 19383 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19384 ;; Parameters:    Size  Location     Type
 19385 ;;  multiplier      1    wreg     unsigned char 
 19386 ;;  multiplicand    1    1[COMMON] unsigned char 
 19387 ;; Auto vars:     Size  Location     Type
 19388 ;;  multiplier      1    9[COMMON] unsigned char 
 19389 ;;  word_mpld       2    7[COMMON] unsigned int 
 19390 ;;  product         2    5[COMMON] unsigned int 
 19391 ;; Return value:  Size  Location     Type
 19392 ;;                  2    1[COMMON] unsigned int 
 19393 ;; Registers used:
 19394 ;;		wreg, status,2, status,0
 19395 ;; Tracked objects:
 19396 ;;		On entry : 0/0
 19397 ;;		On exit  : 0/0
 19398 ;;		Unchanged: 0/0
 19399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19401 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19403 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19404 ;;Total ram usage:        9 bytes
 19405 ;; Hardware stack levels used:    1
 19406 ;; Hardware stack levels required when called:    1
 19407 ;; This function calls:
 19408 ;;		Nothing
 19409 ;; This function is called by:
 19410 ;;		___flmul
 19411 ;; This function uses a non-reentrant model
 19412 ;;
 19413                           
 19414                           
 19415                           ;psect for function __Umul8_16
 19416  3F9E                     __Umul8_16:	
 19417                           
 19418                           ;incstack = 0
 19419                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19420                           ;__Umul8_16@multiplier stored from wreg
 19421  3F9E  00F9               	movwf	__Umul8_16@multiplier
 19422  3F9F  01F5               	clrf	__Umul8_16@product
 19423  3FA0  01F6               	clrf	__Umul8_16@product+1
 19424  3FA1  0871               	movf	__Umul8_16@multiplicand,w
 19425  3FA2  00F3               	movwf	??__Umul8_16
 19426  3FA3  01F4               	clrf	??__Umul8_16+1
 19427  3FA4  0873               	movf	??__Umul8_16,w
 19428  3FA5  00F7               	movwf	__Umul8_16@word_mpld
 19429  3FA6  0874               	movf	??__Umul8_16+1,w
 19430  3FA7  00F8               	movwf	__Umul8_16@word_mpld+1
 19431  3FA8                     l4705:	
 19432  3FA8  1C79               	btfss	__Umul8_16@multiplier,0
 19433  3FA9  2FAE               	goto	l1578
 19434  3FAA  0877               	movf	__Umul8_16@word_mpld,w
 19435  3FAB  07F5               	addwf	__Umul8_16@product,f
 19436  3FAC  0878               	movf	__Umul8_16@word_mpld+1,w
 19437  3FAD  3DF6               	addwfc	__Umul8_16@product+1,f
 19438  3FAE                     l1578:	
 19439  3FAE  3001               	movlw	1
 19440  3FAF                     u5385:	
 19441  3FAF  35F7               	lslf	__Umul8_16@word_mpld,f
 19442  3FB0  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19443  3FB1  0B89               	decfsz	9,f
 19444  3FB2  2FAF               	goto	u5385
 19445  3FB3  1003               	clrc
 19446  3FB4  0CF9               	rrf	__Umul8_16@multiplier,f
 19447  3FB5  0879               	movf	__Umul8_16@multiplier,w
 19448  3FB6  1D03               	btfss	3,2
 19449  3FB7  2FA8               	goto	l4705
 19450  3FB8  0876               	movf	__Umul8_16@product+1,w
 19451  3FB9  00F2               	movwf	?__Umul8_16+1
 19452  3FBA  0875               	movf	__Umul8_16@product,w
 19453  3FBB  00F1               	movwf	?__Umul8_16
 19454  3FBC  0008               	return
 19455  3FBD                     __end_of__Umul8_16:	
 19456                           
 19457                           	psect	text70
 19458  1CA4                     __ptext70:	
 19459 ;; *************** function ___fldiv *****************
 19460 ;; Defined at:
 19461 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19462 ;; Parameters:    Size  Location     Type
 19463 ;;  a               4   32[BANK0 ] unsigned int 
 19464 ;;  b               4   36[BANK0 ] unsigned int 
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;  grs             4   52[BANK0 ] unsigned long 
 19467 ;;  rem             4   45[BANK0 ] unsigned long 
 19468 ;;  new_exp         2   50[BANK0 ] int 
 19469 ;;  aexp            1   57[BANK0 ] unsigned char 
 19470 ;;  bexp            1   56[BANK0 ] unsigned char 
 19471 ;;  sign            1   49[BANK0 ] unsigned char 
 19472 ;; Return value:  Size  Location     Type
 19473 ;;                  4   32[BANK0 ] unsigned char 
 19474 ;; Registers used:
 19475 ;;		wreg, status,2, status,0
 19476 ;; Tracked objects:
 19477 ;;		On entry : 0/0
 19478 ;;		On exit  : 0/0
 19479 ;;		Unchanged: 0/0
 19480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19481 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19482 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19483 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19485 ;;Total ram usage:       26 bytes
 19486 ;; Hardware stack levels used:    1
 19487 ;; Hardware stack levels required when called:    1
 19488 ;; This function calls:
 19489 ;;		Nothing
 19490 ;; This function is called by:
 19491 ;;		_setShortCircuitProtection
 19492 ;;		_setOverCurrentDischargeProtection
 19493 ;;		_updateVoltages
 19494 ;;		_AFE_getSetShortCircuitCurrent
 19495 ;;		_AFE_getOverCurrentDischargeCurrent
 19496 ;;		_efgtoa
 19497 ;; This function uses a non-reentrant model
 19498 ;;
 19499                           
 19500                           
 19501                           ;psect for function ___fldiv
 19502  1CA4                     ___fldiv:	
 19503                           
 19504                           ;incstack = 0
 19505                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19506  1CA4  0020               	movlb	0	; select bank0
 19507  1CA5  0847               	movf	___fldiv@b+3,w
 19508  1CA6  3980               	andlw	128
 19509  1CA7  00C8               	movwf	??___fldiv
 19510  1CA8  0848               	movf	??___fldiv,w
 19511  1CA9  00D1               	movwf	___fldiv@sign
 19512  1CAA  3547               	lslf	___fldiv@b+3,w
 19513  1CAB  00C8               	movwf	??___fldiv
 19514  1CAC  0848               	movf	??___fldiv,w
 19515  1CAD  00D8               	movwf	___fldiv@bexp
 19516  1CAE  1BC6               	btfsc	___fldiv@b+2,7
 19517  1CAF  1458               	bsf	___fldiv@bexp,0
 19518  1CB0  0858               	movf	___fldiv@bexp,w
 19519  1CB1  1903               	btfsc	3,2
 19520  1CB2  2CC1               	goto	l5133
 19521  1CB3  0A58               	incf	___fldiv@bexp,w
 19522  1CB4  1D03               	btfss	3,2
 19523  1CB5  2CBE               	goto	l5129
 19524  1CB6  3000               	movlw	0
 19525  1CB7  00C7               	movwf	___fldiv@b+3
 19526  1CB8  3000               	movlw	0
 19527  1CB9  00C6               	movwf	___fldiv@b+2
 19528  1CBA  3000               	movlw	0
 19529  1CBB  00C5               	movwf	___fldiv@b+1
 19530  1CBC  3000               	movlw	0
 19531  1CBD  00C4               	movwf	___fldiv@b
 19532  1CBE                     l5129:	
 19533  1CBE  17C6               	bsf	___fldiv@b+2,7
 19534  1CBF  01C7               	clrf	___fldiv@b+3
 19535  1CC0  2CC9               	goto	l5135
 19536  1CC1                     l5133:	
 19537  1CC1  3000               	movlw	0
 19538  1CC2  00C7               	movwf	___fldiv@b+3
 19539  1CC3  3000               	movlw	0
 19540  1CC4  00C6               	movwf	___fldiv@b+2
 19541  1CC5  3000               	movlw	0
 19542  1CC6  00C5               	movwf	___fldiv@b+1
 19543  1CC7  3000               	movlw	0
 19544  1CC8  00C4               	movwf	___fldiv@b
 19545  1CC9                     l5135:	
 19546  1CC9  0843               	movf	___fldiv@a+3,w
 19547  1CCA  3980               	andlw	128
 19548  1CCB  00C8               	movwf	??___fldiv
 19549  1CCC  0848               	movf	??___fldiv,w
 19550  1CCD  06D1               	xorwf	___fldiv@sign,f
 19551  1CCE  3543               	lslf	___fldiv@a+3,w
 19552  1CCF  00C8               	movwf	??___fldiv
 19553  1CD0  0848               	movf	??___fldiv,w
 19554  1CD1  00D9               	movwf	___fldiv@aexp
 19555  1CD2  1BC2               	btfsc	___fldiv@a+2,7
 19556  1CD3  1459               	bsf	___fldiv@aexp,0
 19557  1CD4  0859               	movf	___fldiv@aexp,w
 19558  1CD5  1903               	btfsc	3,2
 19559  1CD6  2CE5               	goto	l5153
 19560  1CD7  0A59               	incf	___fldiv@aexp,w
 19561  1CD8  1D03               	btfss	3,2
 19562  1CD9  2CE2               	goto	l5149
 19563  1CDA  3000               	movlw	0
 19564  1CDB  00C3               	movwf	___fldiv@a+3
 19565  1CDC  3000               	movlw	0
 19566  1CDD  00C2               	movwf	___fldiv@a+2
 19567  1CDE  3000               	movlw	0
 19568  1CDF  00C1               	movwf	___fldiv@a+1
 19569  1CE0  3000               	movlw	0
 19570  1CE1  00C0               	movwf	___fldiv@a
 19571  1CE2                     l5149:	
 19572  1CE2  17C2               	bsf	___fldiv@a+2,7
 19573  1CE3  01C3               	clrf	___fldiv@a+3
 19574  1CE4  2CED               	goto	l1316
 19575  1CE5                     l5153:	
 19576  1CE5  3000               	movlw	0
 19577  1CE6  00C3               	movwf	___fldiv@a+3
 19578  1CE7  3000               	movlw	0
 19579  1CE8  00C2               	movwf	___fldiv@a+2
 19580  1CE9  3000               	movlw	0
 19581  1CEA  00C1               	movwf	___fldiv@a+1
 19582  1CEB  3000               	movlw	0
 19583  1CEC  00C0               	movwf	___fldiv@a
 19584  1CED                     l1316:	
 19585  1CED  0843               	movf	___fldiv@a+3,w
 19586  1CEE  0442               	iorwf	___fldiv@a+2,w
 19587  1CEF  0441               	iorwf	___fldiv@a+1,w
 19588  1CF0  0440               	iorwf	___fldiv@a,w
 19589  1CF1  1D03               	skipz
 19590  1CF2  2D0C               	goto	l5163
 19591  1CF3  3000               	movlw	0
 19592  1CF4  00C7               	movwf	___fldiv@b+3
 19593  1CF5  3000               	movlw	0
 19594  1CF6  00C6               	movwf	___fldiv@b+2
 19595  1CF7  3000               	movlw	0
 19596  1CF8  00C5               	movwf	___fldiv@b+1
 19597  1CF9  3000               	movlw	0
 19598  1CFA  00C4               	movwf	___fldiv@b
 19599  1CFB  3080               	movlw	128
 19600  1CFC  04C6               	iorwf	___fldiv@b+2,f
 19601  1CFD  307F               	movlw	127
 19602  1CFE  04C7               	iorwf	___fldiv@b+3,f
 19603  1CFF                     L13:	
 19604  1CFF  0851               	movf	___fldiv@sign,w
 19605  1D00  00C8               	movwf	??___fldiv
 19606  1D01  0848               	movf	??___fldiv,w
 19607  1D02  04C7               	iorwf	___fldiv@b+3,f
 19608  1D03  0847               	movf	___fldiv@b+3,w
 19609  1D04  00C3               	movwf	?___fldiv+3
 19610  1D05  0846               	movf	___fldiv@b+2,w
 19611  1D06  00C2               	movwf	?___fldiv+2
 19612  1D07  0845               	movf	___fldiv@b+1,w
 19613  1D08  00C1               	movwf	?___fldiv+1
 19614  1D09  0844               	movf	___fldiv@b,w
 19615  1D0A  00C0               	movwf	?___fldiv
 19616  1D0B  0008               	return
 19617  1D0C                     l5163:	
 19618  1D0C  0858               	movf	___fldiv@bexp,w
 19619  1D0D  1D03               	btfss	3,2
 19620  1D0E  2D18               	goto	l5169
 19621  1D0F  3000               	movlw	0
 19622  1D10  00C3               	movwf	?___fldiv+3
 19623  1D11  3000               	movlw	0
 19624  1D12  00C2               	movwf	?___fldiv+2
 19625  1D13  3000               	movlw	0
 19626  1D14  00C1               	movwf	?___fldiv+1
 19627  1D15  3000               	movlw	0
 19628  1D16  00C0               	movwf	?___fldiv
 19629  1D17  0008               	return
 19630  1D18                     l5169:	
 19631  1D18  0858               	movf	___fldiv@bexp,w
 19632  1D19  00C8               	movwf	??___fldiv
 19633  1D1A  01C9               	clrf	??___fldiv+1
 19634  1D1B  0849               	movf	??___fldiv+1,w
 19635  1D1C  00CB               	movwf	??___fldiv+3
 19636  1D1D  0859               	movf	___fldiv@aexp,w
 19637  1D1E  0248               	subwf	??___fldiv,w
 19638  1D1F  00CA               	movwf	??___fldiv+2
 19639  1D20  1C03               	skipc
 19640  1D21  03CB               	decf	??___fldiv+3,f
 19641  1D22  084A               	movf	??___fldiv+2,w
 19642  1D23  3E7F               	addlw	127
 19643  1D24  00D2               	movwf	___fldiv@new_exp
 19644  1D25  3000               	movlw	0
 19645  1D26  3D4B               	addwfc	??___fldiv+3,w
 19646  1D27  00D3               	movwf	___fldiv@new_exp+1
 19647  1D28  0847               	movf	___fldiv@b+3,w
 19648  1D29  00D0               	movwf	___fldiv@rem+3
 19649  1D2A  0846               	movf	___fldiv@b+2,w
 19650  1D2B  00CF               	movwf	___fldiv@rem+2
 19651  1D2C  0845               	movf	___fldiv@b+1,w
 19652  1D2D  00CE               	movwf	___fldiv@rem+1
 19653  1D2E  0844               	movf	___fldiv@b,w
 19654  1D2F  00CD               	movwf	___fldiv@rem
 19655  1D30  3000               	movlw	0
 19656  1D31  00C7               	movwf	___fldiv@b+3
 19657  1D32  3000               	movlw	0
 19658  1D33  00C6               	movwf	___fldiv@b+2
 19659  1D34  3000               	movlw	0
 19660  1D35  00C5               	movwf	___fldiv@b+1
 19661  1D36  3000               	movlw	0
 19662  1D37  00C4               	movwf	___fldiv@b
 19663  1D38  3000               	movlw	0
 19664  1D39  00D7               	movwf	___fldiv@grs+3
 19665  1D3A  3000               	movlw	0
 19666  1D3B  00D6               	movwf	___fldiv@grs+2
 19667  1D3C  3000               	movlw	0
 19668  1D3D  00D5               	movwf	___fldiv@grs+1
 19669  1D3E  3000               	movlw	0
 19670  1D3F  00D4               	movwf	___fldiv@grs
 19671  1D40  01D9               	clrf	___fldiv@aexp
 19672  1D41                     l5197:	
 19673  1D41  301A               	movlw	26
 19674  1D42  0259               	subwf	___fldiv@aexp,w
 19675  1D43  1803               	btfsc	3,0
 19676  1D44  2D7D               	goto	l5199
 19677  1D45  0859               	movf	___fldiv@aexp,w
 19678  1D46  1903               	btfsc	3,2
 19679  1D47  2D5F               	goto	l5189
 19680  1D48  3001               	movlw	1
 19681  1D49                     u6585:	
 19682  1D49  35CD               	lslf	___fldiv@rem,f
 19683  1D4A  0DCE               	rlf	___fldiv@rem+1,f
 19684  1D4B  0DCF               	rlf	___fldiv@rem+2,f
 19685  1D4C  0DD0               	rlf	___fldiv@rem+3,f
 19686  1D4D  0B89               	decfsz	9,f
 19687  1D4E  2D49               	goto	u6585
 19688  1D4F  3001               	movlw	1
 19689  1D50                     u6595:	
 19690  1D50  35C4               	lslf	___fldiv@b,f
 19691  1D51  0DC5               	rlf	___fldiv@b+1,f
 19692  1D52  0DC6               	rlf	___fldiv@b+2,f
 19693  1D53  0DC7               	rlf	___fldiv@b+3,f
 19694  1D54  0B89               	decfsz	9,f
 19695  1D55  2D50               	goto	u6595
 19696  1D56  1BD7               	btfsc	___fldiv@grs+3,7
 19697  1D57  1444               	bsf	___fldiv@b,0
 19698  1D58  3001               	movlw	1
 19699  1D59                     u6615:	
 19700  1D59  35D4               	lslf	___fldiv@grs,f
 19701  1D5A  0DD5               	rlf	___fldiv@grs+1,f
 19702  1D5B  0DD6               	rlf	___fldiv@grs+2,f
 19703  1D5C  0DD7               	rlf	___fldiv@grs+3,f
 19704  1D5D  0B89               	decfsz	9,f
 19705  1D5E  2D59               	goto	u6615
 19706  1D5F                     l5189:	
 19707  1D5F  0843               	movf	___fldiv@a+3,w
 19708  1D60  0250               	subwf	___fldiv@rem+3,w
 19709  1D61  1D03               	skipz
 19710  1D62  2D6D               	goto	u6625
 19711  1D63  0842               	movf	___fldiv@a+2,w
 19712  1D64  024F               	subwf	___fldiv@rem+2,w
 19713  1D65  1D03               	skipz
 19714  1D66  2D6D               	goto	u6625
 19715  1D67  0841               	movf	___fldiv@a+1,w
 19716  1D68  024E               	subwf	___fldiv@rem+1,w
 19717  1D69  1D03               	skipz
 19718  1D6A  2D6D               	goto	u6625
 19719  1D6B  0840               	movf	___fldiv@a,w
 19720  1D6C  024D               	subwf	___fldiv@rem,w
 19721  1D6D                     u6625:	
 19722  1D6D  1C03               	skipc
 19723  1D6E  2D78               	goto	l5195
 19724  1D6F  1757               	bsf	___fldiv@grs+3,6
 19725  1D70  0840               	movf	___fldiv@a,w
 19726  1D71  02CD               	subwf	___fldiv@rem,f
 19727  1D72  0841               	movf	___fldiv@a+1,w
 19728  1D73  3BCE               	subwfb	___fldiv@rem+1,f
 19729  1D74  0842               	movf	___fldiv@a+2,w
 19730  1D75  3BCF               	subwfb	___fldiv@rem+2,f
 19731  1D76  0843               	movf	___fldiv@a+3,w
 19732  1D77  3BD0               	subwfb	___fldiv@rem+3,f
 19733  1D78                     l5195:	
 19734  1D78  3001               	movlw	1
 19735  1D79  00C8               	movwf	??___fldiv
 19736  1D7A  0848               	movf	??___fldiv,w
 19737  1D7B  07D9               	addwf	___fldiv@aexp,f
 19738  1D7C  2D41               	goto	l5197
 19739  1D7D                     l5199:	
 19740  1D7D  0850               	movf	___fldiv@rem+3,w
 19741  1D7E  044F               	iorwf	___fldiv@rem+2,w
 19742  1D7F  044E               	iorwf	___fldiv@rem+1,w
 19743  1D80  044D               	iorwf	___fldiv@rem,w
 19744  1D81  1D03               	btfss	3,2
 19745  1D82  1454               	bsf	___fldiv@grs,0
 19746  1D83                     l5213:	
 19747  1D83  1BC6               	btfsc	___fldiv@b+2,7
 19748  1D84  2D9A               	goto	l5215
 19749  1D85  3001               	movlw	1
 19750  1D86                     u6655:	
 19751  1D86  35C4               	lslf	___fldiv@b,f
 19752  1D87  0DC5               	rlf	___fldiv@b+1,f
 19753  1D88  0DC6               	rlf	___fldiv@b+2,f
 19754  1D89  0DC7               	rlf	___fldiv@b+3,f
 19755  1D8A  0B89               	decfsz	9,f
 19756  1D8B  2D86               	goto	u6655
 19757  1D8C  1BD7               	btfsc	___fldiv@grs+3,7
 19758  1D8D  1444               	bsf	___fldiv@b,0
 19759  1D8E  3001               	movlw	1
 19760  1D8F                     u6675:	
 19761  1D8F  35D4               	lslf	___fldiv@grs,f
 19762  1D90  0DD5               	rlf	___fldiv@grs+1,f
 19763  1D91  0DD6               	rlf	___fldiv@grs+2,f
 19764  1D92  0DD7               	rlf	___fldiv@grs+3,f
 19765  1D93  0B89               	decfsz	9,f
 19766  1D94  2D8F               	goto	u6675
 19767  1D95  30FF               	movlw	255
 19768  1D96  07D2               	addwf	___fldiv@new_exp,f
 19769  1D97  30FF               	movlw	255
 19770  1D98  3DD3               	addwfc	___fldiv@new_exp+1,f
 19771  1D99  2D83               	goto	l5213
 19772  1D9A                     l5215:	
 19773  1D9A  01D9               	clrf	___fldiv@aexp
 19774  1D9B  1FD7               	btfss	___fldiv@grs+3,7
 19775  1D9C  2DB3               	goto	l5225
 19776  1D9D  30FF               	movlw	255
 19777  1D9E  0554               	andwf	___fldiv@grs,w
 19778  1D9F  00C8               	movwf	??___fldiv
 19779  1DA0  30FF               	movlw	255
 19780  1DA1  0555               	andwf	___fldiv@grs+1,w
 19781  1DA2  00C9               	movwf	??___fldiv+1
 19782  1DA3  30FF               	movlw	255
 19783  1DA4  0556               	andwf	___fldiv@grs+2,w
 19784  1DA5  00CA               	movwf	??___fldiv+2
 19785  1DA6  307F               	movlw	127
 19786  1DA7  0557               	andwf	___fldiv@grs+3,w
 19787  1DA8  00CB               	movwf	??___fldiv+3
 19788  1DA9  084B               	movf	??___fldiv+3,w
 19789  1DAA  044A               	iorwf	??___fldiv+2,w
 19790  1DAB  0449               	iorwf	??___fldiv+1,w
 19791  1DAC  0448               	iorwf	??___fldiv,w
 19792  1DAD  1903               	skipnz
 19793  1DAE  1844               	btfsc	___fldiv@b,0
 19794  1DAF  2DB1               	goto	l5221
 19795  1DB0  2DB3               	goto	l5225
 19796  1DB1                     l5221:	
 19797  1DB1  01D9               	clrf	___fldiv@aexp
 19798  1DB2  0AD9               	incf	___fldiv@aexp,f
 19799  1DB3                     l5225:	
 19800  1DB3  0859               	movf	___fldiv@aexp,w
 19801  1DB4  1903               	btfsc	3,2
 19802  1DB5  2DDC               	goto	l5235
 19803  1DB6  3001               	movlw	1
 19804  1DB7  07C4               	addwf	___fldiv@b,f
 19805  1DB8  3000               	movlw	0
 19806  1DB9  3DC5               	addwfc	___fldiv@b+1,f
 19807  1DBA  3000               	movlw	0
 19808  1DBB  3DC6               	addwfc	___fldiv@b+2,f
 19809  1DBC  3000               	movlw	0
 19810  1DBD  3DC7               	addwfc	___fldiv@b+3,f
 19811  1DBE  1C47               	btfss	___fldiv@b+3,0
 19812  1DBF  2DDC               	goto	l5235
 19813  1DC0  0844               	movf	___fldiv@b,w
 19814  1DC1  00C8               	movwf	??___fldiv
 19815  1DC2  0845               	movf	___fldiv@b+1,w
 19816  1DC3  00C9               	movwf	??___fldiv+1
 19817  1DC4  0846               	movf	___fldiv@b+2,w
 19818  1DC5  00CA               	movwf	??___fldiv+2
 19819  1DC6  0847               	movf	___fldiv@b+3,w
 19820  1DC7  00CB               	movwf	??___fldiv+3
 19821  1DC8  3001               	movlw	1
 19822  1DC9  00CC               	movwf	??___fldiv+4
 19823  1DCA                     u6745:	
 19824  1DCA  37CB               	asrf	??___fldiv+3,f
 19825  1DCB  0CCA               	rrf	??___fldiv+2,f
 19826  1DCC  0CC9               	rrf	??___fldiv+1,f
 19827  1DCD  0CC8               	rrf	??___fldiv,f
 19828  1DCE  0BCC               	decfsz	??___fldiv+4,f
 19829  1DCF  2DCA               	goto	u6745
 19830  1DD0  084B               	movf	??___fldiv+3,w
 19831  1DD1  00C7               	movwf	___fldiv@b+3
 19832  1DD2  084A               	movf	??___fldiv+2,w
 19833  1DD3  00C6               	movwf	___fldiv@b+2
 19834  1DD4  0849               	movf	??___fldiv+1,w
 19835  1DD5  00C5               	movwf	___fldiv@b+1
 19836  1DD6  0848               	movf	??___fldiv,w
 19837  1DD7  00C4               	movwf	___fldiv@b
 19838  1DD8  3001               	movlw	1
 19839  1DD9  07D2               	addwf	___fldiv@new_exp,f
 19840  1DDA  3000               	movlw	0
 19841  1DDB  3DD3               	addwfc	___fldiv@new_exp+1,f
 19842  1DDC                     l5235:	
 19843  1DDC  0853               	movf	___fldiv@new_exp+1,w
 19844  1DDD  3A80               	xorlw	128
 19845  1DDE  00C8               	movwf	??___fldiv
 19846  1DDF  3080               	movlw	128
 19847  1DE0  0248               	subwf	??___fldiv,w
 19848  1DE1  1D03               	skipz
 19849  1DE2  2DE5               	goto	u6755
 19850  1DE3  30FF               	movlw	255
 19851  1DE4  0252               	subwf	___fldiv@new_exp,w
 19852  1DE5                     u6755:	
 19853  1DE5  1C03               	skipc
 19854  1DE6  2DF4               	goto	l1337
 19855  1DE7  30FF               	movlw	255
 19856  1DE8  0020               	movlb	0	; select bank0
 19857  1DE9  00D2               	movwf	___fldiv@new_exp
 19858  1DEA  3000               	movlw	0
 19859  1DEB  00D3               	movwf	___fldiv@new_exp+1
 19860  1DEC  3000               	movlw	0
 19861  1DED  00C7               	movwf	___fldiv@b+3
 19862  1DEE  3000               	movlw	0
 19863  1DEF  00C6               	movwf	___fldiv@b+2
 19864  1DF0  3000               	movlw	0
 19865  1DF1  00C5               	movwf	___fldiv@b+1
 19866  1DF2  3000               	movlw	0
 19867  1DF3  00C4               	movwf	___fldiv@b
 19868  1DF4                     l1337:	
 19869  1DF4  0020               	movlb	0	; select bank0
 19870  1DF5  0853               	movf	___fldiv@new_exp+1,w
 19871  1DF6  3A80               	xorlw	128
 19872  1DF7  00C8               	movwf	??___fldiv
 19873  1DF8  3080               	movlw	128
 19874  1DF9  0248               	subwf	??___fldiv,w
 19875  1DFA  1D03               	skipz
 19876  1DFB  2DFE               	goto	u6765
 19877  1DFC  3001               	movlw	1
 19878  1DFD  0252               	subwf	___fldiv@new_exp,w
 19879  1DFE                     u6765:	
 19880  1DFE  1803               	skipnc
 19881  1DFF  2E0C               	goto	l1338
 19882  1E00  0020               	movlb	0	; select bank0
 19883  1E01  01D2               	clrf	___fldiv@new_exp
 19884  1E02  01D3               	clrf	___fldiv@new_exp+1
 19885  1E03  3000               	movlw	0
 19886  1E04  00C7               	movwf	___fldiv@b+3
 19887  1E05  3000               	movlw	0
 19888  1E06  00C6               	movwf	___fldiv@b+2
 19889  1E07  3000               	movlw	0
 19890  1E08  00C5               	movwf	___fldiv@b+1
 19891  1E09  3000               	movlw	0
 19892  1E0A  00C4               	movwf	___fldiv@b
 19893  1E0B  01D1               	clrf	___fldiv@sign
 19894  1E0C                     l1338:	
 19895  1E0C  0020               	movlb	0	; select bank0
 19896  1E0D  0852               	movf	___fldiv@new_exp,w
 19897  1E0E  00C8               	movwf	??___fldiv
 19898  1E0F  0848               	movf	??___fldiv,w
 19899  1E10  00D8               	movwf	___fldiv@bexp
 19900  1E11  1C58               	btfss	___fldiv@bexp,0
 19901  1E12  2E15               	goto	l5249
 19902  1E13  17C6               	bsf	___fldiv@b+2,7
 19903  1E14  2E19               	goto	l1340
 19904  1E15                     l5249:	
 19905  1E15  307F               	movlw	127
 19906  1E16  00C8               	movwf	??___fldiv
 19907  1E17  0848               	movf	??___fldiv,w
 19908  1E18  05C6               	andwf	___fldiv@b+2,f
 19909  1E19                     l1340:	
 19910  1E19  3658               	lsrf	___fldiv@bexp,w
 19911  1E1A  00C8               	movwf	??___fldiv
 19912  1E1B  0848               	movf	??___fldiv,w
 19913  1E1C  00C7               	movwf	___fldiv@b+3
 19914  1E1D  2CFF               	goto	L13
 19915  1E1E                     __end_of___fldiv:	
 19916                           
 19917                           	psect	text71
 19918  1E1E                     __ptext71:	
 19919 ;; *************** function ___fladd *****************
 19920 ;; Defined at:
 19921 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 19922 ;; Parameters:    Size  Location     Type
 19923 ;;  b               4   58[BANK0 ] unsigned char 
 19924 ;;  a               4   62[BANK0 ] unsigned char 
 19925 ;; Auto vars:     Size  Location     Type
 19926 ;;  grs             1   77[BANK0 ] unsigned char 
 19927 ;;  bexp            1   76[BANK0 ] unsigned char 
 19928 ;;  aexp            1   75[BANK0 ] unsigned char 
 19929 ;;  signs           1   74[BANK0 ] unsigned char 
 19930 ;; Return value:  Size  Location     Type
 19931 ;;                  4   58[BANK0 ] unsigned char 
 19932 ;; Registers used:
 19933 ;;		wreg, status,2, status,0
 19934 ;; Tracked objects:
 19935 ;;		On entry : 0/0
 19936 ;;		On exit  : 0/0
 19937 ;;		Unchanged: 0/0
 19938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19942 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19943 ;;Total ram usage:       20 bytes
 19944 ;; Hardware stack levels used:    1
 19945 ;; Hardware stack levels required when called:    1
 19946 ;; This function calls:
 19947 ;;		Nothing
 19948 ;; This function is called by:
 19949 ;;		_updateVoltages
 19950 ;;		_efgtoa
 19951 ;;		___flsub
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           
 19956                           ;psect for function ___fladd
 19957  1E1E                     ___fladd:	
 19958                           
 19959                           ;incstack = 0
 19960                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19961  1E1E  0020               	movlb	0	; select bank0
 19962  1E1F  085D               	movf	___fladd@b+3,w
 19963  1E20  3980               	andlw	128
 19964  1E21  00E2               	movwf	??___fladd
 19965  1E22  0862               	movf	??___fladd,w
 19966  1E23  00EA               	movwf	___fladd@signs
 19967  1E24  355D               	lslf	___fladd@b+3,w
 19968  1E25  00E2               	movwf	??___fladd
 19969  1E26  0862               	movf	??___fladd,w
 19970  1E27  00EC               	movwf	___fladd@bexp
 19971  1E28  1BDC               	btfsc	___fladd@b+2,7
 19972  1E29  146C               	bsf	___fladd@bexp,0
 19973  1E2A  086C               	movf	___fladd@bexp,w
 19974  1E2B  1903               	btfsc	3,2
 19975  1E2C  2E3B               	goto	l4525
 19976  1E2D  0A6C               	incf	___fladd@bexp,w
 19977  1E2E  1D03               	btfss	3,2
 19978  1E2F  2E38               	goto	l4521
 19979  1E30  3000               	movlw	0
 19980  1E31  00DD               	movwf	___fladd@b+3
 19981  1E32  3000               	movlw	0
 19982  1E33  00DC               	movwf	___fladd@b+2
 19983  1E34  3000               	movlw	0
 19984  1E35  00DB               	movwf	___fladd@b+1
 19985  1E36  3000               	movlw	0
 19986  1E37  00DA               	movwf	___fladd@b
 19987  1E38                     l4521:	
 19988  1E38  17DC               	bsf	___fladd@b+2,7
 19989  1E39  01DD               	clrf	___fladd@b+3
 19990  1E3A  2E43               	goto	l4527
 19991  1E3B                     l4525:	
 19992  1E3B  3000               	movlw	0
 19993  1E3C  00DD               	movwf	___fladd@b+3
 19994  1E3D  3000               	movlw	0
 19995  1E3E  00DC               	movwf	___fladd@b+2
 19996  1E3F  3000               	movlw	0
 19997  1E40  00DB               	movwf	___fladd@b+1
 19998  1E41  3000               	movlw	0
 19999  1E42  00DA               	movwf	___fladd@b
 20000  1E43                     l4527:	
 20001  1E43  0861               	movf	___fladd@a+3,w
 20002  1E44  3980               	andlw	128
 20003  1E45  00E2               	movwf	??___fladd
 20004  1E46  0862               	movf	??___fladd,w
 20005  1E47  00EB               	movwf	___fladd@aexp
 20006  1E48  086B               	movf	___fladd@aexp,w
 20007  1E49  066A               	xorwf	___fladd@signs,w
 20008  1E4A  1D03               	btfss	3,2
 20009  1E4B  176A               	bsf	___fladd@signs,6
 20010  1E4C  3561               	lslf	___fladd@a+3,w
 20011  1E4D  00E2               	movwf	??___fladd
 20012  1E4E  0862               	movf	??___fladd,w
 20013  1E4F  00EB               	movwf	___fladd@aexp
 20014  1E50  1BE0               	btfsc	___fladd@a+2,7
 20015  1E51  146B               	bsf	___fladd@aexp,0
 20016  1E52  086B               	movf	___fladd@aexp,w
 20017  1E53  1903               	btfsc	3,2
 20018  1E54  2E63               	goto	l4549
 20019  1E55  0A6B               	incf	___fladd@aexp,w
 20020  1E56  1D03               	btfss	3,2
 20021  1E57  2E60               	goto	l4545
 20022  1E58  3000               	movlw	0
 20023  1E59  00E1               	movwf	___fladd@a+3
 20024  1E5A  3000               	movlw	0
 20025  1E5B  00E0               	movwf	___fladd@a+2
 20026  1E5C  3000               	movlw	0
 20027  1E5D  00DF               	movwf	___fladd@a+1
 20028  1E5E  3000               	movlw	0
 20029  1E5F  00DE               	movwf	___fladd@a
 20030  1E60                     l4545:	
 20031  1E60  17E0               	bsf	___fladd@a+2,7
 20032  1E61  01E1               	clrf	___fladd@a+3
 20033  1E62  2E6B               	goto	l1260
 20034  1E63                     l4549:	
 20035  1E63  3000               	movlw	0
 20036  1E64  00E1               	movwf	___fladd@a+3
 20037  1E65  3000               	movlw	0
 20038  1E66  00E0               	movwf	___fladd@a+2
 20039  1E67  3000               	movlw	0
 20040  1E68  00DF               	movwf	___fladd@a+1
 20041  1E69  3000               	movlw	0
 20042  1E6A  00DE               	movwf	___fladd@a
 20043  1E6B                     l1260:	
 20044  1E6B  086C               	movf	___fladd@bexp,w
 20045  1E6C  026B               	subwf	___fladd@aexp,w
 20046  1E6D  1803               	skipnc
 20047  1E6E  2EB1               	goto	l4585
 20048  1E6F  1F6A               	btfss	___fladd@signs,6
 20049  1E70  2E75               	goto	l4555
 20050  1E71  3080               	movlw	128
 20051  1E72  00E2               	movwf	??___fladd
 20052  1E73  0862               	movf	??___fladd,w
 20053  1E74  06EA               	xorwf	___fladd@signs,f
 20054  1E75                     l4555:	
 20055  1E75  086C               	movf	___fladd@bexp,w
 20056  1E76  00E2               	movwf	??___fladd
 20057  1E77  0862               	movf	??___fladd,w
 20058  1E78  00ED               	movwf	___fladd@grs
 20059  1E79  086B               	movf	___fladd@aexp,w
 20060  1E7A  00E2               	movwf	??___fladd
 20061  1E7B  0862               	movf	??___fladd,w
 20062  1E7C  00EC               	movwf	___fladd@bexp
 20063  1E7D  086D               	movf	___fladd@grs,w
 20064  1E7E  00E2               	movwf	??___fladd
 20065  1E7F  0862               	movf	??___fladd,w
 20066  1E80  00EB               	movwf	___fladd@aexp
 20067  1E81  085A               	movf	___fladd@b,w
 20068  1E82  00E2               	movwf	??___fladd
 20069  1E83  0862               	movf	??___fladd,w
 20070  1E84  00ED               	movwf	___fladd@grs
 20071  1E85  085E               	movf	___fladd@a,w
 20072  1E86  00E2               	movwf	??___fladd
 20073  1E87  0862               	movf	??___fladd,w
 20074  1E88  00DA               	movwf	___fladd@b
 20075  1E89  086D               	movf	___fladd@grs,w
 20076  1E8A  00E2               	movwf	??___fladd
 20077  1E8B  0862               	movf	??___fladd,w
 20078  1E8C  00DE               	movwf	___fladd@a
 20079  1E8D  085B               	movf	___fladd@b+1,w
 20080  1E8E  00E2               	movwf	??___fladd
 20081  1E8F  0862               	movf	??___fladd,w
 20082  1E90  00ED               	movwf	___fladd@grs
 20083  1E91  085F               	movf	___fladd@a+1,w
 20084  1E92  00E2               	movwf	??___fladd
 20085  1E93  0862               	movf	??___fladd,w
 20086  1E94  00DB               	movwf	___fladd@b+1
 20087  1E95  086D               	movf	___fladd@grs,w
 20088  1E96  00E2               	movwf	??___fladd
 20089  1E97  0862               	movf	??___fladd,w
 20090  1E98  00DF               	movwf	___fladd@a+1
 20091  1E99  085C               	movf	___fladd@b+2,w
 20092  1E9A  00E2               	movwf	??___fladd
 20093  1E9B  0862               	movf	??___fladd,w
 20094  1E9C  00ED               	movwf	___fladd@grs
 20095  1E9D  0860               	movf	___fladd@a+2,w
 20096  1E9E  00E2               	movwf	??___fladd
 20097  1E9F  0862               	movf	??___fladd,w
 20098  1EA0  00DC               	movwf	___fladd@b+2
 20099  1EA1  086D               	movf	___fladd@grs,w
 20100  1EA2  00E2               	movwf	??___fladd
 20101  1EA3  0862               	movf	??___fladd,w
 20102  1EA4  00E0               	movwf	___fladd@a+2
 20103  1EA5  085D               	movf	___fladd@b+3,w
 20104  1EA6  00E2               	movwf	??___fladd
 20105  1EA7  0862               	movf	??___fladd,w
 20106  1EA8  00ED               	movwf	___fladd@grs
 20107  1EA9  0861               	movf	___fladd@a+3,w
 20108  1EAA  00E2               	movwf	??___fladd
 20109  1EAB  0862               	movf	??___fladd,w
 20110  1EAC  00DD               	movwf	___fladd@b+3
 20111  1EAD  086D               	movf	___fladd@grs,w
 20112  1EAE  00E2               	movwf	??___fladd
 20113  1EAF  0862               	movf	??___fladd,w
 20114  1EB0  00E1               	movwf	___fladd@a+3
 20115  1EB1                     l4585:	
 20116  1EB1  01ED               	clrf	___fladd@grs
 20117  1EB2  086B               	movf	___fladd@aexp,w
 20118  1EB3  00E2               	movwf	??___fladd
 20119  1EB4  01E3               	clrf	??___fladd+1
 20120  1EB5  0863               	movf	??___fladd+1,w
 20121  1EB6  00E5               	movwf	??___fladd+3
 20122  1EB7  086C               	movf	___fladd@bexp,w
 20123  1EB8  0262               	subwf	??___fladd,w
 20124  1EB9  00E4               	movwf	??___fladd+2
 20125  1EBA  1C03               	skipc
 20126  1EBB  03E5               	decf	??___fladd+3,f
 20127  1EBC  0865               	movf	??___fladd+3,w
 20128  1EBD  3A80               	xorlw	128
 20129  1EBE  00E6               	movwf	??___fladd+4
 20130  1EBF  3080               	movlw	128
 20131  1EC0  0266               	subwf	??___fladd+4,w
 20132  1EC1  1D03               	skipz
 20133  1EC2  2EC5               	goto	u5035
 20134  1EC3  301A               	movlw	26
 20135  1EC4  0264               	subwf	??___fladd+2,w
 20136  1EC5                     u5035:	
 20137  1EC5  1C03               	skipc
 20138  1EC6  2EF9               	goto	l4603
 20139  1EC7  0020               	movlb	0	; select bank0
 20140  1EC8  085D               	movf	___fladd@b+3,w
 20141  1EC9  045C               	iorwf	___fladd@b+2,w
 20142  1ECA  045B               	iorwf	___fladd@b+1,w
 20143  1ECB  045A               	iorwf	___fladd@b,w
 20144  1ECC  1903               	btfsc	3,2
 20145  1ECD  2ED0               	goto	u5040
 20146  1ECE  3001               	movlw	1
 20147  1ECF  2ED1               	goto	u5050
 20148  1ED0                     u5040:	
 20149  1ED0  3000               	movlw	0
 20150  1ED1                     u5050:	
 20151  1ED1  00E2               	movwf	??___fladd
 20152  1ED2  0862               	movf	??___fladd,w
 20153  1ED3  00ED               	movwf	___fladd@grs
 20154  1ED4  3000               	movlw	0
 20155  1ED5  00DD               	movwf	___fladd@b+3
 20156  1ED6  3000               	movlw	0
 20157  1ED7  00DC               	movwf	___fladd@b+2
 20158  1ED8  3000               	movlw	0
 20159  1ED9  00DB               	movwf	___fladd@b+1
 20160  1EDA  3000               	movlw	0
 20161  1EDB  00DA               	movwf	___fladd@b
 20162  1EDC  086B               	movf	___fladd@aexp,w
 20163  1EDD  00E2               	movwf	??___fladd
 20164  1EDE  0862               	movf	??___fladd,w
 20165  1EDF  00EC               	movwf	___fladd@bexp
 20166  1EE0  2EFE               	goto	l1264
 20167  1EE1                     l1266:	
 20168  1EE1  1C6D               	btfss	___fladd@grs,0
 20169  1EE2  2EE9               	goto	l4593
 20170  1EE3  366D               	lsrf	___fladd@grs,w
 20171  1EE4  3801               	iorlw	1
 20172  1EE5  00E2               	movwf	??___fladd
 20173  1EE6  0862               	movf	??___fladd,w
 20174  1EE7  00ED               	movwf	___fladd@grs
 20175  1EE8  2EEB               	goto	l4595
 20176  1EE9                     l4593:	
 20177  1EE9  1003               	clrc
 20178  1EEA  0CED               	rrf	___fladd@grs,f
 20179  1EEB                     l4595:	
 20180  1EEB  185A               	btfsc	___fladd@b,0
 20181  1EEC  17ED               	bsf	___fladd@grs,7
 20182  1EED  3001               	movlw	1
 20183  1EEE  00E2               	movwf	??___fladd
 20184  1EEF                     u5085:	
 20185  1EEF  37DD               	asrf	___fladd@b+3,f
 20186  1EF0  0CDC               	rrf	___fladd@b+2,f
 20187  1EF1  0CDB               	rrf	___fladd@b+1,f
 20188  1EF2  0CDA               	rrf	___fladd@b,f
 20189  1EF3  0BE2               	decfsz	??___fladd& (0+127),f
 20190  1EF4  2EEF               	goto	u5085
 20191  1EF5  3001               	movlw	1
 20192  1EF6  00E2               	movwf	??___fladd
 20193  1EF7  0862               	movf	??___fladd,w
 20194  1EF8  07EC               	addwf	___fladd@bexp,f
 20195  1EF9                     l4603:	
 20196  1EF9  0020               	movlb	0	; select bank0
 20197  1EFA  086B               	movf	___fladd@aexp,w
 20198  1EFB  026C               	subwf	___fladd@bexp,w
 20199  1EFC  1C03               	skipc
 20200  1EFD  2EE1               	goto	l1266
 20201  1EFE                     l1264:	
 20202  1EFE  1B6A               	btfsc	___fladd@signs,6
 20203  1EFF  2F2F               	goto	l4629
 20204  1F00  086C               	movf	___fladd@bexp,w
 20205  1F01  1D03               	btfss	3,2
 20206  1F02  2F0C               	goto	l4611
 20207  1F03  3000               	movlw	0
 20208  1F04  00DD               	movwf	?___fladd+3
 20209  1F05  3000               	movlw	0
 20210  1F06  00DC               	movwf	?___fladd+2
 20211  1F07  3000               	movlw	0
 20212  1F08  00DB               	movwf	?___fladd+1
 20213  1F09  3000               	movlw	0
 20214  1F0A  00DA               	movwf	?___fladd
 20215  1F0B  0008               	return
 20216  1F0C                     l4611:	
 20217  1F0C  085E               	movf	___fladd@a,w
 20218  1F0D  07DA               	addwf	___fladd@b,f
 20219  1F0E  085F               	movf	___fladd@a+1,w
 20220  1F0F  3DDB               	addwfc	___fladd@b+1,f
 20221  1F10  0860               	movf	___fladd@a+2,w
 20222  1F11  3DDC               	addwfc	___fladd@b+2,f
 20223  1F12  0861               	movf	___fladd@a+3,w
 20224  1F13  3DDD               	addwfc	___fladd@b+3,f
 20225  1F14  1C5D               	btfss	___fladd@b+3,0
 20226  1F15  2FA9               	goto	l4663
 20227  1F16  1C6D               	btfss	___fladd@grs,0
 20228  1F17  2F1E               	goto	l4619
 20229  1F18  366D               	lsrf	___fladd@grs,w
 20230  1F19  3801               	iorlw	1
 20231  1F1A  00E2               	movwf	??___fladd
 20232  1F1B  0862               	movf	??___fladd,w
 20233  1F1C  00ED               	movwf	___fladd@grs
 20234  1F1D  2F20               	goto	l4621
 20235  1F1E                     l4619:	
 20236  1F1E  1003               	clrc
 20237  1F1F  0CED               	rrf	___fladd@grs,f
 20238  1F20                     l4621:	
 20239  1F20  185A               	btfsc	___fladd@b,0
 20240  1F21  17ED               	bsf	___fladd@grs,7
 20241  1F22  3001               	movlw	1
 20242  1F23  00E2               	movwf	??___fladd
 20243  1F24                     u5155:	
 20244  1F24  37DD               	asrf	___fladd@b+3,f
 20245  1F25  0CDC               	rrf	___fladd@b+2,f
 20246  1F26  0CDB               	rrf	___fladd@b+1,f
 20247  1F27  0CDA               	rrf	___fladd@b,f
 20248  1F28  0BE2               	decfsz	??___fladd& (0+127),f
 20249  1F29  2F24               	goto	u5155
 20250  1F2A  3001               	movlw	1
 20251  1F2B  00E2               	movwf	??___fladd
 20252  1F2C  0862               	movf	??___fladd,w
 20253  1F2D  07EC               	addwf	___fladd@bexp,f
 20254  1F2E  2FA9               	goto	l4663
 20255  1F2F                     l4629:	
 20256  1F2F  085D               	movf	___fladd@b+3,w
 20257  1F30  3A80               	xorlw	128
 20258  1F31  00E2               	movwf	??___fladd
 20259  1F32  0861               	movf	___fladd@a+3,w
 20260  1F33  3A80               	xorlw	128
 20261  1F34  0262               	subwf	??___fladd,w
 20262  1F35  1D03               	skipz
 20263  1F36  2F41               	goto	u5163
 20264  1F37  0860               	movf	___fladd@a+2,w
 20265  1F38  025C               	subwf	___fladd@b+2,w
 20266  1F39  1D03               	skipz
 20267  1F3A  2F41               	goto	u5163
 20268  1F3B  085F               	movf	___fladd@a+1,w
 20269  1F3C  025B               	subwf	___fladd@b+1,w
 20270  1F3D  1D03               	skipz
 20271  1F3E  2F41               	goto	u5163
 20272  1F3F  085E               	movf	___fladd@a,w
 20273  1F40  025A               	subwf	___fladd@b,w
 20274  1F41                     u5163:	
 20275  1F41  1803               	skipnc
 20276  1F42  2F79               	goto	l4639
 20277  1F43  30FF               	movlw	255
 20278  1F44  00E2               	movwf	??___fladd
 20279  1F45  30FF               	movlw	255
 20280  1F46  00E3               	movwf	??___fladd+1
 20281  1F47  30FF               	movlw	255
 20282  1F48  00E4               	movwf	??___fladd+2
 20283  1F49  30FF               	movlw	255
 20284  1F4A  00E5               	movwf	??___fladd+3
 20285  1F4B  085A               	movf	___fladd@b,w
 20286  1F4C  025E               	subwf	___fladd@a,w
 20287  1F4D  00E6               	movwf	??___fladd+4
 20288  1F4E  085B               	movf	___fladd@b+1,w
 20289  1F4F  3B5F               	subwfb	___fladd@a+1,w
 20290  1F50  00E7               	movwf	??___fladd+5
 20291  1F51  085C               	movf	___fladd@b+2,w
 20292  1F52  3B60               	subwfb	___fladd@a+2,w
 20293  1F53  00E8               	movwf	??___fladd+6
 20294  1F54  085D               	movf	___fladd@b+3,w
 20295  1F55  3B61               	subwfb	___fladd@a+3,w
 20296  1F56  00E9               	movwf	??___fladd+7
 20297  1F57  0866               	movf	??___fladd+4,w
 20298  1F58  07E2               	addwf	??___fladd,f
 20299  1F59  0867               	movf	??___fladd+5,w
 20300  1F5A  3DE3               	addwfc	??___fladd+1,f
 20301  1F5B  0868               	movf	??___fladd+6,w
 20302  1F5C  3DE4               	addwfc	??___fladd+2,f
 20303  1F5D  0869               	movf	??___fladd+7,w
 20304  1F5E  3DE5               	addwfc	??___fladd+3,f
 20305  1F5F  0865               	movf	??___fladd+3,w
 20306  1F60  00DD               	movwf	___fladd@b+3
 20307  1F61  0864               	movf	??___fladd+2,w
 20308  1F62  00DC               	movwf	___fladd@b+2
 20309  1F63  0863               	movf	??___fladd+1,w
 20310  1F64  00DB               	movwf	___fladd@b+1
 20311  1F65  0862               	movf	??___fladd,w
 20312  1F66  00DA               	movwf	___fladd@b
 20313  1F67  3080               	movlw	128
 20314  1F68  00E2               	movwf	??___fladd
 20315  1F69  0862               	movf	??___fladd,w
 20316  1F6A  06EA               	xorwf	___fladd@signs,f
 20317  1F6B  09ED               	comf	___fladd@grs,f
 20318  1F6C  0AED               	incf	___fladd@grs,f
 20319  1F6D  086D               	movf	___fladd@grs,w
 20320  1F6E  1D03               	btfss	3,2
 20321  1F6F  2F81               	goto	l1281
 20322  1F70  3001               	movlw	1
 20323  1F71  07DA               	addwf	___fladd@b,f
 20324  1F72  3000               	movlw	0
 20325  1F73  3DDB               	addwfc	___fladd@b+1,f
 20326  1F74  3000               	movlw	0
 20327  1F75  3DDC               	addwfc	___fladd@b+2,f
 20328  1F76  3000               	movlw	0
 20329  1F77  3DDD               	addwfc	___fladd@b+3,f
 20330  1F78  2F81               	goto	l1281
 20331  1F79                     l4639:	
 20332  1F79  085E               	movf	___fladd@a,w
 20333  1F7A  02DA               	subwf	___fladd@b,f
 20334  1F7B  085F               	movf	___fladd@a+1,w
 20335  1F7C  3BDB               	subwfb	___fladd@b+1,f
 20336  1F7D  0860               	movf	___fladd@a+2,w
 20337  1F7E  3BDC               	subwfb	___fladd@b+2,f
 20338  1F7F  0861               	movf	___fladd@a+3,w
 20339  1F80  3BDD               	subwfb	___fladd@b+3,f
 20340  1F81                     l1281:	
 20341  1F81  085D               	movf	___fladd@b+3,w
 20342  1F82  045C               	iorwf	___fladd@b+2,w
 20343  1F83  045B               	iorwf	___fladd@b+1,w
 20344  1F84  045A               	iorwf	___fladd@b,w
 20345  1F85  1D03               	skipz
 20346  1F86  2FA7               	goto	l4661
 20347  1F87  086D               	movf	___fladd@grs,w
 20348  1F88  1D03               	btfss	3,2
 20349  1F89  2FA7               	goto	l4661
 20350  1F8A  3000               	movlw	0
 20351  1F8B  00DD               	movwf	?___fladd+3
 20352  1F8C  3000               	movlw	0
 20353  1F8D  00DC               	movwf	?___fladd+2
 20354  1F8E  3000               	movlw	0
 20355  1F8F  00DB               	movwf	?___fladd+1
 20356  1F90  3000               	movlw	0
 20357  1F91  00DA               	movwf	?___fladd
 20358  1F92  0008               	return
 20359  1F93                     l4647:	
 20360  1F93  3001               	movlw	1
 20361  1F94                     u5205:	
 20362  1F94  35DA               	lslf	___fladd@b,f
 20363  1F95  0DDB               	rlf	___fladd@b+1,f
 20364  1F96  0DDC               	rlf	___fladd@b+2,f
 20365  1F97  0DDD               	rlf	___fladd@b+3,f
 20366  1F98  0B89               	decfsz	9,f
 20367  1F99  2F94               	goto	u5205
 20368  1F9A  1BED               	btfsc	___fladd@grs,7
 20369  1F9B  145A               	bsf	___fladd@b,0
 20370  1F9C  1C6D               	btfss	___fladd@grs,0
 20371  1F9D  2FA0               	goto	l4655
 20372  1F9E  1403               	setc
 20373  1F9F  2FA1               	goto	L14
 20374  1FA0                     l4655:	
 20375  1FA0  1003               	clrc
 20376  1FA1                     L14:	
 20377  1FA1  0DED               	rlf	___fladd@grs,f
 20378  1FA2  086C               	movf	___fladd@bexp,w
 20379  1FA3  1903               	btfsc	3,2
 20380  1FA4  2FA7               	goto	l4661
 20381  1FA5  3001               	movlw	1
 20382  1FA6  02EC               	subwf	___fladd@bexp,f
 20383  1FA7                     l4661:	
 20384  1FA7  1FDC               	btfss	___fladd@b+2,7
 20385  1FA8  2F93               	goto	l4647
 20386  1FA9                     l4663:	
 20387  1FA9  01EB               	clrf	___fladd@aexp
 20388  1FAA  1FED               	btfss	___fladd@grs,7
 20389  1FAB  2FB4               	goto	l4673
 20390  1FAC  086D               	movf	___fladd@grs,w
 20391  1FAD  397F               	andlw	127
 20392  1FAE  1903               	btfsc	3,2
 20393  1FAF  185A               	btfsc	___fladd@b,0
 20394  1FB0  2FB2               	goto	l4669
 20395  1FB1  2FB4               	goto	l4673
 20396  1FB2                     l4669:	
 20397  1FB2  01EB               	clrf	___fladd@aexp
 20398  1FB3  0AEB               	incf	___fladd@aexp,f
 20399  1FB4                     l4673:	
 20400  1FB4  086B               	movf	___fladd@aexp,w
 20401  1FB5  1903               	btfsc	3,2
 20402  1FB6  2FE0               	goto	l1294
 20403  1FB7  3001               	movlw	1
 20404  1FB8  07DA               	addwf	___fladd@b,f
 20405  1FB9  3000               	movlw	0
 20406  1FBA  3DDB               	addwfc	___fladd@b+1,f
 20407  1FBB  3000               	movlw	0
 20408  1FBC  3DDC               	addwfc	___fladd@b+2,f
 20409  1FBD  3000               	movlw	0
 20410  1FBE  3DDD               	addwfc	___fladd@b+3,f
 20411  1FBF  1C5D               	btfss	___fladd@b+3,0
 20412  1FC0  2FE0               	goto	l1294
 20413  1FC1  085A               	movf	___fladd@b,w
 20414  1FC2  00E2               	movwf	??___fladd
 20415  1FC3  085B               	movf	___fladd@b+1,w
 20416  1FC4  00E3               	movwf	??___fladd+1
 20417  1FC5  085C               	movf	___fladd@b+2,w
 20418  1FC6  00E4               	movwf	??___fladd+2
 20419  1FC7  085D               	movf	___fladd@b+3,w
 20420  1FC8  00E5               	movwf	??___fladd+3
 20421  1FC9  3001               	movlw	1
 20422  1FCA  00E6               	movwf	??___fladd+4
 20423  1FCB                     u5305:	
 20424  1FCB  37E5               	asrf	??___fladd+3,f
 20425  1FCC  0CE4               	rrf	??___fladd+2,f
 20426  1FCD  0CE3               	rrf	??___fladd+1,f
 20427  1FCE  0CE2               	rrf	??___fladd,f
 20428  1FCF  0BE6               	decfsz	??___fladd+4,f
 20429  1FD0  2FCB               	goto	u5305
 20430  1FD1  0865               	movf	??___fladd+3,w
 20431  1FD2  00DD               	movwf	___fladd@b+3
 20432  1FD3  0864               	movf	??___fladd+2,w
 20433  1FD4  00DC               	movwf	___fladd@b+2
 20434  1FD5  0863               	movf	??___fladd+1,w
 20435  1FD6  00DB               	movwf	___fladd@b+1
 20436  1FD7  0862               	movf	??___fladd,w
 20437  1FD8  00DA               	movwf	___fladd@b
 20438  1FD9  0A6C               	incf	___fladd@bexp,w
 20439  1FDA  1903               	btfsc	3,2
 20440  1FDB  2FE0               	goto	l1294
 20441  1FDC  3001               	movlw	1
 20442  1FDD  00E2               	movwf	??___fladd
 20443  1FDE  0862               	movf	??___fladd,w
 20444  1FDF  07EC               	addwf	___fladd@bexp,f
 20445  1FE0                     l1294:	
 20446  1FE0  0A6C               	incf	___fladd@bexp,w
 20447  1FE1  1D03               	btfss	3,2
 20448  1FE2  086C               	movf	___fladd@bexp,w
 20449  1FE3  1D03               	btfss	3,2
 20450  1FE4  2FF0               	goto	l4691
 20451  1FE5  3000               	movlw	0
 20452  1FE6  00DD               	movwf	___fladd@b+3
 20453  1FE7  3000               	movlw	0
 20454  1FE8  00DC               	movwf	___fladd@b+2
 20455  1FE9  3000               	movlw	0
 20456  1FEA  00DB               	movwf	___fladd@b+1
 20457  1FEB  3000               	movlw	0
 20458  1FEC  00DA               	movwf	___fladd@b
 20459  1FED  086C               	movf	___fladd@bexp,w
 20460  1FEE  1903               	btfsc	3,2
 20461  1FEF  01EA               	clrf	___fladd@signs
 20462  1FF0                     l4691:	
 20463  1FF0  1C6C               	btfss	___fladd@bexp,0
 20464  1FF1  2FF4               	goto	l4695
 20465  1FF2  17DC               	bsf	___fladd@b+2,7
 20466  1FF3  2FF8               	goto	l1302
 20467  1FF4                     l4695:	
 20468  1FF4  307F               	movlw	127
 20469  1FF5  00E2               	movwf	??___fladd
 20470  1FF6  0862               	movf	??___fladd,w
 20471  1FF7  05DC               	andwf	___fladd@b+2,f
 20472  1FF8                     l1302:	
 20473  1FF8  366C               	lsrf	___fladd@bexp,w
 20474  1FF9  00E2               	movwf	??___fladd
 20475  1FFA  0862               	movf	??___fladd,w
 20476  1FFB  00DD               	movwf	___fladd@b+3
 20477  1FFC  1FEA               	btfss	___fladd@signs,7
 20478  1FFD  0008               	return
 20479  1FFE  17DD               	bsf	___fladd@b+3,7
 20480  1FFF  0008               	return
 20481  2000                     __end_of___fladd:	
 20482                           
 20483                           	psect	text72
 20484  3E70                     __ptext72:	
 20485 ;; *************** function _updateCurrent *****************
 20486 ;; Defined at:
 20487 ;;		line 179 in file "BQ76920.c"
 20488 ;; Parameters:    Size  Location     Type
 20489 ;;		None
 20490 ;; Auto vars:     Size  Location     Type
 20491 ;;  adcVal          2    0        int 
 20492 ;;  sys_stat        1    0        struct regSYS_STAT
 20493 ;; Return value:  Size  Location     Type
 20494 ;;                  1    wreg      void 
 20495 ;; Registers used:
 20496 ;;		wreg, status,2, status,0, pclath, cstack
 20497 ;; Tracked objects:
 20498 ;;		On entry : 0/0
 20499 ;;		On exit  : 0/0
 20500 ;;		Unchanged: 0/0
 20501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20503 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20506 ;;Total ram usage:        3 bytes
 20507 ;; Hardware stack levels used:    1
 20508 ;; Hardware stack levels required when called:    3
 20509 ;; This function calls:
 20510 ;;		_readRegister
 20511 ;; This function is called by:
 20512 ;;		_AFE_UPDATE
 20513 ;; This function uses a non-reentrant model
 20514 ;;
 20515                           
 20516                           
 20517                           ;psect for function _updateCurrent
 20518  3E70                     _updateCurrent:	
 20519                           
 20520                           ;incstack = 0
 20521                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 20522  3E70  3018               	movlw	24
 20523  3E71  00F5               	movwf	readRegister@slaveAddress
 20524  3E72  3000               	movlw	0
 20525  3E73  00F6               	movwf	readRegister@slaveAddress+1
 20526  3E74  3000               	movlw	0
 20527  3E75  00F7               	movwf	readRegister@regAddress
 20528  3E76  00F8               	movwf	readRegister@regAddress+1
 20529  3E77  31B1  2178         	fcall	_readRegister
 20530  3E79  0008               	return
 20531  3E7A                     __end_of_updateCurrent:	
 20532                           
 20533                           	psect	text73
 20534  3178                     __ptext73:	
 20535 ;; *************** function _readRegister *****************
 20536 ;; Defined at:
 20537 ;;		line 107 in file "I2C.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  slaveAddress    2    5[COMMON] int 
 20540 ;;  regAddress      2    7[COMMON] int 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  recievedData    2    9[COMMON] int 
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  2    5[COMMON] int 
 20545 ;; Registers used:
 20546 ;;		wreg, status,2, status,0, pclath, cstack
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20556 ;;Total ram usage:        6 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:    2
 20559 ;; This function calls:
 20560 ;;		_read_I2C_data
 20561 ;;		_send_I2C_NACK
 20562 ;;		_send_I2C_controlByte
 20563 ;;		_send_I2C_data
 20564 ;;		_send_I2C_startBit
 20565 ;;		_send_I2C_stopBit
 20566 ;; This function is called by:
 20567 ;;		_beginAFEcommunication
 20568 ;;		_setCellUndervoltageProtection
 20569 ;;		_setCellOvervoltageProtection
 20570 ;;		_updateCurrent
 20571 ;;		_updateVoltages
 20572 ;;		_printotAFERegisters
 20573 ;; This function uses a non-reentrant model
 20574 ;;
 20575                           
 20576                           
 20577                           ;psect for function _readRegister
 20578  3178                     _readRegister:	
 20579                           
 20580                           ;I2C.c: 108:     int recievedData;;I2C.c: 109:     send_I2C_startBit();
 20581                           
 20582                           ;incstack = 0
 20583                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 20584  3178  31BE  2621  31B1   	fcall	_send_I2C_startBit
 20585                           
 20586                           ;I2C.c: 110:     send_I2C_controlByte(slaveAddress, 0);
 20587  317B  0876               	movf	readRegister@slaveAddress+1,w
 20588  317C  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 20589  317D  0875               	movf	readRegister@slaveAddress,w
 20590  317E  00F1               	movwf	send_I2C_controlByte@BlockAddress
 20591  317F  3000               	movlw	0
 20592  3180  00F3               	movwf	send_I2C_controlByte@RW_bit
 20593  3181  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 20594  3182  31BE  2666  31B1   	fcall	_send_I2C_controlByte
 20595                           
 20596                           ;I2C.c: 111:     send_I2C_data(regAddress);
 20597  3185  0878               	movf	readRegister@regAddress+1,w
 20598  3186  00F2               	movwf	send_I2C_data@databyte+1
 20599  3187  0877               	movf	readRegister@regAddress,w
 20600  3188  00F1               	movwf	send_I2C_data@databyte
 20601  3189  31BE  264B  31B1   	fcall	_send_I2C_data
 20602                           
 20603                           ;I2C.c: 112:     send_I2C_stopBit();
 20604  318C  31BE  2629  31B1   	fcall	_send_I2C_stopBit
 20605                           
 20606                           ;I2C.c: 113:     send_I2C_startBit();
 20607  318F  31BE  2621  31B1   	fcall	_send_I2C_startBit
 20608                           
 20609                           ;I2C.c: 114:     send_I2C_controlByte(slaveAddress, 1);
 20610  3192  0876               	movf	readRegister@slaveAddress+1,w
 20611  3193  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 20612  3194  0875               	movf	readRegister@slaveAddress,w
 20613  3195  00F1               	movwf	send_I2C_controlByte@BlockAddress
 20614  3196  3001               	movlw	1
 20615  3197  00F3               	movwf	send_I2C_controlByte@RW_bit
 20616  3198  3000               	movlw	0
 20617  3199  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 20618  319A  31BE  2666  31B1   	fcall	_send_I2C_controlByte
 20619                           
 20620                           ;I2C.c: 115:     recievedData = read_I2C_data();
 20621  319D  3198  2000  31B1   	fcall	_read_I2C_data
 20622  31A0  0872               	movf	?_read_I2C_data+1,w
 20623  31A1  00FA               	movwf	readRegister@recievedData+1
 20624  31A2  0871               	movf	?_read_I2C_data,w
 20625  31A3  00F9               	movwf	readRegister@recievedData
 20626                           
 20627                           ;I2C.c: 116:     send_I2C_NACK();
 20628  31A4  31BE  2642  31B1   	fcall	_send_I2C_NACK
 20629                           
 20630                           ;I2C.c: 117:     send_I2C_stopBit();
 20631  31A7  31BE  2629         	fcall	_send_I2C_stopBit
 20632                           
 20633                           ;I2C.c: 118:     return recievedData;
 20634  31A9  087A               	movf	readRegister@recievedData+1,w
 20635  31AA  00F6               	movwf	?_readRegister+1
 20636  31AB  0879               	movf	readRegister@recievedData,w
 20637  31AC  00F5               	movwf	?_readRegister
 20638  31AD  0008               	return
 20639  31AE                     __end_of_readRegister:	
 20640                           
 20641                           	psect	text74
 20642  3E29                     __ptext74:	
 20643 ;; *************** function _send_I2C_stopBit *****************
 20644 ;; Defined at:
 20645 ;;		line 70 in file "I2C.c"
 20646 ;; Parameters:    Size  Location     Type
 20647 ;;		None
 20648 ;; Auto vars:     Size  Location     Type
 20649 ;;		None
 20650 ;; Return value:  Size  Location     Type
 20651 ;;                  1    wreg      void 
 20652 ;; Registers used:
 20653 ;;		None
 20654 ;; Tracked objects:
 20655 ;;		On entry : 0/0
 20656 ;;		On exit  : 0/0
 20657 ;;		Unchanged: 0/0
 20658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20663 ;;Total ram usage:        0 bytes
 20664 ;; Hardware stack levels used:    1
 20665 ;; Hardware stack levels required when called:    1
 20666 ;; This function calls:
 20667 ;;		Nothing
 20668 ;; This function is called by:
 20669 ;;		_I2C_writeRegister
 20670 ;;		_readRegister
 20671 ;;		_updateVoltages
 20672 ;; This function uses a non-reentrant model
 20673 ;;
 20674                           
 20675                           
 20676                           ;psect for function _send_I2C_stopBit
 20677  3E29                     _send_I2C_stopBit:	
 20678                           
 20679                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 20680                           
 20681                           ;incstack = 0
 20682                           ; Regs used in _send_I2C_stopBit: []
 20683  3E29  0020               	movlb	0	; select bank0
 20684  3E2A  1191               	bcf	17,3	;volatile
 20685                           
 20686                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 20687  3E2B  0024               	movlb	4	; select bank4
 20688  3E2C  1516               	bsf	22,2	;volatile
 20689  3E2D                     l307:	
 20690                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 20691                           
 20692  3E2D  0020               	movlb	0	; select bank0
 20693  3E2E  1991               	btfsc	17,3	;volatile
 20694  3E2F  0008               	return
 20695  3E30  2E2D               	goto	l307
 20696  3E31                     __end_of_send_I2C_stopBit:	
 20697                           
 20698                           	psect	text75
 20699  3E21                     __ptext75:	
 20700 ;; *************** function _send_I2C_startBit *****************
 20701 ;; Defined at:
 20702 ;;		line 64 in file "I2C.c"
 20703 ;; Parameters:    Size  Location     Type
 20704 ;;		None
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;		None
 20707 ;; Return value:  Size  Location     Type
 20708 ;;                  1    wreg      void 
 20709 ;; Registers used:
 20710 ;;		None
 20711 ;; Tracked objects:
 20712 ;;		On entry : 0/0
 20713 ;;		On exit  : 0/0
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20720 ;;Total ram usage:        0 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; Hardware stack levels required when called:    1
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_I2C_writeRegister
 20727 ;;		_readRegister
 20728 ;;		_updateVoltages
 20729 ;; This function uses a non-reentrant model
 20730 ;;
 20731                           
 20732                           
 20733                           ;psect for function _send_I2C_startBit
 20734  3E21                     _send_I2C_startBit:	
 20735                           
 20736                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 20737                           
 20738                           ;incstack = 0
 20739                           ; Regs used in _send_I2C_startBit: []
 20740  3E21  0020               	movlb	0	; select bank0
 20741  3E22  1191               	bcf	17,3	;volatile
 20742                           
 20743                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 20744  3E23  0024               	movlb	4	; select bank4
 20745  3E24  1416               	bsf	22,0	;volatile
 20746  3E25                     l301:	
 20747                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 20748                           
 20749  3E25  0020               	movlb	0	; select bank0
 20750  3E26  1991               	btfsc	17,3	;volatile
 20751  3E27  0008               	return
 20752  3E28  2E25               	goto	l301
 20753  3E29                     __end_of_send_I2C_startBit:	
 20754                           
 20755                           	psect	text76
 20756  3E4B                     __ptext76:	
 20757 ;; *************** function _send_I2C_data *****************
 20758 ;; Defined at:
 20759 ;;		line 33 in file "I2C.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;  databyte        2    1[COMMON] unsigned int 
 20762 ;; Auto vars:     Size  Location     Type
 20763 ;;		None
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  1    wreg      void 
 20766 ;; Registers used:
 20767 ;;		wreg
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/0
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20777 ;;Total ram usage:        2 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:    1
 20780 ;; This function calls:
 20781 ;;		Nothing
 20782 ;; This function is called by:
 20783 ;;		_I2C_writeRegister
 20784 ;;		_readRegister
 20785 ;;		_updateVoltages
 20786 ;; This function uses a non-reentrant model
 20787 ;;
 20788                           
 20789                           
 20790                           ;psect for function _send_I2C_data
 20791  3E4B                     _send_I2C_data:	
 20792                           
 20793                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 20794                           
 20795                           ;incstack = 0
 20796                           ; Regs used in _send_I2C_data: [wreg]
 20797  3E4B  0020               	movlb	0	; select bank0
 20798  3E4C  1191               	bcf	17,3	;volatile
 20799                           
 20800                           ;I2C.c: 35:     SSPBUF = databyte;
 20801  3E4D  0871               	movf	send_I2C_data@databyte,w
 20802  3E4E  0024               	movlb	4	; select bank4
 20803  3E4F  0091               	movwf	17	;volatile
 20804  3E50                     l283:	
 20805                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 20806                           
 20807  3E50  0020               	movlb	0	; select bank0
 20808  3E51  1991               	btfsc	17,3	;volatile
 20809  3E52  0008               	return
 20810  3E53  2E50               	goto	l283
 20811  3E54                     __end_of_send_I2C_data:	
 20812                           
 20813                           	psect	text77
 20814  3E66                     __ptext77:	
 20815 ;; *************** function _send_I2C_controlByte *****************
 20816 ;; Defined at:
 20817 ;;		line 52 in file "I2C.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  BlockAddress    2    1[COMMON] unsigned int 
 20820 ;;  RW_bit          2    3[COMMON] unsigned int 
 20821 ;; Auto vars:     Size  Location     Type
 20822 ;;		None
 20823 ;; Return value:  Size  Location     Type
 20824 ;;                  1    wreg      void 
 20825 ;; Registers used:
 20826 ;;		wreg, status,2, status,0
 20827 ;; Tracked objects:
 20828 ;;		On entry : 0/0
 20829 ;;		On exit  : 0/0
 20830 ;;		Unchanged: 0/0
 20831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20836 ;;Total ram usage:        4 bytes
 20837 ;; Hardware stack levels used:    1
 20838 ;; Hardware stack levels required when called:    1
 20839 ;; This function calls:
 20840 ;;		Nothing
 20841 ;; This function is called by:
 20842 ;;		_I2C_writeRegister
 20843 ;;		_readRegister
 20844 ;;		_updateVoltages
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           
 20849                           ;psect for function _send_I2C_controlByte
 20850  3E66                     _send_I2C_controlByte:	
 20851                           
 20852                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 20853                           
 20854                           ;incstack = 0
 20855                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 20856  3E66  0020               	movlb	0	; select bank0
 20857  3E67  1191               	bcf	17,3	;volatile
 20858                           
 20859                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 20860  3E68  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 20861  3E69  0773               	addwf	send_I2C_controlByte@RW_bit,w
 20862  3E6A  0024               	movlb	4	; select bank4
 20863  3E6B  0091               	movwf	17	;volatile
 20864  3E6C                     l295:	
 20865                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 20866                           
 20867  3E6C  0020               	movlb	0	; select bank0
 20868  3E6D  1991               	btfsc	17,3	;volatile
 20869  3E6E  0008               	return
 20870  3E6F  2E6C               	goto	l295
 20871  3E70                     __end_of_send_I2C_controlByte:	
 20872                           
 20873                           	psect	text78
 20874  3E42                     __ptext78:	
 20875 ;; *************** function _send_I2C_NACK *****************
 20876 ;; Defined at:
 20877 ;;		line 83 in file "I2C.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;		None
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;		None
 20882 ;; Return value:  Size  Location     Type
 20883 ;;                  1    wreg      void 
 20884 ;; Registers used:
 20885 ;;		None
 20886 ;; Tracked objects:
 20887 ;;		On entry : 0/0
 20888 ;;		On exit  : 0/0
 20889 ;;		Unchanged: 0/0
 20890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20895 ;;Total ram usage:        0 bytes
 20896 ;; Hardware stack levels used:    1
 20897 ;; Hardware stack levels required when called:    1
 20898 ;; This function calls:
 20899 ;;		Nothing
 20900 ;; This function is called by:
 20901 ;;		_readRegister
 20902 ;;		_updateVoltages
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           
 20907                           ;psect for function _send_I2C_NACK
 20908  3E42                     _send_I2C_NACK:	
 20909                           
 20910                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 20911                           
 20912                           ;incstack = 0
 20913                           ; Regs used in _send_I2C_NACK: []
 20914  3E42  0020               	movlb	0	; select bank0
 20915  3E43  1191               	bcf	17,3	;volatile
 20916                           
 20917                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 20918  3E44  0024               	movlb	4	; select bank4
 20919  3E45  1696               	bsf	22,5	;volatile
 20920                           
 20921                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 20922  3E46  1616               	bsf	22,4	;volatile
 20923  3E47                     l319:	
 20924                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 20925                           
 20926  3E47  0020               	movlb	0	; select bank0
 20927  3E48  1991               	btfsc	17,3	;volatile
 20928  3E49  0008               	return
 20929  3E4A  2E47               	goto	l319
 20930  3E4B                     __end_of_send_I2C_NACK:	
 20931                           
 20932                           	psect	text79
 20933  1800                     __ptext79:	
 20934 ;; *************** function _read_I2C_data *****************
 20935 ;; Defined at:
 20936 ;;		line 42 in file "I2C.c"
 20937 ;; Parameters:    Size  Location     Type
 20938 ;;		None
 20939 ;; Auto vars:     Size  Location     Type
 20940 ;;		None
 20941 ;; Return value:  Size  Location     Type
 20942 ;;                  2    1[COMMON] unsigned int 
 20943 ;; Registers used:
 20944 ;;		wreg
 20945 ;; Tracked objects:
 20946 ;;		On entry : 0/0
 20947 ;;		On exit  : 0/0
 20948 ;;		Unchanged: 0/0
 20949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20953 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20954 ;;Total ram usage:        4 bytes
 20955 ;; Hardware stack levels used:    1
 20956 ;; Hardware stack levels required when called:    1
 20957 ;; This function calls:
 20958 ;;		Nothing
 20959 ;; This function is called by:
 20960 ;;		_readRegister
 20961 ;;		_updateVoltages
 20962 ;; This function uses a non-reentrant model
 20963 ;;
 20964                           
 20965                           
 20966                           ;psect for function _read_I2C_data
 20967  1800                     _read_I2C_data:	
 20968                           
 20969                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 20970                           
 20971                           ;incstack = 0
 20972                           ; Regs used in _read_I2C_data: [wreg]
 20973  1800  0020               	movlb	0	; select bank0
 20974  1801  1191               	bcf	17,3	;volatile
 20975                           
 20976                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 20977  1802  0024               	movlb	4	; select bank4
 20978  1803  1596               	bsf	22,3	;volatile
 20979  1804                     l289:	
 20980                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 20981                           
 20982  1804  0020               	movlb	0	; select bank0
 20983  1805  1D91               	btfss	17,3	;volatile
 20984  1806  2804               	goto	l289
 20985                           
 20986                           ;I2C.c: 46:     return (SSPBUF);
 20987  1807  0024               	movlb	4	; select bank4
 20988  1808  0811               	movf	17,w	;volatile
 20989  1809  00F3               	movwf	??_read_I2C_data
 20990  180A  01F4               	clrf	??_read_I2C_data+1
 20991  180B  0873               	movf	??_read_I2C_data,w
 20992  180C  00F1               	movwf	?_read_I2C_data
 20993  180D  0874               	movf	??_read_I2C_data+1,w
 20994  180E  00F2               	movwf	?_read_I2C_data+1
 20995  180F  0008               	return
 20996  1810                     __end_of_read_I2C_data:	
 20997                           
 20998                           	psect	text80
 20999  1004                     __ptext80:	
 21000 ;; *************** function _init_TMR1 *****************
 21001 ;; Defined at:
 21002 ;;		line 187 in file "main.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;		None
 21005 ;; Auto vars:     Size  Location     Type
 21006 ;;		None
 21007 ;; Return value:  Size  Location     Type
 21008 ;;                  1    wreg      void 
 21009 ;; Registers used:
 21010 ;;		wreg, status,2, status,0
 21011 ;; Tracked objects:
 21012 ;;		On entry : 0/0
 21013 ;;		On exit  : 0/0
 21014 ;;		Unchanged: 0/0
 21015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21020 ;;Total ram usage:        0 bytes
 21021 ;; Hardware stack levels used:    1
 21022 ;; Hardware stack levels required when called:    1
 21023 ;; This function calls:
 21024 ;;		Nothing
 21025 ;; This function is called by:
 21026 ;;		_main
 21027 ;; This function uses a non-reentrant model
 21028 ;;
 21029                           
 21030                           
 21031                           ;psect for function _init_TMR1
 21032  1004                     _init_TMR1:	
 21033                           
 21034                           ;main.c: 190:     T1CONbits.T1CKPS = 0b00;
 21035                           
 21036                           ;incstack = 0
 21037                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 21038  1004  30CF               	movlw	-49
 21039  1005  0020               	movlb	0	; select bank0
 21040  1006  0598               	andwf	24,f	;volatile
 21041                           
 21042                           ;main.c: 192:     TMR1 = 0;
 21043  1007  0196               	clrf	22	;volatile
 21044  1008  0197               	clrf	23	;volatile
 21045                           
 21046                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
 21047  1009  1418               	bsf	24,0	;volatile
 21048                           
 21049                           ;main.c: 196:     PIE1bits.TMR1IE = 1;
 21050  100A  0021               	movlb	1	; select bank1
 21051  100B  1411               	bsf	17,0	;volatile
 21052                           
 21053                           ;main.c: 198:     INTCONbits.PEIE = 1;
 21054  100C  170B               	bsf	11,6	;volatile
 21055                           
 21056                           ;main.c: 200:     (INTCONbits.GIE = 1);
 21057  100D  178B               	bsf	11,7	;volatile
 21058  100E  0008               	return
 21059  100F                     __end_of_init_TMR1:	
 21060                           
 21061                           	psect	text81
 21062  3E09                     __ptext81:	
 21063 ;; *************** function _init_RGB *****************
 21064 ;; Defined at:
 21065 ;;		line 6 in file "RGB.c"
 21066 ;; Parameters:    Size  Location     Type
 21067 ;;		None
 21068 ;; Auto vars:     Size  Location     Type
 21069 ;;		None
 21070 ;; Return value:  Size  Location     Type
 21071 ;;                  1    wreg      void 
 21072 ;; Registers used:
 21073 ;;		None
 21074 ;; Tracked objects:
 21075 ;;		On entry : 0/0
 21076 ;;		On exit  : 0/0
 21077 ;;		Unchanged: 0/0
 21078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21083 ;;Total ram usage:        0 bytes
 21084 ;; Hardware stack levels used:    1
 21085 ;; Hardware stack levels required when called:    1
 21086 ;; This function calls:
 21087 ;;		Nothing
 21088 ;; This function is called by:
 21089 ;;		_main
 21090 ;; This function uses a non-reentrant model
 21091 ;;
 21092                           
 21093                           
 21094                           ;psect for function _init_RGB
 21095  3E09                     _init_RGB:	
 21096                           
 21097                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 21098                           
 21099                           ;incstack = 0
 21100                           ; Regs used in _init_RGB: []
 21101  3E09  0022               	movlb	2	; select bank2
 21102  3E0A  160C               	bsf	12,4	;volatile
 21103                           
 21104                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 21105  3E0B  168C               	bsf	12,5	;volatile
 21106                           
 21107                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 21108  3E0C  1410               	bsf	16,0	;volatile
 21109  3E0D  0008               	return
 21110  3E0E                     __end_of_init_RGB:	
 21111                           
 21112                           	psect	text82
 21113  3E8E                     __ptext82:	
 21114 ;; *************** function _init_I2C *****************
 21115 ;; Defined at:
 21116 ;;		line 10 in file "I2C.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;		None
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;		None
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1    wreg      void 
 21123 ;; Registers used:
 21124 ;;		wreg, status,2, status,0
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/0
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;Total ram usage:        1 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; Hardware stack levels required when called:    1
 21137 ;; This function calls:
 21138 ;;		Nothing
 21139 ;; This function is called by:
 21140 ;;		_main
 21141 ;; This function uses a non-reentrant model
 21142 ;;
 21143                           
 21144                           
 21145                           ;psect for function _init_I2C
 21146  3E8E                     _init_I2C:	
 21147                           
 21148                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 21149                           
 21150                           ;incstack = 0
 21151                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 21152  3E8E  0024               	movlb	4	; select bank4
 21153  3E8F  0815               	movf	21,w	;volatile
 21154  3E90  39F0               	andlw	-16
 21155  3E91  3808               	iorlw	8
 21156  3E92  0095               	movwf	21	;volatile
 21157                           
 21158                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 21159  3E93  1695               	bsf	21,5	;volatile
 21160                           
 21161                           ;I2C.c: 24:     SSPADD = 39;
 21162  3E94  3027               	movlw	39
 21163  3E95  0092               	movwf	18	;volatile
 21164                           
 21165                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 21166  3E96  3034               	movlw	52
 21167  3E97  00F1               	movwf	??_init_I2C
 21168  3E98  30F2               	movlw	242
 21169  3E99                     u12087:	
 21170  3E99  0B89               	decfsz	9,f
 21171  3E9A  2E99               	goto	u12087
 21172  3E9B  0BF1               	decfsz	??_init_I2C,f
 21173  3E9C  2E99               	goto	u12087
 21174  3E9D  0008               	return
 21175  3E9E                     __end_of_init_I2C:	
 21176                           
 21177                           	psect	text83
 21178  31E7                     __ptext83:	
 21179 ;; *************** function _init_GPIO *****************
 21180 ;; Defined at:
 21181 ;;		line 204 in file "main.c"
 21182 ;; Parameters:    Size  Location     Type
 21183 ;;		None
 21184 ;; Auto vars:     Size  Location     Type
 21185 ;;		None
 21186 ;; Return value:  Size  Location     Type
 21187 ;;                  1    wreg      void 
 21188 ;; Registers used:
 21189 ;;		wreg, status,2, status,0
 21190 ;; Tracked objects:
 21191 ;;		On entry : 0/0
 21192 ;;		On exit  : 0/0
 21193 ;;		Unchanged: 0/0
 21194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21199 ;;Total ram usage:        0 bytes
 21200 ;; Hardware stack levels used:    1
 21201 ;; Hardware stack levels required when called:    1
 21202 ;; This function calls:
 21203 ;;		Nothing
 21204 ;; This function is called by:
 21205 ;;		_main
 21206 ;; This function uses a non-reentrant model
 21207 ;;
 21208                           
 21209                           
 21210                           ;psect for function _init_GPIO
 21211  31E7                     _init_GPIO:	
 21212                           
 21213                           ;main.c: 210:     TRISBbits.TRISB2 = 0;
 21214                           
 21215                           ;incstack = 0
 21216                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 21217  31E7  0021               	movlb	1	; select bank1
 21218  31E8  110D               	bcf	13,2	;volatile
 21219                           
 21220                           ;main.c: 211:     ANSELBbits.ANSB2 = 0;
 21221  31E9  0023               	movlb	3	; select bank3
 21222  31EA  110D               	bcf	13,2	;volatile
 21223                           
 21224                           ;main.c: 212:     TRISBbits.TRISB3 = 1;
 21225  31EB  0021               	movlb	1	; select bank1
 21226  31EC  158D               	bsf	13,3	;volatile
 21227                           
 21228                           ;main.c: 213:     ANSELBbits.ANSB3 = 0;
 21229  31ED  0023               	movlb	3	; select bank3
 21230  31EE  118D               	bcf	13,3	;volatile
 21231                           
 21232                           ;main.c: 218:     ANSELCbits.ANSC4 = 0;
 21233  31EF  120E               	bcf	14,4	;volatile
 21234                           
 21235                           ;main.c: 219:     ANSELCbits.ANSC5 = 0;
 21236  31F0  128E               	bcf	14,5	;volatile
 21237                           
 21238                           ;main.c: 220:     TRISCbits.TRISC4 = 1;
 21239  31F1  0021               	movlb	1	; select bank1
 21240  31F2  160E               	bsf	14,4	;volatile
 21241                           
 21242                           ;main.c: 221:     TRISCbits.TRISC5 = 1;
 21243  31F3  168E               	bsf	14,5	;volatile
 21244                           
 21245                           ;main.c: 230:     TRISAbits.TRISA4 = 0;
 21246  31F4  120C               	bcf	12,4	;volatile
 21247                           
 21248                           ;main.c: 231:     TRISAbits.TRISA5 = 0;
 21249  31F5  128C               	bcf	12,5	;volatile
 21250                           
 21251                           ;main.c: 232:     TRISEbits.TRISE0 = 0;
 21252  31F6  1010               	bcf	16,0	;volatile
 21253                           
 21254                           ;main.c: 237:     TRISAbits.TRISA3 = 0;
 21255  31F7  118C               	bcf	12,3	;volatile
 21256                           
 21257                           ;main.c: 238:     LATAbits.LATA3 = 0;
 21258  31F8  0022               	movlb	2	; select bank2
 21259  31F9  118C               	bcf	12,3	;volatile
 21260                           
 21261                           ;main.c: 244:     PPSLOCK = 0x55;
 21262  31FA  3055               	movlw	85
 21263  31FB  003C               	movlb	28	; select bank28
 21264  31FC  008F               	movwf	15	;volsfr
 21265                           
 21266                           ;main.c: 245:     PPSLOCK = 0xAA;
 21267  31FD  30AA               	movlw	170
 21268  31FE  008F               	movwf	15	;volsfr
 21269                           
 21270                           ;main.c: 246:     PPSLOCKbits.PPSLOCKED = 0x00;
 21271  31FF  100F               	bcf	15,0	;volsfr
 21272                           
 21273                           ;main.c: 250:     RC4PPSbits.RC4PPS = 0x0011;
 21274  3200  003D               	movlb	29	; select bank29
 21275  3201  0824               	movf	36,w	;volatile
 21276  3202  39E0               	andlw	-32
 21277  3203  3811               	iorlw	17
 21278  3204  00A4               	movwf	36	;volatile
 21279                           
 21280                           ;main.c: 251:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 21281  3205  003C               	movlb	28	; select bank28
 21282  3206  0821               	movf	33,w	;volatile
 21283  3207  39E0               	andlw	-32
 21284  3208  3814               	iorlw	20
 21285  3209  00A1               	movwf	33	;volatile
 21286                           
 21287                           ;main.c: 252:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 21288  320A  0820               	movf	32,w	;volatile
 21289  320B  39E0               	andlw	-32
 21290  320C  3815               	iorlw	21
 21291  320D  00A0               	movwf	32	;volatile
 21292                           
 21293                           ;main.c: 253:     RC5PPSbits.RC5PPS = 0x0010;
 21294  320E  003D               	movlb	29	; select bank29
 21295  320F  0825               	movf	37,w	;volatile
 21296  3210  39E0               	andlw	-32
 21297  3211  3810               	iorlw	16
 21298  3212  00A5               	movwf	37	;volatile
 21299                           
 21300                           ;main.c: 256:     RB2PPSbits.RB2PPS = 0x14;
 21301  3213  081A               	movf	26,w	;volatile
 21302  3214  39E0               	andlw	-32
 21303  3215  3814               	iorlw	20
 21304  3216  009A               	movwf	26	;volatile
 21305                           
 21306                           ;main.c: 257:     RXPPSbits.RXPPS = 0x0B;
 21307  3217  003C               	movlb	28	; select bank28
 21308  3218  0824               	movf	36,w	;volatile
 21309  3219  39E0               	andlw	-32
 21310  321A  380B               	iorlw	11
 21311  321B  00A4               	movwf	36	;volatile
 21312                           
 21313                           ;main.c: 259:     PPSLOCK = 0x55;
 21314  321C  3055               	movlw	85
 21315  321D  008F               	movwf	15	;volsfr
 21316                           
 21317                           ;main.c: 260:     PPSLOCK = 0xAA;
 21318  321E  30AA               	movlw	170
 21319  321F  008F               	movwf	15	;volsfr
 21320                           
 21321                           ;main.c: 261:     PPSLOCKbits.PPSLOCKED = 0x01;
 21322  3220  140F               	bsf	15,0	;volsfr
 21323  3221  0008               	return
 21324  3222                     __end_of_init_GPIO:	
 21325                           
 21326                           	psect	text84
 21327  3E0E                     __ptext84:	
 21328 ;; *************** function _initWDT *****************
 21329 ;; Defined at:
 21330 ;;		line 265 in file "main.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;		None
 21333 ;; Auto vars:     Size  Location     Type
 21334 ;;		None
 21335 ;; Return value:  Size  Location     Type
 21336 ;;                  1    wreg      void 
 21337 ;; Registers used:
 21338 ;;		wreg, status,2, status,0
 21339 ;; Tracked objects:
 21340 ;;		On entry : 0/0
 21341 ;;		On exit  : 0/0
 21342 ;;		Unchanged: 0/0
 21343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21348 ;;Total ram usage:        0 bytes
 21349 ;; Hardware stack levels used:    1
 21350 ;; Hardware stack levels required when called:    1
 21351 ;; This function calls:
 21352 ;;		Nothing
 21353 ;; This function is called by:
 21354 ;;		_main
 21355 ;; This function uses a non-reentrant model
 21356 ;;
 21357                           
 21358                           
 21359                           ;psect for function _initWDT
 21360  3E0E                     _initWDT:	
 21361                           
 21362                           ;main.c: 267:     WDTCONbits.WDTPS = 0b01101;
 21363                           
 21364                           ;incstack = 0
 21365                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 21366  3E0E  0021               	movlb	1	; select bank1
 21367  3E0F  0817               	movf	23,w	;volatile
 21368  3E10  39C1               	andlw	-63
 21369  3E11  381A               	iorlw	26
 21370  3E12  0097               	movwf	23	;volatile
 21371  3E13  0008               	return
 21372  3E14                     __end_of_initWDT:	
 21373                           
 21374                           	psect	text85
 21375  3E06                     __ptext85:	
 21376 ;; *************** function _initClock *****************
 21377 ;; Defined at:
 21378 ;;		line 178 in file "main.c"
 21379 ;; Parameters:    Size  Location     Type
 21380 ;;		None
 21381 ;; Auto vars:     Size  Location     Type
 21382 ;;		None
 21383 ;; Return value:  Size  Location     Type
 21384 ;;                  1    wreg      void 
 21385 ;; Registers used:
 21386 ;;		status,2, status,0, pclath, cstack
 21387 ;; Tracked objects:
 21388 ;;		On entry : 0/0
 21389 ;;		On exit  : 0/0
 21390 ;;		Unchanged: 0/0
 21391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21396 ;;Total ram usage:        0 bytes
 21397 ;; Hardware stack levels used:    1
 21398 ;; Hardware stack levels required when called:    2
 21399 ;; This function calls:
 21400 ;;		_internal_16
 21401 ;; This function is called by:
 21402 ;;		_main
 21403 ;; This function uses a non-reentrant model
 21404 ;;
 21405                           
 21406                           
 21407                           ;psect for function _initClock
 21408  3E06                     _initClock:	
 21409                           
 21410                           ;main.c: 180:     internal_16();
 21411                           
 21412                           ;incstack = 0
 21413                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 21414  3E06  31BE  2639         	fcall	_internal_16
 21415  3E08  0008               	return
 21416  3E09                     __end_of_initClock:	
 21417                           
 21418                           	psect	text86
 21419  3E39                     __ptext86:	
 21420 ;; *************** function _internal_16 *****************
 21421 ;; Defined at:
 21422 ;;		line 26 in file "pic16f1719_internals.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;		None
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;		None
 21427 ;; Return value:  Size  Location     Type
 21428 ;;                  1    wreg      void 
 21429 ;; Registers used:
 21430 ;;		None
 21431 ;; Tracked objects:
 21432 ;;		On entry : 0/0
 21433 ;;		On exit  : 0/0
 21434 ;;		Unchanged: 0/0
 21435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21440 ;;Total ram usage:        0 bytes
 21441 ;; Hardware stack levels used:    1
 21442 ;; Hardware stack levels required when called:    1
 21443 ;; This function calls:
 21444 ;;		Nothing
 21445 ;; This function is called by:
 21446 ;;		_initClock
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           
 21451                           ;psect for function _internal_16
 21452  3E39                     _internal_16:	
 21453                           
 21454                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 21455                           
 21456                           ;incstack = 0
 21457                           ; Regs used in _internal_16: []
 21458  3E39  0021               	movlb	1	; select bank1
 21459  3E3A  1019               	bcf	25,0	;volatile
 21460                           
 21461                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 21462  3E3B  1099               	bcf	25,1	;volatile
 21463                           
 21464                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 21465  3E3C  1599               	bsf	25,3	;volatile
 21466                           
 21467                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 21468  3E3D  1619               	bsf	25,4	;volatile
 21469                           
 21470                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 21471  3E3E  1699               	bsf	25,5	;volatile
 21472                           
 21473                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 21474  3E3F  1719               	bsf	25,6	;volatile
 21475                           
 21476                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 21477  3E40  1399               	bcf	25,7	;volatile
 21478  3E41  0008               	return
 21479  3E42                     __end_of_internal_16:	
 21480                           
 21481                           	psect	text87
 21482  2B36                     __ptext87:	
 21483 ;; *************** function _EUSART_Initialize *****************
 21484 ;; Defined at:
 21485 ;;		line 6 in file "EUSART.c"
 21486 ;; Parameters:    Size  Location     Type
 21487 ;;  baudrate        4   18[BANK0 ] const long 
 21488 ;; Auto vars:     Size  Location     Type
 21489 ;;  x               2   10[COMMON] unsigned int 
 21490 ;; Return value:  Size  Location     Type
 21491 ;;                  1    wreg      unsigned char 
 21492 ;; Registers used:
 21493 ;;		wreg, status,2, status,0, pclath, cstack
 21494 ;; Tracked objects:
 21495 ;;		On entry : 0/0
 21496 ;;		On exit  : 0/0
 21497 ;;		Unchanged: 0/0
 21498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21501 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21502 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21503 ;;Total ram usage:       18 bytes
 21504 ;; Hardware stack levels used:    1
 21505 ;; Hardware stack levels required when called:    2
 21506 ;; This function calls:
 21507 ;;		___aldiv
 21508 ;; This function is called by:
 21509 ;;		_main
 21510 ;; This function uses a non-reentrant model
 21511 ;;
 21512                           
 21513                           
 21514                           ;psect for function _EUSART_Initialize
 21515  2B36                     _EUSART_Initialize:	
 21516                           
 21517                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 21518                           
 21519                           ;incstack = 0
 21520                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21521  2B36  0020               	movlb	0	; select bank0
 21522  2B37  0832               	movf	EUSART_Initialize@baudrate,w
 21523  2B38  00B6               	movwf	??_EUSART_Initialize
 21524  2B39  0833               	movf	EUSART_Initialize@baudrate+1,w
 21525  2B3A  00B7               	movwf	??_EUSART_Initialize+1
 21526  2B3B  0834               	movf	EUSART_Initialize@baudrate+2,w
 21527  2B3C  00B8               	movwf	??_EUSART_Initialize+2
 21528  2B3D  0835               	movf	EUSART_Initialize@baudrate+3,w
 21529  2B3E  00B9               	movwf	??_EUSART_Initialize+3
 21530  2B3F  3006               	movlw	6
 21531  2B40                     u11945:	
 21532  2B40  35B6               	lslf	??_EUSART_Initialize,f
 21533  2B41  0DB7               	rlf	??_EUSART_Initialize+1,f
 21534  2B42  0DB8               	rlf	??_EUSART_Initialize+2,f
 21535  2B43  0DB9               	rlf	??_EUSART_Initialize+3,f
 21536  2B44  0B89               	decfsz	9,f
 21537  2B45  2B40               	goto	u11945
 21538  2B46  0839               	movf	??_EUSART_Initialize+3,w
 21539  2B47  00A7               	movwf	___aldiv@divisor+3
 21540  2B48  0838               	movf	??_EUSART_Initialize+2,w
 21541  2B49  00A6               	movwf	___aldiv@divisor+2
 21542  2B4A  0837               	movf	??_EUSART_Initialize+1,w
 21543  2B4B  00A5               	movwf	___aldiv@divisor+1
 21544  2B4C  0836               	movf	??_EUSART_Initialize,w
 21545  2B4D  00A4               	movwf	___aldiv@divisor
 21546  2B4E  0832               	movf	EUSART_Initialize@baudrate,w
 21547  2B4F  00BA               	movwf	??_EUSART_Initialize+4
 21548  2B50  0833               	movf	EUSART_Initialize@baudrate+1,w
 21549  2B51  00BB               	movwf	??_EUSART_Initialize+5
 21550  2B52  0834               	movf	EUSART_Initialize@baudrate+2,w
 21551  2B53  00BC               	movwf	??_EUSART_Initialize+6
 21552  2B54  0835               	movf	EUSART_Initialize@baudrate+3,w
 21553  2B55  00BD               	movwf	??_EUSART_Initialize+7
 21554  2B56  3006               	movlw	6
 21555  2B57                     u11955:	
 21556  2B57  35BA               	lslf	??_EUSART_Initialize+4,f
 21557  2B58  0DBB               	rlf	??_EUSART_Initialize+5,f
 21558  2B59  0DBC               	rlf	??_EUSART_Initialize+6,f
 21559  2B5A  0DBD               	rlf	??_EUSART_Initialize+7,f
 21560  2B5B  0B89               	decfsz	9,f
 21561  2B5C  2B57               	goto	u11955
 21562  2B5D  3000               	movlw	0
 21563  2B5E  00BE               	movwf	??_EUSART_Initialize+8
 21564  2B5F  3024               	movlw	36
 21565  2B60  00BF               	movwf	??_EUSART_Initialize+9
 21566  2B61  30F4               	movlw	244
 21567  2B62  00C0               	movwf	??_EUSART_Initialize+10
 21568  2B63  3000               	movlw	0
 21569  2B64  00C1               	movwf	??_EUSART_Initialize+11
 21570  2B65  083A               	movf	??_EUSART_Initialize+4,w
 21571  2B66  02BE               	subwf	??_EUSART_Initialize+8,f
 21572  2B67  083B               	movf	??_EUSART_Initialize+5,w
 21573  2B68  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21574  2B69  083C               	movf	??_EUSART_Initialize+6,w
 21575  2B6A  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21576  2B6B  083D               	movf	??_EUSART_Initialize+7,w
 21577  2B6C  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21578  2B6D  0841               	movf	??_EUSART_Initialize+11,w
 21579  2B6E  00AB               	movwf	___aldiv@dividend+3
 21580  2B6F  0840               	movf	??_EUSART_Initialize+10,w
 21581  2B70  00AA               	movwf	___aldiv@dividend+2
 21582  2B71  083F               	movf	??_EUSART_Initialize+9,w
 21583  2B72  00A9               	movwf	___aldiv@dividend+1
 21584  2B73  083E               	movf	??_EUSART_Initialize+8,w
 21585  2B74  00A8               	movwf	___aldiv@dividend
 21586  2B75  31B7  277E  31AB   	fcall	___aldiv
 21587  2B78  0020               	movlb	0	; select bank0
 21588  2B79  0825               	movf	?___aldiv+1,w
 21589  2B7A  00FB               	movwf	EUSART_Initialize@x+1
 21590  2B7B  0824               	movf	?___aldiv,w
 21591  2B7C  00FA               	movwf	EUSART_Initialize@x
 21592                           
 21593                           ;EUSART.c: 10:  if(x>255)
 21594  2B7D  3001               	movlw	1
 21595  2B7E  027B               	subwf	EUSART_Initialize@x+1,w
 21596  2B7F  3000               	movlw	0
 21597  2B80  1903               	skipnz
 21598  2B81  027A               	subwf	EUSART_Initialize@x,w
 21599  2B82  1C03               	skipc
 21600  2B83  2BCC               	goto	l8697
 21601                           
 21602                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 21603  2B84  0832               	movf	EUSART_Initialize@baudrate,w
 21604  2B85  00B6               	movwf	??_EUSART_Initialize
 21605  2B86  0833               	movf	EUSART_Initialize@baudrate+1,w
 21606  2B87  00B7               	movwf	??_EUSART_Initialize+1
 21607  2B88  0834               	movf	EUSART_Initialize@baudrate+2,w
 21608  2B89  00B8               	movwf	??_EUSART_Initialize+2
 21609  2B8A  0835               	movf	EUSART_Initialize@baudrate+3,w
 21610  2B8B  00B9               	movwf	??_EUSART_Initialize+3
 21611  2B8C  3004               	movlw	4
 21612  2B8D                     u11975:	
 21613  2B8D  35B6               	lslf	??_EUSART_Initialize,f
 21614  2B8E  0DB7               	rlf	??_EUSART_Initialize+1,f
 21615  2B8F  0DB8               	rlf	??_EUSART_Initialize+2,f
 21616  2B90  0DB9               	rlf	??_EUSART_Initialize+3,f
 21617  2B91  0B89               	decfsz	9,f
 21618  2B92  2B8D               	goto	u11975
 21619  2B93  0839               	movf	??_EUSART_Initialize+3,w
 21620  2B94  00A7               	movwf	___aldiv@divisor+3
 21621  2B95  0838               	movf	??_EUSART_Initialize+2,w
 21622  2B96  00A6               	movwf	___aldiv@divisor+2
 21623  2B97  0837               	movf	??_EUSART_Initialize+1,w
 21624  2B98  00A5               	movwf	___aldiv@divisor+1
 21625  2B99  0836               	movf	??_EUSART_Initialize,w
 21626  2B9A  00A4               	movwf	___aldiv@divisor
 21627  2B9B  0832               	movf	EUSART_Initialize@baudrate,w
 21628  2B9C  00BA               	movwf	??_EUSART_Initialize+4
 21629  2B9D  0833               	movf	EUSART_Initialize@baudrate+1,w
 21630  2B9E  00BB               	movwf	??_EUSART_Initialize+5
 21631  2B9F  0834               	movf	EUSART_Initialize@baudrate+2,w
 21632  2BA0  00BC               	movwf	??_EUSART_Initialize+6
 21633  2BA1  0835               	movf	EUSART_Initialize@baudrate+3,w
 21634  2BA2  00BD               	movwf	??_EUSART_Initialize+7
 21635  2BA3  3004               	movlw	4
 21636  2BA4                     u11985:	
 21637  2BA4  35BA               	lslf	??_EUSART_Initialize+4,f
 21638  2BA5  0DBB               	rlf	??_EUSART_Initialize+5,f
 21639  2BA6  0DBC               	rlf	??_EUSART_Initialize+6,f
 21640  2BA7  0DBD               	rlf	??_EUSART_Initialize+7,f
 21641  2BA8  0B89               	decfsz	9,f
 21642  2BA9  2BA4               	goto	u11985
 21643  2BAA  3000               	movlw	0
 21644  2BAB  00BE               	movwf	??_EUSART_Initialize+8
 21645  2BAC  3024               	movlw	36
 21646  2BAD  00BF               	movwf	??_EUSART_Initialize+9
 21647  2BAE  30F4               	movlw	244
 21648  2BAF  00C0               	movwf	??_EUSART_Initialize+10
 21649  2BB0  3000               	movlw	0
 21650  2BB1  00C1               	movwf	??_EUSART_Initialize+11
 21651  2BB2  083A               	movf	??_EUSART_Initialize+4,w
 21652  2BB3  02BE               	subwf	??_EUSART_Initialize+8,f
 21653  2BB4  083B               	movf	??_EUSART_Initialize+5,w
 21654  2BB5  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21655  2BB6  083C               	movf	??_EUSART_Initialize+6,w
 21656  2BB7  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21657  2BB8  083D               	movf	??_EUSART_Initialize+7,w
 21658  2BB9  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21659  2BBA  0841               	movf	??_EUSART_Initialize+11,w
 21660  2BBB  00AB               	movwf	___aldiv@dividend+3
 21661  2BBC  0840               	movf	??_EUSART_Initialize+10,w
 21662  2BBD  00AA               	movwf	___aldiv@dividend+2
 21663  2BBE  083F               	movf	??_EUSART_Initialize+9,w
 21664  2BBF  00A9               	movwf	___aldiv@dividend+1
 21665  2BC0  083E               	movf	??_EUSART_Initialize+8,w
 21666  2BC1  00A8               	movwf	___aldiv@dividend
 21667  2BC2  31B7  277E  31AB   	fcall	___aldiv
 21668  2BC5  0020               	movlb	0	; select bank0
 21669  2BC6  0825               	movf	?___aldiv+1,w
 21670  2BC7  00FB               	movwf	EUSART_Initialize@x+1
 21671  2BC8  0824               	movf	?___aldiv,w
 21672  2BC9  00FA               	movwf	EUSART_Initialize@x
 21673                           
 21674                           ;EUSART.c: 13:   BRGH = 1;
 21675  2BCA  0023               	movlb	3	; select bank3
 21676  2BCB  151E               	bsf	30,2	;volatile
 21677  2BCC                     l8697:	
 21678                           
 21679                           ;EUSART.c: 15:  if(x<256)
 21680  2BCC  3001               	movlw	1
 21681  2BCD  027B               	subwf	EUSART_Initialize@x+1,w
 21682  2BCE  3000               	movlw	0
 21683  2BCF  1903               	skipnz
 21684  2BD0  027A               	subwf	EUSART_Initialize@x,w
 21685  2BD1  1803               	skipnc
 21686  2BD2  0008               	return
 21687                           
 21688                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21689  2BD3  087A               	movf	EUSART_Initialize@x,w
 21690  2BD4  0023               	movlb	3	; select bank3
 21691  2BD5  009B               	movwf	27	;volatile
 21692                           
 21693                           ;EUSART.c: 18:    SYNC = 0;
 21694  2BD6  121E               	bcf	30,4	;volatile
 21695                           
 21696                           ;EUSART.c: 19:    SPEN = 1;
 21697  2BD7  179D               	bsf	29,7	;volatile
 21698                           
 21699                           ;EUSART.c: 20:           TRISC7 = 1;
 21700  2BD8  0021               	movlb	1	; select bank1
 21701  2BD9  178E               	bsf	14,7	;volatile
 21702                           
 21703                           ;EUSART.c: 21:           TRISC6 = 1;
 21704  2BDA  170E               	bsf	14,6	;volatile
 21705                           
 21706                           ;EUSART.c: 22:           CREN = 1;
 21707  2BDB  0023               	movlb	3	; select bank3
 21708  2BDC  161D               	bsf	29,4	;volatile
 21709                           
 21710                           ;EUSART.c: 23:           TXEN = 1;
 21711  2BDD  169E               	bsf	30,5	;volatile
 21712  2BDE  0008               	return
 21713  2BDF                     __end_of_EUSART_Initialize:	
 21714                           
 21715                           	psect	text88
 21716  377E                     __ptext88:	
 21717 ;; *************** function ___aldiv *****************
 21718 ;; Defined at:
 21719 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  divisor         4    4[BANK0 ] long 
 21722 ;;  dividend        4    8[BANK0 ] long 
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;  quotient        4   14[BANK0 ] long 
 21725 ;;  sign            1   13[BANK0 ] unsigned char 
 21726 ;;  counter         1   12[BANK0 ] unsigned char 
 21727 ;; Return value:  Size  Location     Type
 21728 ;;                  4    4[BANK0 ] long 
 21729 ;; Registers used:
 21730 ;;		wreg, status,2, status,0
 21731 ;; Tracked objects:
 21732 ;;		On entry : 0/0
 21733 ;;		On exit  : 0/0
 21734 ;;		Unchanged: 0/0
 21735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21736 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21737 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21739 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21740 ;;Total ram usage:       15 bytes
 21741 ;; Hardware stack levels used:    1
 21742 ;; Hardware stack levels required when called:    1
 21743 ;; This function calls:
 21744 ;;		Nothing
 21745 ;; This function is called by:
 21746 ;;		_EUSART_Initialize
 21747 ;;		_setCellUndervoltageProtection
 21748 ;;		_setCellOvervoltageProtection
 21749 ;;		_updateVoltages
 21750 ;; This function uses a non-reentrant model
 21751 ;;
 21752                           
 21753                           
 21754                           ;psect for function ___aldiv
 21755  377E                     ___aldiv:	
 21756                           
 21757                           ;incstack = 0
 21758                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21759  377E  0020               	movlb	0	; select bank0
 21760  377F  01AD               	clrf	___aldiv@sign
 21761  3780  1FA7               	btfss	___aldiv@divisor+3,7
 21762  3781  2F8F               	goto	l1024
 21763  3782  09A4               	comf	___aldiv@divisor,f
 21764  3783  09A5               	comf	___aldiv@divisor+1,f
 21765  3784  09A6               	comf	___aldiv@divisor+2,f
 21766  3785  09A7               	comf	___aldiv@divisor+3,f
 21767  3786  0AA4               	incf	___aldiv@divisor,f
 21768  3787  1903               	skipnz
 21769  3788  0AA5               	incf	___aldiv@divisor+1,f
 21770  3789  1903               	skipnz
 21771  378A  0AA6               	incf	___aldiv@divisor+2,f
 21772  378B  1903               	skipnz
 21773  378C  0AA7               	incf	___aldiv@divisor+3,f
 21774  378D  01AD               	clrf	___aldiv@sign
 21775  378E  0AAD               	incf	___aldiv@sign,f
 21776  378F                     l1024:	
 21777  378F  1FAB               	btfss	___aldiv@dividend+3,7
 21778  3790  2FA0               	goto	l8423
 21779  3791  09A8               	comf	___aldiv@dividend,f
 21780  3792  09A9               	comf	___aldiv@dividend+1,f
 21781  3793  09AA               	comf	___aldiv@dividend+2,f
 21782  3794  09AB               	comf	___aldiv@dividend+3,f
 21783  3795  0AA8               	incf	___aldiv@dividend,f
 21784  3796  1903               	skipnz
 21785  3797  0AA9               	incf	___aldiv@dividend+1,f
 21786  3798  1903               	skipnz
 21787  3799  0AAA               	incf	___aldiv@dividend+2,f
 21788  379A  1903               	skipnz
 21789  379B  0AAB               	incf	___aldiv@dividend+3,f
 21790  379C  3001               	movlw	1
 21791  379D  00F9               	movwf	??___aldiv
 21792  379E  0879               	movf	??___aldiv,w
 21793  379F  06AD               	xorwf	___aldiv@sign,f
 21794  37A0                     l8423:	
 21795  37A0  3000               	movlw	0
 21796  37A1  00B1               	movwf	___aldiv@quotient+3
 21797  37A2  3000               	movlw	0
 21798  37A3  00B0               	movwf	___aldiv@quotient+2
 21799  37A4  3000               	movlw	0
 21800  37A5  00AF               	movwf	___aldiv@quotient+1
 21801  37A6  3000               	movlw	0
 21802  37A7  00AE               	movwf	___aldiv@quotient
 21803  37A8  0827               	movf	___aldiv@divisor+3,w
 21804  37A9  0426               	iorwf	___aldiv@divisor+2,w
 21805  37AA  0425               	iorwf	___aldiv@divisor+1,w
 21806  37AB  0424               	iorwf	___aldiv@divisor,w
 21807  37AC  1903               	skipnz
 21808  37AD  2FE9               	goto	l8445
 21809  37AE  01AC               	clrf	___aldiv@counter
 21810  37AF  0AAC               	incf	___aldiv@counter,f
 21811  37B0                     l8431:	
 21812  37B0  1BA7               	btfsc	___aldiv@divisor+3,7
 21813  37B1  2FBE               	goto	l8433
 21814  37B2  3001               	movlw	1
 21815  37B3                     u11715:	
 21816  37B3  35A4               	lslf	___aldiv@divisor,f
 21817  37B4  0DA5               	rlf	___aldiv@divisor+1,f
 21818  37B5  0DA6               	rlf	___aldiv@divisor+2,f
 21819  37B6  0DA7               	rlf	___aldiv@divisor+3,f
 21820  37B7  0B89               	decfsz	9,f
 21821  37B8  2FB3               	goto	u11715
 21822  37B9  3001               	movlw	1
 21823  37BA  00F9               	movwf	??___aldiv
 21824  37BB  0879               	movf	??___aldiv,w
 21825  37BC  07AC               	addwf	___aldiv@counter,f
 21826  37BD  2FB0               	goto	l8431
 21827  37BE                     l8433:	
 21828  37BE  3001               	movlw	1
 21829  37BF                     u11735:	
 21830  37BF  35AE               	lslf	___aldiv@quotient,f
 21831  37C0  0DAF               	rlf	___aldiv@quotient+1,f
 21832  37C1  0DB0               	rlf	___aldiv@quotient+2,f
 21833  37C2  0DB1               	rlf	___aldiv@quotient+3,f
 21834  37C3  0B89               	decfsz	9,f
 21835  37C4  2FBF               	goto	u11735
 21836  37C5  0827               	movf	___aldiv@divisor+3,w
 21837  37C6  022B               	subwf	___aldiv@dividend+3,w
 21838  37C7  1D03               	skipz
 21839  37C8  2FD3               	goto	u11745
 21840  37C9  0826               	movf	___aldiv@divisor+2,w
 21841  37CA  022A               	subwf	___aldiv@dividend+2,w
 21842  37CB  1D03               	skipz
 21843  37CC  2FD3               	goto	u11745
 21844  37CD  0825               	movf	___aldiv@divisor+1,w
 21845  37CE  0229               	subwf	___aldiv@dividend+1,w
 21846  37CF  1D03               	skipz
 21847  37D0  2FD3               	goto	u11745
 21848  37D1  0824               	movf	___aldiv@divisor,w
 21849  37D2  0228               	subwf	___aldiv@dividend,w
 21850  37D3                     u11745:	
 21851  37D3  1C03               	skipc
 21852  37D4  2FDE               	goto	l8441
 21853  37D5  0824               	movf	___aldiv@divisor,w
 21854  37D6  02A8               	subwf	___aldiv@dividend,f
 21855  37D7  0825               	movf	___aldiv@divisor+1,w
 21856  37D8  3BA9               	subwfb	___aldiv@dividend+1,f
 21857  37D9  0826               	movf	___aldiv@divisor+2,w
 21858  37DA  3BAA               	subwfb	___aldiv@dividend+2,f
 21859  37DB  0827               	movf	___aldiv@divisor+3,w
 21860  37DC  3BAB               	subwfb	___aldiv@dividend+3,f
 21861  37DD  142E               	bsf	___aldiv@quotient,0
 21862  37DE                     l8441:	
 21863  37DE  3001               	movlw	1
 21864  37DF                     u11755:	
 21865  37DF  36A7               	lsrf	___aldiv@divisor+3,f
 21866  37E0  0CA6               	rrf	___aldiv@divisor+2,f
 21867  37E1  0CA5               	rrf	___aldiv@divisor+1,f
 21868  37E2  0CA4               	rrf	___aldiv@divisor,f
 21869  37E3  0B89               	decfsz	9,f
 21870  37E4  2FDF               	goto	u11755
 21871  37E5  3001               	movlw	1
 21872  37E6  02AC               	subwf	___aldiv@counter,f
 21873  37E7  1D03               	btfss	3,2
 21874  37E8  2FBE               	goto	l8433
 21875  37E9                     l8445:	
 21876  37E9  082D               	movf	___aldiv@sign,w
 21877  37EA  1903               	btfsc	3,2
 21878  37EB  2FF7               	goto	l8449
 21879  37EC  09AE               	comf	___aldiv@quotient,f
 21880  37ED  09AF               	comf	___aldiv@quotient+1,f
 21881  37EE  09B0               	comf	___aldiv@quotient+2,f
 21882  37EF  09B1               	comf	___aldiv@quotient+3,f
 21883  37F0  0AAE               	incf	___aldiv@quotient,f
 21884  37F1  1903               	skipnz
 21885  37F2  0AAF               	incf	___aldiv@quotient+1,f
 21886  37F3  1903               	skipnz
 21887  37F4  0AB0               	incf	___aldiv@quotient+2,f
 21888  37F5  1903               	skipnz
 21889  37F6  0AB1               	incf	___aldiv@quotient+3,f
 21890  37F7                     l8449:	
 21891  37F7  0831               	movf	___aldiv@quotient+3,w
 21892  37F8  00A7               	movwf	?___aldiv+3
 21893  37F9  0830               	movf	___aldiv@quotient+2,w
 21894  37FA  00A6               	movwf	?___aldiv+2
 21895  37FB  082F               	movf	___aldiv@quotient+1,w
 21896  37FC  00A5               	movwf	?___aldiv+1
 21897  37FD  082E               	movf	___aldiv@quotient,w
 21898  37FE  00A4               	movwf	?___aldiv
 21899  37FF  0008               	return
 21900  3800                     __end_of___aldiv:	
 21901                           
 21902                           	psect	intentry
 21903  0004                     __pintentry:	
 21904 ;; *************** function _myIsr *****************
 21905 ;; Defined at:
 21906 ;;		line 59 in file "main.c"
 21907 ;; Parameters:    Size  Location     Type
 21908 ;;		None
 21909 ;; Auto vars:     Size  Location     Type
 21910 ;;		None
 21911 ;; Return value:  Size  Location     Type
 21912 ;;                  1    wreg      void 
 21913 ;; Registers used:
 21914 ;;		wreg, status,2, status,0
 21915 ;; Tracked objects:
 21916 ;;		On entry : 0/0
 21917 ;;		On exit  : 0/0
 21918 ;;		Unchanged: 0/0
 21919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;Total ram usage:        1 bytes
 21925 ;; Hardware stack levels used:    1
 21926 ;; This function calls:
 21927 ;;		Nothing
 21928 ;; This function is called by:
 21929 ;;		Interrupt level 1
 21930 ;; This function uses a non-reentrant model
 21931 ;;
 21932                           
 21933  0004                     _myIsr:	
 21934                           
 21935                           ;incstack = 0
 21936  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21937                           
 21938                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21939  0005  3180               	pagesel	$
 21940                           
 21941                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21942  0006  0020               	movlb	0	; select bank0
 21943  0007  1C11               	btfss	17,0	;volatile
 21944  0008  281C               	goto	i1l151
 21945  0009  0021               	movlb	1	; select bank1
 21946  000A  1C11               	btfss	17,0	;volatile
 21947  000B  281C               	goto	i1l151
 21948                           
 21949                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 21950  000C  0020               	movlb	0	; select bank0
 21951  000D  1011               	bcf	17,0	;volatile
 21952                           
 21953                           ;main.c: 65:         count++;
 21954  000E  3001               	movlw	1
 21955  000F  00F0               	movwf	??_myIsr
 21956  0010  0870               	movf	??_myIsr,w
 21957  0011  0023               	movlb	3	; select bank3
 21958  0012  07C9               	addwf	myIsr@count^(0+384),f
 21959                           
 21960                           ;main.c: 68:         if (count == 61) {
 21961  0013  303D               	movlw	61
 21962  0014  0649               	xorwf	myIsr@count^(0+384),w
 21963  0015  1D03               	btfss	3,2
 21964  0016  281C               	goto	i1l151
 21965                           
 21966                           ;main.c: 69:             tmr1_flag = 1;
 21967  0017  3001               	movlw	1
 21968  0018  00F0               	movwf	??_myIsr
 21969  0019  0870               	movf	??_myIsr,w
 21970  001A  00CA               	movwf	_tmr1_flag^(0+384)	;volatile
 21971                           
 21972                           ;main.c: 70:             count = 0;
 21973  001B  01C9               	clrf	myIsr@count^(0+384)
 21974  001C                     i1l151:	
 21975  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21976  001D  0009               	retfie
 21977  001E                     __end_of_myIsr:	
 21978  007E                     btemp	set	126	;btemp
 21979  007E                     int$flags	set	126
 21980  007E                     wtemp0	set	126
 21981  2771                     
 21982                           	psect	text9_split_1
 21983  28EE                     l8019:	
 21984                           
 21985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21986  28EE  0021               	movlb	1	; select bank1
 21987  28EF  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 21988  28F0  0086               	movwf	6
 21989  28F1  3001               	movlw	1	; select bank2/3
 21990  28F2  0087               	movwf	7
 21991  28F3  3F40               	moviw [0]fsr1
 21992  28F4  00F1               	movwf	strncmp@_l
 21993  28F5  3F41               	moviw [1]fsr1
 21994  28F6  00F2               	movwf	strncmp@_l+1
 21995  28F7  3050               	movlw	low (STR_35| (0+32768))
 21996  28F8  00F3               	movwf	strncmp@_r
 21997  28F9  30BB               	movlw	high (STR_35| (0+32768))
 21998  28FA  00F4               	movwf	strncmp@_r+1
 21999  28FB  3003               	movlw	3
 22000  28FC  00F5               	movwf	strncmp@n
 22001  28FD  3000               	movlw	0
 22002  28FE  00F6               	movwf	strncmp@n+1
 22003  28FF  31B3  23E5  31A8   	fcall	_strncmp
 22004  2902  0871               	movf	?_strncmp,w
 22005  2903  0472               	iorwf	?_strncmp+1,w
 22006  2904  1903               	btfsc	3,2
 22007  2905  291E               	goto	l8023
 22008  2906  0021               	movlb	1	; select bank1
 22009  2907  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22010  2908  0086               	movwf	6
 22011  2909  3001               	movlw	1	; select bank2/3
 22012  290A  0087               	movwf	7
 22013  290B  3F40               	moviw [0]fsr1
 22014  290C  00F1               	movwf	strncmp@_l
 22015  290D  3F41               	moviw [1]fsr1
 22016  290E  00F2               	movwf	strncmp@_l+1
 22017  290F  3058               	movlw	low (STR_39| (0+32768))
 22018  2910  00F3               	movwf	strncmp@_r
 22019  2911  30BB               	movlw	high (STR_39| (0+32768))
 22020  2912  00F4               	movwf	strncmp@_r+1
 22021  2913  3003               	movlw	3
 22022  2914  00F5               	movwf	strncmp@n
 22023  2915  3000               	movlw	0
 22024  2916  00F6               	movwf	strncmp@n+1
 22025  2917  31B3  23E5  31A8   	fcall	_strncmp
 22026  291A  0871               	movf	?_strncmp,w
 22027  291B  0472               	iorwf	?_strncmp+1,w
 22028  291C  1D03               	btfss	3,2
 22029  291D  2972               	goto	L18
 22030  291E                     l8023:	
 22031                           
 22032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 22033  291E  0021               	movlb	1	; select bank1
 22034  291F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22035  2920  0086               	movwf	6
 22036  2921  3001               	movlw	1	; select bank2/3
 22037  2922  0087               	movwf	7
 22038  2923  3003               	movlw	3
 22039  2924  0781               	addwf	1,f
 22040  2925  3141               	addfsr 1,1
 22041  2926  1803               	skipnc
 22042  2927  0A81               	incf	1,f
 22043                           
 22044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22045  2928  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22046  2929  0086               	movwf	6
 22047  292A  3001               	movlw	1	; select bank2/3
 22048  292B  0087               	movwf	7
 22049  292C  0801               	movf	1,w
 22050  292D  0084               	movwf	4
 22051  292E  3001               	movlw	1	; select bank2/3
 22052  292F  0085               	movwf	5
 22053  2930  3002               	movlw	2
 22054  2931  0781               	addwf	1,f
 22055  2932  0800               	movf	0,w
 22056  2933  0022               	movlb	2	; select bank2
 22057  2934  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22058  2935  3980               	andlw	128
 22059  2936  1D03               	skipz
 22060  2937  30FF               	movlw	255
 22061  2938  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22062  2939  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22063  293A  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22064  293B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22065  293C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22066  293D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22067  293E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22068                           
 22069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 22070  293F  0021               	movlb	1	; select bank1
 22071  2940  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22072  2941  0020               	movlb	0	; select bank0
 22073  2942  00B1               	movwf	dtoa@fp+1
 22074  2943  0021               	movlb	1	; select bank1
 22075  2944  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22076  2945  0020               	movlb	0	; select bank0
 22077  2946  00B0               	movwf	dtoa@fp
 22078  2947  0022               	movlb	2	; select bank2
 22079  2948  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22080  2949  0020               	movlb	0	; select bank0
 22081  294A  00B2               	movwf	dtoa@d
 22082  294B  0022               	movlb	2	; select bank2
 22083  294C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22084  294D  0020               	movlb	0	; select bank0
 22085  294E  00B3               	movwf	dtoa@d+1
 22086  294F  0022               	movlb	2	; select bank2
 22087  2950  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22088  2951  0020               	movlb	0	; select bank0
 22089  2952  00B4               	movwf	dtoa@d+2
 22090  2953  0022               	movlb	2	; select bank2
 22091  2954  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22092  2955  0020               	movlb	0	; select bank0
 22093  2956  00B5               	movwf	dtoa@d+3
 22094  2957  0022               	movlb	2	; select bank2
 22095  2958  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22096  2959  0020               	movlb	0	; select bank0
 22097  295A  00B6               	movwf	dtoa@d+4
 22098  295B  0022               	movlb	2	; select bank2
 22099  295C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22100  295D  0020               	movlb	0	; select bank0
 22101  295E  00B7               	movwf	dtoa@d+5
 22102  295F  0022               	movlb	2	; select bank2
 22103  2960  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22104  2961  0020               	movlb	0	; select bank0
 22105  2962  00B8               	movwf	dtoa@d+6
 22106  2963  0022               	movlb	2	; select bank2
 22107  2964  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22108  2965  0020               	movlb	0	; select bank0
 22109  2966  00B9               	movwf	dtoa@d+7
 22110  2967  3199  21F8         	fcall	_dtoa
 22111  2969  0020               	movlb	0	; select bank0
 22112  296A  0831               	movf	?_dtoa+1,w
 22113  296B  0021               	movlb	1	; select bank1
 22114  296C  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22115  296D  0020               	movlb	0	; select bank0
 22116  296E  0830               	movf	?_dtoa,w
 22117  296F  0021               	movlb	1	; select bank1
 22118  2970  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22119  2971  0008               	return
 22120  2972                     L18:	
 22121  2972                     L17:	
 22122  2972  31A9  2974         	ljmp	l8031
 22123                           
 22124                           	psect	text9_split_2
 22125  2974                     l8031:	
 22126                           
 22127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 22128  2974  0021               	movlb	1	; select bank1
 22129  2975  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22130  2976  0086               	movwf	6
 22131  2977  3001               	movlw	1	; select bank2/3
 22132  2978  0087               	movwf	7
 22133  2979  3F40               	moviw [0]fsr1
 22134  297A  00F1               	movwf	strncmp@_l
 22135  297B  3F41               	moviw [1]fsr1
 22136  297C  00F2               	movwf	strncmp@_l+1
 22137  297D  3051               	movlw	low ((STR_35+1)| (0+32768))
 22138  297E  00F3               	movwf	strncmp@_r
 22139  297F  30BB               	movlw	high ((STR_35+1)| (0+32768))
 22140  2980  00F4               	movwf	strncmp@_r+1
 22141  2981  3002               	movlw	2
 22142  2982  00F5               	movwf	strncmp@n
 22143  2983  3000               	movlw	0
 22144  2984  00F6               	movwf	strncmp@n+1
 22145  2985  31B3  23E5  31A9   	fcall	_strncmp
 22146  2988  0871               	movf	?_strncmp,w
 22147  2989  0472               	iorwf	?_strncmp+1,w
 22148  298A  1903               	btfsc	3,2
 22149  298B  29A4               	goto	l8035
 22150  298C  0021               	movlb	1	; select bank1
 22151  298D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22152  298E  0086               	movwf	6
 22153  298F  3001               	movlw	1	; select bank2/3
 22154  2990  0087               	movwf	7
 22155  2991  3F40               	moviw [0]fsr1
 22156  2992  00F1               	movwf	strncmp@_l
 22157  2993  3F41               	moviw [1]fsr1
 22158  2994  00F2               	movwf	strncmp@_l+1
 22159  2995  3059               	movlw	low ((STR_39+1)| (0+32768))
 22160  2996  00F3               	movwf	strncmp@_r
 22161  2997  30BB               	movlw	high ((STR_39+1)| (0+32768))
 22162  2998  00F4               	movwf	strncmp@_r+1
 22163  2999  3002               	movlw	2
 22164  299A  00F5               	movwf	strncmp@n
 22165  299B  3000               	movlw	0
 22166  299C  00F6               	movwf	strncmp@n+1
 22167  299D  31B3  23E5  31A9   	fcall	_strncmp
 22168  29A0  0871               	movf	?_strncmp,w
 22169  29A1  0472               	iorwf	?_strncmp+1,w
 22170  29A2  1D03               	btfss	3,2
 22171  29A3  29FD               	goto	L20
 22172  29A4                     l8035:	
 22173                           
 22174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 22175  29A4  0021               	movlb	1	; select bank1
 22176  29A5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22177  29A6  0086               	movwf	6
 22178  29A7  3001               	movlw	1	; select bank2/3
 22179  29A8  0087               	movwf	7
 22180  29A9  3002               	movlw	2
 22181  29AA  0781               	addwf	1,f
 22182  29AB  3141               	addfsr 1,1
 22183  29AC  1803               	skipnc
 22184  29AD  0A81               	incf	1,f
 22185                           
 22186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22187  29AE  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22188  29AF  0086               	movwf	6
 22189  29B0  3001               	movlw	1	; select bank2/3
 22190  29B1  0087               	movwf	7
 22191  29B2  0801               	movf	1,w
 22192  29B3  0084               	movwf	4
 22193  29B4  3001               	movlw	1	; select bank2/3
 22194  29B5  0085               	movwf	5
 22195  29B6  3002               	movlw	2
 22196  29B7  0781               	addwf	1,f
 22197  29B8  3F00               	moviw [0]fsr0
 22198  29B9  0022               	movlb	2	; select bank2
 22199  29BA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22200  29BB  3F01               	moviw [1]fsr0
 22201  29BC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22202  29BD  0820               	movf	??_vfpfcnvrt^(0+256),w
 22203  29BE  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22204  29BF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22205  29C0  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22206  29C1  0D89               	rlf	9,f
 22207  29C2  3B89               	subwfb	9,f
 22208  29C3  0989               	comf	9,f
 22209  29C4  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22210  29C5  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22211  29C6  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22212  29C7  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22213  29C8  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22214  29C9  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22215                           
 22216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 22217  29CA  0021               	movlb	1	; select bank1
 22218  29CB  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22219  29CC  0020               	movlb	0	; select bank0
 22220  29CD  00B1               	movwf	dtoa@fp+1
 22221  29CE  0021               	movlb	1	; select bank1
 22222  29CF  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22223  29D0  0020               	movlb	0	; select bank0
 22224  29D1  00B0               	movwf	dtoa@fp
 22225  29D2  0022               	movlb	2	; select bank2
 22226  29D3  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22227  29D4  0020               	movlb	0	; select bank0
 22228  29D5  00B2               	movwf	dtoa@d
 22229  29D6  0022               	movlb	2	; select bank2
 22230  29D7  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22231  29D8  0020               	movlb	0	; select bank0
 22232  29D9  00B3               	movwf	dtoa@d+1
 22233  29DA  0022               	movlb	2	; select bank2
 22234  29DB  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22235  29DC  0020               	movlb	0	; select bank0
 22236  29DD  00B4               	movwf	dtoa@d+2
 22237  29DE  0022               	movlb	2	; select bank2
 22238  29DF  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22239  29E0  0020               	movlb	0	; select bank0
 22240  29E1  00B5               	movwf	dtoa@d+3
 22241  29E2  0022               	movlb	2	; select bank2
 22242  29E3  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22243  29E4  0020               	movlb	0	; select bank0
 22244  29E5  00B6               	movwf	dtoa@d+4
 22245  29E6  0022               	movlb	2	; select bank2
 22246  29E7  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22247  29E8  0020               	movlb	0	; select bank0
 22248  29E9  00B7               	movwf	dtoa@d+5
 22249  29EA  0022               	movlb	2	; select bank2
 22250  29EB  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22251  29EC  0020               	movlb	0	; select bank0
 22252  29ED  00B8               	movwf	dtoa@d+6
 22253  29EE  0022               	movlb	2	; select bank2
 22254  29EF  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22255  29F0  0020               	movlb	0	; select bank0
 22256  29F1  00B9               	movwf	dtoa@d+7
 22257  29F2  3199  21F8         	fcall	_dtoa
 22258  29F4  0020               	movlb	0	; select bank0
 22259  29F5  0831               	movf	?_dtoa+1,w
 22260  29F6  0021               	movlb	1	; select bank1
 22261  29F7  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22262  29F8  0020               	movlb	0	; select bank0
 22263  29F9  0830               	movf	?_dtoa,w
 22264  29FA  0021               	movlb	1	; select bank1
 22265  29FB  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22266  29FC  0008               	return
 22267  29FD                     L20:	
 22268  29FD                     L19:	
 22269  29FD  31A5  2DDD         	ljmp	l8043
 22270                           
 22271                           	psect	text9_split_3
 22272  25DD                     l8043:	
 22273                           
 22274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 22275  25DD  0021               	movlb	1	; select bank1
 22276  25DE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22277  25DF  0086               	movwf	6
 22278  25E0  3001               	movlw	1	; select bank2/3
 22279  25E1  0087               	movwf	7
 22280  25E2  3F40               	moviw [0]fsr1
 22281  25E3  0022               	movlb	2	; select bank2
 22282  25E4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22283  25E5  3F41               	moviw [1]fsr1
 22284  25E6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22285  25E7  0820               	movf	??_vfpfcnvrt^(0+256),w
 22286  25E8  0084               	movwf	4
 22287  25E9  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22288  25EA  0085               	movwf	5
 22289  25EB  0012               	moviw fsr0++
 22290  25EC  3A64               	xorlw	100
 22291  25ED  1903               	btfsc	3,2
 22292  25EE  2E01               	goto	l8047
 22293  25EF  0021               	movlb	1	; select bank1
 22294  25F0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22295  25F1  0086               	movwf	6
 22296  25F2  3001               	movlw	1	; select bank2/3
 22297  25F3  0087               	movwf	7
 22298  25F4  3F40               	moviw [0]fsr1
 22299  25F5  0022               	movlb	2	; select bank2
 22300  25F6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22301  25F7  3F41               	moviw [1]fsr1
 22302  25F8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22303  25F9  0820               	movf	??_vfpfcnvrt^(0+256),w
 22304  25FA  0084               	movwf	4
 22305  25FB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22306  25FC  0085               	movwf	5
 22307  25FD  0012               	moviw fsr0++
 22308  25FE  3A69               	xorlw	105
 22309  25FF  1D03               	btfss	3,2
 22310  2600  2E5A               	goto	l8055
 22311  2601                     l8047:	
 22312                           
 22313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 22314  2601  0021               	movlb	1	; select bank1
 22315  2602  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22316  2603  0086               	movwf	6
 22317  2604  3001               	movlw	1	; select bank2/3
 22318  2605  0087               	movwf	7
 22319  2606  3001               	movlw	1
 22320  2607  0781               	addwf	1,f
 22321  2608  3141               	addfsr 1,1
 22322  2609  1803               	skipnc
 22323  260A  0A81               	incf	1,f
 22324                           
 22325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 22326  260B  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22327  260C  0086               	movwf	6
 22328  260D  3001               	movlw	1	; select bank2/3
 22329  260E  0087               	movwf	7
 22330  260F  0801               	movf	1,w
 22331  2610  0084               	movwf	4
 22332  2611  3001               	movlw	1	; select bank2/3
 22333  2612  0085               	movwf	5
 22334  2613  3002               	movlw	2
 22335  2614  0781               	addwf	1,f
 22336  2615  3F00               	moviw [0]fsr0
 22337  2616  0022               	movlb	2	; select bank2
 22338  2617  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22339  2618  3F01               	moviw [1]fsr0
 22340  2619  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22341  261A  0820               	movf	??_vfpfcnvrt^(0+256),w
 22342  261B  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22343  261C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22344  261D  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22345  261E  0D89               	rlf	9,f
 22346  261F  3B89               	subwfb	9,f
 22347  2620  0989               	comf	9,f
 22348  2621  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22349  2622  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22350  2623  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22351  2624  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22352  2625  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22353  2626  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22354                           
 22355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 22356  2627  0021               	movlb	1	; select bank1
 22357  2628  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22358  2629  0020               	movlb	0	; select bank0
 22359  262A  00B1               	movwf	dtoa@fp+1
 22360  262B  0021               	movlb	1	; select bank1
 22361  262C  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22362  262D  0020               	movlb	0	; select bank0
 22363  262E  00B0               	movwf	dtoa@fp
 22364  262F  0022               	movlb	2	; select bank2
 22365  2630  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22366  2631  0020               	movlb	0	; select bank0
 22367  2632  00B2               	movwf	dtoa@d
 22368  2633  0022               	movlb	2	; select bank2
 22369  2634  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22370  2635  0020               	movlb	0	; select bank0
 22371  2636  00B3               	movwf	dtoa@d+1
 22372  2637  0022               	movlb	2	; select bank2
 22373  2638  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22374  2639  0020               	movlb	0	; select bank0
 22375  263A  00B4               	movwf	dtoa@d+2
 22376  263B  0022               	movlb	2	; select bank2
 22377  263C  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22378  263D  0020               	movlb	0	; select bank0
 22379  263E  00B5               	movwf	dtoa@d+3
 22380  263F  0022               	movlb	2	; select bank2
 22381  2640  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22382  2641  0020               	movlb	0	; select bank0
 22383  2642  00B6               	movwf	dtoa@d+4
 22384  2643  0022               	movlb	2	; select bank2
 22385  2644  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22386  2645  0020               	movlb	0	; select bank0
 22387  2646  00B7               	movwf	dtoa@d+5
 22388  2647  0022               	movlb	2	; select bank2
 22389  2648  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22390  2649  0020               	movlb	0	; select bank0
 22391  264A  00B8               	movwf	dtoa@d+6
 22392  264B  0022               	movlb	2	; select bank2
 22393  264C  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22394  264D  0020               	movlb	0	; select bank0
 22395  264E  00B9               	movwf	dtoa@d+7
 22396  264F  3199  21F8         	fcall	_dtoa
 22397  2651  0020               	movlb	0	; select bank0
 22398  2652  0831               	movf	?_dtoa+1,w
 22399  2653  0021               	movlb	1	; select bank1
 22400  2654  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22401  2655  0020               	movlb	0	; select bank0
 22402  2656  0830               	movf	?_dtoa,w
 22403  2657  0021               	movlb	1	; select bank1
 22404  2658  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22405  2659  0008               	return
 22406  265A                     l8055:	
 22407                           
 22408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 22409  265A  0021               	movlb	1	; select bank1
 22410  265B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22411  265C  0086               	movwf	6
 22412  265D  3001               	movlw	1	; select bank2/3
 22413  265E  0087               	movwf	7
 22414  265F  3F40               	moviw [0]fsr1
 22415  2660  00F1               	movwf	strncmp@_l
 22416  2661  3F41               	moviw [1]fsr1
 22417  2662  00F2               	movwf	strncmp@_l+1
 22418  2663  3076               	movlw	low (STR_53| (0+32768))
 22419  2664  00F3               	movwf	strncmp@_r
 22420  2665  30BB               	movlw	high (STR_53| (0+32768))
 22421  2666  00F4               	movwf	strncmp@_r+1
 22422  2667  3002               	movlw	2
 22423  2668  00F5               	movwf	strncmp@n
 22424  2669  3000               	movlw	0
 22425  266A  00F6               	movwf	strncmp@n+1
 22426  266B  31B3  23E5  31A5   	fcall	_strncmp
 22427  266E  0871               	movf	?_strncmp,w
 22428  266F  0472               	iorwf	?_strncmp+1,w
 22429  2670  1903               	btfsc	3,2
 22430  2671  2E8A               	goto	l8059
 22431  2672  0021               	movlb	1	; select bank1
 22432  2673  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22433  2674  0086               	movwf	6
 22434  2675  3001               	movlw	1	; select bank2/3
 22435  2676  0087               	movwf	7
 22436  2677  3F40               	moviw [0]fsr1
 22437  2678  00F1               	movwf	strncmp@_l
 22438  2679  3F41               	moviw [1]fsr1
 22439  267A  00F2               	movwf	strncmp@_l+1
 22440  267B  307F               	movlw	low (STR_57| (0+32768))
 22441  267C  00F3               	movwf	strncmp@_r
 22442  267D  30BB               	movlw	high (STR_57| (0+32768))
 22443  267E  00F4               	movwf	strncmp@_r+1
 22444  267F  3002               	movlw	2
 22445  2680  00F5               	movwf	strncmp@n
 22446  2681  3000               	movlw	0
 22447  2682  00F6               	movwf	strncmp@n+1
 22448  2683  31B3  23E5  31A5   	fcall	_strncmp
 22449  2686  0871               	movf	?_strncmp,w
 22450  2687  0472               	iorwf	?_strncmp+1,w
 22451  2688  1D03               	btfss	3,2
 22452  2689  2EE9               	goto	L22
 22453  268A                     l8059:	
 22454                           
 22455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 22456  268A  0021               	movlb	1	; select bank1
 22457  268B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22458  268C  0086               	movwf	6
 22459  268D  3001               	movlw	1	; select bank2/3
 22460  268E  0087               	movwf	7
 22461  268F  3002               	movlw	2
 22462  2690  0781               	addwf	1,f
 22463  2691  3141               	addfsr 1,1
 22464  2692  1803               	skipnc
 22465  2693  0A81               	incf	1,f
 22466                           
 22467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 22468  2694  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22469  2695  0086               	movwf	6
 22470  2696  3001               	movlw	1	; select bank2/3
 22471  2697  0087               	movwf	7
 22472  2698  0801               	movf	1,w
 22473  2699  0084               	movwf	4
 22474  269A  3001               	movlw	1	; select bank2/3
 22475  269B  0085               	movwf	5
 22476  269C  3004               	movlw	4
 22477  269D  0781               	addwf	1,f
 22478  269E  3F00               	moviw [0]fsr0
 22479  269F  0022               	movlb	2	; select bank2
 22480  26A0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22481  26A1  3F01               	moviw [1]fsr0
 22482  26A2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22483  26A3  3F02               	moviw [2]fsr0
 22484  26A4  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22485  26A5  3F03               	moviw [3]fsr0
 22486  26A6  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22487  26A7  0820               	movf	??_vfpfcnvrt^(0+256),w
 22488  26A8  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22489  26A9  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22490  26AA  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22491  26AB  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22492  26AC  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22493  26AD  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22494  26AE  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22495  26AF  3000               	movlw	0
 22496  26B0  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 22497  26B1  30FF               	movlw	255
 22498  26B2  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22499  26B3  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22500  26B4  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22501  26B5  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22502                           
 22503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 22504  26B6  0021               	movlb	1	; select bank1
 22505  26B7  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22506  26B8  0020               	movlb	0	; select bank0
 22507  26B9  00B1               	movwf	dtoa@fp+1
 22508  26BA  0021               	movlb	1	; select bank1
 22509  26BB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22510  26BC  0020               	movlb	0	; select bank0
 22511  26BD  00B0               	movwf	dtoa@fp
 22512  26BE  0022               	movlb	2	; select bank2
 22513  26BF  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22514  26C0  0020               	movlb	0	; select bank0
 22515  26C1  00B2               	movwf	dtoa@d
 22516  26C2  0022               	movlb	2	; select bank2
 22517  26C3  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22518  26C4  0020               	movlb	0	; select bank0
 22519  26C5  00B3               	movwf	dtoa@d+1
 22520  26C6  0022               	movlb	2	; select bank2
 22521  26C7  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22522  26C8  0020               	movlb	0	; select bank0
 22523  26C9  00B4               	movwf	dtoa@d+2
 22524  26CA  0022               	movlb	2	; select bank2
 22525  26CB  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22526  26CC  0020               	movlb	0	; select bank0
 22527  26CD  00B5               	movwf	dtoa@d+3
 22528  26CE  0022               	movlb	2	; select bank2
 22529  26CF  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22530  26D0  0020               	movlb	0	; select bank0
 22531  26D1  00B6               	movwf	dtoa@d+4
 22532  26D2  0022               	movlb	2	; select bank2
 22533  26D3  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22534  26D4  0020               	movlb	0	; select bank0
 22535  26D5  00B7               	movwf	dtoa@d+5
 22536  26D6  0022               	movlb	2	; select bank2
 22537  26D7  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22538  26D8  0020               	movlb	0	; select bank0
 22539  26D9  00B8               	movwf	dtoa@d+6
 22540  26DA  0022               	movlb	2	; select bank2
 22541  26DB  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22542  26DC  0020               	movlb	0	; select bank0
 22543  26DD  00B9               	movwf	dtoa@d+7
 22544  26DE  3199  21F8         	fcall	_dtoa
 22545  26E0  0020               	movlb	0	; select bank0
 22546  26E1  0831               	movf	?_dtoa+1,w
 22547  26E2  0021               	movlb	1	; select bank1
 22548  26E3  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22549  26E4  0020               	movlb	0	; select bank0
 22550  26E5  0830               	movf	?_dtoa,w
 22551  26E6  0021               	movlb	1	; select bank1
 22552  26E7  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22553  26E8  0008               	return
 22554  26E9                     L22:	
 22555  26E9                     L21:	
 22556  26E9  31A8  286A         	ljmp	l8067
 22557                           
 22558                           	psect	text9_split_4
 22559  286A                     l8067:	
 22560                           
 22561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 22562  286A  0021               	movlb	1	; select bank1
 22563  286B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22564  286C  0086               	movwf	6
 22565  286D  3001               	movlw	1	; select bank2/3
 22566  286E  0087               	movwf	7
 22567  286F  3F40               	moviw [0]fsr1
 22568  2870  00F1               	movwf	strncmp@_l
 22569  2871  3F41               	moviw [1]fsr1
 22570  2872  00F2               	movwf	strncmp@_l+1
 22571  2873  3079               	movlw	low (STR_62| (0+32768))
 22572  2874  00F3               	movwf	strncmp@_r
 22573  2875  30BB               	movlw	high (STR_62| (0+32768))
 22574  2876  00F4               	movwf	strncmp@_r+1
 22575  2877  3002               	movlw	2
 22576  2878  00F5               	movwf	strncmp@n
 22577  2879  3000               	movlw	0
 22578  287A  00F6               	movwf	strncmp@n+1
 22579  287B  31B3  23E5  31A8   	fcall	_strncmp
 22580  287E  0871               	movf	?_strncmp,w
 22581  287F  0472               	iorwf	?_strncmp+1,w
 22582  2880  1903               	btfsc	3,2
 22583  2881  289A               	goto	l8071
 22584  2882  0021               	movlb	1	; select bank1
 22585  2883  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22586  2884  0086               	movwf	6
 22587  2885  3001               	movlw	1	; select bank2/3
 22588  2886  0087               	movwf	7
 22589  2887  3F40               	moviw [0]fsr1
 22590  2888  00F1               	movwf	strncmp@_l
 22591  2889  3F41               	moviw [1]fsr1
 22592  288A  00F2               	movwf	strncmp@_l+1
 22593  288B  3082               	movlw	low (STR_66| (0+32768))
 22594  288C  00F3               	movwf	strncmp@_r
 22595  288D  30BB               	movlw	high (STR_66| (0+32768))
 22596  288E  00F4               	movwf	strncmp@_r+1
 22597  288F  3002               	movlw	2
 22598  2890  00F5               	movwf	strncmp@n
 22599  2891  3000               	movlw	0
 22600  2892  00F6               	movwf	strncmp@n+1
 22601  2893  31B3  23E5  31A8   	fcall	_strncmp
 22602  2896  0871               	movf	?_strncmp,w
 22603  2897  0472               	iorwf	?_strncmp+1,w
 22604  2898  1D03               	btfss	3,2
 22605  2899  28EC               	goto	L24
 22606  289A                     l8071:	
 22607                           
 22608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 22609  289A  0021               	movlb	1	; select bank1
 22610  289B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22611  289C  0086               	movwf	6
 22612  289D  3001               	movlw	1	; select bank2/3
 22613  289E  0087               	movwf	7
 22614  289F  3002               	movlw	2
 22615  28A0  0781               	addwf	1,f
 22616  28A1  3141               	addfsr 1,1
 22617  28A2  1803               	skipnc
 22618  28A3  0A81               	incf	1,f
 22619                           
 22620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22621  28A4  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22622  28A5  0086               	movwf	6
 22623  28A6  3001               	movlw	1	; select bank2/3
 22624  28A7  0087               	movwf	7
 22625  28A8  0801               	movf	1,w
 22626  28A9  0084               	movwf	4
 22627  28AA  3001               	movlw	1	; select bank2/3
 22628  28AB  0085               	movwf	5
 22629  28AC  3002               	movlw	2
 22630  28AD  0781               	addwf	1,f
 22631  28AE  3F00               	moviw [0]fsr0
 22632  28AF  0022               	movlb	2	; select bank2
 22633  28B0  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22634  28B1  3F01               	moviw [1]fsr0
 22635  28B2  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22636  28B3  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 22637  28B4  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 22638  28B5  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 22639  28B6  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 22640  28B7  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 22641  28B8  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 22642                           
 22643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 22644  28B9  0021               	movlb	1	; select bank1
 22645  28BA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22646  28BB  0020               	movlb	0	; select bank0
 22647  28BC  00B1               	movwf	dtoa@fp+1
 22648  28BD  0021               	movlb	1	; select bank1
 22649  28BE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22650  28BF  0020               	movlb	0	; select bank0
 22651  28C0  00B0               	movwf	dtoa@fp
 22652  28C1  0022               	movlb	2	; select bank2
 22653  28C2  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22654  28C3  0020               	movlb	0	; select bank0
 22655  28C4  00B2               	movwf	dtoa@d
 22656  28C5  0022               	movlb	2	; select bank2
 22657  28C6  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22658  28C7  0020               	movlb	0	; select bank0
 22659  28C8  00B3               	movwf	dtoa@d+1
 22660  28C9  0022               	movlb	2	; select bank2
 22661  28CA  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22662  28CB  0020               	movlb	0	; select bank0
 22663  28CC  00B4               	movwf	dtoa@d+2
 22664  28CD  0022               	movlb	2	; select bank2
 22665  28CE  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22666  28CF  0020               	movlb	0	; select bank0
 22667  28D0  00B5               	movwf	dtoa@d+3
 22668  28D1  0022               	movlb	2	; select bank2
 22669  28D2  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22670  28D3  0020               	movlb	0	; select bank0
 22671  28D4  00B6               	movwf	dtoa@d+4
 22672  28D5  0022               	movlb	2	; select bank2
 22673  28D6  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22674  28D7  0020               	movlb	0	; select bank0
 22675  28D8  00B7               	movwf	dtoa@d+5
 22676  28D9  0022               	movlb	2	; select bank2
 22677  28DA  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22678  28DB  0020               	movlb	0	; select bank0
 22679  28DC  00B8               	movwf	dtoa@d+6
 22680  28DD  0022               	movlb	2	; select bank2
 22681  28DE  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22682  28DF  0020               	movlb	0	; select bank0
 22683  28E0  00B9               	movwf	dtoa@d+7
 22684  28E1  3199  21F8         	fcall	_dtoa
 22685  28E3  0020               	movlb	0	; select bank0
 22686  28E4  0831               	movf	?_dtoa+1,w
 22687  28E5  0021               	movlb	1	; select bank1
 22688  28E6  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22689  28E7  0020               	movlb	0	; select bank0
 22690  28E8  0830               	movf	?_dtoa,w
 22691  28E9  0021               	movlb	1	; select bank1
 22692  28EA  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22693  28EB  0008               	return
 22694  28EC                     L24:	
 22695  28EC                     L23:	
 22696  28EC  31A4  2CDF         	ljmp	l8079
 22697                           
 22698                           	psect	text9_split_5
 22699  24DF                     l8079:	
 22700                           
 22701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 22702  24DF  3066               	movlw	102
 22703  24E0  0022               	movlb	2	; select bank2
 22704  24E1  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 22705  24E2  1D03               	btfss	3,2
 22706  24E3  2D36               	goto	l8091
 22707                           
 22708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 22709  24E4  0021               	movlb	1	; select bank1
 22710  24E5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22711  24E6  0086               	movwf	6
 22712  24E7  3001               	movlw	1	; select bank2/3
 22713  24E8  0087               	movwf	7
 22714  24E9  3F40               	moviw [0]fsr1
 22715  24EA  0022               	movlb	2	; select bank2
 22716  24EB  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22717  24EC  3F41               	moviw [1]fsr1
 22718  24ED  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22719  24EE  0820               	movf	??_vfpfcnvrt^(0+256),w
 22720  24EF  0084               	movwf	4
 22721  24F0  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22722  24F1  0085               	movwf	5
 22723  24F2  0800               	movf	0,w	;code access
 22724  24F3  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22725  24F4  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22726  24F5  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22727                           
 22728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 22729  24F6  0021               	movlb	1	; select bank1
 22730  24F7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22731  24F8  0086               	movwf	6
 22732  24F9  3001               	movlw	1	; select bank2/3
 22733  24FA  0087               	movwf	7
 22734  24FB  3001               	movlw	1
 22735  24FC  0781               	addwf	1,f
 22736  24FD  3141               	addfsr 1,1
 22737  24FE  1803               	skipnc
 22738  24FF  0A81               	incf	1,f
 22739                           
 22740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 22741  2500  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22742  2501  0086               	movwf	6
 22743  2502  3001               	movlw	1	; select bank2/3
 22744  2503  0087               	movwf	7
 22745  2504  0801               	movf	1,w
 22746  2505  0084               	movwf	4
 22747  2506  3001               	movlw	1	; select bank2/3
 22748  2507  0085               	movwf	5
 22749  2508  3004               	movlw	4
 22750  2509  0781               	addwf	1,f
 22751  250A  3F00               	moviw [0]fsr0
 22752  250B  0022               	movlb	2	; select bank2
 22753  250C  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22754  250D  3F01               	moviw [1]fsr0
 22755  250E  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22756  250F  3F02               	moviw [2]fsr0
 22757  2510  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22758  2511  3F03               	moviw [3]fsr0
 22759  2512  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 22760                           
 22761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 22762  2513  0021               	movlb	1	; select bank1
 22763  2514  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22764  2515  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 22765  2516  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22766  2517  00A9               	movwf	efgtoa@fp^(0+128)
 22767  2518  0022               	movlb	2	; select bank2
 22768  2519  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 22769  251A  0021               	movlb	1	; select bank1
 22770  251B  00AE               	movwf	(efgtoa@f+3)^(0+128)
 22771  251C  0022               	movlb	2	; select bank2
 22772  251D  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 22773  251E  0021               	movlb	1	; select bank1
 22774  251F  00AD               	movwf	(efgtoa@f+2)^(0+128)
 22775  2520  0022               	movlb	2	; select bank2
 22776  2521  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 22777  2522  0021               	movlb	1	; select bank1
 22778  2523  00AC               	movwf	(efgtoa@f+1)^(0+128)
 22779  2524  0022               	movlb	2	; select bank2
 22780  2525  0838               	movf	vfpfcnvrt@f^(0+256),w
 22781  2526  0021               	movlb	1	; select bank1
 22782  2527  00AB               	movwf	efgtoa@f^(0+128)
 22783  2528  0022               	movlb	2	; select bank2
 22784  2529  0845               	movf	vfpfcnvrt@c^(0+256),w
 22785  252A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22786  252B  0820               	movf	??_vfpfcnvrt^(0+256),w
 22787  252C  0021               	movlb	1	; select bank1
 22788  252D  00AF               	movwf	efgtoa@c^(0+128)
 22789  252E  3180  2063         	fcall	_efgtoa
 22790  2530  0021               	movlb	1	; select bank1
 22791  2531  082A               	movf	(?_efgtoa+1)^(0+128),w
 22792  2532  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22793  2533  0829               	movf	?_efgtoa^(0+128),w
 22794  2534  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22795  2535  0008               	return
 22796  2536                     l8091:	
 22797                           
 22798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 22799  2536  3035               	movlw	low vfpfcnvrt@ct
 22800  2537  00F1               	movwf	strncmp@_l
 22801  2538  3001               	movlw	high vfpfcnvrt@ct
 22802  2539  00F2               	movwf	strncmp@_l+1
 22803  253A  307C               	movlw	low (STR_71| (0+32768))
 22804  253B  00F3               	movwf	strncmp@_r
 22805  253C  30BB               	movlw	high (STR_71| (0+32768))
 22806  253D  00F4               	movwf	strncmp@_r+1
 22807  253E  3002               	movlw	2
 22808  253F  00F5               	movwf	strncmp@n
 22809  2540  3000               	movlw	0
 22810  2541  00F6               	movwf	strncmp@n+1
 22811  2542  31B3  23E5  31A4   	fcall	_strncmp
 22812  2545  0871               	movf	?_strncmp,w
 22813  2546  0472               	iorwf	?_strncmp+1,w
 22814  2547  1D03               	btfss	3,2
 22815  2548  2DDB               	goto	L26
 22816                           
 22817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 22818  2549  0021               	movlb	1	; select bank1
 22819  254A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22820  254B  0086               	movwf	6
 22821  254C  3001               	movlw	1	; select bank2/3
 22822  254D  0087               	movwf	7
 22823  254E  3F40               	moviw [0]fsr1
 22824  254F  0022               	movlb	2	; select bank2
 22825  2550  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22826  2551  3F41               	moviw [1]fsr1
 22827  2552  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22828  2553  3001               	movlw	1
 22829  2554  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22830  2555  0084               	movwf	4
 22831  2556  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22832  2557  1803               	skipnc
 22833  2558  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22834  2559  0085               	movwf	5
 22835  255A  0800               	movf	0,w	;code access
 22836  255B  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22837  255C  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22838  255D  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22839  255E  0021               	movlb	1	; select bank1
 22840  255F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22841  2560  0086               	movwf	6
 22842  2561  3001               	movlw	1	; select bank2/3
 22843  2562  0087               	movwf	7
 22844  2563  3F40               	moviw [0]fsr1
 22845  2564  0022               	movlb	2	; select bank2
 22846  2565  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22847  2566  3F41               	moviw [1]fsr1
 22848  2567  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22849  2568  0820               	movf	??_vfpfcnvrt^(0+256),w
 22850  2569  0084               	movwf	4
 22851  256A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22852  256B  0085               	movwf	5
 22853  256C  0800               	movf	0,w	;code access
 22854  256D  3EBF               	addlw	191
 22855  256E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22856  256F  30FF               	movlw	255
 22857  2570  1803               	skipnc
 22858  2571  3000               	movlw	0
 22859  2572  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 22860  2573  3000               	movlw	0
 22861  2574  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 22862  2575  301A               	movlw	26
 22863  2576  1903               	skipnz
 22864  2577  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 22865  2578  1803               	btfsc	3,0
 22866  2579  2D7C               	goto	u11320
 22867  257A  3001               	movlw	1
 22868  257B  2D7D               	goto	u11330
 22869  257C                     u11320:	
 22870  257C  3000               	movlw	0
 22871  257D                     u11330:	
 22872  257D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22873  257E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 22874  257F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22875  2580  00B3               	movwf	_vfpfcnvrt$1343^(0+256)
 22876  2581  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 22877  2582  00B4               	movwf	(_vfpfcnvrt$1343+1)^(0+256)
 22878  2583  0833               	movf	_vfpfcnvrt$1343^(0+256),w
 22879  2584  0434               	iorwf	(_vfpfcnvrt$1343+1)^(0+256),w
 22880  2585  1903               	btfsc	3,2
 22881  2586  2D9B               	goto	l8101
 22882                           
 22883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 22884  2587  0021               	movlb	1	; select bank1
 22885  2588  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22886  2589  0086               	movwf	6
 22887  258A  3001               	movlw	1	; select bank2/3
 22888  258B  0087               	movwf	7
 22889  258C  0801               	movf	1,w
 22890  258D  0084               	movwf	4
 22891  258E  3001               	movlw	1	; select bank2/3
 22892  258F  0085               	movwf	5
 22893  2590  3004               	movlw	4
 22894  2591  0781               	addwf	1,f
 22895  2592  3F00               	moviw [0]fsr0
 22896  2593  0022               	movlb	2	; select bank2
 22897  2594  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22898  2595  3F01               	moviw [1]fsr0
 22899  2596  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22900  2597  3F02               	moviw [2]fsr0
 22901  2598  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22902  2599  3F03               	moviw [3]fsr0
 22903  259A  2DAE               	goto	L1
 22904  259B                     l8101:	
 22905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 22906                           
 22907                           
 22908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 22909  259B  0021               	movlb	1	; select bank1
 22910  259C  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22911  259D  0086               	movwf	6
 22912  259E  3001               	movlw	1	; select bank2/3
 22913  259F  0087               	movwf	7
 22914  25A0  0801               	movf	1,w
 22915  25A1  0084               	movwf	4
 22916  25A2  3001               	movlw	1	; select bank2/3
 22917  25A3  0085               	movwf	5
 22918  25A4  3004               	movlw	4
 22919  25A5  0781               	addwf	1,f
 22920  25A6  3F00               	moviw [0]fsr0
 22921  25A7  0022               	movlb	2	; select bank2
 22922  25A8  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22923  25A9  3F01               	moviw [1]fsr0
 22924  25AA  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22925  25AB  3F02               	moviw [2]fsr0
 22926  25AC  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22927  25AD  3F03               	moviw [3]fsr0
 22928  25AE                     L1:	
 22929  25AE  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 22930                           
 22931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 22932  25AF  0021               	movlb	1	; select bank1
 22933  25B0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22934  25B1  0086               	movwf	6
 22935  25B2  3001               	movlw	1	; select bank2/3
 22936  25B3  0087               	movwf	7
 22937  25B4  3002               	movlw	2
 22938  25B5  0781               	addwf	1,f
 22939  25B6  3141               	addfsr 1,1
 22940  25B7  1803               	skipnc
 22941  25B8  0A81               	incf	1,f
 22942                           
 22943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 22944  25B9  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22945  25BA  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 22946  25BB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22947  25BC  00A9               	movwf	efgtoa@fp^(0+128)
 22948  25BD  0022               	movlb	2	; select bank2
 22949  25BE  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 22950  25BF  0021               	movlb	1	; select bank1
 22951  25C0  00AE               	movwf	(efgtoa@f+3)^(0+128)
 22952  25C1  0022               	movlb	2	; select bank2
 22953  25C2  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 22954  25C3  0021               	movlb	1	; select bank1
 22955  25C4  00AD               	movwf	(efgtoa@f+2)^(0+128)
 22956  25C5  0022               	movlb	2	; select bank2
 22957  25C6  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 22958  25C7  0021               	movlb	1	; select bank1
 22959  25C8  00AC               	movwf	(efgtoa@f+1)^(0+128)
 22960  25C9  0022               	movlb	2	; select bank2
 22961  25CA  0838               	movf	vfpfcnvrt@f^(0+256),w
 22962  25CB  0021               	movlb	1	; select bank1
 22963  25CC  00AB               	movwf	efgtoa@f^(0+128)
 22964  25CD  0022               	movlb	2	; select bank2
 22965  25CE  0845               	movf	vfpfcnvrt@c^(0+256),w
 22966  25CF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22967  25D0  0820               	movf	??_vfpfcnvrt^(0+256),w
 22968  25D1  0021               	movlb	1	; select bank1
 22969  25D2  00AF               	movwf	efgtoa@c^(0+128)
 22970  25D3  3180  2063         	fcall	_efgtoa
 22971  25D5  0021               	movlb	1	; select bank1
 22972  25D6  082A               	movf	(?_efgtoa+1)^(0+128),w
 22973  25D7  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22974  25D8  0829               	movf	?_efgtoa^(0+128),w
 22975  25D9  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22976  25DA  0008               	return
 22977  25DB                     L26:	
 22978  25DB                     L25:	
 22979  25DB  31AD  2D78         	ljmp	l8109
 22980                           
 22981                           	psect	text9_split_6
 22982  2D78                     l8109:	
 22983                           
 22984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 22985  2D78  0021               	movlb	1	; select bank1
 22986  2D79  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22987  2D7A  0086               	movwf	6
 22988  2D7B  3001               	movlw	1	; select bank2/3
 22989  2D7C  0087               	movwf	7
 22990  2D7D  3F40               	moviw [0]fsr1
 22991  2D7E  00F1               	movwf	strncmp@_l
 22992  2D7F  3F41               	moviw [1]fsr1
 22993  2D80  00F2               	movwf	strncmp@_l+1
 22994  2D81  3064               	movlw	low (STR_76| (0+32768))
 22995  2D82  00F3               	movwf	strncmp@_r
 22996  2D83  30BB               	movlw	high (STR_76| (0+32768))
 22997  2D84  00F4               	movwf	strncmp@_r+1
 22998  2D85  3003               	movlw	3
 22999  2D86  00F5               	movwf	strncmp@n
 23000  2D87  3000               	movlw	0
 23001  2D88  00F6               	movwf	strncmp@n+1
 23002  2D89  31B3  23E5  31AD   	fcall	_strncmp
 23003  2D8C  0871               	movf	?_strncmp,w
 23004  2D8D  0472               	iorwf	?_strncmp+1,w
 23005  2D8E  1D03               	btfss	3,2
 23006  2D8F  2DE1               	goto	l8119
 23007                           
 23008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 23009  2D90  0021               	movlb	1	; select bank1
 23010  2D91  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23011  2D92  0086               	movwf	6
 23012  2D93  3001               	movlw	1	; select bank2/3
 23013  2D94  0087               	movwf	7
 23014  2D95  3003               	movlw	3
 23015  2D96  0781               	addwf	1,f
 23016  2D97  3141               	addfsr 1,1
 23017  2D98  1803               	skipnc
 23018  2D99  0A81               	incf	1,f
 23019                           
 23020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23021  2D9A  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23022  2D9B  0086               	movwf	6
 23023  2D9C  3001               	movlw	1	; select bank2/3
 23024  2D9D  0087               	movwf	7
 23025  2D9E  0801               	movf	1,w
 23026  2D9F  0084               	movwf	4
 23027  2DA0  3001               	movlw	1	; select bank2/3
 23028  2DA1  0085               	movwf	5
 23029  2DA2  3002               	movlw	2
 23030  2DA3  0781               	addwf	1,f
 23031  2DA4  0800               	movf	0,w
 23032  2DA5  0022               	movlb	2	; select bank2
 23033  2DA6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23034  2DA7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 23035  2DA8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23036  2DA9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23037  2DAA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23038  2DAB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23039  2DAC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23040  2DAD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23041                           
 23042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 23043  2DAE  0021               	movlb	1	; select bank1
 23044  2DAF  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23045  2DB0  0020               	movlb	0	; select bank0
 23046  2DB1  00B1               	movwf	otoa@fp+1
 23047  2DB2  0021               	movlb	1	; select bank1
 23048  2DB3  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23049  2DB4  0020               	movlb	0	; select bank0
 23050  2DB5  00B0               	movwf	otoa@fp
 23051  2DB6  0022               	movlb	2	; select bank2
 23052  2DB7  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23053  2DB8  0020               	movlb	0	; select bank0
 23054  2DB9  00B2               	movwf	otoa@d
 23055  2DBA  0022               	movlb	2	; select bank2
 23056  2DBB  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23057  2DBC  0020               	movlb	0	; select bank0
 23058  2DBD  00B3               	movwf	otoa@d+1
 23059  2DBE  0022               	movlb	2	; select bank2
 23060  2DBF  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23061  2DC0  0020               	movlb	0	; select bank0
 23062  2DC1  00B4               	movwf	otoa@d+2
 23063  2DC2  0022               	movlb	2	; select bank2
 23064  2DC3  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23065  2DC4  0020               	movlb	0	; select bank0
 23066  2DC5  00B5               	movwf	otoa@d+3
 23067  2DC6  0022               	movlb	2	; select bank2
 23068  2DC7  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23069  2DC8  0020               	movlb	0	; select bank0
 23070  2DC9  00B6               	movwf	otoa@d+4
 23071  2DCA  0022               	movlb	2	; select bank2
 23072  2DCB  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23073  2DCC  0020               	movlb	0	; select bank0
 23074  2DCD  00B7               	movwf	otoa@d+5
 23075  2DCE  0022               	movlb	2	; select bank2
 23076  2DCF  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23077  2DD0  0020               	movlb	0	; select bank0
 23078  2DD1  00B8               	movwf	otoa@d+6
 23079  2DD2  0022               	movlb	2	; select bank2
 23080  2DD3  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23081  2DD4  0020               	movlb	0	; select bank0
 23082  2DD5  00B9               	movwf	otoa@d+7
 23083  2DD6  31A2  22FB         	fcall	_otoa
 23084  2DD8  0020               	movlb	0	; select bank0
 23085  2DD9  0831               	movf	?_otoa+1,w
 23086  2DDA  0021               	movlb	1	; select bank1
 23087  2DDB  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23088  2DDC  0020               	movlb	0	; select bank0
 23089  2DDD  0830               	movf	?_otoa,w
 23090  2DDE  0021               	movlb	1	; select bank1
 23091  2DDF  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23092  2DE0  0008               	return
 23093  2DE1                     l8119:	
 23094                           
 23095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 23096  2DE1  0021               	movlb	1	; select bank1
 23097  2DE2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23098  2DE3  0086               	movwf	6
 23099  2DE4  3001               	movlw	1	; select bank2/3
 23100  2DE5  0087               	movwf	7
 23101  2DE6  3F40               	moviw [0]fsr1
 23102  2DE7  00F1               	movwf	strncmp@_l
 23103  2DE8  3F41               	moviw [1]fsr1
 23104  2DE9  00F2               	movwf	strncmp@_l+1
 23105  2DEA  3065               	movlw	low ((STR_76+1)| (0+32768))
 23106  2DEB  00F3               	movwf	strncmp@_r
 23107  2DEC  30BB               	movlw	high ((STR_76+1)| (0+32768))
 23108  2DED  00F4               	movwf	strncmp@_r+1
 23109  2DEE  3002               	movlw	2
 23110  2DEF  00F5               	movwf	strncmp@n
 23111  2DF0  3000               	movlw	0
 23112  2DF1  00F6               	movwf	strncmp@n+1
 23113  2DF2  31B3  23E5  31AD   	fcall	_strncmp
 23114  2DF5  0871               	movf	?_strncmp,w
 23115  2DF6  0472               	iorwf	?_strncmp+1,w
 23116  2DF7  1D03               	btfss	3,2
 23117  2DF8  2E4B               	goto	L28
 23118                           
 23119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 23120  2DF9  0021               	movlb	1	; select bank1
 23121  2DFA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23122  2DFB  0086               	movwf	6
 23123  2DFC  3001               	movlw	1	; select bank2/3
 23124  2DFD  0087               	movwf	7
 23125  2DFE  3002               	movlw	2
 23126  2DFF  0781               	addwf	1,f
 23127  2E00  3141               	addfsr 1,1
 23128  2E01  1803               	skipnc
 23129  2E02  0A81               	incf	1,f
 23130                           
 23131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 23132  2E03  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23133  2E04  0086               	movwf	6
 23134  2E05  3001               	movlw	1	; select bank2/3
 23135  2E06  0087               	movwf	7
 23136  2E07  0801               	movf	1,w
 23137  2E08  0084               	movwf	4
 23138  2E09  3001               	movlw	1	; select bank2/3
 23139  2E0A  0085               	movwf	5
 23140  2E0B  3002               	movlw	2
 23141  2E0C  0781               	addwf	1,f
 23142  2E0D  3F00               	moviw [0]fsr0
 23143  2E0E  0022               	movlb	2	; select bank2
 23144  2E0F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23145  2E10  3F01               	moviw [1]fsr0
 23146  2E11  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23147  2E12  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23148  2E13  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23149  2E14  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23150  2E15  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23151  2E16  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23152  2E17  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23153                           
 23154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 23155  2E18  0021               	movlb	1	; select bank1
 23156  2E19  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23157  2E1A  0020               	movlb	0	; select bank0
 23158  2E1B  00B1               	movwf	otoa@fp+1
 23159  2E1C  0021               	movlb	1	; select bank1
 23160  2E1D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23161  2E1E  0020               	movlb	0	; select bank0
 23162  2E1F  00B0               	movwf	otoa@fp
 23163  2E20  0022               	movlb	2	; select bank2
 23164  2E21  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23165  2E22  0020               	movlb	0	; select bank0
 23166  2E23  00B2               	movwf	otoa@d
 23167  2E24  0022               	movlb	2	; select bank2
 23168  2E25  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23169  2E26  0020               	movlb	0	; select bank0
 23170  2E27  00B3               	movwf	otoa@d+1
 23171  2E28  0022               	movlb	2	; select bank2
 23172  2E29  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23173  2E2A  0020               	movlb	0	; select bank0
 23174  2E2B  00B4               	movwf	otoa@d+2
 23175  2E2C  0022               	movlb	2	; select bank2
 23176  2E2D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23177  2E2E  0020               	movlb	0	; select bank0
 23178  2E2F  00B5               	movwf	otoa@d+3
 23179  2E30  0022               	movlb	2	; select bank2
 23180  2E31  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23181  2E32  0020               	movlb	0	; select bank0
 23182  2E33  00B6               	movwf	otoa@d+4
 23183  2E34  0022               	movlb	2	; select bank2
 23184  2E35  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23185  2E36  0020               	movlb	0	; select bank0
 23186  2E37  00B7               	movwf	otoa@d+5
 23187  2E38  0022               	movlb	2	; select bank2
 23188  2E39  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23189  2E3A  0020               	movlb	0	; select bank0
 23190  2E3B  00B8               	movwf	otoa@d+6
 23191  2E3C  0022               	movlb	2	; select bank2
 23192  2E3D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23193  2E3E  0020               	movlb	0	; select bank0
 23194  2E3F  00B9               	movwf	otoa@d+7
 23195  2E40  31A2  22FB         	fcall	_otoa
 23196  2E42  0020               	movlb	0	; select bank0
 23197  2E43  0831               	movf	?_otoa+1,w
 23198  2E44  0021               	movlb	1	; select bank1
 23199  2E45  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23200  2E46  0020               	movlb	0	; select bank0
 23201  2E47  0830               	movf	?_otoa,w
 23202  2E48  0021               	movlb	1	; select bank1
 23203  2E49  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23204  2E4A  0008               	return
 23205  2E4B                     L28:	
 23206  2E4B                     L27:	
 23207  2E4B  31A2  2A11         	ljmp	l8129
 23208                           
 23209                           	psect	text9_split_7
 23210  2211                     l8129:	
 23211                           
 23212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 23213  2211  0021               	movlb	1	; select bank1
 23214  2212  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23215  2213  0086               	movwf	6
 23216  2214  3001               	movlw	1	; select bank2/3
 23217  2215  0087               	movwf	7
 23218  2216  3F40               	moviw [0]fsr1
 23219  2217  0022               	movlb	2	; select bank2
 23220  2218  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23221  2219  3F41               	moviw [1]fsr1
 23222  221A  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23223  221B  0820               	movf	??_vfpfcnvrt^(0+256),w
 23224  221C  0084               	movwf	4
 23225  221D  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23226  221E  0085               	movwf	5
 23227  221F  0012               	moviw fsr0++
 23228  2220  3A6F               	xorlw	111
 23229  2221  1D03               	btfss	3,2
 23230  2222  2A75               	goto	l8139
 23231                           
 23232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 23233  2223  0021               	movlb	1	; select bank1
 23234  2224  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23235  2225  0086               	movwf	6
 23236  2226  3001               	movlw	1	; select bank2/3
 23237  2227  0087               	movwf	7
 23238  2228  3001               	movlw	1
 23239  2229  0781               	addwf	1,f
 23240  222A  3141               	addfsr 1,1
 23241  222B  1803               	skipnc
 23242  222C  0A81               	incf	1,f
 23243                           
 23244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 23245  222D  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23246  222E  0086               	movwf	6
 23247  222F  3001               	movlw	1	; select bank2/3
 23248  2230  0087               	movwf	7
 23249  2231  0801               	movf	1,w
 23250  2232  0084               	movwf	4
 23251  2233  3001               	movlw	1	; select bank2/3
 23252  2234  0085               	movwf	5
 23253  2235  3002               	movlw	2
 23254  2236  0781               	addwf	1,f
 23255  2237  3F00               	moviw [0]fsr0
 23256  2238  0022               	movlb	2	; select bank2
 23257  2239  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23258  223A  3F01               	moviw [1]fsr0
 23259  223B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23260  223C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23261  223D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23262  223E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23263  223F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23264  2240  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23265  2241  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23266                           
 23267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 23268  2242  0021               	movlb	1	; select bank1
 23269  2243  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23270  2244  0020               	movlb	0	; select bank0
 23271  2245  00B1               	movwf	otoa@fp+1
 23272  2246  0021               	movlb	1	; select bank1
 23273  2247  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23274  2248  0020               	movlb	0	; select bank0
 23275  2249  00B0               	movwf	otoa@fp
 23276  224A  0022               	movlb	2	; select bank2
 23277  224B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23278  224C  0020               	movlb	0	; select bank0
 23279  224D  00B2               	movwf	otoa@d
 23280  224E  0022               	movlb	2	; select bank2
 23281  224F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23282  2250  0020               	movlb	0	; select bank0
 23283  2251  00B3               	movwf	otoa@d+1
 23284  2252  0022               	movlb	2	; select bank2
 23285  2253  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23286  2254  0020               	movlb	0	; select bank0
 23287  2255  00B4               	movwf	otoa@d+2
 23288  2256  0022               	movlb	2	; select bank2
 23289  2257  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23290  2258  0020               	movlb	0	; select bank0
 23291  2259  00B5               	movwf	otoa@d+3
 23292  225A  0022               	movlb	2	; select bank2
 23293  225B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23294  225C  0020               	movlb	0	; select bank0
 23295  225D  00B6               	movwf	otoa@d+4
 23296  225E  0022               	movlb	2	; select bank2
 23297  225F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23298  2260  0020               	movlb	0	; select bank0
 23299  2261  00B7               	movwf	otoa@d+5
 23300  2262  0022               	movlb	2	; select bank2
 23301  2263  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23302  2264  0020               	movlb	0	; select bank0
 23303  2265  00B8               	movwf	otoa@d+6
 23304  2266  0022               	movlb	2	; select bank2
 23305  2267  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23306  2268  0020               	movlb	0	; select bank0
 23307  2269  00B9               	movwf	otoa@d+7
 23308  226A  31A2  22FB         	fcall	_otoa
 23309  226C  0020               	movlb	0	; select bank0
 23310  226D  0831               	movf	?_otoa+1,w
 23311  226E  0021               	movlb	1	; select bank1
 23312  226F  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23313  2270  0020               	movlb	0	; select bank0
 23314  2271  0830               	movf	?_otoa,w
 23315  2272  0021               	movlb	1	; select bank1
 23316  2273  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23317  2274  0008               	return
 23318  2275                     l8139:	
 23319                           
 23320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 23321  2275  0021               	movlb	1	; select bank1
 23322  2276  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23323  2277  0086               	movwf	6
 23324  2278  3001               	movlw	1	; select bank2/3
 23325  2279  0087               	movwf	7
 23326  227A  3F40               	moviw [0]fsr1
 23327  227B  00F1               	movwf	strncmp@_l
 23328  227C  3F41               	moviw [1]fsr1
 23329  227D  00F2               	movwf	strncmp@_l+1
 23330  227E  308B               	movlw	low (STR_86| (0+32768))
 23331  227F  00F3               	movwf	strncmp@_r
 23332  2280  30BB               	movlw	high (STR_86| (0+32768))
 23333  2281  00F4               	movwf	strncmp@_r+1
 23334  2282  3002               	movlw	2
 23335  2283  00F5               	movwf	strncmp@n
 23336  2284  3000               	movlw	0
 23337  2285  00F6               	movwf	strncmp@n+1
 23338  2286  31B3  23E5  31A2   	fcall	_strncmp
 23339  2289  0871               	movf	?_strncmp,w
 23340  228A  0472               	iorwf	?_strncmp+1,w
 23341  228B  1D03               	btfss	3,2
 23342  228C  2AF9               	goto	L30
 23343                           
 23344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 23345  228D  0021               	movlb	1	; select bank1
 23346  228E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23347  228F  0086               	movwf	6
 23348  2290  3001               	movlw	1	; select bank2/3
 23349  2291  0087               	movwf	7
 23350  2292  3002               	movlw	2
 23351  2293  0781               	addwf	1,f
 23352  2294  3141               	addfsr 1,1
 23353  2295  1803               	skipnc
 23354  2296  0A81               	incf	1,f
 23355                           
 23356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23357  2297  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23358  2298  0086               	movwf	6
 23359  2299  3001               	movlw	1	; select bank2/3
 23360  229A  0087               	movwf	7
 23361  229B  0801               	movf	1,w
 23362  229C  0084               	movwf	4
 23363  229D  3001               	movlw	1	; select bank2/3
 23364  229E  0085               	movwf	5
 23365  229F  3004               	movlw	4
 23366  22A0  0781               	addwf	1,f
 23367  22A1  3F00               	moviw [0]fsr0
 23368  22A2  0022               	movlb	2	; select bank2
 23369  22A3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23370  22A4  3F01               	moviw [1]fsr0
 23371  22A5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23372  22A6  3F02               	moviw [2]fsr0
 23373  22A7  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23374  22A8  3F03               	moviw [3]fsr0
 23375  22A9  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23376  22AA  0820               	movf	??_vfpfcnvrt^(0+256),w
 23377  22AB  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23378  22AC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23379  22AD  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23380  22AE  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23381  22AF  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23382  22B0  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23383  22B1  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23384  22B2  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23385  22B3  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23386  22B4  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23387  22B5  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23388  22B6  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23389  22B7  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23390  22B8  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23391  22B9  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23392  22BA  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23393  22BB  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23394  22BC  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23395  22BD  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23396  22BE  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23397  22BF  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23398  22C0  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23399  22C1  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23400  22C2  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23401  22C3  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23402  22C4  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23403  22C5  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23404                           
 23405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 23406  22C6  0021               	movlb	1	; select bank1
 23407  22C7  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23408  22C8  0020               	movlb	0	; select bank0
 23409  22C9  00B1               	movwf	otoa@fp+1
 23410  22CA  0021               	movlb	1	; select bank1
 23411  22CB  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23412  22CC  0020               	movlb	0	; select bank0
 23413  22CD  00B0               	movwf	otoa@fp
 23414  22CE  0022               	movlb	2	; select bank2
 23415  22CF  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23416  22D0  0020               	movlb	0	; select bank0
 23417  22D1  00B2               	movwf	otoa@d
 23418  22D2  0022               	movlb	2	; select bank2
 23419  22D3  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23420  22D4  0020               	movlb	0	; select bank0
 23421  22D5  00B3               	movwf	otoa@d+1
 23422  22D6  0022               	movlb	2	; select bank2
 23423  22D7  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23424  22D8  0020               	movlb	0	; select bank0
 23425  22D9  00B4               	movwf	otoa@d+2
 23426  22DA  0022               	movlb	2	; select bank2
 23427  22DB  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23428  22DC  0020               	movlb	0	; select bank0
 23429  22DD  00B5               	movwf	otoa@d+3
 23430  22DE  0022               	movlb	2	; select bank2
 23431  22DF  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23432  22E0  0020               	movlb	0	; select bank0
 23433  22E1  00B6               	movwf	otoa@d+4
 23434  22E2  0022               	movlb	2	; select bank2
 23435  22E3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23436  22E4  0020               	movlb	0	; select bank0
 23437  22E5  00B7               	movwf	otoa@d+5
 23438  22E6  0022               	movlb	2	; select bank2
 23439  22E7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23440  22E8  0020               	movlb	0	; select bank0
 23441  22E9  00B8               	movwf	otoa@d+6
 23442  22EA  0022               	movlb	2	; select bank2
 23443  22EB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23444  22EC  0020               	movlb	0	; select bank0
 23445  22ED  00B9               	movwf	otoa@d+7
 23446  22EE  31A2  22FB         	fcall	_otoa
 23447  22F0  0020               	movlb	0	; select bank0
 23448  22F1  0831               	movf	?_otoa+1,w
 23449  22F2  0021               	movlb	1	; select bank1
 23450  22F3  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23451  22F4  0020               	movlb	0	; select bank0
 23452  22F5  0830               	movf	?_otoa,w
 23453  22F6  0021               	movlb	1	; select bank1
 23454  22F7  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23455  22F8  0008               	return
 23456  22F9                     L30:	
 23457  22F9                     L29:	
 23458  22F9  3188  280C         	ljmp	l8149
 23459                           
 23460                           	psect	text9_split_8
 23461  080C                     l8149:	
 23462                           
 23463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 23464  080C  0021               	movlb	1	; select bank1
 23465  080D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23466  080E  0086               	movwf	6
 23467  080F  3001               	movlw	1	; select bank2/3
 23468  0810  0087               	movwf	7
 23469  0811  3F40               	moviw [0]fsr1
 23470  0812  00F1               	movwf	strncmp@_l
 23471  0813  3F41               	moviw [1]fsr1
 23472  0814  00F2               	movwf	strncmp@_l+1
 23473  0815  308E               	movlw	low (STR_91| (0+32768))
 23474  0816  00F3               	movwf	strncmp@_r
 23475  0817  30BB               	movlw	high (STR_91| (0+32768))
 23476  0818  00F4               	movwf	strncmp@_r+1
 23477  0819  3002               	movlw	2
 23478  081A  00F5               	movwf	strncmp@n
 23479  081B  3000               	movlw	0
 23480  081C  00F6               	movwf	strncmp@n+1
 23481  081D  31B3  23E5  3188   	fcall	_strncmp
 23482  0820  0871               	movf	?_strncmp,w
 23483  0821  0472               	iorwf	?_strncmp+1,w
 23484  0822  1D03               	btfss	3,2
 23485  0823  2876               	goto	l8159
 23486                           
 23487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 23488  0824  0021               	movlb	1	; select bank1
 23489  0825  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23490  0826  0086               	movwf	6
 23491  0827  3001               	movlw	1	; select bank2/3
 23492  0828  0087               	movwf	7
 23493  0829  3002               	movlw	2
 23494  082A  0781               	addwf	1,f
 23495  082B  3141               	addfsr 1,1
 23496  082C  1803               	skipnc
 23497  082D  0A81               	incf	1,f
 23498                           
 23499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23500  082E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23501  082F  0086               	movwf	6
 23502  0830  3001               	movlw	1	; select bank2/3
 23503  0831  0087               	movwf	7
 23504  0832  0801               	movf	1,w
 23505  0833  0084               	movwf	4
 23506  0834  3001               	movlw	1	; select bank2/3
 23507  0835  0085               	movwf	5
 23508  0836  3002               	movlw	2
 23509  0837  0781               	addwf	1,f
 23510  0838  3F00               	moviw [0]fsr0
 23511  0839  0022               	movlb	2	; select bank2
 23512  083A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23513  083B  3F01               	moviw [1]fsr0
 23514  083C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23515  083D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23516  083E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23517  083F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23518  0840  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23519  0841  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23520  0842  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23521                           
 23522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 23523  0843  0021               	movlb	1	; select bank1
 23524  0844  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23525  0845  0020               	movlb	0	; select bank0
 23526  0846  00B1               	movwf	otoa@fp+1
 23527  0847  0021               	movlb	1	; select bank1
 23528  0848  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23529  0849  0020               	movlb	0	; select bank0
 23530  084A  00B0               	movwf	otoa@fp
 23531  084B  0022               	movlb	2	; select bank2
 23532  084C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23533  084D  0020               	movlb	0	; select bank0
 23534  084E  00B2               	movwf	otoa@d
 23535  084F  0022               	movlb	2	; select bank2
 23536  0850  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23537  0851  0020               	movlb	0	; select bank0
 23538  0852  00B3               	movwf	otoa@d+1
 23539  0853  0022               	movlb	2	; select bank2
 23540  0854  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23541  0855  0020               	movlb	0	; select bank0
 23542  0856  00B4               	movwf	otoa@d+2
 23543  0857  0022               	movlb	2	; select bank2
 23544  0858  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23545  0859  0020               	movlb	0	; select bank0
 23546  085A  00B5               	movwf	otoa@d+3
 23547  085B  0022               	movlb	2	; select bank2
 23548  085C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23549  085D  0020               	movlb	0	; select bank0
 23550  085E  00B6               	movwf	otoa@d+4
 23551  085F  0022               	movlb	2	; select bank2
 23552  0860  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23553  0861  0020               	movlb	0	; select bank0
 23554  0862  00B7               	movwf	otoa@d+5
 23555  0863  0022               	movlb	2	; select bank2
 23556  0864  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23557  0865  0020               	movlb	0	; select bank0
 23558  0866  00B8               	movwf	otoa@d+6
 23559  0867  0022               	movlb	2	; select bank2
 23560  0868  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23561  0869  0020               	movlb	0	; select bank0
 23562  086A  00B9               	movwf	otoa@d+7
 23563  086B  31A2  22FB         	fcall	_otoa
 23564  086D  0020               	movlb	0	; select bank0
 23565  086E  0831               	movf	?_otoa+1,w
 23566  086F  0021               	movlb	1	; select bank1
 23567  0870  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23568  0871  0020               	movlb	0	; select bank0
 23569  0872  0830               	movf	?_otoa,w
 23570  0873  0021               	movlb	1	; select bank1
 23571  0874  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23572  0875  0008               	return
 23573  0876                     l8159:	
 23574                           
 23575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 23576  0876  0021               	movlb	1	; select bank1
 23577  0877  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23578  0878  0086               	movwf	6
 23579  0879  3001               	movlw	1	; select bank2/3
 23580  087A  0087               	movwf	7
 23581  087B  3F40               	moviw [0]fsr1
 23582  087C  00F1               	movwf	strncmp@_l
 23583  087D  3F41               	moviw [1]fsr1
 23584  087E  00F2               	movwf	strncmp@_l+1
 23585  087F  3060               	movlw	low (STR_96| (0+32768))
 23586  0880  00F3               	movwf	strncmp@_r
 23587  0881  30BB               	movlw	high (STR_96| (0+32768))
 23588  0882  00F4               	movwf	strncmp@_r+1
 23589  0883  3003               	movlw	3
 23590  0884  00F5               	movwf	strncmp@n
 23591  0885  3000               	movlw	0
 23592  0886  00F6               	movwf	strncmp@n+1
 23593  0887  31B3  23E5  3188   	fcall	_strncmp
 23594  088A  0871               	movf	?_strncmp,w
 23595  088B  0472               	iorwf	?_strncmp+1,w
 23596  088C  1D03               	btfss	3,2
 23597  088D  294C               	goto	l8171
 23598                           
 23599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 23600  088E  0021               	movlb	1	; select bank1
 23601  088F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23602  0890  0086               	movwf	6
 23603  0891  3001               	movlw	1	; select bank2/3
 23604  0892  0087               	movwf	7
 23605  0893  3003               	movlw	3
 23606  0894  0781               	addwf	1,f
 23607  0895  3141               	addfsr 1,1
 23608  0896  1803               	skipnc
 23609  0897  0A81               	incf	1,f
 23610                           
 23611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 23612  0898  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23613  0899  0086               	movwf	6
 23614  089A  3001               	movlw	1	; select bank2/3
 23615  089B  0087               	movwf	7
 23616  089C  3F40               	moviw [0]fsr1
 23617  089D  0084               	movwf	4
 23618  089E  3001               	movlw	1	; select bank2/3
 23619  089F  0085               	movwf	5
 23620  08A0  0A81               	incf	1,f
 23621  08A1  0800               	movf	0,w
 23622  08A2  0022               	movlb	2	; select bank2
 23623  08A3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23624  08A4  0820               	movf	??_vfpfcnvrt^(0+256),w
 23625  08A5  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23626                           
 23627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 23628  08A6  0023               	movlb	3	; select bank3
 23629  08A7  082E               	movf	_nout^(0+384),w
 23630  08A8  0022               	movlb	2	; select bank2
 23631  08A9  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23632  08AA  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23633  08AB  0086               	movwf	6
 23634  08AC  3001               	movlw	1	; select bank2/3
 23635  08AD  0087               	movwf	7
 23636  08AE  0820               	movf	??_vfpfcnvrt^(0+256),w
 23637  08AF  0081               	movwf	1
 23638  08B0  2948               	goto	l8167
 23639  08B1                     l8173:	
 23640                           
 23641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 23642  08B1  0021               	movlb	1	; select bank1
 23643  08B2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23644  08B3  0086               	movwf	6
 23645  08B4  3001               	movlw	1	; select bank2/3
 23646  08B5  0087               	movwf	7
 23647  08B6  3002               	movlw	2
 23648  08B7  0781               	addwf	1,f
 23649  08B8  3141               	addfsr 1,1
 23650  08B9  1803               	skipnc
 23651  08BA  0A81               	incf	1,f
 23652                           
 23653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 23654  08BB  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23655  08BC  0086               	movwf	6
 23656  08BD  3001               	movlw	1	; select bank2/3
 23657  08BE  0087               	movwf	7
 23658  08BF  3F40               	moviw [0]fsr1
 23659  08C0  0084               	movwf	4
 23660  08C1  3001               	movlw	1	; select bank2/3
 23661  08C2  0085               	movwf	5
 23662  08C3  0A81               	incf	1,f
 23663  08C4  0800               	movf	0,w
 23664  08C5  0022               	movlb	2	; select bank2
 23665  08C6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23666  08C7  0820               	movf	??_vfpfcnvrt^(0+256),w
 23667  08C8  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23668                           
 23669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 23670  08C9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23671  08CA  0086               	movwf	6
 23672  08CB  3001               	movlw	1	; select bank2/3
 23673  08CC  0087               	movwf	7
 23674  08CD  0023               	movlb	3	; select bank3
 23675  08CE  082E               	movf	_nout^(0+384),w
 23676  08CF  3FC0               	movwi [0]fsr1
 23677  08D0  082F               	movf	(_nout+1)^(0+384),w
 23678  08D1  3FC1               	movwi [1]fsr1
 23679  08D2  2948               	goto	l8167
 23680  08D3                     l8185:	
 23681                           
 23682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 23683  08D3  0021               	movlb	1	; select bank1
 23684  08D4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23685  08D5  0086               	movwf	6
 23686  08D6  3001               	movlw	1	; select bank2/3
 23687  08D7  0087               	movwf	7
 23688  08D8  3001               	movlw	1
 23689  08D9  0781               	addwf	1,f
 23690  08DA  3141               	addfsr 1,1
 23691  08DB  1803               	skipnc
 23692  08DC  0A81               	incf	1,f
 23693                           
 23694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 23695  08DD  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23696  08DE  0086               	movwf	6
 23697  08DF  3001               	movlw	1	; select bank2/3
 23698  08E0  0087               	movwf	7
 23699  08E1  3F40               	moviw [0]fsr1
 23700  08E2  0084               	movwf	4
 23701  08E3  3001               	movlw	1	; select bank2/3
 23702  08E4  0085               	movwf	5
 23703  08E5  0A81               	incf	1,f
 23704  08E6  0800               	movf	0,w
 23705  08E7  0022               	movlb	2	; select bank2
 23706  08E8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23707  08E9  0820               	movf	??_vfpfcnvrt^(0+256),w
 23708  08EA  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23709                           
 23710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 23711  08EB  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23712  08EC  0086               	movwf	6
 23713  08ED  3001               	movlw	1	; select bank2/3
 23714  08EE  0087               	movwf	7
 23715  08EF  0023               	movlb	3	; select bank3
 23716  08F0  082E               	movf	_nout^(0+384),w
 23717  08F1  3FC0               	movwi [0]fsr1
 23718  08F2  082F               	movf	(_nout+1)^(0+384),w
 23719  08F3  3FC1               	movwi [1]fsr1
 23720  08F4  2948               	goto	l8167
 23721  08F5                     l8197:	
 23722                           
 23723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 23724  08F5  0021               	movlb	1	; select bank1
 23725  08F6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23726  08F7  0086               	movwf	6
 23727  08F8  3001               	movlw	1	; select bank2/3
 23728  08F9  0087               	movwf	7
 23729  08FA  3002               	movlw	2
 23730  08FB  0781               	addwf	1,f
 23731  08FC  3141               	addfsr 1,1
 23732  08FD  1803               	skipnc
 23733  08FE  0A81               	incf	1,f
 23734                           
 23735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 23736  08FF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23737  0900  0086               	movwf	6
 23738  0901  3001               	movlw	1	; select bank2/3
 23739  0902  0087               	movwf	7
 23740  0903  3F40               	moviw [0]fsr1
 23741  0904  0084               	movwf	4
 23742  0905  3001               	movlw	1	; select bank2/3
 23743  0906  0085               	movwf	5
 23744  0907  0A81               	incf	1,f
 23745  0908  0800               	movf	0,w
 23746  0909  0022               	movlb	2	; select bank2
 23747  090A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23748  090B  0820               	movf	??_vfpfcnvrt^(0+256),w
 23749  090C  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23750                           
 23751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 23752  090D  0023               	movlb	3	; select bank3
 23753  090E  082E               	movf	_nout^(0+384),w
 23754  090F  0022               	movlb	2	; select bank2
 23755  0910  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23756  0911  0023               	movlb	3	; select bank3
 23757  0912  082F               	movf	(_nout+1)^(0+384),w
 23758  0913  0022               	movlb	2	; select bank2
 23759  0914  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23760  0915  3000               	movlw	0
 23761  0916  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 23762  0917  30FF               	movlw	255
 23763  0918  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23764  0919  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23765  091A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23766  091B  0086               	movwf	6
 23767  091C  3001               	movlw	1	; select bank2/3
 23768  091D  0087               	movwf	7
 23769  091E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23770  091F  3FC0               	movwi [0]fsr1
 23771  0920  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23772  0921  3FC1               	movwi [1]fsr1
 23773  0922  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23774  0923  3FC2               	movwi [2]fsr1
 23775  0924  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23776  0925  3FC3               	movwi [3]fsr1
 23777  0926  2948               	goto	l8167
 23778  0927                     l8209:	
 23779                           
 23780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 23781  0927  0021               	movlb	1	; select bank1
 23782  0928  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23783  0929  0086               	movwf	6
 23784  092A  3001               	movlw	1	; select bank2/3
 23785  092B  0087               	movwf	7
 23786  092C  3002               	movlw	2
 23787  092D  0781               	addwf	1,f
 23788  092E  3141               	addfsr 1,1
 23789  092F  1803               	skipnc
 23790  0930  0A81               	incf	1,f
 23791                           
 23792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 23793  0931  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23794  0932  0086               	movwf	6
 23795  0933  3001               	movlw	1	; select bank2/3
 23796  0934  0087               	movwf	7
 23797  0935  3F40               	moviw [0]fsr1
 23798  0936  0084               	movwf	4
 23799  0937  3001               	movlw	1	; select bank2/3
 23800  0938  0085               	movwf	5
 23801  0939  0A81               	incf	1,f
 23802  093A  0800               	movf	0,w
 23803  093B  0022               	movlb	2	; select bank2
 23804  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23805  093D  0820               	movf	??_vfpfcnvrt^(0+256),w
 23806  093E  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23807                           
 23808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 23809  093F  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23810  0940  0086               	movwf	6
 23811  0941  3001               	movlw	1	; select bank2/3
 23812  0942  0087               	movwf	7
 23813  0943  0023               	movlb	3	; select bank3
 23814  0944  082E               	movf	_nout^(0+384),w
 23815  0945  3FC0               	movwi [0]fsr1
 23816  0946  082F               	movf	(_nout+1)^(0+384),w
 23817  0947  3FC1               	movwi [1]fsr1
 23818  0948                     l8167:	
 23819                           
 23820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 23821  0948  0021               	movlb	1	; select bank1
 23822  0949  01EC               	clrf	?_vfpfcnvrt^(0+128)
 23823  094A  01ED               	clrf	(?_vfpfcnvrt+1)^(0+128)
 23824  094B  0008               	return
 23825  094C                     l8171:	
 23826                           
 23827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 23828  094C  0021               	movlb	1	; select bank1
 23829  094D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23830  094E  0086               	movwf	6
 23831  094F  3001               	movlw	1	; select bank2/3
 23832  0950  0087               	movwf	7
 23833  0951  3F40               	moviw [0]fsr1
 23834  0952  00F1               	movwf	strncmp@_l
 23835  0953  3F41               	moviw [1]fsr1
 23836  0954  00F2               	movwf	strncmp@_l+1
 23837  0955  3061               	movlw	low ((STR_96+1)| (0+32768))
 23838  0956  00F3               	movwf	strncmp@_r
 23839  0957  30BB               	movlw	high ((STR_96+1)| (0+32768))
 23840  0958  00F4               	movwf	strncmp@_r+1
 23841  0959  3002               	movlw	2
 23842  095A  00F5               	movwf	strncmp@n
 23843  095B  3000               	movlw	0
 23844  095C  00F6               	movwf	strncmp@n+1
 23845  095D  31B3  23E5  3188   	fcall	_strncmp
 23846  0960  0871               	movf	?_strncmp,w
 23847  0961  0472               	iorwf	?_strncmp+1,w
 23848  0962  1903               	btfsc	3,2
 23849  0963  28B1               	goto	l8173
 23850                           
 23851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 23852  0964  0021               	movlb	1	; select bank1
 23853  0965  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23854  0966  0086               	movwf	6
 23855  0967  3001               	movlw	1	; select bank2/3
 23856  0968  0087               	movwf	7
 23857  0969  3F40               	moviw [0]fsr1
 23858  096A  0022               	movlb	2	; select bank2
 23859  096B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23860  096C  3F41               	moviw [1]fsr1
 23861  096D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23862  096E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23863  096F  0084               	movwf	4
 23864  0970  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23865  0971  0085               	movwf	5
 23866  0972  0012               	moviw fsr0++
 23867  0973  3A6E               	xorlw	110
 23868  0974  1903               	btfsc	3,2
 23869  0975  28D3               	goto	l8185
 23870                           
 23871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 23872  0976  0021               	movlb	1	; select bank1
 23873  0977  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23874  0978  0086               	movwf	6
 23875  0979  3001               	movlw	1	; select bank2/3
 23876  097A  0087               	movwf	7
 23877  097B  3F40               	moviw [0]fsr1
 23878  097C  00F1               	movwf	strncmp@_l
 23879  097D  3F41               	moviw [1]fsr1
 23880  097E  00F2               	movwf	strncmp@_l+1
 23881  097F  3085               	movlw	low (STR_106| (0+32768))
 23882  0980  00F3               	movwf	strncmp@_r
 23883  0981  30BB               	movlw	high (STR_106| (0+32768))
 23884  0982  00F4               	movwf	strncmp@_r+1
 23885  0983  3002               	movlw	2
 23886  0984  00F5               	movwf	strncmp@n
 23887  0985  3000               	movlw	0
 23888  0986  00F6               	movwf	strncmp@n+1
 23889  0987  31B3  23E5  3188   	fcall	_strncmp
 23890  098A  0871               	movf	?_strncmp,w
 23891  098B  0472               	iorwf	?_strncmp+1,w
 23892  098C  1903               	btfsc	3,2
 23893  098D  28F5               	goto	l8197
 23894                           
 23895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 23896  098E  0021               	movlb	1	; select bank1
 23897  098F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23898  0990  0086               	movwf	6
 23899  0991  3001               	movlw	1	; select bank2/3
 23900  0992  0087               	movwf	7
 23901  0993  3F40               	moviw [0]fsr1
 23902  0994  00F1               	movwf	strncmp@_l
 23903  0995  3F41               	moviw [1]fsr1
 23904  0996  00F2               	movwf	strncmp@_l+1
 23905  0997  3088               	movlw	low (STR_111| (0+32768))
 23906  0998  00F3               	movwf	strncmp@_r
 23907  0999  30BB               	movlw	high (STR_111| (0+32768))
 23908  099A  00F4               	movwf	strncmp@_r+1
 23909  099B  3002               	movlw	2
 23910  099C  00F5               	movwf	strncmp@n
 23911  099D  3000               	movlw	0
 23912  099E  00F6               	movwf	strncmp@n+1
 23913  099F  31B3  23E5  3188   	fcall	_strncmp
 23914  09A2  0871               	movf	?_strncmp,w
 23915  09A3  0472               	iorwf	?_strncmp+1,w
 23916  09A4  1903               	btfsc	3,2
 23917  09A5  2927               	goto	l8209
 23918                           
 23919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 23920  09A6  0021               	movlb	1	; select bank1
 23921  09A7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23922  09A8  0086               	movwf	6
 23923  09A9  3001               	movlw	1	; select bank2/3
 23924  09AA  0087               	movwf	7
 23925  09AB  3F40               	moviw [0]fsr1
 23926  09AC  0022               	movlb	2	; select bank2
 23927  09AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23928  09AE  3F41               	moviw [1]fsr1
 23929  09AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23930  09B0  0820               	movf	??_vfpfcnvrt^(0+256),w
 23931  09B1  0084               	movwf	4
 23932  09B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23933  09B3  0085               	movwf	5
 23934  09B4  0012               	moviw fsr0++
 23935  09B5  3A70               	xorlw	112
 23936  09B6  1D03               	btfss	3,2
 23937  09B7  2A1E               	goto	l8229
 23938                           
 23939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 23940  09B8  0021               	movlb	1	; select bank1
 23941  09B9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23942  09BA  0086               	movwf	6
 23943  09BB  3001               	movlw	1	; select bank2/3
 23944  09BC  0087               	movwf	7
 23945  09BD  3001               	movlw	1
 23946  09BE  0781               	addwf	1,f
 23947  09BF  3141               	addfsr 1,1
 23948  09C0  1803               	skipnc
 23949  09C1  0A81               	incf	1,f
 23950                           
 23951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 23952  09C2  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23953  09C3  0086               	movwf	6
 23954  09C4  3001               	movlw	1	; select bank2/3
 23955  09C5  0087               	movwf	7
 23956  09C6  3F40               	moviw [0]fsr1
 23957  09C7  0084               	movwf	4
 23958  09C8  3001               	movlw	1	; select bank2/3
 23959  09C9  0085               	movwf	5
 23960  09CA  0A81               	incf	1,f
 23961  09CB  0800               	movf	0,w
 23962  09CC  0022               	movlb	2	; select bank2
 23963  09CD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23964  09CE  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 23965  09CF  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 23966  09D0  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 23967  09D1  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 23968  09D2  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 23969  09D3  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 23970  09D4  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 23971  09D5  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 23972  09D6  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23973  09D7  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 23974  09D8  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23975  09D9  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 23976  09DA  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23977  09DB  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 23978  09DC  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23979  09DD  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 23980  09DE  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23981  09DF  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 23982  09E0  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23983  09E1  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23984  09E2  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23985  09E3  0820               	movf	??_vfpfcnvrt^(0+256),w
 23986  09E4  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23987                           
 23988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 23989  09E5  0021               	movlb	1	; select bank1
 23990  09E6  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23991  09E7  0020               	movlb	0	; select bank0
 23992  09E8  00B1               	movwf	xtoa@fp+1
 23993  09E9  0021               	movlb	1	; select bank1
 23994  09EA  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23995  09EB  0020               	movlb	0	; select bank0
 23996  09EC  00B0               	movwf	xtoa@fp
 23997  09ED  0022               	movlb	2	; select bank2
 23998  09EE  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23999  09EF  0020               	movlb	0	; select bank0
 24000  09F0  00B2               	movwf	xtoa@d
 24001  09F1  0022               	movlb	2	; select bank2
 24002  09F2  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24003  09F3  0020               	movlb	0	; select bank0
 24004  09F4  00B3               	movwf	xtoa@d+1
 24005  09F5  0022               	movlb	2	; select bank2
 24006  09F6  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24007  09F7  0020               	movlb	0	; select bank0
 24008  09F8  00B4               	movwf	xtoa@d+2
 24009  09F9  0022               	movlb	2	; select bank2
 24010  09FA  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24011  09FB  0020               	movlb	0	; select bank0
 24012  09FC  00B5               	movwf	xtoa@d+3
 24013  09FD  0022               	movlb	2	; select bank2
 24014  09FE  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24015  09FF  0020               	movlb	0	; select bank0
 24016  0A00  00B6               	movwf	xtoa@d+4
 24017  0A01  0022               	movlb	2	; select bank2
 24018  0A02  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24019  0A03  0020               	movlb	0	; select bank0
 24020  0A04  00B7               	movwf	xtoa@d+5
 24021  0A05  0022               	movlb	2	; select bank2
 24022  0A06  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24023  0A07  0020               	movlb	0	; select bank0
 24024  0A08  00B8               	movwf	xtoa@d+6
 24025  0A09  0022               	movlb	2	; select bank2
 24026  0A0A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24027  0A0B  0020               	movlb	0	; select bank0
 24028  0A0C  00B9               	movwf	xtoa@d+7
 24029  0A0D  3078               	movlw	120
 24030  0A0E  0022               	movlb	2	; select bank2
 24031  0A0F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24032  0A10  0820               	movf	??_vfpfcnvrt^(0+256),w
 24033  0A11  0020               	movlb	0	; select bank0
 24034  0A12  00BA               	movwf	xtoa@x
 24035  0A13  319B  234B         	fcall	_xtoa
 24036  0A15  0020               	movlb	0	; select bank0
 24037  0A16  0831               	movf	?_xtoa+1,w
 24038  0A17  0021               	movlb	1	; select bank1
 24039  0A18  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24040  0A19  0020               	movlb	0	; select bank0
 24041  0A1A  0830               	movf	?_xtoa,w
 24042  0A1B  0021               	movlb	1	; select bank1
 24043  0A1C  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24044  0A1D  0008               	return
 24045  0A1E                     l8229:	
 24046                           
 24047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 24048  0A1E  0021               	movlb	1	; select bank1
 24049  0A1F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24050  0A20  0086               	movwf	6
 24051  0A21  3001               	movlw	1	; select bank2/3
 24052  0A22  0087               	movwf	7
 24053  0A23  3F40               	moviw [0]fsr1
 24054  0A24  0022               	movlb	2	; select bank2
 24055  0A25  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24056  0A26  3F41               	moviw [1]fsr1
 24057  0A27  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24058  0A28  0820               	movf	??_vfpfcnvrt^(0+256),w
 24059  0A29  0084               	movwf	4
 24060  0A2A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24061  0A2B  0085               	movwf	5
 24062  0A2C  0012               	moviw fsr0++
 24063  0A2D  3A73               	xorlw	115
 24064  0A2E  1D03               	btfss	3,2
 24065  0A2F  2A61               	goto	l8239
 24066                           
 24067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 24068  0A30  0021               	movlb	1	; select bank1
 24069  0A31  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24070  0A32  0086               	movwf	6
 24071  0A33  3001               	movlw	1	; select bank2/3
 24072  0A34  0087               	movwf	7
 24073  0A35  3001               	movlw	1
 24074  0A36  0781               	addwf	1,f
 24075  0A37  3141               	addfsr 1,1
 24076  0A38  1803               	skipnc
 24077  0A39  0A81               	incf	1,f
 24078                           
 24079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 24080  0A3A  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24081  0A3B  0086               	movwf	6
 24082  0A3C  3001               	movlw	1	; select bank2/3
 24083  0A3D  0087               	movwf	7
 24084  0A3E  3F40               	moviw [0]fsr1
 24085  0A3F  0084               	movwf	4
 24086  0A40  3001               	movlw	1	; select bank2/3
 24087  0A41  0085               	movwf	5
 24088  0A42  0A81               	incf	1,f
 24089  0A43  0800               	movf	0,w
 24090  0A44  0022               	movlb	2	; select bank2
 24091  0A45  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24092  0A46  0820               	movf	??_vfpfcnvrt^(0+256),w
 24093  0A47  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 24094                           
 24095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 24096  0A48  0021               	movlb	1	; select bank1
 24097  0A49  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24098  0A4A  0020               	movlb	0	; select bank0
 24099  0A4B  00A1               	movwf	stoa@fp+1
 24100  0A4C  0021               	movlb	1	; select bank1
 24101  0A4D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24102  0A4E  0020               	movlb	0	; select bank0
 24103  0A4F  00A0               	movwf	stoa@fp
 24104  0A50  0022               	movlb	2	; select bank2
 24105  0A51  082C               	movf	vfpfcnvrt@cp^(0+256),w
 24106  0A52  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24107  0A53  0820               	movf	??_vfpfcnvrt^(0+256),w
 24108  0A54  0020               	movlb	0	; select bank0
 24109  0A55  00A2               	movwf	stoa@s
 24110  0A56  31AB  23DF         	fcall	_stoa
 24111  0A58  0020               	movlb	0	; select bank0
 24112  0A59  0821               	movf	?_stoa+1,w
 24113  0A5A  0021               	movlb	1	; select bank1
 24114  0A5B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24115  0A5C  0020               	movlb	0	; select bank0
 24116  0A5D  0820               	movf	?_stoa,w
 24117  0A5E  0021               	movlb	1	; select bank1
 24118  0A5F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24119  0A60  0008               	return
 24120  0A61                     l8239:	
 24121                           
 24122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 24123  0A61  0021               	movlb	1	; select bank1
 24124  0A62  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24125  0A63  0086               	movwf	6
 24126  0A64  3001               	movlw	1	; select bank2/3
 24127  0A65  0087               	movwf	7
 24128  0A66  3F40               	moviw [0]fsr1
 24129  0A67  00F1               	movwf	strncmp@_l
 24130  0A68  3F41               	moviw [1]fsr1
 24131  0A69  00F2               	movwf	strncmp@_l+1
 24132  0A6A  3068               	movlw	low (STR_116| (0+32768))
 24133  0A6B  00F3               	movwf	strncmp@_r
 24134  0A6C  30BB               	movlw	high (STR_116| (0+32768))
 24135  0A6D  00F4               	movwf	strncmp@_r+1
 24136  0A6E  3003               	movlw	3
 24137  0A6F  00F5               	movwf	strncmp@n
 24138  0A70  3000               	movlw	0
 24139  0A71  00F6               	movwf	strncmp@n+1
 24140  0A72  31B3  23E5  3188   	fcall	_strncmp
 24141  0A75  0871               	movf	?_strncmp,w
 24142  0A76  0472               	iorwf	?_strncmp+1,w
 24143  0A77  1D03               	btfss	3,2
 24144  0A78  2ACA               	goto	l8249
 24145                           
 24146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 24147  0A79  0021               	movlb	1	; select bank1
 24148  0A7A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24149  0A7B  0086               	movwf	6
 24150  0A7C  3001               	movlw	1	; select bank2/3
 24151  0A7D  0087               	movwf	7
 24152  0A7E  3003               	movlw	3
 24153  0A7F  0781               	addwf	1,f
 24154  0A80  3141               	addfsr 1,1
 24155  0A81  1803               	skipnc
 24156  0A82  0A81               	incf	1,f
 24157                           
 24158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24159  0A83  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24160  0A84  0086               	movwf	6
 24161  0A85  3001               	movlw	1	; select bank2/3
 24162  0A86  0087               	movwf	7
 24163  0A87  0801               	movf	1,w
 24164  0A88  0084               	movwf	4
 24165  0A89  3001               	movlw	1	; select bank2/3
 24166  0A8A  0085               	movwf	5
 24167  0A8B  3002               	movlw	2
 24168  0A8C  0781               	addwf	1,f
 24169  0A8D  0800               	movf	0,w
 24170  0A8E  0022               	movlb	2	; select bank2
 24171  0A8F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24172  0A90  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24173  0A91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24174  0A92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24175  0A93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24176  0A94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24177  0A95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24178  0A96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24179                           
 24180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 24181  0A97  0021               	movlb	1	; select bank1
 24182  0A98  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24183  0A99  0020               	movlb	0	; select bank0
 24184  0A9A  00B1               	movwf	utoa@fp+1
 24185  0A9B  0021               	movlb	1	; select bank1
 24186  0A9C  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24187  0A9D  0020               	movlb	0	; select bank0
 24188  0A9E  00B0               	movwf	utoa@fp
 24189  0A9F  0022               	movlb	2	; select bank2
 24190  0AA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24191  0AA1  0020               	movlb	0	; select bank0
 24192  0AA2  00B2               	movwf	utoa@d
 24193  0AA3  0022               	movlb	2	; select bank2
 24194  0AA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24195  0AA5  0020               	movlb	0	; select bank0
 24196  0AA6  00B3               	movwf	utoa@d+1
 24197  0AA7  0022               	movlb	2	; select bank2
 24198  0AA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24199  0AA9  0020               	movlb	0	; select bank0
 24200  0AAA  00B4               	movwf	utoa@d+2
 24201  0AAB  0022               	movlb	2	; select bank2
 24202  0AAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24203  0AAD  0020               	movlb	0	; select bank0
 24204  0AAE  00B5               	movwf	utoa@d+3
 24205  0AAF  0022               	movlb	2	; select bank2
 24206  0AB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24207  0AB1  0020               	movlb	0	; select bank0
 24208  0AB2  00B6               	movwf	utoa@d+4
 24209  0AB3  0022               	movlb	2	; select bank2
 24210  0AB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24211  0AB5  0020               	movlb	0	; select bank0
 24212  0AB6  00B7               	movwf	utoa@d+5
 24213  0AB7  0022               	movlb	2	; select bank2
 24214  0AB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24215  0AB9  0020               	movlb	0	; select bank0
 24216  0ABA  00B8               	movwf	utoa@d+6
 24217  0ABB  0022               	movlb	2	; select bank2
 24218  0ABC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24219  0ABD  0020               	movlb	0	; select bank0
 24220  0ABE  00B9               	movwf	utoa@d+7
 24221  0ABF  31A1  2130         	fcall	_utoa
 24222  0AC1  0020               	movlb	0	; select bank0
 24223  0AC2  0831               	movf	?_utoa+1,w
 24224  0AC3  0021               	movlb	1	; select bank1
 24225  0AC4  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24226  0AC5  0020               	movlb	0	; select bank0
 24227  0AC6  0830               	movf	?_utoa,w
 24228  0AC7  0021               	movlb	1	; select bank1
 24229  0AC8  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24230  0AC9  0008               	return
 24231  0ACA                     l8249:	
 24232                           
 24233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 24234  0ACA  0021               	movlb	1	; select bank1
 24235  0ACB  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24236  0ACC  0086               	movwf	6
 24237  0ACD  3001               	movlw	1	; select bank2/3
 24238  0ACE  0087               	movwf	7
 24239  0ACF  3F40               	moviw [0]fsr1
 24240  0AD0  00F1               	movwf	strncmp@_l
 24241  0AD1  3F41               	moviw [1]fsr1
 24242  0AD2  00F2               	movwf	strncmp@_l+1
 24243  0AD3  3069               	movlw	low ((STR_116+1)| (0+32768))
 24244  0AD4  00F3               	movwf	strncmp@_r
 24245  0AD5  30BB               	movlw	high ((STR_116+1)| (0+32768))
 24246  0AD6  00F4               	movwf	strncmp@_r+1
 24247  0AD7  3002               	movlw	2
 24248  0AD8  00F5               	movwf	strncmp@n
 24249  0AD9  3000               	movlw	0
 24250  0ADA  00F6               	movwf	strncmp@n+1
 24251  0ADB  31B3  23E5  3188   	fcall	_strncmp
 24252  0ADE  0871               	movf	?_strncmp,w
 24253  0ADF  0472               	iorwf	?_strncmp+1,w
 24254  0AE0  1D03               	btfss	3,2
 24255  0AE1  2B34               	goto	l8259
 24256                           
 24257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 24258  0AE2  0021               	movlb	1	; select bank1
 24259  0AE3  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24260  0AE4  0086               	movwf	6
 24261  0AE5  3001               	movlw	1	; select bank2/3
 24262  0AE6  0087               	movwf	7
 24263  0AE7  3002               	movlw	2
 24264  0AE8  0781               	addwf	1,f
 24265  0AE9  3141               	addfsr 1,1
 24266  0AEA  1803               	skipnc
 24267  0AEB  0A81               	incf	1,f
 24268                           
 24269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 24270  0AEC  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24271  0AED  0086               	movwf	6
 24272  0AEE  3001               	movlw	1	; select bank2/3
 24273  0AEF  0087               	movwf	7
 24274  0AF0  0801               	movf	1,w
 24275  0AF1  0084               	movwf	4
 24276  0AF2  3001               	movlw	1	; select bank2/3
 24277  0AF3  0085               	movwf	5
 24278  0AF4  3002               	movlw	2
 24279  0AF5  0781               	addwf	1,f
 24280  0AF6  3F00               	moviw [0]fsr0
 24281  0AF7  0022               	movlb	2	; select bank2
 24282  0AF8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24283  0AF9  3F01               	moviw [1]fsr0
 24284  0AFA  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24285  0AFB  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24286  0AFC  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24287  0AFD  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24288  0AFE  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24289  0AFF  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24290  0B00  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24291                           
 24292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 24293  0B01  0021               	movlb	1	; select bank1
 24294  0B02  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24295  0B03  0020               	movlb	0	; select bank0
 24296  0B04  00B1               	movwf	utoa@fp+1
 24297  0B05  0021               	movlb	1	; select bank1
 24298  0B06  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24299  0B07  0020               	movlb	0	; select bank0
 24300  0B08  00B0               	movwf	utoa@fp
 24301  0B09  0022               	movlb	2	; select bank2
 24302  0B0A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24303  0B0B  0020               	movlb	0	; select bank0
 24304  0B0C  00B2               	movwf	utoa@d
 24305  0B0D  0022               	movlb	2	; select bank2
 24306  0B0E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24307  0B0F  0020               	movlb	0	; select bank0
 24308  0B10  00B3               	movwf	utoa@d+1
 24309  0B11  0022               	movlb	2	; select bank2
 24310  0B12  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24311  0B13  0020               	movlb	0	; select bank0
 24312  0B14  00B4               	movwf	utoa@d+2
 24313  0B15  0022               	movlb	2	; select bank2
 24314  0B16  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24315  0B17  0020               	movlb	0	; select bank0
 24316  0B18  00B5               	movwf	utoa@d+3
 24317  0B19  0022               	movlb	2	; select bank2
 24318  0B1A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24319  0B1B  0020               	movlb	0	; select bank0
 24320  0B1C  00B6               	movwf	utoa@d+4
 24321  0B1D  0022               	movlb	2	; select bank2
 24322  0B1E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24323  0B1F  0020               	movlb	0	; select bank0
 24324  0B20  00B7               	movwf	utoa@d+5
 24325  0B21  0022               	movlb	2	; select bank2
 24326  0B22  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24327  0B23  0020               	movlb	0	; select bank0
 24328  0B24  00B8               	movwf	utoa@d+6
 24329  0B25  0022               	movlb	2	; select bank2
 24330  0B26  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24331  0B27  0020               	movlb	0	; select bank0
 24332  0B28  00B9               	movwf	utoa@d+7
 24333  0B29  31A1  2130         	fcall	_utoa
 24334  0B2B  0020               	movlb	0	; select bank0
 24335  0B2C  0831               	movf	?_utoa+1,w
 24336  0B2D  0021               	movlb	1	; select bank1
 24337  0B2E  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24338  0B2F  0020               	movlb	0	; select bank0
 24339  0B30  0830               	movf	?_utoa,w
 24340  0B31  0021               	movlb	1	; select bank1
 24341  0B32  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24342  0B33  0008               	return
 24343  0B34                     l8259:	
 24344                           
 24345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 24346  0B34  0021               	movlb	1	; select bank1
 24347  0B35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24348  0B36  0086               	movwf	6
 24349  0B37  3001               	movlw	1	; select bank2/3
 24350  0B38  0087               	movwf	7
 24351  0B39  3F40               	moviw [0]fsr1
 24352  0B3A  0022               	movlb	2	; select bank2
 24353  0B3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24354  0B3C  3F41               	moviw [1]fsr1
 24355  0B3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24356  0B3E  0820               	movf	??_vfpfcnvrt^(0+256),w
 24357  0B3F  0084               	movwf	4
 24358  0B40  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24359  0B41  0085               	movwf	5
 24360  0B42  0012               	moviw fsr0++
 24361  0B43  3A75               	xorlw	117
 24362  0B44  1D03               	btfss	3,2
 24363  0B45  2B98               	goto	l8269
 24364                           
 24365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 24366  0B46  0021               	movlb	1	; select bank1
 24367  0B47  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24368  0B48  0086               	movwf	6
 24369  0B49  3001               	movlw	1	; select bank2/3
 24370  0B4A  0087               	movwf	7
 24371  0B4B  3001               	movlw	1
 24372  0B4C  0781               	addwf	1,f
 24373  0B4D  3141               	addfsr 1,1
 24374  0B4E  1803               	skipnc
 24375  0B4F  0A81               	incf	1,f
 24376                           
 24377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 24378  0B50  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24379  0B51  0086               	movwf	6
 24380  0B52  3001               	movlw	1	; select bank2/3
 24381  0B53  0087               	movwf	7
 24382  0B54  0801               	movf	1,w
 24383  0B55  0084               	movwf	4
 24384  0B56  3001               	movlw	1	; select bank2/3
 24385  0B57  0085               	movwf	5
 24386  0B58  3002               	movlw	2
 24387  0B59  0781               	addwf	1,f
 24388  0B5A  3F00               	moviw [0]fsr0
 24389  0B5B  0022               	movlb	2	; select bank2
 24390  0B5C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24391  0B5D  3F01               	moviw [1]fsr0
 24392  0B5E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24393  0B5F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24394  0B60  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24395  0B61  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24396  0B62  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24397  0B63  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24398  0B64  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24399                           
 24400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 24401  0B65  0021               	movlb	1	; select bank1
 24402  0B66  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24403  0B67  0020               	movlb	0	; select bank0
 24404  0B68  00B1               	movwf	utoa@fp+1
 24405  0B69  0021               	movlb	1	; select bank1
 24406  0B6A  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24407  0B6B  0020               	movlb	0	; select bank0
 24408  0B6C  00B0               	movwf	utoa@fp
 24409  0B6D  0022               	movlb	2	; select bank2
 24410  0B6E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24411  0B6F  0020               	movlb	0	; select bank0
 24412  0B70  00B2               	movwf	utoa@d
 24413  0B71  0022               	movlb	2	; select bank2
 24414  0B72  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24415  0B73  0020               	movlb	0	; select bank0
 24416  0B74  00B3               	movwf	utoa@d+1
 24417  0B75  0022               	movlb	2	; select bank2
 24418  0B76  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24419  0B77  0020               	movlb	0	; select bank0
 24420  0B78  00B4               	movwf	utoa@d+2
 24421  0B79  0022               	movlb	2	; select bank2
 24422  0B7A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24423  0B7B  0020               	movlb	0	; select bank0
 24424  0B7C  00B5               	movwf	utoa@d+3
 24425  0B7D  0022               	movlb	2	; select bank2
 24426  0B7E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24427  0B7F  0020               	movlb	0	; select bank0
 24428  0B80  00B6               	movwf	utoa@d+4
 24429  0B81  0022               	movlb	2	; select bank2
 24430  0B82  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24431  0B83  0020               	movlb	0	; select bank0
 24432  0B84  00B7               	movwf	utoa@d+5
 24433  0B85  0022               	movlb	2	; select bank2
 24434  0B86  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24435  0B87  0020               	movlb	0	; select bank0
 24436  0B88  00B8               	movwf	utoa@d+6
 24437  0B89  0022               	movlb	2	; select bank2
 24438  0B8A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24439  0B8B  0020               	movlb	0	; select bank0
 24440  0B8C  00B9               	movwf	utoa@d+7
 24441  0B8D  31A1  2130         	fcall	_utoa
 24442  0B8F  0020               	movlb	0	; select bank0
 24443  0B90  0831               	movf	?_utoa+1,w
 24444  0B91  0021               	movlb	1	; select bank1
 24445  0B92  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24446  0B93  0020               	movlb	0	; select bank0
 24447  0B94  0830               	movf	?_utoa,w
 24448  0B95  0021               	movlb	1	; select bank1
 24449  0B96  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24450  0B97  0008               	return
 24451  0B98                     l8269:	
 24452                           
 24453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 24454  0B98  0021               	movlb	1	; select bank1
 24455  0B99  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24456  0B9A  0086               	movwf	6
 24457  0B9B  3001               	movlw	1	; select bank2/3
 24458  0B9C  0087               	movwf	7
 24459  0B9D  3F40               	moviw [0]fsr1
 24460  0B9E  00F1               	movwf	strncmp@_l
 24461  0B9F  3F41               	moviw [1]fsr1
 24462  0BA0  00F2               	movwf	strncmp@_l+1
 24463  0BA1  3091               	movlw	low (STR_126| (0+32768))
 24464  0BA2  00F3               	movwf	strncmp@_r
 24465  0BA3  30BB               	movlw	high (STR_126| (0+32768))
 24466  0BA4  00F4               	movwf	strncmp@_r+1
 24467  0BA5  3002               	movlw	2
 24468  0BA6  00F5               	movwf	strncmp@n
 24469  0BA7  3000               	movlw	0
 24470  0BA8  00F6               	movwf	strncmp@n+1
 24471  0BA9  31B3  23E5  3188   	fcall	_strncmp
 24472  0BAC  0871               	movf	?_strncmp,w
 24473  0BAD  0472               	iorwf	?_strncmp+1,w
 24474  0BAE  1D03               	btfss	3,2
 24475  0BAF  2C1C               	goto	l8279
 24476                           
 24477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 24478  0BB0  0021               	movlb	1	; select bank1
 24479  0BB1  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24480  0BB2  0086               	movwf	6
 24481  0BB3  3001               	movlw	1	; select bank2/3
 24482  0BB4  0087               	movwf	7
 24483  0BB5  3002               	movlw	2
 24484  0BB6  0781               	addwf	1,f
 24485  0BB7  3141               	addfsr 1,1
 24486  0BB8  1803               	skipnc
 24487  0BB9  0A81               	incf	1,f
 24488                           
 24489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 24490  0BBA  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24491  0BBB  0086               	movwf	6
 24492  0BBC  3001               	movlw	1	; select bank2/3
 24493  0BBD  0087               	movwf	7
 24494  0BBE  0801               	movf	1,w
 24495  0BBF  0084               	movwf	4
 24496  0BC0  3001               	movlw	1	; select bank2/3
 24497  0BC1  0085               	movwf	5
 24498  0BC2  3004               	movlw	4
 24499  0BC3  0781               	addwf	1,f
 24500  0BC4  3F00               	moviw [0]fsr0
 24501  0BC5  0022               	movlb	2	; select bank2
 24502  0BC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24503  0BC7  3F01               	moviw [1]fsr0
 24504  0BC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24505  0BC9  3F02               	moviw [2]fsr0
 24506  0BCA  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 24507  0BCB  3F03               	moviw [3]fsr0
 24508  0BCC  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 24509  0BCD  0820               	movf	??_vfpfcnvrt^(0+256),w
 24510  0BCE  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 24511  0BCF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24512  0BD0  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 24513  0BD1  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24514  0BD2  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 24515  0BD3  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24516  0BD4  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 24517  0BD5  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 24518  0BD6  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 24519  0BD7  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 24520  0BD8  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 24521  0BD9  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 24522  0BDA  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 24523  0BDB  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 24524  0BDC  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 24525  0BDD  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 24526  0BDE  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 24527  0BDF  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 24528  0BE0  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 24529  0BE1  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 24530  0BE2  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 24531  0BE3  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 24532  0BE4  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 24533  0BE5  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 24534  0BE6  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24535  0BE7  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 24536  0BE8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24537                           
 24538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 24539  0BE9  0021               	movlb	1	; select bank1
 24540  0BEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24541  0BEB  0020               	movlb	0	; select bank0
 24542  0BEC  00B1               	movwf	utoa@fp+1
 24543  0BED  0021               	movlb	1	; select bank1
 24544  0BEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24545  0BEF  0020               	movlb	0	; select bank0
 24546  0BF0  00B0               	movwf	utoa@fp
 24547  0BF1  0022               	movlb	2	; select bank2
 24548  0BF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24549  0BF3  0020               	movlb	0	; select bank0
 24550  0BF4  00B2               	movwf	utoa@d
 24551  0BF5  0022               	movlb	2	; select bank2
 24552  0BF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24553  0BF7  0020               	movlb	0	; select bank0
 24554  0BF8  00B3               	movwf	utoa@d+1
 24555  0BF9  0022               	movlb	2	; select bank2
 24556  0BFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24557  0BFB  0020               	movlb	0	; select bank0
 24558  0BFC  00B4               	movwf	utoa@d+2
 24559  0BFD  0022               	movlb	2	; select bank2
 24560  0BFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24561  0BFF  0020               	movlb	0	; select bank0
 24562  0C00  00B5               	movwf	utoa@d+3
 24563  0C01  0022               	movlb	2	; select bank2
 24564  0C02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24565  0C03  0020               	movlb	0	; select bank0
 24566  0C04  00B6               	movwf	utoa@d+4
 24567  0C05  0022               	movlb	2	; select bank2
 24568  0C06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24569  0C07  0020               	movlb	0	; select bank0
 24570  0C08  00B7               	movwf	utoa@d+5
 24571  0C09  0022               	movlb	2	; select bank2
 24572  0C0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24573  0C0B  0020               	movlb	0	; select bank0
 24574  0C0C  00B8               	movwf	utoa@d+6
 24575  0C0D  0022               	movlb	2	; select bank2
 24576  0C0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24577  0C0F  0020               	movlb	0	; select bank0
 24578  0C10  00B9               	movwf	utoa@d+7
 24579  0C11  31A1  2130         	fcall	_utoa
 24580  0C13  0020               	movlb	0	; select bank0
 24581  0C14  0831               	movf	?_utoa+1,w
 24582  0C15  0021               	movlb	1	; select bank1
 24583  0C16  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24584  0C17  0020               	movlb	0	; select bank0
 24585  0C18  0830               	movf	?_utoa,w
 24586  0C19  0021               	movlb	1	; select bank1
 24587  0C1A  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24588  0C1B  0008               	return
 24589  0C1C                     l8279:	
 24590                           
 24591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 24592  0C1C  0021               	movlb	1	; select bank1
 24593  0C1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24594  0C1E  0086               	movwf	6
 24595  0C1F  3001               	movlw	1	; select bank2/3
 24596  0C20  0087               	movwf	7
 24597  0C21  3F40               	moviw [0]fsr1
 24598  0C22  00F1               	movwf	strncmp@_l
 24599  0C23  3F41               	moviw [1]fsr1
 24600  0C24  00F2               	movwf	strncmp@_l+1
 24601  0C25  3094               	movlw	low (STR_131| (0+32768))
 24602  0C26  00F3               	movwf	strncmp@_r
 24603  0C27  30BB               	movlw	high (STR_131| (0+32768))
 24604  0C28  00F4               	movwf	strncmp@_r+1
 24605  0C29  3002               	movlw	2
 24606  0C2A  00F5               	movwf	strncmp@n
 24607  0C2B  3000               	movlw	0
 24608  0C2C  00F6               	movwf	strncmp@n+1
 24609  0C2D  31B3  23E5  3188   	fcall	_strncmp
 24610  0C30  0871               	movf	?_strncmp,w
 24611  0C31  0472               	iorwf	?_strncmp+1,w
 24612  0C32  1D03               	btfss	3,2
 24613  0C33  2C86               	goto	l8289
 24614                           
 24615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 24616  0C34  0021               	movlb	1	; select bank1
 24617  0C35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24618  0C36  0086               	movwf	6
 24619  0C37  3001               	movlw	1	; select bank2/3
 24620  0C38  0087               	movwf	7
 24621  0C39  3002               	movlw	2
 24622  0C3A  0781               	addwf	1,f
 24623  0C3B  3141               	addfsr 1,1
 24624  0C3C  1803               	skipnc
 24625  0C3D  0A81               	incf	1,f
 24626                           
 24627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 24628  0C3E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24629  0C3F  0086               	movwf	6
 24630  0C40  3001               	movlw	1	; select bank2/3
 24631  0C41  0087               	movwf	7
 24632  0C42  0801               	movf	1,w
 24633  0C43  0084               	movwf	4
 24634  0C44  3001               	movlw	1	; select bank2/3
 24635  0C45  0085               	movwf	5
 24636  0C46  3002               	movlw	2
 24637  0C47  0781               	addwf	1,f
 24638  0C48  3F00               	moviw [0]fsr0
 24639  0C49  0022               	movlb	2	; select bank2
 24640  0C4A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24641  0C4B  3F01               	moviw [1]fsr0
 24642  0C4C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24643  0C4D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24644  0C4E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24645  0C4F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24646  0C50  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24647  0C51  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24648  0C52  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24649                           
 24650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 24651  0C53  0021               	movlb	1	; select bank1
 24652  0C54  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24653  0C55  0020               	movlb	0	; select bank0
 24654  0C56  00B1               	movwf	utoa@fp+1
 24655  0C57  0021               	movlb	1	; select bank1
 24656  0C58  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24657  0C59  0020               	movlb	0	; select bank0
 24658  0C5A  00B0               	movwf	utoa@fp
 24659  0C5B  0022               	movlb	2	; select bank2
 24660  0C5C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24661  0C5D  0020               	movlb	0	; select bank0
 24662  0C5E  00B2               	movwf	utoa@d
 24663  0C5F  0022               	movlb	2	; select bank2
 24664  0C60  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24665  0C61  0020               	movlb	0	; select bank0
 24666  0C62  00B3               	movwf	utoa@d+1
 24667  0C63  0022               	movlb	2	; select bank2
 24668  0C64  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24669  0C65  0020               	movlb	0	; select bank0
 24670  0C66  00B4               	movwf	utoa@d+2
 24671  0C67  0022               	movlb	2	; select bank2
 24672  0C68  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24673  0C69  0020               	movlb	0	; select bank0
 24674  0C6A  00B5               	movwf	utoa@d+3
 24675  0C6B  0022               	movlb	2	; select bank2
 24676  0C6C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24677  0C6D  0020               	movlb	0	; select bank0
 24678  0C6E  00B6               	movwf	utoa@d+4
 24679  0C6F  0022               	movlb	2	; select bank2
 24680  0C70  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24681  0C71  0020               	movlb	0	; select bank0
 24682  0C72  00B7               	movwf	utoa@d+5
 24683  0C73  0022               	movlb	2	; select bank2
 24684  0C74  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24685  0C75  0020               	movlb	0	; select bank0
 24686  0C76  00B8               	movwf	utoa@d+6
 24687  0C77  0022               	movlb	2	; select bank2
 24688  0C78  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24689  0C79  0020               	movlb	0	; select bank0
 24690  0C7A  00B9               	movwf	utoa@d+7
 24691  0C7B  31A1  2130         	fcall	_utoa
 24692  0C7D  0020               	movlb	0	; select bank0
 24693  0C7E  0831               	movf	?_utoa+1,w
 24694  0C7F  0021               	movlb	1	; select bank1
 24695  0C80  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24696  0C81  0020               	movlb	0	; select bank0
 24697  0C82  0830               	movf	?_utoa,w
 24698  0C83  0021               	movlb	1	; select bank1
 24699  0C84  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24700  0C85  0008               	return
 24701  0C86                     l8289:	
 24702                           
 24703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 24704  0C86  0021               	movlb	1	; select bank1
 24705  0C87  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24706  0C88  0086               	movwf	6
 24707  0C89  3001               	movlw	1	; select bank2/3
 24708  0C8A  0087               	movwf	7
 24709  0C8B  3F40               	moviw [0]fsr1
 24710  0C8C  00F1               	movwf	strncmp@_l
 24711  0C8D  3F41               	moviw [1]fsr1
 24712  0C8E  00F2               	movwf	strncmp@_l+1
 24713  0C8F  306C               	movlw	low (STR_136| (0+32768))
 24714  0C90  00F3               	movwf	strncmp@_r
 24715  0C91  30BB               	movlw	high (STR_136| (0+32768))
 24716  0C92  00F4               	movwf	strncmp@_r+1
 24717  0C93  3003               	movlw	3
 24718  0C94  00F5               	movwf	strncmp@n
 24719  0C95  3000               	movlw	0
 24720  0C96  00F6               	movwf	strncmp@n+1
 24721  0C97  31B3  23E5  3188   	fcall	_strncmp
 24722  0C9A  0871               	movf	?_strncmp,w
 24723  0C9B  0472               	iorwf	?_strncmp+1,w
 24724  0C9C  1903               	btfsc	3,2
 24725  0C9D  2CB6               	goto	l8293
 24726  0C9E  0021               	movlb	1	; select bank1
 24727  0C9F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24728  0CA0  0086               	movwf	6
 24729  0CA1  3001               	movlw	1	; select bank2/3
 24730  0CA2  0087               	movwf	7
 24731  0CA3  3F40               	moviw [0]fsr1
 24732  0CA4  00F1               	movwf	strncmp@_l
 24733  0CA5  3F41               	moviw [1]fsr1
 24734  0CA6  00F2               	movwf	strncmp@_l+1
 24735  0CA7  304C               	movlw	low (STR_140| (0+32768))
 24736  0CA8  00F3               	movwf	strncmp@_r
 24737  0CA9  30BB               	movlw	high (STR_140| (0+32768))
 24738  0CAA  00F4               	movwf	strncmp@_r+1
 24739  0CAB  3003               	movlw	3
 24740  0CAC  00F5               	movwf	strncmp@n
 24741  0CAD  3000               	movlw	0
 24742  0CAE  00F6               	movwf	strncmp@n+1
 24743  0CAF  31B3  23E5  3188   	fcall	_strncmp
 24744  0CB2  0871               	movf	?_strncmp,w
 24745  0CB3  0472               	iorwf	?_strncmp+1,w
 24746  0CB4  1D03               	btfss	3,2
 24747  0CB5  2D22               	goto	l8303
 24748  0CB6                     l8293:	
 24749                           
 24750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 24751  0CB6  0021               	movlb	1	; select bank1
 24752  0CB7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24753  0CB8  0086               	movwf	6
 24754  0CB9  3001               	movlw	1	; select bank2/3
 24755  0CBA  0087               	movwf	7
 24756  0CBB  3F40               	moviw [0]fsr1
 24757  0CBC  0022               	movlb	2	; select bank2
 24758  0CBD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24759  0CBE  3F41               	moviw [1]fsr1
 24760  0CBF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24761  0CC0  3002               	movlw	2
 24762  0CC1  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24763  0CC2  0084               	movwf	4
 24764  0CC3  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24765  0CC4  1803               	skipnc
 24766  0CC5  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24767  0CC6  0085               	movwf	5
 24768  0CC7  0800               	movf	0,w	;code access
 24769  0CC8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24770  0CC9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24771  0CCA  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24772                           
 24773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 24774  0CCB  0021               	movlb	1	; select bank1
 24775  0CCC  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24776  0CCD  0086               	movwf	6
 24777  0CCE  3001               	movlw	1	; select bank2/3
 24778  0CCF  0087               	movwf	7
 24779  0CD0  3003               	movlw	3
 24780  0CD1  0781               	addwf	1,f
 24781  0CD2  3141               	addfsr 1,1
 24782  0CD3  1803               	skipnc
 24783  0CD4  0A81               	incf	1,f
 24784                           
 24785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24786  0CD5  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24787  0CD6  0086               	movwf	6
 24788  0CD7  3001               	movlw	1	; select bank2/3
 24789  0CD8  0087               	movwf	7
 24790  0CD9  0801               	movf	1,w
 24791  0CDA  0084               	movwf	4
 24792  0CDB  3001               	movlw	1	; select bank2/3
 24793  0CDC  0085               	movwf	5
 24794  0CDD  3002               	movlw	2
 24795  0CDE  0781               	addwf	1,f
 24796  0CDF  0800               	movf	0,w
 24797  0CE0  0022               	movlb	2	; select bank2
 24798  0CE1  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24799  0CE2  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24800  0CE3  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24801  0CE4  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24802  0CE5  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24803  0CE6  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24804  0CE7  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24805  0CE8  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24806                           
 24807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 24808  0CE9  0021               	movlb	1	; select bank1
 24809  0CEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24810  0CEB  0020               	movlb	0	; select bank0
 24811  0CEC  00B1               	movwf	xtoa@fp+1
 24812  0CED  0021               	movlb	1	; select bank1
 24813  0CEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24814  0CEF  0020               	movlb	0	; select bank0
 24815  0CF0  00B0               	movwf	xtoa@fp
 24816  0CF1  0022               	movlb	2	; select bank2
 24817  0CF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24818  0CF3  0020               	movlb	0	; select bank0
 24819  0CF4  00B2               	movwf	xtoa@d
 24820  0CF5  0022               	movlb	2	; select bank2
 24821  0CF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24822  0CF7  0020               	movlb	0	; select bank0
 24823  0CF8  00B3               	movwf	xtoa@d+1
 24824  0CF9  0022               	movlb	2	; select bank2
 24825  0CFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24826  0CFB  0020               	movlb	0	; select bank0
 24827  0CFC  00B4               	movwf	xtoa@d+2
 24828  0CFD  0022               	movlb	2	; select bank2
 24829  0CFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24830  0CFF  0020               	movlb	0	; select bank0
 24831  0D00  00B5               	movwf	xtoa@d+3
 24832  0D01  0022               	movlb	2	; select bank2
 24833  0D02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24834  0D03  0020               	movlb	0	; select bank0
 24835  0D04  00B6               	movwf	xtoa@d+4
 24836  0D05  0022               	movlb	2	; select bank2
 24837  0D06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24838  0D07  0020               	movlb	0	; select bank0
 24839  0D08  00B7               	movwf	xtoa@d+5
 24840  0D09  0022               	movlb	2	; select bank2
 24841  0D0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24842  0D0B  0020               	movlb	0	; select bank0
 24843  0D0C  00B8               	movwf	xtoa@d+6
 24844  0D0D  0022               	movlb	2	; select bank2
 24845  0D0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24846  0D0F  0020               	movlb	0	; select bank0
 24847  0D10  00B9               	movwf	xtoa@d+7
 24848  0D11  0022               	movlb	2	; select bank2
 24849  0D12  0845               	movf	vfpfcnvrt@c^(0+256),w
 24850  0D13  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24851  0D14  0820               	movf	??_vfpfcnvrt^(0+256),w
 24852  0D15  0020               	movlb	0	; select bank0
 24853  0D16  00BA               	movwf	xtoa@x
 24854  0D17  319B  234B         	fcall	_xtoa
 24855  0D19  0020               	movlb	0	; select bank0
 24856  0D1A  0831               	movf	?_xtoa+1,w
 24857  0D1B  0021               	movlb	1	; select bank1
 24858  0D1C  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24859  0D1D  0020               	movlb	0	; select bank0
 24860  0D1E  0830               	movf	?_xtoa,w
 24861  0D1F  0021               	movlb	1	; select bank1
 24862  0D20  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24863  0D21  0008               	return
 24864  0D22                     l8303:	
 24865                           
 24866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 24867  0D22  0021               	movlb	1	; select bank1
 24868  0D23  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24869  0D24  0086               	movwf	6
 24870  0D25  3001               	movlw	1	; select bank2/3
 24871  0D26  0087               	movwf	7
 24872  0D27  3F40               	moviw [0]fsr1
 24873  0D28  00F1               	movwf	strncmp@_l
 24874  0D29  3F41               	moviw [1]fsr1
 24875  0D2A  00F2               	movwf	strncmp@_l+1
 24876  0D2B  306D               	movlw	low ((STR_136+1)| (0+32768))
 24877  0D2C  00F3               	movwf	strncmp@_r
 24878  0D2D  30BB               	movlw	high ((STR_136+1)| (0+32768))
 24879  0D2E  00F4               	movwf	strncmp@_r+1
 24880  0D2F  3002               	movlw	2
 24881  0D30  00F5               	movwf	strncmp@n
 24882  0D31  3000               	movlw	0
 24883  0D32  00F6               	movwf	strncmp@n+1
 24884  0D33  31B3  23E5  3188   	fcall	_strncmp
 24885  0D36  0871               	movf	?_strncmp,w
 24886  0D37  0472               	iorwf	?_strncmp+1,w
 24887  0D38  1903               	btfsc	3,2
 24888  0D39  2D52               	goto	l8307
 24889  0D3A  0021               	movlb	1	; select bank1
 24890  0D3B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24891  0D3C  0086               	movwf	6
 24892  0D3D  3001               	movlw	1	; select bank2/3
 24893  0D3E  0087               	movwf	7
 24894  0D3F  3F40               	moviw [0]fsr1
 24895  0D40  00F1               	movwf	strncmp@_l
 24896  0D41  3F41               	moviw [1]fsr1
 24897  0D42  00F2               	movwf	strncmp@_l+1
 24898  0D43  304D               	movlw	low ((STR_140+1)| (0+32768))
 24899  0D44  00F3               	movwf	strncmp@_r
 24900  0D45  30BB               	movlw	high ((STR_140+1)| (0+32768))
 24901  0D46  00F4               	movwf	strncmp@_r+1
 24902  0D47  3002               	movlw	2
 24903  0D48  00F5               	movwf	strncmp@n
 24904  0D49  3000               	movlw	0
 24905  0D4A  00F6               	movwf	strncmp@n+1
 24906  0D4B  31B3  23E5  3188   	fcall	_strncmp
 24907  0D4E  0871               	movf	?_strncmp,w
 24908  0D4F  0472               	iorwf	?_strncmp+1,w
 24909  0D50  1D03               	btfss	3,2
 24910  0D51  2DBF               	goto	l8317
 24911  0D52                     l8307:	
 24912                           
 24913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 24914  0D52  0021               	movlb	1	; select bank1
 24915  0D53  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24916  0D54  0086               	movwf	6
 24917  0D55  3001               	movlw	1	; select bank2/3
 24918  0D56  0087               	movwf	7
 24919  0D57  3F40               	moviw [0]fsr1
 24920  0D58  0022               	movlb	2	; select bank2
 24921  0D59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24922  0D5A  3F41               	moviw [1]fsr1
 24923  0D5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24924  0D5C  3001               	movlw	1
 24925  0D5D  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24926  0D5E  0084               	movwf	4
 24927  0D5F  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24928  0D60  1803               	skipnc
 24929  0D61  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24930  0D62  0085               	movwf	5
 24931  0D63  0800               	movf	0,w	;code access
 24932  0D64  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24933  0D65  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24934  0D66  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24935                           
 24936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 24937  0D67  0021               	movlb	1	; select bank1
 24938  0D68  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24939  0D69  0086               	movwf	6
 24940  0D6A  3001               	movlw	1	; select bank2/3
 24941  0D6B  0087               	movwf	7
 24942  0D6C  3002               	movlw	2
 24943  0D6D  0781               	addwf	1,f
 24944  0D6E  3141               	addfsr 1,1
 24945  0D6F  1803               	skipnc
 24946  0D70  0A81               	incf	1,f
 24947                           
 24948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 24949  0D71  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24950  0D72  0086               	movwf	6
 24951  0D73  3001               	movlw	1	; select bank2/3
 24952  0D74  0087               	movwf	7
 24953  0D75  0801               	movf	1,w
 24954  0D76  0084               	movwf	4
 24955  0D77  3001               	movlw	1	; select bank2/3
 24956  0D78  0085               	movwf	5
 24957  0D79  3002               	movlw	2
 24958  0D7A  0781               	addwf	1,f
 24959  0D7B  3F00               	moviw [0]fsr0
 24960  0D7C  0022               	movlb	2	; select bank2
 24961  0D7D  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24962  0D7E  3F01               	moviw [1]fsr0
 24963  0D7F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24964  0D80  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24965  0D81  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24966  0D82  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24967  0D83  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24968  0D84  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24969  0D85  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24970                           
 24971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 24972  0D86  0021               	movlb	1	; select bank1
 24973  0D87  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24974  0D88  0020               	movlb	0	; select bank0
 24975  0D89  00B1               	movwf	xtoa@fp+1
 24976  0D8A  0021               	movlb	1	; select bank1
 24977  0D8B  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24978  0D8C  0020               	movlb	0	; select bank0
 24979  0D8D  00B0               	movwf	xtoa@fp
 24980  0D8E  0022               	movlb	2	; select bank2
 24981  0D8F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24982  0D90  0020               	movlb	0	; select bank0
 24983  0D91  00B2               	movwf	xtoa@d
 24984  0D92  0022               	movlb	2	; select bank2
 24985  0D93  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24986  0D94  0020               	movlb	0	; select bank0
 24987  0D95  00B3               	movwf	xtoa@d+1
 24988  0D96  0022               	movlb	2	; select bank2
 24989  0D97  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24990  0D98  0020               	movlb	0	; select bank0
 24991  0D99  00B4               	movwf	xtoa@d+2
 24992  0D9A  0022               	movlb	2	; select bank2
 24993  0D9B  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24994  0D9C  0020               	movlb	0	; select bank0
 24995  0D9D  00B5               	movwf	xtoa@d+3
 24996  0D9E  0022               	movlb	2	; select bank2
 24997  0D9F  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24998  0DA0  0020               	movlb	0	; select bank0
 24999  0DA1  00B6               	movwf	xtoa@d+4
 25000  0DA2  0022               	movlb	2	; select bank2
 25001  0DA3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25002  0DA4  0020               	movlb	0	; select bank0
 25003  0DA5  00B7               	movwf	xtoa@d+5
 25004  0DA6  0022               	movlb	2	; select bank2
 25005  0DA7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25006  0DA8  0020               	movlb	0	; select bank0
 25007  0DA9  00B8               	movwf	xtoa@d+6
 25008  0DAA  0022               	movlb	2	; select bank2
 25009  0DAB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25010  0DAC  0020               	movlb	0	; select bank0
 25011  0DAD  00B9               	movwf	xtoa@d+7
 25012  0DAE  0022               	movlb	2	; select bank2
 25013  0DAF  0845               	movf	vfpfcnvrt@c^(0+256),w
 25014  0DB0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25015  0DB1  0820               	movf	??_vfpfcnvrt^(0+256),w
 25016  0DB2  0020               	movlb	0	; select bank0
 25017  0DB3  00BA               	movwf	xtoa@x
 25018  0DB4  319B  234B         	fcall	_xtoa
 25019  0DB6  0020               	movlb	0	; select bank0
 25020  0DB7  0831               	movf	?_xtoa+1,w
 25021  0DB8  0021               	movlb	1	; select bank1
 25022  0DB9  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25023  0DBA  0020               	movlb	0	; select bank0
 25024  0DBB  0830               	movf	?_xtoa,w
 25025  0DBC  0021               	movlb	1	; select bank1
 25026  0DBD  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25027  0DBE  0008               	return
 25028  0DBF                     l8317:	
 25029                           
 25030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 25031  0DBF  0021               	movlb	1	; select bank1
 25032  0DC0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25033  0DC1  0086               	movwf	6
 25034  0DC2  3001               	movlw	1	; select bank2/3
 25035  0DC3  0087               	movwf	7
 25036  0DC4  3F40               	moviw [0]fsr1
 25037  0DC5  0022               	movlb	2	; select bank2
 25038  0DC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25039  0DC7  3F41               	moviw [1]fsr1
 25040  0DC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25041  0DC9  0820               	movf	??_vfpfcnvrt^(0+256),w
 25042  0DCA  0084               	movwf	4
 25043  0DCB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25044  0DCC  0085               	movwf	5
 25045  0DCD  0012               	moviw fsr0++
 25046  0DCE  3A78               	xorlw	120
 25047  0DCF  1903               	btfsc	3,2
 25048  0DD0  2DE3               	goto	l8321
 25049  0DD1  0021               	movlb	1	; select bank1
 25050  0DD2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25051  0DD3  0086               	movwf	6
 25052  0DD4  3001               	movlw	1	; select bank2/3
 25053  0DD5  0087               	movwf	7
 25054  0DD6  3F40               	moviw [0]fsr1
 25055  0DD7  0022               	movlb	2	; select bank2
 25056  0DD8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25057  0DD9  3F41               	moviw [1]fsr1
 25058  0DDA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25059  0DDB  0820               	movf	??_vfpfcnvrt^(0+256),w
 25060  0DDC  0084               	movwf	4
 25061  0DDD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25062  0DDE  0085               	movwf	5
 25063  0DDF  0012               	moviw fsr0++
 25064  0DE0  3A58               	xorlw	88
 25065  0DE1  1D03               	btfss	3,2
 25066  0DE2  2E4D               	goto	l8331
 25067  0DE3                     l8321:	
 25068                           
 25069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 25070  0DE3  0021               	movlb	1	; select bank1
 25071  0DE4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25072  0DE5  0086               	movwf	6
 25073  0DE6  3001               	movlw	1	; select bank2/3
 25074  0DE7  0087               	movwf	7
 25075  0DE8  3F40               	moviw [0]fsr1
 25076  0DE9  0022               	movlb	2	; select bank2
 25077  0DEA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25078  0DEB  3F41               	moviw [1]fsr1
 25079  0DEC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25080  0DED  0820               	movf	??_vfpfcnvrt^(0+256),w
 25081  0DEE  0084               	movwf	4
 25082  0DEF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25083  0DF0  0085               	movwf	5
 25084  0DF1  0800               	movf	0,w	;code access
 25085  0DF2  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25086  0DF3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25087  0DF4  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25088                           
 25089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 25090  0DF5  0021               	movlb	1	; select bank1
 25091  0DF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25092  0DF7  0086               	movwf	6
 25093  0DF8  3001               	movlw	1	; select bank2/3
 25094  0DF9  0087               	movwf	7
 25095  0DFA  3001               	movlw	1
 25096  0DFB  0781               	addwf	1,f
 25097  0DFC  3141               	addfsr 1,1
 25098  0DFD  1803               	skipnc
 25099  0DFE  0A81               	incf	1,f
 25100                           
 25101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 25102  0DFF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25103  0E00  0086               	movwf	6
 25104  0E01  3001               	movlw	1	; select bank2/3
 25105  0E02  0087               	movwf	7
 25106  0E03  0801               	movf	1,w
 25107  0E04  0084               	movwf	4
 25108  0E05  3001               	movlw	1	; select bank2/3
 25109  0E06  0085               	movwf	5
 25110  0E07  3002               	movlw	2
 25111  0E08  0781               	addwf	1,f
 25112  0E09  3F00               	moviw [0]fsr0
 25113  0E0A  0022               	movlb	2	; select bank2
 25114  0E0B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25115  0E0C  3F01               	moviw [1]fsr0
 25116  0E0D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25117  0E0E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25118  0E0F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25119  0E10  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25120  0E11  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25121  0E12  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25122  0E13  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25123                           
 25124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 25125  0E14  0021               	movlb	1	; select bank1
 25126  0E15  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25127  0E16  0020               	movlb	0	; select bank0
 25128  0E17  00B1               	movwf	xtoa@fp+1
 25129  0E18  0021               	movlb	1	; select bank1
 25130  0E19  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25131  0E1A  0020               	movlb	0	; select bank0
 25132  0E1B  00B0               	movwf	xtoa@fp
 25133  0E1C  0022               	movlb	2	; select bank2
 25134  0E1D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25135  0E1E  0020               	movlb	0	; select bank0
 25136  0E1F  00B2               	movwf	xtoa@d
 25137  0E20  0022               	movlb	2	; select bank2
 25138  0E21  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25139  0E22  0020               	movlb	0	; select bank0
 25140  0E23  00B3               	movwf	xtoa@d+1
 25141  0E24  0022               	movlb	2	; select bank2
 25142  0E25  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25143  0E26  0020               	movlb	0	; select bank0
 25144  0E27  00B4               	movwf	xtoa@d+2
 25145  0E28  0022               	movlb	2	; select bank2
 25146  0E29  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25147  0E2A  0020               	movlb	0	; select bank0
 25148  0E2B  00B5               	movwf	xtoa@d+3
 25149  0E2C  0022               	movlb	2	; select bank2
 25150  0E2D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25151  0E2E  0020               	movlb	0	; select bank0
 25152  0E2F  00B6               	movwf	xtoa@d+4
 25153  0E30  0022               	movlb	2	; select bank2
 25154  0E31  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25155  0E32  0020               	movlb	0	; select bank0
 25156  0E33  00B7               	movwf	xtoa@d+5
 25157  0E34  0022               	movlb	2	; select bank2
 25158  0E35  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25159  0E36  0020               	movlb	0	; select bank0
 25160  0E37  00B8               	movwf	xtoa@d+6
 25161  0E38  0022               	movlb	2	; select bank2
 25162  0E39  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25163  0E3A  0020               	movlb	0	; select bank0
 25164  0E3B  00B9               	movwf	xtoa@d+7
 25165  0E3C  0022               	movlb	2	; select bank2
 25166  0E3D  0845               	movf	vfpfcnvrt@c^(0+256),w
 25167  0E3E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25168  0E3F  0820               	movf	??_vfpfcnvrt^(0+256),w
 25169  0E40  0020               	movlb	0	; select bank0
 25170  0E41  00BA               	movwf	xtoa@x
 25171  0E42  319B  234B         	fcall	_xtoa
 25172  0E44  0020               	movlb	0	; select bank0
 25173  0E45  0831               	movf	?_xtoa+1,w
 25174  0E46  0021               	movlb	1	; select bank1
 25175  0E47  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25176  0E48  0020               	movlb	0	; select bank0
 25177  0E49  0830               	movf	?_xtoa,w
 25178  0E4A  0021               	movlb	1	; select bank1
 25179  0E4B  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25180  0E4C  0008               	return
 25181  0E4D                     l8331:	
 25182                           
 25183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 25184  0E4D  0021               	movlb	1	; select bank1
 25185  0E4E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25186  0E4F  0086               	movwf	6
 25187  0E50  3001               	movlw	1	; select bank2/3
 25188  0E51  0087               	movwf	7
 25189  0E52  3F40               	moviw [0]fsr1
 25190  0E53  00F1               	movwf	strncmp@_l
 25191  0E54  3F41               	moviw [1]fsr1
 25192  0E55  00F2               	movwf	strncmp@_l+1
 25193  0E56  3097               	movlw	low (STR_154| (0+32768))
 25194  0E57  00F3               	movwf	strncmp@_r
 25195  0E58  30BB               	movlw	high (STR_154| (0+32768))
 25196  0E59  00F4               	movwf	strncmp@_r+1
 25197  0E5A  3002               	movlw	2
 25198  0E5B  00F5               	movwf	strncmp@n
 25199  0E5C  3000               	movlw	0
 25200  0E5D  00F6               	movwf	strncmp@n+1
 25201  0E5E  31B3  23E5  3188   	fcall	_strncmp
 25202  0E61  0871               	movf	?_strncmp,w
 25203  0E62  0472               	iorwf	?_strncmp+1,w
 25204  0E63  1903               	btfsc	3,2
 25205  0E64  2E7D               	goto	l8335
 25206  0E65  0021               	movlb	1	; select bank1
 25207  0E66  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25208  0E67  0086               	movwf	6
 25209  0E68  3001               	movlw	1	; select bank2/3
 25210  0E69  0087               	movwf	7
 25211  0E6A  3F40               	moviw [0]fsr1
 25212  0E6B  00F1               	movwf	strncmp@_l
 25213  0E6C  3F41               	moviw [1]fsr1
 25214  0E6D  00F2               	movwf	strncmp@_l+1
 25215  0E6E  3070               	movlw	low (STR_158| (0+32768))
 25216  0E6F  00F3               	movwf	strncmp@_r
 25217  0E70  30BB               	movlw	high (STR_158| (0+32768))
 25218  0E71  00F4               	movwf	strncmp@_r+1
 25219  0E72  3002               	movlw	2
 25220  0E73  00F5               	movwf	strncmp@n
 25221  0E74  3000               	movlw	0
 25222  0E75  00F6               	movwf	strncmp@n+1
 25223  0E76  31B3  23E5  3188   	fcall	_strncmp
 25224  0E79  0871               	movf	?_strncmp,w
 25225  0E7A  0472               	iorwf	?_strncmp+1,w
 25226  0E7B  1D03               	btfss	3,2
 25227  0E7C  2F04               	goto	l8345
 25228  0E7D                     l8335:	
 25229                           
 25230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 25231  0E7D  0021               	movlb	1	; select bank1
 25232  0E7E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25233  0E7F  0086               	movwf	6
 25234  0E80  3001               	movlw	1	; select bank2/3
 25235  0E81  0087               	movwf	7
 25236  0E82  3F40               	moviw [0]fsr1
 25237  0E83  0022               	movlb	2	; select bank2
 25238  0E84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25239  0E85  3F41               	moviw [1]fsr1
 25240  0E86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25241  0E87  3001               	movlw	1
 25242  0E88  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25243  0E89  0084               	movwf	4
 25244  0E8A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25245  0E8B  1803               	skipnc
 25246  0E8C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25247  0E8D  0085               	movwf	5
 25248  0E8E  0800               	movf	0,w	;code access
 25249  0E8F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25250  0E90  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25251  0E91  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25252                           
 25253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 25254  0E92  0021               	movlb	1	; select bank1
 25255  0E93  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25256  0E94  0086               	movwf	6
 25257  0E95  3001               	movlw	1	; select bank2/3
 25258  0E96  0087               	movwf	7
 25259  0E97  3002               	movlw	2
 25260  0E98  0781               	addwf	1,f
 25261  0E99  3141               	addfsr 1,1
 25262  0E9A  1803               	skipnc
 25263  0E9B  0A81               	incf	1,f
 25264                           
 25265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 25266  0E9C  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25267  0E9D  0086               	movwf	6
 25268  0E9E  3001               	movlw	1	; select bank2/3
 25269  0E9F  0087               	movwf	7
 25270  0EA0  0801               	movf	1,w
 25271  0EA1  0084               	movwf	4
 25272  0EA2  3001               	movlw	1	; select bank2/3
 25273  0EA3  0085               	movwf	5
 25274  0EA4  3004               	movlw	4
 25275  0EA5  0781               	addwf	1,f
 25276  0EA6  3F00               	moviw [0]fsr0
 25277  0EA7  0022               	movlb	2	; select bank2
 25278  0EA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25279  0EA9  3F01               	moviw [1]fsr0
 25280  0EAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25281  0EAB  3F02               	moviw [2]fsr0
 25282  0EAC  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 25283  0EAD  3F03               	moviw [3]fsr0
 25284  0EAE  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 25285  0EAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 25286  0EB0  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 25287  0EB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25288  0EB2  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 25289  0EB3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25290  0EB4  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 25291  0EB5  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25292  0EB6  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 25293  0EB7  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 25294  0EB8  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 25295  0EB9  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 25296  0EBA  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 25297  0EBB  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 25298  0EBC  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 25299  0EBD  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 25300  0EBE  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 25301  0EBF  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 25302  0EC0  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 25303  0EC1  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 25304  0EC2  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 25305  0EC3  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 25306  0EC4  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 25307  0EC5  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 25308  0EC6  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 25309  0EC7  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 25310  0EC8  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25311  0EC9  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 25312  0ECA  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25313                           
 25314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 25315  0ECB  0021               	movlb	1	; select bank1
 25316  0ECC  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25317  0ECD  0020               	movlb	0	; select bank0
 25318  0ECE  00B1               	movwf	xtoa@fp+1
 25319  0ECF  0021               	movlb	1	; select bank1
 25320  0ED0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25321  0ED1  0020               	movlb	0	; select bank0
 25322  0ED2  00B0               	movwf	xtoa@fp
 25323  0ED3  0022               	movlb	2	; select bank2
 25324  0ED4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25325  0ED5  0020               	movlb	0	; select bank0
 25326  0ED6  00B2               	movwf	xtoa@d
 25327  0ED7  0022               	movlb	2	; select bank2
 25328  0ED8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25329  0ED9  0020               	movlb	0	; select bank0
 25330  0EDA  00B3               	movwf	xtoa@d+1
 25331  0EDB  0022               	movlb	2	; select bank2
 25332  0EDC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25333  0EDD  0020               	movlb	0	; select bank0
 25334  0EDE  00B4               	movwf	xtoa@d+2
 25335  0EDF  0022               	movlb	2	; select bank2
 25336  0EE0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25337  0EE1  0020               	movlb	0	; select bank0
 25338  0EE2  00B5               	movwf	xtoa@d+3
 25339  0EE3  0022               	movlb	2	; select bank2
 25340  0EE4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25341  0EE5  0020               	movlb	0	; select bank0
 25342  0EE6  00B6               	movwf	xtoa@d+4
 25343  0EE7  0022               	movlb	2	; select bank2
 25344  0EE8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25345  0EE9  0020               	movlb	0	; select bank0
 25346  0EEA  00B7               	movwf	xtoa@d+5
 25347  0EEB  0022               	movlb	2	; select bank2
 25348  0EEC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25349  0EED  0020               	movlb	0	; select bank0
 25350  0EEE  00B8               	movwf	xtoa@d+6
 25351  0EEF  0022               	movlb	2	; select bank2
 25352  0EF0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25353  0EF1  0020               	movlb	0	; select bank0
 25354  0EF2  00B9               	movwf	xtoa@d+7
 25355  0EF3  0022               	movlb	2	; select bank2
 25356  0EF4  0845               	movf	vfpfcnvrt@c^(0+256),w
 25357  0EF5  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25358  0EF6  0820               	movf	??_vfpfcnvrt^(0+256),w
 25359  0EF7  0020               	movlb	0	; select bank0
 25360  0EF8  00BA               	movwf	xtoa@x
 25361  0EF9  319B  234B         	fcall	_xtoa
 25362  0EFB  0020               	movlb	0	; select bank0
 25363  0EFC  0831               	movf	?_xtoa+1,w
 25364  0EFD  0021               	movlb	1	; select bank1
 25365  0EFE  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25366  0EFF  0020               	movlb	0	; select bank0
 25367  0F00  0830               	movf	?_xtoa,w
 25368  0F01  0021               	movlb	1	; select bank1
 25369  0F02  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25370  0F03  0008               	return
 25371  0F04                     l8345:	
 25372                           
 25373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 25374  0F04  0021               	movlb	1	; select bank1
 25375  0F05  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25376  0F06  0086               	movwf	6
 25377  0F07  3001               	movlw	1	; select bank2/3
 25378  0F08  0087               	movwf	7
 25379  0F09  3F40               	moviw [0]fsr1
 25380  0F0A  00F1               	movwf	strncmp@_l
 25381  0F0B  3F41               	moviw [1]fsr1
 25382  0F0C  00F2               	movwf	strncmp@_l+1
 25383  0F0D  309A               	movlw	low (STR_163| (0+32768))
 25384  0F0E  00F3               	movwf	strncmp@_r
 25385  0F0F  30BB               	movlw	high (STR_163| (0+32768))
 25386  0F10  00F4               	movwf	strncmp@_r+1
 25387  0F11  3002               	movlw	2
 25388  0F12  00F5               	movwf	strncmp@n
 25389  0F13  3000               	movlw	0
 25390  0F14  00F6               	movwf	strncmp@n+1
 25391  0F15  31B3  23E5  3188   	fcall	_strncmp
 25392  0F18  0871               	movf	?_strncmp,w
 25393  0F19  0472               	iorwf	?_strncmp+1,w
 25394  0F1A  1903               	btfsc	3,2
 25395  0F1B  2F34               	goto	l8349
 25396  0F1C  0021               	movlb	1	; select bank1
 25397  0F1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25398  0F1E  0086               	movwf	6
 25399  0F1F  3001               	movlw	1	; select bank2/3
 25400  0F20  0087               	movwf	7
 25401  0F21  3F40               	moviw [0]fsr1
 25402  0F22  00F1               	movwf	strncmp@_l
 25403  0F23  3F41               	moviw [1]fsr1
 25404  0F24  00F2               	movwf	strncmp@_l+1
 25405  0F25  3073               	movlw	low (STR_167| (0+32768))
 25406  0F26  00F3               	movwf	strncmp@_r
 25407  0F27  30BB               	movlw	high (STR_167| (0+32768))
 25408  0F28  00F4               	movwf	strncmp@_r+1
 25409  0F29  3002               	movlw	2
 25410  0F2A  00F5               	movwf	strncmp@n
 25411  0F2B  3000               	movlw	0
 25412  0F2C  00F6               	movwf	strncmp@n+1
 25413  0F2D  31B3  23E5  3188   	fcall	_strncmp
 25414  0F30  0871               	movf	?_strncmp,w
 25415  0F31  0472               	iorwf	?_strncmp+1,w
 25416  0F32  1D03               	btfss	3,2
 25417  0F33  2FA1               	goto	l8359
 25418  0F34                     l8349:	
 25419                           
 25420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 25421  0F34  0021               	movlb	1	; select bank1
 25422  0F35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25423  0F36  0086               	movwf	6
 25424  0F37  3001               	movlw	1	; select bank2/3
 25425  0F38  0087               	movwf	7
 25426  0F39  3F40               	moviw [0]fsr1
 25427  0F3A  0022               	movlb	2	; select bank2
 25428  0F3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25429  0F3C  3F41               	moviw [1]fsr1
 25430  0F3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25431  0F3E  3001               	movlw	1
 25432  0F3F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25433  0F40  0084               	movwf	4
 25434  0F41  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25435  0F42  1803               	skipnc
 25436  0F43  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25437  0F44  0085               	movwf	5
 25438  0F45  0800               	movf	0,w	;code access
 25439  0F46  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25440  0F47  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25441  0F48  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25442                           
 25443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 25444  0F49  0021               	movlb	1	; select bank1
 25445  0F4A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25446  0F4B  0086               	movwf	6
 25447  0F4C  3001               	movlw	1	; select bank2/3
 25448  0F4D  0087               	movwf	7
 25449  0F4E  3002               	movlw	2
 25450  0F4F  0781               	addwf	1,f
 25451  0F50  3141               	addfsr 1,1
 25452  0F51  1803               	skipnc
 25453  0F52  0A81               	incf	1,f
 25454                           
 25455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 25456  0F53  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25457  0F54  0086               	movwf	6
 25458  0F55  3001               	movlw	1	; select bank2/3
 25459  0F56  0087               	movwf	7
 25460  0F57  0801               	movf	1,w
 25461  0F58  0084               	movwf	4
 25462  0F59  3001               	movlw	1	; select bank2/3
 25463  0F5A  0085               	movwf	5
 25464  0F5B  3002               	movlw	2
 25465  0F5C  0781               	addwf	1,f
 25466  0F5D  3F00               	moviw [0]fsr0
 25467  0F5E  0022               	movlb	2	; select bank2
 25468  0F5F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25469  0F60  3F01               	moviw [1]fsr0
 25470  0F61  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25471  0F62  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25472  0F63  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25473  0F64  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25474  0F65  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25475  0F66  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25476  0F67  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25477                           
 25478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 25479  0F68  0021               	movlb	1	; select bank1
 25480  0F69  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25481  0F6A  0020               	movlb	0	; select bank0
 25482  0F6B  00B1               	movwf	xtoa@fp+1
 25483  0F6C  0021               	movlb	1	; select bank1
 25484  0F6D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25485  0F6E  0020               	movlb	0	; select bank0
 25486  0F6F  00B0               	movwf	xtoa@fp
 25487  0F70  0022               	movlb	2	; select bank2
 25488  0F71  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25489  0F72  0020               	movlb	0	; select bank0
 25490  0F73  00B2               	movwf	xtoa@d
 25491  0F74  0022               	movlb	2	; select bank2
 25492  0F75  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25493  0F76  0020               	movlb	0	; select bank0
 25494  0F77  00B3               	movwf	xtoa@d+1
 25495  0F78  0022               	movlb	2	; select bank2
 25496  0F79  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25497  0F7A  0020               	movlb	0	; select bank0
 25498  0F7B  00B4               	movwf	xtoa@d+2
 25499  0F7C  0022               	movlb	2	; select bank2
 25500  0F7D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25501  0F7E  0020               	movlb	0	; select bank0
 25502  0F7F  00B5               	movwf	xtoa@d+3
 25503  0F80  0022               	movlb	2	; select bank2
 25504  0F81  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25505  0F82  0020               	movlb	0	; select bank0
 25506  0F83  00B6               	movwf	xtoa@d+4
 25507  0F84  0022               	movlb	2	; select bank2
 25508  0F85  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25509  0F86  0020               	movlb	0	; select bank0
 25510  0F87  00B7               	movwf	xtoa@d+5
 25511  0F88  0022               	movlb	2	; select bank2
 25512  0F89  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25513  0F8A  0020               	movlb	0	; select bank0
 25514  0F8B  00B8               	movwf	xtoa@d+6
 25515  0F8C  0022               	movlb	2	; select bank2
 25516  0F8D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25517  0F8E  0020               	movlb	0	; select bank0
 25518  0F8F  00B9               	movwf	xtoa@d+7
 25519  0F90  0022               	movlb	2	; select bank2
 25520  0F91  0845               	movf	vfpfcnvrt@c^(0+256),w
 25521  0F92  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25522  0F93  0820               	movf	??_vfpfcnvrt^(0+256),w
 25523  0F94  0020               	movlb	0	; select bank0
 25524  0F95  00BA               	movwf	xtoa@x
 25525  0F96  319B  234B         	fcall	_xtoa
 25526  0F98  0020               	movlb	0	; select bank0
 25527  0F99  0831               	movf	?_xtoa+1,w
 25528  0F9A  0021               	movlb	1	; select bank1
 25529  0F9B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25530  0F9C  0020               	movlb	0	; select bank0
 25531  0F9D  0830               	movf	?_xtoa,w
 25532  0F9E  0021               	movlb	1	; select bank1
 25533  0F9F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25534  0FA0  0008               	return
 25535  0FA1                     l8359:	
 25536                           
 25537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 25538  0FA1  0021               	movlb	1	; select bank1
 25539  0FA2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25540  0FA3  0086               	movwf	6
 25541  0FA4  3001               	movlw	1	; select bank2/3
 25542  0FA5  0087               	movwf	7
 25543  0FA6  3F40               	moviw [0]fsr1
 25544  0FA7  0022               	movlb	2	; select bank2
 25545  0FA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25546  0FA9  3F41               	moviw [1]fsr1
 25547  0FAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25548  0FAB  0820               	movf	??_vfpfcnvrt^(0+256),w
 25549  0FAC  0084               	movwf	4
 25550  0FAD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25551  0FAE  0085               	movwf	5
 25552  0FAF  0012               	moviw fsr0++
 25553  0FB0  3A25               	xorlw	37
 25554  0FB1  1D03               	btfss	3,2
 25555  0FB2  2FCD               	goto	l8369
 25556                           
 25557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 25558  0FB3  0021               	movlb	1	; select bank1
 25559  0FB4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25560  0FB5  0086               	movwf	6
 25561  0FB6  3001               	movlw	1	; select bank2/3
 25562  0FB7  0087               	movwf	7
 25563  0FB8  3001               	movlw	1
 25564  0FB9  0781               	addwf	1,f
 25565  0FBA  3141               	addfsr 1,1
 25566  0FBB  1803               	skipnc
 25567  0FBC  0A81               	incf	1,f
 25568                           
 25569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 25570  0FBD  3025               	movlw	37
 25571  0FBE  00F1               	movwf	fputc@c
 25572  0FBF  3000               	movlw	0
 25573  0FC0  00F2               	movwf	fputc@c+1
 25574  0FC1  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25575  0FC2  00F4               	movwf	fputc@fp+1
 25576  0FC3  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25577  0FC4  00F3               	movwf	fputc@fp
 25578  0FC5  31A0  2000         	fcall	_fputc
 25579  0FC7                     l8365:	
 25580                           
 25581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 25582  0FC7  3001               	movlw	1
 25583  0FC8  0021               	movlb	1	; select bank1
 25584  0FC9  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25585  0FCA  3000               	movlw	0
 25586  0FCB  00ED               	movwf	(?_vfpfcnvrt^(0+128)+1)
 25587  0FCC  0008               	return
 25588  0FCD                     l8369:	
 25589                           
 25590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 25591  0FCD  0021               	movlb	1	; select bank1
 25592  0FCE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25593  0FCF  0086               	movwf	6
 25594  0FD0  3001               	movlw	1	; select bank2/3
 25595  0FD1  0087               	movwf	7
 25596  0FD2  3001               	movlw	1
 25597  0FD3  0781               	addwf	1,f
 25598  0FD4  3141               	addfsr 1,1
 25599  0FD5  1803               	skipnc
 25600  0FD6  0A81               	incf	1,f
 25601  0FD7  2948               	goto	l8167
 25602  0FD8                     l8375:	
 25603                           
 25604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 25605  0FD8  0021               	movlb	1	; select bank1
 25606  0FD9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25607  0FDA  0086               	movwf	6
 25608  0FDB  3001               	movlw	1	; select bank2/3
 25609  0FDC  0087               	movwf	7
 25610  0FDD  3F40               	moviw [0]fsr1
 25611  0FDE  0022               	movlb	2	; select bank2
 25612  0FDF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25613  0FE0  3F41               	moviw [1]fsr1
 25614  0FE1  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25615  0FE2  0820               	movf	??_vfpfcnvrt^(0+256),w
 25616  0FE3  0084               	movwf	4
 25617  0FE4  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25618  0FE5  0085               	movwf	5
 25619  0FE6  0800               	movf	0,w	;code access
 25620  0FE7  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25621  0FE8  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 25622  0FE9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25623  0FEA  00F1               	movwf	fputc@c
 25624  0FEB  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25625  0FEC  00F2               	movwf	fputc@c+1
 25626  0FED  0021               	movlb	1	; select bank1
 25627  0FEE  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25628  0FEF  00F4               	movwf	fputc@fp+1
 25629  0FF0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25630  0FF1  00F3               	movwf	fputc@fp
 25631  0FF2  31A0  2000  3188   	fcall	_fputc
 25632                           
 25633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 25634  0FF5  0021               	movlb	1	; select bank1
 25635  0FF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25636  0FF7  0086               	movwf	6
 25637  0FF8  3001               	movlw	1	; select bank2/3
 25638  0FF9  0087               	movwf	7
 25639  0FFA  3001               	movlw	1
 25640  0FFB  0781               	addwf	1,f
 25641  0FFC  3141               	addfsr 1,1
 25642  0FFD  1803               	skipnc
 25643  0FFE  0A81               	incf	1,f
 25644  0FFF  2FC7               	goto	l8365
 25645  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     835
    Constant    90
    Data        7
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80     26      75
    BANK4            80      0      29
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1823_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), adcGain(BANK3[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_26(CODE[3]), STR_13(CODE[3]), STR_12(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _updateVoltages->___fltol
    ___flmul->__Umul8_16
    _updateCurrent->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->___fladd
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _AFE_UPDATE->_updateVoltages
    _updateVoltages->___fltol

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _statemachine->_snprintf
    _printotAFERegisters->_snprintf
    _printcellParameters->_snprintf

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  378422
                                             24 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
                       _shutdown_BMS
 ---------------------------------------------------------------------------------
 (2) _shutdown_BMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  376362
                                             77 BANK2      3     3      0
                         _AFE_UPDATE
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99626
                                             76 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   95215
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            28     4     24   93127
                                             72 BANK2      4     4      0
                                              0 BANK3     24     0     24
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   88202
                                             53 BANK2     19    12      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   87165
                                             78 BANK0      2     2      0
                                             46 BANK2      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   86303
                                             76 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   27939
                                              9 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2088
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   46281
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   12348
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   12348
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   10123
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   10120
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    7795
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    3248
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    4256
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    4256
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0   22880
                      _updateCurrent
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      18    18      0   18467
                                              9 BANK1     18    18      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
                      _read_I2C_data
                       _send_I2C_ACK
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_ACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1006
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     676
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     609
                                             10 COMMON     2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3937
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2641
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        3     3      0    4413
                                              0 BANK0      3     3      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    4411
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     804
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    1658
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    1345
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _updateCurrent
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _read_I2C_data
         _send_I2C_ACK
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color
     _shutdown_BMS

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1A      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      1D      13       36.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1B5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1B5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 23 23:27:50 2020

          __end_of_setShortCircuitProtection 07E9                               _maxCellVoltage 01BA  
                      __end_of_send_I2C_data 3E54                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 100F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               _shutdown_BMS 1001                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3E84  
                        __Umul8_16@word_mpld 0077                                          l301 3E25  
                                        l313 3E59                                          l307 3E2D  
                                        l341 3FBE                                          l319 3E47  
                                        l343 3FC3                                          l344 3FC8  
                                        l248 3E32                                          l345 3FDD  
                                        l169 19F7                                          l283 3E50  
                                        l446 18BE                                          l295 3E6C  
                                        l712 029E                                          l289 1804  
                                        l641 3359                                          l713 028B  
                                        l723 02D2                                          l644 3379  
                                        l804 2C7C                                          l812 2137  
                                        l661 1A5F                                          l741 0499  
                                        l662 1A73                                          l831 1B6D  
                                        l656 1A3D                                          l816 2152  
                                        l665 1B09                                          l657 1A44  
                                        l827 1B52                                          l852 1C70  
                                        l773 2302                                          l861 15FD  
                                        l863 160A                                          l784 23BD  
                                        l864 160D                                          l777 231D  
                                        l865 1610                                          l778 23B2  
                                        l866 1613                                          l795 2C21  
                                        l868 1647                                          l959 3F34  
                        __size_of_AFE_UPDATE 0006                                          _abs 3ECC  
                             RGB_color@color 0071                                          _pad 3343  
                               ___awmod@sign 0077                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 18C4  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1024 378F                                         l1202 2859  
                                       ?_abs 0074                                         l1140 36EF  
                                       l1302 1FF8                                         l1160 3585  
                                       l1400 2A53                                         l1072 211E  
                                       l1128 32C6                                         l1137 36A1  
                                       l1129 32E0                                         l1059 24CD  
                                       l1260 1E6B                                         l1340 1E19  
                                       l1316 1CED                                         l1407 2A67  
                                       l1264 1EFE                                         l1408 2A71  
                                       l1192 376D                                         l1281 1F81  
                                       l1337 1DF4                                         l1266 1EE1  
                                       l1338 1E0C                                         l1445 2AFE  
                                       l1294 1FE0                                         l1368 15C7  
                                       l1394 2A1D                                         l1468 2F1C  
                                       l5013 36BB                                         l5101 280E  
                                       l5103 281D                                         l5041 354E  
                                       l5017 36D5                                         l1578 3FAE  
                                       l5107 284D                                         l5221 1DB1  
                                       l5213 1D83                                         l5133 1CC1  
                                       l5037 3545                                         l6021 341F  
                                       l5215 1D9A                                         l5135 1CC9  
                                       l6023 33FA                                         l4521 1E38  
                                       l5225 1DB3                                         l5153 1CE5  
                                       l5129 1CBE                                         l5057 3573  
                                       l5081 3719                                         l4611 1F0C  
                                       l4603 1EF9                                         l5235 1DDC  
                                       l5163 1D0C                                         l5067 3592  
                                       l5059 3581                                         l5403 3F5B  
                                       l5091 3761                                         l5083 3728  
                                       l4621 1F20                                         l4525 1E3B  
                                       l5149 1CE2                                         l6029 3426  
                                       ?_pad 0026                                         l4527 1E43  
                                       l5351 152F                                         l5271 13C4  
                                       l4545 1E60                                         l5249 1E15  
                                       l5169 1D18                                         l4705 3FA8  
                                       l5353 1546                                         l5273 13CC  
                                       l4473 2008                                         l4801 2ED5  
                                       l4619 1F1E                                         l4555 1E75  
                                       l5195 1D78                                         l5363 155F  
                                       l5291 13EF                                         l4475 200C  
                                       l4491 308C                                         l4803 2EE6  
                                       l4661 1FA7                                         l4629 1F2F  
                                       l4549 1E63                                         l5189 1D5F  
                                       l5197 1D41                                         l5373 1588  
                                       l5269 13C2                                         l4901 20B2  
                                       l8101 259B                                         l4655 1FA0  
                                       l4647 1F93                                         l4639 1F79  
                                       l4663 1FA9                                         l5199 1D7D  
                                       l5383 15B4                                         l5359 155D  
                                       l5287 13E5                                         l4479 2033  
                                       l4903 20C1                                         l4807 2EFF  
                                       l8031 2974                                         l8023 291E  
                                       l4673 1FB4                                         l4593 1EE9  
                                       l4585 1EB1                                         l5377 159D  
                                       l5289 13E7                                         l4833 3F2E  
                                       l4497 3EB9                                         l4921 339E  
                                       l8009 17B9                                         l4691 1FF0  
                                       l4595 1EEB                                         l5299 13FD  
                                       l4499 3EC5                                         l4851 2416  
                                       l4907 20F1                                         l4755 3659  
                                       l4771 300A                                         l7411 00B5  
                                       l7403 00A3                                         l8043 25DD  
                                       l8035 29A4                                         l8019 28EE  
                                       l4669 1FB2                                         l6621 2A15  
                                       l7325 30BB                                         l4909 20FD  
                                       l7317 32F2                                         l4765 3681  
                                       l8109 2D78                                         l4695 1FF4  
                                       l6631 2A30                                         l6703 3FCD  
                                       l7271 334F                                         l7327 30C4  
                                       l4855 243D                                         l4927 33A9  
                                       l4759 365E                                         l7415 00BC  
                                       l7423 00CE                                         l8303 0D22  
                                       l8119 2DE1                                         l8071 289A  
                                       l8055 265A                                         l8047 2601  
                                       l8401 30E8                                         l6641 2A65  
                                       l6633 2A40                                         l7281 335B  
                                       l4857 2441                                         l7353 1A6E  
                                       l4953 33E0                                         l4945 33CF  
                                       l4937 33B1                                         l7513 02DF  
                                       l7505 02CD                                         l7433 00FE  
                                       l7441 012C                                         l8321 0DE3  
                                       l8209 0927                                         l8129 2211  
                                       l6643 2A58                                         l6627 2A2C  
                                       l7275 3357                                         l4867 2458  
                                       l7347 1A57                                         l4939 33BD  
                                       l7611 05DA                                         l7523 02F3  
                                       l7515 02E3                                         l7451 015C  
                                       l8331 0E4D                                         l8307 0D52  
                                       l8171 094C                                         l8139 2275  
                                       l8091 2536                                         l8067 286A  
                                       l8059 268A                                         l8405 30F3  
                                       l7285 3385                                         l4877 24A0  
                                       l4869 2467                                         l4893 20A5  
                                       l7357 1AA0                                         l4949 33D8  
                                       l4965 3270                                         l8317 0DBF  
                                       l8229 0A1E                                         l8173 08B1  
                                       l8149 080C                                         l8431 37B0  
                                       l8423 37A0                                         l6655 2A8C  
                                       l6903 3FF0                                         l8511 2FB8  
                                       l6751 07C9                                         l6735 078D  
                                       l4879 24AC                                         l7367 1A7B  
                                       l7375 1B15                                         l4991 32A6  
                                       l4983 3295                                         l7607 05C2  
                                       l7543 0432                                         l7527 02FB  
                                       l7471 01DB                                         l8335 0E7D  
                                       l8239 0A61                                         l8167 0948  
                                       l8159 0876                                         l8079 24DF  
                                       l8441 37DE                                         l8433 37BE  
                                       l6729 06E1                                         l4889 207E  
                                       l7385 1B28                                         l4977 327D  
                                       l4969 3277                                         l7537 030D  
                                       l7473 0215                                         l7801 21F6  
                                       l8345 0F04                                         l8249 0ACA  
                                       l8185 08D3                                         l8515 2FE0  
                                       l6747 079F                                         l7379 1B1D  
                                       l4979 3289                                         l4987 329E  
                                       l7635 0612                                         l7619 05F0  
                                       l7571 0501                                         l7539 03DF  
                                       l7491 02A1                                         l7467 01AB  
                                       l7459 018A                                         l7803 2171  
                                       l7811 21FB                                         l8259 0B34  
                                       l8445 37E9                                         l8541 2D58  
                                       l6773 27A6                                         l7901 2ADF  
                                       l7389 1B35                                         l7637 061A  
                                       l7557 0497                                         l7549 0453  
                                       l7477 0245                                         l7725 23D6  
                                       l7709 233F                                         l7821 1B65  
                                       l8365 0FC7                                         l8349 0F34  
                                       l8293 0CB6                                         l8269 0B98  
                                       l8197 08F5                                         l6767 26FA  
                                       l7647 0616                                         l7591 051C  
                                       l7559 04A0                                         l7479 026A  
                                       l7751 2C32                                         l7831 1B95  
                                       l8359 0FA1                                         l8279 0C1C  
                                       l8375 0FD8                                         l8449 37F7  
                                       l8537 2D30                                         l6785 27B8  
                                       l6697 3F14                                         l7905 2B02  
                                       l7673 0696                                         l7657 0664  
                                       l7649 064E                                         l7681 06B1  
                                       l7593 0536                                         l7497 02A9  
                                       l7489 0298                                         l7737 2BFA  
                                       l8369 0FCD                                         l8289 0C86  
                                       l8393 31B6                                         l8481 3609  
                                       l8465 35C8                                         l7915 2B31  
                                       l7691 2315                                         l7755 2C43  
                                       l7851 1BFD                                         l7835 1BAF  
                                       l7827 1B7D                                         l8395 31DE  
                                       l8467 35D0                                         l8459 35B4  
                                       l8581 1165                                         l6789 27E0  
                                       l7773 2C91                                         l7765 2C53  
                                       l7757 2C50                                         l8477 35FE  
                                       l8717 18C5                                         l8805 3132  
                                       l8567 111A                                         l7599 0548  
                                       l7775 2C9E                                         l7791 2195  
                                       l8911 1635                                         l7935 15FF  
                                       l7951 161A                                         l8479 3602  
                                       l8913 2AD7                                         l7769 2C80  
                                       l7785 214A                                         l7945 1616  
                                       l8579 1162                                         l8915 3FD2  
                                       l8595 1815                                         l7891 2AB6  
                                       l7883 2A9A                                         l7699 2364  
                                       l7875 1C8E                                         l7859 1C3F  
                                       l7971 169E                                         l7955 164E  
                                       l8747 1926                                         l8909 19EC  
                                       l8773 19CE                                         l8781 19E2  
                                       l7991 1723                                         l7967 1682  
                                       l8697 2BCC                                         l7897 2AC6  
                                       l7993 172D                                         l7969 1694  
                                       l7977 16C7                                         l7899 2ACB  
                                       l7989 1711                                         l7999 1756  
                                       STR_1 39AA                                 __CFG_WDTE$ON 0000  
                                       STR_2 38A4                                         STR_3 392B  
                                       STR_4 383B                                         STR_5 3A56  
                                       STR_6 3980                                         STR_7 38FF  
                                       STR_8 3802                                         STR_9 3956  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u5040 1ED0                                         u5050 1ED1  
                                       u5035 1EC5                                         u5205 1F94  
                                       u5305 1FCB                                         u5163 1F41  
                                       u5155 1F24                                         u5085 1EEF  
                                       u7005 1576                                         u7015 1591  
                                       u6055 33B4                                         u6400 3709  
                                       u7025 15A7                                         u5530 3679  
                                       u6315 3557                                         u6075 33BE  
                                       u6155 3280                                         u5540 367A  
                                       u5620 2E9C                                         u5700 3F78  
                                       u6085 33C8                                         u5525 366B  
                                       u5605 2E89                                         u5710 3F79  
                                       u6095 33D0                                         u6175 328F  
                                       u5385 3FAF                                         u6345 3574  
                                       u5465 3ED5                                         u6185 3296  
                                       u5625 2E98                                         _SCS0 04C8  
                                       u5475 362F                                         u6435 374E  
                                       _SCS1 04C9                                         u5645 2EC1  
                                       u5750 3EAD                                         u6615 1D59  
                                       u6375 3589                                         u5495 3648  
                                       u5760 3EAE                                         u6625 1D6D  
                                       u5665 2EEF                                         u5850 2448  
                                       u5595 2E6E                                         u6475 283B  
                                       u5685 2F08                                         u6655 1D86  
                                       u4895 2031                                         u6745 1DCA  
                                       u6585 1D49                                         u6905 151E  
                                       u5785 3F35                                         u6755 1DE5  
                                       u6675 1D8F                                         u6595 1D50  
                                       u6915 1532                                         u9235 2A79  
                                       u9155 2A39                                         u5795 3F3A  
                                       u9500 3FE7                                         u6765 1DFE  
                                       u5885 248D                                         u9510 3FF5  
                                       u6935 153B                                         u9175 2A4D  
                                       u9520 3FF6                                         u6865 1473  
                                       u9345 07B8                                         u5985 20DF  
                                       u6875 14A2                                         u9195 2A5F  
                                       u9700 07F8                                         u6885 14F8  
                                       u9710 07F9                                         u6895 150F  
                                       u9800 3053                                         u9385 27D1  
                                       u9490 3FE6                                         u9680 3EF2  
                                       u9760 3030                                         u9745 3365  
                                       u9690 3EF3                                         u9770 3031  
                                       u9915 1A4F                                         u9860 1A13  
                                       u9845 32EE                                         u9870 1A14  
                                       u9790 3052                                         u9945 1B13  
                                       _TMR1 0016                                         u9965 1A8F  
                                       u9975 1A9B                                         _SPEN 0CEF  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 02A0  
                             ?_updateCurrent 0070                                         _atoi 2A95  
                                       _ctoa 30AE                                         _main 3111  
                                       _dtoa 19F8                                         _prec 01B2  
                                       _otoa 22FB                                         _nout 01AE  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2BDF  
                                       btemp 007E                                         _utoa 2130  
                                       _xtoa 1B4B                                ___fpclassifyf 360E  
                                       start 001E                              ___fldiv@new_exp 0052  
                               _tolower$1893 0079                       __end_of_updateVoltages 11B7  
                   __end_of_send_I2C_stopBit 3E31                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3E66  
                              ?_EUSART_Write 0070                                ___fltol@sign1 007A  
                            __end_of___aldiv 3800                              __end_of___aodiv 24DF  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 2000                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2130  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 1E1E  
                            __end_of___awdiv 33E5                              __end_of___flneg 3E66  
                                      STR_10 38D2                                        STR_11 3870  
                                      STR_20 3A83                                        STR_12 39D2  
                                      STR_13 3A56                                        STR_21 3AAD  
                                      STR_22 3AC1                                        STR_14 3A98  
                                      STR_31 3B48                                        STR_23 3AD5  
                                      STR_15 3A44                                        STR_32 3B5C  
                                      STR_24 3AE8                                        STR_16 3A18  
                                      STR_41 3B58                                        STR_25 3AFA  
                                      STR_17 3A2E                                        STR_26 3A56  
                                      STR_50 3B59                                        STR_18 3A59  
                                      STR_35 3B50                                        STR_27 3B44  
                                      STR_19 3A6E                                        STR_28 3B54  
                            __end_of___awmod 32AB                                        STR_37 3B50  
                                      STR_53 3B76                                        STR_46 3B51  
                                      STR_62 3B79                                        STR_55 3B76  
                                      STR_71 3B7C                                        STR_39 3B58  
                                      STR_64 3B79                                        STR_73 3B7C  
                                      STR_57 3B7F                                        STR_66 3B82  
                                      STR_59 3B7F                                        STR_83 3B65  
                                      STR_91 3B8E                                        STR_68 3B82  
                                      STR_76 3B64                                        STR_93 3B8E  
                                      STR_78 3B64                                        STR_86 3B8B  
                                      STR_88 3B8B                                        STR_96 3B60  
                            __end_of___flmul 15D4                                        STR_98 3B60  
                                      ?_otoa 0030                              __end_of___flsub 3178  
                            __end_of___fltol 35A1                                        ?_stoa 0020  
                                      u10110 014D                                        ?_utoa 0030  
                                      u11000 2B16                                        u10120 014E  
                                      u11010 2B17                                        u11100 16BD  
                                      u10070 00EF                                        u10080 00F0  
                                      u10305 0317                                        u10225 02B6  
                                      u10235 02C9                                        u11140 174B  
                                      u10510 0689                                        u11150 174C  
                                      u10520 068A                                        u11320 257C  
                                      u10425 05CC                                        u11330 257D  
                                      u11090 16BC                                        u10435 05D8  
                                      u10195 0296                              __end_of___lodiv 377E  
                                      u12027 313B                              ___awdiv@divisor 0071  
                                      u10605 235F                                        u12037 3F08  
                                      u12047 18F1                                        ?_xtoa 0030  
                                      u10640 2BE9                                        u10705 2C5D  
                                      u12057 192D                                        u10555 230D  
                                      u12067 19DB                                        u10565 2396  
                                      u10725 2C9C                                        u12077 11BB  
                                      u12087 3E99                                        u10495 0657  
                                      u10575 23BB                                        u10815 1B5D  
                                      u10840 1BC6                                        u10745 2142  
                                      u10905 1C23                                        u10850 1BC7  
                                      u11715 37B3                                        u10595 2353  
                                      u10675 2C1A                                        u10915 1C49  
                                      u10835 1BA9                                        u10870 1BE6  
                                      u11735 37BF                                        u11655 30F4  
                                      u10695 2C4E                                        u10775 2184  
                                      u10935 1C5F                                        u10880 1BE7  
                                      u11745 37D3                                        u11665 30FB  
                                      u11905 11B2                                        u10785 2190  
                                      u10945 1C6B                                        u11825 35F5  
                                      u11755 37DF                                        u11915 182B  
                                      u11835 2F92                                        u11845 2FD0  
                                      u11935 1891                                        u11945 2B40  
                                      u11865 2D11                              __end_of___lomod 286A  
                                      u11955 2B57                                        u11875 2D48  
                                      u11975 2B8D                                        u11895 115C  
                                      u11985 2BA4                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l151 001C                              ___awdiv@counter 0076  
                               vfpfcnvrt@fmt 00EE                                 vfpfcnvrt@llu 0146  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 3E14                                        _flags 01B4  
                                      _errno 01AC                                        _fputc 2000  
                            __end_of_isalpha 3F80                                        _fputs 3088  
                                      _myIsr 0004                              __end_of_isdigit 3EB5  
                        _printotAFERegisters 11B7                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 01B0                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 0800                              __end_of_isspace 3F63  
                            updateVoltages@i 00B9                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 3EFA                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                                        stoa@i 002A  
                                      stoa@l 0032                                        stoa@p 0030  
                                      stoa@s 0022                                        stoa@w 002C  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                               ?___fpclassifyf 0071  
                            __end_of_tolower 3042                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3B3C                              __end_of_strncmp 3437  
                            __end_of_toupper 3064                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1908 0079  
                             __CFG_MCLRE$OFF 0000                              __initialization 0020  
                            ?_updateVoltages 0070        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2B36                                 __end_of_ctoa 30DF  
                               __end_of_main 3143                                 __end_of_dtoa 1B4B  
                               __end_of_otoa 23EC                                 __end_of_stoa 2CA4  
                               __end_of_utoa 2211                                 __end_of_xtoa 1CA4  
                       ?_printotAFERegisters 0070                     __end_of_UV_delay_setting 3B3C  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 3EFA                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E9  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 3343  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     ?_fputs 007A                                       STR_103 3B61  
                                     STR_111 3B88                                       STR_113 3B88  
                                     STR_106 3B85                                       STR_123 3B69  
                                     STR_131 3B94                                       ?_myIsr 0070  
                                     STR_108 3B85                                       STR_116 3B68  
                                     STR_140 3B4C                                       STR_133 3B94  
                                     STR_142 3B4C                                       STR_118 3B68  
                                     STR_126 3B91                                       STR_151 3B4D  
                                     STR_160 3B70                                       STR_128 3B91  
                                     STR_136 3B6C                                       STR_138 3B6C  
                                     STR_154 3B97                                       STR_147 3B6D  
                                     STR_163 3B9A                                       STR_156 3B97  
                                     STR_165 3B9A                                       STR_158 3B70  
                                     STR_167 3B73                                       STR_169 3B73  
                           ___awdiv@dividend 0073                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3A18  
                            ??_updateCurrent 007B                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3B44                                vfpfcnvrt@done 012D  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_989 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u582lld 2414                                       u593lld 207C  
                              _read_I2C_data 1800                             __end_of___xxtofl 2A95  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 3FDE  
                               vfprintf@cfmt 0153                                       ___flge 3686  
                                     ___fleq 32AB                        ??_printotAFERegisters 016C  
                                     ___lmul 30DF                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01B8  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 3F2C                                    ??___fldiv 0048  
                                  ??___awdiv 0075                                    ??___flneg 0075  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0075  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 00A4                                    ??___lodiv 0071  
                           __end_of_init_I2C 3E9E                                    ??___lomod 0071  
                           __end_of_init_AFE 348D                                       _efgtoa 0063  
                           __end_of_init_RGB 3E0E                    __end_of_ATmega328_address 3802  
                                     _floorf 2E4D                             ___awdiv@quotient 0078  
                      _beginAFEcommunication 1810                              ___awmod@divisor 0071  
                            ___awmod@counter 0076                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strcpy 3001                                       _strlen 3EB5  
                                  ??_initWDT 0071                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 3E1A  
                         __size_of__Umul8_16 001F                              ___fpclassifyf@e 0020  
                            ___fpclassifyf@u 0022                              ___fpclassifyf@x 0071  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2140 00B1                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002E                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 31E7  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 3088                                    ??_tolower 0020  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                              ??___fpclassifyf 0075  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                                   ___fleq@ff1 0071  
                                 ___fleq@ff2 0075                      __end_of__initialization 005F  
                             ?_read_I2C_data 0071                                   ___flneg@f1 0071  
                                 ___fltol@f1 00A0                     ?_setTemperatureLimitsint 0020  
                              ?_send_I2C_ACK 0070     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK4 3E1A                                __end_of_fputc 2054  
                              __end_of_fputs 30AE                                __end_of_myIsr 001E  
                               _cellVoltages 0220                                __end_of_putch 0004  
                                 _batCurrent 0232                           _RGB_AWAIT_AFE_CONN 3FDE  
                                 _batVoltage 01A8                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                       __end_of_EUSART_Write 3E39                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 016F                               ??_send_I2C_ACK 0071  
                          __end_of__Umul8_16 3FBD                                   __pmaintext 3111  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                                    ?___fleq 0071                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                                    ?_efgtoa 00A9                       ?_beginAFEcommunication 0020  
                                    ?_floorf 005A                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strcpy 0071  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 022E  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_980 00AA  
                         __size_of_vfpfcnvrt FA2C           __size_of_watchdog_timeout_shutdown 0018  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 2D78        __size_of_setCellOvervoltageProtection 00D4  
               _setCellOvervoltageProtection 2CA4                             ??_updateVoltages 00A9  
      __end_of_setCellUndervoltageProtection 3000       __size_of_setCellUndervoltageProtection 00DB  
              _setCellUndervoltageProtection 2F25                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 006D  
                       __end_of_readRegister 31AE                                      ___aldiv 377E  
                                    _adcGain 01CF                              __size_of___flge 007C  
                            __size_of___fleq 0049                                      ___aodiv 23EC  
                                    ___fladd 1E1E                                      ___aomod 2054  
                                    ___fldiv 1CA4                                      ___awdiv 3394  
                                    ___flneg 3E5D                              __size_of___lmul 0032  
                                    ___awmod 3266                                      ___flmul 13A8  
                                    ___flsub 3143                                      ___fltol 353B  
                            __size_of___wmul 001B                                      ___lodiv 3702  
                                    ___lomod 2801                                    ?_vfprintf 014E  
                            __size_of_efgtoa 066F                                    ?_snprintf 01D1  
                              _messageBuffer 2771              ??_AFE_getSetShortCircuitCurrent 00AD  
                            __size_of_floorf 00D8                                      __ptext1 3EFA  
                                    __ptext2 1001                                      __ptext3 18C4  
                                    __ptext4 11B7                                      __ptext5 32F4  
                                    __ptext6 3064                                      __ptext7 35A1  
                                    __ptext8 31AE                                      __ptext9 15D4  
                          __end_of_init_GPIO 3222                            __end_of_initClock 3E09  
                          __end_of_init_TMR1 100F                              __size_of_strcpy 001F  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 3E0E                                 __size_of_abs 0017  
         __size_of_AFE_getSetCurrentSenseRes 000A                                 __size_of_pad 0051  
                                    _isalpha 3F63                                      _isdigit 3E9E  
                                 ??___xxtofl 0075                             ___awmod@dividend 0073  
                 ?_AFE_getSetCurrentSenseRes 0071                             ___aldiv@dividend 0028  
                                    _islower 07E9                                      _isspace 3F47  
  __end_of_setOverCurrentDischargeProtection 2800   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 26EB                                      _isupper 3EE3  
                                    efgtoa@c 00AF                                      efgtoa@d 00CC  
                                    efgtoa@e 00E4                                      efgtoa@f 00AB  
                                    efgtoa@g 00E0                                      efgtoa@h 00D6  
                                    efgtoa@i 00DE                                      efgtoa@l 00DA  
                                    efgtoa@m 00C8                                      efgtoa@n 00E6  
                                    efgtoa@p 00D0                                      efgtoa@t 00C4  
                                    efgtoa@u 00E8                                      efgtoa@w 00D3  
                                    atoi@neg 0024                                      _tolower 3020  
                                    clrloop0 0801            __end_of_watchdog_timeout_shutdown 3F12  
                                    _strncmp 33E5                                      _toupper 3042  
                       end_of_initialization 005F                                      floorf@e 0068  
                                    floorf@m 0064                                      floorf@u 006A  
                                    floorf@x 005A                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2B36  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                                 efgtoa@mode 00D5                                   efgtoa@sign 00CE  
                              _send_I2C_NACK 3E42                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 5000A1  
                                    psplit$1 A100A2                                      psplit$2 A200A3  
                                    psplit$3 A300A4                                      psplit$4 A400A5  
                                    psplit$5 A500A6                                      psplit$6 A600A7  
                                    psplit$7 A700A8                                _send_I2C_data 3E4B  
                                  _RGB_color 3FBD                                   ??_vfprintf 006E  
                         EUSART_Initialize@x 007A                                   ??_snprintf 0168  
                                    strcpy@d 0077                                      strlen@a 0073  
                                    strcpy@s 0075                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                         __end_of_send_I2C_ACK 3E5D  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 3E84                            __end_of_vsnprintf 360E  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 004F                __end_of_SCD_threshold_setting 3B2C  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 3F80  
                                ___flmul@grs 0034                    __end_of_EUSART_Initialize 2BDF  
                      __end_of_updateCurrent 3E7A                        _OCD_threshold_setting 39F8  
                __end_of_printotAFERegisters 13A8                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                              ?_shutdown_BMS 0070   __end_of_AFE_getOverCurrentDischargeCurrent 34E4  
__size_of_AFE_getOverCurrentDischargeCurrent 0057         ??_AFE_getOverCurrentDischargeCurrent 00AD  
        ?_AFE_getOverCurrentDischargeCurrent 00A9           _AFE_getOverCurrentDischargeCurrent 348D  
                                 ?_RGB_color 0071                               __end_of___flge 3702  
                             __end_of___fleq 32F4                               __end_of___lmul 3111  
                                vfpfcnvrt@ap 00EF                                  vfpfcnvrt@cp 012C  
                                vfpfcnvrt@ct 0135                                  vfpfcnvrt@fp 00EC  
                                vfpfcnvrt@ll 013C                               __end_of___wmul 3F47  
                                vfpfcnvrt@vp 0144                               __end_of_efgtoa 06D2  
                               _EUSART_Write 3E31                               __end_of_floorf 2F25  
                I2C_writeRegister@regAddress 0077                                   floorf@F524 022A  
              setShuntResistorValue@res_mOhm 0071             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strcpy 3020                               __end_of_strlen 3ECC  
      __end_of_AFE_getSetShortCircuitCurrent 353B       __size_of_AFE_getSetShortCircuitCurrent 0057  
              _AFE_getSetShortCircuitCurrent 34E4                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                              ?_statemachine 0070                                  __end_of_abs 3EE3  
                                __end_of_pad 3394                            _minCellTempCharge 01C2  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01BC  
                       updateVoltages@adcVal 00B5                         _minCellTempDischarge 01C0  
                  __end_of_I2C_writeRegister 3F9E       _setOverCurrentDischargeProtection$2139 00A4  
                          pnum$text9_split_1 00A1                            pnum$text9_split_2 00A2  
                          pnum$text9_split_3 00A3                            pnum$text9_split_4 00A4  
                          pnum$text9_split_5 00A5                            pnum$text9_split_6 00A6  
                          pnum$text9_split_7 00A7                            pnum$text9_split_8 00A8  
                      __end_of___fpclassifyf 3686          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 3F12  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0150  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___lmul 0079                               ??_shutdown_BMS 0071  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                     ??_efgtoa 00B0  
                                  __Umul8_16 3F9E                  ??_setShortCircuitProtection 006C  
                                __pdataBANK4 0236                                     ??_floorf 005E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                                     ??_strcpy 0073  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 0160  
                               vsnprintf@fmt 0159                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                                  _adcOffset 01C4                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 016D                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01C9  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01D1  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 01D5                            __size_of___xxtofl 0096  
                               _readRegister 3178     setTemperatureLimitsint@maxDischarge_degC 0022  
                  __end_of_EUSART_Write_Text 3F2C                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1770 0026  
                                  _atoi$1771 002A                                    _atoi$1772 0028  
                           _OV_delay_setting 3B2C                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                                _efgtoa$1254 00B8                                  _efgtoa$1263 00BE  
                                _efgtoa$1255 00BA                                  _efgtoa$1264 00C0  
                                _efgtoa$1265 00C2                                  _efgtoa$1259 00BC  
                          _send_I2C_startBit 3E21                                    _dtoa$1231 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 3E8E  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___awdiv 0071                             ___aodiv@quotient 0074  
                                   ?___flneg 0071                                     ?___awmod 0071  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A0                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                      __size_of_send_I2C_ACK 0009                            __size_of_vfprintf 0039  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0024  
             BQ76920@shuntResistorValue_mOhm 01A4                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                ??_AFE_getSetCurrentSenseRes 0075                                    _init_GPIO 31E7  
                                   ?_isupper 0071                                    _initClock 3E06  
                                  _init_TMR1 1004                                    _currState 01CB  
                                   ?_tolower 0077                    _setShortCircuitProtection 06D2  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071               ?_AFE_getSetShortCircuitCurrent 00A9  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 1810  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                            BQ76920@protect1 01C8                              BQ76920@protect2 01C7  
                            BQ76920@protect3 01C6                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 3E29  
                                  clear_ram0 0800                                    _tmr1_flag 01CA  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                                 _send_I2C_ACK 3E54  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 3E42  
                        _printcellParameters 32F4                                    _vfpfcnvrt 15D4  
                                  _xtoa$1301 0043                                    _xtoa$1302 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 3222  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                                 _isspace$1810 0075  
                      send_I2C_data@databyte 0071                                   vfpfcnvrt@c 0145  
                                 vfpfcnvrt@f 0138                            ___lmul@multiplier 0071  
                       ?_printcellParameters 0070                         __end_of_shutdown_BMS 1004  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 35A1                                   _AFE_UPDATE 3E14  
                          _OCD_delay_setting 3B0C                    _AFE_getSetCurrentSenseRes 3E7A  
                       __end_of_statemachine 19F8                                   vfprintf@ap 0152  
                                 vfprintf@fp 014E                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 01A8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___awdiv 0051                             __size_of___flneg 0009  
             _setShortCircuitProtection$2138 00A4                             __size_of___awmod 0045  
                                vsnprintf@ap 015B                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 00EC  
                                 snprintf@ap 016B                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                           ___fpclassifyf@F463 01A0  
                                   ___xxtofl 29FF  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_initWDT 0006                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                             _send_I2C_stopBit 3E29  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 1B4B                                     __ptext11 3042  
                                   __ptext20 0063                                     __ptext12 07E9  
                                   __ptext21 3020                                     __ptext13 3F63  
                                   __ptext30 3394                                     __ptext22 3EE3  
                                   __ptext14 2130                                     __ptext31 19F8  
                                   __ptext23 3001                                     __ptext15 2801  
                                   __ptext40 0003                                     __ptext32 3ECC  
                                   __ptext24 2E4D                                     __ptext16 3702  
                                   __ptext41 2A95                                     __ptext33 2054  
                                   __ptext25 360E                                     __ptext17 33E5  
                                   __ptext50 06D2                                     __ptext42 3F47  
                                   __ptext34 23EC                                     __ptext26 3143  
                                   __ptext18 2BDF                                     __ptext51 26EB  
                                   __ptext43 3E9E                                     __ptext35 30AE  
                                   __ptext27 3E5D                                     __ptext19 22FB  
                                   __ptext60 3E7A                                     __ptext52 3686  
                                   __ptext44 3F12                                     __ptext36 3343  
                                   __ptext28 32AB                                     __ptext61 348D  
                                   __ptext53 2F25                                     __ptext45 3E31  
                                   __ptext37 3EB5                                     __ptext29 3266  
                                   __ptext70 1CA4                                     __ptext62 3E14  
                                   __ptext54 2CA4                                     __ptext46 3437  
                                   __ptext38 3088                                     __ptext71 1E1E  
                                   __ptext63 100F                                     __ptext55 1810  
                                   __ptext47 3222                                     __ptext39 2000  
                                   __ptext80 1004                                     __ptext72 3E70  
                                   __ptext64 3E54                                     __ptext56 3F80  
                                   __ptext48 3F2C                                     __ptext81 3E09  
                                   __ptext73 3178                                     __ptext65 29FF  
                                   __ptext57 3FDE                                     __ptext49 3E84  
                                   __ptext82 3E8E                                     __ptext74 3E29  
                                   __ptext66 30DF                                     __ptext58 3FBD  
                                   __ptext83 31E7                                     __ptext75 3E21  
                                   __ptext67 353B                                     __ptext59 34E4  
                                   __ptext84 3E0E                                     __ptext76 3E4B  
                                   __ptext68 13A8                                     __ptext85 3E06  
                                   __ptext77 3E66                                     __ptext69 3F9E  
                                   __ptext86 3E39                                     __ptext78 3E42  
                                   __ptext87 2B36                                     __ptext79 1800  
                                   __ptext88 377E                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                           __size_of_tolower 0022                    __end_of_OCD_delay_setting 3B1C  
                                 strcpy@dest 0078                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 0155  
                                   _init_I2C 3E8E                                     _init_AFE 3437  
                                   _init_RGB 3E09                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text9 0050                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 3B1C                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 3E39  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                   efgtoa@fp 00A9                                     efgtoa@ne 00CA  
                                   efgtoa@pp 00C6                                     efgtoa@ou 00B4  
                                  stoa@F1174 0236                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 18C4                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01CE  
                                   _protect2 01CD                 __size_of_printotAFERegisters 01F1  
                                   _protect3 01CC                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 31AE                                     _snprintf 3064  
                           ___aomod@dividend 0028                       __size_of_updateCurrent 000A  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B34  
                             _vfpfcnvrt$1316 012F                               _vfpfcnvrt$1317 0131  
                             _vfpfcnvrt$1343 0133                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 38A4  
                             __pstringtext11 38D2                               __pstringtext20 3A44  
                             __pstringtext12 38FF                               __pstringtext21 3A59  
                             __pstringtext13 392B                               __pstringtext30 3B44  
                             __pstringtext22 3A6E                               __pstringtext14 3956  
                             __pstringtext31 3B48                               __pstringtext23 3A83  
                             __pstringtext15 3980                               __pstringtext40 3B6C  
                             __pstringtext32 3B4C                               __pstringtext24 3A98  
                             __pstringtext16 39AA                               __pstringtext41 3B70  
                             __pstringtext33 3B50                               __pstringtext25 3AAD  
                             __pstringtext17 39D2                               __pstringtext50 3B8B  
                             __pstringtext42 3B73                               __pstringtext34 3B54  
                             __pstringtext26 3AC1                               __pstringtext18 3A18  
                             __pstringtext51 3B8E                               __pstringtext43 3B76  
                             __pstringtext35 3B58                               __pstringtext27 3AD5  
                             __pstringtext19 3A2E                               __pstringtext52 3B91  
                             __pstringtext44 3B79                               __pstringtext36 3B5C  
                             __pstringtext28 3AE8                               __pstringtext53 3B94  
                             __pstringtext45 3B7C                               __pstringtext37 3B60  
                             __pstringtext29 3AFA                               __pstringtext54 3B97  
                             __pstringtext46 3B7F                               __pstringtext38 3B64  
                             __pstringtext55 3B9A                               __pstringtext47 3B82  
                             __pstringtext39 3B68                               __pstringtext56 0000  
                             __pstringtext48 3B85                               __pstringtext49 3B88  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 0162                                   vsnprintf@n 0157  
                                 vsnprintf@s 0155                             _UV_delay_setting 3B34  
                                  snprintf@n 01D3                                    snprintf@s 01D1  
               __end_of_send_I2C_controlByte 3E70                                     intlevel1 0000  
                               _temperatures 01B6          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                            __CFG_CLKOUTEN$OFF 0000  
                                  strcpy@src 0071                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                efgtoa@nmode 00D2                            _maxCellTempCharge 01BE  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 0120  
                                   stoa@nuls 0023                              ___aomod@counter 0072  
                              __pstringtext1 39F8                                __pstringtext2 3B0C  
                              __pstringtext3 3B1C                                __pstringtext4 3B2C  
                              __pstringtext5 3B34                                __pstringtext6 3B3C  
                              __pstringtext7 3800                                __pstringtext8 383B  
                              __pstringtext9 3870                       __Umul8_16@multiplicand 0071  
                                   tolower@c 0077                       __size_of___fpclassifyf 0078  
                             _vsnprintf$1945 015E                        __size_of_shutdown_BMS 0003  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 3266  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 015C  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0134                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 3E70                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 4000                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 3E4B  
                          __Umul8_16@product 0075  
