

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 13 16:48:36 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	cinit,global,class=CODE,merge=1,delta=2
    52                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    53                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    56                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    57                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    58                           	psect	clrtext,global,class=CODE,delta=2
    59                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    60                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    61                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    63                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    64                           	psect	text1,local,class=CODE,merge=1,delta=2
    65                           	psect	text2,local,class=CODE,merge=1,delta=2
    66                           	psect	text3,local,class=CODE,merge=1,delta=2
    67                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text6,local,class=CODE,merge=1,delta=2
    70                           	psect	text7,local,class=CODE,merge=1,delta=2
    71                           	psect	text8,local,class=CODE,merge=1,delta=2
    72                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text13,local,class=CODE,merge=1,delta=2
    77                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text17,local,class=CODE,merge=1,delta=2
    81                           	psect	text18,local,class=CODE,merge=1,delta=2
    82                           	psect	text19,local,class=CODE,merge=1,delta=2
    83                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text23,local,class=CODE,merge=1,delta=2
    87                           	psect	text24,local,class=CODE,merge=1,delta=2
    88                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text32,local,class=CODE,merge=1,delta=2
    96                           	psect	text33,local,class=CODE,merge=1,delta=2
    97                           	psect	text34,local,class=CODE,merge=1,delta=2
    98                           	psect	text35,local,class=CODE,merge=1,delta=2
    99                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text37,local,class=CODE,merge=1,delta=2
   101                           	psect	text38,local,class=CODE,merge=1,delta=2
   102                           	psect	text39,local,class=CODE,merge=1,delta=2
   103                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text41,local,class=CODE,merge=1,delta=2
   105                           	psect	text42,local,class=CODE,merge=1,delta=2
   106                           	psect	text43,local,class=CODE,merge=1,delta=2
   107                           	psect	text44,local,class=CODE,merge=1,delta=2
   108                           	psect	text45,local,class=CODE,merge=1,delta=2
   109                           	psect	text46,local,class=CODE,merge=1,delta=2
   110                           	psect	text47,local,class=CODE,merge=1,delta=2
   111                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text49,local,class=CODE,merge=1,delta=2
   113                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text51,local,class=CODE,merge=1,delta=2
   115                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text53,local,class=CODE,merge=1,delta=2
   117                           	psect	text54,local,class=CODE,merge=1,delta=2
   118                           	psect	text55,local,class=CODE,merge=1,delta=2
   119                           	psect	text56,local,class=CODE,merge=1,delta=2
   120                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text59,local,class=CODE,merge=1,delta=2
   123                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text65,local,class=CODE,merge=1,delta=2
   129                           	psect	text66,local,class=CODE,merge=1,delta=2
   130                           	psect	text67,local,class=CODE,merge=1,delta=2
   131                           	psect	text68,local,class=CODE,merge=1,delta=2
   132                           	psect	text69,local,class=CODE,merge=1,delta=2
   133                           	psect	text70,local,class=CODE,merge=1,delta=2
   134                           	psect	text71,local,class=CODE,merge=1,delta=2
   135                           	psect	text72,local,class=CODE,merge=1,delta=2
   136                           	psect	text73,local,class=CODE,merge=1,delta=2
   137                           	psect	text74,local,class=CODE,merge=1,delta=2
   138                           	psect	text75,local,class=CODE,merge=1,delta=2
   139                           	psect	text76,local,class=CODE,merge=1,delta=2
   140                           	psect	text77,local,class=CODE,merge=1,delta=2
   141                           	psect	text78,local,class=CODE,merge=1,delta=2
   142                           	psect	text79,local,class=CODE,merge=1,delta=2
   143                           	psect	text80,local,class=CODE,merge=1,delta=2
   144                           	psect	text81,local,class=CODE,merge=1,delta=2
   145                           	psect	text82,local,class=CODE,merge=1,delta=2
   146                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
   147                           	psect	intentry,global,class=CODE,delta=2
   148                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   149                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   150                           	dabs	1,0xCA0,32
   151                           	dabs	1,0xC20,80
   152                           	dabs	1,0xBE1,15
   153                           	dabs	1,0x2771,0,_messageBuffer
   154                           	dabs	1,0x7E,2
   155  0000                     
   156                           ; Version 2.05
   157                           ; Generated 20/12/2018 GMT
   158                           ; 
   159                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   160                           ; All rights reserved.
   161                           ; 
   162                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   163                           ; 
   164                           ; Redistribution and use in source and binary forms, with or without modification, are
   165                           ; permitted provided that the following conditions are met:
   166                           ; 
   167                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   168                           ;        conditions and the following disclaimer.
   169                           ; 
   170                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   171                           ;        of conditions and the following disclaimer in the documentation and/or other
   172                           ;        materials provided with the distribution.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC16F1719 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0110                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011B                     	;# 
   256  011C                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  018E                     	;# 
   260  018F                     	;# 
   261  0190                     	;# 
   262  0191                     	;# 
   263  0191                     	;# 
   264  0192                     	;# 
   265  0193                     	;# 
   266  0193                     	;# 
   267  0194                     	;# 
   268  0195                     	;# 
   269  0196                     	;# 
   270  0197                     	;# 
   271  0199                     	;# 
   272  0199                     	;# 
   273  0199                     	;# 
   274  019A                     	;# 
   275  019A                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019C                     	;# 
   285  019D                     	;# 
   286  019D                     	;# 
   287  019D                     	;# 
   288  019E                     	;# 
   289  019E                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020D                     	;# 
   298  020E                     	;# 
   299  020F                     	;# 
   300  0210                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  028C                     	;# 
   318  028D                     	;# 
   319  028E                     	;# 
   320  028F                     	;# 
   321  0290                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0293                     	;# 
   327  0298                     	;# 
   328  0298                     	;# 
   329  0299                     	;# 
   330  029A                     	;# 
   331  029A                     	;# 
   332  029E                     	;# 
   333  030C                     	;# 
   334  030D                     	;# 
   335  030E                     	;# 
   336  030F                     	;# 
   337  0310                     	;# 
   338  038C                     	;# 
   339  038D                     	;# 
   340  038E                     	;# 
   341  038F                     	;# 
   342  0390                     	;# 
   343  0391                     	;# 
   344  0392                     	;# 
   345  0393                     	;# 
   346  0394                     	;# 
   347  0395                     	;# 
   348  0396                     	;# 
   349  0397                     	;# 
   350  0398                     	;# 
   351  0399                     	;# 
   352  039D                     	;# 
   353  039E                     	;# 
   354  039F                     	;# 
   355  0415                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  041C                     	;# 
   359  041D                     	;# 
   360  041E                     	;# 
   361  0498                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  049E                     	;# 
   370  049F                     	;# 
   371  0511                     	;# 
   372  0515                     	;# 
   373  0617                     	;# 
   374  0618                     	;# 
   375  0619                     	;# 
   376  0619                     	;# 
   377  061A                     	;# 
   378  061B                     	;# 
   379  061C                     	;# 
   380  061C                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  0695                     	;# 
   386  0696                     	;# 
   387  0697                     	;# 
   388  0698                     	;# 
   389  0699                     	;# 
   390  069A                     	;# 
   391  069B                     	;# 
   392  069C                     	;# 
   393  069D                     	;# 
   394  069E                     	;# 
   395  069F                     	;# 
   396  0E0F                     	;# 
   397  0E10                     	;# 
   398  0E11                     	;# 
   399  0E12                     	;# 
   400  0E13                     	;# 
   401  0E14                     	;# 
   402  0E15                     	;# 
   403  0E17                     	;# 
   404  0E20                     	;# 
   405  0E21                     	;# 
   406  0E22                     	;# 
   407  0E24                     	;# 
   408  0E25                     	;# 
   409  0E28                     	;# 
   410  0E29                     	;# 
   411  0E2A                     	;# 
   412  0E2B                     	;# 
   413  0E90                     	;# 
   414  0E91                     	;# 
   415  0E92                     	;# 
   416  0E93                     	;# 
   417  0E94                     	;# 
   418  0E95                     	;# 
   419  0E96                     	;# 
   420  0E97                     	;# 
   421  0E98                     	;# 
   422  0E99                     	;# 
   423  0E9A                     	;# 
   424  0E9B                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0EA8                     	;# 
   438  0EA9                     	;# 
   439  0EAA                     	;# 
   440  0EAB                     	;# 
   441  0EAC                     	;# 
   442  0EAD                     	;# 
   443  0EAE                     	;# 
   444  0EAF                     	;# 
   445  0EB0                     	;# 
   446  0EB1                     	;# 
   447  0EB2                     	;# 
   448  0F0F                     	;# 
   449  0F10                     	;# 
   450  0F11                     	;# 
   451  0F12                     	;# 
   452  0F13                     	;# 
   453  0F14                     	;# 
   454  0F15                     	;# 
   455  0F16                     	;# 
   456  0F17                     	;# 
   457  0F18                     	;# 
   458  0F19                     	;# 
   459  0F1A                     	;# 
   460  0F1B                     	;# 
   461  0F1C                     	;# 
   462  0F1D                     	;# 
   463  0F1E                     	;# 
   464  0F1F                     	;# 
   465  0F20                     	;# 
   466  0F21                     	;# 
   467  0F22                     	;# 
   468  0F23                     	;# 
   469  0F24                     	;# 
   470  0F25                     	;# 
   471  0F26                     	;# 
   472  0F27                     	;# 
   473  0F28                     	;# 
   474  0F29                     	;# 
   475  0F2A                     	;# 
   476  0F2B                     	;# 
   477  0F2C                     	;# 
   478  0F2D                     	;# 
   479  0F2E                     	;# 
   480  0F2F                     	;# 
   481  0F30                     	;# 
   482  0F31                     	;# 
   483  0F32                     	;# 
   484  0F33                     	;# 
   485  0F34                     	;# 
   486  0F35                     	;# 
   487  0F36                     	;# 
   488  0F37                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  000F                     	;# 
   516  0010                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0013                     	;# 
   520  0015                     	;# 
   521  0016                     	;# 
   522  0016                     	;# 
   523  0017                     	;# 
   524  0018                     	;# 
   525  0019                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0097                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  009F                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0110                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011A                     	;# 
   564  011B                     	;# 
   565  011B                     	;# 
   566  011C                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  018E                     	;# 
   570  018F                     	;# 
   571  0190                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0197                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  020C                     	;# 
   607  020D                     	;# 
   608  020E                     	;# 
   609  020F                     	;# 
   610  0210                     	;# 
   611  0211                     	;# 
   612  0211                     	;# 
   613  0212                     	;# 
   614  0212                     	;# 
   615  0213                     	;# 
   616  0213                     	;# 
   617  0214                     	;# 
   618  0214                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  028C                     	;# 
   628  028D                     	;# 
   629  028E                     	;# 
   630  028F                     	;# 
   631  0290                     	;# 
   632  0291                     	;# 
   633  0291                     	;# 
   634  0292                     	;# 
   635  0293                     	;# 
   636  0293                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  029A                     	;# 
   642  029E                     	;# 
   643  030C                     	;# 
   644  030D                     	;# 
   645  030E                     	;# 
   646  030F                     	;# 
   647  0310                     	;# 
   648  038C                     	;# 
   649  038D                     	;# 
   650  038E                     	;# 
   651  038F                     	;# 
   652  0390                     	;# 
   653  0391                     	;# 
   654  0392                     	;# 
   655  0393                     	;# 
   656  0394                     	;# 
   657  0395                     	;# 
   658  0396                     	;# 
   659  0397                     	;# 
   660  0398                     	;# 
   661  0399                     	;# 
   662  039D                     	;# 
   663  039E                     	;# 
   664  039F                     	;# 
   665  0415                     	;# 
   666  0416                     	;# 
   667  0417                     	;# 
   668  041C                     	;# 
   669  041D                     	;# 
   670  041E                     	;# 
   671  0498                     	;# 
   672  0498                     	;# 
   673  0499                     	;# 
   674  049A                     	;# 
   675  049B                     	;# 
   676  049B                     	;# 
   677  049C                     	;# 
   678  049D                     	;# 
   679  049E                     	;# 
   680  049F                     	;# 
   681  0511                     	;# 
   682  0515                     	;# 
   683  0617                     	;# 
   684  0618                     	;# 
   685  0619                     	;# 
   686  0619                     	;# 
   687  061A                     	;# 
   688  061B                     	;# 
   689  061C                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0696                     	;# 
   697  0697                     	;# 
   698  0698                     	;# 
   699  0699                     	;# 
   700  069A                     	;# 
   701  069B                     	;# 
   702  069C                     	;# 
   703  069D                     	;# 
   704  069E                     	;# 
   705  069F                     	;# 
   706  0E0F                     	;# 
   707  0E10                     	;# 
   708  0E11                     	;# 
   709  0E12                     	;# 
   710  0E13                     	;# 
   711  0E14                     	;# 
   712  0E15                     	;# 
   713  0E17                     	;# 
   714  0E20                     	;# 
   715  0E21                     	;# 
   716  0E22                     	;# 
   717  0E24                     	;# 
   718  0E25                     	;# 
   719  0E28                     	;# 
   720  0E29                     	;# 
   721  0E2A                     	;# 
   722  0E2B                     	;# 
   723  0E90                     	;# 
   724  0E91                     	;# 
   725  0E92                     	;# 
   726  0E93                     	;# 
   727  0E94                     	;# 
   728  0E95                     	;# 
   729  0E96                     	;# 
   730  0E97                     	;# 
   731  0E98                     	;# 
   732  0E99                     	;# 
   733  0E9A                     	;# 
   734  0E9B                     	;# 
   735  0E9C                     	;# 
   736  0E9D                     	;# 
   737  0E9E                     	;# 
   738  0E9F                     	;# 
   739  0EA0                     	;# 
   740  0EA1                     	;# 
   741  0EA2                     	;# 
   742  0EA3                     	;# 
   743  0EA4                     	;# 
   744  0EA5                     	;# 
   745  0EA6                     	;# 
   746  0EA7                     	;# 
   747  0EA8                     	;# 
   748  0EA9                     	;# 
   749  0EAA                     	;# 
   750  0EAB                     	;# 
   751  0EAC                     	;# 
   752  0EAD                     	;# 
   753  0EAE                     	;# 
   754  0EAF                     	;# 
   755  0EB0                     	;# 
   756  0EB1                     	;# 
   757  0EB2                     	;# 
   758  0F0F                     	;# 
   759  0F10                     	;# 
   760  0F11                     	;# 
   761  0F12                     	;# 
   762  0F13                     	;# 
   763  0F14                     	;# 
   764  0F15                     	;# 
   765  0F16                     	;# 
   766  0F17                     	;# 
   767  0F18                     	;# 
   768  0F19                     	;# 
   769  0F1A                     	;# 
   770  0F1B                     	;# 
   771  0F1C                     	;# 
   772  0F1D                     	;# 
   773  0F1E                     	;# 
   774  0F1F                     	;# 
   775  0F20                     	;# 
   776  0F21                     	;# 
   777  0F22                     	;# 
   778  0F23                     	;# 
   779  0F24                     	;# 
   780  0F25                     	;# 
   781  0F26                     	;# 
   782  0F27                     	;# 
   783  0F28                     	;# 
   784  0F29                     	;# 
   785  0F2A                     	;# 
   786  0F2B                     	;# 
   787  0F2C                     	;# 
   788  0F2D                     	;# 
   789  0F2E                     	;# 
   790  0F2F                     	;# 
   791  0F30                     	;# 
   792  0F31                     	;# 
   793  0F32                     	;# 
   794  0F33                     	;# 
   795  0F34                     	;# 
   796  0F35                     	;# 
   797  0F36                     	;# 
   798  0F37                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  000D                     	;# 
   824  000E                     	;# 
   825  000F                     	;# 
   826  0010                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0013                     	;# 
   830  0015                     	;# 
   831  0016                     	;# 
   832  0016                     	;# 
   833  0017                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  001A                     	;# 
   837  001B                     	;# 
   838  001C                     	;# 
   839  008C                     	;# 
   840  008D                     	;# 
   841  008E                     	;# 
   842  008F                     	;# 
   843  0090                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0093                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0098                     	;# 
   851  0099                     	;# 
   852  009A                     	;# 
   853  009B                     	;# 
   854  009B                     	;# 
   855  009C                     	;# 
   856  009D                     	;# 
   857  009E                     	;# 
   858  009F                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  010F                     	;# 
   863  0110                     	;# 
   864  0111                     	;# 
   865  0112                     	;# 
   866  0113                     	;# 
   867  0114                     	;# 
   868  0115                     	;# 
   869  0116                     	;# 
   870  0117                     	;# 
   871  0118                     	;# 
   872  0119                     	;# 
   873  011A                     	;# 
   874  011B                     	;# 
   875  011B                     	;# 
   876  011C                     	;# 
   877  018C                     	;# 
   878  018D                     	;# 
   879  018E                     	;# 
   880  018F                     	;# 
   881  0190                     	;# 
   882  0191                     	;# 
   883  0191                     	;# 
   884  0192                     	;# 
   885  0193                     	;# 
   886  0193                     	;# 
   887  0194                     	;# 
   888  0195                     	;# 
   889  0196                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  019F                     	;# 
   916  020C                     	;# 
   917  020D                     	;# 
   918  020E                     	;# 
   919  020F                     	;# 
   920  0210                     	;# 
   921  0211                     	;# 
   922  0211                     	;# 
   923  0212                     	;# 
   924  0212                     	;# 
   925  0213                     	;# 
   926  0213                     	;# 
   927  0214                     	;# 
   928  0214                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0215                     	;# 
   933  0216                     	;# 
   934  0216                     	;# 
   935  0217                     	;# 
   936  0217                     	;# 
   937  028C                     	;# 
   938  028D                     	;# 
   939  028E                     	;# 
   940  028F                     	;# 
   941  0290                     	;# 
   942  0291                     	;# 
   943  0291                     	;# 
   944  0292                     	;# 
   945  0293                     	;# 
   946  0293                     	;# 
   947  0298                     	;# 
   948  0298                     	;# 
   949  0299                     	;# 
   950  029A                     	;# 
   951  029A                     	;# 
   952  029E                     	;# 
   953  030C                     	;# 
   954  030D                     	;# 
   955  030E                     	;# 
   956  030F                     	;# 
   957  0310                     	;# 
   958  038C                     	;# 
   959  038D                     	;# 
   960  038E                     	;# 
   961  038F                     	;# 
   962  0390                     	;# 
   963  0391                     	;# 
   964  0392                     	;# 
   965  0393                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0397                     	;# 
   970  0398                     	;# 
   971  0399                     	;# 
   972  039D                     	;# 
   973  039E                     	;# 
   974  039F                     	;# 
   975  0415                     	;# 
   976  0416                     	;# 
   977  0417                     	;# 
   978  041C                     	;# 
   979  041D                     	;# 
   980  041E                     	;# 
   981  0498                     	;# 
   982  0498                     	;# 
   983  0499                     	;# 
   984  049A                     	;# 
   985  049B                     	;# 
   986  049B                     	;# 
   987  049C                     	;# 
   988  049D                     	;# 
   989  049E                     	;# 
   990  049F                     	;# 
   991  0511                     	;# 
   992  0515                     	;# 
   993  0617                     	;# 
   994  0618                     	;# 
   995  0619                     	;# 
   996  0619                     	;# 
   997  061A                     	;# 
   998  061B                     	;# 
   999  061C                     	;# 
  1000  061C                     	;# 
  1001  0691                     	;# 
  1002  0692                     	;# 
  1003  0693                     	;# 
  1004  0694                     	;# 
  1005  0695                     	;# 
  1006  0696                     	;# 
  1007  0697                     	;# 
  1008  0698                     	;# 
  1009  0699                     	;# 
  1010  069A                     	;# 
  1011  069B                     	;# 
  1012  069C                     	;# 
  1013  069D                     	;# 
  1014  069E                     	;# 
  1015  069F                     	;# 
  1016  0E0F                     	;# 
  1017  0E10                     	;# 
  1018  0E11                     	;# 
  1019  0E12                     	;# 
  1020  0E13                     	;# 
  1021  0E14                     	;# 
  1022  0E15                     	;# 
  1023  0E17                     	;# 
  1024  0E20                     	;# 
  1025  0E21                     	;# 
  1026  0E22                     	;# 
  1027  0E24                     	;# 
  1028  0E25                     	;# 
  1029  0E28                     	;# 
  1030  0E29                     	;# 
  1031  0E2A                     	;# 
  1032  0E2B                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E98                     	;# 
  1042  0E99                     	;# 
  1043  0E9A                     	;# 
  1044  0E9B                     	;# 
  1045  0E9C                     	;# 
  1046  0E9D                     	;# 
  1047  0E9E                     	;# 
  1048  0E9F                     	;# 
  1049  0EA0                     	;# 
  1050  0EA1                     	;# 
  1051  0EA2                     	;# 
  1052  0EA3                     	;# 
  1053  0EA4                     	;# 
  1054  0EA5                     	;# 
  1055  0EA6                     	;# 
  1056  0EA7                     	;# 
  1057  0EA8                     	;# 
  1058  0EA9                     	;# 
  1059  0EAA                     	;# 
  1060  0EAB                     	;# 
  1061  0EAC                     	;# 
  1062  0EAD                     	;# 
  1063  0EAE                     	;# 
  1064  0EAF                     	;# 
  1065  0EB0                     	;# 
  1066  0EB1                     	;# 
  1067  0EB2                     	;# 
  1068  0F0F                     	;# 
  1069  0F10                     	;# 
  1070  0F11                     	;# 
  1071  0F12                     	;# 
  1072  0F13                     	;# 
  1073  0F14                     	;# 
  1074  0F15                     	;# 
  1075  0F16                     	;# 
  1076  0F17                     	;# 
  1077  0F18                     	;# 
  1078  0F19                     	;# 
  1079  0F1A                     	;# 
  1080  0F1B                     	;# 
  1081  0F1C                     	;# 
  1082  0F1D                     	;# 
  1083  0F1E                     	;# 
  1084  0F1F                     	;# 
  1085  0F20                     	;# 
  1086  0F21                     	;# 
  1087  0F22                     	;# 
  1088  0F23                     	;# 
  1089  0F24                     	;# 
  1090  0F25                     	;# 
  1091  0F26                     	;# 
  1092  0F27                     	;# 
  1093  0F28                     	;# 
  1094  0F29                     	;# 
  1095  0F2A                     	;# 
  1096  0F2B                     	;# 
  1097  0F2C                     	;# 
  1098  0F2D                     	;# 
  1099  0F2E                     	;# 
  1100  0F2F                     	;# 
  1101  0F30                     	;# 
  1102  0F31                     	;# 
  1103  0F32                     	;# 
  1104  0F33                     	;# 
  1105  0F34                     	;# 
  1106  0F35                     	;# 
  1107  0F36                     	;# 
  1108  0F37                     	;# 
  1109  0FE4                     	;# 
  1110  0FE5                     	;# 
  1111  0FE6                     	;# 
  1112  0FE7                     	;# 
  1113  0FE8                     	;# 
  1114  0FE9                     	;# 
  1115  0FEA                     	;# 
  1116  0FEB                     	;# 
  1117  0FED                     	;# 
  1118  0FEE                     	;# 
  1119  0FEF                     	;# 
  1120  0000                     	;# 
  1121  0001                     	;# 
  1122  0002                     	;# 
  1123  0003                     	;# 
  1124  0004                     	;# 
  1125  0005                     	;# 
  1126  0006                     	;# 
  1127  0007                     	;# 
  1128  0008                     	;# 
  1129  0009                     	;# 
  1130  000A                     	;# 
  1131  000B                     	;# 
  1132  000C                     	;# 
  1133  000D                     	;# 
  1134  000E                     	;# 
  1135  000F                     	;# 
  1136  0010                     	;# 
  1137  0011                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0015                     	;# 
  1141  0016                     	;# 
  1142  0016                     	;# 
  1143  0017                     	;# 
  1144  0018                     	;# 
  1145  0019                     	;# 
  1146  001A                     	;# 
  1147  001B                     	;# 
  1148  001C                     	;# 
  1149  008C                     	;# 
  1150  008D                     	;# 
  1151  008E                     	;# 
  1152  008F                     	;# 
  1153  0090                     	;# 
  1154  0091                     	;# 
  1155  0092                     	;# 
  1156  0093                     	;# 
  1157  0095                     	;# 
  1158  0096                     	;# 
  1159  0097                     	;# 
  1160  0098                     	;# 
  1161  0099                     	;# 
  1162  009A                     	;# 
  1163  009B                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  009F                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0110                     	;# 
  1174  0111                     	;# 
  1175  0112                     	;# 
  1176  0113                     	;# 
  1177  0114                     	;# 
  1178  0115                     	;# 
  1179  0116                     	;# 
  1180  0117                     	;# 
  1181  0118                     	;# 
  1182  0119                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011C                     	;# 
  1187  018C                     	;# 
  1188  018D                     	;# 
  1189  018E                     	;# 
  1190  018F                     	;# 
  1191  0190                     	;# 
  1192  0191                     	;# 
  1193  0191                     	;# 
  1194  0192                     	;# 
  1195  0193                     	;# 
  1196  0193                     	;# 
  1197  0194                     	;# 
  1198  0195                     	;# 
  1199  0196                     	;# 
  1200  0197                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  020F                     	;# 
  1230  0210                     	;# 
  1231  0211                     	;# 
  1232  0211                     	;# 
  1233  0212                     	;# 
  1234  0212                     	;# 
  1235  0213                     	;# 
  1236  0213                     	;# 
  1237  0214                     	;# 
  1238  0214                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0216                     	;# 
  1244  0216                     	;# 
  1245  0217                     	;# 
  1246  0217                     	;# 
  1247  028C                     	;# 
  1248  028D                     	;# 
  1249  028E                     	;# 
  1250  028F                     	;# 
  1251  0290                     	;# 
  1252  0291                     	;# 
  1253  0291                     	;# 
  1254  0292                     	;# 
  1255  0293                     	;# 
  1256  0293                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  029A                     	;# 
  1261  029A                     	;# 
  1262  029E                     	;# 
  1263  030C                     	;# 
  1264  030D                     	;# 
  1265  030E                     	;# 
  1266  030F                     	;# 
  1267  0310                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  038F                     	;# 
  1272  0390                     	;# 
  1273  0391                     	;# 
  1274  0392                     	;# 
  1275  0393                     	;# 
  1276  0394                     	;# 
  1277  0395                     	;# 
  1278  0396                     	;# 
  1279  0397                     	;# 
  1280  0398                     	;# 
  1281  0399                     	;# 
  1282  039D                     	;# 
  1283  039E                     	;# 
  1284  039F                     	;# 
  1285  0415                     	;# 
  1286  0416                     	;# 
  1287  0417                     	;# 
  1288  041C                     	;# 
  1289  041D                     	;# 
  1290  041E                     	;# 
  1291  0498                     	;# 
  1292  0498                     	;# 
  1293  0499                     	;# 
  1294  049A                     	;# 
  1295  049B                     	;# 
  1296  049B                     	;# 
  1297  049C                     	;# 
  1298  049D                     	;# 
  1299  049E                     	;# 
  1300  049F                     	;# 
  1301  0511                     	;# 
  1302  0515                     	;# 
  1303  0617                     	;# 
  1304  0618                     	;# 
  1305  0619                     	;# 
  1306  0619                     	;# 
  1307  061A                     	;# 
  1308  061B                     	;# 
  1309  061C                     	;# 
  1310  061C                     	;# 
  1311  0691                     	;# 
  1312  0692                     	;# 
  1313  0693                     	;# 
  1314  0694                     	;# 
  1315  0695                     	;# 
  1316  0696                     	;# 
  1317  0697                     	;# 
  1318  0698                     	;# 
  1319  0699                     	;# 
  1320  069A                     	;# 
  1321  069B                     	;# 
  1322  069C                     	;# 
  1323  069D                     	;# 
  1324  069E                     	;# 
  1325  069F                     	;# 
  1326  0E0F                     	;# 
  1327  0E10                     	;# 
  1328  0E11                     	;# 
  1329  0E12                     	;# 
  1330  0E13                     	;# 
  1331  0E14                     	;# 
  1332  0E15                     	;# 
  1333  0E17                     	;# 
  1334  0E20                     	;# 
  1335  0E21                     	;# 
  1336  0E22                     	;# 
  1337  0E24                     	;# 
  1338  0E25                     	;# 
  1339  0E28                     	;# 
  1340  0E29                     	;# 
  1341  0E2A                     	;# 
  1342  0E2B                     	;# 
  1343  0E90                     	;# 
  1344  0E91                     	;# 
  1345  0E92                     	;# 
  1346  0E93                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E96                     	;# 
  1350  0E97                     	;# 
  1351  0E98                     	;# 
  1352  0E99                     	;# 
  1353  0E9A                     	;# 
  1354  0E9B                     	;# 
  1355  0E9C                     	;# 
  1356  0E9D                     	;# 
  1357  0E9E                     	;# 
  1358  0E9F                     	;# 
  1359  0EA0                     	;# 
  1360  0EA1                     	;# 
  1361  0EA2                     	;# 
  1362  0EA3                     	;# 
  1363  0EA4                     	;# 
  1364  0EA5                     	;# 
  1365  0EA6                     	;# 
  1366  0EA7                     	;# 
  1367  0EA8                     	;# 
  1368  0EA9                     	;# 
  1369  0EAA                     	;# 
  1370  0EAB                     	;# 
  1371  0EAC                     	;# 
  1372  0EAD                     	;# 
  1373  0EAE                     	;# 
  1374  0EAF                     	;# 
  1375  0EB0                     	;# 
  1376  0EB1                     	;# 
  1377  0EB2                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  000F                     	;# 
  1446  0010                     	;# 
  1447  0011                     	;# 
  1448  0012                     	;# 
  1449  0013                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  001A                     	;# 
  1457  001B                     	;# 
  1458  001C                     	;# 
  1459  008C                     	;# 
  1460  008D                     	;# 
  1461  008E                     	;# 
  1462  008F                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0097                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  009F                     	;# 
  1479  010C                     	;# 
  1480  010D                     	;# 
  1481  010E                     	;# 
  1482  010F                     	;# 
  1483  0110                     	;# 
  1484  0111                     	;# 
  1485  0112                     	;# 
  1486  0113                     	;# 
  1487  0114                     	;# 
  1488  0115                     	;# 
  1489  0116                     	;# 
  1490  0117                     	;# 
  1491  0118                     	;# 
  1492  0119                     	;# 
  1493  011A                     	;# 
  1494  011B                     	;# 
  1495  011B                     	;# 
  1496  011C                     	;# 
  1497  018C                     	;# 
  1498  018D                     	;# 
  1499  018E                     	;# 
  1500  018F                     	;# 
  1501  0190                     	;# 
  1502  0191                     	;# 
  1503  0191                     	;# 
  1504  0192                     	;# 
  1505  0193                     	;# 
  1506  0193                     	;# 
  1507  0194                     	;# 
  1508  0195                     	;# 
  1509  0196                     	;# 
  1510  0197                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  0199                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019A                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019C                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019D                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019E                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  020C                     	;# 
  1537  020D                     	;# 
  1538  020E                     	;# 
  1539  020F                     	;# 
  1540  0210                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0216                     	;# 
  1554  0216                     	;# 
  1555  0217                     	;# 
  1556  0217                     	;# 
  1557  028C                     	;# 
  1558  028D                     	;# 
  1559  028E                     	;# 
  1560  028F                     	;# 
  1561  0290                     	;# 
  1562  0291                     	;# 
  1563  0291                     	;# 
  1564  0292                     	;# 
  1565  0293                     	;# 
  1566  0293                     	;# 
  1567  0298                     	;# 
  1568  0298                     	;# 
  1569  0299                     	;# 
  1570  029A                     	;# 
  1571  029A                     	;# 
  1572  029E                     	;# 
  1573  030C                     	;# 
  1574  030D                     	;# 
  1575  030E                     	;# 
  1576  030F                     	;# 
  1577  0310                     	;# 
  1578  038C                     	;# 
  1579  038D                     	;# 
  1580  038E                     	;# 
  1581  038F                     	;# 
  1582  0390                     	;# 
  1583  0391                     	;# 
  1584  0392                     	;# 
  1585  0393                     	;# 
  1586  0394                     	;# 
  1587  0395                     	;# 
  1588  0396                     	;# 
  1589  0397                     	;# 
  1590  0398                     	;# 
  1591  0399                     	;# 
  1592  039D                     	;# 
  1593  039E                     	;# 
  1594  039F                     	;# 
  1595  0415                     	;# 
  1596  0416                     	;# 
  1597  0417                     	;# 
  1598  041C                     	;# 
  1599  041D                     	;# 
  1600  041E                     	;# 
  1601  0498                     	;# 
  1602  0498                     	;# 
  1603  0499                     	;# 
  1604  049A                     	;# 
  1605  049B                     	;# 
  1606  049B                     	;# 
  1607  049C                     	;# 
  1608  049D                     	;# 
  1609  049E                     	;# 
  1610  049F                     	;# 
  1611  0511                     	;# 
  1612  0515                     	;# 
  1613  0617                     	;# 
  1614  0618                     	;# 
  1615  0619                     	;# 
  1616  0619                     	;# 
  1617  061A                     	;# 
  1618  061B                     	;# 
  1619  061C                     	;# 
  1620  061C                     	;# 
  1621  0691                     	;# 
  1622  0692                     	;# 
  1623  0693                     	;# 
  1624  0694                     	;# 
  1625  0695                     	;# 
  1626  0696                     	;# 
  1627  0697                     	;# 
  1628  0698                     	;# 
  1629  0699                     	;# 
  1630  069A                     	;# 
  1631  069B                     	;# 
  1632  069C                     	;# 
  1633  069D                     	;# 
  1634  069E                     	;# 
  1635  069F                     	;# 
  1636  0E0F                     	;# 
  1637  0E10                     	;# 
  1638  0E11                     	;# 
  1639  0E12                     	;# 
  1640  0E13                     	;# 
  1641  0E14                     	;# 
  1642  0E15                     	;# 
  1643  0E17                     	;# 
  1644  0E20                     	;# 
  1645  0E21                     	;# 
  1646  0E22                     	;# 
  1647  0E24                     	;# 
  1648  0E25                     	;# 
  1649  0E28                     	;# 
  1650  0E29                     	;# 
  1651  0E2A                     	;# 
  1652  0E2B                     	;# 
  1653  0E90                     	;# 
  1654  0E91                     	;# 
  1655  0E92                     	;# 
  1656  0E93                     	;# 
  1657  0E94                     	;# 
  1658  0E95                     	;# 
  1659  0E96                     	;# 
  1660  0E97                     	;# 
  1661  0E98                     	;# 
  1662  0E99                     	;# 
  1663  0E9A                     	;# 
  1664  0E9B                     	;# 
  1665  0E9C                     	;# 
  1666  0E9D                     	;# 
  1667  0E9E                     	;# 
  1668  0E9F                     	;# 
  1669  0EA0                     	;# 
  1670  0EA1                     	;# 
  1671  0EA2                     	;# 
  1672  0EA3                     	;# 
  1673  0EA4                     	;# 
  1674  0EA5                     	;# 
  1675  0EA6                     	;# 
  1676  0EA7                     	;# 
  1677  0EA8                     	;# 
  1678  0EA9                     	;# 
  1679  0EAA                     	;# 
  1680  0EAB                     	;# 
  1681  0EAC                     	;# 
  1682  0EAD                     	;# 
  1683  0EAE                     	;# 
  1684  0EAF                     	;# 
  1685  0EB0                     	;# 
  1686  0EB1                     	;# 
  1687  0EB2                     	;# 
  1688  0F0F                     	;# 
  1689  0F10                     	;# 
  1690  0F11                     	;# 
  1691  0F12                     	;# 
  1692  0F13                     	;# 
  1693  0F14                     	;# 
  1694  0F15                     	;# 
  1695  0F16                     	;# 
  1696  0F17                     	;# 
  1697  0F18                     	;# 
  1698  0F19                     	;# 
  1699  0F1A                     	;# 
  1700  0F1B                     	;# 
  1701  0F1C                     	;# 
  1702  0F1D                     	;# 
  1703  0F1E                     	;# 
  1704  0F1F                     	;# 
  1705  0F20                     	;# 
  1706  0F21                     	;# 
  1707  0F22                     	;# 
  1708  0F23                     	;# 
  1709  0F24                     	;# 
  1710  0F25                     	;# 
  1711  0F26                     	;# 
  1712  0F27                     	;# 
  1713  0F28                     	;# 
  1714  0F29                     	;# 
  1715  0F2A                     	;# 
  1716  0F2B                     	;# 
  1717  0F2C                     	;# 
  1718  0F2D                     	;# 
  1719  0F2E                     	;# 
  1720  0F2F                     	;# 
  1721  0F30                     	;# 
  1722  0F31                     	;# 
  1723  0F32                     	;# 
  1724  0F33                     	;# 
  1725  0F34                     	;# 
  1726  0F35                     	;# 
  1727  0F36                     	;# 
  1728  0F37                     	;# 
  1729  0FE4                     	;# 
  1730  0FE5                     	;# 
  1731  0FE6                     	;# 
  1732  0FE7                     	;# 
  1733  0FE8                     	;# 
  1734  0FE9                     	;# 
  1735  0FEA                     	;# 
  1736  0FEB                     	;# 
  1737  0FED                     	;# 
  1738  0FEE                     	;# 
  1739  0FEF                     	;# 
  1740  0000                     	;# 
  1741  0001                     	;# 
  1742  0002                     	;# 
  1743  0003                     	;# 
  1744  0004                     	;# 
  1745  0005                     	;# 
  1746  0006                     	;# 
  1747  0007                     	;# 
  1748  0008                     	;# 
  1749  0009                     	;# 
  1750  000A                     	;# 
  1751  000B                     	;# 
  1752  000C                     	;# 
  1753  000D                     	;# 
  1754  000E                     	;# 
  1755  000F                     	;# 
  1756  0010                     	;# 
  1757  0011                     	;# 
  1758  0012                     	;# 
  1759  0013                     	;# 
  1760  0015                     	;# 
  1761  0016                     	;# 
  1762  0016                     	;# 
  1763  0017                     	;# 
  1764  0018                     	;# 
  1765  0019                     	;# 
  1766  001A                     	;# 
  1767  001B                     	;# 
  1768  001C                     	;# 
  1769  008C                     	;# 
  1770  008D                     	;# 
  1771  008E                     	;# 
  1772  008F                     	;# 
  1773  0090                     	;# 
  1774  0091                     	;# 
  1775  0092                     	;# 
  1776  0093                     	;# 
  1777  0095                     	;# 
  1778  0096                     	;# 
  1779  0097                     	;# 
  1780  0098                     	;# 
  1781  0099                     	;# 
  1782  009A                     	;# 
  1783  009B                     	;# 
  1784  009B                     	;# 
  1785  009C                     	;# 
  1786  009D                     	;# 
  1787  009E                     	;# 
  1788  009F                     	;# 
  1789  010C                     	;# 
  1790  010D                     	;# 
  1791  010E                     	;# 
  1792  010F                     	;# 
  1793  0110                     	;# 
  1794  0111                     	;# 
  1795  0112                     	;# 
  1796  0113                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0117                     	;# 
  1801  0118                     	;# 
  1802  0119                     	;# 
  1803  011A                     	;# 
  1804  011B                     	;# 
  1805  011B                     	;# 
  1806  011C                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  018F                     	;# 
  1811  0190                     	;# 
  1812  0191                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0193                     	;# 
  1816  0193                     	;# 
  1817  0194                     	;# 
  1818  0195                     	;# 
  1819  0196                     	;# 
  1820  0197                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  0199                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019A                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019B                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019C                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019E                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  019F                     	;# 
  1846  020C                     	;# 
  1847  020D                     	;# 
  1848  020E                     	;# 
  1849  020F                     	;# 
  1850  0210                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0216                     	;# 
  1864  0216                     	;# 
  1865  0217                     	;# 
  1866  0217                     	;# 
  1867  028C                     	;# 
  1868  028D                     	;# 
  1869  028E                     	;# 
  1870  028F                     	;# 
  1871  0290                     	;# 
  1872  0291                     	;# 
  1873  0291                     	;# 
  1874  0292                     	;# 
  1875  0293                     	;# 
  1876  0293                     	;# 
  1877  0298                     	;# 
  1878  0298                     	;# 
  1879  0299                     	;# 
  1880  029A                     	;# 
  1881  029A                     	;# 
  1882  029E                     	;# 
  1883  030C                     	;# 
  1884  030D                     	;# 
  1885  030E                     	;# 
  1886  030F                     	;# 
  1887  0310                     	;# 
  1888  038C                     	;# 
  1889  038D                     	;# 
  1890  038E                     	;# 
  1891  038F                     	;# 
  1892  0390                     	;# 
  1893  0391                     	;# 
  1894  0392                     	;# 
  1895  0393                     	;# 
  1896  0394                     	;# 
  1897  0395                     	;# 
  1898  0396                     	;# 
  1899  0397                     	;# 
  1900  0398                     	;# 
  1901  0399                     	;# 
  1902  039D                     	;# 
  1903  039E                     	;# 
  1904  039F                     	;# 
  1905  0415                     	;# 
  1906  0416                     	;# 
  1907  0417                     	;# 
  1908  041C                     	;# 
  1909  041D                     	;# 
  1910  041E                     	;# 
  1911  0498                     	;# 
  1912  0498                     	;# 
  1913  0499                     	;# 
  1914  049A                     	;# 
  1915  049B                     	;# 
  1916  049B                     	;# 
  1917  049C                     	;# 
  1918  049D                     	;# 
  1919  049E                     	;# 
  1920  049F                     	;# 
  1921  0511                     	;# 
  1922  0515                     	;# 
  1923  0617                     	;# 
  1924  0618                     	;# 
  1925  0619                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061C                     	;# 
  1931  0691                     	;# 
  1932  0692                     	;# 
  1933  0693                     	;# 
  1934  0694                     	;# 
  1935  0695                     	;# 
  1936  0696                     	;# 
  1937  0697                     	;# 
  1938  0698                     	;# 
  1939  0699                     	;# 
  1940  069A                     	;# 
  1941  069B                     	;# 
  1942  069C                     	;# 
  1943  069D                     	;# 
  1944  069E                     	;# 
  1945  069F                     	;# 
  1946  0E0F                     	;# 
  1947  0E10                     	;# 
  1948  0E11                     	;# 
  1949  0E12                     	;# 
  1950  0E13                     	;# 
  1951  0E14                     	;# 
  1952  0E15                     	;# 
  1953  0E17                     	;# 
  1954  0E20                     	;# 
  1955  0E21                     	;# 
  1956  0E22                     	;# 
  1957  0E24                     	;# 
  1958  0E25                     	;# 
  1959  0E28                     	;# 
  1960  0E29                     	;# 
  1961  0E2A                     	;# 
  1962  0E2B                     	;# 
  1963  0E90                     	;# 
  1964  0E91                     	;# 
  1965  0E92                     	;# 
  1966  0E93                     	;# 
  1967  0E94                     	;# 
  1968  0E95                     	;# 
  1969  0E96                     	;# 
  1970  0E97                     	;# 
  1971  0E98                     	;# 
  1972  0E99                     	;# 
  1973  0E9A                     	;# 
  1974  0E9B                     	;# 
  1975  0E9C                     	;# 
  1976  0E9D                     	;# 
  1977  0E9E                     	;# 
  1978  0E9F                     	;# 
  1979  0EA0                     	;# 
  1980  0EA1                     	;# 
  1981  0EA2                     	;# 
  1982  0EA3                     	;# 
  1983  0EA4                     	;# 
  1984  0EA5                     	;# 
  1985  0EA6                     	;# 
  1986  0EA7                     	;# 
  1987  0EA8                     	;# 
  1988  0EA9                     	;# 
  1989  0EAA                     	;# 
  1990  0EAB                     	;# 
  1991  0EAC                     	;# 
  1992  0EAD                     	;# 
  1993  0EAE                     	;# 
  1994  0EAF                     	;# 
  1995  0EB0                     	;# 
  1996  0EB1                     	;# 
  1997  0EB2                     	;# 
  1998  0F0F                     	;# 
  1999  0F10                     	;# 
  2000  0F11                     	;# 
  2001  0F12                     	;# 
  2002  0F13                     	;# 
  2003  0F14                     	;# 
  2004  0F15                     	;# 
  2005  0F16                     	;# 
  2006  0F17                     	;# 
  2007  0F18                     	;# 
  2008  0F19                     	;# 
  2009  0F1A                     	;# 
  2010  0F1B                     	;# 
  2011  0F1C                     	;# 
  2012  0F1D                     	;# 
  2013  0F1E                     	;# 
  2014  0F1F                     	;# 
  2015  0F20                     	;# 
  2016  0F21                     	;# 
  2017  0F22                     	;# 
  2018  0F23                     	;# 
  2019  0F24                     	;# 
  2020  0F25                     	;# 
  2021  0F26                     	;# 
  2022  0F27                     	;# 
  2023  0F28                     	;# 
  2024  0F29                     	;# 
  2025  0F2A                     	;# 
  2026  0F2B                     	;# 
  2027  0F2C                     	;# 
  2028  0F2D                     	;# 
  2029  0F2E                     	;# 
  2030  0F2F                     	;# 
  2031  0F30                     	;# 
  2032  0F31                     	;# 
  2033  0F32                     	;# 
  2034  0F33                     	;# 
  2035  0F34                     	;# 
  2036  0F35                     	;# 
  2037  0F36                     	;# 
  2038  0F37                     	;# 
  2039  0FE4                     	;# 
  2040  0FE5                     	;# 
  2041  0FE6                     	;# 
  2042  0FE7                     	;# 
  2043  0FE8                     	;# 
  2044  0FE9                     	;# 
  2045  0FEA                     	;# 
  2046  0FEB                     	;# 
  2047  0FED                     	;# 
  2048  0FEE                     	;# 
  2049  0FEF                     	;# 
  2050  0000                     	;# 
  2051  0001                     	;# 
  2052  0002                     	;# 
  2053  0003                     	;# 
  2054  0004                     	;# 
  2055  0005                     	;# 
  2056  0006                     	;# 
  2057  0007                     	;# 
  2058  0008                     	;# 
  2059  0009                     	;# 
  2060  000A                     	;# 
  2061  000B                     	;# 
  2062  000C                     	;# 
  2063  000D                     	;# 
  2064  000E                     	;# 
  2065  000F                     	;# 
  2066  0010                     	;# 
  2067  0011                     	;# 
  2068  0012                     	;# 
  2069  0013                     	;# 
  2070  0015                     	;# 
  2071  0016                     	;# 
  2072  0016                     	;# 
  2073  0017                     	;# 
  2074  0018                     	;# 
  2075  0019                     	;# 
  2076  001A                     	;# 
  2077  001B                     	;# 
  2078  001C                     	;# 
  2079  008C                     	;# 
  2080  008D                     	;# 
  2081  008E                     	;# 
  2082  008F                     	;# 
  2083  0090                     	;# 
  2084  0091                     	;# 
  2085  0092                     	;# 
  2086  0093                     	;# 
  2087  0095                     	;# 
  2088  0096                     	;# 
  2089  0097                     	;# 
  2090  0098                     	;# 
  2091  0099                     	;# 
  2092  009A                     	;# 
  2093  009B                     	;# 
  2094  009B                     	;# 
  2095  009C                     	;# 
  2096  009D                     	;# 
  2097  009E                     	;# 
  2098  009F                     	;# 
  2099  010C                     	;# 
  2100  010D                     	;# 
  2101  010E                     	;# 
  2102  010F                     	;# 
  2103  0110                     	;# 
  2104  0111                     	;# 
  2105  0112                     	;# 
  2106  0113                     	;# 
  2107  0114                     	;# 
  2108  0115                     	;# 
  2109  0116                     	;# 
  2110  0117                     	;# 
  2111  0118                     	;# 
  2112  0119                     	;# 
  2113  011A                     	;# 
  2114  011B                     	;# 
  2115  011B                     	;# 
  2116  011C                     	;# 
  2117  018C                     	;# 
  2118  018D                     	;# 
  2119  018E                     	;# 
  2120  018F                     	;# 
  2121  0190                     	;# 
  2122  0191                     	;# 
  2123  0191                     	;# 
  2124  0192                     	;# 
  2125  0193                     	;# 
  2126  0193                     	;# 
  2127  0194                     	;# 
  2128  0195                     	;# 
  2129  0196                     	;# 
  2130  0197                     	;# 
  2131  0199                     	;# 
  2132  0199                     	;# 
  2133  0199                     	;# 
  2134  019A                     	;# 
  2135  019A                     	;# 
  2136  019A                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019B                     	;# 
  2141  019B                     	;# 
  2142  019C                     	;# 
  2143  019C                     	;# 
  2144  019C                     	;# 
  2145  019D                     	;# 
  2146  019D                     	;# 
  2147  019D                     	;# 
  2148  019E                     	;# 
  2149  019E                     	;# 
  2150  019E                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  019F                     	;# 
  2155  019F                     	;# 
  2156  020C                     	;# 
  2157  020D                     	;# 
  2158  020E                     	;# 
  2159  020F                     	;# 
  2160  0210                     	;# 
  2161  0211                     	;# 
  2162  0211                     	;# 
  2163  0212                     	;# 
  2164  0212                     	;# 
  2165  0213                     	;# 
  2166  0213                     	;# 
  2167  0214                     	;# 
  2168  0214                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0215                     	;# 
  2172  0215                     	;# 
  2173  0216                     	;# 
  2174  0216                     	;# 
  2175  0217                     	;# 
  2176  0217                     	;# 
  2177  028C                     	;# 
  2178  028D                     	;# 
  2179  028E                     	;# 
  2180  028F                     	;# 
  2181  0290                     	;# 
  2182  0291                     	;# 
  2183  0291                     	;# 
  2184  0292                     	;# 
  2185  0293                     	;# 
  2186  0293                     	;# 
  2187  0298                     	;# 
  2188  0298                     	;# 
  2189  0299                     	;# 
  2190  029A                     	;# 
  2191  029A                     	;# 
  2192  029E                     	;# 
  2193  030C                     	;# 
  2194  030D                     	;# 
  2195  030E                     	;# 
  2196  030F                     	;# 
  2197  0310                     	;# 
  2198  038C                     	;# 
  2199  038D                     	;# 
  2200  038E                     	;# 
  2201  038F                     	;# 
  2202  0390                     	;# 
  2203  0391                     	;# 
  2204  0392                     	;# 
  2205  0393                     	;# 
  2206  0394                     	;# 
  2207  0395                     	;# 
  2208  0396                     	;# 
  2209  0397                     	;# 
  2210  0398                     	;# 
  2211  0399                     	;# 
  2212  039D                     	;# 
  2213  039E                     	;# 
  2214  039F                     	;# 
  2215  0415                     	;# 
  2216  0416                     	;# 
  2217  0417                     	;# 
  2218  041C                     	;# 
  2219  041D                     	;# 
  2220  041E                     	;# 
  2221  0498                     	;# 
  2222  0498                     	;# 
  2223  0499                     	;# 
  2224  049A                     	;# 
  2225  049B                     	;# 
  2226  049B                     	;# 
  2227  049C                     	;# 
  2228  049D                     	;# 
  2229  049E                     	;# 
  2230  049F                     	;# 
  2231  0511                     	;# 
  2232  0515                     	;# 
  2233  0617                     	;# 
  2234  0618                     	;# 
  2235  0619                     	;# 
  2236  0619                     	;# 
  2237  061A                     	;# 
  2238  061B                     	;# 
  2239  061C                     	;# 
  2240  061C                     	;# 
  2241  0691                     	;# 
  2242  0692                     	;# 
  2243  0693                     	;# 
  2244  0694                     	;# 
  2245  0695                     	;# 
  2246  0696                     	;# 
  2247  0697                     	;# 
  2248  0698                     	;# 
  2249  0699                     	;# 
  2250  069A                     	;# 
  2251  069B                     	;# 
  2252  069C                     	;# 
  2253  069D                     	;# 
  2254  069E                     	;# 
  2255  069F                     	;# 
  2256  0E0F                     	;# 
  2257  0E10                     	;# 
  2258  0E11                     	;# 
  2259  0E12                     	;# 
  2260  0E13                     	;# 
  2261  0E14                     	;# 
  2262  0E15                     	;# 
  2263  0E17                     	;# 
  2264  0E20                     	;# 
  2265  0E21                     	;# 
  2266  0E22                     	;# 
  2267  0E24                     	;# 
  2268  0E25                     	;# 
  2269  0E28                     	;# 
  2270  0E29                     	;# 
  2271  0E2A                     	;# 
  2272  0E2B                     	;# 
  2273  0E90                     	;# 
  2274  0E91                     	;# 
  2275  0E92                     	;# 
  2276  0E93                     	;# 
  2277  0E94                     	;# 
  2278  0E95                     	;# 
  2279  0E96                     	;# 
  2280  0E97                     	;# 
  2281  0E98                     	;# 
  2282  0E99                     	;# 
  2283  0E9A                     	;# 
  2284  0E9B                     	;# 
  2285  0E9C                     	;# 
  2286  0E9D                     	;# 
  2287  0E9E                     	;# 
  2288  0E9F                     	;# 
  2289  0EA0                     	;# 
  2290  0EA1                     	;# 
  2291  0EA2                     	;# 
  2292  0EA3                     	;# 
  2293  0EA4                     	;# 
  2294  0EA5                     	;# 
  2295  0EA6                     	;# 
  2296  0EA7                     	;# 
  2297  0EA8                     	;# 
  2298  0EA9                     	;# 
  2299  0EAA                     	;# 
  2300  0EAB                     	;# 
  2301  0EAC                     	;# 
  2302  0EAD                     	;# 
  2303  0EAE                     	;# 
  2304  0EAF                     	;# 
  2305  0EB0                     	;# 
  2306  0EB1                     	;# 
  2307  0EB2                     	;# 
  2308  0F0F                     	;# 
  2309  0F10                     	;# 
  2310  0F11                     	;# 
  2311  0F12                     	;# 
  2312  0F13                     	;# 
  2313  0F14                     	;# 
  2314  0F15                     	;# 
  2315  0F16                     	;# 
  2316  0F17                     	;# 
  2317  0F18                     	;# 
  2318  0F19                     	;# 
  2319  0F1A                     	;# 
  2320  0F1B                     	;# 
  2321  0F1C                     	;# 
  2322  0F1D                     	;# 
  2323  0F1E                     	;# 
  2324  0F1F                     	;# 
  2325  0F20                     	;# 
  2326  0F21                     	;# 
  2327  0F22                     	;# 
  2328  0F23                     	;# 
  2329  0F24                     	;# 
  2330  0F25                     	;# 
  2331  0F26                     	;# 
  2332  0F27                     	;# 
  2333  0F28                     	;# 
  2334  0F29                     	;# 
  2335  0F2A                     	;# 
  2336  0F2B                     	;# 
  2337  0F2C                     	;# 
  2338  0F2D                     	;# 
  2339  0F2E                     	;# 
  2340  0F2F                     	;# 
  2341  0F30                     	;# 
  2342  0F31                     	;# 
  2343  0F32                     	;# 
  2344  0F33                     	;# 
  2345  0F34                     	;# 
  2346  0F35                     	;# 
  2347  0F36                     	;# 
  2348  0F37                     	;# 
  2349  0FE4                     	;# 
  2350  0FE5                     	;# 
  2351  0FE6                     	;# 
  2352  0FE7                     	;# 
  2353  0FE8                     	;# 
  2354  0FE9                     	;# 
  2355  0FEA                     	;# 
  2356  0FEB                     	;# 
  2357  0FED                     	;# 
  2358  0FEE                     	;# 
  2359  0FEF                     	;_messageBuffer
  2360                           
  2361                           	psect	idataBANK3
  2362  3229                     __pidataBANK3:	
  2363                           
  2364                           ;initializer for _samsung_cell_max_charge
  2365  3229  34C4               	retlw	196
  2366  322A  3409               	retlw	9
  2367                           
  2368                           ;initializer for _thermistorBetaValue
  2369  322B  346B               	retlw	107
  2370  322C  340D               	retlw	13
  2371                           
  2372                           	psect	idataBANK4
  2373  3238                     __pidataBANK4:	
  2374                           
  2375                           ;initializer for stoa@F1152
  2376  3238  3428               	retlw	40
  2377  3239  346E               	retlw	110
  2378  323A  3475               	retlw	117
  2379  323B  346C               	retlw	108
  2380  323C  346C               	retlw	108
  2381  323D  3429               	retlw	41
  2382  323E  3400               	retlw	0
  2383                           
  2384                           	psect	stringtext1
  2385  3000                     __pstringtext1:	
  2386  3000                     _lookupTableSamsung_SOC:	
  2387  3000  3464               	retlw	100
  2388  3001  3400               	retlw	0
  2389  3002  3462               	retlw	98
  2390  3003  3400               	retlw	0
  2391  3004  3460               	retlw	96
  2392  3005  3400               	retlw	0
  2393  3006  345D               	retlw	93
  2394  3007  3400               	retlw	0
  2395  3008  345B               	retlw	91
  2396  3009  3400               	retlw	0
  2397  300A  3457               	retlw	87
  2398  300B  3400               	retlw	0
  2399  300C  3454               	retlw	84
  2400  300D  3400               	retlw	0
  2401  300E  3452               	retlw	82
  2402  300F  3400               	retlw	0
  2403  3010  3450               	retlw	80
  2404  3011  3400               	retlw	0
  2405  3012  344E               	retlw	78
  2406  3013  3400               	retlw	0
  2407  3014  344C               	retlw	76
  2408  3015  3400               	retlw	0
  2409  3016  3449               	retlw	73
  2410  3017  3400               	retlw	0
  2411  3018  3447               	retlw	71
  2412  3019  3400               	retlw	0
  2413  301A  3445               	retlw	69
  2414  301B  3400               	retlw	0
  2415  301C  3443               	retlw	67
  2416  301D  3400               	retlw	0
  2417  301E  3440               	retlw	64
  2418  301F  3400               	retlw	0
  2419  3020  343E               	retlw	62
  2420  3021  3400               	retlw	0
  2421  3022  343C               	retlw	60
  2422  3023  3400               	retlw	0
  2423  3024  343A               	retlw	58
  2424  3025  3400               	retlw	0
  2425  3026  3438               	retlw	56
  2426  3027  3400               	retlw	0
  2427  3028  3435               	retlw	53
  2428  3029  3400               	retlw	0
  2429  302A  3433               	retlw	51
  2430  302B  3400               	retlw	0
  2431  302C  3431               	retlw	49
  2432  302D  3400               	retlw	0
  2433  302E  342F               	retlw	47
  2434  302F  3400               	retlw	0
  2435  3030  342C               	retlw	44
  2436  3031  3400               	retlw	0
  2437  3032  342A               	retlw	42
  2438  3033  3400               	retlw	0
  2439  3034  3428               	retlw	40
  2440  3035  3400               	retlw	0
  2441  3036  3426               	retlw	38
  2442  3037  3400               	retlw	0
  2443  3038  3424               	retlw	36
  2444  3039  3400               	retlw	0
  2445  303A  3421               	retlw	33
  2446  303B  3400               	retlw	0
  2447  303C  341F               	retlw	31
  2448  303D  3400               	retlw	0
  2449  303E  341D               	retlw	29
  2450  303F  3400               	retlw	0
  2451  3040  341B               	retlw	27
  2452  3041  3400               	retlw	0
  2453  3042  3418               	retlw	24
  2454  3043  3400               	retlw	0
  2455  3044  3416               	retlw	22
  2456  3045  3400               	retlw	0
  2457  3046  3414               	retlw	20
  2458  3047  3400               	retlw	0
  2459  3048  3412               	retlw	18
  2460  3049  3400               	retlw	0
  2461  304A  3410               	retlw	16
  2462  304B  3400               	retlw	0
  2463  304C  340D               	retlw	13
  2464  304D  3400               	retlw	0
  2465  304E  340B               	retlw	11
  2466  304F  3400               	retlw	0
  2467  3050  3409               	retlw	9
  2468  3051  3400               	retlw	0
  2469  3052  3407               	retlw	7
  2470  3053  3400               	retlw	0
  2471  3054  3404               	retlw	4
  2472  3055  3400               	retlw	0
  2473  3056  3402               	retlw	2
  2474  3057  3400               	retlw	0
  2475  3058  3400               	retlw	0
  2476  3059  3400               	retlw	0
  2477  305A  3400               	retlw	0
  2478  305B  3400               	retlw	0
  2479  305C                     __end_of_lookupTableSamsung_SOC:	
  2480                           
  2481                           	psect	stringtext2
  2482  305C                     __pstringtext2:	
  2483  305C                     _lookupTableSamsung_voltage:	
  2484  305C  3451               	retlw	81
  2485  305D  3410               	retlw	16
  2486  305E  345B               	retlw	91
  2487  305F  340F               	retlw	15
  2488  3060  341F               	retlw	31
  2489  3061  340F               	retlw	15
  2490  3062  340F               	retlw	15
  2491  3063  340F               	retlw	15
  2492  3064  340A               	retlw	10
  2493  3065  340F               	retlw	15
  2494  3066  3406               	retlw	6
  2495  3067  340F               	retlw	15
  2496  3068  3405               	retlw	5
  2497  3069  340F               	retlw	15
  2498  306A  3403               	retlw	3
  2499  306B  340F               	retlw	15
  2500  306C  3401               	retlw	1
  2501  306D  340F               	retlw	15
  2502  306E  3400               	retlw	0
  2503  306F  340F               	retlw	15
  2504  3070  34FE               	retlw	254
  2505  3071  340E               	retlw	14
  2506  3072  34FC               	retlw	252
  2507  3073  340E               	retlw	14
  2508  3074  34FA               	retlw	250
  2509  3075  340E               	retlw	14
  2510  3076  34F8               	retlw	248
  2511  3077  340E               	retlw	14
  2512  3078  34F6               	retlw	246
  2513  3079  340E               	retlw	14
  2514  307A  34F3               	retlw	243
  2515  307B  340E               	retlw	14
  2516  307C  34F1               	retlw	241
  2517  307D  340E               	retlw	14
  2518  307E  34EE               	retlw	238
  2519  307F  340E               	retlw	14
  2520  3080  34EB               	retlw	235
  2521  3081  340E               	retlw	14
  2522  3082  34E8               	retlw	232
  2523  3083  340E               	retlw	14
  2524  3084  34E5               	retlw	229
  2525  3085  340E               	retlw	14
  2526  3086  34E1               	retlw	225
  2527  3087  340E               	retlw	14
  2528  3088  34DD               	retlw	221
  2529  3089  340E               	retlw	14
  2530  308A  34D9               	retlw	217
  2531  308B  340E               	retlw	14
  2532  308C  34D4               	retlw	212
  2533  308D  340E               	retlw	14
  2534  308E  34CF               	retlw	207
  2535  308F  340E               	retlw	14
  2536  3090  34C9               	retlw	201
  2537  3091  340E               	retlw	14
  2538  3092  34C3               	retlw	195
  2539  3093  340E               	retlw	14
  2540  3094  34BB               	retlw	187
  2541  3095  340E               	retlw	14
  2542  3096  34B4               	retlw	180
  2543  3097  340E               	retlw	14
  2544  3098  34AB               	retlw	171
  2545  3099  340E               	retlw	14
  2546  309A  34A0               	retlw	160
  2547  309B  340E               	retlw	14
  2548  309C  3495               	retlw	149
  2549  309D  340E               	retlw	14
  2550  309E  3487               	retlw	135
  2551  309F  340E               	retlw	14
  2552  30A0  3477               	retlw	119
  2553  30A1  340E               	retlw	14
  2554  30A2  3464               	retlw	100
  2555  30A3  340E               	retlw	14
  2556  30A4  344D               	retlw	77
  2557  30A5  340E               	retlw	14
  2558  30A6  3431               	retlw	49
  2559  30A7  340E               	retlw	14
  2560  30A8  340D               	retlw	13
  2561  30A9  340E               	retlw	14
  2562  30AA  34DE               	retlw	222
  2563  30AB  340D               	retlw	13
  2564  30AC  349F               	retlw	159
  2565  30AD  340D               	retlw	13
  2566  30AE  3443               	retlw	67
  2567  30AF  340D               	retlw	13
  2568  30B0  34B3               	retlw	179
  2569  30B1  340C               	retlw	12
  2570  30B2  34B1               	retlw	177
  2571  30B3  340B               	retlw	11
  2572  30B4  345E               	retlw	94
  2573  30B5  3409               	retlw	9
  2574  30B6  3400               	retlw	0
  2575  30B7  3400               	retlw	0
  2576  30B8                     __end_of_lookupTableSamsung_voltage:	
  2577                           
  2578                           	psect	stringtext3
  2579  3850                     __pstringtext3:	
  2580  3850                     _OCD_threshold_setting:	
  2581  3850  3411               	retlw	17
  2582  3851  3400               	retlw	0
  2583  3852  3416               	retlw	22
  2584  3853  3400               	retlw	0
  2585  3854  341C               	retlw	28
  2586  3855  3400               	retlw	0
  2587  3856  3421               	retlw	33
  2588  3857  3400               	retlw	0
  2589  3858  3427               	retlw	39
  2590  3859  3400               	retlw	0
  2591  385A  342C               	retlw	44
  2592  385B  3400               	retlw	0
  2593  385C  3432               	retlw	50
  2594  385D  3400               	retlw	0
  2595  385E  3438               	retlw	56
  2596  385F  3400               	retlw	0
  2597  3860  343D               	retlw	61
  2598  3861  3400               	retlw	0
  2599  3862  3443               	retlw	67
  2600  3863  3400               	retlw	0
  2601  3864  3448               	retlw	72
  2602  3865  3400               	retlw	0
  2603  3866  344E               	retlw	78
  2604  3867  3400               	retlw	0
  2605  3868  3453               	retlw	83
  2606  3869  3400               	retlw	0
  2607  386A  3459               	retlw	89
  2608  386B  3400               	retlw	0
  2609  386C  345E               	retlw	94
  2610  386D  3400               	retlw	0
  2611  386E  3464               	retlw	100
  2612  386F  3400               	retlw	0
  2613  3870                     __end_of_OCD_threshold_setting:	
  2614                           
  2615                           	psect	stringtext4
  2616  3964                     __pstringtext4:	
  2617  3964                     _OCD_delay_setting:	
  2618  3964  3408               	retlw	8
  2619  3965  3400               	retlw	0
  2620  3966  3414               	retlw	20
  2621  3967  3400               	retlw	0
  2622  3968  3428               	retlw	40
  2623  3969  3400               	retlw	0
  2624  396A  3450               	retlw	80
  2625  396B  3400               	retlw	0
  2626  396C  34A0               	retlw	160
  2627  396D  3400               	retlw	0
  2628  396E  3440               	retlw	64
  2629  396F  3401               	retlw	1
  2630  3970  3480               	retlw	128
  2631  3971  3402               	retlw	2
  2632  3972  3400               	retlw	0
  2633  3973  3405               	retlw	5
  2634  3974                     __end_of_OCD_delay_setting:	
  2635                           
  2636                           	psect	stringtext5
  2637  3974                     __pstringtext5:	
  2638  3974                     _SCD_threshold_setting:	
  2639  3974  342C               	retlw	44
  2640  3975  3400               	retlw	0
  2641  3976  3443               	retlw	67
  2642  3977  3400               	retlw	0
  2643  3978  3459               	retlw	89
  2644  3979  3400               	retlw	0
  2645  397A  346F               	retlw	111
  2646  397B  3400               	retlw	0
  2647  397C  3485               	retlw	133
  2648  397D  3400               	retlw	0
  2649  397E  349B               	retlw	155
  2650  397F  3400               	retlw	0
  2651  3980  34B2               	retlw	178
  2652  3981  3400               	retlw	0
  2653  3982  34C8               	retlw	200
  2654  3983  3400               	retlw	0
  2655  3984                     __end_of_SCD_threshold_setting:	
  2656                           
  2657                           	psect	stringtext6
  2658  3984                     __pstringtext6:	
  2659  3984                     _OV_delay_setting:	
  2660  3984  3401               	retlw	1
  2661  3985  3400               	retlw	0
  2662  3986  3402               	retlw	2
  2663  3987  3400               	retlw	0
  2664  3988  3404               	retlw	4
  2665  3989  3400               	retlw	0
  2666  398A  3408               	retlw	8
  2667  398B  3400               	retlw	0
  2668  398C                     __end_of_OV_delay_setting:	
  2669                           
  2670                           	psect	stringtext7
  2671  398C                     __pstringtext7:	
  2672  398C                     _UV_delay_setting:	
  2673  398C  3401               	retlw	1
  2674  398D  3400               	retlw	0
  2675  398E  3404               	retlw	4
  2676  398F  3400               	retlw	0
  2677  3990  3408               	retlw	8
  2678  3991  3400               	retlw	0
  2679  3992  3410               	retlw	16
  2680  3993  3400               	retlw	0
  2681  3994                     __end_of_UV_delay_setting:	
  2682                           
  2683                           	psect	stringtext8
  2684  3994                     __pstringtext8:	
  2685  3994                     _SCD_delay_setting:	
  2686  3994  3446               	retlw	70
  2687  3995  3400               	retlw	0
  2688  3996  3464               	retlw	100
  2689  3997  3400               	retlw	0
  2690  3998  34C8               	retlw	200
  2691  3999  3400               	retlw	0
  2692  399A  3490               	retlw	144
  2693  399B  3401               	retlw	1
  2694  399C                     __end_of_SCD_delay_setting:	
  2695                           
  2696                           	psect	stringtext9
  2697  39A2                     __pstringtext9:	
  2698  39A2                     _Lg4:	
  2699  39A2  3426               	retlw	38
  2700  39A3  349E               	retlw	158
  2701  39A4  3478               	retlw	120
  2702  39A5  343E               	retlw	62
  2703  39A6                     __end_of_Lg4:	
  2704                           
  2705                           	psect	stringtext10
  2706  39A6                     __pstringtext10:	
  2707  39A6                     _Lg3:	
  2708  39A6  34EE               	retlw	238
  2709  39A7  34E9               	retlw	233
  2710  39A8  3491               	retlw	145
  2711  39A9  343E               	retlw	62
  2712  39AA                     __end_of_Lg3:	
  2713                           
  2714                           	psect	stringtext11
  2715  39AA                     __pstringtext11:	
  2716  39AA                     _Lg2:	
  2717  39AA  3413               	retlw	19
  2718  39AB  34CE               	retlw	206
  2719  39AC  34CC               	retlw	204
  2720  39AD  343E               	retlw	62
  2721  39AE                     __end_of_Lg2:	
  2722                           
  2723                           	psect	stringtext12
  2724  39AE                     __pstringtext12:	
  2725  39AE                     _Lg1:	
  2726  39AE  34AA               	retlw	170
  2727  39AF  34AA               	retlw	170
  2728  39B0  342A               	retlw	42
  2729  39B1  343F               	retlw	63
  2730  39B2                     __end_of_Lg1:	
  2731                           
  2732                           	psect	stringtext13
  2733  39B2                     __pstringtext13:	
  2734  39B2                     _ln2_lo:	
  2735  39B2  34D1               	retlw	209
  2736  39B3  34F7               	retlw	247
  2737  39B4  3417               	retlw	23
  2738  39B5  3437               	retlw	55
  2739  39B6                     __end_of_ln2_lo:	
  2740                           
  2741                           	psect	stringtext14
  2742  39B6                     __pstringtext14:	
  2743  39B6                     _ln2_hi:	
  2744  39B6  3480               	retlw	128
  2745  39B7  3471               	retlw	113
  2746  39B8  3431               	retlw	49
  2747  39B9  343F               	retlw	63
  2748  39BA                     __end_of_ln2_hi:	
  2749                           
  2750                           	psect	stringtext15
  2751  3800                     __pstringtext15:	
  2752  3800                     _ATmega328_address:	
  2753  3800  3402               	retlw	2
  2754  3801  3400               	retlw	0
  2755  3802                     __end_of_ATmega328_address:	
  2756  0016                     _TMR1	set	22
  2757  0003                     _STATUSbits	set	3
  2758  000B                     _INTCONbits	set	11
  2759  0018                     _T1CONbits	set	24
  2760  0011                     _PIR1bits	set	17
  2761  0097                     _WDTCONbits	set	151
  2762  0090                     _TRISEbits	set	144
  2763  008C                     _TRISAbits	set	140
  2764  008E                     _TRISCbits	set	142
  2765  008D                     _TRISBbits	set	141
  2766  0091                     _PIE1bits	set	145
  2767  0476                     _TRISC6	set	1142
  2768  0477                     _TRISC7	set	1143
  2769  04CF                     _SPLLEN	set	1231
  2770  04CE                     _IRCF3	set	1230
  2771  04CD                     _IRCF2	set	1229
  2772  04CC                     _IRCF1	set	1228
  2773  04CB                     _IRCF0	set	1227
  2774  04C9                     _SCS1	set	1225
  2775  04C8                     _SCS0	set	1224
  2776  0110                     _LATEbits	set	272
  2777  010C                     _LATAbits	set	268
  2778  019A                     _TX1REG	set	410
  2779  0199                     _RC1REG	set	409
  2780  019D                     _RC1STAbits	set	413
  2781  019B                     _SPBRG	set	411
  2782  018E                     _ANSELCbits	set	398
  2783  018D                     _ANSELBbits	set	397
  2784  0CF5                     _TXEN	set	3317
  2785  0CEC                     _CREN	set	3308
  2786  0CEF                     _SPEN	set	3311
  2787  0CF4                     _SYNC	set	3316
  2788  0CF2                     _BRGH	set	3314
  2789  0216                     _SSPCON2bits	set	534
  2790  0211                     _SSPBUF	set	529
  2791  0212                     _SSPADD	set	530
  2792  0215                     _SSPCONbits	set	533
  2793  0293                     _CCP1CONbits	set	659
  2794  029E                     _CCPTMRSbits	set	670
  2795  0291                     _CCPR1L	set	657
  2796  041D                     _PR6	set	1053
  2797  041E                     _T6CONbits	set	1054
  2798  0E24                     _RXPPSbits	set	3620
  2799  0E20                     _SSPCLKPPSbits	set	3616
  2800  0E21                     _SSPDATPPSbits	set	3617
  2801  0E0F                     _PPSLOCKbits	set	3599
  2802  0E0F                     _PPSLOCK	set	3599
  2803  0E99                     _RB1PPSbits	set	3737
  2804  0E9A                     _RB2PPSbits	set	3738
  2805  0EA5                     _RC5PPSbits	set	3749
  2806  0EA4                     _RC4PPSbits	set	3748
  2807  3802                     STR_1:	
  2808  3802  3457               	retlw	87	;'W'
  2809  3803  3441               	retlw	65	;'A'
  2810  3804  3454               	retlw	84	;'T'
  2811  3805  3443               	retlw	67	;'C'
  2812  3806  3448               	retlw	72	;'H'
  2813  3807  3444               	retlw	68	;'D'
  2814  3808  344F               	retlw	79	;'O'
  2815  3809  3447               	retlw	71	;'G'
  2816  380A  3420               	retlw	32	;' '
  2817  380B  344E               	retlw	78	;'N'
  2818  380C  344F               	retlw	79	;'O'
  2819  380D  3454               	retlw	84	;'T'
  2820  380E  3420               	retlw	32	;' '
  2821  380F  344B               	retlw	75	;'K'
  2822  3810  3449               	retlw	73	;'I'
  2823  3811  3443               	retlw	67	;'C'
  2824  3812  344B               	retlw	75	;'K'
  2825  3813  3445               	retlw	69	;'E'
  2826  3814  3444               	retlw	68	;'D'
  2827  3815  343A               	retlw	58	;':'
  2828  3816  3420               	retlw	32	;' '
  2829  3817  3441               	retlw	65	;'A'
  2830  3818  3446               	retlw	70	;'F'
  2831  3819  3445               	retlw	69	;'E'
  2832  381A  3420               	retlw	32	;' '
  2833  381B  3463               	retlw	99	;'c'
  2834  381C  346F               	retlw	111	;'o'
  2835  381D  346D               	retlw	109	;'m'
  2836  381E  346D               	retlw	109	;'m'
  2837  381F  3473               	retlw	115	;'s'
  2838  3820  3420               	retlw	32	;' '
  2839  3821  3465               	retlw	101	;'e'
  2840  3822  3472               	retlw	114	;'r'
  2841  3823  3472               	retlw	114	;'r'
  2842  3824  346F               	retlw	111	;'o'
  2843  3825  3472               	retlw	114	;'r'
  2844  3826  3420               	retlw	32	;' '
  2845  3827  340A               	retlw	10
  2846  3828  340D               	retlw	13
  2847  3829  3400               	retlw	0
  2848                           
  2849                           	psect	stringtext16
  2850  382A                     __pstringtext16:	
  2851  382A                     STR_4:	
  2852  382A  3450               	retlw	80	;'P'
  2853  382B  3472               	retlw	114	;'r'
  2854  382C  3469               	retlw	105	;'i'
  2855  382D  346E               	retlw	110	;'n'
  2856  382E  3474               	retlw	116	;'t'
  2857  382F  3469               	retlw	105	;'i'
  2858  3830  346E               	retlw	110	;'n'
  2859  3831  3467               	retlw	103	;'g'
  2860  3832  3420               	retlw	32	;' '
  2861  3833  346F               	retlw	111	;'o'
  2862  3834  3475               	retlw	117	;'u'
  2863  3835  3474               	retlw	116	;'t'
  2864  3836  3420               	retlw	32	;' '
  2865  3837  3441               	retlw	65	;'A'
  2866  3838  3446               	retlw	70	;'F'
  2867  3839  3445               	retlw	69	;'E'
  2868  383A  3420               	retlw	32	;' '
  2869  383B  3472               	retlw	114	;'r'
  2870  383C  3465               	retlw	101	;'e'
  2871  383D  3467               	retlw	103	;'g'
  2872  383E  3469               	retlw	105	;'i'
  2873  383F  3473               	retlw	115	;'s'
  2874  3840  3474               	retlw	116	;'t'
  2875  3841  3465               	retlw	101	;'e'
  2876  3842  3472               	retlw	114	;'r'
  2877  3843  3420               	retlw	32	;' '
  2878  3844  3476               	retlw	118	;'v'
  2879  3845  3461               	retlw	97	;'a'
  2880  3846  346C               	retlw	108	;'l'
  2881  3847  3475               	retlw	117	;'u'
  2882  3848  3465               	retlw	101	;'e'
  2883  3849  3473               	retlw	115	;'s'
  2884  384A  342E               	retlw	46	;'.'
  2885  384B  342E               	retlw	46	;'.'
  2886  384C  342E               	retlw	46	;'.'
  2887  384D  340A               	retlw	10
  2888  384E  340D               	retlw	13
  2889  384F  3400               	retlw	0
  2890                           
  2891                           	psect	stringtext17
  2892  3870                     __pstringtext17:	
  2893  3870                     STR_8:	
  2894  3870  3430               	retlw	48	;'0'
  2895  3871  3478               	retlw	120	;'x'
  2896  3872  3430               	retlw	48	;'0'
  2897  3873  3434               	retlw	52	;'4'
  2898  3874  3420               	retlw	32	;' '
  2899  3875  3453               	retlw	83	;'S'
  2900  3876  3459               	retlw	89	;'Y'
  2901  3877  3453               	retlw	83	;'S'
  2902  3878  345F               	retlw	95	;'_'
  2903  3879  3443               	retlw	67	;'C'
  2904  387A  3454               	retlw	84	;'T'
  2905  387B  3452               	retlw	82	;'R'
  2906  387C  344C               	retlw	76	;'L'
  2907  387D  3431               	retlw	49	;'1'
  2908  387E  343A               	retlw	58	;':'
  2909  387F  3420               	retlw	32	;' '
  2910  3880  3425               	retlw	37	;'%'
  2911  3881  3469               	retlw	105	;'i'
  2912  3882  3420               	retlw	32	;' '
  2913  3883  340A               	retlw	10
  2914  3884  340D               	retlw	13
  2915  3885  3400               	retlw	0
  2916                           
  2917                           	psect	stringtext18
  2918  3886                     __pstringtext18:	
  2919  3886                     STR_9:	
  2920  3886  3430               	retlw	48	;'0'
  2921  3887  3478               	retlw	120	;'x'
  2922  3888  3430               	retlw	48	;'0'
  2923  3889  3435               	retlw	53	;'5'
  2924  388A  3420               	retlw	32	;' '
  2925  388B  3453               	retlw	83	;'S'
  2926  388C  3459               	retlw	89	;'Y'
  2927  388D  3453               	retlw	83	;'S'
  2928  388E  345F               	retlw	95	;'_'
  2929  388F  3443               	retlw	67	;'C'
  2930  3890  3454               	retlw	84	;'T'
  2931  3891  3452               	retlw	82	;'R'
  2932  3892  344C               	retlw	76	;'L'
  2933  3893  3432               	retlw	50	;'2'
  2934  3894  343A               	retlw	58	;':'
  2935  3895  3420               	retlw	32	;' '
  2936  3896  3425               	retlw	37	;'%'
  2937  3897  3469               	retlw	105	;'i'
  2938  3898  3420               	retlw	32	;' '
  2939  3899  340A               	retlw	10
  2940  389A  340D               	retlw	13
  2941  389B  3400               	retlw	0
  2942                           
  2943                           	psect	stringtext19
  2944  389C                     __pstringtext19:	
  2945  389C                     STR_7:	
  2946  389C  3430               	retlw	48	;'0'
  2947  389D  3478               	retlw	120	;'x'
  2948  389E  3430               	retlw	48	;'0'
  2949  389F  3431               	retlw	49	;'1'
  2950  38A0  3420               	retlw	32	;' '
  2951  38A1  3443               	retlw	67	;'C'
  2952  38A2  3445               	retlw	69	;'E'
  2953  38A3  344C               	retlw	76	;'L'
  2954  38A4  344C               	retlw	76	;'L'
  2955  38A5  3442               	retlw	66	;'B'
  2956  38A6  3441               	retlw	65	;'A'
  2957  38A7  344C               	retlw	76	;'L'
  2958  38A8  3431               	retlw	49	;'1'
  2959  38A9  343A               	retlw	58	;':'
  2960  38AA  3420               	retlw	32	;' '
  2961  38AB  3425               	retlw	37	;'%'
  2962  38AC  3469               	retlw	105	;'i'
  2963  38AD  3420               	retlw	32	;' '
  2964  38AE  340A               	retlw	10
  2965  38AF  340D               	retlw	13
  2966  38B0  3400               	retlw	0
  2967                           
  2968                           	psect	stringtext20
  2969  38B1                     __pstringtext20:	
  2970  38B1                     STR_10:	
  2971  38B1  3430               	retlw	48	;'0'
  2972  38B2  3478               	retlw	120	;'x'
  2973  38B3  3430               	retlw	48	;'0'
  2974  38B4  3436               	retlw	54	;'6'
  2975  38B5  3420               	retlw	32	;' '
  2976  38B6  3450               	retlw	80	;'P'
  2977  38B7  3452               	retlw	82	;'R'
  2978  38B8  344F               	retlw	79	;'O'
  2979  38B9  3454               	retlw	84	;'T'
  2980  38BA  3445               	retlw	69	;'E'
  2981  38BB  3443               	retlw	67	;'C'
  2982  38BC  3454               	retlw	84	;'T'
  2983  38BD  3431               	retlw	49	;'1'
  2984  38BE  343A               	retlw	58	;':'
  2985  38BF  3420               	retlw	32	;' '
  2986  38C0  3425               	retlw	37	;'%'
  2987  38C1  3469               	retlw	105	;'i'
  2988  38C2  3420               	retlw	32	;' '
  2989  38C3  340A               	retlw	10
  2990  38C4  340D               	retlw	13
  2991  38C5  3400               	retlw	0
  2992                           
  2993                           	psect	stringtext21
  2994  38C6                     __pstringtext21:	
  2995  38C6                     STR_11:	
  2996  38C6  3430               	retlw	48	;'0'
  2997  38C7  3478               	retlw	120	;'x'
  2998  38C8  3430               	retlw	48	;'0'
  2999  38C9  3437               	retlw	55	;'7'
  3000  38CA  3420               	retlw	32	;' '
  3001  38CB  3450               	retlw	80	;'P'
  3002  38CC  3452               	retlw	82	;'R'
  3003  38CD  344F               	retlw	79	;'O'
  3004  38CE  3454               	retlw	84	;'T'
  3005  38CF  3445               	retlw	69	;'E'
  3006  38D0  3443               	retlw	67	;'C'
  3007  38D1  3454               	retlw	84	;'T'
  3008  38D2  3432               	retlw	50	;'2'
  3009  38D3  343A               	retlw	58	;':'
  3010  38D4  3420               	retlw	32	;' '
  3011  38D5  3425               	retlw	37	;'%'
  3012  38D6  3469               	retlw	105	;'i'
  3013  38D7  3420               	retlw	32	;' '
  3014  38D8  340A               	retlw	10
  3015  38D9  340D               	retlw	13
  3016  38DA  3400               	retlw	0
  3017                           
  3018                           	psect	stringtext22
  3019  38DB                     __pstringtext22:	
  3020  38DB                     STR_12:	
  3021  38DB  3430               	retlw	48	;'0'
  3022  38DC  3478               	retlw	120	;'x'
  3023  38DD  3430               	retlw	48	;'0'
  3024  38DE  3438               	retlw	56	;'8'
  3025  38DF  3420               	retlw	32	;' '
  3026  38E0  3450               	retlw	80	;'P'
  3027  38E1  3452               	retlw	82	;'R'
  3028  38E2  344F               	retlw	79	;'O'
  3029  38E3  3454               	retlw	84	;'T'
  3030  38E4  3445               	retlw	69	;'E'
  3031  38E5  3443               	retlw	67	;'C'
  3032  38E6  3454               	retlw	84	;'T'
  3033  38E7  3433               	retlw	51	;'3'
  3034  38E8  343A               	retlw	58	;':'
  3035  38E9  3420               	retlw	32	;' '
  3036  38EA  3425               	retlw	37	;'%'
  3037  38EB  3469               	retlw	105	;'i'
  3038  38EC  3420               	retlw	32	;' '
  3039  38ED  340A               	retlw	10
  3040  38EE  340D               	retlw	13
  3041  38EF  3400               	retlw	0
  3042                           
  3043                           	psect	stringtext23
  3044  38F0                     __pstringtext23:	
  3045  38F0                     STR_6:	
  3046  38F0  3430               	retlw	48	;'0'
  3047  38F1  3478               	retlw	120	;'x'
  3048  38F2  3430               	retlw	48	;'0'
  3049  38F3  3430               	retlw	48	;'0'
  3050  38F4  3420               	retlw	32	;' '
  3051  38F5  3453               	retlw	83	;'S'
  3052  38F6  3459               	retlw	89	;'Y'
  3053  38F7  3453               	retlw	83	;'S'
  3054  38F8  345F               	retlw	95	;'_'
  3055  38F9  3453               	retlw	83	;'S'
  3056  38FA  3454               	retlw	84	;'T'
  3057  38FB  3441               	retlw	65	;'A'
  3058  38FC  3454               	retlw	84	;'T'
  3059  38FD  343A               	retlw	58	;':'
  3060  38FE  3420               	retlw	32	;' '
  3061  38FF  3425               	retlw	37	;'%'
  3062  3900  3469               	retlw	105	;'i'
  3063  3901  3420               	retlw	32	;' '
  3064  3902  340A               	retlw	10
  3065  3903  340D               	retlw	13
  3066  3904  3400               	retlw	0
  3067                           
  3068                           	psect	stringtext24
  3069  3905                     __pstringtext24:	
  3070  3905                     STR_13:	
  3071  3905  3430               	retlw	48	;'0'
  3072  3906  3478               	retlw	120	;'x'
  3073  3907  3430               	retlw	48	;'0'
  3074  3908  3439               	retlw	57	;'9'
  3075  3909  3420               	retlw	32	;' '
  3076  390A  344F               	retlw	79	;'O'
  3077  390B  3456               	retlw	86	;'V'
  3078  390C  345F               	retlw	95	;'_'
  3079  390D  3454               	retlw	84	;'T'
  3080  390E  3452               	retlw	82	;'R'
  3081  390F  3449               	retlw	73	;'I'
  3082  3910  3450               	retlw	80	;'P'
  3083  3911  343A               	retlw	58	;':'
  3084  3912  3420               	retlw	32	;' '
  3085  3913  3425               	retlw	37	;'%'
  3086  3914  3469               	retlw	105	;'i'
  3087  3915  3420               	retlw	32	;' '
  3088  3916  340A               	retlw	10
  3089  3917  340D               	retlw	13
  3090  3918  3400               	retlw	0
  3091                           
  3092                           	psect	stringtext25
  3093  3919                     __pstringtext25:	
  3094  3919                     STR_14:	
  3095  3919  3430               	retlw	48	;'0'
  3096  391A  3478               	retlw	120	;'x'
  3097  391B  3430               	retlw	48	;'0'
  3098  391C  3441               	retlw	65	;'A'
  3099  391D  3420               	retlw	32	;' '
  3100  391E  3455               	retlw	85	;'U'
  3101  391F  3456               	retlw	86	;'V'
  3102  3920  345F               	retlw	95	;'_'
  3103  3921  3454               	retlw	84	;'T'
  3104  3922  3452               	retlw	82	;'R'
  3105  3923  3449               	retlw	73	;'I'
  3106  3924  3450               	retlw	80	;'P'
  3107  3925  343A               	retlw	58	;':'
  3108  3926  3420               	retlw	32	;' '
  3109  3927  3425               	retlw	37	;'%'
  3110  3928  3469               	retlw	105	;'i'
  3111  3929  3420               	retlw	32	;' '
  3112  392A  340A               	retlw	10
  3113  392B  340D               	retlw	13
  3114  392C  3400               	retlw	0
  3115                           
  3116                           	psect	stringtext26
  3117  392D                     __pstringtext26:	
  3118  392D                     STR_15:	
  3119  392D  3430               	retlw	48	;'0'
  3120  392E  3478               	retlw	120	;'x'
  3121  392F  3430               	retlw	48	;'0'
  3122  3930  3442               	retlw	66	;'B'
  3123  3931  3420               	retlw	32	;' '
  3124  3932  3443               	retlw	67	;'C'
  3125  3933  3443               	retlw	67	;'C'
  3126  3934  345F               	retlw	95	;'_'
  3127  3935  3443               	retlw	67	;'C'
  3128  3936  3446               	retlw	70	;'F'
  3129  3937  3447               	retlw	71	;'G'
  3130  3938  343A               	retlw	58	;':'
  3131  3939  3420               	retlw	32	;' '
  3132  393A  3425               	retlw	37	;'%'
  3133  393B  3469               	retlw	105	;'i'
  3134  393C  3420               	retlw	32	;' '
  3135  393D  340A               	retlw	10
  3136  393E  340D               	retlw	13
  3137  393F  3400               	retlw	0
  3138                           
  3139                           	psect	stringtext27
  3140  3940                     __pstringtext27:	
  3141  3940                     STR_16:	
  3142  3940  3430               	retlw	48	;'0'
  3143  3941  3478               	retlw	120	;'x'
  3144  3942  3433               	retlw	51	;'3'
  3145  3943  3432               	retlw	50	;'2'
  3146  3944  3420               	retlw	32	;' '
  3147  3945  3443               	retlw	67	;'C'
  3148  3946  3443               	retlw	67	;'C'
  3149  3947  345F               	retlw	95	;'_'
  3150  3948  3448               	retlw	72	;'H'
  3151  3949  3449               	retlw	73	;'I'
  3152  394A  343A               	retlw	58	;':'
  3153  394B  3420               	retlw	32	;' '
  3154  394C  3425               	retlw	37	;'%'
  3155  394D  3469               	retlw	105	;'i'
  3156  394E  3420               	retlw	32	;' '
  3157  394F  340A               	retlw	10
  3158  3950  340D               	retlw	13
  3159  3951  3400               	retlw	0
  3160                           
  3161                           	psect	stringtext28
  3162  3952                     __pstringtext28:	
  3163  3952                     STR_17:	
  3164  3952  3430               	retlw	48	;'0'
  3165  3953  3478               	retlw	120	;'x'
  3166  3954  3433               	retlw	51	;'3'
  3167  3955  3433               	retlw	51	;'3'
  3168  3956  3420               	retlw	32	;' '
  3169  3957  3443               	retlw	67	;'C'
  3170  3958  3443               	retlw	67	;'C'
  3171  3959  345F               	retlw	95	;'_'
  3172  395A  344C               	retlw	76	;'L'
  3173  395B  344F               	retlw	79	;'O'
  3174  395C  343A               	retlw	58	;':'
  3175  395D  3420               	retlw	32	;' '
  3176  395E  3425               	retlw	37	;'%'
  3177  395F  3469               	retlw	105	;'i'
  3178  3960  3420               	retlw	32	;' '
  3179  3961  340A               	retlw	10
  3180  3962  340D               	retlw	13
  3181  3963  3400               	retlw	0
  3182                           
  3183                           	psect	stringtext29
  3184  399C                     __pstringtext29:	
  3185  399C                     STR_3:	
  3186  399C  3425               	retlw	37	;'%'
  3187  399D  3464               	retlw	100	;'d'
  3188  399E  340A               	retlw	10
  3189  399F  340D               	retlw	13
  3190  39A0  342C               	retlw	44	;','
  3191  39A1  3400               	retlw	0
  3192                           
  3193                           	psect	stringtext30
  3194  39BA                     __pstringtext30:	
  3195  39BA                     STR_95:	
  3196  39BA  3468               	retlw	104	;'h'
  3197  39BB  3468               	retlw	104	;'h'
  3198  39BC  3458               	retlw	88	;'X'
  3199  39BD  3400               	retlw	0
  3200                           
  3201                           	psect	stringtext31
  3202  39BE                     __pstringtext31:	
  3203  39BE                     STR_19:	
  3204  39BE  3468               	retlw	104	;'h'
  3205  39BF  3468               	retlw	104	;'h'
  3206  39C0  3464               	retlw	100	;'d'
  3207  39C1  3400               	retlw	0
  3208                           
  3209                           	psect	stringtext32
  3210  39C2                     __pstringtext32:	
  3211  39C2                     STR_23:	
  3212  39C2  3468               	retlw	104	;'h'
  3213  39C3  3468               	retlw	104	;'h'
  3214  39C4  3469               	retlw	105	;'i'
  3215  39C5  3400               	retlw	0
  3216                           
  3217                           	psect	stringtext33
  3218  39C6                     __pstringtext33:	
  3219  39C6                     STR_61:	
  3220  39C6  3468               	retlw	104	;'h'
  3221  39C7  3468               	retlw	104	;'h'
  3222  39C8  346E               	retlw	110	;'n'
  3223  39C9  3400               	retlw	0
  3224                           
  3225                           	psect	stringtext34
  3226  39CA                     __pstringtext34:	
  3227  39CA                     STR_46:	
  3228  39CA  3468               	retlw	104	;'h'
  3229  39CB  3468               	retlw	104	;'h'
  3230  39CC  346F               	retlw	111	;'o'
  3231  39CD  3400               	retlw	0
  3232                           
  3233                           	psect	stringtext35
  3234  39CE                     __pstringtext35:	
  3235  39CE                     STR_76:	
  3236  39CE  3468               	retlw	104	;'h'
  3237  39CF  3468               	retlw	104	;'h'
  3238  39D0  3475               	retlw	117	;'u'
  3239  39D1  3400               	retlw	0
  3240                           
  3241                           	psect	stringtext36
  3242  39D2                     __pstringtext36:	
  3243  39D2                     STR_91:	
  3244  39D2  3468               	retlw	104	;'h'
  3245  39D3  3468               	retlw	104	;'h'
  3246  39D4  3478               	retlw	120	;'x'
  3247  39D5  3400               	retlw	0
  3248                           
  3249                           	psect	stringtext37
  3250  39D6                     __pstringtext37:	
  3251  39D6                     STR_2:	
  3252  39D6  3425               	retlw	37	;'%'
  3253  39D7  3464               	retlw	100	;'d'
  3254  39D8  342C               	retlw	44	;','
  3255  39D9  3400               	retlw	0
  3256                           
  3257                           	psect	stringtext38
  3258  39DA                     __pstringtext38:	
  3259  39DA                     STR_113:	
  3260  39DA  347A               	retlw	122	;'z'
  3261  39DB  3458               	retlw	88	;'X'
  3262  39DC  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext39
  3265  39DD                     __pstringtext39:	
  3266  39DD                     STR_37:	
  3267  39DD  347A               	retlw	122	;'z'
  3268  39DE  3464               	retlw	100	;'d'
  3269  39DF  3400               	retlw	0
  3270                           
  3271                           	psect	stringtext40
  3272  39E0                     __pstringtext40:	
  3273  39E0                     STR_41:	
  3274  39E0  347A               	retlw	122	;'z'
  3275  39E1  3469               	retlw	105	;'i'
  3276  39E2  3400               	retlw	0
  3277                           
  3278                           	psect	stringtext41
  3279  39E3                     __pstringtext41:	
  3280  39E3                     STR_71:	
  3281  39E3  347A               	retlw	122	;'z'
  3282  39E4  346E               	retlw	110	;'n'
  3283  39E5  3400               	retlw	0
  3284                           
  3285                           	psect	stringtext42
  3286  39E6                     __pstringtext42:	
  3287  39E6                     STR_56:	
  3288  39E6  347A               	retlw	122	;'z'
  3289  39E7  346F               	retlw	111	;'o'
  3290  39E8  3400               	retlw	0
  3291                           
  3292                           	psect	stringtext43
  3293  39E9                     __pstringtext43:	
  3294  39E9                     STR_86:	
  3295  39E9  347A               	retlw	122	;'z'
  3296  39EA  3475               	retlw	117	;'u'
  3297  39EB  3400               	retlw	0
  3298                           
  3299                           	psect	stringtext44
  3300  39EC                     __pstringtext44:	
  3301  39EC                     STR_109:	
  3302  39EC  347A               	retlw	122	;'z'
  3303  39ED  3478               	retlw	120	;'x'
  3304  39EE  3400               	retlw	0
  3305                           
  3306                           	psect	stringtext45
  3307  0000                     __pstringtext45:	
  3308  38AE                     
  3309                           ; #config settings
  3310  0000                     
  3311                           	psect	cinit
  3312  0020                     start_initialization:	
  3313  0020                     __initialization:		;BIGRAM
  3314                           
  3315                           ; Initialize objects allocated to BANK3
  3316  0020  0023               	movlb	3	; select bank3
  3317  0021  31B2  2229  3180   	fcall	__pidataBANK3	;fetch initializer
  3318  0024  00EA               	movwf	__pdataBANK3& (0+127)
  3319  0025  31B2  222A  3180   	fcall	__pidataBANK3+1	;fetch initializer
  3320  0028  00EB               	movwf	(__pdataBANK3+1)& (0+127)
  3321  0029  31B2  222B  3180   	fcall	__pidataBANK3+2	;fetch initializer
  3322  002C  00EC               	movwf	(__pdataBANK3+2)& (0+127)
  3323  002D  31B2  222C  3180   	fcall	__pidataBANK3+3	;fetch initializer
  3324  0030  00ED               	movwf	(__pdataBANK3+3)& (0+127)
  3325                           
  3326                           ; Initialize objects allocated to BANK4
  3327  0031  3038               	movlw	low __pidataBANK4
  3328  0032  0084               	movwf	4
  3329  0033  30B2               	movlw	(high __pidataBANK4)| (0+128)
  3330  0034  0085               	movwf	5
  3331  0035  0024               	movlb	4	; select bank4
  3332  0036  0012               	moviw fsr0++
  3333  0037  00CE               	movwf	__pdataBANK4& (0+127)
  3334  0038  0012               	moviw fsr0++
  3335  0039  00CF               	movwf	(__pdataBANK4+1)& (0+127)
  3336  003A  0012               	moviw fsr0++
  3337  003B  00D0               	movwf	(__pdataBANK4+2)& (0+127)
  3338  003C  0012               	moviw fsr0++
  3339  003D  00D1               	movwf	(__pdataBANK4+3)& (0+127)
  3340  003E  0012               	moviw fsr0++
  3341  003F  00D2               	movwf	(__pdataBANK4+4)& (0+127)
  3342  0040  0012               	moviw fsr0++
  3343  0041  00D3               	movwf	(__pdataBANK4+5)& (0+127)
  3344  0042  0012               	moviw fsr0++
  3345  0043  00D4               	movwf	(__pdataBANK4+6)& (0+127)
  3346                           
  3347                           ; Clear objects allocated to BIGRAM
  3348  0044  3071               	movlw	low (0+10097)
  3349  0045  0084               	movwf	4
  3350  0046  3027               	movlw	high (0+10097)
  3351  0047  0085               	movwf	5
  3352  0048  307F               	movlw	127
  3353  0049  00FE               	movwf	btemp
  3354  004A  3000               	movlw	0
  3355  004B  00FF               	movwf	btemp+1
  3356  004C  31B2  2292  3180   	fcall	clear_ram0
  3357                           
  3358                           ; Clear objects allocated to COMMON
  3359  004F  01FC               	clrf	__pbssCOMMON& (0+127)
  3360                           
  3361                           ; Clear objects allocated to BANK2
  3362  0050  3062               	movlw	low __pbssBANK2
  3363  0051  0084               	movwf	4
  3364  0052  3001               	movlw	high __pbssBANK2
  3365  0053  0085               	movwf	5
  3366  0054  300E               	movlw	14
  3367  0055  00FE               	movwf	btemp
  3368  0056  3000               	movlw	0
  3369  0057  00FF               	movwf	btemp+1
  3370  0058  31B2  2292  3180   	fcall	clear_ram0
  3371                           
  3372                           ; Clear objects allocated to BANK3
  3373  005B  30A0               	movlw	low __pbssBANK3
  3374  005C  0084               	movwf	4
  3375  005D  3001               	movlw	high __pbssBANK3
  3376  005E  0085               	movwf	5
  3377  005F  304A               	movlw	74
  3378  0060  00FE               	movwf	btemp
  3379  0061  3000               	movlw	0
  3380  0062  00FF               	movwf	btemp+1
  3381  0063  31B2  2292  3180   	fcall	clear_ram0
  3382                           
  3383                           ; Clear objects allocated to BANK4
  3384  0066  3020               	movlw	low __pbssBANK4
  3385  0067  0084               	movwf	4
  3386  0068  3002               	movlw	high __pbssBANK4
  3387  0069  0085               	movwf	5
  3388  006A  302E               	movlw	46
  3389  006B  00FE               	movwf	btemp
  3390  006C  3000               	movlw	0
  3391  006D  00FF               	movwf	btemp+1
  3392  006E  31B2  2292         	fcall	clear_ram0
  3393  0070                     end_of_initialization:	
  3394                           ;End of C runtime variable initialization code
  3395                           
  3396  0070                     __end_of__initialization:	
  3397  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3398  0071  0020               	movlb	0
  3399  0072  31B5  2D52         	ljmp	_main	;jump to C main() function
  3400                           
  3401                           	psect	bssCOMMON
  3402  007C                     __pbssCOMMON:	
  3403  007C                     _toggleColor:	
  3404  007C                     	ds	1
  3405                           
  3406                           	psect	bssBANK2
  3407  0162                     __pbssBANK2:	
  3408  0162                     _nout:	
  3409  0162                     	ds	2
  3410  0164                     _width:	
  3411  0164                     	ds	2
  3412  0166                     _prec:	
  3413  0166                     	ds	2
  3414  0168                     _flags:	
  3415  0168                     	ds	2
  3416  016A                     _adcOffset:	
  3417  016A                     	ds	2
  3418  016C                     _protect2:	
  3419  016C                     	ds	1
  3420  016D                     _protect1:	
  3421  016D                     	ds	1
  3422  016E                     _adcGain:	
  3423  016E                     	ds	2
  3424                           
  3425                           	psect	bssBANK3
  3426  01A0                     __pbssBANK3:	
  3427  01A0                     _cellCharge:	
  3428  01A0                     	ds	10
  3429  01AA                     _cellVoltages:	
  3430  01AA                     	ds	10
  3431  01B4                     logf@F469:	
  3432  01B4                     	ds	4
  3433  01B8                     _shuntResistorValue_mOhm:	
  3434  01B8                     	ds	4
  3435  01BC                     _rts:	
  3436  01BC                     	ds	4
  3437  01C0                     _temperatureThermistor:	
  3438  01C0                     	ds	4
  3439  01C4                     _batCurrent:	
  3440  01C4                     	ds	4
  3441  01C8                     _errno:	
  3442  01C8                     	ds	2
  3443  01CA                     _minCellVoltage:	
  3444  01CA                     	ds	2
  3445  01CC                     _maxCellVoltage:	
  3446  01CC                     	ds	2
  3447  01CE                     _dschg_fet_enable:	
  3448  01CE                     	ds	2
  3449  01D0                     _chg_fet_enable:	
  3450  01D0                     	ds	2
  3451  01D2                     _ocd_error:	
  3452  01D2                     	ds	2
  3453  01D4                     _scd_error:	
  3454  01D4                     	ds	2
  3455  01D6                     _ov_error:	
  3456  01D6                     	ds	2
  3457  01D8                     _uv_error:	
  3458  01D8                     	ds	2
  3459  01DA                     _alert_error:	
  3460  01DA                     	ds	2
  3461  01DC                     _XR_error:	
  3462  01DC                     	ds	2
  3463  01DE                     _maxCellTempDischarge:	
  3464  01DE                     	ds	2
  3465  01E0                     _maxCellTempCharge:	
  3466  01E0                     	ds	2
  3467  01E2                     _minCellTempDischarge:	
  3468  01E2                     	ds	2
  3469  01E4                     _minCellTempCharge:	
  3470  01E4                     	ds	2
  3471  01E6                     myIsr@count:	
  3472  01E6                     	ds	1
  3473  01E7                     _tmr1_flag:	
  3474  01E7                     	ds	1
  3475  01E8                     _protect3:	
  3476  01E8                     	ds	1
  3477  01E9                     _currState:	
  3478  01E9                     	ds	1
  3479                           
  3480                           	psect	dataBANK3
  3481  01EA                     __pdataBANK3:	
  3482  01EA                     _samsung_cell_max_charge:	
  3483  01EA                     	ds	2
  3484  01EC                     _thermistorBetaValue:	
  3485  01EC                     	ds	2
  3486                           
  3487                           	psect	bssBANK4
  3488  0220                     __pbssBANK4:	
  3489  0220                     _cellSOC:	
  3490  0220                     	ds	10
  3491  022A                     _batVoltage:	
  3492  022A                     	ds	4
  3493  022E                     _dbuf:	
  3494  022E                     	ds	32
  3495                           
  3496                           	psect	dataBANK4
  3497  024E                     __pdataBANK4:	
  3498  024E                     stoa@F1152:	
  3499  024E                     	ds	7
  3500                           
  3501                           	psect	clrtext
  3502  3292                     clear_ram0:	
  3503                           ;	Called with FSR0 containing the base address, and
  3504                           ;	btemp/btemp+1 has the size to clear
  3505                           
  3506  3292  0064               	clrwdt	;clear the watchdog before getting into this loop
  3507  3293                     clrloop0:	
  3508  3293  0180               	clrf	0	;clear RAM location pointed to by FSR
  3509  3294  3101               	addfsr 0,1
  3510  3295  3001               	movlw	1
  3511  3296  02FE               	subwf	126,f
  3512  3297  3000               	movlw	0
  3513  3298  3BFF               	subwfb	127,f
  3514  3299  087F               	movf	127,w
  3515  329A  047E               	iorwf	126,w
  3516  329B  1903               	btfsc	3,2
  3517  329C  3400               	retlw	0	;all done for this memory range, return
  3518  329D  2A93               	goto	clrloop0	;have we reached the end yet?
  3519                           
  3520                           	psect	cstackBANK2
  3521  0120                     __pcstackBANK2:	
  3522  0120                     logf@R:	
  3523                           
  3524                           ; 4 bytes @ 0x0
  3525  0120                     	ds	4
  3526  0124                     logf@t1:	
  3527                           
  3528                           ; 4 bytes @ 0x4
  3529  0124                     	ds	4
  3530  0128                     logf@t2:	
  3531                           
  3532                           ; 4 bytes @ 0x8
  3533  0128                     	ds	4
  3534  012C                     _logf$2276:	
  3535                           
  3536                           ; 4 bytes @ 0xC
  3537  012C                     	ds	4
  3538  0130                     _logf$2277:	
  3539                           
  3540                           ; 4 bytes @ 0x10
  3541  0130                     	ds	4
  3542  0134                     _logf$2278:	
  3543                           
  3544                           ; 4 bytes @ 0x14
  3545  0134                     	ds	4
  3546  0138                     _logf$2279:	
  3547                           
  3548                           ; 4 bytes @ 0x18
  3549  0138                     	ds	4
  3550  013C                     logf@k:	
  3551                           
  3552                           ; 2 bytes @ 0x1C
  3553  013C                     	ds	2
  3554  013E                     logf@hfsq:	
  3555                           
  3556                           ; 4 bytes @ 0x1E
  3557  013E                     	ds	4
  3558  0142                     logf@dk:	
  3559                           
  3560                           ; 4 bytes @ 0x22
  3561  0142                     	ds	4
  3562  0146                     logf@s:	
  3563                           
  3564                           ; 4 bytes @ 0x26
  3565  0146                     	ds	4
  3566  014A                     logf@z:	
  3567                           
  3568                           ; 4 bytes @ 0x2A
  3569  014A                     	ds	4
  3570  014E                     logf@w:	
  3571                           
  3572                           ; 4 bytes @ 0x2E
  3573  014E                     	ds	4
  3574  0152                     _logf$2275:	
  3575                           
  3576                           ; 4 bytes @ 0x32
  3577  0152                     	ds	4
  3578  0156                     logf@u:	
  3579                           
  3580                           ; 4 bytes @ 0x36
  3581  0156                     	ds	4
  3582  015A                     logf@f:	
  3583                           
  3584                           ; 4 bytes @ 0x3A
  3585  015A                     	ds	4
  3586  015E                     logf@ix:	
  3587                           
  3588                           ; 4 bytes @ 0x3E
  3589  015E                     	ds	4
  3590                           
  3591                           	psect	cstackBANK1
  3592  00A0                     __pcstackBANK1:	
  3593  00A0                     ?___flsub:	
  3594  00A0                     vfpfcnvrt@cp:	
  3595                           ; 4 bytes @ 0x0
  3596                           
  3597  00A0                     setShortCircuitProtection@scaler:	
  3598                           ; 2 bytes @ 0x0
  3599                           
  3600  00A0                     setOverCurrentDischargeProtection@scaler:	
  3601                           ; 4 bytes @ 0x0
  3602                           
  3603  00A0                     ___flsub@a:	
  3604                           ; 4 bytes @ 0x0
  3605                           
  3606                           
  3607                           ; 4 bytes @ 0x0
  3608  00A0                     	ds	2
  3609  00A2                     vfpfcnvrt@done:	
  3610                           
  3611                           ; 2 bytes @ 0x2
  3612  00A2                     	ds	2
  3613  00A4                     _vfpfcnvrt$1485:	
  3614  00A4                     ___flsub@b:	
  3615                           ; 2 bytes @ 0x4
  3616                           
  3617  00A4                     _setShortCircuitProtection$2261:	
  3618                           ; 4 bytes @ 0x4
  3619                           
  3620  00A4                     _setOverCurrentDischargeProtection$2262:	
  3621                           ; 4 bytes @ 0x4
  3622                           
  3623                           
  3624                           ; 4 bytes @ 0x4
  3625  00A4                     	ds	2
  3626  00A6                     _vfpfcnvrt$1486:	
  3627                           
  3628                           ; 2 bytes @ 0x6
  3629  00A6                     	ds	2
  3630  00A8                     ?_logf:	
  3631  00A8                     ?___fltol:	
  3632                           ; 4 bytes @ 0x8
  3633                           
  3634  00A8                     setShortCircuitProtection@i:	
  3635                           ; 4 bytes @ 0x8
  3636                           
  3637  00A8                     setOverCurrentDischargeProtection@i:	
  3638                           ; 2 bytes @ 0x8
  3639                           
  3640  00A8                     ___fltol@f1:	
  3641                           ; 2 bytes @ 0x8
  3642                           
  3643  00A8                     logf@x:	
  3644                           ; 4 bytes @ 0x8
  3645                           
  3646  00A8                     vfpfcnvrt@ll:	
  3647                           ; 4 bytes @ 0x8
  3648                           
  3649                           
  3650                           ; 8 bytes @ 0x8
  3651  00A8                     	ds	2
  3652  00AA                     setShortCircuitProtection@i_1117:	
  3653  00AA                     setOverCurrentDischargeProtection@i_1126:	
  3654                           ; 2 bytes @ 0xA
  3655                           
  3656                           
  3657                           ; 2 bytes @ 0xA
  3658  00AA                     	ds	2
  3659  00AC                     ??_logf:	
  3660  00AC                     ??___fltol:	
  3661                           ; 1 bytes @ 0xC
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0xC
  3665  00AC                     	ds	4
  3666  00B0                     vfpfcnvrt@vp:	
  3667                           
  3668                           ; 2 bytes @ 0x10
  3669  00B0                     	ds	1
  3670  00B1                     ??_updateVoltages:	
  3671  00B1                     ??_calibrate_BATTSOC:	
  3672                           ; 1 bytes @ 0x11
  3673                           
  3674  00B1                     ??_updateCurrent:	
  3675                           ; 1 bytes @ 0x11
  3676                           
  3677  00B1                     coulomb_counter@i:	
  3678                           ; 1 bytes @ 0x11
  3679                           
  3680                           
  3681                           ; 2 bytes @ 0x11
  3682  00B1                     	ds	1
  3683  00B2                     vfpfcnvrt@c:	
  3684                           
  3685                           ; 1 bytes @ 0x12
  3686  00B2                     	ds	1
  3687  00B3                     vfpfcnvrt@llu:	
  3688                           
  3689                           ; 8 bytes @ 0x13
  3690  00B3                     	ds	1
  3691  00B4                     ??_updateTemperatures:	
  3692  00B4                     _updateVoltages$2263:	
  3693                           ; 1 bytes @ 0x14
  3694                           
  3695                           
  3696                           ; 4 bytes @ 0x14
  3697  00B4                     	ds	1
  3698  00B5                     updateCurrent@adcVal:	
  3699                           
  3700                           ; 2 bytes @ 0x15
  3701  00B5                     	ds	1
  3702  00B6                     calibrate_BATTSOC@i:	
  3703                           
  3704                           ; 2 bytes @ 0x16
  3705  00B6                     	ds	1
  3706  00B7                     _updateTemperatures$2264:	
  3707                           
  3708                           ; 4 bytes @ 0x17
  3709  00B7                     	ds	1
  3710  00B8                     calibrate_BATTSOC@j:	
  3711  00B8                     updateVoltages@adcVal:	
  3712                           ; 2 bytes @ 0x18
  3713                           
  3714                           
  3715                           ; 4 bytes @ 0x18
  3716  00B8                     	ds	3
  3717  00BB                     ?_vsnprintf:	
  3718  00BB                     vsnprintf@s:	
  3719                           ; 2 bytes @ 0x1B
  3720                           
  3721  00BB                     _updateTemperatures$2265:	
  3722                           ; 2 bytes @ 0x1B
  3723                           
  3724                           
  3725                           ; 4 bytes @ 0x1B
  3726  00BB                     	ds	2
  3727  00BD                     vsnprintf@n:	
  3728                           
  3729                           ; 2 bytes @ 0x1D
  3730  00BD                     	ds	2
  3731  00BF                     vsnprintf@fmt:	
  3732  00BF                     _updateTemperatures$2266:	
  3733                           ; 2 bytes @ 0x1F
  3734                           
  3735                           
  3736                           ; 4 bytes @ 0x1F
  3737  00BF                     	ds	2
  3738  00C1                     vsnprintf@ap:	
  3739                           
  3740                           ; 1 bytes @ 0x21
  3741  00C1                     	ds	1
  3742  00C2                     _vsnprintf$2057:	
  3743                           
  3744                           ; 2 bytes @ 0x22
  3745  00C2                     	ds	1
  3746  00C3                     _updateTemperatures$2267:	
  3747                           
  3748                           ; 4 bytes @ 0x23
  3749  00C3                     	ds	1
  3750  00C4                     vsnprintf@cnt:	
  3751                           
  3752                           ; 2 bytes @ 0x24
  3753  00C4                     	ds	2
  3754  00C6                     vsnprintf@f:	
  3755                           
  3756                           ; 6 bytes @ 0x26
  3757  00C6                     	ds	1
  3758  00C7                     _updateTemperatures$2268:	
  3759                           
  3760                           ; 4 bytes @ 0x27
  3761  00C7                     	ds	4
  3762  00CB                     _updateTemperatures$2269:	
  3763                           
  3764                           ; 4 bytes @ 0x2B
  3765  00CB                     	ds	1
  3766  00CC                     ?_snprintf:	
  3767  00CC                     snprintf@s:	
  3768                           ; 2 bytes @ 0x2C
  3769                           
  3770                           
  3771                           ; 2 bytes @ 0x2C
  3772  00CC                     	ds	2
  3773  00CE                     snprintf@n:	
  3774                           
  3775                           ; 2 bytes @ 0x2E
  3776  00CE                     	ds	1
  3777  00CF                     _updateTemperatures$2270:	
  3778                           
  3779                           ; 4 bytes @ 0x2F
  3780  00CF                     	ds	1
  3781  00D0                     snprintf@fmt:	
  3782                           
  3783                           ; 2 bytes @ 0x30
  3784  00D0                     	ds	3
  3785  00D3                     _updateTemperatures$2271:	
  3786                           
  3787                           ; 4 bytes @ 0x33
  3788  00D3                     	ds	4
  3789  00D7                     _updateTemperatures$2272:	
  3790                           
  3791                           ; 4 bytes @ 0x37
  3792  00D7                     	ds	4
  3793  00DB                     _updateTemperatures$2273:	
  3794                           
  3795                           ; 4 bytes @ 0x3B
  3796  00DB                     	ds	4
  3797  00DF                     _updateTemperatures$2274:	
  3798                           
  3799                           ; 4 bytes @ 0x3F
  3800  00DF                     	ds	4
  3801  00E3                     updateTemperatures@tmp:	
  3802                           
  3803                           ; 4 bytes @ 0x43
  3804  00E3                     	ds	4
  3805  00E7                     updateTemperatures@adcVal:	
  3806                           
  3807                           ; 2 bytes @ 0x47
  3808  00E7                     	ds	2
  3809  00E9                     updateTemperatures@vtsx:	
  3810                           
  3811                           ; 2 bytes @ 0x49
  3812  00E9                     	ds	2
  3813  00EB                     ??_statemachine:	
  3814                           
  3815                           ; 1 bytes @ 0x4B
  3816  00EB                     	ds	2
  3817  00ED                     statemachine@success:	
  3818                           
  3819                           ; 1 bytes @ 0x4D
  3820  00ED                     	ds	1
  3821  00EE                     ??_main:	
  3822                           
  3823                           ; 1 bytes @ 0x4E
  3824  00EE                     	ds	2
  3825                           
  3826                           	psect	cstackCOMMON
  3827  0070                     __pcstackCOMMON:	
  3828  0070                     ?_initClock:	
  3829  0070                     ?_init_GPIO:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0070                     ?_initWDT:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0070                     ?_init_I2C:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0070                     ?_init_TMR1:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0070                     ?_init_TMR6:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0070                     ?_init_RGB:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0070                     ?_watchdog_timeout_shutdown:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_statemachine:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_init_AFE:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_AFE_UPDATE:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_printcellParameters:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_internal_16:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_updateVoltages:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ?_calibrate_BATTSOC:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_coulomb_counter:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ?_updateCurrent:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?_updateTemperatures:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ?_AFE_FET_Status:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?_putch:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ?_myIsr:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ??_myIsr:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?_main:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ?_EUSART_Write:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?_send_I2C_startBit:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_send_I2C_stopBit:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?_send_I2C_NACK:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     putch@c:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913                           
  3914                           ; 1 bytes @ 0x0
  3915  0070                     	ds	1
  3916  0071                     ??_initClock:	
  3917  0071                     ??_init_GPIO:	
  3918                           ; 1 bytes @ 0x1
  3919                           
  3920  0071                     ??_initWDT:	
  3921                           ; 1 bytes @ 0x1
  3922                           
  3923  0071                     ??_init_I2C:	
  3924                           ; 1 bytes @ 0x1
  3925                           
  3926  0071                     ??_init_TMR1:	
  3927                           ; 1 bytes @ 0x1
  3928                           
  3929  0071                     ??_init_TMR6:	
  3930                           ; 1 bytes @ 0x1
  3931                           
  3932  0071                     ??_init_RGB:	
  3933                           ; 1 bytes @ 0x1
  3934                           
  3935  0071                     ?_RGB_color:	
  3936                           ; 1 bytes @ 0x1
  3937                           
  3938  0071                     ??_internal_16:	
  3939                           ; 1 bytes @ 0x1
  3940                           
  3941  0071                     ?_setShuntResistorValue:	
  3942                           ; 1 bytes @ 0x1
  3943                           
  3944  0071                     ??_putch:	
  3945                           ; 1 bytes @ 0x1
  3946                           
  3947  0071                     ??_EUSART_Write:	
  3948                           ; 1 bytes @ 0x1
  3949                           
  3950  0071                     ?_send_I2C_data:	
  3951                           ; 1 bytes @ 0x1
  3952                           
  3953  0071                     ?_send_I2C_controlByte:	
  3954                           ; 1 bytes @ 0x1
  3955                           
  3956  0071                     ??_send_I2C_startBit:	
  3957                           ; 1 bytes @ 0x1
  3958                           
  3959  0071                     ??_send_I2C_stopBit:	
  3960                           ; 1 bytes @ 0x1
  3961                           
  3962  0071                     ??_send_I2C_NACK:	
  3963                           ; 1 bytes @ 0x1
  3964                           
  3965  0071                     ??___aodiv:	
  3966                           ; 1 bytes @ 0x1
  3967                           
  3968  0071                     ??___aomod:	
  3969                           ; 1 bytes @ 0x1
  3970                           
  3971  0071                     ??___lodiv:	
  3972                           ; 1 bytes @ 0x1
  3973                           
  3974  0071                     ??___lomod:	
  3975                           ; 1 bytes @ 0x1
  3976                           
  3977  0071                     ?_fputc:	
  3978                           ; 1 bytes @ 0x1
  3979                           
  3980  0071                     ?_strlen:	
  3981                           ; 2 bytes @ 0x1
  3982                           
  3983  0071                     ?_isupper:	
  3984                           ; 2 bytes @ 0x1
  3985                           
  3986  0071                     ?_isalpha:	
  3987                           ; 2 bytes @ 0x1
  3988                           
  3989  0071                     ?_isdigit:	
  3990                           ; 2 bytes @ 0x1
  3991                           
  3992  0071                     ?_strncmp:	
  3993                           ; 2 bytes @ 0x1
  3994                           
  3995  0071                     ?__Umul8_16:	
  3996                           ; 2 bytes @ 0x1
  3997                           
  3998  0071                     ?_isspace:	
  3999                           ; 2 bytes @ 0x1
  4000                           
  4001  0071                     ?_islower:	
  4002                           ; 2 bytes @ 0x1
  4003                           
  4004  0071                     ?_read_I2C_data:	
  4005                           ; 2 bytes @ 0x1
  4006                           
  4007  0071                     ?___wmul:	
  4008                           ; 2 bytes @ 0x1
  4009                           
  4010  0071                     ?___lmul:	
  4011                           ; 2 bytes @ 0x1
  4012                           
  4013  0071                     ?___xxtofl:	
  4014                           ; 4 bytes @ 0x1
  4015                           
  4016  0071                     EUSART_Write@txData:	
  4017                           ; 4 bytes @ 0x1
  4018                           
  4019  0071                     __Umul8_16@multiplicand:	
  4020                           ; 1 bytes @ 0x1
  4021                           
  4022  0071                     send_I2C_data@databyte:	
  4023                           ; 1 bytes @ 0x1
  4024                           
  4025  0071                     send_I2C_controlByte@BlockAddress:	
  4026                           ; 2 bytes @ 0x1
  4027                           
  4028  0071                     RGB_color@color:	
  4029                           ; 2 bytes @ 0x1
  4030                           
  4031  0071                     ___wmul@multiplier:	
  4032                           ; 2 bytes @ 0x1
  4033                           
  4034  0071                     isalpha@c:	
  4035                           ; 2 bytes @ 0x1
  4036                           
  4037  0071                     isdigit@c:	
  4038                           ; 2 bytes @ 0x1
  4039                           
  4040  0071                     isspace@c:	
  4041                           ; 2 bytes @ 0x1
  4042                           
  4043  0071                     isupper@c:	
  4044                           ; 2 bytes @ 0x1
  4045                           
  4046  0071                     fputc@c:	
  4047                           ; 2 bytes @ 0x1
  4048                           
  4049  0071                     strlen@s:	
  4050                           ; 2 bytes @ 0x1
  4051                           
  4052  0071                     strncmp@_l:	
  4053                           ; 2 bytes @ 0x1
  4054                           
  4055  0071                     islower@c:	
  4056                           ; 2 bytes @ 0x1
  4057                           
  4058  0071                     setShuntResistorValue@res_mOhm:	
  4059                           ; 2 bytes @ 0x1
  4060                           
  4061  0071                     ___lmul@multiplier:	
  4062                           ; 4 bytes @ 0x1
  4063                           
  4064  0071                     ___xxtofl@val:	
  4065                           ; 4 bytes @ 0x1
  4066                           
  4067                           
  4068                           ; 4 bytes @ 0x1
  4069  0071                     	ds	1
  4070  0072                     ?_EUSART_Write_Text:	
  4071  0072                     ___aodiv@counter:	
  4072                           ; 1 bytes @ 0x2
  4073                           
  4074  0072                     ___aomod@counter:	
  4075                           ; 1 bytes @ 0x2
  4076                           
  4077  0072                     ___lomod@counter:	
  4078                           ; 1 bytes @ 0x2
  4079                           
  4080  0072                     EUSART_Write_Text@text:	
  4081                           ; 1 bytes @ 0x2
  4082                           
  4083  0072                     ___lodiv@quotient:	
  4084                           ; 2 bytes @ 0x2
  4085                           
  4086                           
  4087                           ; 8 bytes @ 0x2
  4088  0072                     	ds	1
  4089  0073                     ??_watchdog_timeout_shutdown:	
  4090  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4091                           ; 1 bytes @ 0x3
  4092                           
  4093  0073                     ??_RGB_color:	
  4094                           ; 1 bytes @ 0x3
  4095                           
  4096  0073                     ??_strlen:	
  4097                           ; 1 bytes @ 0x3
  4098                           
  4099  0073                     ??_isupper:	
  4100                           ; 1 bytes @ 0x3
  4101                           
  4102  0073                     ??_isalpha:	
  4103                           ; 1 bytes @ 0x3
  4104                           
  4105  0073                     ??_isdigit:	
  4106                           ; 1 bytes @ 0x3
  4107                           
  4108  0073                     ??__Umul8_16:	
  4109                           ; 1 bytes @ 0x3
  4110                           
  4111  0073                     ??_isspace:	
  4112                           ; 1 bytes @ 0x3
  4113                           
  4114  0073                     ??_islower:	
  4115                           ; 1 bytes @ 0x3
  4116                           
  4117  0073                     ??_send_I2C_data:	
  4118                           ; 1 bytes @ 0x3
  4119                           
  4120  0073                     ??_read_I2C_data:	
  4121                           ; 1 bytes @ 0x3
  4122                           
  4123  0073                     ___aodiv@sign:	
  4124                           ; 1 bytes @ 0x3
  4125                           
  4126  0073                     ___aomod@sign:	
  4127                           ; 1 bytes @ 0x3
  4128                           
  4129  0073                     send_I2C_controlByte@RW_bit:	
  4130                           ; 1 bytes @ 0x3
  4131                           
  4132  0073                     ___wmul@multiplicand:	
  4133                           ; 2 bytes @ 0x3
  4134                           
  4135  0073                     fputc@fp:	
  4136                           ; 2 bytes @ 0x3
  4137                           
  4138  0073                     strlen@a:	
  4139                           ; 2 bytes @ 0x3
  4140                           
  4141  0073                     strncmp@_r:	
  4142                           ; 2 bytes @ 0x3
  4143                           
  4144                           
  4145                           ; 2 bytes @ 0x3
  4146  0073                     	ds	1
  4147  0074                     ??_EUSART_Write_Text:	
  4148  0074                     ?_abs:	
  4149                           ; 1 bytes @ 0x4
  4150                           
  4151  0074                     abs@a:	
  4152                           ; 2 bytes @ 0x4
  4153                           
  4154  0074                     ___aodiv@quotient:	
  4155                           ; 2 bytes @ 0x4
  4156                           
  4157                           
  4158                           ; 8 bytes @ 0x4
  4159  0074                     	ds	1
  4160  0075                     ??_setShuntResistorValue:	
  4161  0075                     ??_fputc:	
  4162                           ; 1 bytes @ 0x5
  4163                           
  4164  0075                     ??_send_I2C_controlByte:	
  4165                           ; 1 bytes @ 0x5
  4166                           
  4167  0075                     ?_I2C_writeRegister:	
  4168                           ; 1 bytes @ 0x5
  4169                           
  4170  0075                     ??___wmul:	
  4171                           ; 1 bytes @ 0x5
  4172                           
  4173  0075                     ??___xxtofl:	
  4174                           ; 1 bytes @ 0x5
  4175                           
  4176  0075                     ?_readRegister:	
  4177                           ; 1 bytes @ 0x5
  4178                           
  4179  0075                     _isspace$1912:	
  4180                           ; 2 bytes @ 0x5
  4181                           
  4182  0075                     EUSART_Write_Text@i:	
  4183                           ; 1 bytes @ 0x5
  4184                           
  4185  0075                     I2C_writeRegister@slaveAddress:	
  4186                           ; 2 bytes @ 0x5
  4187                           
  4188  0075                     readRegister@slaveAddress:	
  4189                           ; 2 bytes @ 0x5
  4190                           
  4191  0075                     ___wmul@product:	
  4192                           ; 2 bytes @ 0x5
  4193                           
  4194  0075                     strncmp@n:	
  4195                           ; 2 bytes @ 0x5
  4196                           
  4197  0075                     __Umul8_16@product:	
  4198                           ; 2 bytes @ 0x5
  4199                           
  4200  0075                     ___lmul@multiplicand:	
  4201                           ; 2 bytes @ 0x5
  4202                           
  4203                           
  4204                           ; 4 bytes @ 0x5
  4205  0075                     	ds	1
  4206  0076                     ??_abs:	
  4207                           
  4208                           ; 1 bytes @ 0x6
  4209  0076                     	ds	1
  4210  0077                     ??_setTemperatureLimitsint:	
  4211  0077                     ??_strncmp:	
  4212                           ; 1 bytes @ 0x7
  4213                           
  4214  0077                     ?_toupper:	
  4215                           ; 1 bytes @ 0x7
  4216                           
  4217  0077                     ?_atoi:	
  4218                           ; 2 bytes @ 0x7
  4219                           
  4220  0077                     I2C_writeRegister@regAddress:	
  4221                           ; 2 bytes @ 0x7
  4222                           
  4223  0077                     readRegister@regAddress:	
  4224                           ; 2 bytes @ 0x7
  4225                           
  4226  0077                     atoi@s:	
  4227                           ; 2 bytes @ 0x7
  4228                           
  4229  0077                     toupper@c:	
  4230                           ; 2 bytes @ 0x7
  4231                           
  4232  0077                     __Umul8_16@word_mpld:	
  4233                           ; 2 bytes @ 0x7
  4234                           
  4235                           
  4236                           ; 2 bytes @ 0x7
  4237  0077                     	ds	1
  4238  0078                     strncmp@l:	
  4239                           
  4240                           ; 2 bytes @ 0x8
  4241  0078                     	ds	1
  4242  0079                     ??_readRegister:	
  4243  0079                     ??___lmul:	
  4244                           ; 1 bytes @ 0x9
  4245                           
  4246  0079                     ??___aldiv:	
  4247                           ; 1 bytes @ 0x9
  4248                           
  4249  0079                     __Umul8_16@multiplier:	
  4250                           ; 1 bytes @ 0x9
  4251                           
  4252  0079                     I2C_writeRegister@data:	
  4253                           ; 1 bytes @ 0x9
  4254                           
  4255  0079                     readRegister@recievedData:	
  4256                           ; 2 bytes @ 0x9
  4257                           
  4258  0079                     _toupper$2020:	
  4259                           ; 2 bytes @ 0x9
  4260                           
  4261                           
  4262                           ; 2 bytes @ 0x9
  4263  0079                     	ds	1
  4264  007A                     ??_stoa:	
  4265  007A                     ??___flneg:	
  4266                           ; 1 bytes @ 0xA
  4267                           
  4268  007A                     ??___flsub:	
  4269                           ; 1 bytes @ 0xA
  4270                           
  4271  007A                     ?_fputs:	
  4272                           ; 1 bytes @ 0xA
  4273                           
  4274  007A                     ___fltol@sign1:	
  4275                           ; 2 bytes @ 0xA
  4276                           
  4277  007A                     ___lodiv@counter:	
  4278                           ; 1 bytes @ 0xA
  4279                           
  4280  007A                     EUSART_Initialize@x:	
  4281                           ; 1 bytes @ 0xA
  4282                           
  4283  007A                     fputs@fp:	
  4284                           ; 2 bytes @ 0xA
  4285                           
  4286  007A                     strncmp@r:	
  4287                           ; 2 bytes @ 0xA
  4288                           
  4289                           
  4290                           ; 2 bytes @ 0xA
  4291  007A                     	ds	1
  4292  007B                     ??_init_AFE:	
  4293  007B                     ??_AFE_FET_Status:	
  4294                           ; 1 bytes @ 0xB
  4295                           
  4296  007B                     ??_AFE_Status:	
  4297                           ; 1 bytes @ 0xB
  4298                           
  4299  007B                     ??_I2C_writeRegister:	
  4300                           ; 1 bytes @ 0xB
  4301                           
  4302  007B                     enableDischarging@sys_ctrl2:	
  4303                           ; 1 bytes @ 0xB
  4304                           
  4305  007B                     enableCharging@sys_ctrl2:	
  4306                           ; 1 bytes @ 0xB
  4307                           
  4308  007B                     ___fltol@exp1:	
  4309                           ; 1 bytes @ 0xB
  4310                           
  4311                           
  4312                           ; 1 bytes @ 0xB
  4313  007B                     	ds	1
  4314  007C                     ??_AFE_UPDATE:	
  4315  007C                     ??_printcellParameters:	
  4316                           ; 1 bytes @ 0xC
  4317                           
  4318                           
  4319                           	psect	cstackBANK0
  4320  0020                     __pcstackBANK0:	
  4321                           ; 1 bytes @ 0xC
  4322                           
  4323  0020                     ?_setTemperatureLimitsint:	
  4324  0020                     ?_enableDischarging:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0020                     ?_enableCharging:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0020                     ??_fputs:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0020                     ??_toupper:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0020                     ??_atoi:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0020                     ?_beginAFEcommunication:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0020                     ?_AFE_Status:	
  4343                           ; 2 bytes @ 0x0
  4344                           
  4345  0020                     ?_stoa:	
  4346                           ; 2 bytes @ 0x0
  4347                           
  4348  0020                     ?___aodiv:	
  4349                           ; 2 bytes @ 0x0
  4350                           
  4351  0020                     ?___aomod:	
  4352                           ; 8 bytes @ 0x0
  4353                           
  4354  0020                     ?___lodiv:	
  4355                           ; 8 bytes @ 0x0
  4356                           
  4357  0020                     ?___lomod:	
  4358                           ; 8 bytes @ 0x0
  4359                           
  4360  0020                     AFE_FET_Status@sys_ctrl2:	
  4361                           ; 8 bytes @ 0x0
  4362                           
  4363  0020                     ___xxtofl@sign:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0020                     enableDischarging@enable:	
  4370                           ; 2 bytes @ 0x0
  4371                           
  4372  0020                     enableCharging@enable:	
  4373                           ; 2 bytes @ 0x0
  4374                           
  4375  0020                     stoa@fp:	
  4376                           ; 2 bytes @ 0x0
  4377                           
  4378  0020                     ___lmul@product:	
  4379                           ; 2 bytes @ 0x0
  4380                           
  4381  0020                     ___aodiv@divisor:	
  4382                           ; 4 bytes @ 0x0
  4383                           
  4384  0020                     ___aomod@divisor:	
  4385                           ; 8 bytes @ 0x0
  4386                           
  4387  0020                     ___lodiv@divisor:	
  4388                           ; 8 bytes @ 0x0
  4389                           
  4390  0020                     ___lomod@divisor:	
  4391                           ; 8 bytes @ 0x0
  4392                           
  4393                           
  4394                           ; 8 bytes @ 0x0
  4395  0020                     	ds	1
  4396  0021                     ___xxtofl@exp:	
  4397                           
  4398                           ; 1 bytes @ 0x1
  4399  0021                     	ds	1
  4400  0022                     ??_beginAFEcommunication:	
  4401  0022                     ??_enableDischarging:	
  4402                           ; 1 bytes @ 0x2
  4403                           
  4404  0022                     ??_enableCharging:	
  4405                           ; 1 bytes @ 0x2
  4406                           
  4407  0022                     fputs@c:	
  4408                           ; 1 bytes @ 0x2
  4409                           
  4410  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4411                           ; 1 bytes @ 0x2
  4412                           
  4413  0022                     AFE_Status@error_flag:	
  4414                           ; 2 bytes @ 0x2
  4415                           
  4416  0022                     stoa@s:	
  4417                           ; 2 bytes @ 0x2
  4418                           
  4419  0022                     ___xxtofl@arg:	
  4420                           ; 2 bytes @ 0x2
  4421                           
  4422                           
  4423                           ; 4 bytes @ 0x2
  4424  0022                     	ds	1
  4425  0023                     fputs@i:	
  4426                           
  4427                           ; 2 bytes @ 0x3
  4428  0023                     	ds	1
  4429  0024                     ?___aldiv:	
  4430  0024                     AFE_Status@sys_stat:	
  4431                           ; 4 bytes @ 0x4
  4432                           
  4433  0024                     setTemperatureLimitsint@minCharge_degC:	
  4434                           ; 1 bytes @ 0x4
  4435                           
  4436  0024                     atoi@neg:	
  4437                           ; 2 bytes @ 0x4
  4438                           
  4439  0024                     ___aldiv@divisor:	
  4440                           ; 2 bytes @ 0x4
  4441                           
  4442  0024                     stoa@nuls:	
  4443                           ; 4 bytes @ 0x4
  4444                           
  4445                           
  4446                           ; 7 bytes @ 0x4
  4447  0024                     	ds	1
  4448  0025                     fputs@s:	
  4449                           
  4450                           ; 1 bytes @ 0x5
  4451  0025                     	ds	1
  4452  0026                     ?_pad:	
  4453  0026                     ?___flmul:	
  4454                           ; 2 bytes @ 0x6
  4455                           
  4456  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4457                           ; 4 bytes @ 0x6
  4458                           
  4459  0026                     pad@fp:	
  4460                           ; 2 bytes @ 0x6
  4461                           
  4462  0026                     _atoi$1885:	
  4463                           ; 2 bytes @ 0x6
  4464                           
  4465  0026                     ___flmul@b:	
  4466                           ; 2 bytes @ 0x6
  4467                           
  4468                           
  4469                           ; 4 bytes @ 0x6
  4470  0026                     	ds	2
  4471  0028                     pad@buf:	
  4472  0028                     _atoi$1887:	
  4473                           ; 1 bytes @ 0x8
  4474                           
  4475  0028                     ___aldiv@dividend:	
  4476                           ; 2 bytes @ 0x8
  4477                           
  4478  0028                     ___aodiv@dividend:	
  4479                           ; 4 bytes @ 0x8
  4480                           
  4481  0028                     ___aomod@dividend:	
  4482                           ; 8 bytes @ 0x8
  4483                           
  4484  0028                     ___lodiv@dividend:	
  4485                           ; 8 bytes @ 0x8
  4486                           
  4487  0028                     ___lomod@dividend:	
  4488                           ; 8 bytes @ 0x8
  4489                           
  4490                           
  4491                           ; 8 bytes @ 0x8
  4492  0028                     	ds	1
  4493  0029                     pad@p:	
  4494                           
  4495                           ; 2 bytes @ 0x9
  4496  0029                     	ds	1
  4497  002A                     _atoi$1886:	
  4498  002A                     ___flmul@a:	
  4499                           ; 1 bytes @ 0xA
  4500                           
  4501                           
  4502                           ; 4 bytes @ 0xA
  4503  002A                     	ds	1
  4504  002B                     ??_pad:	
  4505  002B                     beginAFEcommunication@commSuccess:	
  4506                           ; 1 bytes @ 0xB
  4507                           
  4508  002B                     stoa@i:	
  4509                           ; 2 bytes @ 0xB
  4510                           
  4511  002B                     atoi@n:	
  4512                           ; 2 bytes @ 0xB
  4513                           
  4514                           
  4515                           ; 2 bytes @ 0xB
  4516  002B                     	ds	1
  4517  002C                     ___aldiv@counter:	
  4518  002C                     pad@i:	
  4519                           ; 1 bytes @ 0xC
  4520                           
  4521                           
  4522                           ; 2 bytes @ 0xC
  4523  002C                     	ds	1
  4524  002D                     ___aldiv@sign:	
  4525  002D                     beginAFEcommunication@i:	
  4526                           ; 1 bytes @ 0xD
  4527                           
  4528  002D                     stoa@w:	
  4529                           ; 2 bytes @ 0xD
  4530                           
  4531                           
  4532                           ; 2 bytes @ 0xD
  4533  002D                     	ds	1
  4534  002E                     ??___flmul:	
  4535  002E                     pad@w:	
  4536                           ; 1 bytes @ 0xE
  4537                           
  4538  002E                     ___aldiv@quotient:	
  4539                           ; 2 bytes @ 0xE
  4540                           
  4541                           
  4542                           ; 4 bytes @ 0xE
  4543  002E                     	ds	1
  4544  002F                     stoa@cp:	
  4545                           
  4546                           ; 2 bytes @ 0xF
  4547  002F                     	ds	1
  4548  0030                     ?_ctoa:	
  4549  0030                     ?_dtoa:	
  4550                           ; 2 bytes @ 0x10
  4551                           
  4552  0030                     ?_otoa:	
  4553                           ; 2 bytes @ 0x10
  4554                           
  4555  0030                     ?_utoa:	
  4556                           ; 2 bytes @ 0x10
  4557                           
  4558  0030                     ?_xtoa:	
  4559                           ; 2 bytes @ 0x10
  4560                           
  4561  0030                     ctoa@fp:	
  4562                           ; 2 bytes @ 0x10
  4563                           
  4564  0030                     dtoa@fp:	
  4565                           ; 2 bytes @ 0x10
  4566                           
  4567  0030                     otoa@fp:	
  4568                           ; 2 bytes @ 0x10
  4569                           
  4570  0030                     utoa@fp:	
  4571                           ; 2 bytes @ 0x10
  4572                           
  4573  0030                     xtoa@fp:	
  4574                           ; 2 bytes @ 0x10
  4575                           
  4576                           
  4577                           ; 2 bytes @ 0x10
  4578  0030                     	ds	1
  4579  0031                     stoa@p:	
  4580                           
  4581                           ; 2 bytes @ 0x11
  4582  0031                     	ds	1
  4583  0032                     ?_EUSART_Initialize:	
  4584  0032                     ?_setCellUndervoltageProtection:	
  4585                           ; 1 bytes @ 0x12
  4586                           
  4587  0032                     ?_setCellOvervoltageProtection:	
  4588                           ; 1 bytes @ 0x12
  4589                           
  4590  0032                     ctoa@c:	
  4591                           ; 1 bytes @ 0x12
  4592                           
  4593  0032                     setCellUndervoltageProtection@voltage_mV:	
  4594                           ; 1 bytes @ 0x12
  4595                           
  4596  0032                     setCellOvervoltageProtection@voltage_mV:	
  4597                           ; 2 bytes @ 0x12
  4598                           
  4599  0032                     EUSART_Initialize@baudrate:	
  4600                           ; 2 bytes @ 0x12
  4601                           
  4602  0032                     dtoa@d:	
  4603                           ; 4 bytes @ 0x12
  4604                           
  4605  0032                     otoa@d:	
  4606                           ; 8 bytes @ 0x12
  4607                           
  4608  0032                     utoa@d:	
  4609                           ; 8 bytes @ 0x12
  4610                           
  4611  0032                     xtoa@d:	
  4612                           ; 8 bytes @ 0x12
  4613                           
  4614                           
  4615                           ; 8 bytes @ 0x12
  4616  0032                     	ds	1
  4617  0033                     ??_ctoa:	
  4618  0033                     ___flmul@sign:	
  4619                           ; 1 bytes @ 0x13
  4620                           
  4621  0033                     stoa@l:	
  4622                           ; 1 bytes @ 0x13
  4623                           
  4624                           
  4625                           ; 2 bytes @ 0x13
  4626  0033                     	ds	1
  4627  0034                     setCellUndervoltageProtection@delay_s:	
  4628  0034                     setCellOvervoltageProtection@delay_s:	
  4629                           ; 2 bytes @ 0x14
  4630                           
  4631  0034                     ctoa@w:	
  4632                           ; 2 bytes @ 0x14
  4633                           
  4634  0034                     ___flmul@grs:	
  4635                           ; 2 bytes @ 0x14
  4636                           
  4637                           
  4638                           ; 4 bytes @ 0x14
  4639  0034                     	ds	2
  4640  0036                     ??_EUSART_Initialize:	
  4641  0036                     ??_setCellUndervoltageProtection:	
  4642                           ; 1 bytes @ 0x16
  4643                           
  4644  0036                     ??_setCellOvervoltageProtection:	
  4645                           ; 1 bytes @ 0x16
  4646                           
  4647                           
  4648                           ; 1 bytes @ 0x16
  4649  0036                     	ds	2
  4650  0038                     ___flmul@aexp:	
  4651                           
  4652                           ; 1 bytes @ 0x18
  4653  0038                     	ds	1
  4654  0039                     ___flmul@bexp:	
  4655                           
  4656                           ; 1 bytes @ 0x19
  4657  0039                     	ds	1
  4658  003A                     ??_dtoa:	
  4659  003A                     ??_otoa:	
  4660                           ; 1 bytes @ 0x1A
  4661                           
  4662  003A                     ??_utoa:	
  4663                           ; 1 bytes @ 0x1A
  4664                           
  4665  003A                     xtoa@x:	
  4666                           ; 1 bytes @ 0x1A
  4667                           
  4668  003A                     ___flmul@prod:	
  4669                           ; 1 bytes @ 0x1A
  4670                           
  4671                           
  4672                           ; 4 bytes @ 0x1A
  4673  003A                     	ds	1
  4674  003B                     ??_xtoa:	
  4675  003B                     utoa@p:	
  4676                           ; 1 bytes @ 0x1B
  4677                           
  4678                           
  4679                           ; 2 bytes @ 0x1B
  4680  003B                     	ds	2
  4681  003D                     _dtoa$1434:	
  4682  003D                     utoa@w:	
  4683                           ; 2 bytes @ 0x1D
  4684                           
  4685                           
  4686                           ; 2 bytes @ 0x1D
  4687  003D                     	ds	1
  4688  003E                     ___flmul@temp:	
  4689                           
  4690                           ; 2 bytes @ 0x1E
  4691  003E                     	ds	1
  4692  003F                     dtoa@p:	
  4693  003F                     utoa@n:	
  4694                           ; 2 bytes @ 0x1F
  4695                           
  4696                           
  4697                           ; 8 bytes @ 0x1F
  4698  003F                     	ds	1
  4699  0040                     ?___fldiv:	
  4700  0040                     ___fldiv@a:	
  4701                           ; 4 bytes @ 0x20
  4702                           
  4703                           
  4704                           ; 4 bytes @ 0x20
  4705  0040                     	ds	1
  4706  0041                     dtoa@w:	
  4707                           
  4708                           ; 2 bytes @ 0x21
  4709  0041                     	ds	1
  4710  0042                     otoa@p:	
  4711                           
  4712                           ; 2 bytes @ 0x22
  4713  0042                     	ds	1
  4714  0043                     dtoa@s:	
  4715  0043                     _xtoa$1470:	
  4716                           ; 2 bytes @ 0x23
  4717                           
  4718                           
  4719                           ; 2 bytes @ 0x23
  4720  0043                     	ds	1
  4721  0044                     setCellUndervoltageProtection@uv_trip:	
  4722  0044                     setCellOvervoltageProtection@ov_trip:	
  4723                           ; 1 bytes @ 0x24
  4724                           
  4725  0044                     otoa@t:	
  4726                           ; 1 bytes @ 0x24
  4727                           
  4728  0044                     ___fldiv@b:	
  4729                           ; 2 bytes @ 0x24
  4730                           
  4731                           
  4732                           ; 4 bytes @ 0x24
  4733  0044                     	ds	1
  4734  0045                     setCellUndervoltageProtection@i:	
  4735  0045                     setCellOvervoltageProtection@i:	
  4736                           ; 2 bytes @ 0x25
  4737                           
  4738  0045                     _xtoa$1471:	
  4739                           ; 2 bytes @ 0x25
  4740                           
  4741  0045                     dtoa@n:	
  4742                           ; 2 bytes @ 0x25
  4743                           
  4744                           
  4745                           ; 8 bytes @ 0x25
  4746  0045                     	ds	1
  4747  0046                     otoa@w:	
  4748                           
  4749                           ; 2 bytes @ 0x26
  4750  0046                     	ds	1
  4751  0047                     utoa@i:	
  4752  0047                     xtoa@p:	
  4753                           ; 2 bytes @ 0x27
  4754                           
  4755                           
  4756                           ; 2 bytes @ 0x27
  4757  0047                     	ds	1
  4758  0048                     ??___fldiv:	
  4759  0048                     otoa@n:	
  4760                           ; 1 bytes @ 0x28
  4761                           
  4762                           
  4763                           ; 8 bytes @ 0x28
  4764  0048                     	ds	1
  4765  0049                     xtoa@w:	
  4766                           
  4767                           ; 2 bytes @ 0x29
  4768  0049                     	ds	2
  4769  004B                     xtoa@n:	
  4770                           
  4771                           ; 8 bytes @ 0x2B
  4772  004B                     	ds	2
  4773  004D                     dtoa@i:	
  4774  004D                     ___fldiv@rem:	
  4775                           ; 2 bytes @ 0x2D
  4776                           
  4777                           
  4778                           ; 4 bytes @ 0x2D
  4779  004D                     	ds	3
  4780  0050                     otoa@i:	
  4781                           
  4782                           ; 2 bytes @ 0x30
  4783  0050                     	ds	1
  4784  0051                     ___fldiv@sign:	
  4785                           
  4786                           ; 1 bytes @ 0x31
  4787  0051                     	ds	1
  4788  0052                     ___fldiv@new_exp:	
  4789                           
  4790                           ; 2 bytes @ 0x32
  4791  0052                     	ds	1
  4792  0053                     xtoa@i:	
  4793                           
  4794                           ; 2 bytes @ 0x33
  4795  0053                     	ds	1
  4796  0054                     ___fldiv@grs:	
  4797                           
  4798                           ; 4 bytes @ 0x34
  4799  0054                     	ds	1
  4800  0055                     xtoa@c:	
  4801                           
  4802                           ; 2 bytes @ 0x35
  4803  0055                     	ds	2
  4804  0057                     ?_vfpfcnvrt:	
  4805  0057                     vfpfcnvrt@fp:	
  4806                           ; 2 bytes @ 0x37
  4807                           
  4808                           
  4809                           ; 2 bytes @ 0x37
  4810  0057                     	ds	1
  4811  0058                     ___fldiv@bexp:	
  4812                           
  4813                           ; 1 bytes @ 0x38
  4814  0058                     	ds	1
  4815  0059                     vfpfcnvrt@fmt:	
  4816  0059                     ___fldiv@aexp:	
  4817                           ; 1 bytes @ 0x39
  4818                           
  4819                           
  4820                           ; 1 bytes @ 0x39
  4821  0059                     	ds	1
  4822  005A                     ?___flge:	
  4823  005A                     ?___flneg:	
  4824                           ; 1 bit 
  4825                           
  4826  005A                     ?___fladd:	
  4827                           ; 4 bytes @ 0x3A
  4828                           
  4829  005A                     vfpfcnvrt@ap:	
  4830                           ; 4 bytes @ 0x3A
  4831                           
  4832  005A                     ___flge@ff1:	
  4833                           ; 1 bytes @ 0x3A
  4834                           
  4835  005A                     ___flneg@f1:	
  4836                           ; 4 bytes @ 0x3A
  4837                           
  4838  005A                     ___fladd@b:	
  4839                           ; 4 bytes @ 0x3A
  4840                           
  4841                           
  4842                           ; 4 bytes @ 0x3A
  4843  005A                     	ds	1
  4844  005B                     ??_vfpfcnvrt:	
  4845                           
  4846                           ; 1 bytes @ 0x3B
  4847  005B                     	ds	3
  4848  005E                     ___flge@ff2:	
  4849  005E                     ___fladd@a:	
  4850                           ; 4 bytes @ 0x3E
  4851                           
  4852                           
  4853                           ; 4 bytes @ 0x3E
  4854  005E                     	ds	3
  4855  0061                     ?_vfprintf:	
  4856  0061                     vfprintf@fp:	
  4857                           ; 2 bytes @ 0x41
  4858                           
  4859                           
  4860                           ; 2 bytes @ 0x41
  4861  0061                     	ds	1
  4862  0062                     ??___flge:	
  4863  0062                     ??___fladd:	
  4864                           ; 1 bytes @ 0x42
  4865                           
  4866                           
  4867                           ; 1 bytes @ 0x42
  4868  0062                     	ds	1
  4869  0063                     vfprintf@fmt:	
  4870                           
  4871                           ; 2 bytes @ 0x43
  4872  0063                     	ds	2
  4873  0065                     vfprintf@ap:	
  4874                           
  4875                           ; 1 bytes @ 0x45
  4876  0065                     	ds	1
  4877  0066                     ?_setShortCircuitProtection:	
  4878  0066                     ?_setOverCurrentDischargeProtection:	
  4879                           ; 1 bytes @ 0x46
  4880                           
  4881  0066                     ??_vfprintf:	
  4882                           ; 1 bytes @ 0x46
  4883                           
  4884  0066                     setShortCircuitProtection@current_mA:	
  4885                           ; 1 bytes @ 0x46
  4886                           
  4887  0066                     setOverCurrentDischargeProtection@current_mA:	
  4888                           ; 4 bytes @ 0x46
  4889                           
  4890                           
  4891                           ; 4 bytes @ 0x46
  4892  0066                     	ds	2
  4893  0068                     vfprintf@cfmt:	
  4894                           
  4895                           ; 2 bytes @ 0x48
  4896  0068                     	ds	2
  4897  006A                     ??_vsnprintf:	
  4898  006A                     ___fladd@signs:	
  4899                           ; 1 bytes @ 0x4A
  4900                           
  4901  006A                     setShortCircuitProtection@delay_us:	
  4902                           ; 1 bytes @ 0x4A
  4903                           
  4904  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4905                           ; 2 bytes @ 0x4A
  4906                           
  4907                           
  4908                           ; 2 bytes @ 0x4A
  4909  006A                     	ds	1
  4910  006B                     ___fladd@aexp:	
  4911                           
  4912                           ; 1 bytes @ 0x4B
  4913  006B                     	ds	1
  4914  006C                     ??_snprintf:	
  4915  006C                     ??_setShortCircuitProtection:	
  4916                           ; 1 bytes @ 0x4C
  4917                           
  4918  006C                     ??_setOverCurrentDischargeProtection:	
  4919                           ; 1 bytes @ 0x4C
  4920                           
  4921  006C                     ___fladd@bexp:	
  4922                           ; 1 bytes @ 0x4C
  4923                           
  4924                           
  4925                           ; 1 bytes @ 0x4C
  4926  006C                     	ds	1
  4927  006D                     ___fladd@grs:	
  4928                           
  4929                           ; 1 bytes @ 0x4D
  4930  006D                     	ds	1
  4931  006E                     ??_coulomb_counter:	
  4932                           
  4933                           ; 1 bytes @ 0x4E
  4934  006E                     	ds	1
  4935  006F                     snprintf@ap:	
  4936                           
  4937                           ; 1 bytes @ 0x4F
  4938  006F                     	ds	1
  4939                           
  4940                           	psect	maintext
  4941  3552                     __pmaintext:	
  4942 ;;
  4943 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4944 ;;
  4945 ;; *************** function _main *****************
  4946 ;; Defined at:
  4947 ;;		line 73 in file "main.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : B1F/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4963 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4964 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        2 bytes
  4966 ;; Hardware stack levels required when called:   12
  4967 ;; This function calls:
  4968 ;;		_EUSART_Initialize
  4969 ;;		_initClock
  4970 ;;		_initWDT
  4971 ;;		_init_GPIO
  4972 ;;		_init_I2C
  4973 ;;		_init_RGB
  4974 ;;		_init_TMR1
  4975 ;;		_init_TMR6
  4976 ;;		_statemachine
  4977 ;;		_watchdog_timeout_shutdown
  4978 ;; This function is called by:
  4979 ;;		Startup code after reset
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _main
  4985  3552                     _main:	
  4986                           
  4987                           ;main.c: 76:     initClock();
  4988                           
  4989                           ;incstack = 0
  4990                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4991  3552  31B2  2226  31B5   	fcall	_initClock
  4992                           
  4993                           ;main.c: 77:     init_GPIO();
  4994  3555  3188  2000  31B5   	fcall	_init_GPIO
  4995                           
  4996                           ;main.c: 78:     initWDT();
  4997  3558  31B2  2232  31B5   	fcall	_initWDT
  4998                           
  4999                           ;main.c: 79:     init_I2C();
  5000  355B  31B2  229E  31B5   	fcall	_init_I2C
  5001                           
  5002                           ;main.c: 80:     EUSART_Initialize(9600);
  5003  355E  3000               	movlw	0
  5004  355F  0020               	movlb	0	; select bank0
  5005  3560  00B5               	movwf	EUSART_Initialize@baudrate+3
  5006  3561  3000               	movlw	0
  5007  3562  00B4               	movwf	EUSART_Initialize@baudrate+2
  5008  3563  3025               	movlw	37
  5009  3564  00B3               	movwf	EUSART_Initialize@baudrate+1
  5010  3565  3080               	movlw	128
  5011  3566  00B2               	movwf	EUSART_Initialize@baudrate
  5012  3567  31AD  251A  31B5   	fcall	_EUSART_Initialize
  5013                           
  5014                           ;main.c: 81:     init_TMR1();
  5015  356A  31B2  2287  31B5   	fcall	_init_TMR1
  5016                           
  5017                           ;main.c: 82:     init_TMR6();
  5018  356D  31B2  22AE  31B5   	fcall	_init_TMR6
  5019                           
  5020                           ;main.c: 83:     init_RGB();
  5021  3570  31B2  222D  31B5   	fcall	_init_RGB
  5022                           
  5023                           ;main.c: 86:     watchdog_timeout_shutdown();
  5024  3573  31B3  2388  31B5   	fcall	_watchdog_timeout_shutdown
  5025  3576                     l7871:	
  5026                           
  5027                           ;main.c: 90:         statemachine();
  5028  3576  31A9  2172  31B5   	fcall	_statemachine
  5029                           
  5030                           ;main.c: 92:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5031  3579  3015               	movlw	21
  5032  357A  0021               	movlb	1	; select bank1
  5033  357B  00EF               	movwf	(??_main^(0+128)+1)
  5034  357C  304B               	movlw	75
  5035  357D  00EE               	movwf	??_main^(0+128)
  5036  357E  30BE               	movlw	190
  5037  357F                     u9757:	
  5038  357F  0B89               	decfsz	9,f
  5039  3580  2D7F               	goto	u9757
  5040  3581  0BEE               	decfsz	??_main^(0+128),f
  5041  3582  2D7F               	goto	u9757
  5042  3583  0BEF               	decfsz	(??_main^(0+128)+1),f
  5043  3584  2D7F               	goto	u9757
  5044  3585  0000               	nop
  5045  3586  2D76               	goto	l7871
  5046  3587                     __end_of_main:	
  5047                           
  5048                           	psect	text1
  5049  3388                     __ptext1:	
  5050 ;; *************** function _watchdog_timeout_shutdown *****************
  5051 ;; Defined at:
  5052 ;;		line 3 in file "algorithms.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:        2 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    2
  5073 ;; This function calls:
  5074 ;;		_RGB_color
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _watchdog_timeout_shutdown
  5082  3388                     _watchdog_timeout_shutdown:	
  5083                           
  5084                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5088  3388  0020               	movlb	0	; select bank0
  5089  3389  1A03               	btfsc	3,4	;volatile
  5090  338A  0008               	return
  5091                           
  5092                           ;algorithms.c: 6:         RGB_color(0);
  5093  338B  3000               	movlw	0
  5094  338C  00F1               	movwf	RGB_color@color
  5095  338D  00F2               	movwf	RGB_color@color+1
  5096  338E  31B3  23FA  31B3   	fcall	_RGB_color
  5097                           
  5098                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5099  3391  3029               	movlw	41
  5100  3392  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5101  3393  3096               	movlw	150
  5102  3394  00F3               	movwf	??_watchdog_timeout_shutdown
  5103  3395  307F               	movlw	127
  5104  3396                     u9767:	
  5105  3396  0B89               	decfsz	9,f
  5106  3397  2B96               	goto	u9767
  5107  3398  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5108  3399  2B96               	goto	u9767
  5109  339A  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5110  339B  2B96               	goto	u9767
  5111  339C  0000               	nop
  5112                           
  5113                           ;algorithms.c: 8:          currState = 3;
  5114  339D  3003               	movlw	3
  5115  339E  00F3               	movwf	??_watchdog_timeout_shutdown
  5116  339F  0873               	movf	??_watchdog_timeout_shutdown,w
  5117  33A0  0023               	movlb	3	; select bank3
  5118  33A1  00E9               	movwf	_currState^(0+384)
  5119  33A2  0008               	return
  5120  33A3                     __end_of_watchdog_timeout_shutdown:	
  5121                           
  5122                           	psect	text2
  5123  2972                     __ptext2:	
  5124 ;; *************** function _statemachine *****************
  5125 ;; Defined at:
  5126 ;;		line 98 in file "main.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  success         1   77[BANK1 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5141 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5143 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5144 ;;Total ram usage:        3 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   11
  5147 ;; This function calls:
  5148 ;;		_AFE_UPDATE
  5149 ;;		_EUSART_Write_Text
  5150 ;;		_RGB_AWAIT_AFE_CONN
  5151 ;;		_RGB_color
  5152 ;;		_beginAFEcommunication
  5153 ;;		_init_AFE
  5154 ;;		_printcellParameters
  5155 ;;		_snprintf
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _statemachine
  5163  2972                     _statemachine:	
  5164                           
  5165                           ;main.c: 101:        CCPR1L = 20;
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5169  2972  3014               	movlw	20
  5170  2973  0025               	movlb	5	; select bank5
  5171  2974  0091               	movwf	17	;volatile
  5172                           
  5173                           ;main.c: 103:     switch (currState) {
  5174  2975  29D3               	goto	l7847
  5175  2976                     l7815:	
  5176                           
  5177                           ;main.c: 106:             if (tmr1_flag) {
  5178  2976  0023               	movlb	3	; select bank3
  5179  2977  0867               	movf	_tmr1_flag^(0+384),w	;volatile
  5180  2978  1903               	btfsc	3,2
  5181  2979  0008               	return
  5182                           
  5183                           ;main.c: 107:                 tmr1_flag = 0;
  5184  297A  01E7               	clrf	_tmr1_flag^(0+384)	;volatile
  5185                           
  5186                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  5187  297B  31B4  241B  31A9   	fcall	_RGB_AWAIT_AFE_CONN
  5188                           
  5189                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  5190  297E  31AD  25C3  31A9   	fcall	_beginAFEcommunication
  5191  2981  0020               	movlb	0	; select bank0
  5192  2982  0820               	movf	?_beginAFEcommunication,w
  5193  2983  0021               	movlb	1	; select bank1
  5194  2984  00EB               	movwf	??_statemachine^(0+128)
  5195  2985  086B               	movf	??_statemachine^(0+128),w
  5196  2986  00ED               	movwf	statemachine@success^(0+128)
  5197                           
  5198                           ;main.c: 114:                 if (success) {
  5199  2987  086D               	movf	statemachine@success^(0+128),w
  5200  2988  1903               	btfsc	3,2
  5201  2989  0008               	return
  5202                           
  5203                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  5204  298A  0020               	movlb	0	; select bank0
  5205  298B  1018               	bcf	24,0	;volatile
  5206                           
  5207                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  5208  298C  0021               	movlb	1	; select bank1
  5209  298D  1011               	bcf	17,0	;volatile
  5210                           
  5211                           ;main.c: 117:                     RGB_color(0);
  5212  298E  3000               	movlw	0
  5213  298F  00F1               	movwf	RGB_color@color
  5214  2990  00F2               	movwf	RGB_color@color+1
  5215  2991  31B3  23FA         	fcall	_RGB_color
  5216                           
  5217                           ;main.c: 118:                     tmr1_flag = 0;
  5218  2993  0023               	movlb	3	; select bank3
  5219  2994  01E7               	clrf	_tmr1_flag^(0+384)	;volatile
  5220                           
  5221                           ;main.c: 131:                     currState = 1;
  5222  2995  01E9               	clrf	_currState^(0+384)
  5223  2996  0AE9               	incf	_currState^(0+384),f
  5224  2997  0008               	return
  5225  2998                     l7833:	
  5226                           
  5227                           ;main.c: 140:             init_AFE();
  5228  2998  31B7  27AA  31A9   	fcall	_init_AFE
  5229                           
  5230                           ;main.c: 159:             RGB_color(1);
  5231  299B  3001               	movlw	1
  5232  299C  00F1               	movwf	RGB_color@color
  5233  299D  3000               	movlw	0
  5234  299E  00F2               	movwf	RGB_color@color+1
  5235  299F  31B3  23FA         	fcall	_RGB_color
  5236                           
  5237                           ;main.c: 160:             currState = 2;
  5238  29A1  3002               	movlw	2
  5239  29A2  0021               	movlb	1	; select bank1
  5240  29A3  00EB               	movwf	??_statemachine^(0+128)
  5241  29A4  086B               	movf	??_statemachine^(0+128),w
  5242  29A5  0023               	movlb	3	; select bank3
  5243  29A6  00E9               	movwf	_currState^(0+384)
  5244                           
  5245                           ;main.c: 161:             break;
  5246  29A7  0008               	return
  5247  29A8                     l7837:	
  5248                           
  5249                           ;main.c: 165:             AFE_UPDATE();
  5250  29A8  31B6  262B  31A9   	fcall	_AFE_UPDATE
  5251  29AB  0064               	clrwdt	;# 
  5252                           
  5253                           ;main.c: 169:             printcellParameters();
  5254  29AC  31B6  2665  31A9   	fcall	_printcellParameters
  5255                           
  5256                           ;main.c: 171:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5257  29AF  300B               	movlw	11
  5258  29B0  0021               	movlb	1	; select bank1
  5259  29B1  00EC               	movwf	(??_statemachine^(0+128)+1)
  5260  29B2  3026               	movlw	38
  5261  29B3  00EB               	movwf	??_statemachine^(0+128)
  5262  29B4  305D               	movlw	93
  5263  29B5                     u9777:	
  5264  29B5  0B89               	decfsz	9,f
  5265  29B6  29B5               	goto	u9777
  5266  29B7  0BEB               	decfsz	??_statemachine^(0+128),f
  5267  29B8  29B5               	goto	u9777
  5268  29B9  0BEC               	decfsz	(??_statemachine^(0+128)+1),f
  5269  29BA  29B5               	goto	u9777
  5270  29BB  3200               	nop2
  5271                           
  5272                           ;main.c: 173:             break;
  5273  29BC  0008               	return
  5274  29BD                     l7841:	
  5275                           
  5276                           ;main.c: 177:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5277  29BD  3071               	movlw	113
  5278  29BE  00CC               	movwf	snprintf@s^(0+128)
  5279  29BF  3027               	movlw	39
  5280  29C0  00CD               	movwf	(snprintf@s^(0+128)+1)
  5281  29C1  307F               	movlw	127
  5282  29C2  00CE               	movwf	snprintf@n^(0+128)
  5283  29C3  3000               	movlw	0
  5284  29C4  00CF               	movwf	(snprintf@n^(0+128)+1)
  5285  29C5  3002               	movlw	low (STR_1| (0+32768))
  5286  29C6  00D0               	movwf	snprintf@fmt^(0+128)
  5287  29C7  30B8               	movlw	high (STR_1| (0+32768))
  5288  29C8  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5289  29C9  31B3  236D  31A9   	fcall	_snprintf
  5290                           
  5291                           ;main.c: 178:              EUSART_Write_Text(messageBuffer);
  5292  29CC  3071               	movlw	113
  5293  29CD  00F2               	movwf	EUSART_Write_Text@text
  5294  29CE  3027               	movlw	39
  5295  29CF  00F3               	movwf	EUSART_Write_Text@text+1
  5296  29D0  31B3  2338         	fcall	_EUSART_Write_Text
  5297                           
  5298                           ;main.c: 179:             break;
  5299  29D2  0008               	return
  5300  29D3                     l7847:	
  5301  29D3  0023               	movlb	3	; select bank3
  5302  29D4  0869               	movf	_currState^(0+384),w
  5303  29D5  0021               	movlb	1	; select bank1
  5304  29D6  00EB               	movwf	??_statemachine^(0+128)
  5305  29D7  01EC               	clrf	(??_statemachine^(0+128)+1)
  5306                           
  5307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5308                           ; Switch size 1, requested type "simple"
  5309                           ; Number of cases is 1, Range of values is 0 to 0
  5310                           ; switch strategies available:
  5311                           ; Name         Instructions Cycles
  5312                           ; simple_byte            4     3 (average)
  5313                           ; direct_byte            8     6 (fixed)
  5314                           ; jumptable            260     6 (fixed)
  5315                           ;	Chosen strategy is simple_byte
  5316  29D8  086C               	movf	(??_statemachine+1)^(0+128),w
  5317  29D9  3A00               	xorlw	0	; case 0
  5318  29DA  1903               	skipnz
  5319  29DB  29DD               	goto	l8031
  5320  29DC  29EB               	goto	l206
  5321  29DD                     l8031:	
  5322                           
  5323                           ; Switch size 1, requested type "simple"
  5324                           ; Number of cases is 4, Range of values is 0 to 3
  5325                           ; switch strategies available:
  5326                           ; Name         Instructions Cycles
  5327                           ; simple_byte           13     7 (average)
  5328                           ; direct_byte           14     6 (fixed)
  5329                           ; jumptable            260     6 (fixed)
  5330                           ;	Chosen strategy is simple_byte
  5331  29DD  086B               	movf	??_statemachine^(0+128),w
  5332  29DE  3A00               	xorlw	0	; case 0
  5333  29DF  1903               	skipnz
  5334  29E0  2976               	goto	l7815
  5335  29E1  3A01               	xorlw	1	; case 1
  5336  29E2  1903               	skipnz
  5337  29E3  2998               	goto	l7833
  5338  29E4  3A03               	xorlw	3	; case 2
  5339  29E5  1903               	skipnz
  5340  29E6  29A8               	goto	l7837
  5341  29E7  3A01               	xorlw	1	; case 3
  5342  29E8  1903               	skipnz
  5343  29E9  29BD               	goto	l7841
  5344  29EA  29EB               	goto	l206
  5345  29EB                     l206:	
  5346  29EB  0008               	return
  5347  29EC                     __end_of_statemachine:	
  5348                           
  5349                           	psect	text3
  5350  3665                     __ptext3:	
  5351 ;; *************** function _printcellParameters *****************
  5352 ;; Defined at:
  5353 ;;		line 328 in file "BQ76920.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   10
  5374 ;; This function calls:
  5375 ;;		_EUSART_Write_Text
  5376 ;;		_snprintf
  5377 ;; This function is called by:
  5378 ;;		_statemachine
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function _printcellParameters
  5384  3665                     _printcellParameters:	
  5385                           
  5386                           ;BQ76920.c: 371:     snprintf(messageBuffer, 127, "%d,",temperatureThermistor);
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5390  3665  3071               	movlw	113
  5391  3666  0021               	movlb	1	; select bank1
  5392  3667  00CC               	movwf	snprintf@s^(0+128)
  5393  3668  3027               	movlw	39
  5394  3669  00CD               	movwf	(snprintf@s^(0+128)+1)
  5395  366A  307F               	movlw	127
  5396  366B  00CE               	movwf	snprintf@n^(0+128)
  5397  366C  3000               	movlw	0
  5398  366D  00CF               	movwf	(snprintf@n^(0+128)+1)
  5399  366E  30D6               	movlw	low (STR_2| (0+32768))
  5400  366F  00D0               	movwf	snprintf@fmt^(0+128)
  5401  3670  30B9               	movlw	high (STR_2| (0+32768))
  5402  3671  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5403  3672  0023               	movlb	3	; select bank3
  5404  3673  0843               	movf	(_temperatureThermistor+3)^(0+384),w
  5405  3674  0021               	movlb	1	; select bank1
  5406  3675  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5407  3676  0023               	movlb	3	; select bank3
  5408  3677  0842               	movf	(_temperatureThermistor+2)^(0+384),w
  5409  3678  0021               	movlb	1	; select bank1
  5410  3679  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5411  367A  0023               	movlb	3	; select bank3
  5412  367B  0841               	movf	(_temperatureThermistor+1)^(0+384),w
  5413  367C  0021               	movlb	1	; select bank1
  5414  367D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5415  367E  0023               	movlb	3	; select bank3
  5416  367F  0840               	movf	_temperatureThermistor^(0+384),w
  5417  3680  0021               	movlb	1	; select bank1
  5418  3681  00D2               	movwf	(?_snprintf^(0+128)+6)
  5419  3682  31B3  236D  31B6   	fcall	_snprintf
  5420                           
  5421                           ;BQ76920.c: 372:     EUSART_Write_Text(messageBuffer);
  5422  3685  3071               	movlw	113
  5423  3686  00F2               	movwf	EUSART_Write_Text@text
  5424  3687  3027               	movlw	39
  5425  3688  00F3               	movwf	EUSART_Write_Text@text+1
  5426  3689  31B3  2338  31B6   	fcall	_EUSART_Write_Text
  5427                           
  5428                           ;BQ76920.c: 373:     snprintf(messageBuffer, 127, "%d\n\r,",rts);
  5429  368C  3071               	movlw	113
  5430  368D  0021               	movlb	1	; select bank1
  5431  368E  00CC               	movwf	snprintf@s^(0+128)
  5432  368F  3027               	movlw	39
  5433  3690  00CD               	movwf	(snprintf@s^(0+128)+1)
  5434  3691  307F               	movlw	127
  5435  3692  00CE               	movwf	snprintf@n^(0+128)
  5436  3693  3000               	movlw	0
  5437  3694  00CF               	movwf	(snprintf@n^(0+128)+1)
  5438  3695  309C               	movlw	low (STR_3| (0+32768))
  5439  3696  00D0               	movwf	snprintf@fmt^(0+128)
  5440  3697  30B9               	movlw	high (STR_3| (0+32768))
  5441  3698  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5442  3699  0023               	movlb	3	; select bank3
  5443  369A  083F               	movf	(_rts+3)^(0+384),w
  5444  369B  0021               	movlb	1	; select bank1
  5445  369C  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5446  369D  0023               	movlb	3	; select bank3
  5447  369E  083E               	movf	(_rts+2)^(0+384),w
  5448  369F  0021               	movlb	1	; select bank1
  5449  36A0  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5450  36A1  0023               	movlb	3	; select bank3
  5451  36A2  083D               	movf	(_rts+1)^(0+384),w
  5452  36A3  0021               	movlb	1	; select bank1
  5453  36A4  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5454  36A5  0023               	movlb	3	; select bank3
  5455  36A6  083C               	movf	_rts^(0+384),w
  5456  36A7  0021               	movlb	1	; select bank1
  5457  36A8  00D2               	movwf	(?_snprintf^(0+128)+6)
  5458  36A9  31B3  236D  31B6   	fcall	_snprintf
  5459                           
  5460                           ;BQ76920.c: 374:     EUSART_Write_Text(messageBuffer);
  5461  36AC  3071               	movlw	113
  5462  36AD  00F2               	movwf	EUSART_Write_Text@text
  5463  36AE  3027               	movlw	39
  5464  36AF  00F3               	movwf	EUSART_Write_Text@text+1
  5465  36B0  31B3  2338         	fcall	_EUSART_Write_Text
  5466  36B2  0008               	return
  5467  36B3                     __end_of_printcellParameters:	
  5468                           
  5469                           	psect	text4
  5470  336D                     __ptext4:	
  5471 ;; *************** function _snprintf *****************
  5472 ;; Defined at:
  5473 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5476 ;;		 -> messageBuffer(127), 
  5477 ;;  n               2   46[BANK1 ] unsigned int 
  5478 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5479 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5480 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5481 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5482 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  ret             2    0        int 
  5485 ;;  ap              1   79[BANK0 ] PTR void [1]
  5486 ;;		 -> ?_snprintf(2), 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2   44[BANK1 ] int 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5496 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5499 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5500 ;;Total ram usage:       14 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    9
  5503 ;; This function calls:
  5504 ;;		_vsnprintf
  5505 ;; This function is called by:
  5506 ;;		_statemachine
  5507 ;;		_printcellParameters
  5508 ;;		_printotAFERegisters
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _snprintf
  5514  336D                     _snprintf:	
  5515                           
  5516                           ;incstack = 0
  5517                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5518  336D  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5519  336E  0020               	movlb	0	; select bank0
  5520  336F  00EC               	movwf	??_snprintf
  5521  3370  086C               	movf	??_snprintf,w
  5522  3371  00EF               	movwf	snprintf@ap
  5523  3372  0021               	movlb	1	; select bank1
  5524  3373  084D               	movf	(snprintf@s+1)^(0+128),w
  5525  3374  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5526  3375  084C               	movf	snprintf@s^(0+128),w
  5527  3376  00BB               	movwf	vsnprintf@s^(0+128)
  5528  3377  084F               	movf	(snprintf@n+1)^(0+128),w
  5529  3378  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5530  3379  084E               	movf	snprintf@n^(0+128),w
  5531  337A  00BD               	movwf	vsnprintf@n^(0+128)
  5532  337B  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5533  337C  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5534  337D  0850               	movf	snprintf@fmt^(0+128),w
  5535  337E  00BF               	movwf	vsnprintf@fmt^(0+128)
  5536  337F  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5537  3380  0020               	movlb	0	; select bank0
  5538  3381  00EC               	movwf	??_snprintf
  5539  3382  086C               	movf	??_snprintf,w
  5540  3383  0021               	movlb	1	; select bank1
  5541  3384  00C1               	movwf	vsnprintf@ap^(0+128)
  5542  3385  31AA  22E4         	fcall	_vsnprintf
  5543  3387  0008               	return
  5544  3388                     __end_of_snprintf:	
  5545                           
  5546                           	psect	text5
  5547  2AE4                     __ptext5:	
  5548 ;; *************** function _vsnprintf *****************
  5549 ;; Defined at:
  5550 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5553 ;;		 -> messageBuffer(127), 
  5554 ;;  n               2   29[BANK1 ] unsigned int 
  5555 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5556 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5557 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5558 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5559 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5560 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5561 ;;		 -> snprintf@ap(1), 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5564 ;;  cnt             2   36[BANK1 ] int 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2   27[BANK1 ] int 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5574 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5575 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5577 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5578 ;;Total ram usage:       19 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    8
  5581 ;; This function calls:
  5582 ;;		_vfprintf
  5583 ;; This function is called by:
  5584 ;;		_snprintf
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _vsnprintf
  5590  2AE4                     _vsnprintf:	
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5594  2AE4  3080               	movlw	128
  5595  2AE5  0021               	movlb	1	; select bank1
  5596  2AE6  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5597  2AE7  3000               	movlw	0
  5598  2AE8  1903               	skipnz
  5599  2AE9  023D               	subwf	vsnprintf@n^(0+128),w
  5600  2AEA  1C03               	skipc
  5601  2AEB  2AF7               	goto	l7421
  5602  2AEC  304B               	movlw	75
  5603  2AED  0023               	movlb	3	; select bank3
  5604  2AEE  00C8               	movwf	_errno^(0+384)
  5605  2AEF  3000               	movlw	0
  5606  2AF0  00C9               	movwf	(_errno^(0+384)+1)
  5607  2AF1  30FF               	movlw	255
  5608  2AF2  0021               	movlb	1	; select bank1
  5609  2AF3  00BB               	movwf	?_vsnprintf^(0+128)
  5610  2AF4  30FF               	movlw	255
  5611  2AF5  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5612  2AF6  0008               	return
  5613  2AF7                     l7421:	
  5614  2AF7  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5615  2AF8  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5616  2AF9  083B               	movf	vsnprintf@s^(0+128),w
  5617  2AFA  00C6               	movwf	vsnprintf@f^(0+128)
  5618  2AFB  3000               	movlw	0
  5619  2AFC  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5620  2AFD  3002               	movlw	2
  5621  2AFE  1903               	skipnz
  5622  2AFF  023D               	subwf	vsnprintf@n^(0+128),w
  5623  2B00  1C03               	skipc
  5624  2B01  2B0B               	goto	l7427
  5625  2B02  083D               	movf	vsnprintf@n^(0+128),w
  5626  2B03  3EFF               	addlw	255
  5627  2B04  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5628  2B05  30FF               	movlw	255
  5629  2B06  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5630  2B07  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5631  2B08  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5632  2B09  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5633  2B0A  2B13               	goto	l7429
  5634  2B0B                     l7427:	
  5635  2B0B  3001               	movlw	1
  5636  2B0C  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5637  2B0D  3000               	movlw	0
  5638  2B0E  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5639  2B0F  3001               	movlw	1
  5640  2B10  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5641  2B11  3000               	movlw	0
  5642  2B12  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5643  2B13                     l7429:	
  5644  2B13  30C6               	movlw	low vsnprintf@f
  5645  2B14  0020               	movlb	0	; select bank0
  5646  2B15  00E1               	movwf	vfprintf@fp
  5647  2B16  3000               	movlw	high vsnprintf@f
  5648  2B17  00E2               	movwf	vfprintf@fp+1
  5649  2B18  0021               	movlb	1	; select bank1
  5650  2B19  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5651  2B1A  0020               	movlb	0	; select bank0
  5652  2B1B  00E4               	movwf	vfprintf@fmt+1
  5653  2B1C  0021               	movlb	1	; select bank1
  5654  2B1D  083F               	movf	vsnprintf@fmt^(0+128),w
  5655  2B1E  0020               	movlb	0	; select bank0
  5656  2B1F  00E3               	movwf	vfprintf@fmt
  5657  2B20  0021               	movlb	1	; select bank1
  5658  2B21  0841               	movf	vsnprintf@ap^(0+128),w
  5659  2B22  0020               	movlb	0	; select bank0
  5660  2B23  00EA               	movwf	??_vsnprintf
  5661  2B24  086A               	movf	??_vsnprintf,w
  5662  2B25  00E5               	movwf	vfprintf@ap
  5663  2B26  31B4  24BA  31AA   	fcall	_vfprintf
  5664  2B29  0020               	movlb	0	; select bank0
  5665  2B2A  0862               	movf	?_vfprintf+1,w
  5666  2B2B  0021               	movlb	1	; select bank1
  5667  2B2C  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5668  2B2D  0020               	movlb	0	; select bank0
  5669  2B2E  0861               	movf	?_vfprintf,w
  5670  2B2F  0021               	movlb	1	; select bank1
  5671  2B30  00C4               	movwf	vsnprintf@cnt^(0+128)
  5672  2B31  083D               	movf	vsnprintf@n^(0+128),w
  5673  2B32  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5674  2B33  1D03               	btfss	3,2
  5675  2B34  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5676  2B35  2B5C               	goto	l7443
  5677  2B36  083D               	movf	vsnprintf@n^(0+128),w
  5678  2B37  3EFF               	addlw	255
  5679  2B38  0020               	movlb	0	; select bank0
  5680  2B39  00EA               	movwf	??_vsnprintf
  5681  2B3A  30FF               	movlw	255
  5682  2B3B  0021               	movlb	1	; select bank1
  5683  2B3C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5684  2B3D  0020               	movlb	0	; select bank0
  5685  2B3E  00EB               	movwf	??_vsnprintf+1
  5686  2B3F  086B               	movf	??_vsnprintf+1,w
  5687  2B40  0021               	movlb	1	; select bank1
  5688  2B41  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5689  2B42  1D03               	skipz
  5690  2B43  2B48               	goto	u9355
  5691  2B44  0020               	movlb	0	; select bank0
  5692  2B45  086A               	movf	??_vsnprintf,w
  5693  2B46  0021               	movlb	1	; select bank1
  5694  2B47  0244               	subwf	vsnprintf@cnt^(0+128),w
  5695  2B48                     u9355:	
  5696  2B48  1C03               	skipc
  5697  2B49  2B51               	goto	l7439
  5698  2B4A  083D               	movf	vsnprintf@n^(0+128),w
  5699  2B4B  3EFF               	addlw	255
  5700  2B4C  00C2               	movwf	_vsnprintf$2057^(0+128)
  5701  2B4D  30FF               	movlw	255
  5702  2B4E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5703  2B4F  00C3               	movwf	(_vsnprintf$2057+1)^(0+128)
  5704  2B50  2B55               	goto	l7441
  5705  2B51                     l7439:	
  5706  2B51  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5707  2B52  00C3               	movwf	(_vsnprintf$2057+1)^(0+128)
  5708  2B53  0844               	movf	vsnprintf@cnt^(0+128),w
  5709  2B54  00C2               	movwf	_vsnprintf$2057^(0+128)
  5710  2B55                     l7441:	
  5711  2B55  0842               	movf	_vsnprintf$2057^(0+128),w
  5712  2B56  073B               	addwf	vsnprintf@s^(0+128),w
  5713  2B57  0086               	movwf	6
  5714  2B58  0843               	movf	(_vsnprintf$2057+1)^(0+128),w
  5715  2B59  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5716  2B5A  0087               	movwf	7
  5717  2B5B  0181               	clrf	1
  5718  2B5C                     l7443:	
  5719  2B5C  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5720  2B5D  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5721  2B5E  0844               	movf	vsnprintf@cnt^(0+128),w
  5722  2B5F  00BB               	movwf	?_vsnprintf^(0+128)
  5723  2B60  0008               	return
  5724  2B61                     __end_of_vsnprintf:	
  5725                           
  5726                           	psect	text6
  5727  34BA                     __ptext6:	
  5728 ;; *************** function _vfprintf *****************
  5729 ;; Defined at:
  5730 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5733 ;;		 -> vsnprintf@f(6), 
  5734 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5735 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5736 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5737 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5738 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5739 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5740 ;;		 -> snprintf@ap(1), 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5743 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5744 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5745 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5746 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  2   65[BANK0 ] int 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5756 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5759 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5760 ;;Total ram usage:        9 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    7
  5763 ;; This function calls:
  5764 ;;		_vfpfcnvrt
  5765 ;; This function is called by:
  5766 ;;		_vsnprintf
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           
  5771                           ;psect for function _vfprintf
  5772  34BA                     _vfprintf:	
  5773                           
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5778  34BA  0020               	movlb	0	; select bank0
  5779  34BB  0864               	movf	vfprintf@fmt+1,w
  5780  34BC  00E9               	movwf	vfprintf@cfmt+1
  5781  34BD  0863               	movf	vfprintf@fmt,w
  5782  34BE  00E8               	movwf	vfprintf@cfmt
  5783                           
  5784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5785  34BF  0022               	movlb	2	; select bank2
  5786  34C0  01E2               	clrf	_nout^(0+256)
  5787  34C1  01E3               	clrf	(_nout+1)^(0+256)
  5788  34C2                     l7327:	
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5790                           
  5791                           
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5793  34C2  0020               	movlb	0	; select bank0
  5794  34C3  0868               	movf	vfprintf@cfmt,w
  5795  34C4  0084               	movwf	4
  5796  34C5  0869               	movf	vfprintf@cfmt+1,w
  5797  34C6  0085               	movwf	5
  5798  34C7  0012               	moviw fsr0++
  5799  34C8  1903               	btfsc	3,2
  5800  34C9  2CE2               	goto	l7329
  5801                           
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5803  34CA  0862               	movf	vfprintf@fp+1,w
  5804  34CB  00D8               	movwf	vfpfcnvrt@fp+1
  5805  34CC  0861               	movf	vfprintf@fp,w
  5806  34CD  00D7               	movwf	vfpfcnvrt@fp
  5807  34CE  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5808  34CF  00E6               	movwf	??_vfprintf
  5809  34D0  0866               	movf	??_vfprintf,w
  5810  34D1  00D9               	movwf	vfpfcnvrt@fmt
  5811  34D2  0865               	movf	vfprintf@ap,w
  5812  34D3  00E7               	movwf	??_vfprintf+1
  5813  34D4  0867               	movf	??_vfprintf+1,w
  5814  34D5  00DA               	movwf	vfpfcnvrt@ap
  5815  34D6  319E  265C  31B4   	fcall	_vfpfcnvrt
  5816  34D9  0020               	movlb	0	; select bank0
  5817  34DA  0857               	movf	?_vfpfcnvrt,w
  5818  34DB  0022               	movlb	2	; select bank2
  5819  34DC  07E2               	addwf	_nout^(0+256),f
  5820  34DD  0020               	movlb	0	; select bank0
  5821  34DE  0858               	movf	?_vfpfcnvrt+1,w
  5822  34DF  0022               	movlb	2	; select bank2
  5823  34E0  3DE3               	addwfc	(_nout+1)^(0+256),f
  5824  34E1  2CC2               	goto	l7327
  5825  34E2                     l7329:	
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5828  34E2  0022               	movlb	2	; select bank2
  5829  34E3  0863               	movf	(_nout+1)^(0+256),w
  5830  34E4  0020               	movlb	0	; select bank0
  5831  34E5  00E2               	movwf	?_vfprintf+1
  5832  34E6  0022               	movlb	2	; select bank2
  5833  34E7  0862               	movf	_nout^(0+256),w
  5834  34E8  0020               	movlb	0	; select bank0
  5835  34E9  00E1               	movwf	?_vfprintf
  5836  34EA  0008               	return
  5837  34EB                     __end_of_vfprintf:	
  5838                           
  5839                           	psect	text7
  5840  1E5C                     __ptext7:	
  5841 ;; *************** function _vfpfcnvrt *****************
  5842 ;; Defined at:
  5843 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5846 ;;		 -> vsnprintf@f(6), 
  5847 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5848 ;;		 -> vfprintf@cfmt(2), 
  5849 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5850 ;;		 -> snprintf@ap(1), 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  llu             8   19[BANK1 ] unsigned long long 
  5853 ;;  ll              8    8[BANK1 ] long long 
  5854 ;;  f               4    0        long long 
  5855 ;;  ct              3    0        unsigned char [3]
  5856 ;;  vp              2   16[BANK1 ] PTR void 
  5857 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  5858 ;;  done            2    2[BANK1 ] int 
  5859 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5860 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  5861 ;;  i               2    0        int 
  5862 ;;  c               1   18[BANK1 ] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2   55[BANK0 ] int 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:       37 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    6
  5879 ;; This function calls:
  5880 ;;		_atoi
  5881 ;;		_ctoa
  5882 ;;		_dtoa
  5883 ;;		_fputc
  5884 ;;		_isdigit
  5885 ;;		_otoa
  5886 ;;		_stoa
  5887 ;;		_strncmp
  5888 ;;		_utoa
  5889 ;;		_xtoa
  5890 ;; This function is called by:
  5891 ;;		_vfprintf
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function _vfpfcnvrt
  5897  1E5C                     _vfpfcnvrt:	
  5898                           
  5899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5903  1E5C  0020               	movlb	0	; select bank0
  5904  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5905  1E5E  0086               	movwf	6
  5906  1E5F  0187               	clrf	7
  5907  1E60  3F40               	moviw [0]fsr1
  5908  1E61  00DB               	movwf	??_vfpfcnvrt
  5909  1E62  3F41               	moviw [1]fsr1
  5910  1E63  00DC               	movwf	??_vfpfcnvrt+1
  5911  1E64  085B               	movf	??_vfpfcnvrt,w
  5912  1E65  0084               	movwf	4
  5913  1E66  085C               	movf	??_vfpfcnvrt+1,w
  5914  1E67  0085               	movwf	5
  5915  1E68  0012               	moviw fsr0++
  5916  1E69  3A25               	xorlw	37
  5917  1E6A  1D03               	btfss	3,2
  5918  1E6B  2FFE               	goto	L7
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5921  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  5922  1E6D  0086               	movwf	6
  5923  1E6E  0187               	clrf	7
  5924  1E6F  3001               	movlw	1
  5925  1E70  0781               	addwf	1,f
  5926  1E71  3141               	addfsr 1,1
  5927  1E72  1803               	skipnc
  5928  1E73  0A81               	incf	1,f
  5929                           
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5931  1E74  0022               	movlb	2	; select bank2
  5932  1E75  01E4               	clrf	_width^(0+256)
  5933  1E76  01E5               	clrf	(_width+1)^(0+256)
  5934  1E77  01E8               	clrf	_flags^(0+256)
  5935  1E78  01E9               	clrf	(_flags+1)^(0+256)
  5936                           
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5938  1E79  30FF               	movlw	255
  5939  1E7A  00E6               	movwf	_prec^(0+256)
  5940  1E7B  30FF               	movlw	255
  5941  1E7C  00E7               	movwf	(_prec^(0+256)+1)
  5942                           
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5944  1E7D  0021               	movlb	1	; select bank1
  5945  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5946  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5947                           
  5948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5949  1E80  2E9E               	goto	l6963
  5950  1E81                     l959:	
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5952                           
  5953                           
  5954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5955  1E81  0022               	movlb	2	; select bank2
  5956  1E82  1468               	bsf	_flags^(0+256),0
  5957  1E83                     l6947:	
  5958                           
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5960  1E83  0020               	movlb	0	; select bank0
  5961  1E84  0859               	movf	vfpfcnvrt@fmt,w
  5962  1E85  0086               	movwf	6
  5963  1E86  0187               	clrf	7
  5964  1E87  3001               	movlw	1
  5965  1E88  0781               	addwf	1,f
  5966  1E89  3141               	addfsr 1,1
  5967  1E8A  1803               	skipnc
  5968  1E8B  0A81               	incf	1,f
  5969                           
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5971  1E8C  2E9E               	goto	l6963
  5972  1E8D                     l961:	
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5974                           
  5975                           
  5976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5977  1E8D  0022               	movlb	2	; select bank2
  5978  1E8E  14E8               	bsf	_flags^(0+256),1
  5979  1E8F  2E83               	goto	l6947
  5980  1E90                     l962:	
  5981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5982                           
  5983                           
  5984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5985  1E90  0022               	movlb	2	; select bank2
  5986  1E91  1568               	bsf	_flags^(0+256),2
  5987  1E92  2E83               	goto	l6947
  5988  1E93                     l963:	
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5990                           
  5991                           
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5993  1E93  0022               	movlb	2	; select bank2
  5994  1E94  15E8               	bsf	_flags^(0+256),3
  5995  1E95  2E83               	goto	l6947
  5996  1E96                     l964:	
  5997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5998                           
  5999                           
  6000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6001  1E96  0022               	movlb	2	; select bank2
  6002  1E97  1668               	bsf	_flags^(0+256),4
  6003  1E98  2E83               	goto	l6947
  6004  1E99                     l6957:	
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6007  1E99  3001               	movlw	1
  6008  1E9A  0021               	movlb	1	; select bank1
  6009  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6010  1E9C  3000               	movlw	0
  6011  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6012  1E9E                     l6963:	
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6014                           
  6015                           
  6016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6017  1E9E  0021               	movlb	1	; select bank1
  6018  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6019  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6020  1EA1  1D03               	btfss	3,2
  6021  1EA2  2EC9               	goto	l966
  6022  1EA3  0020               	movlb	0	; select bank0
  6023  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6024  1EA5  0086               	movwf	6
  6025  1EA6  0187               	clrf	7
  6026  1EA7  3F40               	moviw [0]fsr1
  6027  1EA8  00DB               	movwf	??_vfpfcnvrt
  6028  1EA9  3F41               	moviw [1]fsr1
  6029  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6030  1EAB  085B               	movf	??_vfpfcnvrt,w
  6031  1EAC  0084               	movwf	4
  6032  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6033  1EAE  0085               	movwf	5
  6034  1EAF  0800               	movf	0,w	;code access
  6035  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6036  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6037                           
  6038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6039                           ; Switch size 1, requested type "simple"
  6040                           ; Number of cases is 1, Range of values is 0 to 0
  6041                           ; switch strategies available:
  6042                           ; Name         Instructions Cycles
  6043                           ; simple_byte            4     3 (average)
  6044                           ; direct_byte            8     6 (fixed)
  6045                           ; jumptable            260     6 (fixed)
  6046                           ;	Chosen strategy is simple_byte
  6047  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6048  1EB3  3A00               	xorlw	0	; case 0
  6049  1EB4  1903               	skipnz
  6050  1EB5  2EB7               	goto	l8033
  6051  1EB6  2E99               	goto	l6957
  6052  1EB7                     l8033:	
  6053                           
  6054                           ; Switch size 1, requested type "simple"
  6055                           ; Number of cases is 5, Range of values is 32 to 48
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte           16     9 (average)
  6059                           ; direct_byte           43     9 (fixed)
  6060                           ; jumptable            263     9 (fixed)
  6061                           ;	Chosen strategy is simple_byte
  6062  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6063  1EB8  3A20               	xorlw	32	; case 32
  6064  1EB9  1903               	skipnz
  6065  1EBA  2E93               	goto	l963
  6066  1EBB  3A03               	xorlw	3	; case 35
  6067  1EBC  1903               	skipnz
  6068  1EBD  2E96               	goto	l964
  6069  1EBE  3A08               	xorlw	8	; case 43
  6070  1EBF  1903               	skipnz
  6071  1EC0  2E90               	goto	l962
  6072  1EC1  3A06               	xorlw	6	; case 45
  6073  1EC2  1903               	skipnz
  6074  1EC3  2E81               	goto	l959
  6075  1EC4  3A1D               	xorlw	29	; case 48
  6076  1EC5  1903               	skipnz
  6077  1EC6  2E8D               	goto	l961
  6078  1EC7  2E99               	goto	l6957
  6079  1EC8  2E9E               	goto	l6963
  6080  1EC9                     l966:	
  6081                           
  6082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6083  1EC9  0022               	movlb	2	; select bank2
  6084  1ECA  1C68               	btfss	_flags^(0+256),0
  6085  1ECB  2ED0               	goto	l6967
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6088  1ECC  30FD               	movlw	253
  6089  1ECD  05E8               	andwf	_flags^(0+256),f
  6090  1ECE  30FF               	movlw	255
  6091  1ECF  05E9               	andwf	(_flags+1)^(0+256),f
  6092  1ED0                     l6967:	
  6093                           
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6095  1ED0  0020               	movlb	0	; select bank0
  6096  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6097  1ED2  0086               	movwf	6
  6098  1ED3  0187               	clrf	7
  6099  1ED4  3F40               	moviw [0]fsr1
  6100  1ED5  00DB               	movwf	??_vfpfcnvrt
  6101  1ED6  3F41               	moviw [1]fsr1
  6102  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6103  1ED8  085B               	movf	??_vfpfcnvrt,w
  6104  1ED9  0084               	movwf	4
  6105  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6106  1EDB  0085               	movwf	5
  6107  1EDC  0012               	moviw fsr0++
  6108  1EDD  3A2A               	xorlw	42
  6109  1EDE  1D03               	btfss	3,2
  6110  1EDF  2EFE               	goto	l6979
  6111                           
  6112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6113  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6114  1EE1  0086               	movwf	6
  6115  1EE2  0187               	clrf	7
  6116  1EE3  3001               	movlw	1
  6117  1EE4  0781               	addwf	1,f
  6118  1EE5  3141               	addfsr 1,1
  6119  1EE6  1803               	skipnc
  6120  1EE7  0A81               	incf	1,f
  6121                           
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6123  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6124  1EE9  0086               	movwf	6
  6125  1EEA  0187               	clrf	7
  6126  1EEB  0801               	movf	1,w
  6127  1EEC  0084               	movwf	4
  6128  1EED  0185               	clrf	5
  6129  1EEE  3002               	movlw	2
  6130  1EEF  0781               	addwf	1,f
  6131  1EF0  3F00               	moviw [0]fsr0
  6132  1EF1  0022               	movlb	2	; select bank2
  6133  1EF2  00E4               	movwf	_width^(0+256)
  6134  1EF3  3F01               	moviw [1]fsr0
  6135  1EF4  00E5               	movwf	(_width+1)^(0+256)
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6138  1EF5  1FE5               	btfss	(_width+1)^(0+256),7
  6139  1EF6  2F41               	goto	l6989
  6140                           
  6141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6142  1EF7  1468               	bsf	_flags^(0+256),0
  6143                           
  6144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6145  1EF8  09E4               	comf	_width^(0+256),f
  6146  1EF9  09E5               	comf	(_width+1)^(0+256),f
  6147  1EFA  0AE4               	incf	_width^(0+256),f
  6148  1EFB  1903               	skipnz
  6149  1EFC  0AE5               	incf	(_width+1)^(0+256),f
  6150  1EFD  2F41               	goto	l6989
  6151  1EFE                     l6979:	
  6152                           
  6153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6154  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6155  1EFF  0086               	movwf	6
  6156  1F00  0187               	clrf	7
  6157  1F01  3F40               	moviw [0]fsr1
  6158  1F02  00F7               	movwf	atoi@s
  6159  1F03  3F41               	moviw [1]fsr1
  6160  1F04  00F8               	movwf	atoi@s+1
  6161  1F05  31AC  2479  319E   	fcall	_atoi
  6162  1F08  0878               	movf	?_atoi+1,w
  6163  1F09  0022               	movlb	2	; select bank2
  6164  1F0A  00E5               	movwf	(_width+1)^(0+256)
  6165  1F0B  0877               	movf	?_atoi,w
  6166  1F0C  00E4               	movwf	_width^(0+256)
  6167                           
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6169  1F0D  2F17               	goto	l6983
  6170  1F0E                     l6981:	
  6171                           
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6173  1F0E  0020               	movlb	0	; select bank0
  6174  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6175  1F10  0086               	movwf	6
  6176  1F11  0187               	clrf	7
  6177  1F12  3001               	movlw	1
  6178  1F13  0781               	addwf	1,f
  6179  1F14  3141               	addfsr 1,1
  6180  1F15  1803               	skipnc
  6181  1F16  0A81               	incf	1,f
  6182  1F17                     l6983:	
  6183  1F17  0020               	movlb	0	; select bank0
  6184  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6185  1F19  0086               	movwf	6
  6186  1F1A  0187               	clrf	7
  6187  1F1B  3F40               	moviw [0]fsr1
  6188  1F1C  00DB               	movwf	??_vfpfcnvrt
  6189  1F1D  3F41               	moviw [1]fsr1
  6190  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6191  1F1F  085B               	movf	??_vfpfcnvrt,w
  6192  1F20  0084               	movwf	4
  6193  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6194  1F22  0085               	movwf	5
  6195  1F23  0800               	movf	0,w	;code access
  6196  1F24  3ED0               	addlw	208
  6197  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6198  1F26  30FF               	movlw	255
  6199  1F27  1803               	skipnc
  6200  1F28  3000               	movlw	0
  6201  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6202  1F2A  3000               	movlw	0
  6203  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6204  1F2C  300A               	movlw	10
  6205  1F2D  1903               	skipnz
  6206  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6207  1F2F  1803               	btfsc	3,0
  6208  1F30  2F33               	goto	u8700
  6209  1F31  3001               	movlw	1
  6210  1F32  2F34               	goto	u8710
  6211  1F33                     u8700:	
  6212  1F33  3000               	movlw	0
  6213  1F34                     u8710:	
  6214  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6215  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6216  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6217  1F37  0021               	movlb	1	; select bank1
  6218  1F38  00A4               	movwf	_vfpfcnvrt$1485^(0+128)
  6219  1F39  0020               	movlb	0	; select bank0
  6220  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6221  1F3B  0021               	movlb	1	; select bank1
  6222  1F3C  00A5               	movwf	(_vfpfcnvrt$1485+1)^(0+128)
  6223  1F3D  0824               	movf	_vfpfcnvrt$1485^(0+128),w
  6224  1F3E  0425               	iorwf	(_vfpfcnvrt$1485+1)^(0+128),w
  6225  1F3F  1D03               	btfss	3,2
  6226  1F40  2F0E               	goto	l6981
  6227  1F41                     l6989:	
  6228                           
  6229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6230  1F41  0020               	movlb	0	; select bank0
  6231  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6232  1F43  0086               	movwf	6
  6233  1F44  0187               	clrf	7
  6234  1F45  3F40               	moviw [0]fsr1
  6235  1F46  00DB               	movwf	??_vfpfcnvrt
  6236  1F47  3F41               	moviw [1]fsr1
  6237  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6238  1F49  085B               	movf	??_vfpfcnvrt,w
  6239  1F4A  0084               	movwf	4
  6240  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6241  1F4C  0085               	movwf	5
  6242  1F4D  0012               	moviw fsr0++
  6243  1F4E  3A2E               	xorlw	46
  6244  1F4F  1D03               	btfss	3,2
  6245  1F50  2FC5               	goto	l7011
  6246                           
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6248  1F51  0022               	movlb	2	; select bank2
  6249  1F52  01E6               	clrf	_prec^(0+256)
  6250  1F53  01E7               	clrf	(_prec+1)^(0+256)
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6253  1F54  0020               	movlb	0	; select bank0
  6254  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6255  1F56  0086               	movwf	6
  6256  1F57  0187               	clrf	7
  6257  1F58  3001               	movlw	1
  6258  1F59  0781               	addwf	1,f
  6259  1F5A  3141               	addfsr 1,1
  6260  1F5B  1803               	skipnc
  6261  1F5C  0A81               	incf	1,f
  6262                           
  6263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6264  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6265  1F5E  0086               	movwf	6
  6266  1F5F  0187               	clrf	7
  6267  1F60  3F40               	moviw [0]fsr1
  6268  1F61  00DB               	movwf	??_vfpfcnvrt
  6269  1F62  3F41               	moviw [1]fsr1
  6270  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6271  1F64  085B               	movf	??_vfpfcnvrt,w
  6272  1F65  0084               	movwf	4
  6273  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6274  1F67  0085               	movwf	5
  6275  1F68  0012               	moviw fsr0++
  6276  1F69  3A2A               	xorlw	42
  6277  1F6A  1D03               	btfss	3,2
  6278  1F6B  2F82               	goto	l7001
  6279                           
  6280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6281  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6282  1F6D  0086               	movwf	6
  6283  1F6E  0187               	clrf	7
  6284  1F6F  3001               	movlw	1
  6285  1F70  0781               	addwf	1,f
  6286  1F71  3141               	addfsr 1,1
  6287  1F72  1803               	skipnc
  6288  1F73  0A81               	incf	1,f
  6289                           
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6291  1F74  085A               	movf	vfpfcnvrt@ap,w
  6292  1F75  0086               	movwf	6
  6293  1F76  0187               	clrf	7
  6294  1F77  0801               	movf	1,w
  6295  1F78  0084               	movwf	4
  6296  1F79  0185               	clrf	5
  6297  1F7A  3002               	movlw	2
  6298  1F7B  0781               	addwf	1,f
  6299  1F7C  3F00               	moviw [0]fsr0
  6300  1F7D  0022               	movlb	2	; select bank2
  6301  1F7E  00E6               	movwf	_prec^(0+256)
  6302  1F7F  3F01               	moviw [1]fsr0
  6303  1F80  00E7               	movwf	(_prec+1)^(0+256)
  6304                           
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6306  1F81  2FC5               	goto	l7011
  6307  1F82                     l7001:	
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6310  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6311  1F83  0086               	movwf	6
  6312  1F84  0187               	clrf	7
  6313  1F85  3F40               	moviw [0]fsr1
  6314  1F86  00F7               	movwf	atoi@s
  6315  1F87  3F41               	moviw [1]fsr1
  6316  1F88  00F8               	movwf	atoi@s+1
  6317  1F89  31AC  2479  319E   	fcall	_atoi
  6318  1F8C  0878               	movf	?_atoi+1,w
  6319  1F8D  0022               	movlb	2	; select bank2
  6320  1F8E  00E7               	movwf	(_prec+1)^(0+256)
  6321  1F8F  0877               	movf	?_atoi,w
  6322  1F90  00E6               	movwf	_prec^(0+256)
  6323                           
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6325  1F91  2F9B               	goto	l7005
  6326  1F92                     l7003:	
  6327                           
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6329  1F92  0020               	movlb	0	; select bank0
  6330  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6331  1F94  0086               	movwf	6
  6332  1F95  0187               	clrf	7
  6333  1F96  3001               	movlw	1
  6334  1F97  0781               	addwf	1,f
  6335  1F98  3141               	addfsr 1,1
  6336  1F99  1803               	skipnc
  6337  1F9A  0A81               	incf	1,f
  6338  1F9B                     l7005:	
  6339  1F9B  0020               	movlb	0	; select bank0
  6340  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6341  1F9D  0086               	movwf	6
  6342  1F9E  0187               	clrf	7
  6343  1F9F  3F40               	moviw [0]fsr1
  6344  1FA0  00DB               	movwf	??_vfpfcnvrt
  6345  1FA1  3F41               	moviw [1]fsr1
  6346  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6347  1FA3  085B               	movf	??_vfpfcnvrt,w
  6348  1FA4  0084               	movwf	4
  6349  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6350  1FA6  0085               	movwf	5
  6351  1FA7  0800               	movf	0,w	;code access
  6352  1FA8  3ED0               	addlw	208
  6353  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6354  1FAA  30FF               	movlw	255
  6355  1FAB  1803               	skipnc
  6356  1FAC  3000               	movlw	0
  6357  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6358  1FAE  3000               	movlw	0
  6359  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6360  1FB0  300A               	movlw	10
  6361  1FB1  1903               	skipnz
  6362  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6363  1FB3  1803               	btfsc	3,0
  6364  1FB4  2FB7               	goto	u8750
  6365  1FB5  3001               	movlw	1
  6366  1FB6  2FB8               	goto	u8760
  6367  1FB7                     u8750:	
  6368  1FB7  3000               	movlw	0
  6369  1FB8                     u8760:	
  6370  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6371  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6372  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6373  1FBB  0021               	movlb	1	; select bank1
  6374  1FBC  00A6               	movwf	_vfpfcnvrt$1486^(0+128)
  6375  1FBD  0020               	movlb	0	; select bank0
  6376  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6377  1FBF  0021               	movlb	1	; select bank1
  6378  1FC0  00A7               	movwf	(_vfpfcnvrt$1486+1)^(0+128)
  6379  1FC1  0826               	movf	_vfpfcnvrt$1486^(0+128),w
  6380  1FC2  0427               	iorwf	(_vfpfcnvrt$1486+1)^(0+128),w
  6381  1FC3  1D03               	btfss	3,2
  6382  1FC4  2F92               	goto	l7003
  6383  1FC5                     l7011:	
  6384                           
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6386  1FC5  0020               	movlb	0	; select bank0
  6387  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6388  1FC7  0086               	movwf	6
  6389  1FC8  0187               	clrf	7
  6390  1FC9  3F40               	moviw [0]fsr1
  6391  1FCA  00DB               	movwf	??_vfpfcnvrt
  6392  1FCB  3F41               	moviw [1]fsr1
  6393  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6394  1FCD  085B               	movf	??_vfpfcnvrt,w
  6395  1FCE  0084               	movwf	4
  6396  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6397  1FD0  0085               	movwf	5
  6398  1FD1  0012               	moviw fsr0++
  6399  1FD2  3A63               	xorlw	99
  6400  1FD3  31A7  1D03         	btfss	3,2
  6401  1FD5  2F06               	goto	l7021
  6402                           
  6403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6404  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6405  1FD7  0086               	movwf	6
  6406  1FD8  0187               	clrf	7
  6407  1FD9  3001               	movlw	1
  6408  1FDA  0781               	addwf	1,f
  6409  1FDB  3141               	addfsr 1,1
  6410  1FDC  1803               	skipnc
  6411  1FDD  0A81               	incf	1,f
  6412                           
  6413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6414  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6415  1FDF  0086               	movwf	6
  6416  1FE0  0187               	clrf	7
  6417  1FE1  0801               	movf	1,w
  6418  1FE2  0084               	movwf	4
  6419  1FE3  0185               	clrf	5
  6420  1FE4  3002               	movlw	2
  6421  1FE5  0781               	addwf	1,f
  6422  1FE6  0800               	movf	0,w
  6423  1FE7  00DB               	movwf	??_vfpfcnvrt
  6424  1FE8  085B               	movf	??_vfpfcnvrt,w
  6425  1FE9  0021               	movlb	1	; select bank1
  6426  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6427                           
  6428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6429  1FEB  0020               	movlb	0	; select bank0
  6430  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6431  1FED  00B1               	movwf	ctoa@fp+1
  6432  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6433  1FEF  00B0               	movwf	ctoa@fp
  6434  1FF0  0021               	movlb	1	; select bank1
  6435  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6436  1FF2  0020               	movlb	0	; select bank0
  6437  1FF3  00DB               	movwf	??_vfpfcnvrt
  6438  1FF4  085B               	movf	??_vfpfcnvrt,w
  6439  1FF5  00B2               	movwf	ctoa@c
  6440  1FF6  31B4  2489         	fcall	_ctoa
  6441  1FF8  0020               	movlb	0	; select bank0
  6442  1FF9  0831               	movf	?_ctoa+1,w
  6443  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6444  1FFB  0830               	movf	?_ctoa,w
  6445  1FFC  00D7               	movwf	?_vfpfcnvrt
  6446  1FFD  0008               	return
  6447  1FFE                     L7:	
  6448  1FFE                     L6:	
  6449  1FFE  318F  2FDD         	ljmp	l7289
  6450                           
  6451                           	psect	text8
  6452  1B89                     __ptext8:	
  6453 ;; *************** function _xtoa *****************
  6454 ;; Defined at:
  6455 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6458 ;;		 -> vsnprintf@f(6), 
  6459 ;;  d               8   18[BANK0 ] unsigned long long 
  6460 ;;  x               1   26[BANK0 ] unsigned char 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  n               8   43[BANK0 ] unsigned long long 
  6463 ;;  c               2   53[BANK0 ] int 
  6464 ;;  i               2   51[BANK0 ] int 
  6465 ;;  w               2   41[BANK0 ] int 
  6466 ;;  p               2   39[BANK0 ] int 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  2   16[BANK0 ] int 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6476 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6477 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6478 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6479 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6480 ;;Total ram usage:       39 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    5
  6483 ;; This function calls:
  6484 ;;		_isalpha
  6485 ;;		_isupper
  6486 ;;		_pad
  6487 ;;		_toupper
  6488 ;; This function is called by:
  6489 ;;		_vfpfcnvrt
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _xtoa
  6495  1B89                     _xtoa:	
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6501  1B89  0022               	movlb	2	; select bank2
  6502  1B8A  1BE7               	btfsc	(_prec+1)^(0+256),7
  6503  1B8B  2B90               	goto	l925
  6504                           
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6506  1B8C  30FD               	movlw	253
  6507  1B8D  05E8               	andwf	_flags^(0+256),f
  6508  1B8E  30FF               	movlw	255
  6509  1B8F  05E9               	andwf	(_flags+1)^(0+256),f
  6510  1B90                     l925:	
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6512                           
  6513                           
  6514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6515  1B90  0867               	movf	(_prec+1)^(0+256),w
  6516  1B91  3A80               	xorlw	128
  6517  1B92  0020               	movlb	0	; select bank0
  6518  1B93  00BB               	movwf	??_xtoa
  6519  1B94  3080               	movlw	128
  6520  1B95  023B               	subwf	??_xtoa,w
  6521  1B96  1D03               	skipz
  6522  1B97  2B9B               	goto	u8425
  6523  1B98  3001               	movlw	1
  6524  1B99  0022               	movlb	2	; select bank2
  6525  1B9A  0266               	subwf	_prec^(0+256),w
  6526  1B9B                     u8425:	
  6527  1B9B  1803               	skipnc
  6528  1B9C  2BA3               	goto	l6833
  6529  1B9D  3001               	movlw	1
  6530  1B9E  0020               	movlb	0	; select bank0
  6531  1B9F  00C7               	movwf	xtoa@p
  6532  1BA0  3000               	movlw	0
  6533  1BA1  00C8               	movwf	xtoa@p+1
  6534  1BA2  2BAB               	goto	l929
  6535  1BA3                     l6833:	
  6536  1BA3  0022               	movlb	2	; select bank2
  6537  1BA4  0867               	movf	(_prec+1)^(0+256),w
  6538  1BA5  0020               	movlb	0	; select bank0
  6539  1BA6  00C8               	movwf	xtoa@p+1
  6540  1BA7  0022               	movlb	2	; select bank2
  6541  1BA8  0866               	movf	_prec^(0+256),w
  6542  1BA9  0020               	movlb	0	; select bank0
  6543  1BAA  00C7               	movwf	xtoa@p
  6544  1BAB                     l929:	
  6545                           
  6546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6547  1BAB  0022               	movlb	2	; select bank2
  6548  1BAC  0865               	movf	(_width+1)^(0+256),w
  6549  1BAD  0020               	movlb	0	; select bank0
  6550  1BAE  00CA               	movwf	xtoa@w+1
  6551  1BAF  0022               	movlb	2	; select bank2
  6552  1BB0  0864               	movf	_width^(0+256),w
  6553  1BB1  0020               	movlb	0	; select bank0
  6554  1BB2  00C9               	movwf	xtoa@w
  6555                           
  6556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6557  1BB3  0022               	movlb	2	; select bank2
  6558  1BB4  1E68               	btfss	_flags^(0+256),4
  6559  1BB5  2BBB               	goto	l6839
  6560                           
  6561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6562  1BB6  30FE               	movlw	254
  6563  1BB7  0020               	movlb	0	; select bank0
  6564  1BB8  07C9               	addwf	xtoa@w,f
  6565  1BB9  30FF               	movlw	255
  6566  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6567  1BBB                     l6839:	
  6568                           
  6569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6570  1BBB  0020               	movlb	0	; select bank0
  6571  1BBC  0832               	movf	xtoa@d,w
  6572  1BBD  00CB               	movwf	xtoa@n
  6573  1BBE  0833               	movf	xtoa@d+1,w
  6574  1BBF  00CC               	movwf	xtoa@n+1
  6575  1BC0  0834               	movf	xtoa@d+2,w
  6576  1BC1  00CD               	movwf	xtoa@n+2
  6577  1BC2  0835               	movf	xtoa@d+3,w
  6578  1BC3  00CE               	movwf	xtoa@n+3
  6579  1BC4  0836               	movf	xtoa@d+4,w
  6580  1BC5  00CF               	movwf	xtoa@n+4
  6581  1BC6  0837               	movf	xtoa@d+5,w
  6582  1BC7  00D0               	movwf	xtoa@n+5
  6583  1BC8  0838               	movf	xtoa@d+6,w
  6584  1BC9  00D1               	movwf	xtoa@n+6
  6585  1BCA  0839               	movf	xtoa@d+7,w
  6586  1BCB  00D2               	movwf	xtoa@n+7
  6587                           
  6588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6589  1BCC  301F               	movlw	31
  6590  1BCD  00D3               	movwf	xtoa@i
  6591  1BCE  3000               	movlw	0
  6592  1BCF  00D4               	movwf	xtoa@i+1
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6595  1BD0  0024               	movlb	4	; select bank4
  6596  1BD1  01CD               	clrf	(_dbuf^(0+512)+31)
  6597                           
  6598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6599  1BD2  2C7D               	goto	l6871
  6600  1BD3                     l6843:	
  6601                           
  6602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6603  1BD3  30FF               	movlw	255
  6604  1BD4  0020               	movlb	0	; select bank0
  6605  1BD5  07D3               	addwf	xtoa@i,f
  6606  1BD6  30FF               	movlw	255
  6607  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6608                           
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6610  1BD8  300F               	movlw	15
  6611  1BD9  054B               	andwf	xtoa@n,w
  6612  1BDA  00D5               	movwf	xtoa@c
  6613  1BDB  3000               	movlw	0
  6614  1BDC  054C               	andwf	xtoa@n+1,w
  6615  1BDD  00D6               	movwf	xtoa@c+1
  6616                           
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6618  1BDE  0856               	movf	xtoa@c+1,w
  6619  1BDF  3A80               	xorlw	128
  6620  1BE0  00BB               	movwf	??_xtoa
  6621  1BE1  3080               	movlw	128
  6622  1BE2  023B               	subwf	??_xtoa,w
  6623  1BE3  1D03               	skipz
  6624  1BE4  2BE7               	goto	u8445
  6625  1BE5  300A               	movlw	10
  6626  1BE6  0255               	subwf	xtoa@c,w
  6627  1BE7                     u8445:	
  6628  1BE7  1C03               	skipc
  6629  1BE8  2BED               	goto	l6847
  6630  1BE9  0020               	movlb	0	; select bank0
  6631  1BEA  0855               	movf	xtoa@c,w
  6632  1BEB  3E57               	addlw	87
  6633  1BEC  2BF0               	goto	L1
  6634  1BED                     l6847:	
  6635  1BED  0020               	movlb	0	; select bank0
  6636  1BEE  0855               	movf	xtoa@c,w
  6637  1BEF  3E30               	addlw	48
  6638  1BF0                     L1:	
  6639  1BF0  00D5               	movwf	xtoa@c
  6640  1BF1  3000               	movlw	0
  6641  1BF2  3D56               	addwfc	xtoa@c+1,w
  6642  1BF3  00D6               	movwf	xtoa@c+1
  6643  1BF4  083A               	movf	xtoa@x,w
  6644  1BF5  3EBF               	addlw	191
  6645  1BF6  00BB               	movwf	??_xtoa
  6646  1BF7  30FF               	movlw	255
  6647  1BF8  1803               	skipnc
  6648  1BF9  3000               	movlw	0
  6649  1BFA  00BC               	movwf	??_xtoa+1
  6650  1BFB  3000               	movlw	0
  6651  1BFC  023C               	subwf	??_xtoa+1,w
  6652  1BFD  301A               	movlw	26
  6653  1BFE  1903               	skipnz
  6654  1BFF  023B               	subwf	??_xtoa,w
  6655  1C00  1803               	btfsc	3,0
  6656  1C01  2C04               	goto	u8450
  6657  1C02  3001               	movlw	1
  6658  1C03  2C05               	goto	u8460
  6659  1C04                     u8450:	
  6660  1C04  3000               	movlw	0
  6661  1C05                     u8460:	
  6662  1C05  00BD               	movwf	??_xtoa+2
  6663  1C06  01BE               	clrf	??_xtoa+3
  6664  1C07  083D               	movf	??_xtoa+2,w
  6665  1C08  00C3               	movwf	_xtoa$1470
  6666  1C09  083E               	movf	??_xtoa+3,w
  6667  1C0A  00C4               	movwf	_xtoa$1470+1
  6668  1C0B  0843               	movf	_xtoa$1470,w
  6669  1C0C  0444               	iorwf	_xtoa$1470+1,w
  6670  1C0D  1903               	btfsc	3,2
  6671  1C0E  2C3B               	goto	l6863
  6672  1C0F  3020               	movlw	32
  6673  1C10  0455               	iorwf	xtoa@c,w
  6674  1C11  00BB               	movwf	??_xtoa
  6675  1C12  3000               	movlw	0
  6676  1C13  0456               	iorwf	xtoa@c+1,w
  6677  1C14  00BC               	movwf	??_xtoa+1
  6678  1C15  083B               	movf	??_xtoa,w
  6679  1C16  3E9F               	addlw	159
  6680  1C17  00BD               	movwf	??_xtoa+2
  6681  1C18  30FF               	movlw	255
  6682  1C19  3D3C               	addwfc	??_xtoa+1,w
  6683  1C1A  00BE               	movwf	??_xtoa+3
  6684  1C1B  3000               	movlw	0
  6685  1C1C  023E               	subwf	??_xtoa+3,w
  6686  1C1D  301A               	movlw	26
  6687  1C1E  1903               	skipnz
  6688  1C1F  023D               	subwf	??_xtoa+2,w
  6689  1C20  1803               	btfsc	3,0
  6690  1C21  2C24               	goto	u8480
  6691  1C22  3001               	movlw	1
  6692  1C23  2C25               	goto	u8490
  6693  1C24                     u8480:	
  6694  1C24  3000               	movlw	0
  6695  1C25                     u8490:	
  6696  1C25  00BF               	movwf	??_xtoa+4
  6697  1C26  01C0               	clrf	??_xtoa+5
  6698  1C27  083F               	movf	??_xtoa+4,w
  6699  1C28  00C5               	movwf	_xtoa$1471
  6700  1C29  0840               	movf	??_xtoa+5,w
  6701  1C2A  00C6               	movwf	_xtoa$1471+1
  6702  1C2B  0845               	movf	_xtoa$1471,w
  6703  1C2C  0446               	iorwf	_xtoa$1471+1,w
  6704  1C2D  1903               	btfsc	3,2
  6705  1C2E  2C3B               	goto	l6863
  6706                           
  6707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6708  1C2F  0856               	movf	xtoa@c+1,w
  6709  1C30  00F8               	movwf	toupper@c+1
  6710  1C31  0855               	movf	xtoa@c,w
  6711  1C32  00F7               	movwf	toupper@c
  6712  1C33  3190  2000  319B   	fcall	_toupper
  6713  1C36  0878               	movf	?_toupper+1,w
  6714  1C37  0020               	movlb	0	; select bank0
  6715  1C38  00D6               	movwf	xtoa@c+1
  6716  1C39  0877               	movf	?_toupper,w
  6717  1C3A  00D5               	movwf	xtoa@c
  6718  1C3B                     l6863:	
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6721  1C3B  0855               	movf	xtoa@c,w
  6722  1C3C  00BB               	movwf	??_xtoa
  6723  1C3D  0853               	movf	xtoa@i,w
  6724  1C3E  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6725  1C3F  0086               	movwf	6
  6726  1C40  3002               	movlw	2	; select bank4/5
  6727  1C41  0087               	movwf	7
  6728  1C42  083B               	movf	??_xtoa,w
  6729  1C43  0081               	movwf	1
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6732  1C44  30FF               	movlw	255
  6733  1C45  07C7               	addwf	xtoa@p,f
  6734  1C46  30FF               	movlw	255
  6735  1C47  3DC8               	addwfc	xtoa@p+1,f
  6736                           
  6737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6738  1C48  30FF               	movlw	255
  6739  1C49  07C9               	addwf	xtoa@w,f
  6740  1C4A  30FF               	movlw	255
  6741  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6742                           
  6743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6744  1C4C  304B               	movlw	low xtoa@n
  6745  1C4D  0086               	movwf	6
  6746  1C4E  3000               	movlw	high xtoa@n
  6747  1C4F  0087               	movwf	7
  6748  1C50  3F40               	moviw [0]fsr1
  6749  1C51  00BB               	movwf	??_xtoa
  6750  1C52  3F41               	moviw [1]fsr1
  6751  1C53  00BC               	movwf	??_xtoa+1
  6752  1C54  3F42               	moviw [2]fsr1
  6753  1C55  00BD               	movwf	??_xtoa+2
  6754  1C56  3F43               	moviw [3]fsr1
  6755  1C57  00BE               	movwf	??_xtoa+3
  6756  1C58  3F44               	moviw [4]fsr1
  6757  1C59  00BF               	movwf	??_xtoa+4
  6758  1C5A  3F45               	moviw [5]fsr1
  6759  1C5B  00C0               	movwf	??_xtoa+5
  6760  1C5C  3F46               	moviw [6]fsr1
  6761  1C5D  00C1               	movwf	??_xtoa+6
  6762  1C5E  3F47               	moviw [7]fsr1
  6763  1C5F  00C2               	movwf	??_xtoa+7
  6764  1C60  3004               	movlw	4
  6765  1C61                     u8515:	
  6766  1C61  0020               	movlb	0	; select bank0
  6767  1C62  36C2               	lsrf	??_xtoa+7,f
  6768  1C63  0CC1               	rrf	??_xtoa+6,f
  6769  1C64  0CC0               	rrf	??_xtoa+5,f
  6770  1C65  0CBF               	rrf	??_xtoa+4,f
  6771  1C66  0CBE               	rrf	??_xtoa+3,f
  6772  1C67  0CBD               	rrf	??_xtoa+2,f
  6773  1C68  0CBC               	rrf	??_xtoa+1,f
  6774  1C69  0CBB               	rrf	??_xtoa,f
  6775  1C6A  0B89               	decfsz	9,f
  6776  1C6B  2C61               	goto	u8515
  6777  1C6C  0020               	movlb	0	; select bank0
  6778  1C6D  0842               	movf	??_xtoa+7,w
  6779  1C6E  00D2               	movwf	xtoa@n+7
  6780  1C6F  0841               	movf	??_xtoa+6,w
  6781  1C70  00D1               	movwf	xtoa@n+6
  6782  1C71  0840               	movf	??_xtoa+5,w
  6783  1C72  00D0               	movwf	xtoa@n+5
  6784  1C73  083F               	movf	??_xtoa+4,w
  6785  1C74  00CF               	movwf	xtoa@n+4
  6786  1C75  083E               	movf	??_xtoa+3,w
  6787  1C76  00CE               	movwf	xtoa@n+3
  6788  1C77  083D               	movf	??_xtoa+2,w
  6789  1C78  00CD               	movwf	xtoa@n+2
  6790  1C79  083C               	movf	??_xtoa+1,w
  6791  1C7A  00CC               	movwf	xtoa@n+1
  6792  1C7B  083B               	movf	??_xtoa,w
  6793  1C7C  00CB               	movwf	xtoa@n
  6794  1C7D                     l6871:	
  6795                           
  6796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6797  1C7D  0020               	movlb	0	; select bank0
  6798  1C7E  0854               	movf	xtoa@i+1,w
  6799  1C7F  3A80               	xorlw	128
  6800  1C80  00BB               	movwf	??_xtoa
  6801  1C81  3080               	movlw	128
  6802  1C82  023B               	subwf	??_xtoa,w
  6803  1C83  1D03               	skipz
  6804  1C84  2C87               	goto	u8525
  6805  1C85  3002               	movlw	2
  6806  1C86  0253               	subwf	xtoa@i,w
  6807  1C87                     u8525:	
  6808  1C87  1C03               	skipc
  6809  1C88  2CAE               	goto	l950
  6810  1C89  0020               	movlb	0	; select bank0
  6811  1C8A  084B               	movf	xtoa@n,w
  6812  1C8B  044C               	iorwf	xtoa@n+1,w
  6813  1C8C  044D               	iorwf	xtoa@n+2,w
  6814  1C8D  044E               	iorwf	xtoa@n+3,w
  6815  1C8E  044F               	iorwf	xtoa@n+4,w
  6816  1C8F  0450               	iorwf	xtoa@n+5,w
  6817  1C90  0451               	iorwf	xtoa@n+6,w
  6818  1C91  0452               	iorwf	xtoa@n+7,w
  6819  1C92  1D03               	skipz
  6820  1C93  2BD3               	goto	l6843
  6821  1C94  0848               	movf	xtoa@p+1,w
  6822  1C95  3A80               	xorlw	128
  6823  1C96  00BB               	movwf	??_xtoa
  6824  1C97  3080               	movlw	128
  6825  1C98  023B               	subwf	??_xtoa,w
  6826  1C99  1D03               	skipz
  6827  1C9A  2C9D               	goto	u8545
  6828  1C9B  3001               	movlw	1
  6829  1C9C  0247               	subwf	xtoa@p,w
  6830  1C9D                     u8545:	
  6831  1C9D  1803               	skipnc
  6832  1C9E  2BD3               	goto	l6843
  6833  1C9F  0020               	movlb	0	; select bank0
  6834  1CA0  084A               	movf	xtoa@w+1,w
  6835  1CA1  3A80               	xorlw	128
  6836  1CA2  00BB               	movwf	??_xtoa
  6837  1CA3  3080               	movlw	128
  6838  1CA4  023B               	subwf	??_xtoa,w
  6839  1CA5  1D03               	skipz
  6840  1CA6  2CA9               	goto	u8555
  6841  1CA7  3001               	movlw	1
  6842  1CA8  0249               	subwf	xtoa@w,w
  6843  1CA9                     u8555:	
  6844  1CA9  1C03               	skipc
  6845  1CAA  2CAE               	goto	l950
  6846  1CAB  0022               	movlb	2	; select bank2
  6847  1CAC  18E8               	btfsc	_flags^(0+256),1
  6848  1CAD  2BD3               	goto	l6843
  6849  1CAE                     l950:	
  6850                           
  6851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6852  1CAE  0022               	movlb	2	; select bank2
  6853  1CAF  1E68               	btfss	_flags^(0+256),4
  6854  1CB0  2CCC               	goto	l6887
  6855                           
  6856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6857  1CB1  30FF               	movlw	255
  6858  1CB2  0020               	movlb	0	; select bank0
  6859  1CB3  07D3               	addwf	xtoa@i,f
  6860  1CB4  30FF               	movlw	255
  6861  1CB5  3DD4               	addwfc	xtoa@i+1,f
  6862                           
  6863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6864  1CB6  083A               	movf	xtoa@x,w
  6865  1CB7  00BB               	movwf	??_xtoa
  6866  1CB8  0853               	movf	xtoa@i,w
  6867  1CB9  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6868  1CBA  0086               	movwf	6
  6869  1CBB  3002               	movlw	2	; select bank4/5
  6870  1CBC  0087               	movwf	7
  6871  1CBD  083B               	movf	??_xtoa,w
  6872  1CBE  0081               	movwf	1
  6873                           
  6874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6875  1CBF  30FF               	movlw	255
  6876  1CC0  07D3               	addwf	xtoa@i,f
  6877  1CC1  30FF               	movlw	255
  6878  1CC2  3DD4               	addwfc	xtoa@i+1,f
  6879                           
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6881  1CC3  3030               	movlw	48
  6882  1CC4  00BB               	movwf	??_xtoa
  6883  1CC5  0853               	movf	xtoa@i,w
  6884  1CC6  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6885  1CC7  0086               	movwf	6
  6886  1CC8  3002               	movlw	2	; select bank4/5
  6887  1CC9  0087               	movwf	7
  6888  1CCA  083B               	movf	??_xtoa,w
  6889  1CCB  0081               	movwf	1
  6890  1CCC                     l6887:	
  6891                           
  6892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6893  1CCC  0020               	movlb	0	; select bank0
  6894  1CCD  0831               	movf	xtoa@fp+1,w
  6895  1CCE  00A7               	movwf	pad@fp+1
  6896  1CCF  0830               	movf	xtoa@fp,w
  6897  1CD0  00A6               	movwf	pad@fp
  6898  1CD1  0853               	movf	xtoa@i,w
  6899  1CD2  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6900  1CD3  00BB               	movwf	??_xtoa
  6901  1CD4  083B               	movf	??_xtoa,w
  6902  1CD5  00A8               	movwf	pad@buf
  6903  1CD6  084A               	movf	xtoa@w+1,w
  6904  1CD7  00AA               	movwf	pad@p+1
  6905  1CD8  0849               	movf	xtoa@w,w
  6906  1CD9  00A9               	movwf	pad@p
  6907  1CDA  31B6  26B3         	fcall	_pad
  6908  1CDC  0020               	movlb	0	; select bank0
  6909  1CDD  0827               	movf	?_pad+1,w
  6910  1CDE  00B1               	movwf	?_xtoa+1
  6911  1CDF  0826               	movf	?_pad,w
  6912  1CE0  00B0               	movwf	?_xtoa
  6913  1CE1  0008               	return
  6914  1CE2                     __end_of_xtoa:	
  6915                           
  6916                           	psect	text9
  6917  1000                     __ptext9:	
  6918 ;; *************** function _toupper *****************
  6919 ;; Defined at:
  6920 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  c               2    7[COMMON] int 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  2    7[COMMON] int 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6937 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6938 ;;Total ram usage:        8 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    2
  6941 ;; This function calls:
  6942 ;;		_islower
  6943 ;; This function is called by:
  6944 ;;		_xtoa
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           
  6949                           ;psect for function _toupper
  6950  1000                     _toupper:	
  6951                           
  6952                           ;incstack = 0
  6953                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6954  1000  0877               	movf	toupper@c,w
  6955  1001  3E9F               	addlw	159
  6956  1002  0020               	movlb	0	; select bank0
  6957  1003  00A0               	movwf	??_toupper
  6958  1004  30FF               	movlw	255
  6959  1005  3D78               	addwfc	toupper@c+1,w
  6960  1006  00A1               	movwf	??_toupper+1
  6961  1007  3000               	movlw	0
  6962  1008  0221               	subwf	??_toupper+1,w
  6963  1009  301A               	movlw	26
  6964  100A  1903               	skipnz
  6965  100B  0220               	subwf	??_toupper,w
  6966  100C  1803               	btfsc	3,0
  6967  100D  2810               	goto	u8040
  6968  100E  3001               	movlw	1
  6969  100F  2811               	goto	u8050
  6970  1010                     u8040:	
  6971  1010  3000               	movlw	0
  6972  1011                     u8050:	
  6973  1011  00A2               	movwf	??_toupper+2
  6974  1012  01A3               	clrf	??_toupper+3
  6975  1013  0822               	movf	??_toupper+2,w
  6976  1014  00F9               	movwf	_toupper$2020
  6977  1015  0823               	movf	??_toupper+3,w
  6978  1016  00FA               	movwf	_toupper$2020+1
  6979  1017  0879               	movf	_toupper$2020,w
  6980  1018  047A               	iorwf	_toupper$2020+1,w
  6981  1019  1903               	btfsc	3,2
  6982  101A  0008               	return
  6983  101B  305F               	movlw	95
  6984  101C  0577               	andwf	toupper@c,w
  6985  101D  00F7               	movwf	?_toupper
  6986  101E  3000               	movlw	0
  6987  101F  0578               	andwf	toupper@c+1,w
  6988  1020  00F8               	movwf	?_toupper+1
  6989  1021  0008               	return
  6990  1022                     __end_of_toupper:	
  6991                           
  6992                           	psect	text10
  6993  3321                     __ptext10:	
  6994 ;; *************** function _islower *****************
  6995 ;; Defined at:
  6996 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  c               2    1[COMMON] int 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  2    1[COMMON] int 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7014 ;;Total ram usage:        6 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    1
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_toupper
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           
  7025                           ;psect for function _islower
  7026  3321                     _islower:	
  7027                           
  7028                           ;incstack = 0
  7029                           ; Regs used in _islower: [wreg+status,2+status,0]
  7030  3321  0871               	movf	islower@c,w
  7031  3322  3E9F               	addlw	159
  7032  3323  00F3               	movwf	??_islower
  7033  3324  30FF               	movlw	255
  7034  3325  3D72               	addwfc	islower@c+1,w
  7035  3326  00F4               	movwf	??_islower+1
  7036  3327  3000               	movlw	0
  7037  3328  0274               	subwf	??_islower+1,w
  7038  3329  301A               	movlw	26
  7039  332A  1903               	skipnz
  7040  332B  0273               	subwf	??_islower,w
  7041  332C  1803               	btfsc	3,0
  7042  332D  2B30               	goto	u7980
  7043  332E  3001               	movlw	1
  7044  332F  2B31               	goto	u7990
  7045  3330                     u7980:	
  7046  3330  3000               	movlw	0
  7047  3331                     u7990:	
  7048  3331  00F5               	movwf	??_islower+2
  7049  3332  01F6               	clrf	??_islower+3
  7050  3333  0875               	movf	??_islower+2,w
  7051  3334  00F1               	movwf	?_islower
  7052  3335  0876               	movf	??_islower+3,w
  7053  3336  00F2               	movwf	?_islower+1
  7054  3337  0008               	return
  7055  3338                     __end_of_islower:	
  7056                           
  7057                           	psect	text11
  7058  330A                     __ptext11:	
  7059 ;; *************** function _isupper *****************
  7060 ;; Defined at:
  7061 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  c               2    1[COMMON] int 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  2    1[COMMON] int 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7079 ;;Total ram usage:        6 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_xtoa
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _isupper
  7091  330A                     _isupper:	
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7095  330A  0871               	movf	isupper@c,w
  7096  330B  3EBF               	addlw	191
  7097  330C  00F3               	movwf	??_isupper
  7098  330D  30FF               	movlw	255
  7099  330E  3D72               	addwfc	isupper@c+1,w
  7100  330F  00F4               	movwf	??_isupper+1
  7101  3310  3000               	movlw	0
  7102  3311  0274               	subwf	??_isupper+1,w
  7103  3312  301A               	movlw	26
  7104  3313  1903               	skipnz
  7105  3314  0273               	subwf	??_isupper,w
  7106  3315  1803               	btfsc	3,0
  7107  3316  2B19               	goto	u4150
  7108  3317  3001               	movlw	1
  7109  3318  2B1A               	goto	u4160
  7110  3319                     u4150:	
  7111  3319  3000               	movlw	0
  7112  331A                     u4160:	
  7113  331A  00F5               	movwf	??_isupper+2
  7114  331B  01F6               	clrf	??_isupper+3
  7115  331C  0875               	movf	??_isupper+2,w
  7116  331D  00F1               	movwf	?_isupper
  7117  331E  0876               	movf	??_isupper+3,w
  7118  331F  00F2               	movwf	?_isupper+1
  7119  3320  0008               	return
  7120  3321                     __end_of_isupper:	
  7121                           
  7122                           	psect	text12
  7123  33BF                     __ptext12:	
  7124 ;; *************** function _isalpha *****************
  7125 ;; Defined at:
  7126 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  c               2    1[COMMON] int 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  2    1[COMMON] int 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7143 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:        8 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_xtoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function _isalpha
  7156  33BF                     _isalpha:	
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7160  33BF  3020               	movlw	32
  7161  33C0  0471               	iorwf	isalpha@c,w
  7162  33C1  00F3               	movwf	??_isalpha
  7163  33C2  3000               	movlw	0
  7164  33C3  0472               	iorwf	isalpha@c+1,w
  7165  33C4  00F4               	movwf	??_isalpha+1
  7166  33C5  0873               	movf	??_isalpha,w
  7167  33C6  3E9F               	addlw	159
  7168  33C7  00F5               	movwf	??_isalpha+2
  7169  33C8  30FF               	movlw	255
  7170  33C9  3D74               	addwfc	??_isalpha+1,w
  7171  33CA  00F6               	movwf	??_isalpha+3
  7172  33CB  3000               	movlw	0
  7173  33CC  0276               	subwf	??_isalpha+3,w
  7174  33CD  301A               	movlw	26
  7175  33CE  1903               	skipnz
  7176  33CF  0275               	subwf	??_isalpha+2,w
  7177  33D0  1803               	btfsc	3,0
  7178  33D1  2BD4               	goto	u4170
  7179  33D2  3001               	movlw	1
  7180  33D3  2BD5               	goto	u4180
  7181  33D4                     u4170:	
  7182  33D4  3000               	movlw	0
  7183  33D5                     u4180:	
  7184  33D5  00F7               	movwf	??_isalpha+4
  7185  33D6  01F8               	clrf	??_isalpha+5
  7186  33D7  0877               	movf	??_isalpha+4,w
  7187  33D8  00F1               	movwf	?_isalpha
  7188  33D9  0878               	movf	??_isalpha+5,w
  7189  33DA  00F2               	movwf	?_isalpha+1
  7190  33DB  0008               	return
  7191  33DC                     __end_of_isalpha:	
  7192                           
  7193                           	psect	text13
  7194  2441                     __ptext13:	
  7195 ;; *************** function _utoa *****************
  7196 ;; Defined at:
  7197 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7200 ;;		 -> vsnprintf@f(6), 
  7201 ;;  d               8   18[BANK0 ] unsigned long long 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  n               8   31[BANK0 ] unsigned long long 
  7204 ;;  i               2   39[BANK0 ] int 
  7205 ;;  w               2   29[BANK0 ] int 
  7206 ;;  p               2   27[BANK0 ] int 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  2   16[BANK0 ] int 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7216 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7217 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7219 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7220 ;;Total ram usage:       25 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    5
  7223 ;; This function calls:
  7224 ;;		___lodiv
  7225 ;;		___lomod
  7226 ;;		_pad
  7227 ;; This function is called by:
  7228 ;;		_vfpfcnvrt
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function _utoa
  7234  2441                     _utoa:	
  7235                           
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7237                           
  7238                           ;incstack = 0
  7239                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7240  2441  0022               	movlb	2	; select bank2
  7241  2442  1BE7               	btfsc	(_prec+1)^(0+256),7
  7242  2443  2C48               	goto	l910
  7243                           
  7244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7245  2444  30FD               	movlw	253
  7246  2445  05E8               	andwf	_flags^(0+256),f
  7247  2446  30FF               	movlw	255
  7248  2447  05E9               	andwf	(_flags+1)^(0+256),f
  7249  2448                     l910:	
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7251                           
  7252                           
  7253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7254  2448  0867               	movf	(_prec+1)^(0+256),w
  7255  2449  3A80               	xorlw	128
  7256  244A  0020               	movlb	0	; select bank0
  7257  244B  00BA               	movwf	??_utoa
  7258  244C  3080               	movlw	128
  7259  244D  023A               	subwf	??_utoa,w
  7260  244E  1D03               	skipz
  7261  244F  2C53               	goto	u8355
  7262  2450  3001               	movlw	1
  7263  2451  0022               	movlb	2	; select bank2
  7264  2452  0266               	subwf	_prec^(0+256),w
  7265  2453                     u8355:	
  7266  2453  1803               	skipnc
  7267  2454  2C5B               	goto	l6797
  7268  2455  3001               	movlw	1
  7269  2456  0020               	movlb	0	; select bank0
  7270  2457  00BB               	movwf	utoa@p
  7271  2458  3000               	movlw	0
  7272  2459  00BC               	movwf	utoa@p+1
  7273  245A  2C63               	goto	l914
  7274  245B                     l6797:	
  7275  245B  0022               	movlb	2	; select bank2
  7276  245C  0867               	movf	(_prec+1)^(0+256),w
  7277  245D  0020               	movlb	0	; select bank0
  7278  245E  00BC               	movwf	utoa@p+1
  7279  245F  0022               	movlb	2	; select bank2
  7280  2460  0866               	movf	_prec^(0+256),w
  7281  2461  0020               	movlb	0	; select bank0
  7282  2462  00BB               	movwf	utoa@p
  7283  2463                     l914:	
  7284                           
  7285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7286  2463  0022               	movlb	2	; select bank2
  7287  2464  0865               	movf	(_width+1)^(0+256),w
  7288  2465  0020               	movlb	0	; select bank0
  7289  2466  00BE               	movwf	utoa@w+1
  7290  2467  0022               	movlb	2	; select bank2
  7291  2468  0864               	movf	_width^(0+256),w
  7292  2469  0020               	movlb	0	; select bank0
  7293  246A  00BD               	movwf	utoa@w
  7294                           
  7295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7296  246B  0832               	movf	utoa@d,w
  7297  246C  00BF               	movwf	utoa@n
  7298  246D  0833               	movf	utoa@d+1,w
  7299  246E  00C0               	movwf	utoa@n+1
  7300  246F  0834               	movf	utoa@d+2,w
  7301  2470  00C1               	movwf	utoa@n+2
  7302  2471  0835               	movf	utoa@d+3,w
  7303  2472  00C2               	movwf	utoa@n+3
  7304  2473  0836               	movf	utoa@d+4,w
  7305  2474  00C3               	movwf	utoa@n+4
  7306  2475  0837               	movf	utoa@d+5,w
  7307  2476  00C4               	movwf	utoa@n+5
  7308  2477  0838               	movf	utoa@d+6,w
  7309  2478  00C5               	movwf	utoa@n+6
  7310  2479  0839               	movf	utoa@d+7,w
  7311  247A  00C6               	movwf	utoa@n+7
  7312                           
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7314  247B  301F               	movlw	31
  7315  247C  00C7               	movwf	utoa@i
  7316  247D  3000               	movlw	0
  7317  247E  00C8               	movwf	utoa@i+1
  7318                           
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7320  247F  0024               	movlb	4	; select bank4
  7321  2480  01CD               	clrf	(_dbuf^(0+512)+31)
  7322                           
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7324  2481  2D07               	goto	l6813
  7325  2482                     l6815:	
  7326  2482  083F               	movf	utoa@n,w
  7327  2483  0440               	iorwf	utoa@n+1,w
  7328  2484  0441               	iorwf	utoa@n+2,w
  7329  2485  0442               	iorwf	utoa@n+3,w
  7330  2486  0443               	iorwf	utoa@n+4,w
  7331  2487  0444               	iorwf	utoa@n+5,w
  7332  2488  0445               	iorwf	utoa@n+6,w
  7333  2489  0446               	iorwf	utoa@n+7,w
  7334  248A  1D03               	skipz
  7335  248B  2CA6               	goto	l6803
  7336  248C  083C               	movf	utoa@p+1,w
  7337  248D  3A80               	xorlw	128
  7338  248E  00BA               	movwf	??_utoa
  7339  248F  3080               	movlw	128
  7340  2490  023A               	subwf	??_utoa,w
  7341  2491  1D03               	skipz
  7342  2492  2C95               	goto	u8385
  7343  2493  3001               	movlw	1
  7344  2494  023B               	subwf	utoa@p,w
  7345  2495                     u8385:	
  7346  2495  1803               	skipnc
  7347  2496  2CA6               	goto	l6803
  7348  2497  0020               	movlb	0	; select bank0
  7349  2498  083E               	movf	utoa@w+1,w
  7350  2499  3A80               	xorlw	128
  7351  249A  00BA               	movwf	??_utoa
  7352  249B  3080               	movlw	128
  7353  249C  023A               	subwf	??_utoa,w
  7354  249D  1D03               	skipz
  7355  249E  2CA1               	goto	u8395
  7356  249F  3001               	movlw	1
  7357  24A0  023D               	subwf	utoa@w,w
  7358  24A1                     u8395:	
  7359  24A1  1C03               	skipc
  7360  24A2  2D0C               	goto	l6823
  7361  24A3  0022               	movlb	2	; select bank2
  7362  24A4  1CE8               	btfss	_flags^(0+256),1
  7363  24A5  2D0C               	goto	l6823
  7364  24A6                     l6803:	
  7365                           
  7366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7367  24A6  30FF               	movlw	255
  7368  24A7  0020               	movlb	0	; select bank0
  7369  24A8  07C7               	addwf	utoa@i,f
  7370  24A9  30FF               	movlw	255
  7371  24AA  3DC8               	addwfc	utoa@i+1,f
  7372                           
  7373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7374  24AB  300A               	movlw	10
  7375  24AC  00A0               	movwf	___lomod@divisor
  7376  24AD  01A1               	clrf	___lomod@divisor+1
  7377  24AE  01A2               	clrf	___lomod@divisor+2
  7378  24AF  01A3               	clrf	___lomod@divisor+3
  7379  24B0  01A4               	clrf	___lomod@divisor+4
  7380  24B1  01A5               	clrf	___lomod@divisor+5
  7381  24B2  01A6               	clrf	___lomod@divisor+6
  7382  24B3  01A7               	clrf	___lomod@divisor+7
  7383  24B4  083F               	movf	utoa@n,w
  7384  24B5  00A8               	movwf	___lomod@dividend
  7385  24B6  0840               	movf	utoa@n+1,w
  7386  24B7  00A9               	movwf	___lomod@dividend+1
  7387  24B8  0841               	movf	utoa@n+2,w
  7388  24B9  00AA               	movwf	___lomod@dividend+2
  7389  24BA  0842               	movf	utoa@n+3,w
  7390  24BB  00AB               	movwf	___lomod@dividend+3
  7391  24BC  0843               	movf	utoa@n+4,w
  7392  24BD  00AC               	movwf	___lomod@dividend+4
  7393  24BE  0844               	movf	utoa@n+5,w
  7394  24BF  00AD               	movwf	___lomod@dividend+5
  7395  24C0  0845               	movf	utoa@n+6,w
  7396  24C1  00AE               	movwf	___lomod@dividend+6
  7397  24C2  0846               	movf	utoa@n+7,w
  7398  24C3  00AF               	movwf	___lomod@dividend+7
  7399  24C4  31A9  2109  31A4   	fcall	___lomod
  7400  24C7  0020               	movlb	0	; select bank0
  7401  24C8  0820               	movf	?___lomod,w
  7402  24C9  3E30               	addlw	48
  7403  24CA  00BA               	movwf	??_utoa
  7404  24CB  0847               	movf	utoa@i,w
  7405  24CC  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7406  24CD  0086               	movwf	6
  7407  24CE  3002               	movlw	2	; select bank4/5
  7408  24CF  0087               	movwf	7
  7409  24D0  083A               	movf	??_utoa,w
  7410  24D1  0081               	movwf	1
  7411                           
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7413  24D2  30FF               	movlw	255
  7414  24D3  07BB               	addwf	utoa@p,f
  7415  24D4  30FF               	movlw	255
  7416  24D5  3DBC               	addwfc	utoa@p+1,f
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7419  24D6  30FF               	movlw	255
  7420  24D7  07BD               	addwf	utoa@w,f
  7421  24D8  30FF               	movlw	255
  7422  24D9  3DBE               	addwfc	utoa@w+1,f
  7423                           
  7424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7425  24DA  300A               	movlw	10
  7426  24DB  00A0               	movwf	___lodiv@divisor
  7427  24DC  01A1               	clrf	___lodiv@divisor+1
  7428  24DD  01A2               	clrf	___lodiv@divisor+2
  7429  24DE  01A3               	clrf	___lodiv@divisor+3
  7430  24DF  01A4               	clrf	___lodiv@divisor+4
  7431  24E0  01A5               	clrf	___lodiv@divisor+5
  7432  24E1  01A6               	clrf	___lodiv@divisor+6
  7433  24E2  01A7               	clrf	___lodiv@divisor+7
  7434  24E3  083F               	movf	utoa@n,w
  7435  24E4  00A8               	movwf	___lodiv@dividend
  7436  24E5  0840               	movf	utoa@n+1,w
  7437  24E6  00A9               	movwf	___lodiv@dividend+1
  7438  24E7  0841               	movf	utoa@n+2,w
  7439  24E8  00AA               	movwf	___lodiv@dividend+2
  7440  24E9  0842               	movf	utoa@n+3,w
  7441  24EA  00AB               	movwf	___lodiv@dividend+3
  7442  24EB  0843               	movf	utoa@n+4,w
  7443  24EC  00AC               	movwf	___lodiv@dividend+4
  7444  24ED  0844               	movf	utoa@n+5,w
  7445  24EE  00AD               	movwf	___lodiv@dividend+5
  7446  24EF  0845               	movf	utoa@n+6,w
  7447  24F0  00AE               	movwf	___lodiv@dividend+6
  7448  24F1  0846               	movf	utoa@n+7,w
  7449  24F2  00AF               	movwf	___lodiv@dividend+7
  7450  24F3  31AA  2268  31A4   	fcall	___lodiv
  7451  24F6  0020               	movlb	0	; select bank0
  7452  24F7  0820               	movf	?___lodiv,w
  7453  24F8  00BF               	movwf	utoa@n
  7454  24F9  0821               	movf	?___lodiv+1,w
  7455  24FA  00C0               	movwf	utoa@n+1
  7456  24FB  0822               	movf	?___lodiv+2,w
  7457  24FC  00C1               	movwf	utoa@n+2
  7458  24FD  0823               	movf	?___lodiv+3,w
  7459  24FE  00C2               	movwf	utoa@n+3
  7460  24FF  0824               	movf	?___lodiv+4,w
  7461  2500  00C3               	movwf	utoa@n+4
  7462  2501  0825               	movf	?___lodiv+5,w
  7463  2502  00C4               	movwf	utoa@n+5
  7464  2503  0826               	movf	?___lodiv+6,w
  7465  2504  00C5               	movwf	utoa@n+6
  7466  2505  0827               	movf	?___lodiv+7,w
  7467  2506  00C6               	movwf	utoa@n+7
  7468  2507                     l6813:	
  7469                           
  7470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7471  2507  0020               	movlb	0	; select bank0
  7472  2508  0847               	movf	utoa@i,w
  7473  2509  0448               	iorwf	utoa@i+1,w
  7474  250A  1D03               	btfss	3,2
  7475  250B  2C82               	goto	l6815
  7476  250C                     l6823:	
  7477                           
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7479  250C  0020               	movlb	0	; select bank0
  7480  250D  0831               	movf	utoa@fp+1,w
  7481  250E  00A7               	movwf	pad@fp+1
  7482  250F  0830               	movf	utoa@fp,w
  7483  2510  00A6               	movwf	pad@fp
  7484  2511  0847               	movf	utoa@i,w
  7485  2512  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7486  2513  00BA               	movwf	??_utoa
  7487  2514  083A               	movf	??_utoa,w
  7488  2515  00A8               	movwf	pad@buf
  7489  2516  083E               	movf	utoa@w+1,w
  7490  2517  00AA               	movwf	pad@p+1
  7491  2518  083D               	movf	utoa@w,w
  7492  2519  00A9               	movwf	pad@p
  7493  251A  31B6  26B3         	fcall	_pad
  7494  251C  0020               	movlb	0	; select bank0
  7495  251D  0827               	movf	?_pad+1,w
  7496  251E  00B1               	movwf	?_utoa+1
  7497  251F  0826               	movf	?_pad,w
  7498  2520  00B0               	movwf	?_utoa
  7499  2521  0008               	return
  7500  2522                     __end_of_utoa:	
  7501                           
  7502                           	psect	text14
  7503  2909                     __ptext14:	
  7504 ;; *************** function ___lomod *****************
  7505 ;; Defined at:
  7506 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7509 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  counter         1    2[COMMON] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  8    0[BANK0 ] unsigned long long 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7521 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7524 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7525 ;;Total ram usage:       18 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    1
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_utoa
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           
  7536                           ;psect for function ___lomod
  7537  2909                     ___lomod:	
  7538                           
  7539                           ;incstack = 0
  7540                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7541  2909  0020               	movlb	0	; select bank0
  7542  290A  0820               	movf	___lomod@divisor,w
  7543  290B  0421               	iorwf	___lomod@divisor+1,w
  7544  290C  0422               	iorwf	___lomod@divisor+2,w
  7545  290D  0423               	iorwf	___lomod@divisor+3,w
  7546  290E  0424               	iorwf	___lomod@divisor+4,w
  7547  290F  0425               	iorwf	___lomod@divisor+5,w
  7548  2910  0426               	iorwf	___lomod@divisor+6,w
  7549  2911  0427               	iorwf	___lomod@divisor+7,w
  7550  2912  1903               	skipnz
  7551  2913  2961               	goto	l1281
  7552  2914  01F2               	clrf	___lomod@counter
  7553  2915  0AF2               	incf	___lomod@counter,f
  7554  2916                     l4405:	
  7555  2916  1BA7               	btfsc	___lomod@divisor+7,7
  7556  2917  2925               	goto	l4407
  7557  2918  35A0               	lslf	___lomod@divisor,f
  7558  2919  0DA1               	rlf	___lomod@divisor+1,f
  7559  291A  0DA2               	rlf	___lomod@divisor+2,f
  7560  291B  0DA3               	rlf	___lomod@divisor+3,f
  7561  291C  0DA4               	rlf	___lomod@divisor+4,f
  7562  291D  0DA5               	rlf	___lomod@divisor+5,f
  7563  291E  0DA6               	rlf	___lomod@divisor+6,f
  7564  291F  0DA7               	rlf	___lomod@divisor+7,f
  7565  2920  3001               	movlw	1
  7566  2921  00F1               	movwf	??___lomod
  7567  2922  0871               	movf	??___lomod,w
  7568  2923  07F2               	addwf	___lomod@counter,f
  7569  2924  2916               	goto	l4405
  7570  2925                     l4407:	
  7571  2925  0827               	movf	___lomod@divisor+7,w
  7572  2926  022F               	subwf	___lomod@dividend+7,w
  7573  2927  1D03               	skipz
  7574  2928  2943               	goto	u4565
  7575  2929  0826               	movf	___lomod@divisor+6,w
  7576  292A  022E               	subwf	___lomod@dividend+6,w
  7577  292B  1D03               	skipz
  7578  292C  2943               	goto	u4565
  7579  292D  0825               	movf	___lomod@divisor+5,w
  7580  292E  022D               	subwf	___lomod@dividend+5,w
  7581  292F  1D03               	skipz
  7582  2930  2943               	goto	u4565
  7583  2931  0824               	movf	___lomod@divisor+4,w
  7584  2932  022C               	subwf	___lomod@dividend+4,w
  7585  2933  1D03               	skipz
  7586  2934  2943               	goto	u4565
  7587  2935  0823               	movf	___lomod@divisor+3,w
  7588  2936  022B               	subwf	___lomod@dividend+3,w
  7589  2937  1D03               	skipz
  7590  2938  2943               	goto	u4565
  7591  2939  0822               	movf	___lomod@divisor+2,w
  7592  293A  022A               	subwf	___lomod@dividend+2,w
  7593  293B  1D03               	skipz
  7594  293C  2943               	goto	u4565
  7595  293D  0821               	movf	___lomod@divisor+1,w
  7596  293E  0229               	subwf	___lomod@dividend+1,w
  7597  293F  1D03               	skipz
  7598  2940  2943               	goto	u4565
  7599  2941  0820               	movf	___lomod@divisor,w
  7600  2942  0228               	subwf	___lomod@dividend,w
  7601  2943                     u4565:	
  7602  2943  1C03               	skipc
  7603  2944  2955               	goto	l4411
  7604  2945  0820               	movf	___lomod@divisor,w
  7605  2946  02A8               	subwf	___lomod@dividend,f
  7606  2947  0821               	movf	___lomod@divisor+1,w
  7607  2948  3BA9               	subwfb	___lomod@dividend+1,f
  7608  2949  0822               	movf	___lomod@divisor+2,w
  7609  294A  3BAA               	subwfb	___lomod@dividend+2,f
  7610  294B  0823               	movf	___lomod@divisor+3,w
  7611  294C  3BAB               	subwfb	___lomod@dividend+3,f
  7612  294D  0824               	movf	___lomod@divisor+4,w
  7613  294E  3BAC               	subwfb	___lomod@dividend+4,f
  7614  294F  0825               	movf	___lomod@divisor+5,w
  7615  2950  3BAD               	subwfb	___lomod@dividend+5,f
  7616  2951  0826               	movf	___lomod@divisor+6,w
  7617  2952  3BAE               	subwfb	___lomod@dividend+6,f
  7618  2953  0827               	movf	___lomod@divisor+7,w
  7619  2954  3BAF               	subwfb	___lomod@dividend+7,f
  7620  2955                     l4411:	
  7621  2955  36A7               	lsrf	___lomod@divisor+7,f
  7622  2956  0CA6               	rrf	___lomod@divisor+6,f
  7623  2957  0CA5               	rrf	___lomod@divisor+5,f
  7624  2958  0CA4               	rrf	___lomod@divisor+4,f
  7625  2959  0CA3               	rrf	___lomod@divisor+3,f
  7626  295A  0CA2               	rrf	___lomod@divisor+2,f
  7627  295B  0CA1               	rrf	___lomod@divisor+1,f
  7628  295C  0CA0               	rrf	___lomod@divisor,f
  7629  295D  3001               	movlw	1
  7630  295E  02F2               	subwf	___lomod@counter,f
  7631  295F  1D03               	btfss	3,2
  7632  2960  2925               	goto	l4407
  7633  2961                     l1281:	
  7634  2961  0828               	movf	___lomod@dividend,w
  7635  2962  00A0               	movwf	?___lomod
  7636  2963  0829               	movf	___lomod@dividend+1,w
  7637  2964  00A1               	movwf	?___lomod+1
  7638  2965  082A               	movf	___lomod@dividend+2,w
  7639  2966  00A2               	movwf	?___lomod+2
  7640  2967  082B               	movf	___lomod@dividend+3,w
  7641  2968  00A3               	movwf	?___lomod+3
  7642  2969  082C               	movf	___lomod@dividend+4,w
  7643  296A  00A4               	movwf	?___lomod+4
  7644  296B  082D               	movf	___lomod@dividend+5,w
  7645  296C  00A5               	movwf	?___lomod+5
  7646  296D  082E               	movf	___lomod@dividend+6,w
  7647  296E  00A6               	movwf	?___lomod+6
  7648  296F  082F               	movf	___lomod@dividend+7,w
  7649  2970  00A7               	movwf	?___lomod+7
  7650  2971  0008               	return
  7651  2972                     __end_of___lomod:	
  7652                           
  7653                           	psect	text15
  7654  2A68                     __ptext15:	
  7655 ;; *************** function ___lodiv *****************
  7656 ;; Defined at:
  7657 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7660 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  quotient        8    2[COMMON] unsigned long long 
  7663 ;;  counter         1   10[COMMON] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  8    0[BANK0 ] unsigned long long 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7673 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:       26 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_utoa
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           
  7688                           ;psect for function ___lodiv
  7689  2A68                     ___lodiv:	
  7690                           
  7691                           ;incstack = 0
  7692                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7693  2A68  3072               	movlw	low ___lodiv@quotient
  7694  2A69  0086               	movwf	6
  7695  2A6A  3000               	movlw	high ___lodiv@quotient
  7696  2A6B  0087               	movwf	7
  7697  2A6C  3008               	movlw	8
  7698  2A6D  00F1               	movwf	??___lodiv
  7699  2A6E  3000               	movlw	0
  7700  2A6F                     u4490:	
  7701  2A6F  001E               	movwi fsr1++
  7702  2A70  0BF1               	decfsz	??___lodiv,f
  7703  2A71  2A6F               	goto	u4490
  7704  2A72  0020               	movlb	0	; select bank0
  7705  2A73  0820               	movf	___lodiv@divisor,w
  7706  2A74  0421               	iorwf	___lodiv@divisor+1,w
  7707  2A75  0422               	iorwf	___lodiv@divisor+2,w
  7708  2A76  0423               	iorwf	___lodiv@divisor+3,w
  7709  2A77  0424               	iorwf	___lodiv@divisor+4,w
  7710  2A78  0425               	iorwf	___lodiv@divisor+5,w
  7711  2A79  0426               	iorwf	___lodiv@divisor+6,w
  7712  2A7A  0427               	iorwf	___lodiv@divisor+7,w
  7713  2A7B  1903               	skipnz
  7714  2A7C  2AD3               	goto	l1271
  7715  2A7D  01FA               	clrf	___lodiv@counter
  7716  2A7E  0AFA               	incf	___lodiv@counter,f
  7717  2A7F                     l4385:	
  7718  2A7F  1BA7               	btfsc	___lodiv@divisor+7,7
  7719  2A80  2A8E               	goto	l4387
  7720  2A81  35A0               	lslf	___lodiv@divisor,f
  7721  2A82  0DA1               	rlf	___lodiv@divisor+1,f
  7722  2A83  0DA2               	rlf	___lodiv@divisor+2,f
  7723  2A84  0DA3               	rlf	___lodiv@divisor+3,f
  7724  2A85  0DA4               	rlf	___lodiv@divisor+4,f
  7725  2A86  0DA5               	rlf	___lodiv@divisor+5,f
  7726  2A87  0DA6               	rlf	___lodiv@divisor+6,f
  7727  2A88  0DA7               	rlf	___lodiv@divisor+7,f
  7728  2A89  3001               	movlw	1
  7729  2A8A  00F1               	movwf	??___lodiv
  7730  2A8B  0871               	movf	??___lodiv,w
  7731  2A8C  07FA               	addwf	___lodiv@counter,f
  7732  2A8D  2A7F               	goto	l4385
  7733  2A8E                     l4387:	
  7734  2A8E  35F2               	lslf	___lodiv@quotient,f
  7735  2A8F  0DF3               	rlf	___lodiv@quotient+1,f
  7736  2A90  0DF4               	rlf	___lodiv@quotient+2,f
  7737  2A91  0DF5               	rlf	___lodiv@quotient+3,f
  7738  2A92  0DF6               	rlf	___lodiv@quotient+4,f
  7739  2A93  0DF7               	rlf	___lodiv@quotient+5,f
  7740  2A94  0DF8               	rlf	___lodiv@quotient+6,f
  7741  2A95  0DF9               	rlf	___lodiv@quotient+7,f
  7742  2A96  0827               	movf	___lodiv@divisor+7,w
  7743  2A97  022F               	subwf	___lodiv@dividend+7,w
  7744  2A98  1D03               	skipz
  7745  2A99  2AB4               	goto	u4525
  7746  2A9A  0826               	movf	___lodiv@divisor+6,w
  7747  2A9B  022E               	subwf	___lodiv@dividend+6,w
  7748  2A9C  1D03               	skipz
  7749  2A9D  2AB4               	goto	u4525
  7750  2A9E  0825               	movf	___lodiv@divisor+5,w
  7751  2A9F  022D               	subwf	___lodiv@dividend+5,w
  7752  2AA0  1D03               	skipz
  7753  2AA1  2AB4               	goto	u4525
  7754  2AA2  0824               	movf	___lodiv@divisor+4,w
  7755  2AA3  022C               	subwf	___lodiv@dividend+4,w
  7756  2AA4  1D03               	skipz
  7757  2AA5  2AB4               	goto	u4525
  7758  2AA6  0823               	movf	___lodiv@divisor+3,w
  7759  2AA7  022B               	subwf	___lodiv@dividend+3,w
  7760  2AA8  1D03               	skipz
  7761  2AA9  2AB4               	goto	u4525
  7762  2AAA  0822               	movf	___lodiv@divisor+2,w
  7763  2AAB  022A               	subwf	___lodiv@dividend+2,w
  7764  2AAC  1D03               	skipz
  7765  2AAD  2AB4               	goto	u4525
  7766  2AAE  0821               	movf	___lodiv@divisor+1,w
  7767  2AAF  0229               	subwf	___lodiv@dividend+1,w
  7768  2AB0  1D03               	skipz
  7769  2AB1  2AB4               	goto	u4525
  7770  2AB2  0820               	movf	___lodiv@divisor,w
  7771  2AB3  0228               	subwf	___lodiv@dividend,w
  7772  2AB4                     u4525:	
  7773  2AB4  1C03               	skipc
  7774  2AB5  2AC7               	goto	l4395
  7775  2AB6  0820               	movf	___lodiv@divisor,w
  7776  2AB7  02A8               	subwf	___lodiv@dividend,f
  7777  2AB8  0821               	movf	___lodiv@divisor+1,w
  7778  2AB9  3BA9               	subwfb	___lodiv@dividend+1,f
  7779  2ABA  0822               	movf	___lodiv@divisor+2,w
  7780  2ABB  3BAA               	subwfb	___lodiv@dividend+2,f
  7781  2ABC  0823               	movf	___lodiv@divisor+3,w
  7782  2ABD  3BAB               	subwfb	___lodiv@dividend+3,f
  7783  2ABE  0824               	movf	___lodiv@divisor+4,w
  7784  2ABF  3BAC               	subwfb	___lodiv@dividend+4,f
  7785  2AC0  0825               	movf	___lodiv@divisor+5,w
  7786  2AC1  3BAD               	subwfb	___lodiv@dividend+5,f
  7787  2AC2  0826               	movf	___lodiv@divisor+6,w
  7788  2AC3  3BAE               	subwfb	___lodiv@dividend+6,f
  7789  2AC4  0827               	movf	___lodiv@divisor+7,w
  7790  2AC5  3BAF               	subwfb	___lodiv@dividend+7,f
  7791  2AC6  1472               	bsf	___lodiv@quotient,0
  7792  2AC7                     l4395:	
  7793  2AC7  36A7               	lsrf	___lodiv@divisor+7,f
  7794  2AC8  0CA6               	rrf	___lodiv@divisor+6,f
  7795  2AC9  0CA5               	rrf	___lodiv@divisor+5,f
  7796  2ACA  0CA4               	rrf	___lodiv@divisor+4,f
  7797  2ACB  0CA3               	rrf	___lodiv@divisor+3,f
  7798  2ACC  0CA2               	rrf	___lodiv@divisor+2,f
  7799  2ACD  0CA1               	rrf	___lodiv@divisor+1,f
  7800  2ACE  0CA0               	rrf	___lodiv@divisor,f
  7801  2ACF  3001               	movlw	1
  7802  2AD0  02FA               	subwf	___lodiv@counter,f
  7803  2AD1  1D03               	btfss	3,2
  7804  2AD2  2A8E               	goto	l4387
  7805  2AD3                     l1271:	
  7806  2AD3  0872               	movf	___lodiv@quotient,w
  7807  2AD4  00A0               	movwf	?___lodiv
  7808  2AD5  0873               	movf	___lodiv@quotient+1,w
  7809  2AD6  00A1               	movwf	?___lodiv+1
  7810  2AD7  0874               	movf	___lodiv@quotient+2,w
  7811  2AD8  00A2               	movwf	?___lodiv+2
  7812  2AD9  0875               	movf	___lodiv@quotient+3,w
  7813  2ADA  00A3               	movwf	?___lodiv+3
  7814  2ADB  0876               	movf	___lodiv@quotient+4,w
  7815  2ADC  00A4               	movwf	?___lodiv+4
  7816  2ADD  0877               	movf	___lodiv@quotient+5,w
  7817  2ADE  00A5               	movwf	?___lodiv+5
  7818  2ADF  0878               	movf	___lodiv@quotient+6,w
  7819  2AE0  00A6               	movwf	?___lodiv+6
  7820  2AE1  0879               	movf	___lodiv@quotient+7,w
  7821  2AE2  00A7               	movwf	?___lodiv+7
  7822  2AE3  0008               	return
  7823  2AE4                     __end_of___lodiv:	
  7824                           
  7825                           	psect	text16
  7826  3704                     __ptext16:	
  7827 ;; *************** function _strncmp *****************
  7828 ;; Defined at:
  7829 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7832 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  7833 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  7834 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  7835 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  7836 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7837 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7838 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7839 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7840 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7841 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7842 ;;		 -> STR_21(4), 
  7843 ;;  n               2    5[COMMON] unsigned int 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  r               2   10[COMMON] PTR const unsigned char 
  7846 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7847 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7848 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7849 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7850 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7851 ;;		 -> STR_21(4), 
  7852 ;;  l               2    8[COMMON] PTR const unsigned char 
  7853 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  7854 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  7855 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  7856 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  2    1[COMMON] int 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7866 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7867 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7869 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7870 ;;Total ram usage:       11 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    1
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_vfpfcnvrt
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _strncmp
  7882  3704                     _strncmp:	
  7883                           
  7884                           ;incstack = 0
  7885                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7886  3704  0872               	movf	strncmp@_l+1,w
  7887  3705  00F9               	movwf	strncmp@l+1
  7888  3706  0871               	movf	strncmp@_l,w
  7889  3707  00F8               	movwf	strncmp@l
  7890  3708  0874               	movf	strncmp@_r+1,w
  7891  3709  00FB               	movwf	strncmp@r+1
  7892  370A  0873               	movf	strncmp@_r,w
  7893  370B  00FA               	movwf	strncmp@r
  7894  370C  3001               	movlw	1
  7895  370D  02F5               	subwf	strncmp@n,f
  7896  370E  3000               	movlw	0
  7897  370F  3BF6               	subwfb	strncmp@n+1,f
  7898  3710  0A75               	incf	strncmp@n,w
  7899  3711  1D03               	skipz
  7900  3712  2F3E               	goto	l4747
  7901  3713  0A76               	incf	strncmp@n+1,w
  7902  3714  1D03               	btfss	3,2
  7903  3715  2F3E               	goto	l4747
  7904  3716  01F1               	clrf	?_strncmp
  7905  3717  01F2               	clrf	?_strncmp+1
  7906  3718  0008               	return
  7907  3719                     l4749:	
  7908  3719  087A               	movf	strncmp@r,w
  7909  371A  0084               	movwf	4
  7910  371B  087B               	movf	strncmp@r+1,w
  7911  371C  0085               	movwf	5
  7912  371D  0012               	moviw fsr0++
  7913  371E  1903               	btfsc	3,2
  7914  371F  2F45               	goto	l4755
  7915  3720  0875               	movf	strncmp@n,w
  7916  3721  0476               	iorwf	strncmp@n+1,w
  7917  3722  1903               	btfsc	3,2
  7918  3723  2F45               	goto	l4755
  7919  3724  087A               	movf	strncmp@r,w
  7920  3725  0084               	movwf	4
  7921  3726  087B               	movf	strncmp@r+1,w
  7922  3727  0085               	movwf	5
  7923  3728  0800               	movf	0,w	;code access
  7924  3729  00F7               	movwf	??_strncmp
  7925  372A  0878               	movf	strncmp@l,w
  7926  372B  0084               	movwf	4
  7927  372C  0879               	movf	strncmp@l+1,w
  7928  372D  0085               	movwf	5
  7929  372E  0800               	movf	0,w	;code access
  7930  372F  0677               	xorwf	??_strncmp,w
  7931  3730  1D03               	btfss	3,2
  7932  3731  2F45               	goto	l4755
  7933  3732  3001               	movlw	1
  7934  3733  07F8               	addwf	strncmp@l,f
  7935  3734  3000               	movlw	0
  7936  3735  3DF9               	addwfc	strncmp@l+1,f
  7937  3736  3001               	movlw	1
  7938  3737  07FA               	addwf	strncmp@r,f
  7939  3738  3000               	movlw	0
  7940  3739  3DFB               	addwfc	strncmp@r+1,f
  7941  373A  3001               	movlw	1
  7942  373B  02F5               	subwf	strncmp@n,f
  7943  373C  3000               	movlw	0
  7944  373D  3BF6               	subwfb	strncmp@n+1,f
  7945  373E                     l4747:	
  7946  373E  0878               	movf	strncmp@l,w
  7947  373F  0084               	movwf	4
  7948  3740  0879               	movf	strncmp@l+1,w
  7949  3741  0085               	movwf	5
  7950  3742  0012               	moviw fsr0++
  7951  3743  1D03               	btfss	3,2
  7952  3744  2F19               	goto	l4749
  7953  3745                     l4755:	
  7954  3745  0878               	movf	strncmp@l,w
  7955  3746  0084               	movwf	4
  7956  3747  0879               	movf	strncmp@l+1,w
  7957  3748  0085               	movwf	5
  7958  3749  0800               	movf	0,w	;code access
  7959  374A  00F7               	movwf	??_strncmp
  7960  374B  087A               	movf	strncmp@r,w
  7961  374C  0084               	movwf	4
  7962  374D  087B               	movf	strncmp@r+1,w
  7963  374E  0085               	movwf	5
  7964  374F  0800               	movf	0,w	;code access
  7965  3750  0277               	subwf	??_strncmp,w
  7966  3751  00F1               	movwf	?_strncmp
  7967  3752  01F2               	clrf	?_strncmp+1
  7968  3753  1C03               	skipc
  7969  3754  03F2               	decf	?_strncmp+1,f
  7970  3755  0008               	return
  7971  3756                     __end_of_strncmp:	
  7972                           
  7973                           	psect	text17
  7974  2F3B                     __ptext17:	
  7975 ;; *************** function _stoa *****************
  7976 ;; Defined at:
  7977 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7980 ;;		 -> vsnprintf@f(6), 
  7981 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7982 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  7985 ;;  l               2   19[BANK0 ] int 
  7986 ;;  p               2   17[BANK0 ] int 
  7987 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  7988 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), updateTemperatures@vtsx(2), 
  7989 ;;  w               2   13[BANK0 ] int 
  7990 ;;  i               2   11[BANK0 ] int 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  2    0[BANK0 ] int 
  7993 ;; Registers used:
  7994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8001 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8003 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8004 ;;Total ram usage:       23 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    3
  8007 ;; This function calls:
  8008 ;;		_fputc
  8009 ;;		_strlen
  8010 ;; This function is called by:
  8011 ;;		_vfpfcnvrt
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function _stoa
  8017  2F3B                     _stoa:	
  8018                           
  8019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8020                           
  8021                           ;incstack = 0
  8022                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8023  2F3B  304E               	movlw	low stoa@F1152
  8024  2F3C  0086               	movwf	6
  8025  2F3D  3002               	movlw	high stoa@F1152
  8026  2F3E  0087               	movwf	7
  8027  2F3F  3024               	movlw	low stoa@nuls
  8028  2F40  0084               	movwf	4
  8029  2F41  3000               	movlw	high stoa@nuls
  8030  2F42  0085               	movwf	5
  8031  2F43  3007               	movlw	7
  8032  2F44  00FA               	movwf	??_stoa
  8033  2F45                     u4870:	
  8034  2F45  0016               	moviw fsr1++
  8035  2F46  001A               	movwi fsr0++
  8036  2F47  0BFA               	decfsz	??_stoa,f
  8037  2F48  2F45               	goto	u4870
  8038                           
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8040  2F49  0020               	movlb	0	; select bank0
  8041  2F4A  0823               	movf	stoa@s+1,w
  8042  2F4B  00B0               	movwf	stoa@cp+1
  8043  2F4C  0822               	movf	stoa@s,w
  8044  2F4D  00AF               	movwf	stoa@cp
  8045                           
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8047  2F4E  082F               	movf	stoa@cp,w
  8048  2F4F  0430               	iorwf	stoa@cp+1,w
  8049  2F50  1D03               	btfss	3,2
  8050  2F51  2F56               	goto	l4549
  8051                           
  8052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8053  2F52  3024               	movlw	low stoa@nuls
  8054  2F53  00AF               	movwf	stoa@cp
  8055  2F54  3000               	movlw	high stoa@nuls
  8056  2F55  00B0               	movwf	stoa@cp+1
  8057  2F56                     l4549:	
  8058                           
  8059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8060  2F56  0830               	movf	stoa@cp+1,w
  8061  2F57  00F2               	movwf	strlen@s+1
  8062  2F58  082F               	movf	stoa@cp,w
  8063  2F59  00F1               	movwf	strlen@s
  8064  2F5A  31B2  22DC  31AF   	fcall	_strlen
  8065  2F5D  0872               	movf	?_strlen+1,w
  8066  2F5E  0020               	movlb	0	; select bank0
  8067  2F5F  00B4               	movwf	stoa@l+1
  8068  2F60  0871               	movf	?_strlen,w
  8069  2F61  00B3               	movwf	stoa@l
  8070                           
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8072  2F62  0022               	movlb	2	; select bank2
  8073  2F63  0867               	movf	(_prec+1)^(0+256),w
  8074  2F64  0020               	movlb	0	; select bank0
  8075  2F65  00B2               	movwf	stoa@p+1
  8076  2F66  0022               	movlb	2	; select bank2
  8077  2F67  0866               	movf	_prec^(0+256),w
  8078  2F68  0020               	movlb	0	; select bank0
  8079  2F69  00B1               	movwf	stoa@p
  8080                           
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8082  2F6A  1BB2               	btfsc	stoa@p+1,7
  8083  2F6B  2F7D               	goto	l893
  8084  2F6C  0832               	movf	stoa@p+1,w
  8085  2F6D  3A80               	xorlw	128
  8086  2F6E  00FA               	movwf	??_stoa
  8087  2F6F  0834               	movf	stoa@l+1,w
  8088  2F70  3A80               	xorlw	128
  8089  2F71  027A               	subwf	??_stoa,w
  8090  2F72  1D03               	skipz
  8091  2F73  2F76               	goto	u4905
  8092  2F74  0833               	movf	stoa@l,w
  8093  2F75  0231               	subwf	stoa@p,w
  8094  2F76                     u4905:	
  8095  2F76  1803               	btfsc	3,0
  8096  2F77  2F7D               	goto	l893
  8097  2F78  0020               	movlb	0	; select bank0
  8098  2F79  0832               	movf	stoa@p+1,w
  8099  2F7A  00B4               	movwf	stoa@l+1
  8100  2F7B  0831               	movf	stoa@p,w
  8101  2F7C  00B3               	movwf	stoa@l
  8102  2F7D                     l893:	
  8103                           
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8105  2F7D  0020               	movlb	0	; select bank0
  8106  2F7E  0834               	movf	stoa@l+1,w
  8107  2F7F  00B2               	movwf	stoa@p+1
  8108  2F80  0833               	movf	stoa@l,w
  8109  2F81  00B1               	movwf	stoa@p
  8110                           
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8112  2F82  0022               	movlb	2	; select bank2
  8113  2F83  0865               	movf	(_width+1)^(0+256),w
  8114  2F84  0020               	movlb	0	; select bank0
  8115  2F85  00AE               	movwf	stoa@w+1
  8116  2F86  0022               	movlb	2	; select bank2
  8117  2F87  0864               	movf	_width^(0+256),w
  8118  2F88  0020               	movlb	0	; select bank0
  8119  2F89  00AD               	movwf	stoa@w
  8120                           
  8121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8122  2F8A  0022               	movlb	2	; select bank2
  8123  2F8B  1C68               	btfss	_flags^(0+256),0
  8124  2F8C  2F9F               	goto	l4567
  8125  2F8D  2FAC               	goto	l4569
  8126  2F8E                     l4563:	
  8127                           
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8129  2F8E  3020               	movlw	32
  8130  2F8F  00F1               	movwf	fputc@c
  8131  2F90  3000               	movlw	0
  8132  2F91  00F2               	movwf	fputc@c+1
  8133  2F92  0020               	movlb	0	; select bank0
  8134  2F93  0821               	movf	stoa@fp+1,w
  8135  2F94  00F4               	movwf	fputc@fp+1
  8136  2F95  0820               	movf	stoa@fp,w
  8137  2F96  00F3               	movwf	fputc@fp
  8138  2F97  31B7  2756  31AF   	fcall	_fputc
  8139                           
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8141  2F9A  3001               	movlw	1
  8142  2F9B  0020               	movlb	0	; select bank0
  8143  2F9C  07B3               	addwf	stoa@l,f
  8144  2F9D  3000               	movlw	0
  8145  2F9E  3DB4               	addwfc	stoa@l+1,f
  8146  2F9F                     l4567:	
  8147                           
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8149  2F9F  0020               	movlb	0	; select bank0
  8150  2FA0  0834               	movf	stoa@l+1,w
  8151  2FA1  3A80               	xorlw	128
  8152  2FA2  00FA               	movwf	??_stoa
  8153  2FA3  082E               	movf	stoa@w+1,w
  8154  2FA4  3A80               	xorlw	128
  8155  2FA5  027A               	subwf	??_stoa,w
  8156  2FA6  1D03               	skipz
  8157  2FA7  2FAA               	goto	u4925
  8158  2FA8  082D               	movf	stoa@w,w
  8159  2FA9  0233               	subwf	stoa@l,w
  8160  2FAA                     u4925:	
  8161  2FAA  1C03               	skipc
  8162  2FAB  2F8E               	goto	l4563
  8163  2FAC                     l4569:	
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8166  2FAC  0020               	movlb	0	; select bank0
  8167  2FAD  01AB               	clrf	stoa@i
  8168  2FAE  01AC               	clrf	stoa@i+1
  8169  2FAF                     l4577:	
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8171                           
  8172                           
  8173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8174  2FAF  082C               	movf	stoa@i+1,w
  8175  2FB0  3A80               	xorlw	128
  8176  2FB1  00FA               	movwf	??_stoa
  8177  2FB2  0832               	movf	stoa@p+1,w
  8178  2FB3  3A80               	xorlw	128
  8179  2FB4  027A               	subwf	??_stoa,w
  8180  2FB5  1D03               	skipz
  8181  2FB6  2FB9               	goto	u4935
  8182  2FB7  0831               	movf	stoa@p,w
  8183  2FB8  022B               	subwf	stoa@i,w
  8184  2FB9                     u4935:	
  8185  2FB9  1803               	btfsc	3,0
  8186  2FBA  2FD8               	goto	l902
  8187                           
  8188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8189  2FBB  0020               	movlb	0	; select bank0
  8190  2FBC  082F               	movf	stoa@cp,w
  8191  2FBD  0086               	movwf	6
  8192  2FBE  0830               	movf	stoa@cp+1,w
  8193  2FBF  0087               	movwf	7
  8194  2FC0  0801               	movf	1,w
  8195  2FC1  00FA               	movwf	??_stoa
  8196  2FC2  01FB               	clrf	??_stoa+1
  8197  2FC3  087A               	movf	??_stoa,w
  8198  2FC4  00F1               	movwf	fputc@c
  8199  2FC5  087B               	movf	??_stoa+1,w
  8200  2FC6  00F2               	movwf	fputc@c+1
  8201  2FC7  0821               	movf	stoa@fp+1,w
  8202  2FC8  00F4               	movwf	fputc@fp+1
  8203  2FC9  0820               	movf	stoa@fp,w
  8204  2FCA  00F3               	movwf	fputc@fp
  8205  2FCB  31B7  2756  31AF   	fcall	_fputc
  8206                           
  8207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8208  2FCE  3001               	movlw	1
  8209  2FCF  0020               	movlb	0	; select bank0
  8210  2FD0  07AF               	addwf	stoa@cp,f
  8211  2FD1  3000               	movlw	0
  8212  2FD2  3DB0               	addwfc	stoa@cp+1,f
  8213                           
  8214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8215  2FD3  3001               	movlw	1
  8216  2FD4  07AB               	addwf	stoa@i,f
  8217  2FD5  3000               	movlw	0
  8218  2FD6  3DAC               	addwfc	stoa@i+1,f
  8219  2FD7  2FAF               	goto	l4577
  8220  2FD8                     l902:	
  8221                           
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8223  2FD8  0022               	movlb	2	; select bank2
  8224  2FD9  1868               	btfsc	_flags^(0+256),0
  8225  2FDA  2FED               	goto	l4585
  8226  2FDB  2FFA               	goto	l4587
  8227  2FDC                     l4581:	
  8228                           
  8229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8230  2FDC  3020               	movlw	32
  8231  2FDD  00F1               	movwf	fputc@c
  8232  2FDE  3000               	movlw	0
  8233  2FDF  00F2               	movwf	fputc@c+1
  8234  2FE0  0020               	movlb	0	; select bank0
  8235  2FE1  0821               	movf	stoa@fp+1,w
  8236  2FE2  00F4               	movwf	fputc@fp+1
  8237  2FE3  0820               	movf	stoa@fp,w
  8238  2FE4  00F3               	movwf	fputc@fp
  8239  2FE5  31B7  2756  31AF   	fcall	_fputc
  8240                           
  8241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8242  2FE8  3001               	movlw	1
  8243  2FE9  0020               	movlb	0	; select bank0
  8244  2FEA  07B3               	addwf	stoa@l,f
  8245  2FEB  3000               	movlw	0
  8246  2FEC  3DB4               	addwfc	stoa@l+1,f
  8247  2FED                     l4585:	
  8248                           
  8249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8250  2FED  0020               	movlb	0	; select bank0
  8251  2FEE  0834               	movf	stoa@l+1,w
  8252  2FEF  3A80               	xorlw	128
  8253  2FF0  00FA               	movwf	??_stoa
  8254  2FF1  082E               	movf	stoa@w+1,w
  8255  2FF2  3A80               	xorlw	128
  8256  2FF3  027A               	subwf	??_stoa,w
  8257  2FF4  1D03               	skipz
  8258  2FF5  2FF8               	goto	u4955
  8259  2FF6  082D               	movf	stoa@w,w
  8260  2FF7  0233               	subwf	stoa@l,w
  8261  2FF8                     u4955:	
  8262  2FF8  1C03               	skipc
  8263  2FF9  2FDC               	goto	l4581
  8264  2FFA                     l4587:	
  8265                           
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8267  2FFA  0020               	movlb	0	; select bank0
  8268  2FFB  0834               	movf	stoa@l+1,w
  8269  2FFC  00A1               	movwf	?_stoa+1
  8270  2FFD  0833               	movf	stoa@l,w
  8271  2FFE  00A0               	movwf	?_stoa
  8272  2FFF  0008               	return
  8273  3000                     __end_of_stoa:	
  8274                           
  8275                           	psect	text18
  8276  2522                     __ptext18:	
  8277 ;; *************** function _otoa *****************
  8278 ;; Defined at:
  8279 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8282 ;;		 -> vsnprintf@f(6), 
  8283 ;;  d               8   18[BANK0 ] unsigned long long 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  n               8   40[BANK0 ] unsigned long long 
  8286 ;;  i               2   48[BANK0 ] int 
  8287 ;;  w               2   38[BANK0 ] int 
  8288 ;;  t               2   36[BANK0 ] int 
  8289 ;;  p               2   34[BANK0 ] int 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  2   16[BANK0 ] int 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8299 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8300 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8301 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8302 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8303 ;;Total ram usage:       34 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    5
  8306 ;; This function calls:
  8307 ;;		_pad
  8308 ;; This function is called by:
  8309 ;;		_vfpfcnvrt
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function _otoa
  8315  2522                     _otoa:	
  8316                           
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8321  2522  0022               	movlb	2	; select bank2
  8322  2523  1BE7               	btfsc	(_prec+1)^(0+256),7
  8323  2524  2D29               	goto	l871
  8324                           
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8326  2525  30FD               	movlw	253
  8327  2526  05E8               	andwf	_flags^(0+256),f
  8328  2527  30FF               	movlw	255
  8329  2528  05E9               	andwf	(_flags+1)^(0+256),f
  8330  2529                     l871:	
  8331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8332                           
  8333                           
  8334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8335  2529  0867               	movf	(_prec+1)^(0+256),w
  8336  252A  3A80               	xorlw	128
  8337  252B  0020               	movlb	0	; select bank0
  8338  252C  00BA               	movwf	??_otoa
  8339  252D  3080               	movlw	128
  8340  252E  023A               	subwf	??_otoa,w
  8341  252F  1D03               	skipz
  8342  2530  2D34               	goto	u8255
  8343  2531  3001               	movlw	1
  8344  2532  0022               	movlb	2	; select bank2
  8345  2533  0266               	subwf	_prec^(0+256),w
  8346  2534                     u8255:	
  8347  2534  1803               	skipnc
  8348  2535  2D3C               	goto	l6753
  8349  2536  3001               	movlw	1
  8350  2537  0020               	movlb	0	; select bank0
  8351  2538  00C2               	movwf	otoa@p
  8352  2539  3000               	movlw	0
  8353  253A  00C3               	movwf	otoa@p+1
  8354  253B  2D44               	goto	l875
  8355  253C                     l6753:	
  8356  253C  0022               	movlb	2	; select bank2
  8357  253D  0867               	movf	(_prec+1)^(0+256),w
  8358  253E  0020               	movlb	0	; select bank0
  8359  253F  00C3               	movwf	otoa@p+1
  8360  2540  0022               	movlb	2	; select bank2
  8361  2541  0866               	movf	_prec^(0+256),w
  8362  2542  0020               	movlb	0	; select bank0
  8363  2543  00C2               	movwf	otoa@p
  8364  2544                     l875:	
  8365                           
  8366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8367  2544  0022               	movlb	2	; select bank2
  8368  2545  0865               	movf	(_width+1)^(0+256),w
  8369  2546  0020               	movlb	0	; select bank0
  8370  2547  00C7               	movwf	otoa@w+1
  8371  2548  0022               	movlb	2	; select bank2
  8372  2549  0864               	movf	_width^(0+256),w
  8373  254A  0020               	movlb	0	; select bank0
  8374  254B  00C6               	movwf	otoa@w
  8375                           
  8376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8377  254C  0832               	movf	otoa@d,w
  8378  254D  00C8               	movwf	otoa@n
  8379  254E  0833               	movf	otoa@d+1,w
  8380  254F  00C9               	movwf	otoa@n+1
  8381  2550  0834               	movf	otoa@d+2,w
  8382  2551  00CA               	movwf	otoa@n+2
  8383  2552  0835               	movf	otoa@d+3,w
  8384  2553  00CB               	movwf	otoa@n+3
  8385  2554  0836               	movf	otoa@d+4,w
  8386  2555  00CC               	movwf	otoa@n+4
  8387  2556  0837               	movf	otoa@d+5,w
  8388  2557  00CD               	movwf	otoa@n+5
  8389  2558  0838               	movf	otoa@d+6,w
  8390  2559  00CE               	movwf	otoa@n+6
  8391  255A  0839               	movf	otoa@d+7,w
  8392  255B  00CF               	movwf	otoa@n+7
  8393                           
  8394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8395  255C  301F               	movlw	31
  8396  255D  00D0               	movwf	otoa@i
  8397  255E  3000               	movlw	0
  8398  255F  00D1               	movwf	otoa@i+1
  8399                           
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8401  2560  0024               	movlb	4	; select bank4
  8402  2561  01CD               	clrf	(_dbuf^(0+512)+31)
  8403                           
  8404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8405  2562  0020               	movlb	0	; select bank0
  8406  2563  01C4               	clrf	otoa@t
  8407  2564  01C5               	clrf	otoa@t+1
  8408                           
  8409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8410  2565  2DD9               	goto	l876
  8411  2566                     l6771:	
  8412  2566  0020               	movlb	0	; select bank0
  8413  2567  0848               	movf	otoa@n,w
  8414  2568  0449               	iorwf	otoa@n+1,w
  8415  2569  044A               	iorwf	otoa@n+2,w
  8416  256A  044B               	iorwf	otoa@n+3,w
  8417  256B  044C               	iorwf	otoa@n+4,w
  8418  256C  044D               	iorwf	otoa@n+5,w
  8419  256D  044E               	iorwf	otoa@n+6,w
  8420  256E  044F               	iorwf	otoa@n+7,w
  8421  256F  1D03               	skipz
  8422  2570  2D8B               	goto	l6761
  8423  2571  0843               	movf	otoa@p+1,w
  8424  2572  3A80               	xorlw	128
  8425  2573  00BA               	movwf	??_otoa
  8426  2574  3080               	movlw	128
  8427  2575  023A               	subwf	??_otoa,w
  8428  2576  1D03               	skipz
  8429  2577  2D7A               	goto	u8295
  8430  2578  3001               	movlw	1
  8431  2579  0242               	subwf	otoa@p,w
  8432  257A                     u8295:	
  8433  257A  1803               	skipnc
  8434  257B  2D8B               	goto	l6761
  8435  257C  0020               	movlb	0	; select bank0
  8436  257D  0847               	movf	otoa@w+1,w
  8437  257E  3A80               	xorlw	128
  8438  257F  00BA               	movwf	??_otoa
  8439  2580  3080               	movlw	128
  8440  2581  023A               	subwf	??_otoa,w
  8441  2582  1D03               	skipz
  8442  2583  2D86               	goto	u8305
  8443  2584  3001               	movlw	1
  8444  2585  0246               	subwf	otoa@w,w
  8445  2586                     u8305:	
  8446  2586  1C03               	skipc
  8447  2587  2DE4               	goto	l882
  8448  2588  0022               	movlb	2	; select bank2
  8449  2589  1CE8               	btfss	_flags^(0+256),1
  8450  258A  2DE4               	goto	l882
  8451  258B                     l6761:	
  8452                           
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8454  258B  30FF               	movlw	255
  8455  258C  0020               	movlb	0	; select bank0
  8456  258D  07D0               	addwf	otoa@i,f
  8457  258E  30FF               	movlw	255
  8458  258F  3DD1               	addwfc	otoa@i+1,f
  8459                           
  8460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8461  2590  3007               	movlw	7
  8462  2591  0548               	andwf	otoa@n,w
  8463  2592  00C4               	movwf	otoa@t
  8464  2593  3000               	movlw	0
  8465  2594  0549               	andwf	otoa@n+1,w
  8466  2595  00C5               	movwf	otoa@t+1
  8467                           
  8468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8469  2596  0844               	movf	otoa@t,w
  8470  2597  3E30               	addlw	48
  8471  2598  00BA               	movwf	??_otoa
  8472  2599  0850               	movf	otoa@i,w
  8473  259A  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8474  259B  0086               	movwf	6
  8475  259C  3002               	movlw	2	; select bank4/5
  8476  259D  0087               	movwf	7
  8477  259E  083A               	movf	??_otoa,w
  8478  259F  0081               	movwf	1
  8479                           
  8480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8481  25A0  30FF               	movlw	255
  8482  25A1  07C2               	addwf	otoa@p,f
  8483  25A2  30FF               	movlw	255
  8484  25A3  3DC3               	addwfc	otoa@p+1,f
  8485                           
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8487  25A4  30FF               	movlw	255
  8488  25A5  07C6               	addwf	otoa@w,f
  8489  25A6  30FF               	movlw	255
  8490  25A7  3DC7               	addwfc	otoa@w+1,f
  8491                           
  8492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8493  25A8  3048               	movlw	low otoa@n
  8494  25A9  0086               	movwf	6
  8495  25AA  3000               	movlw	high otoa@n
  8496  25AB  0087               	movwf	7
  8497  25AC  3F40               	moviw [0]fsr1
  8498  25AD  00BA               	movwf	??_otoa
  8499  25AE  3F41               	moviw [1]fsr1
  8500  25AF  00BB               	movwf	??_otoa+1
  8501  25B0  3F42               	moviw [2]fsr1
  8502  25B1  00BC               	movwf	??_otoa+2
  8503  25B2  3F43               	moviw [3]fsr1
  8504  25B3  00BD               	movwf	??_otoa+3
  8505  25B4  3F44               	moviw [4]fsr1
  8506  25B5  00BE               	movwf	??_otoa+4
  8507  25B6  3F45               	moviw [5]fsr1
  8508  25B7  00BF               	movwf	??_otoa+5
  8509  25B8  3F46               	moviw [6]fsr1
  8510  25B9  00C0               	movwf	??_otoa+6
  8511  25BA  3F47               	moviw [7]fsr1
  8512  25BB  00C1               	movwf	??_otoa+7
  8513  25BC  3003               	movlw	3
  8514  25BD                     u8265:	
  8515  25BD  0020               	movlb	0	; select bank0
  8516  25BE  36C1               	lsrf	??_otoa+7,f
  8517  25BF  0CC0               	rrf	??_otoa+6,f
  8518  25C0  0CBF               	rrf	??_otoa+5,f
  8519  25C1  0CBE               	rrf	??_otoa+4,f
  8520  25C2  0CBD               	rrf	??_otoa+3,f
  8521  25C3  0CBC               	rrf	??_otoa+2,f
  8522  25C4  0CBB               	rrf	??_otoa+1,f
  8523  25C5  0CBA               	rrf	??_otoa,f
  8524  25C6  0B89               	decfsz	9,f
  8525  25C7  2DBD               	goto	u8265
  8526  25C8  0020               	movlb	0	; select bank0
  8527  25C9  0841               	movf	??_otoa+7,w
  8528  25CA  00CF               	movwf	otoa@n+7
  8529  25CB  0840               	movf	??_otoa+6,w
  8530  25CC  00CE               	movwf	otoa@n+6
  8531  25CD  083F               	movf	??_otoa+5,w
  8532  25CE  00CD               	movwf	otoa@n+5
  8533  25CF  083E               	movf	??_otoa+4,w
  8534  25D0  00CC               	movwf	otoa@n+4
  8535  25D1  083D               	movf	??_otoa+3,w
  8536  25D2  00CB               	movwf	otoa@n+3
  8537  25D3  083C               	movf	??_otoa+2,w
  8538  25D4  00CA               	movwf	otoa@n+2
  8539  25D5  083B               	movf	??_otoa+1,w
  8540  25D6  00C9               	movwf	otoa@n+1
  8541  25D7  083A               	movf	??_otoa,w
  8542  25D8  00C8               	movwf	otoa@n
  8543  25D9                     l876:	
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8545                           
  8546                           
  8547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8548  25D9  0851               	movf	otoa@i+1,w
  8549  25DA  3A80               	xorlw	128
  8550  25DB  00BA               	movwf	??_otoa
  8551  25DC  3080               	movlw	128
  8552  25DD  023A               	subwf	??_otoa,w
  8553  25DE  1D03               	skipz
  8554  25DF  2DE2               	goto	u8275
  8555  25E0  3001               	movlw	1
  8556  25E1  0250               	subwf	otoa@i,w
  8557  25E2                     u8275:	
  8558  25E2  1803               	btfsc	3,0
  8559  25E3  2D66               	goto	l6771
  8560  25E4                     l882:	
  8561                           
  8562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8563  25E4  0022               	movlb	2	; select bank2
  8564  25E5  1E68               	btfss	_flags^(0+256),4
  8565  25E6  2DFD               	goto	l6787
  8566  25E7  0020               	movlb	0	; select bank0
  8567  25E8  0844               	movf	otoa@t,w
  8568  25E9  0445               	iorwf	otoa@t+1,w
  8569  25EA  1903               	btfsc	3,2
  8570  25EB  2DFD               	goto	l6787
  8571                           
  8572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8573  25EC  30FF               	movlw	255
  8574  25ED  07D0               	addwf	otoa@i,f
  8575  25EE  30FF               	movlw	255
  8576  25EF  3DD1               	addwfc	otoa@i+1,f
  8577                           
  8578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8579  25F0  3030               	movlw	48
  8580  25F1  00BA               	movwf	??_otoa
  8581  25F2  0850               	movf	otoa@i,w
  8582  25F3  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8583  25F4  0086               	movwf	6
  8584  25F5  3002               	movlw	2	; select bank4/5
  8585  25F6  0087               	movwf	7
  8586  25F7  083A               	movf	??_otoa,w
  8587  25F8  0081               	movwf	1
  8588                           
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8590  25F9  30FF               	movlw	255
  8591  25FA  07C6               	addwf	otoa@w,f
  8592  25FB  30FF               	movlw	255
  8593  25FC  3DC7               	addwfc	otoa@w+1,f
  8594  25FD                     l6787:	
  8595                           
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8597  25FD  0020               	movlb	0	; select bank0
  8598  25FE  0831               	movf	otoa@fp+1,w
  8599  25FF  00A7               	movwf	pad@fp+1
  8600  2600  0830               	movf	otoa@fp,w
  8601  2601  00A6               	movwf	pad@fp
  8602  2602  0850               	movf	otoa@i,w
  8603  2603  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8604  2604  00BA               	movwf	??_otoa
  8605  2605  083A               	movf	??_otoa,w
  8606  2606  00A8               	movwf	pad@buf
  8607  2607  0847               	movf	otoa@w+1,w
  8608  2608  00AA               	movwf	pad@p+1
  8609  2609  0846               	movf	otoa@w,w
  8610  260A  00A9               	movwf	pad@p
  8611  260B  31B6  26B3         	fcall	_pad
  8612  260D  0020               	movlb	0	; select bank0
  8613  260E  0827               	movf	?_pad+1,w
  8614  260F  00B1               	movwf	?_otoa+1
  8615  2610  0826               	movf	?_pad,w
  8616  2611  00B0               	movwf	?_otoa
  8617  2612  0008               	return
  8618  2613                     __end_of_otoa:	
  8619                           
  8620                           	psect	text19
  8621  1A36                     __ptext19:	
  8622 ;; *************** function _dtoa *****************
  8623 ;; Defined at:
  8624 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8627 ;;		 -> vsnprintf@f(6), 
  8628 ;;  d               8   18[BANK0 ] long long 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  n               8   37[BANK0 ] long long 
  8631 ;;  i               2   45[BANK0 ] int 
  8632 ;;  s               2   35[BANK0 ] int 
  8633 ;;  w               2   33[BANK0 ] int 
  8634 ;;  p               2   31[BANK0 ] int 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  2   16[BANK0 ] int 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8644 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8645 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8646 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8647 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8648 ;;Total ram usage:       31 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    5
  8651 ;; This function calls:
  8652 ;;		___aodiv
  8653 ;;		___aomod
  8654 ;;		_abs
  8655 ;;		_pad
  8656 ;; This function is called by:
  8657 ;;		_vfpfcnvrt
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _dtoa
  8663  1A36                     _dtoa:	
  8664                           
  8665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8669  1A36  0020               	movlb	0	; select bank0
  8670  1A37  0832               	movf	dtoa@d,w
  8671  1A38  00C5               	movwf	dtoa@n
  8672  1A39  0833               	movf	dtoa@d+1,w
  8673  1A3A  00C6               	movwf	dtoa@n+1
  8674  1A3B  0834               	movf	dtoa@d+2,w
  8675  1A3C  00C7               	movwf	dtoa@n+2
  8676  1A3D  0835               	movf	dtoa@d+3,w
  8677  1A3E  00C8               	movwf	dtoa@n+3
  8678  1A3F  0836               	movf	dtoa@d+4,w
  8679  1A40  00C9               	movwf	dtoa@n+4
  8680  1A41  0837               	movf	dtoa@d+5,w
  8681  1A42  00CA               	movwf	dtoa@n+5
  8682  1A43  0838               	movf	dtoa@d+6,w
  8683  1A44  00CB               	movwf	dtoa@n+6
  8684  1A45  0839               	movf	dtoa@d+7,w
  8685  1A46  00CC               	movwf	dtoa@n+7
  8686                           
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8688  1A47  3045               	movlw	low dtoa@n
  8689  1A48  0086               	movwf	6
  8690  1A49  3000               	movlw	high dtoa@n
  8691  1A4A  0087               	movwf	7
  8692  1A4B  3F47               	moviw [7]fsr1
  8693  1A4C  00BA               	movwf	??_dtoa
  8694  1A4D  1FBA               	btfss	??_dtoa,7
  8695  1A4E  2A51               	goto	u8080
  8696  1A4F  3001               	movlw	1
  8697  1A50  2A52               	goto	u8090
  8698  1A51                     u8080:	
  8699  1A51  3000               	movlw	0
  8700  1A52                     u8090:	
  8701  1A52  0020               	movlb	0	; select bank0
  8702  1A53  00BB               	movwf	??_dtoa+1
  8703  1A54  01BC               	clrf	??_dtoa+2
  8704  1A55  083B               	movf	??_dtoa+1,w
  8705  1A56  00C3               	movwf	dtoa@s
  8706  1A57  083C               	movf	??_dtoa+2,w
  8707  1A58  00C4               	movwf	dtoa@s+1
  8708                           
  8709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8710  1A59  0843               	movf	dtoa@s,w
  8711  1A5A  0444               	iorwf	dtoa@s+1,w
  8712  1A5B  1903               	btfsc	3,2
  8713  1A5C  2A7B               	goto	l845
  8714                           
  8715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8716  1A5D  09C5               	comf	dtoa@n,f
  8717  1A5E  09C6               	comf	dtoa@n+1,f
  8718  1A5F  09C7               	comf	dtoa@n+2,f
  8719  1A60  09C8               	comf	dtoa@n+3,f
  8720  1A61  09C9               	comf	dtoa@n+4,f
  8721  1A62  09CA               	comf	dtoa@n+5,f
  8722  1A63  09CB               	comf	dtoa@n+6,f
  8723  1A64  09CC               	comf	dtoa@n+7,f
  8724  1A65  0AC5               	incf	dtoa@n,f
  8725  1A66  1D03               	skipz
  8726  1A67  2A7B               	goto	l845
  8727  1A68  0AC6               	incf	dtoa@n+1,f
  8728  1A69  1D03               	skipz
  8729  1A6A  2A7B               	goto	l845
  8730  1A6B  0AC7               	incf	dtoa@n+2,f
  8731  1A6C  1D03               	skipz
  8732  1A6D  2A7B               	goto	l845
  8733  1A6E  0AC8               	incf	dtoa@n+3,f
  8734  1A6F  1D03               	skipz
  8735  1A70  2A7B               	goto	l845
  8736  1A71  0AC9               	incf	dtoa@n+4,f
  8737  1A72  1D03               	skipz
  8738  1A73  2A7B               	goto	l845
  8739  1A74  0ACA               	incf	dtoa@n+5,f
  8740  1A75  1D03               	skipz
  8741  1A76  2A7B               	goto	l845
  8742  1A77  0ACB               	incf	dtoa@n+6,f
  8743  1A78  1D03               	skipz
  8744  1A79  2A7B               	goto	l845
  8745  1A7A  0ACC               	incf	dtoa@n+7,f
  8746  1A7B                     l845:	
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8748                           
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8751  1A7B  0022               	movlb	2	; select bank2
  8752  1A7C  1BE7               	btfsc	(_prec+1)^(0+256),7
  8753  1A7D  2A82               	goto	l846
  8754                           
  8755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8756  1A7E  30FD               	movlw	253
  8757  1A7F  05E8               	andwf	_flags^(0+256),f
  8758  1A80  30FF               	movlw	255
  8759  1A81  05E9               	andwf	(_flags+1)^(0+256),f
  8760  1A82                     l846:	
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8762                           
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8765  1A82  0867               	movf	(_prec+1)^(0+256),w
  8766  1A83  3A80               	xorlw	128
  8767  1A84  0020               	movlb	0	; select bank0
  8768  1A85  00BA               	movwf	??_dtoa
  8769  1A86  3080               	movlw	128
  8770  1A87  023A               	subwf	??_dtoa,w
  8771  1A88  1D03               	skipz
  8772  1A89  2A8D               	goto	u8135
  8773  1A8A  3001               	movlw	1
  8774  1A8B  0022               	movlb	2	; select bank2
  8775  1A8C  0266               	subwf	_prec^(0+256),w
  8776  1A8D                     u8135:	
  8777  1A8D  1803               	skipnc
  8778  1A8E  2A95               	goto	l6701
  8779  1A8F  3001               	movlw	1
  8780  1A90  0020               	movlb	0	; select bank0
  8781  1A91  00BF               	movwf	dtoa@p
  8782  1A92  3000               	movlw	0
  8783  1A93  00C0               	movwf	dtoa@p+1
  8784  1A94  2A9D               	goto	l850
  8785  1A95                     l6701:	
  8786  1A95  0022               	movlb	2	; select bank2
  8787  1A96  0867               	movf	(_prec+1)^(0+256),w
  8788  1A97  0020               	movlb	0	; select bank0
  8789  1A98  00C0               	movwf	dtoa@p+1
  8790  1A99  0022               	movlb	2	; select bank2
  8791  1A9A  0866               	movf	_prec^(0+256),w
  8792  1A9B  0020               	movlb	0	; select bank0
  8793  1A9C  00BF               	movwf	dtoa@p
  8794  1A9D                     l850:	
  8795                           
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8797  1A9D  0022               	movlb	2	; select bank2
  8798  1A9E  0865               	movf	(_width+1)^(0+256),w
  8799  1A9F  0020               	movlb	0	; select bank0
  8800  1AA0  00C2               	movwf	dtoa@w+1
  8801  1AA1  0022               	movlb	2	; select bank2
  8802  1AA2  0864               	movf	_width^(0+256),w
  8803  1AA3  0020               	movlb	0	; select bank0
  8804  1AA4  00C1               	movwf	dtoa@w
  8805                           
  8806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8807  1AA5  0843               	movf	dtoa@s,w
  8808  1AA6  0444               	iorwf	dtoa@s+1,w
  8809  1AA7  1D03               	btfss	3,2
  8810  1AA8  2AAC               	goto	l6707
  8811  1AA9  0022               	movlb	2	; select bank2
  8812  1AAA  1D68               	btfss	_flags^(0+256),2
  8813  1AAB  2AB1               	goto	l851
  8814  1AAC                     l6707:	
  8815                           
  8816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8817  1AAC  30FF               	movlw	255
  8818  1AAD  0020               	movlb	0	; select bank0
  8819  1AAE  07C1               	addwf	dtoa@w,f
  8820  1AAF  30FF               	movlw	255
  8821  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8822  1AB1                     l851:	
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8824                           
  8825                           
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8827  1AB1  301F               	movlw	31
  8828  1AB2  0020               	movlb	0	; select bank0
  8829  1AB3  00CD               	movwf	dtoa@i
  8830  1AB4  3000               	movlw	0
  8831  1AB5  00CE               	movwf	dtoa@i+1
  8832                           
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8834  1AB6  0024               	movlb	4	; select bank4
  8835  1AB7  01CD               	clrf	(_dbuf^(0+512)+31)
  8836                           
  8837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8838  1AB8  2B47               	goto	l854
  8839  1AB9                     l6721:	
  8840  1AB9  0020               	movlb	0	; select bank0
  8841  1ABA  0845               	movf	dtoa@n,w
  8842  1ABB  0446               	iorwf	dtoa@n+1,w
  8843  1ABC  0447               	iorwf	dtoa@n+2,w
  8844  1ABD  0448               	iorwf	dtoa@n+3,w
  8845  1ABE  0449               	iorwf	dtoa@n+4,w
  8846  1ABF  044A               	iorwf	dtoa@n+5,w
  8847  1AC0  044B               	iorwf	dtoa@n+6,w
  8848  1AC1  044C               	iorwf	dtoa@n+7,w
  8849  1AC2  1D03               	skipz
  8850  1AC3  2ADE               	goto	l6711
  8851  1AC4  0840               	movf	dtoa@p+1,w
  8852  1AC5  3A80               	xorlw	128
  8853  1AC6  00BA               	movwf	??_dtoa
  8854  1AC7  3080               	movlw	128
  8855  1AC8  023A               	subwf	??_dtoa,w
  8856  1AC9  1D03               	skipz
  8857  1ACA  2ACD               	goto	u8185
  8858  1ACB  3001               	movlw	1
  8859  1ACC  023F               	subwf	dtoa@p,w
  8860  1ACD                     u8185:	
  8861  1ACD  1803               	skipnc
  8862  1ACE  2ADE               	goto	l6711
  8863  1ACF  0020               	movlb	0	; select bank0
  8864  1AD0  0842               	movf	dtoa@w+1,w
  8865  1AD1  3A80               	xorlw	128
  8866  1AD2  00BA               	movwf	??_dtoa
  8867  1AD3  3080               	movlw	128
  8868  1AD4  023A               	subwf	??_dtoa,w
  8869  1AD5  1D03               	skipz
  8870  1AD6  2AD9               	goto	u8195
  8871  1AD7  3001               	movlw	1
  8872  1AD8  0241               	subwf	dtoa@w,w
  8873  1AD9                     u8195:	
  8874  1AD9  1C03               	skipc
  8875  1ADA  2B53               	goto	l6729
  8876  1ADB  0022               	movlb	2	; select bank2
  8877  1ADC  1CE8               	btfss	_flags^(0+256),1
  8878  1ADD  2B53               	goto	l6729
  8879  1ADE                     l6711:	
  8880                           
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8882  1ADE  30FF               	movlw	255
  8883  1ADF  0020               	movlb	0	; select bank0
  8884  1AE0  07CD               	addwf	dtoa@i,f
  8885  1AE1  30FF               	movlw	255
  8886  1AE2  3DCE               	addwfc	dtoa@i+1,f
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8889  1AE3  300A               	movlw	10
  8890  1AE4  00A0               	movwf	___aomod@divisor
  8891  1AE5  01A1               	clrf	___aomod@divisor+1
  8892  1AE6  01A2               	clrf	___aomod@divisor+2
  8893  1AE7  01A3               	clrf	___aomod@divisor+3
  8894  1AE8  01A4               	clrf	___aomod@divisor+4
  8895  1AE9  01A5               	clrf	___aomod@divisor+5
  8896  1AEA  01A6               	clrf	___aomod@divisor+6
  8897  1AEB  01A7               	clrf	___aomod@divisor+7
  8898  1AEC  0845               	movf	dtoa@n,w
  8899  1AED  00A8               	movwf	___aomod@dividend
  8900  1AEE  0846               	movf	dtoa@n+1,w
  8901  1AEF  00A9               	movwf	___aomod@dividend+1
  8902  1AF0  0847               	movf	dtoa@n+2,w
  8903  1AF1  00AA               	movwf	___aomod@dividend+2
  8904  1AF2  0848               	movf	dtoa@n+3,w
  8905  1AF3  00AB               	movwf	___aomod@dividend+3
  8906  1AF4  0849               	movf	dtoa@n+4,w
  8907  1AF5  00AC               	movwf	___aomod@dividend+4
  8908  1AF6  084A               	movf	dtoa@n+5,w
  8909  1AF7  00AD               	movwf	___aomod@dividend+5
  8910  1AF8  084B               	movf	dtoa@n+6,w
  8911  1AF9  00AE               	movwf	___aomod@dividend+6
  8912  1AFA  084C               	movf	dtoa@n+7,w
  8913  1AFB  00AF               	movwf	___aomod@dividend+7
  8914  1AFC  31A3  2365  319A   	fcall	___aomod
  8915  1AFF  0020               	movlb	0	; select bank0
  8916  1B00  0821               	movf	?___aomod+1,w
  8917  1B01  00F5               	movwf	abs@a+1
  8918  1B02  0820               	movf	?___aomod,w
  8919  1B03  00F4               	movwf	abs@a
  8920  1B04  31B2  22F3  319A   	fcall	_abs
  8921  1B07  0874               	movf	?_abs,w
  8922  1B08  3E30               	addlw	48
  8923  1B09  0020               	movlb	0	; select bank0
  8924  1B0A  00BA               	movwf	??_dtoa
  8925  1B0B  084D               	movf	dtoa@i,w
  8926  1B0C  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8927  1B0D  0086               	movwf	6
  8928  1B0E  3002               	movlw	2	; select bank4/5
  8929  1B0F  0087               	movwf	7
  8930  1B10  083A               	movf	??_dtoa,w
  8931  1B11  0081               	movwf	1
  8932                           
  8933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8934  1B12  30FF               	movlw	255
  8935  1B13  07BF               	addwf	dtoa@p,f
  8936  1B14  30FF               	movlw	255
  8937  1B15  3DC0               	addwfc	dtoa@p+1,f
  8938                           
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8940  1B16  30FF               	movlw	255
  8941  1B17  07C1               	addwf	dtoa@w,f
  8942  1B18  30FF               	movlw	255
  8943  1B19  3DC2               	addwfc	dtoa@w+1,f
  8944                           
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8946  1B1A  300A               	movlw	10
  8947  1B1B  00A0               	movwf	___aodiv@divisor
  8948  1B1C  01A1               	clrf	___aodiv@divisor+1
  8949  1B1D  01A2               	clrf	___aodiv@divisor+2
  8950  1B1E  01A3               	clrf	___aodiv@divisor+3
  8951  1B1F  01A4               	clrf	___aodiv@divisor+4
  8952  1B20  01A5               	clrf	___aodiv@divisor+5
  8953  1B21  01A6               	clrf	___aodiv@divisor+6
  8954  1B22  01A7               	clrf	___aodiv@divisor+7
  8955  1B23  0845               	movf	dtoa@n,w
  8956  1B24  00A8               	movwf	___aodiv@dividend
  8957  1B25  0846               	movf	dtoa@n+1,w
  8958  1B26  00A9               	movwf	___aodiv@dividend+1
  8959  1B27  0847               	movf	dtoa@n+2,w
  8960  1B28  00AA               	movwf	___aodiv@dividend+2
  8961  1B29  0848               	movf	dtoa@n+3,w
  8962  1B2A  00AB               	movwf	___aodiv@dividend+3
  8963  1B2B  0849               	movf	dtoa@n+4,w
  8964  1B2C  00AC               	movwf	___aodiv@dividend+4
  8965  1B2D  084A               	movf	dtoa@n+5,w
  8966  1B2E  00AD               	movwf	___aodiv@dividend+5
  8967  1B2F  084B               	movf	dtoa@n+6,w
  8968  1B30  00AE               	movwf	___aodiv@dividend+6
  8969  1B31  084C               	movf	dtoa@n+7,w
  8970  1B32  00AF               	movwf	___aodiv@dividend+7
  8971  1B33  31A6  2613  319A   	fcall	___aodiv
  8972  1B36  0020               	movlb	0	; select bank0
  8973  1B37  0820               	movf	?___aodiv,w
  8974  1B38  00C5               	movwf	dtoa@n
  8975  1B39  0821               	movf	?___aodiv+1,w
  8976  1B3A  00C6               	movwf	dtoa@n+1
  8977  1B3B  0822               	movf	?___aodiv+2,w
  8978  1B3C  00C7               	movwf	dtoa@n+2
  8979  1B3D  0823               	movf	?___aodiv+3,w
  8980  1B3E  00C8               	movwf	dtoa@n+3
  8981  1B3F  0824               	movf	?___aodiv+4,w
  8982  1B40  00C9               	movwf	dtoa@n+4
  8983  1B41  0825               	movf	?___aodiv+5,w
  8984  1B42  00CA               	movwf	dtoa@n+5
  8985  1B43  0826               	movf	?___aodiv+6,w
  8986  1B44  00CB               	movwf	dtoa@n+6
  8987  1B45  0827               	movf	?___aodiv+7,w
  8988  1B46  00CC               	movwf	dtoa@n+7
  8989  1B47                     l854:	
  8990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  8991                           
  8992                           
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8994  1B47  0020               	movlb	0	; select bank0
  8995  1B48  084E               	movf	dtoa@i+1,w
  8996  1B49  3A80               	xorlw	128
  8997  1B4A  00BA               	movwf	??_dtoa
  8998  1B4B  3080               	movlw	128
  8999  1B4C  023A               	subwf	??_dtoa,w
  9000  1B4D  1D03               	skipz
  9001  1B4E  2B51               	goto	u8165
  9002  1B4F  3001               	movlw	1
  9003  1B50  024D               	subwf	dtoa@i,w
  9004  1B51                     u8165:	
  9005  1B51  1803               	btfsc	3,0
  9006  1B52  2AB9               	goto	l6721
  9007  1B53                     l6729:	
  9008                           
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9010  1B53  0020               	movlb	0	; select bank0
  9011  1B54  0843               	movf	dtoa@s,w
  9012  1B55  0444               	iorwf	dtoa@s+1,w
  9013  1B56  1D03               	btfss	3,2
  9014  1B57  2B5B               	goto	l6733
  9015  1B58  0022               	movlb	2	; select bank2
  9016  1B59  1D68               	btfss	_flags^(0+256),2
  9017  1B5A  2B73               	goto	l6743
  9018  1B5B                     l6733:	
  9019                           
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9021  1B5B  30FF               	movlw	255
  9022  1B5C  0020               	movlb	0	; select bank0
  9023  1B5D  07CD               	addwf	dtoa@i,f
  9024  1B5E  30FF               	movlw	255
  9025  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9026                           
  9027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9028  1B60  0843               	movf	dtoa@s,w
  9029  1B61  0444               	iorwf	dtoa@s+1,w
  9030  1B62  1D03               	btfss	3,2
  9031  1B63  2B66               	goto	l6739
  9032  1B64  302B               	movlw	43
  9033  1B65  2B67               	goto	L2
  9034  1B66                     l6739:	
  9035  1B66  302D               	movlw	45
  9036  1B67                     L2:	
  9037  1B67  00BD               	movwf	_dtoa$1434
  9038  1B68  3000               	movlw	0
  9039  1B69  00BE               	movwf	_dtoa$1434+1
  9040  1B6A  083D               	movf	_dtoa$1434,w
  9041  1B6B  00BA               	movwf	??_dtoa
  9042  1B6C  084D               	movf	dtoa@i,w
  9043  1B6D  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9044  1B6E  0086               	movwf	6
  9045  1B6F  3002               	movlw	2	; select bank4/5
  9046  1B70  0087               	movwf	7
  9047  1B71  083A               	movf	??_dtoa,w
  9048  1B72  0081               	movwf	1
  9049  1B73                     l6743:	
  9050                           
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9052  1B73  0020               	movlb	0	; select bank0
  9053  1B74  0831               	movf	dtoa@fp+1,w
  9054  1B75  00A7               	movwf	pad@fp+1
  9055  1B76  0830               	movf	dtoa@fp,w
  9056  1B77  00A6               	movwf	pad@fp
  9057  1B78  084D               	movf	dtoa@i,w
  9058  1B79  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9059  1B7A  00BA               	movwf	??_dtoa
  9060  1B7B  083A               	movf	??_dtoa,w
  9061  1B7C  00A8               	movwf	pad@buf
  9062  1B7D  0842               	movf	dtoa@w+1,w
  9063  1B7E  00AA               	movwf	pad@p+1
  9064  1B7F  0841               	movf	dtoa@w,w
  9065  1B80  00A9               	movwf	pad@p
  9066  1B81  31B6  26B3         	fcall	_pad
  9067  1B83  0020               	movlb	0	; select bank0
  9068  1B84  0827               	movf	?_pad+1,w
  9069  1B85  00B1               	movwf	?_dtoa+1
  9070  1B86  0826               	movf	?_pad,w
  9071  1B87  00B0               	movwf	?_dtoa
  9072  1B88  0008               	return
  9073  1B89                     __end_of_dtoa:	
  9074                           
  9075                           	psect	text20
  9076  32F3                     __ptext20:	
  9077 ;; *************** function _abs *****************
  9078 ;; Defined at:
  9079 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  a               2    4[COMMON] int 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;		None
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2    4[COMMON] int 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9097 ;;Total ram usage:        4 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_dtoa
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           
  9108                           ;psect for function _abs
  9109  32F3                     _abs:	
  9110                           
  9111                           ;incstack = 0
  9112                           ; Regs used in _abs: [wreg+status,2+status,0]
  9113  32F3  0875               	movf	abs@a+1,w
  9114  32F4  3A80               	xorlw	128
  9115  32F5  00F6               	movwf	??_abs
  9116  32F6  3080               	movlw	128
  9117  32F7  0276               	subwf	??_abs,w
  9118  32F8  1D03               	skipz
  9119  32F9  2AFC               	goto	u4145
  9120  32FA  3001               	movlw	1
  9121  32FB  0274               	subwf	abs@a,w
  9122  32FC                     u4145:	
  9123  32FC  1803               	skipnc
  9124  32FD  0008               	return
  9125  32FE  0974               	comf	abs@a,w
  9126  32FF  00F6               	movwf	??_abs
  9127  3300  0975               	comf	abs@a+1,w
  9128  3301  00F7               	movwf	??_abs+1
  9129  3302  0AF6               	incf	??_abs,f
  9130  3303  1903               	skipnz
  9131  3304  0AF7               	incf	??_abs+1,f
  9132  3305  0876               	movf	??_abs,w
  9133  3306  00F4               	movwf	?_abs
  9134  3307  0877               	movf	??_abs+1,w
  9135  3308  00F5               	movwf	?_abs+1
  9136  3309  0008               	return
  9137  330A                     __end_of_abs:	
  9138                           
  9139                           	psect	text21
  9140  2365                     __ptext21:	
  9141 ;; *************** function ___aomod *****************
  9142 ;; Defined at:
  9143 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  divisor         8    0[BANK0 ] long long 
  9146 ;;  dividend        8    8[BANK0 ] long long 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  sign            1    3[COMMON] unsigned char 
  9149 ;;  counter         1    2[COMMON] unsigned char 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  8    0[BANK0 ] long long 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9159 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9162 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9163 ;;Total ram usage:       19 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    1
  9166 ;; This function calls:
  9167 ;;		Nothing
  9168 ;; This function is called by:
  9169 ;;		_dtoa
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           
  9174                           ;psect for function ___aomod
  9175  2365                     ___aomod:	
  9176                           
  9177                           ;incstack = 0
  9178                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9179  2365  01F3               	clrf	___aomod@sign
  9180  2366  3028               	movlw	low ___aomod@dividend
  9181  2367  0086               	movwf	6
  9182  2368  3000               	movlw	high ___aomod@dividend
  9183  2369  0087               	movwf	7
  9184  236A  3F47               	moviw [7]fsr1
  9185  236B  00F1               	movwf	??___aomod
  9186  236C  1FF1               	btfss	??___aomod,7
  9187  236D  2B8F               	goto	l4351
  9188  236E  0020               	movlb	0	; select bank0
  9189  236F  09A8               	comf	___aomod@dividend,f
  9190  2370  09A9               	comf	___aomod@dividend+1,f
  9191  2371  09AA               	comf	___aomod@dividend+2,f
  9192  2372  09AB               	comf	___aomod@dividend+3,f
  9193  2373  09AC               	comf	___aomod@dividend+4,f
  9194  2374  09AD               	comf	___aomod@dividend+5,f
  9195  2375  09AE               	comf	___aomod@dividend+6,f
  9196  2376  09AF               	comf	___aomod@dividend+7,f
  9197  2377  0AA8               	incf	___aomod@dividend,f
  9198  2378  1D03               	skipz
  9199  2379  2B8D               	goto	u440lld
  9200  237A  0AA9               	incf	___aomod@dividend+1,f
  9201  237B  1D03               	skipz
  9202  237C  2B8D               	goto	u440lld
  9203  237D  0AAA               	incf	___aomod@dividend+2,f
  9204  237E  1D03               	skipz
  9205  237F  2B8D               	goto	u440lld
  9206  2380  0AAB               	incf	___aomod@dividend+3,f
  9207  2381  1D03               	skipz
  9208  2382  2B8D               	goto	u440lld
  9209  2383  0AAC               	incf	___aomod@dividend+4,f
  9210  2384  1D03               	skipz
  9211  2385  2B8D               	goto	u440lld
  9212  2386  0AAD               	incf	___aomod@dividend+5,f
  9213  2387  1D03               	skipz
  9214  2388  2B8D               	goto	u440lld
  9215  2389  0AAE               	incf	___aomod@dividend+6,f
  9216  238A  1D03               	skipz
  9217  238B  2B8D               	goto	u440lld
  9218  238C  0AAF               	incf	___aomod@dividend+7,f
  9219  238D                     u440lld:	
  9220  238D  01F3               	clrf	___aomod@sign
  9221  238E  0AF3               	incf	___aomod@sign,f
  9222  238F                     l4351:	
  9223  238F  3020               	movlw	low ___aomod@divisor
  9224  2390  0086               	movwf	6
  9225  2391  3000               	movlw	high ___aomod@divisor
  9226  2392  0087               	movwf	7
  9227  2393  3F47               	moviw [7]fsr1
  9228  2394  00F1               	movwf	??___aomod
  9229  2395  1FF1               	btfss	??___aomod,7
  9230  2396  2BB6               	goto	l4355
  9231  2397  0020               	movlb	0	; select bank0
  9232  2398  09A0               	comf	___aomod@divisor,f
  9233  2399  09A1               	comf	___aomod@divisor+1,f
  9234  239A  09A2               	comf	___aomod@divisor+2,f
  9235  239B  09A3               	comf	___aomod@divisor+3,f
  9236  239C  09A4               	comf	___aomod@divisor+4,f
  9237  239D  09A5               	comf	___aomod@divisor+5,f
  9238  239E  09A6               	comf	___aomod@divisor+6,f
  9239  239F  09A7               	comf	___aomod@divisor+7,f
  9240  23A0  0AA0               	incf	___aomod@divisor,f
  9241  23A1  1D03               	skipz
  9242  23A2  2BB6               	goto	l4355
  9243  23A3  0AA1               	incf	___aomod@divisor+1,f
  9244  23A4  1D03               	skipz
  9245  23A5  2BB6               	goto	l4355
  9246  23A6  0AA2               	incf	___aomod@divisor+2,f
  9247  23A7  1D03               	skipz
  9248  23A8  2BB6               	goto	l4355
  9249  23A9  0AA3               	incf	___aomod@divisor+3,f
  9250  23AA  1D03               	skipz
  9251  23AB  2BB6               	goto	l4355
  9252  23AC  0AA4               	incf	___aomod@divisor+4,f
  9253  23AD  1D03               	skipz
  9254  23AE  2BB6               	goto	l4355
  9255  23AF  0AA5               	incf	___aomod@divisor+5,f
  9256  23B0  1D03               	skipz
  9257  23B1  2BB6               	goto	l4355
  9258  23B2  0AA6               	incf	___aomod@divisor+6,f
  9259  23B3  1D03               	skipz
  9260  23B4  2BB6               	goto	l4355
  9261  23B5  0AA7               	incf	___aomod@divisor+7,f
  9262  23B6                     l4355:	
  9263  23B6  0020               	movlb	0	; select bank0
  9264  23B7  0820               	movf	___aomod@divisor,w
  9265  23B8  0421               	iorwf	___aomod@divisor+1,w
  9266  23B9  0422               	iorwf	___aomod@divisor+2,w
  9267  23BA  0423               	iorwf	___aomod@divisor+3,w
  9268  23BB  0424               	iorwf	___aomod@divisor+4,w
  9269  23BC  0425               	iorwf	___aomod@divisor+5,w
  9270  23BD  0426               	iorwf	___aomod@divisor+6,w
  9271  23BE  0427               	iorwf	___aomod@divisor+7,w
  9272  23BF  1903               	skipnz
  9273  23C0  2C0E               	goto	l4371
  9274  23C1  01F2               	clrf	___aomod@counter
  9275  23C2  0AF2               	incf	___aomod@counter,f
  9276  23C3                     l4363:	
  9277  23C3  1BA7               	btfsc	___aomod@divisor+7,7
  9278  23C4  2BD2               	goto	l4365
  9279  23C5  35A0               	lslf	___aomod@divisor,f
  9280  23C6  0DA1               	rlf	___aomod@divisor+1,f
  9281  23C7  0DA2               	rlf	___aomod@divisor+2,f
  9282  23C8  0DA3               	rlf	___aomod@divisor+3,f
  9283  23C9  0DA4               	rlf	___aomod@divisor+4,f
  9284  23CA  0DA5               	rlf	___aomod@divisor+5,f
  9285  23CB  0DA6               	rlf	___aomod@divisor+6,f
  9286  23CC  0DA7               	rlf	___aomod@divisor+7,f
  9287  23CD  3001               	movlw	1
  9288  23CE  00F1               	movwf	??___aomod
  9289  23CF  0871               	movf	??___aomod,w
  9290  23D0  07F2               	addwf	___aomod@counter,f
  9291  23D1  2BC3               	goto	l4363
  9292  23D2                     l4365:	
  9293  23D2  0827               	movf	___aomod@divisor+7,w
  9294  23D3  022F               	subwf	___aomod@dividend+7,w
  9295  23D4  1D03               	skipz
  9296  23D5  2BF0               	goto	u4455
  9297  23D6  0826               	movf	___aomod@divisor+6,w
  9298  23D7  022E               	subwf	___aomod@dividend+6,w
  9299  23D8  1D03               	skipz
  9300  23D9  2BF0               	goto	u4455
  9301  23DA  0825               	movf	___aomod@divisor+5,w
  9302  23DB  022D               	subwf	___aomod@dividend+5,w
  9303  23DC  1D03               	skipz
  9304  23DD  2BF0               	goto	u4455
  9305  23DE  0824               	movf	___aomod@divisor+4,w
  9306  23DF  022C               	subwf	___aomod@dividend+4,w
  9307  23E0  1D03               	skipz
  9308  23E1  2BF0               	goto	u4455
  9309  23E2  0823               	movf	___aomod@divisor+3,w
  9310  23E3  022B               	subwf	___aomod@dividend+3,w
  9311  23E4  1D03               	skipz
  9312  23E5  2BF0               	goto	u4455
  9313  23E6  0822               	movf	___aomod@divisor+2,w
  9314  23E7  022A               	subwf	___aomod@dividend+2,w
  9315  23E8  1D03               	skipz
  9316  23E9  2BF0               	goto	u4455
  9317  23EA  0821               	movf	___aomod@divisor+1,w
  9318  23EB  0229               	subwf	___aomod@dividend+1,w
  9319  23EC  1D03               	skipz
  9320  23ED  2BF0               	goto	u4455
  9321  23EE  0820               	movf	___aomod@divisor,w
  9322  23EF  0228               	subwf	___aomod@dividend,w
  9323  23F0                     u4455:	
  9324  23F0  1C03               	skipc
  9325  23F1  2C02               	goto	l4369
  9326  23F2  0820               	movf	___aomod@divisor,w
  9327  23F3  02A8               	subwf	___aomod@dividend,f
  9328  23F4  0821               	movf	___aomod@divisor+1,w
  9329  23F5  3BA9               	subwfb	___aomod@dividend+1,f
  9330  23F6  0822               	movf	___aomod@divisor+2,w
  9331  23F7  3BAA               	subwfb	___aomod@dividend+2,f
  9332  23F8  0823               	movf	___aomod@divisor+3,w
  9333  23F9  3BAB               	subwfb	___aomod@dividend+3,f
  9334  23FA  0824               	movf	___aomod@divisor+4,w
  9335  23FB  3BAC               	subwfb	___aomod@dividend+4,f
  9336  23FC  0825               	movf	___aomod@divisor+5,w
  9337  23FD  3BAD               	subwfb	___aomod@dividend+5,f
  9338  23FE  0826               	movf	___aomod@divisor+6,w
  9339  23FF  3BAE               	subwfb	___aomod@dividend+6,f
  9340  2400  0827               	movf	___aomod@divisor+7,w
  9341  2401  3BAF               	subwfb	___aomod@dividend+7,f
  9342  2402                     l4369:	
  9343  2402  36A7               	lsrf	___aomod@divisor+7,f
  9344  2403  0CA6               	rrf	___aomod@divisor+6,f
  9345  2404  0CA5               	rrf	___aomod@divisor+5,f
  9346  2405  0CA4               	rrf	___aomod@divisor+4,f
  9347  2406  0CA3               	rrf	___aomod@divisor+3,f
  9348  2407  0CA2               	rrf	___aomod@divisor+2,f
  9349  2408  0CA1               	rrf	___aomod@divisor+1,f
  9350  2409  0CA0               	rrf	___aomod@divisor,f
  9351  240A  3001               	movlw	1
  9352  240B  02F2               	subwf	___aomod@counter,f
  9353  240C  1D03               	btfss	3,2
  9354  240D  2BD2               	goto	l4365
  9355  240E                     l4371:	
  9356  240E  0873               	movf	___aomod@sign,w
  9357  240F  1903               	btfsc	3,2
  9358  2410  2C2F               	goto	l1151
  9359  2411  09A8               	comf	___aomod@dividend,f
  9360  2412  09A9               	comf	___aomod@dividend+1,f
  9361  2413  09AA               	comf	___aomod@dividend+2,f
  9362  2414  09AB               	comf	___aomod@dividend+3,f
  9363  2415  09AC               	comf	___aomod@dividend+4,f
  9364  2416  09AD               	comf	___aomod@dividend+5,f
  9365  2417  09AE               	comf	___aomod@dividend+6,f
  9366  2418  09AF               	comf	___aomod@dividend+7,f
  9367  2419  0AA8               	incf	___aomod@dividend,f
  9368  241A  1D03               	skipz
  9369  241B  2C2F               	goto	l1151
  9370  241C  0AA9               	incf	___aomod@dividend+1,f
  9371  241D  1D03               	skipz
  9372  241E  2C2F               	goto	l1151
  9373  241F  0AAA               	incf	___aomod@dividend+2,f
  9374  2420  1D03               	skipz
  9375  2421  2C2F               	goto	l1151
  9376  2422  0AAB               	incf	___aomod@dividend+3,f
  9377  2423  1D03               	skipz
  9378  2424  2C2F               	goto	l1151
  9379  2425  0AAC               	incf	___aomod@dividend+4,f
  9380  2426  1D03               	skipz
  9381  2427  2C2F               	goto	l1151
  9382  2428  0AAD               	incf	___aomod@dividend+5,f
  9383  2429  1D03               	skipz
  9384  242A  2C2F               	goto	l1151
  9385  242B  0AAE               	incf	___aomod@dividend+6,f
  9386  242C  1D03               	skipz
  9387  242D  2C2F               	goto	l1151
  9388  242E  0AAF               	incf	___aomod@dividend+7,f
  9389  242F                     l1151:	
  9390  242F  0020               	movlb	0	; select bank0
  9391  2430  0828               	movf	___aomod@dividend,w
  9392  2431  00A0               	movwf	?___aomod
  9393  2432  0829               	movf	___aomod@dividend+1,w
  9394  2433  00A1               	movwf	?___aomod+1
  9395  2434  082A               	movf	___aomod@dividend+2,w
  9396  2435  00A2               	movwf	?___aomod+2
  9397  2436  082B               	movf	___aomod@dividend+3,w
  9398  2437  00A3               	movwf	?___aomod+3
  9399  2438  082C               	movf	___aomod@dividend+4,w
  9400  2439  00A4               	movwf	?___aomod+4
  9401  243A  082D               	movf	___aomod@dividend+5,w
  9402  243B  00A5               	movwf	?___aomod+5
  9403  243C  082E               	movf	___aomod@dividend+6,w
  9404  243D  00A6               	movwf	?___aomod+6
  9405  243E  082F               	movf	___aomod@dividend+7,w
  9406  243F  00A7               	movwf	?___aomod+7
  9407  2440  0008               	return
  9408  2441                     __end_of___aomod:	
  9409                           
  9410                           	psect	text22
  9411  2613                     __ptext22:	
  9412 ;; *************** function ___aodiv *****************
  9413 ;; Defined at:
  9414 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  divisor         8    0[BANK0 ] long long 
  9417 ;;  dividend        8    8[BANK0 ] long long 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  quotient        8    4[COMMON] long long 
  9420 ;;  sign            1    3[COMMON] unsigned char 
  9421 ;;  counter         1    2[COMMON] unsigned char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  8    0[BANK0 ] long long 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9431 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9432 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9434 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9435 ;;Total ram usage:       27 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    1
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_dtoa
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           
  9446                           ;psect for function ___aodiv
  9447  2613                     ___aodiv:	
  9448                           
  9449                           ;incstack = 0
  9450                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9451  2613  01F3               	clrf	___aodiv@sign
  9452  2614  3020               	movlw	low ___aodiv@divisor
  9453  2615  0086               	movwf	6
  9454  2616  3000               	movlw	high ___aodiv@divisor
  9455  2617  0087               	movwf	7
  9456  2618  3F47               	moviw [7]fsr1
  9457  2619  00F1               	movwf	??___aodiv
  9458  261A  1FF1               	btfss	??___aodiv,7
  9459  261B  2E3D               	goto	l4313
  9460  261C  0020               	movlb	0	; select bank0
  9461  261D  09A0               	comf	___aodiv@divisor,f
  9462  261E  09A1               	comf	___aodiv@divisor+1,f
  9463  261F  09A2               	comf	___aodiv@divisor+2,f
  9464  2620  09A3               	comf	___aodiv@divisor+3,f
  9465  2621  09A4               	comf	___aodiv@divisor+4,f
  9466  2622  09A5               	comf	___aodiv@divisor+5,f
  9467  2623  09A6               	comf	___aodiv@divisor+6,f
  9468  2624  09A7               	comf	___aodiv@divisor+7,f
  9469  2625  0AA0               	incf	___aodiv@divisor,f
  9470  2626  1D03               	skipz
  9471  2627  2E3B               	goto	u429lld
  9472  2628  0AA1               	incf	___aodiv@divisor+1,f
  9473  2629  1D03               	skipz
  9474  262A  2E3B               	goto	u429lld
  9475  262B  0AA2               	incf	___aodiv@divisor+2,f
  9476  262C  1D03               	skipz
  9477  262D  2E3B               	goto	u429lld
  9478  262E  0AA3               	incf	___aodiv@divisor+3,f
  9479  262F  1D03               	skipz
  9480  2630  2E3B               	goto	u429lld
  9481  2631  0AA4               	incf	___aodiv@divisor+4,f
  9482  2632  1D03               	skipz
  9483  2633  2E3B               	goto	u429lld
  9484  2634  0AA5               	incf	___aodiv@divisor+5,f
  9485  2635  1D03               	skipz
  9486  2636  2E3B               	goto	u429lld
  9487  2637  0AA6               	incf	___aodiv@divisor+6,f
  9488  2638  1D03               	skipz
  9489  2639  2E3B               	goto	u429lld
  9490  263A  0AA7               	incf	___aodiv@divisor+7,f
  9491  263B                     u429lld:	
  9492  263B  01F3               	clrf	___aodiv@sign
  9493  263C  0AF3               	incf	___aodiv@sign,f
  9494  263D                     l4313:	
  9495  263D  3028               	movlw	low ___aodiv@dividend
  9496  263E  0086               	movwf	6
  9497  263F  3000               	movlw	high ___aodiv@dividend
  9498  2640  0087               	movwf	7
  9499  2641  3F47               	moviw [7]fsr1
  9500  2642  00F1               	movwf	??___aodiv
  9501  2643  1FF1               	btfss	??___aodiv,7
  9502  2644  2E68               	goto	l4319
  9503  2645  0020               	movlb	0	; select bank0
  9504  2646  09A8               	comf	___aodiv@dividend,f
  9505  2647  09A9               	comf	___aodiv@dividend+1,f
  9506  2648  09AA               	comf	___aodiv@dividend+2,f
  9507  2649  09AB               	comf	___aodiv@dividend+3,f
  9508  264A  09AC               	comf	___aodiv@dividend+4,f
  9509  264B  09AD               	comf	___aodiv@dividend+5,f
  9510  264C  09AE               	comf	___aodiv@dividend+6,f
  9511  264D  09AF               	comf	___aodiv@dividend+7,f
  9512  264E  0AA8               	incf	___aodiv@dividend,f
  9513  264F  1D03               	skipz
  9514  2650  2E64               	goto	l4317
  9515  2651  0AA9               	incf	___aodiv@dividend+1,f
  9516  2652  1D03               	skipz
  9517  2653  2E64               	goto	l4317
  9518  2654  0AAA               	incf	___aodiv@dividend+2,f
  9519  2655  1D03               	skipz
  9520  2656  2E64               	goto	l4317
  9521  2657  0AAB               	incf	___aodiv@dividend+3,f
  9522  2658  1D03               	skipz
  9523  2659  2E64               	goto	l4317
  9524  265A  0AAC               	incf	___aodiv@dividend+4,f
  9525  265B  1D03               	skipz
  9526  265C  2E64               	goto	l4317
  9527  265D  0AAD               	incf	___aodiv@dividend+5,f
  9528  265E  1D03               	skipz
  9529  265F  2E64               	goto	l4317
  9530  2660  0AAE               	incf	___aodiv@dividend+6,f
  9531  2661  1D03               	skipz
  9532  2662  2E64               	goto	l4317
  9533  2663  0AAF               	incf	___aodiv@dividend+7,f
  9534  2664                     l4317:	
  9535  2664  3001               	movlw	1
  9536  2665  00F1               	movwf	??___aodiv
  9537  2666  0871               	movf	??___aodiv,w
  9538  2667  06F3               	xorwf	___aodiv@sign,f
  9539  2668                     l4319:	
  9540  2668  3074               	movlw	low ___aodiv@quotient
  9541  2669  0086               	movwf	6
  9542  266A  3000               	movlw	high ___aodiv@quotient
  9543  266B  0087               	movwf	7
  9544  266C  3008               	movlw	8
  9545  266D  00F1               	movwf	??___aodiv
  9546  266E  3000               	movlw	0
  9547  266F                     u4320:	
  9548  266F  001E               	movwi fsr1++
  9549  2670  0BF1               	decfsz	??___aodiv,f
  9550  2671  2E6F               	goto	u4320
  9551  2672  0020               	movlb	0	; select bank0
  9552  2673  0820               	movf	___aodiv@divisor,w
  9553  2674  0421               	iorwf	___aodiv@divisor+1,w
  9554  2675  0422               	iorwf	___aodiv@divisor+2,w
  9555  2676  0423               	iorwf	___aodiv@divisor+3,w
  9556  2677  0424               	iorwf	___aodiv@divisor+4,w
  9557  2678  0425               	iorwf	___aodiv@divisor+5,w
  9558  2679  0426               	iorwf	___aodiv@divisor+6,w
  9559  267A  0427               	iorwf	___aodiv@divisor+7,w
  9560  267B  1903               	skipnz
  9561  267C  2ED3               	goto	l4341
  9562  267D  01F2               	clrf	___aodiv@counter
  9563  267E  0AF2               	incf	___aodiv@counter,f
  9564  267F                     l4329:	
  9565  267F  1BA7               	btfsc	___aodiv@divisor+7,7
  9566  2680  2E8E               	goto	l4331
  9567  2681  35A0               	lslf	___aodiv@divisor,f
  9568  2682  0DA1               	rlf	___aodiv@divisor+1,f
  9569  2683  0DA2               	rlf	___aodiv@divisor+2,f
  9570  2684  0DA3               	rlf	___aodiv@divisor+3,f
  9571  2685  0DA4               	rlf	___aodiv@divisor+4,f
  9572  2686  0DA5               	rlf	___aodiv@divisor+5,f
  9573  2687  0DA6               	rlf	___aodiv@divisor+6,f
  9574  2688  0DA7               	rlf	___aodiv@divisor+7,f
  9575  2689  3001               	movlw	1
  9576  268A  00F1               	movwf	??___aodiv
  9577  268B  0871               	movf	??___aodiv,w
  9578  268C  07F2               	addwf	___aodiv@counter,f
  9579  268D  2E7F               	goto	l4329
  9580  268E                     l4331:	
  9581  268E  35F4               	lslf	___aodiv@quotient,f
  9582  268F  0DF5               	rlf	___aodiv@quotient+1,f
  9583  2690  0DF6               	rlf	___aodiv@quotient+2,f
  9584  2691  0DF7               	rlf	___aodiv@quotient+3,f
  9585  2692  0DF8               	rlf	___aodiv@quotient+4,f
  9586  2693  0DF9               	rlf	___aodiv@quotient+5,f
  9587  2694  0DFA               	rlf	___aodiv@quotient+6,f
  9588  2695  0DFB               	rlf	___aodiv@quotient+7,f
  9589  2696  0827               	movf	___aodiv@divisor+7,w
  9590  2697  022F               	subwf	___aodiv@dividend+7,w
  9591  2698  1D03               	skipz
  9592  2699  2EB4               	goto	u4355
  9593  269A  0826               	movf	___aodiv@divisor+6,w
  9594  269B  022E               	subwf	___aodiv@dividend+6,w
  9595  269C  1D03               	skipz
  9596  269D  2EB4               	goto	u4355
  9597  269E  0825               	movf	___aodiv@divisor+5,w
  9598  269F  022D               	subwf	___aodiv@dividend+5,w
  9599  26A0  1D03               	skipz
  9600  26A1  2EB4               	goto	u4355
  9601  26A2  0824               	movf	___aodiv@divisor+4,w
  9602  26A3  022C               	subwf	___aodiv@dividend+4,w
  9603  26A4  1D03               	skipz
  9604  26A5  2EB4               	goto	u4355
  9605  26A6  0823               	movf	___aodiv@divisor+3,w
  9606  26A7  022B               	subwf	___aodiv@dividend+3,w
  9607  26A8  1D03               	skipz
  9608  26A9  2EB4               	goto	u4355
  9609  26AA  0822               	movf	___aodiv@divisor+2,w
  9610  26AB  022A               	subwf	___aodiv@dividend+2,w
  9611  26AC  1D03               	skipz
  9612  26AD  2EB4               	goto	u4355
  9613  26AE  0821               	movf	___aodiv@divisor+1,w
  9614  26AF  0229               	subwf	___aodiv@dividend+1,w
  9615  26B0  1D03               	skipz
  9616  26B1  2EB4               	goto	u4355
  9617  26B2  0820               	movf	___aodiv@divisor,w
  9618  26B3  0228               	subwf	___aodiv@dividend,w
  9619  26B4                     u4355:	
  9620  26B4  1C03               	skipc
  9621  26B5  2EC7               	goto	l4339
  9622  26B6  0820               	movf	___aodiv@divisor,w
  9623  26B7  02A8               	subwf	___aodiv@dividend,f
  9624  26B8  0821               	movf	___aodiv@divisor+1,w
  9625  26B9  3BA9               	subwfb	___aodiv@dividend+1,f
  9626  26BA  0822               	movf	___aodiv@divisor+2,w
  9627  26BB  3BAA               	subwfb	___aodiv@dividend+2,f
  9628  26BC  0823               	movf	___aodiv@divisor+3,w
  9629  26BD  3BAB               	subwfb	___aodiv@dividend+3,f
  9630  26BE  0824               	movf	___aodiv@divisor+4,w
  9631  26BF  3BAC               	subwfb	___aodiv@dividend+4,f
  9632  26C0  0825               	movf	___aodiv@divisor+5,w
  9633  26C1  3BAD               	subwfb	___aodiv@dividend+5,f
  9634  26C2  0826               	movf	___aodiv@divisor+6,w
  9635  26C3  3BAE               	subwfb	___aodiv@dividend+6,f
  9636  26C4  0827               	movf	___aodiv@divisor+7,w
  9637  26C5  3BAF               	subwfb	___aodiv@dividend+7,f
  9638  26C6  1474               	bsf	___aodiv@quotient,0
  9639  26C7                     l4339:	
  9640  26C7  36A7               	lsrf	___aodiv@divisor+7,f
  9641  26C8  0CA6               	rrf	___aodiv@divisor+6,f
  9642  26C9  0CA5               	rrf	___aodiv@divisor+5,f
  9643  26CA  0CA4               	rrf	___aodiv@divisor+4,f
  9644  26CB  0CA3               	rrf	___aodiv@divisor+3,f
  9645  26CC  0CA2               	rrf	___aodiv@divisor+2,f
  9646  26CD  0CA1               	rrf	___aodiv@divisor+1,f
  9647  26CE  0CA0               	rrf	___aodiv@divisor,f
  9648  26CF  3001               	movlw	1
  9649  26D0  02F2               	subwf	___aodiv@counter,f
  9650  26D1  1D03               	btfss	3,2
  9651  26D2  2E8E               	goto	l4331
  9652  26D3                     l4341:	
  9653  26D3  0873               	movf	___aodiv@sign,w
  9654  26D4  1903               	btfsc	3,2
  9655  26D5  2EF4               	goto	l1138
  9656  26D6  09F4               	comf	___aodiv@quotient,f
  9657  26D7  09F5               	comf	___aodiv@quotient+1,f
  9658  26D8  09F6               	comf	___aodiv@quotient+2,f
  9659  26D9  09F7               	comf	___aodiv@quotient+3,f
  9660  26DA  09F8               	comf	___aodiv@quotient+4,f
  9661  26DB  09F9               	comf	___aodiv@quotient+5,f
  9662  26DC  09FA               	comf	___aodiv@quotient+6,f
  9663  26DD  09FB               	comf	___aodiv@quotient+7,f
  9664  26DE  0AF4               	incf	___aodiv@quotient,f
  9665  26DF  1D03               	skipz
  9666  26E0  2EF4               	goto	l1138
  9667  26E1  0AF5               	incf	___aodiv@quotient+1,f
  9668  26E2  1D03               	skipz
  9669  26E3  2EF4               	goto	l1138
  9670  26E4  0AF6               	incf	___aodiv@quotient+2,f
  9671  26E5  1D03               	skipz
  9672  26E6  2EF4               	goto	l1138
  9673  26E7  0AF7               	incf	___aodiv@quotient+3,f
  9674  26E8  1D03               	skipz
  9675  26E9  2EF4               	goto	l1138
  9676  26EA  0AF8               	incf	___aodiv@quotient+4,f
  9677  26EB  1D03               	skipz
  9678  26EC  2EF4               	goto	l1138
  9679  26ED  0AF9               	incf	___aodiv@quotient+5,f
  9680  26EE  1D03               	skipz
  9681  26EF  2EF4               	goto	l1138
  9682  26F0  0AFA               	incf	___aodiv@quotient+6,f
  9683  26F1  1D03               	skipz
  9684  26F2  2EF4               	goto	l1138
  9685  26F3  0AFB               	incf	___aodiv@quotient+7,f
  9686  26F4                     l1138:	
  9687  26F4  0874               	movf	___aodiv@quotient,w
  9688  26F5  0020               	movlb	0	; select bank0
  9689  26F6  00A0               	movwf	?___aodiv
  9690  26F7  0875               	movf	___aodiv@quotient+1,w
  9691  26F8  00A1               	movwf	?___aodiv+1
  9692  26F9  0876               	movf	___aodiv@quotient+2,w
  9693  26FA  00A2               	movwf	?___aodiv+2
  9694  26FB  0877               	movf	___aodiv@quotient+3,w
  9695  26FC  00A3               	movwf	?___aodiv+3
  9696  26FD  0878               	movf	___aodiv@quotient+4,w
  9697  26FE  00A4               	movwf	?___aodiv+4
  9698  26FF  0879               	movf	___aodiv@quotient+5,w
  9699  2700  00A5               	movwf	?___aodiv+5
  9700  2701  087A               	movf	___aodiv@quotient+6,w
  9701  2702  00A6               	movwf	?___aodiv+6
  9702  2703  087B               	movf	___aodiv@quotient+7,w
  9703  2704  00A7               	movwf	?___aodiv+7
  9704  2705  0008               	return
  9705  2706                     __end_of___aodiv:	
  9706                           
  9707                           	psect	text23
  9708  3489                     __ptext23:	
  9709 ;; *************** function _ctoa *****************
  9710 ;; Defined at:
  9711 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9714 ;;		 -> vsnprintf@f(6), 
  9715 ;;  c               1   18[BANK0 ] unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  w               2   20[BANK0 ] int 
  9718 ;;  l               2    0        int 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  2   16[BANK0 ] int 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9728 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9731 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9732 ;;Total ram usage:        6 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    5
  9735 ;; This function calls:
  9736 ;;		_pad
  9737 ;; This function is called by:
  9738 ;;		_vfpfcnvrt
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function _ctoa
  9744  3489                     _ctoa:	
  9745                           
  9746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9750  3489  0022               	movlb	2	; select bank2
  9751  348A  0864               	movf	_width^(0+256),w
  9752  348B  0465               	iorwf	(_width+1)^(0+256),w
  9753  348C  1D03               	btfss	3,2
  9754  348D  2C96               	goto	l6679
  9755  348E  0865               	movf	(_width+1)^(0+256),w
  9756  348F  0020               	movlb	0	; select bank0
  9757  3490  00B5               	movwf	ctoa@w+1
  9758  3491  0022               	movlb	2	; select bank2
  9759  3492  0864               	movf	_width^(0+256),w
  9760  3493  0020               	movlb	0	; select bank0
  9761  3494  00B4               	movwf	ctoa@w
  9762  3495  2C9F               	goto	l6681
  9763  3496                     l6679:	
  9764  3496  0864               	movf	_width^(0+256),w
  9765  3497  3EFF               	addlw	255
  9766  3498  0020               	movlb	0	; select bank0
  9767  3499  00B4               	movwf	ctoa@w
  9768  349A  30FF               	movlw	255
  9769  349B  0022               	movlb	2	; select bank2
  9770  349C  3D65               	addwfc	(_width+1)^(0+256),w
  9771  349D  0020               	movlb	0	; select bank0
  9772  349E  00B5               	movwf	ctoa@w+1
  9773  349F                     l6681:	
  9774                           
  9775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9776  349F  0832               	movf	ctoa@c,w
  9777  34A0  00B3               	movwf	??_ctoa
  9778  34A1  0833               	movf	??_ctoa,w
  9779  34A2  0024               	movlb	4	; select bank4
  9780  34A3  00AE               	movwf	_dbuf^(0+512)
  9781                           
  9782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9783  34A4  01AF               	clrf	(_dbuf^(0+512)+1)
  9784                           
  9785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9786  34A5  0020               	movlb	0	; select bank0
  9787  34A6  0831               	movf	ctoa@fp+1,w
  9788  34A7  00A7               	movwf	pad@fp+1
  9789  34A8  0830               	movf	ctoa@fp,w
  9790  34A9  00A6               	movwf	pad@fp
  9791  34AA  302E               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9792  34AB  00B3               	movwf	??_ctoa
  9793  34AC  0833               	movf	??_ctoa,w
  9794  34AD  00A8               	movwf	pad@buf
  9795  34AE  0835               	movf	ctoa@w+1,w
  9796  34AF  00AA               	movwf	pad@p+1
  9797  34B0  0834               	movf	ctoa@w,w
  9798  34B1  00A9               	movwf	pad@p
  9799  34B2  31B6  26B3         	fcall	_pad
  9800  34B4  0020               	movlb	0	; select bank0
  9801  34B5  0827               	movf	?_pad+1,w
  9802  34B6  00B1               	movwf	?_ctoa+1
  9803  34B7  0826               	movf	?_pad,w
  9804  34B8  00B0               	movwf	?_ctoa
  9805  34B9  0008               	return
  9806  34BA                     __end_of_ctoa:	
  9807                           
  9808                           	psect	text24
  9809  36B3                     __ptext24:	
  9810 ;; *************** function _pad *****************
  9811 ;; Defined at:
  9812 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9815 ;;		 -> vsnprintf@f(6), 
  9816 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9817 ;;		 -> dbuf(32), 
  9818 ;;  p               2    9[BANK0 ] int 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  w               2   14[BANK0 ] int 
  9821 ;;  i               2   12[BANK0 ] int 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  2    6[BANK0 ] int 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9831 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:       10 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    4
  9838 ;; This function calls:
  9839 ;;		_fputc
  9840 ;;		_fputs
  9841 ;;		_strlen
  9842 ;; This function is called by:
  9843 ;;		_ctoa
  9844 ;;		_dtoa
  9845 ;;		_otoa
  9846 ;;		_utoa
  9847 ;;		_xtoa
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           
  9852                           ;psect for function _pad
  9853  36B3                     _pad:	
  9854                           
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9856                           
  9857                           ;incstack = 0
  9858                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9859  36B3  0022               	movlb	2	; select bank2
  9860  36B4  1C68               	btfss	_flags^(0+256),0
  9861  36B5  2EBF               	goto	l6647
  9862                           
  9863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9864  36B6  0020               	movlb	0	; select bank0
  9865  36B7  0827               	movf	pad@fp+1,w
  9866  36B8  00FB               	movwf	fputs@fp+1
  9867  36B9  0826               	movf	pad@fp,w
  9868  36BA  00FA               	movwf	fputs@fp
  9869  36BB  0828               	movf	pad@buf,w
  9870  36BC  31B4  2463  31B6   	fcall	_fputs
  9871  36BF                     l6647:	
  9872                           
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9874  36BF  0020               	movlb	0	; select bank0
  9875  36C0  1BAA               	btfsc	pad@p+1,7
  9876  36C1  2EC7               	goto	l6651
  9877  36C2  082A               	movf	pad@p+1,w
  9878  36C3  00AF               	movwf	pad@w+1
  9879  36C4  0829               	movf	pad@p,w
  9880  36C5  00AE               	movwf	pad@w
  9881  36C6  2EC9               	goto	l830
  9882  36C7                     l6651:	
  9883  36C7  01AE               	clrf	pad@w
  9884  36C8  01AF               	clrf	pad@w+1
  9885  36C9                     l830:	
  9886                           
  9887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9888  36C9  01AC               	clrf	pad@i
  9889  36CA  01AD               	clrf	pad@i+1
  9890  36CB                     l6657:	
  9891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9892                           
  9893                           
  9894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9895  36CB  082D               	movf	pad@i+1,w
  9896  36CC  3A80               	xorlw	128
  9897  36CD  00AB               	movwf	??_pad
  9898  36CE  082F               	movf	pad@w+1,w
  9899  36CF  3A80               	xorlw	128
  9900  36D0  022B               	subwf	??_pad,w
  9901  36D1  1D03               	skipz
  9902  36D2  2ED5               	goto	u8025
  9903  36D3  082E               	movf	pad@w,w
  9904  36D4  022C               	subwf	pad@i,w
  9905  36D5                     u8025:	
  9906  36D5  1803               	btfsc	3,0
  9907  36D6  2EE9               	goto	l833
  9908                           
  9909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9910  36D7  3020               	movlw	32
  9911  36D8  00F1               	movwf	fputc@c
  9912  36D9  3000               	movlw	0
  9913  36DA  00F2               	movwf	fputc@c+1
  9914  36DB  0020               	movlb	0	; select bank0
  9915  36DC  0827               	movf	pad@fp+1,w
  9916  36DD  00F4               	movwf	fputc@fp+1
  9917  36DE  0826               	movf	pad@fp,w
  9918  36DF  00F3               	movwf	fputc@fp
  9919  36E0  31B7  2756  31B6   	fcall	_fputc
  9920                           
  9921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9922  36E3  3001               	movlw	1
  9923  36E4  0020               	movlb	0	; select bank0
  9924  36E5  07AC               	addwf	pad@i,f
  9925  36E6  3000               	movlw	0
  9926  36E7  3DAD               	addwfc	pad@i+1,f
  9927  36E8  2ECB               	goto	l6657
  9928  36E9                     l833:	
  9929                           
  9930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9931  36E9  0022               	movlb	2	; select bank2
  9932  36EA  1868               	btfsc	_flags^(0+256),0
  9933  36EB  2EF5               	goto	l6661
  9934                           
  9935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9936  36EC  0020               	movlb	0	; select bank0
  9937  36ED  0827               	movf	pad@fp+1,w
  9938  36EE  00FB               	movwf	fputs@fp+1
  9939  36EF  0826               	movf	pad@fp,w
  9940  36F0  00FA               	movwf	fputs@fp
  9941  36F1  0828               	movf	pad@buf,w
  9942  36F2  31B4  2463  31B6   	fcall	_fputs
  9943  36F5                     l6661:	
  9944                           
  9945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9946  36F5  0020               	movlb	0	; select bank0
  9947  36F6  0828               	movf	pad@buf,w
  9948  36F7  00F1               	movwf	strlen@s
  9949  36F8  3002               	movlw	2
  9950  36F9  00F2               	movwf	strlen@s+1
  9951  36FA  31B2  22DC         	fcall	_strlen
  9952  36FC  0020               	movlb	0	; select bank0
  9953  36FD  082E               	movf	pad@w,w
  9954  36FE  0771               	addwf	?_strlen,w
  9955  36FF  00A6               	movwf	?_pad
  9956  3700  082F               	movf	pad@w+1,w
  9957  3701  3D72               	addwfc	?_strlen+1,w
  9958  3702  00A7               	movwf	?_pad+1
  9959  3703  0008               	return
  9960  3704                     __end_of_pad:	
  9961                           
  9962                           	psect	text25
  9963  32DC                     __ptext25:	
  9964 ;; *************** function _strlen *****************
  9965 ;; Defined at:
  9966 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  s               2    1[COMMON] PTR const unsigned char 
  9969 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9970 ;;		 -> updateTemperatures@vtsx(2), 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  a               2    3[COMMON] PTR const unsigned char 
  9973 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9974 ;;		 -> updateTemperatures@vtsx(2), 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  2    1[COMMON] unsigned int 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9988 ;;Total ram usage:        4 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_pad
  9995 ;;		_stoa
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _strlen
 10001  32DC                     _strlen:	
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10005  32DC  0872               	movf	strlen@s+1,w
 10006  32DD  00F4               	movwf	strlen@a+1
 10007  32DE  0871               	movf	strlen@s,w
 10008  32DF  00F3               	movwf	strlen@a
 10009  32E0                     l4235:	
 10010  32E0  0871               	movf	strlen@s,w
 10011  32E1  0086               	movwf	6
 10012  32E2  0872               	movf	strlen@s+1,w
 10013  32E3  0087               	movwf	7
 10014  32E4  0801               	movf	1,w
 10015  32E5  1903               	btfsc	3,2
 10016  32E6  2AEC               	goto	l4237
 10017  32E7  3001               	movlw	1
 10018  32E8  07F1               	addwf	strlen@s,f
 10019  32E9  3000               	movlw	0
 10020  32EA  3DF2               	addwfc	strlen@s+1,f
 10021  32EB  2AE0               	goto	l4235
 10022  32EC                     l4237:	
 10023  32EC  0873               	movf	strlen@a,w
 10024  32ED  0271               	subwf	strlen@s,w
 10025  32EE  00F1               	movwf	?_strlen
 10026  32EF  0874               	movf	strlen@a+1,w
 10027  32F0  3B72               	subwfb	strlen@s+1,w
 10028  32F1  00F2               	movwf	?_strlen+1
 10029  32F2  0008               	return
 10030  32F3                     __end_of_strlen:	
 10031                           
 10032                           	psect	text26
 10033  3463                     __ptext26:	
 10034 ;; *************** function _fputs *****************
 10035 ;; Defined at:
 10036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  s               1    wreg     PTR const unsigned char 
 10039 ;;		 -> dbuf(32), 
 10040 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10041 ;;		 -> vsnprintf@f(6), 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10044 ;;		 -> dbuf(32), 
 10045 ;;  i               2    3[BANK0 ] int 
 10046 ;;  c               1    2[BANK0 ] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2   10[COMMON] int 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10059 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10060 ;;Total ram usage:        8 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:    3
 10063 ;; This function calls:
 10064 ;;		_fputc
 10065 ;; This function is called by:
 10066 ;;		_pad
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           
 10071                           ;psect for function _fputs
 10072  3463                     _fputs:	
 10073                           
 10074                           ;incstack = 0
 10075                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10076                           ;fputs@s stored from wreg
 10077  3463  0020               	movlb	0	; select bank0
 10078  3464  00A5               	movwf	fputs@s
 10079  3465  01A3               	clrf	fputs@i
 10080  3466  01A4               	clrf	fputs@i+1
 10081  3467                     l4229:	
 10082  3467  0823               	movf	fputs@i,w
 10083  3468  0725               	addwf	fputs@s,w
 10084  3469  00A0               	movwf	??_fputs
 10085  346A  0820               	movf	??_fputs,w
 10086  346B  0086               	movwf	6
 10087  346C  3002               	movlw	2	; select bank4/5
 10088  346D  0087               	movwf	7
 10089  346E  0801               	movf	1,w
 10090  346F  00A1               	movwf	??_fputs+1
 10091  3470  0821               	movf	??_fputs+1,w
 10092  3471  00A2               	movwf	fputs@c
 10093  3472  0822               	movf	fputs@c,w
 10094  3473  1903               	btfsc	3,2
 10095  3474  0008               	return
 10096  3475  0822               	movf	fputs@c,w
 10097  3476  00A0               	movwf	??_fputs
 10098  3477  01A1               	clrf	??_fputs+1
 10099  3478  0820               	movf	??_fputs,w
 10100  3479  00F1               	movwf	fputc@c
 10101  347A  0821               	movf	??_fputs+1,w
 10102  347B  00F2               	movwf	fputc@c+1
 10103  347C  087B               	movf	fputs@fp+1,w
 10104  347D  00F4               	movwf	fputc@fp+1
 10105  347E  087A               	movf	fputs@fp,w
 10106  347F  00F3               	movwf	fputc@fp
 10107  3480  31B7  2756  31B4   	fcall	_fputc
 10108  3483  3001               	movlw	1
 10109  3484  0020               	movlb	0	; select bank0
 10110  3485  07A3               	addwf	fputs@i,f
 10111  3486  3000               	movlw	0
 10112  3487  3DA4               	addwfc	fputs@i+1,f
 10113  3488  2C67               	goto	l4229
 10114  3489                     __end_of_fputs:	
 10115                           
 10116                           	psect	text27
 10117  3756                     __ptext27:	
 10118 ;; *************** function _fputc *****************
 10119 ;; Defined at:
 10120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  c               2    1[COMMON] int 
 10123 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10124 ;;		 -> vsnprintf@f(6), 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  2    1[COMMON] int 
 10129 ;; Registers used:
 10130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10139 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10140 ;;Total ram usage:        9 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    2
 10143 ;; This function calls:
 10144 ;;		_putch
 10145 ;; This function is called by:
 10146 ;;		_pad
 10147 ;;		_stoa
 10148 ;;		_vfpfcnvrt
 10149 ;;		_fputs
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           
 10154                           ;psect for function _fputc
 10155  3756                     _fputc:	
 10156                           
 10157                           ;incstack = 0
 10158                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10159  3756  0873               	movf	fputc@fp,w
 10160  3757  0474               	iorwf	fputc@fp+1,w
 10161  3758  1903               	btfsc	3,2
 10162  3759  2F5E               	goto	l4211
 10163  375A  0873               	movf	fputc@fp,w
 10164  375B  0474               	iorwf	fputc@fp+1,w
 10165  375C  1D03               	btfss	3,2
 10166  375D  2F62               	goto	l4213
 10167  375E                     l4211:	
 10168  375E  0871               	movf	fputc@c,w
 10169  375F  3187  27FF         	fcall	_putch
 10170  3761  0008               	return
 10171  3762                     l4213:	
 10172  3762  0873               	movf	fputc@fp,w
 10173  3763  0086               	movwf	6
 10174  3764  0874               	movf	fputc@fp+1,w
 10175  3765  0087               	movwf	7
 10176  3766  3144               	addfsr 1,4
 10177  3767  0016               	moviw fsr1++
 10178  3768  0401               	iorwf	1,w
 10179  3769  1903               	btfsc	3,2
 10180  376A  2F89               	goto	l4217
 10181  376B  0873               	movf	fputc@fp,w
 10182  376C  0086               	movwf	6
 10183  376D  0874               	movf	fputc@fp+1,w
 10184  376E  0087               	movwf	7
 10185  376F  3144               	addfsr 1,4
 10186  3770  3F40               	moviw [0]fsr1
 10187  3771  00F5               	movwf	??_fputc
 10188  3772  3F41               	moviw [1]fsr1
 10189  3773  00F6               	movwf	??_fputc+1
 10190  3774  0873               	movf	fputc@fp,w
 10191  3775  0086               	movwf	6
 10192  3776  0874               	movf	fputc@fp+1,w
 10193  3777  0087               	movwf	7
 10194  3778  3142               	addfsr 1,2
 10195  3779  3F40               	moviw [0]fsr1
 10196  377A  00F7               	movwf	??_fputc+2
 10197  377B  3F41               	moviw [1]fsr1
 10198  377C  00F8               	movwf	??_fputc+3
 10199  377D  0878               	movf	??_fputc+3,w
 10200  377E  3A80               	xorlw	128
 10201  377F  00F9               	movwf	??_fputc+4
 10202  3780  0876               	movf	??_fputc+1,w
 10203  3781  3A80               	xorlw	128
 10204  3782  0279               	subwf	??_fputc+4,w
 10205  3783  1D03               	skipz
 10206  3784  2F87               	goto	u4055
 10207  3785  0875               	movf	??_fputc,w
 10208  3786  0277               	subwf	??_fputc+2,w
 10209  3787                     u4055:	
 10210  3787  1803               	skipnc
 10211  3788  0008               	return
 10212  3789                     l4217:	
 10213  3789  0873               	movf	fputc@fp,w
 10214  378A  0086               	movwf	6
 10215  378B  0874               	movf	fputc@fp+1,w
 10216  378C  0087               	movwf	7
 10217  378D  3142               	addfsr 1,2
 10218  378E  0873               	movf	fputc@fp,w
 10219  378F  0084               	movwf	4
 10220  3790  0874               	movf	fputc@fp+1,w
 10221  3791  0085               	movwf	5
 10222  3792  3F40               	moviw [0]fsr1
 10223  3793  0700               	addwf	0,w
 10224  3794  00F5               	movwf	??_fputc
 10225  3795  3101               	addfsr 0,1
 10226  3796  3F41               	moviw [1]fsr1
 10227  3797  3D00               	addwfc	0,w
 10228  3798  00F6               	movwf	??_fputc+1
 10229  3799  0875               	movf	??_fputc,w
 10230  379A  0086               	movwf	6
 10231  379B  0876               	movf	??_fputc+1,w
 10232  379C  0087               	movwf	7
 10233  379D  0871               	movf	fputc@c,w
 10234  379E  0081               	movwf	1
 10235  379F  0873               	movf	fputc@fp,w
 10236  37A0  0086               	movwf	6
 10237  37A1  0874               	movf	fputc@fp+1,w
 10238  37A2  0087               	movwf	7
 10239  37A3  3142               	addfsr 1,2
 10240  37A4  3001               	movlw	1
 10241  37A5  0781               	addwf	1,f
 10242  37A6  3141               	addfsr 1,1
 10243  37A7  1803               	skipnc
 10244  37A8  0A81               	incf	1,f
 10245  37A9  0008               	return
 10246  37AA                     __end_of_fputc:	
 10247                           
 10248                           	psect	text28
 10249  07FF                     __ptext28:	
 10250 ;; *************** function _putch *****************
 10251 ;; Defined at:
 10252 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;  c               1    wreg     unsigned char 
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;  c               1    0[COMMON] unsigned char 
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		wreg
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10270 ;;Total ram usage:        0 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    1
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_fputc
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _putch
 10282  07FF                     _putch:	
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _putch: [wreg]
 10286  07FF  0008               	return
 10287  0800                     __end_of_putch:	
 10288                           
 10289                           	psect	text29
 10290  2C79                     __ptext29:	
 10291 ;; *************** function _atoi *****************
 10292 ;; Defined at:
 10293 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;  s               2    7[COMMON] PTR const unsigned char 
 10296 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
 10297 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
 10298 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
 10299 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;  n               2   11[BANK0 ] int 
 10302 ;;  neg             2    4[BANK0 ] int 
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  2    7[COMMON] int 
 10305 ;; Registers used:
 10306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10313 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10315 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10316 ;;Total ram usage:       15 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    2
 10319 ;; This function calls:
 10320 ;;		___wmul
 10321 ;;		_isdigit
 10322 ;;		_isspace
 10323 ;; This function is called by:
 10324 ;;		_vfpfcnvrt
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           
 10329                           ;psect for function _atoi
 10330  2C79                     _atoi:	
 10331                           
 10332                           ;incstack = 0
 10333                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10334  2C79  0020               	movlb	0	; select bank0
 10335  2C7A  01AB               	clrf	atoi@n
 10336  2C7B  01AC               	clrf	atoi@n+1
 10337  2C7C  01A4               	clrf	atoi@neg
 10338  2C7D  01A5               	clrf	atoi@neg+1
 10339  2C7E                     l6895:	
 10340  2C7E  01AA               	clrf	_atoi$1886
 10341  2C7F  0AAA               	incf	_atoi$1886,f
 10342  2C80  0877               	movf	atoi@s,w
 10343  2C81  0084               	movwf	4
 10344  2C82  0878               	movf	atoi@s+1,w
 10345  2C83  0085               	movwf	5
 10346  2C84  0012               	moviw fsr0++
 10347  2C85  3A20               	xorlw	32
 10348  2C86  1903               	btfsc	3,2
 10349  2C87  2C9A               	goto	l6903
 10350  2C88  0877               	movf	atoi@s,w
 10351  2C89  0084               	movwf	4
 10352  2C8A  0878               	movf	atoi@s+1,w
 10353  2C8B  0085               	movwf	5
 10354  2C8C  0800               	movf	0,w	;code access
 10355  2C8D  3EF7               	addlw	247
 10356  2C8E  00A0               	movwf	??_atoi
 10357  2C8F  30FF               	movlw	255
 10358  2C90  1803               	skipnc
 10359  2C91  3000               	movlw	0
 10360  2C92  00A1               	movwf	??_atoi+1
 10361  2C93  3000               	movlw	0
 10362  2C94  0221               	subwf	??_atoi+1,w
 10363  2C95  3005               	movlw	5
 10364  2C96  1903               	skipnz
 10365  2C97  0220               	subwf	??_atoi,w
 10366  2C98  1803               	btfsc	3,0
 10367  2C99  01AA               	clrf	_atoi$1886
 10368  2C9A                     l6903:	
 10369  2C9A  082A               	movf	_atoi$1886,w
 10370  2C9B  00A0               	movwf	??_atoi
 10371  2C9C  01A1               	clrf	??_atoi+1
 10372  2C9D  0820               	movf	??_atoi,w
 10373  2C9E  00A6               	movwf	_atoi$1885
 10374  2C9F  0821               	movf	??_atoi+1,w
 10375  2CA0  00A7               	movwf	_atoi$1885+1
 10376  2CA1  0826               	movf	_atoi$1885,w
 10377  2CA2  0427               	iorwf	_atoi$1885+1,w
 10378  2CA3  1903               	btfsc	3,2
 10379  2CA4  2CAF               	goto	l6911
 10380  2CA5  3001               	movlw	1
 10381  2CA6  07F7               	addwf	atoi@s,f
 10382  2CA7  3000               	movlw	0
 10383  2CA8  3DF8               	addwfc	atoi@s+1,f
 10384  2CA9  2C7E               	goto	l6895
 10385  2CAA                     l6909:	
 10386  2CAA  3001               	movlw	1
 10387  2CAB  00A4               	movwf	atoi@neg
 10388  2CAC  3000               	movlw	0
 10389  2CAD  00A5               	movwf	atoi@neg+1
 10390  2CAE  2CE2               	goto	l1513
 10391  2CAF                     l6911:	
 10392  2CAF  0877               	movf	atoi@s,w
 10393  2CB0  0084               	movwf	4
 10394  2CB1  0878               	movf	atoi@s+1,w
 10395  2CB2  0085               	movwf	5
 10396  2CB3  0800               	movf	0,w	;code access
 10397  2CB4  00A0               	movwf	??_atoi
 10398  2CB5  01A1               	clrf	??_atoi+1
 10399                           
 10400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10401                           ; Switch size 1, requested type "simple"
 10402                           ; Number of cases is 1, Range of values is 0 to 0
 10403                           ; switch strategies available:
 10404                           ; Name         Instructions Cycles
 10405                           ; simple_byte            4     3 (average)
 10406                           ; direct_byte            8     6 (fixed)
 10407                           ; jumptable            260     6 (fixed)
 10408                           ;	Chosen strategy is simple_byte
 10409  2CB6  0821               	movf	??_atoi+1,w
 10410  2CB7  3A00               	xorlw	0	; case 0
 10411  2CB8  1903               	skipnz
 10412  2CB9  2CBB               	goto	l8035
 10413  2CBA  2CE6               	goto	l6917
 10414  2CBB                     l8035:	
 10415                           
 10416                           ; Switch size 1, requested type "simple"
 10417                           ; Number of cases is 2, Range of values is 43 to 45
 10418                           ; switch strategies available:
 10419                           ; Name         Instructions Cycles
 10420                           ; simple_byte            7     4 (average)
 10421                           ; direct_byte           15     9 (fixed)
 10422                           ; jumptable            263     9 (fixed)
 10423                           ;	Chosen strategy is simple_byte
 10424  2CBB  0820               	movf	??_atoi,w
 10425  2CBC  3A2B               	xorlw	43	; case 43
 10426  2CBD  1903               	skipnz
 10427  2CBE  2CE2               	goto	l1513
 10428  2CBF  3A06               	xorlw	6	; case 45
 10429  2CC0  1903               	skipnz
 10430  2CC1  2CAA               	goto	l6909
 10431  2CC2  2CE6               	goto	l6917
 10432  2CC3                     l6913:	
 10433  2CC3  0877               	movf	atoi@s,w
 10434  2CC4  0084               	movwf	4
 10435  2CC5  0878               	movf	atoi@s+1,w
 10436  2CC6  0085               	movwf	5
 10437  2CC7  0800               	movf	0,w	;code access
 10438  2CC8  00A0               	movwf	??_atoi
 10439  2CC9  082C               	movf	atoi@n+1,w
 10440  2CCA  00F2               	movwf	___wmul@multiplier+1
 10441  2CCB  082B               	movf	atoi@n,w
 10442  2CCC  00F1               	movwf	___wmul@multiplier
 10443  2CCD  300A               	movlw	10
 10444  2CCE  00F3               	movwf	___wmul@multiplicand
 10445  2CCF  3000               	movlw	0
 10446  2CD0  00F4               	movwf	___wmul@multiplicand+1
 10447  2CD1  31B3  2352  31AC   	fcall	___wmul
 10448  2CD4  0872               	movf	?___wmul+1,w
 10449  2CD5  0020               	movlb	0	; select bank0
 10450  2CD6  00A2               	movwf	??_atoi+2
 10451  2CD7  0820               	movf	??_atoi,w
 10452  2CD8  0271               	subwf	?___wmul,w
 10453  2CD9  00A1               	movwf	??_atoi+1
 10454  2CDA  1C03               	skipc
 10455  2CDB  03A2               	decf	??_atoi+2,f
 10456  2CDC  0821               	movf	??_atoi+1,w
 10457  2CDD  3E30               	addlw	48
 10458  2CDE  00AB               	movwf	atoi@n
 10459  2CDF  3000               	movlw	0
 10460  2CE0  3D22               	addwfc	??_atoi+2,w
 10461  2CE1  00AC               	movwf	atoi@n+1
 10462  2CE2                     l1513:	
 10463  2CE2  3001               	movlw	1
 10464  2CE3  07F7               	addwf	atoi@s,f
 10465  2CE4  3000               	movlw	0
 10466  2CE5  3DF8               	addwfc	atoi@s+1,f
 10467  2CE6                     l6917:	
 10468  2CE6  0877               	movf	atoi@s,w
 10469  2CE7  0084               	movwf	4
 10470  2CE8  0878               	movf	atoi@s+1,w
 10471  2CE9  0085               	movwf	5
 10472  2CEA  0800               	movf	0,w	;code access
 10473  2CEB  3ED0               	addlw	208
 10474  2CEC  00A0               	movwf	??_atoi
 10475  2CED  30FF               	movlw	255
 10476  2CEE  1803               	skipnc
 10477  2CEF  3000               	movlw	0
 10478  2CF0  00A1               	movwf	??_atoi+1
 10479  2CF1  3000               	movlw	0
 10480  2CF2  0221               	subwf	??_atoi+1,w
 10481  2CF3  300A               	movlw	10
 10482  2CF4  1903               	skipnz
 10483  2CF5  0220               	subwf	??_atoi,w
 10484  2CF6  1803               	btfsc	3,0
 10485  2CF7  2CFA               	goto	u8610
 10486  2CF8  3001               	movlw	1
 10487  2CF9  2CFB               	goto	u8620
 10488  2CFA                     u8610:	
 10489  2CFA  3000               	movlw	0
 10490  2CFB                     u8620:	
 10491  2CFB  00A2               	movwf	??_atoi+2
 10492  2CFC  01A3               	clrf	??_atoi+3
 10493  2CFD  0822               	movf	??_atoi+2,w
 10494  2CFE  00A8               	movwf	_atoi$1887
 10495  2CFF  0823               	movf	??_atoi+3,w
 10496  2D00  00A9               	movwf	_atoi$1887+1
 10497  2D01  0828               	movf	_atoi$1887,w
 10498  2D02  0429               	iorwf	_atoi$1887+1,w
 10499  2D03  1D03               	btfss	3,2
 10500  2D04  2CC3               	goto	l6913
 10501  2D05  0824               	movf	atoi@neg,w
 10502  2D06  0425               	iorwf	atoi@neg+1,w
 10503  2D07  1D03               	btfss	3,2
 10504  2D08  2D15               	goto	l6927
 10505  2D09  092B               	comf	atoi@n,w
 10506  2D0A  00A0               	movwf	??_atoi
 10507  2D0B  092C               	comf	atoi@n+1,w
 10508  2D0C  00A1               	movwf	??_atoi+1
 10509  2D0D  0AA0               	incf	??_atoi,f
 10510  2D0E  1903               	skipnz
 10511  2D0F  0AA1               	incf	??_atoi+1,f
 10512  2D10  0820               	movf	??_atoi,w
 10513  2D11  00F7               	movwf	?_atoi
 10514  2D12  0821               	movf	??_atoi+1,w
 10515  2D13  00F8               	movwf	?_atoi+1
 10516  2D14  0008               	return
 10517  2D15                     l6927:	
 10518  2D15  082C               	movf	atoi@n+1,w
 10519  2D16  00F8               	movwf	?_atoi+1
 10520  2D17  082B               	movf	atoi@n,w
 10521  2D18  00F7               	movwf	?_atoi
 10522  2D19  0008               	return
 10523  2D1A                     __end_of_atoi:	
 10524                           
 10525                           	psect	text30
 10526  33A3                     __ptext30:	
 10527 ;; *************** function _isspace *****************
 10528 ;; Defined at:
 10529 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  c               2    1[COMMON] int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  2    1[COMMON] int 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10546 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10547 ;;Total ram usage:        5 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_atoi
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           
 10558                           ;psect for function _isspace
 10559  33A3                     _isspace:	
 10560                           
 10561                           ;incstack = 0
 10562                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10563  33A3  01F5               	clrf	_isspace$1912
 10564  33A4  0AF5               	incf	_isspace$1912,f
 10565  33A5  3020               	movlw	32
 10566  33A6  0671               	xorwf	isspace@c,w
 10567  33A7  0472               	iorwf	isspace@c+1,w
 10568  33A8  1903               	btfsc	3,2
 10569  33A9  2BB7               	goto	l4421
 10570  33AA  0871               	movf	isspace@c,w
 10571  33AB  3EF7               	addlw	247
 10572  33AC  00F3               	movwf	??_isspace
 10573  33AD  30FF               	movlw	255
 10574  33AE  3D72               	addwfc	isspace@c+1,w
 10575  33AF  00F4               	movwf	??_isspace+1
 10576  33B0  3000               	movlw	0
 10577  33B1  0274               	subwf	??_isspace+1,w
 10578  33B2  3005               	movlw	5
 10579  33B3  1903               	skipnz
 10580  33B4  0273               	subwf	??_isspace,w
 10581  33B5  1803               	btfsc	3,0
 10582  33B6  01F5               	clrf	_isspace$1912
 10583  33B7                     l4421:	
 10584  33B7  0875               	movf	_isspace$1912,w
 10585  33B8  00F3               	movwf	??_isspace
 10586  33B9  01F4               	clrf	??_isspace+1
 10587  33BA  0873               	movf	??_isspace,w
 10588  33BB  00F1               	movwf	?_isspace
 10589  33BC  0874               	movf	??_isspace+1,w
 10590  33BD  00F2               	movwf	?_isspace+1
 10591  33BE  0008               	return
 10592  33BF                     __end_of_isspace:	
 10593                           
 10594                           	psect	text31
 10595  32C5                     __ptext31:	
 10596 ;; *************** function _isdigit *****************
 10597 ;; Defined at:
 10598 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  c               2    1[COMMON] int 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  2    1[COMMON] int 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2, status,0
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10616 ;;Total ram usage:        6 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    1
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		_vfpfcnvrt
 10623 ;;		_atoi
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           
 10628                           ;psect for function _isdigit
 10629  32C5                     _isdigit:	
 10630                           
 10631                           ;incstack = 0
 10632                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10633  32C5  0871               	movf	isdigit@c,w
 10634  32C6  3ED0               	addlw	208
 10635  32C7  00F3               	movwf	??_isdigit
 10636  32C8  30FF               	movlw	255
 10637  32C9  3D72               	addwfc	isdigit@c+1,w
 10638  32CA  00F4               	movwf	??_isdigit+1
 10639  32CB  3000               	movlw	0
 10640  32CC  0274               	subwf	??_isdigit+1,w
 10641  32CD  300A               	movlw	10
 10642  32CE  1903               	skipnz
 10643  32CF  0273               	subwf	??_isdigit,w
 10644  32D0  1803               	btfsc	3,0
 10645  32D1  2AD4               	goto	u4220
 10646  32D2  3001               	movlw	1
 10647  32D3  2AD5               	goto	u4230
 10648  32D4                     u4220:	
 10649  32D4  3000               	movlw	0
 10650  32D5                     u4230:	
 10651  32D5  00F5               	movwf	??_isdigit+2
 10652  32D6  01F6               	clrf	??_isdigit+3
 10653  32D7  0875               	movf	??_isdigit+2,w
 10654  32D8  00F1               	movwf	?_isdigit
 10655  32D9  0876               	movf	??_isdigit+3,w
 10656  32DA  00F2               	movwf	?_isdigit+1
 10657  32DB  0008               	return
 10658  32DC                     __end_of_isdigit:	
 10659                           
 10660                           	psect	text32
 10661  3338                     __ptext32:	
 10662 ;; *************** function _EUSART_Write_Text *****************
 10663 ;; Defined at:
 10664 ;;		line 75 in file "EUSART.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  text            2    2[COMMON] PTR unsigned char 
 10667 ;;		 -> STR_18(3), STR_5(3), STR_4(38), messageBuffer(127), 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  i               2    5[COMMON] int 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10682 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10683 ;;Total ram usage:        5 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		_EUSART_Write
 10688 ;; This function is called by:
 10689 ;;		_statemachine
 10690 ;;		_printcellParameters
 10691 ;;		_printotAFERegisters
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           
 10696                           ;psect for function _EUSART_Write_Text
 10697  3338                     _EUSART_Write_Text:	
 10698                           
 10699                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10700                           
 10701                           ;incstack = 0
 10702                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10703  3338  01F5               	clrf	EUSART_Write_Text@i
 10704  3339  01F6               	clrf	EUSART_Write_Text@i+1
 10705  333A                     l5983:	
 10706  333A  0872               	movf	EUSART_Write_Text@text,w
 10707  333B  0775               	addwf	EUSART_Write_Text@i,w
 10708  333C  0084               	movwf	4
 10709  333D  0873               	movf	EUSART_Write_Text@text+1,w
 10710  333E  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10711  333F  0085               	movwf	5
 10712  3340  0012               	moviw fsr0++
 10713  3341  1903               	btfsc	3,2
 10714  3342  0008               	return
 10715                           
 10716                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10717  3343  0872               	movf	EUSART_Write_Text@text,w
 10718  3344  0775               	addwf	EUSART_Write_Text@i,w
 10719  3345  0084               	movwf	4
 10720  3346  0873               	movf	EUSART_Write_Text@text+1,w
 10721  3347  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10722  3348  0085               	movwf	5
 10723  3349  0800               	movf	0,w	;code access
 10724  334A  31B2  224F  31B3   	fcall	_EUSART_Write
 10725  334D  3001               	movlw	1
 10726  334E  07F5               	addwf	EUSART_Write_Text@i,f
 10727  334F  3000               	movlw	0
 10728  3350  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10729  3351  2B3A               	goto	l5983
 10730  3352                     __end_of_EUSART_Write_Text:	
 10731                           
 10732                           	psect	text33
 10733  324F                     __ptext33:	
 10734 ;; *************** function _EUSART_Write *****************
 10735 ;; Defined at:
 10736 ;;		line 56 in file "EUSART.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  txData          1    wreg     unsigned char 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  txData          1    1[COMMON] unsigned char 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  1    wreg      void 
 10743 ;; Registers used:
 10744 ;;		wreg
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10754 ;;Total ram usage:        1 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; Hardware stack levels required when called:    1
 10757 ;; This function calls:
 10758 ;;		Nothing
 10759 ;; This function is called by:
 10760 ;;		_EUSART_Write_Text
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           
 10765                           ;psect for function _EUSART_Write
 10766  324F                     _EUSART_Write:	
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _EUSART_Write: [wreg]
 10770                           ;EUSART_Write@txData stored from wreg
 10771  324F  00F1               	movwf	EUSART_Write@txData
 10772  3250                     l288:	
 10773                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10774                           
 10775                           
 10776                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10777  3250  0020               	movlb	0	; select bank0
 10778  3251  1E11               	btfss	17,4	;volatile
 10779  3252  2A50               	goto	l288
 10780                           
 10781                           ;EUSART.c: 62:     TX1REG = txData;
 10782  3253  0871               	movf	EUSART_Write@txData,w
 10783  3254  0023               	movlb	3	; select bank3
 10784  3255  009A               	movwf	26	;volatile
 10785  3256  0008               	return
 10786  3257                     __end_of_EUSART_Write:	
 10787                           
 10788                           	psect	text34
 10789  37AA                     __ptext34:	
 10790 ;; *************** function _init_AFE *****************
 10791 ;; Defined at:
 10792 ;;		line 3 in file "BQ76920.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10810 ;;Total ram usage:        0 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    4
 10813 ;; This function calls:
 10814 ;;		_setCellOvervoltageProtection
 10815 ;;		_setCellUndervoltageProtection
 10816 ;;		_setOverCurrentDischargeProtection
 10817 ;;		_setShortCircuitProtection
 10818 ;;		_setShuntResistorValue
 10819 ;;		_setTemperatureLimitsint
 10820 ;; This function is called by:
 10821 ;;		_statemachine
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           
 10826                           ;psect for function _init_AFE
 10827  37AA                     _init_AFE:	
 10828                           
 10829                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10830                           
 10831                           ;incstack = 0
 10832                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10833  37AA  30EC               	movlw	236
 10834  37AB  0020               	movlb	0	; select bank0
 10835  37AC  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10836  37AD  30FF               	movlw	255
 10837  37AE  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10838  37AF  302D               	movlw	45
 10839  37B0  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10840  37B1  3000               	movlw	0
 10841  37B2  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10842  37B3  3000               	movlw	0
 10843  37B4  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10844  37B5  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10845  37B6  302D               	movlw	45
 10846  37B7  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10847  37B8  3000               	movlw	0
 10848  37B9  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10849  37BA  31A8  2000  31B7   	fcall	_setTemperatureLimitsint
 10850                           
 10851                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10852  37BD  303C               	movlw	60
 10853  37BE  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10854  37BF  30A3               	movlw	163
 10855  37C0  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10856  37C1  30D7               	movlw	215
 10857  37C2  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10858  37C3  300A               	movlw	10
 10859  37C4  00F1               	movwf	setShuntResistorValue@res_mOhm
 10860  37C5  31B2  227D  31B7   	fcall	_setShuntResistorValue
 10861                           
 10862                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 10863  37C8  3000               	movlw	0
 10864  37C9  0020               	movlb	0	; select bank0
 10865  37CA  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10866  37CB  3000               	movlw	0
 10867  37CC  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10868  37CD  3001               	movlw	1
 10869  37CE  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10870  37CF  30F4               	movlw	244
 10871  37D0  00E6               	movwf	setShortCircuitProtection@current_mA
 10872  37D1  30C8               	movlw	200
 10873  37D2  00EA               	movwf	setShortCircuitProtection@delay_us
 10874  37D3  3000               	movlw	0
 10875  37D4  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10876  37D5  3199  211E  31B7   	fcall	_setShortCircuitProtection
 10877                           
 10878                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 10879  37D8  3000               	movlw	0
 10880  37D9  0020               	movlb	0	; select bank0
 10881  37DA  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10882  37DB  3000               	movlw	0
 10883  37DC  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10884  37DD  3000               	movlw	0
 10885  37DE  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10886  37DF  300A               	movlw	10
 10887  37E0  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10888  37E1  3040               	movlw	64
 10889  37E2  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10890  37E3  3001               	movlw	1
 10891  37E4  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10892  37E5  3198  2009  31B7   	fcall	_setOverCurrentDischargeProtection
 10893                           
 10894                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 10895  37E8  3054               	movlw	84
 10896  37E9  0020               	movlb	0	; select bank0
 10897  37EA  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10898  37EB  300B               	movlw	11
 10899  37EC  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10900  37ED  3002               	movlw	2
 10901  37EE  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10902  37EF  3000               	movlw	0
 10903  37F0  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10904  37F1  31A2  2289  31B7   	fcall	_setCellUndervoltageProtection
 10905                           
 10906                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 10907  37F4  3004               	movlw	4
 10908  37F5  0020               	movlb	0	; select bank0
 10909  37F6  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10910  37F7  3010               	movlw	16
 10911  37F8  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10912  37F9  3002               	movlw	2
 10913  37FA  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10914  37FB  3000               	movlw	0
 10915  37FC  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10916  37FD  31A0  20D8         	fcall	_setCellOvervoltageProtection
 10917  37FF  0008               	return
 10918  3800                     __end_of_init_AFE:	
 10919                           
 10920                           	psect	text35
 10921  2800                     __ptext35:	
 10922 ;; *************** function _setTemperatureLimitsint *****************
 10923 ;; Defined at:
 10924 ;;		line 61 in file "BQ76920.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  minDischarge    2    0[BANK0 ] int 
 10927 ;;  maxDischarge    2    2[BANK0 ] int 
 10928 ;;  minCharge_de    2    4[BANK0 ] int 
 10929 ;;  maxCharge_de    2    6[BANK0 ] int 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10941 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10945 ;;Total ram usage:        8 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    2
 10948 ;; This function calls:
 10949 ;;		___wmul
 10950 ;; This function is called by:
 10951 ;;		_init_AFE
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _setTemperatureLimitsint
 10957  2800                     _setTemperatureLimitsint:	
 10958                           
 10959                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 10960                           
 10961                           ;incstack = 0
 10962                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10963  2800  0020               	movlb	0	; select bank0
 10964  2801  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10965  2802  00F2               	movwf	___wmul@multiplier+1
 10966  2803  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10967  2804  00F1               	movwf	___wmul@multiplier
 10968  2805  300A               	movlw	10
 10969  2806  00F3               	movwf	___wmul@multiplicand
 10970  2807  3000               	movlw	0
 10971  2808  00F4               	movwf	___wmul@multiplicand+1
 10972  2809  31B3  2352  31A8   	fcall	___wmul
 10973  280C  0872               	movf	?___wmul+1,w
 10974  280D  0023               	movlb	3	; select bank3
 10975  280E  00E3               	movwf	(_minCellTempDischarge+1)^(0+384)
 10976  280F  0871               	movf	?___wmul,w
 10977  2810  00E2               	movwf	_minCellTempDischarge^(0+384)
 10978                           
 10979                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 10980  2811  0020               	movlb	0	; select bank0
 10981  2812  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 10982  2813  00F2               	movwf	___wmul@multiplier+1
 10983  2814  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 10984  2815  00F1               	movwf	___wmul@multiplier
 10985  2816  300A               	movlw	10
 10986  2817  00F3               	movwf	___wmul@multiplicand
 10987  2818  3000               	movlw	0
 10988  2819  00F4               	movwf	___wmul@multiplicand+1
 10989  281A  31B3  2352  31A8   	fcall	___wmul
 10990  281D  0872               	movf	?___wmul+1,w
 10991  281E  0023               	movlb	3	; select bank3
 10992  281F  00DF               	movwf	(_maxCellTempDischarge+1)^(0+384)
 10993  2820  0871               	movf	?___wmul,w
 10994  2821  00DE               	movwf	_maxCellTempDischarge^(0+384)
 10995                           
 10996                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 10997  2822  0020               	movlb	0	; select bank0
 10998  2823  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 10999  2824  00F2               	movwf	___wmul@multiplier+1
 11000  2825  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11001  2826  00F1               	movwf	___wmul@multiplier
 11002  2827  300A               	movlw	10
 11003  2828  00F3               	movwf	___wmul@multiplicand
 11004  2829  3000               	movlw	0
 11005  282A  00F4               	movwf	___wmul@multiplicand+1
 11006  282B  31B3  2352  31A8   	fcall	___wmul
 11007  282E  0872               	movf	?___wmul+1,w
 11008  282F  0023               	movlb	3	; select bank3
 11009  2830  00E5               	movwf	(_minCellTempCharge+1)^(0+384)
 11010  2831  0871               	movf	?___wmul,w
 11011  2832  00E4               	movwf	_minCellTempCharge^(0+384)
 11012                           
 11013                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11014  2833  0020               	movlb	0	; select bank0
 11015  2834  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11016  2835  00F2               	movwf	___wmul@multiplier+1
 11017  2836  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11018  2837  00F1               	movwf	___wmul@multiplier
 11019  2838  300A               	movlw	10
 11020  2839  00F3               	movwf	___wmul@multiplicand
 11021  283A  3000               	movlw	0
 11022  283B  00F4               	movwf	___wmul@multiplicand+1
 11023  283C  31B3  2352         	fcall	___wmul
 11024  283E  0872               	movf	?___wmul+1,w
 11025  283F  0023               	movlb	3	; select bank3
 11026  2840  00E1               	movwf	(_maxCellTempCharge+1)^(0+384)
 11027  2841  0871               	movf	?___wmul,w
 11028  2842  00E0               	movwf	_maxCellTempCharge^(0+384)
 11029  2843  0008               	return
 11030  2844                     __end_of_setTemperatureLimitsint:	
 11031                           
 11032                           	psect	text36
 11033  3352                     __ptext36:	
 11034 ;; *************** function ___wmul *****************
 11035 ;; Defined at:
 11036 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  multiplier      2    1[COMMON] unsigned int 
 11039 ;;  multiplicand    2    3[COMMON] unsigned int 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;  product         2    5[COMMON] unsigned int 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  2    1[COMMON] unsigned int 
 11044 ;; Registers used:
 11045 ;;		wreg, status,2, status,0
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11055 ;;Total ram usage:        6 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:    1
 11058 ;; This function calls:
 11059 ;;		Nothing
 11060 ;; This function is called by:
 11061 ;;		_setTemperatureLimitsint
 11062 ;;		_atoi
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           
 11067                           ;psect for function ___wmul
 11068  3352                     ___wmul:	
 11069                           
 11070                           ;incstack = 0
 11071                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11072  3352  01F5               	clrf	___wmul@product
 11073  3353  01F6               	clrf	___wmul@product+1
 11074  3354                     l4295:	
 11075  3354  1C71               	btfss	___wmul@multiplier,0
 11076  3355  2B5A               	goto	l1038
 11077  3356  0873               	movf	___wmul@multiplicand,w
 11078  3357  07F5               	addwf	___wmul@product,f
 11079  3358  0874               	movf	___wmul@multiplicand+1,w
 11080  3359  3DF6               	addwfc	___wmul@product+1,f
 11081  335A                     l1038:	
 11082  335A  3001               	movlw	1
 11083  335B                     u4255:	
 11084  335B  35F3               	lslf	___wmul@multiplicand,f
 11085  335C  0DF4               	rlf	___wmul@multiplicand+1,f
 11086  335D  0B89               	decfsz	9,f
 11087  335E  2B5B               	goto	u4255
 11088  335F  3001               	movlw	1
 11089  3360                     u4265:	
 11090  3360  36F2               	lsrf	___wmul@multiplier+1,f
 11091  3361  0CF1               	rrf	___wmul@multiplier,f
 11092  3362  0B89               	decfsz	9,f
 11093  3363  2B60               	goto	u4265
 11094  3364  0871               	movf	___wmul@multiplier,w
 11095  3365  0472               	iorwf	___wmul@multiplier+1,w
 11096  3366  1D03               	btfss	3,2
 11097  3367  2B54               	goto	l4295
 11098  3368  0876               	movf	___wmul@product+1,w
 11099  3369  00F2               	movwf	?___wmul+1
 11100  336A  0875               	movf	___wmul@product,w
 11101  336B  00F1               	movwf	?___wmul
 11102  336C  0008               	return
 11103  336D                     __end_of___wmul:	
 11104                           
 11105                           	psect	text37
 11106  327D                     __ptext37:	
 11107 ;; *************** function _setShuntResistorValue *****************
 11108 ;; Defined at:
 11109 ;;		line 73 in file "BQ76920.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  res_mOhm        4    1[COMMON] float 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;		None
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11127 ;;Total ram usage:        4 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    1
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_init_AFE
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _setShuntResistorValue
 11139  327D                     _setShuntResistorValue:	
 11140                           
 11141                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11142                           
 11143                           ;incstack = 0
 11144                           ; Regs used in _setShuntResistorValue: [wreg]
 11145  327D  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11146  327E  0023               	movlb	3	; select bank3
 11147  327F  00BB               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11148  3280  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11149  3281  00BA               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11150  3282  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11151  3283  00B9               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11152  3284  0871               	movf	setShuntResistorValue@res_mOhm,w
 11153  3285  00B8               	movwf	_shuntResistorValue_mOhm^(0+384)
 11154  3286  0008               	return
 11155  3287                     __end_of_setShuntResistorValue:	
 11156                           
 11157                           	psect	text38
 11158  191E                     __ptext38:	
 11159 ;; *************** function _setShortCircuitProtection *****************
 11160 ;; Defined at:
 11161 ;;		line 81 in file "BQ76920.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;  current_mA      4   70[BANK0 ] long 
 11164 ;;  delay_us        2   74[BANK0 ] int 
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  i               2   10[BANK1 ] int 
 11167 ;;  i               2    8[BANK1 ] int 
 11168 ;;  scaler          4    0[BANK1 ] float 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1    wreg      void 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11179 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11180 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11181 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11182 ;;Total ram usage:       21 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    3
 11185 ;; This function calls:
 11186 ;;		_I2C_writeRegister
 11187 ;;		___fldiv
 11188 ;;		___flge
 11189 ;;		___flmul
 11190 ;;		___xxtofl
 11191 ;; This function is called by:
 11192 ;;		_init_AFE
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           
 11197                           ;psect for function _setShortCircuitProtection
 11198  191E                     _setShortCircuitProtection:	
 11199                           
 11200                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11201                           
 11202                           ;incstack = 0
 11203                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11204  191E  3044               	movlw	68
 11205  191F  0021               	movlb	1	; select bank1
 11206  1920  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11207  1921  307A               	movlw	122
 11208  1922  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11209  1923  3000               	movlw	0
 11210  1924  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11211  1925  3000               	movlw	0
 11212  1926  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11213                           
 11214                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11215  1927  30F8               	movlw	-8
 11216  1928  0022               	movlb	2	; select bank2
 11217  1929  05ED               	andwf	_protect1^(0+256),f
 11218                           
 11219                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11220  192A  0021               	movlb	1	; select bank1
 11221  192B  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11222  192C  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11223  192D                     l7463:	
 11224                           
 11225                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11226  192D  0023               	movlb	3	; select bank3
 11227  192E  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11228  192F  0020               	movlb	0	; select bank0
 11229  1930  00A9               	movwf	___flmul@b+3
 11230  1931  0023               	movlb	3	; select bank3
 11231  1932  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11232  1933  0020               	movlb	0	; select bank0
 11233  1934  00A8               	movwf	___flmul@b+2
 11234  1935  0023               	movlb	3	; select bank3
 11235  1936  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11236  1937  0020               	movlb	0	; select bank0
 11237  1938  00A7               	movwf	___flmul@b+1
 11238  1939  0023               	movlb	3	; select bank3
 11239  193A  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11240  193B  0020               	movlb	0	; select bank0
 11241  193C  00A6               	movwf	___flmul@b
 11242  193D  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11243  193E  00F4               	movwf	___xxtofl@val+3
 11244  193F  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11245  1940  00F3               	movwf	___xxtofl@val+2
 11246  1941  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11247  1942  00F2               	movwf	___xxtofl@val+1
 11248  1943  0866               	movf	setShortCircuitProtection@current_mA,w
 11249  1944  00F1               	movwf	___xxtofl@val
 11250  1945  3001               	movlw	1
 11251  1946  31AB  23E3  3199   	fcall	___xxtofl
 11252  1949  0874               	movf	?___xxtofl+3,w
 11253  194A  0020               	movlb	0	; select bank0
 11254  194B  00AD               	movwf	___flmul@a+3
 11255  194C  0873               	movf	?___xxtofl+2,w
 11256  194D  00AC               	movwf	___flmul@a+2
 11257  194E  0872               	movf	?___xxtofl+1,w
 11258  194F  00AB               	movwf	___flmul@a+1
 11259  1950  0871               	movf	?___xxtofl,w
 11260  1951  00AA               	movwf	___flmul@a
 11261  1952  3190  2022  3199   	fcall	___flmul
 11262  1955  0020               	movlb	0	; select bank0
 11263  1956  0829               	movf	?___flmul+3,w
 11264  1957  0021               	movlb	1	; select bank1
 11265  1958  00A7               	movwf	(_setShortCircuitProtection$2261+3)^(0+128)
 11266  1959  0020               	movlb	0	; select bank0
 11267  195A  0828               	movf	?___flmul+2,w
 11268  195B  0021               	movlb	1	; select bank1
 11269  195C  00A6               	movwf	(_setShortCircuitProtection$2261+2)^(0+128)
 11270  195D  0020               	movlb	0	; select bank0
 11271  195E  0827               	movf	?___flmul+1,w
 11272  195F  0021               	movlb	1	; select bank1
 11273  1960  00A5               	movwf	(_setShortCircuitProtection$2261+1)^(0+128)
 11274  1961  0020               	movlb	0	; select bank0
 11275  1962  0826               	movf	?___flmul,w
 11276  1963  0021               	movlb	1	; select bank1
 11277  1964  00A4               	movwf	_setShortCircuitProtection$2261^(0+128)
 11278                           
 11279                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11280  1965  3044               	movlw	68
 11281  1966  0020               	movlb	0	; select bank0
 11282  1967  00C3               	movwf	___fldiv@a+3
 11283  1968  307A               	movlw	122
 11284  1969  00C2               	movwf	___fldiv@a+2
 11285  196A  3000               	movlw	0
 11286  196B  00C1               	movwf	___fldiv@a+1
 11287  196C  3000               	movlw	0
 11288  196D  00C0               	movwf	___fldiv@a
 11289  196E  0021               	movlb	1	; select bank1
 11290  196F  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11291  1970  0020               	movlb	0	; select bank0
 11292  1971  00A9               	movwf	___flmul@b+3
 11293  1972  0021               	movlb	1	; select bank1
 11294  1973  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11295  1974  0020               	movlb	0	; select bank0
 11296  1975  00A8               	movwf	___flmul@b+2
 11297  1976  0021               	movlb	1	; select bank1
 11298  1977  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11299  1978  0020               	movlb	0	; select bank0
 11300  1979  00A7               	movwf	___flmul@b+1
 11301  197A  0021               	movlb	1	; select bank1
 11302  197B  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11303  197C  0020               	movlb	0	; select bank0
 11304  197D  00A6               	movwf	___flmul@b
 11305  197E  0021               	movlb	1	; select bank1
 11306  197F  0827               	movf	(_setShortCircuitProtection$2261+3)^(0+128),w
 11307  1980  0020               	movlb	0	; select bank0
 11308  1981  00AD               	movwf	___flmul@a+3
 11309  1982  0021               	movlb	1	; select bank1
 11310  1983  0826               	movf	(_setShortCircuitProtection$2261+2)^(0+128),w
 11311  1984  0020               	movlb	0	; select bank0
 11312  1985  00AC               	movwf	___flmul@a+2
 11313  1986  0021               	movlb	1	; select bank1
 11314  1987  0825               	movf	(_setShortCircuitProtection$2261+1)^(0+128),w
 11315  1988  0020               	movlb	0	; select bank0
 11316  1989  00AB               	movwf	___flmul@a+1
 11317  198A  0021               	movlb	1	; select bank1
 11318  198B  0824               	movf	_setShortCircuitProtection$2261^(0+128),w
 11319  198C  0020               	movlb	0	; select bank0
 11320  198D  00AA               	movwf	___flmul@a
 11321  198E  3190  2022  3199   	fcall	___flmul
 11322  1991  0020               	movlb	0	; select bank0
 11323  1992  0829               	movf	?___flmul+3,w
 11324  1993  00C7               	movwf	___fldiv@b+3
 11325  1994  0828               	movf	?___flmul+2,w
 11326  1995  00C6               	movwf	___fldiv@b+2
 11327  1996  0827               	movf	?___flmul+1,w
 11328  1997  00C5               	movwf	___fldiv@b+1
 11329  1998  0826               	movf	?___flmul,w
 11330  1999  00C4               	movwf	___fldiv@b
 11331  199A  319C  24E2  3199   	fcall	___fldiv
 11332  199D  0020               	movlb	0	; select bank0
 11333  199E  0843               	movf	?___fldiv+3,w
 11334  199F  00DD               	movwf	___flge@ff1+3
 11335  19A0  0842               	movf	?___fldiv+2,w
 11336  19A1  00DC               	movwf	___flge@ff1+2
 11337  19A2  0841               	movf	?___fldiv+1,w
 11338  19A3  00DB               	movwf	___flge@ff1+1
 11339  19A4  0840               	movf	?___fldiv,w
 11340  19A5  00DA               	movwf	___flge@ff1
 11341  19A6  0021               	movlb	1	; select bank1
 11342  19A7  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11343  19A8  0085               	movwf	5
 11344  19A9  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11345  19AA  0084               	movwf	4
 11346  19AB  3584               	lslf	4,f
 11347  19AC  0D85               	rlf	5,f
 11348  19AD  3074               	movlw	low (_SCD_threshold_setting| (0+32768))
 11349  19AE  0784               	addwf	4,f
 11350  19AF  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11351  19B0  3D85               	addwfc	5,f
 11352  19B1  3F00               	moviw [0]fsr0
 11353  19B2  0020               	movlb	0	; select bank0
 11354  19B3  00EC               	movwf	??_setShortCircuitProtection
 11355  19B4  3F01               	moviw [1]fsr0
 11356  19B5  00ED               	movwf	??_setShortCircuitProtection+1
 11357  19B6  086C               	movf	??_setShortCircuitProtection,w
 11358  19B7  00F1               	movwf	___xxtofl@val
 11359  19B8  086D               	movf	??_setShortCircuitProtection+1,w
 11360  19B9  00F2               	movwf	___xxtofl@val+1
 11361  19BA  0D89               	rlf	9,f
 11362  19BB  3B89               	subwfb	9,f
 11363  19BC  0989               	comf	9,f
 11364  19BD  00F3               	movwf	___xxtofl@val+2
 11365  19BE  00F4               	movwf	___xxtofl@val+3
 11366  19BF  3001               	movlw	1
 11367  19C0  31AB  23E3  3199   	fcall	___xxtofl
 11368  19C3  0874               	movf	?___xxtofl+3,w
 11369  19C4  0020               	movlb	0	; select bank0
 11370  19C5  00E1               	movwf	___flge@ff2+3
 11371  19C6  0873               	movf	?___xxtofl+2,w
 11372  19C7  00E0               	movwf	___flge@ff2+2
 11373  19C8  0872               	movf	?___xxtofl+1,w
 11374  19C9  00DF               	movwf	___flge@ff2+1
 11375  19CA  0871               	movf	?___xxtofl,w
 11376  19CB  00DE               	movwf	___flge@ff2
 11377  19CC  31A9  21EC  3199   	fcall	___flge
 11378  19CF  1C03               	btfss	3,0
 11379  19D0  29D9               	goto	l7469
 11380                           
 11381                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11382  19D1  0022               	movlb	2	; select bank2
 11383  19D2  086D               	movf	_protect1^(0+256),w
 11384  19D3  0021               	movlb	1	; select bank1
 11385  19D4  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11386  19D5  39F8               	andlw	-8
 11387  19D6  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11388  19D7  0022               	movlb	2	; select bank2
 11389  19D8  00ED               	movwf	_protect1^(0+256)
 11390  19D9                     l7469:	
 11391                           
 11392                           ;BQ76920.c: 92:     }
 11393  19D9  3001               	movlw	1
 11394  19DA  0021               	movlb	1	; select bank1
 11395  19DB  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11396  19DC  3000               	movlw	0
 11397  19DD  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11398  19DE  3000               	movlw	0
 11399  19DF  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11400  19E0  3007               	movlw	7
 11401  19E1  1903               	skipnz
 11402  19E2  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11403  19E3  1C03               	skipc
 11404  19E4  292D               	goto	l7463
 11405                           
 11406                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11407  19E5  30E7               	movlw	-25
 11408  19E6  0022               	movlb	2	; select bank2
 11409  19E7  05ED               	andwf	_protect1^(0+256),f
 11410                           
 11411                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11412  19E8  0021               	movlb	1	; select bank1
 11413  19E9  01AA               	clrf	setShortCircuitProtection@i_1117^(0+128)
 11414  19EA  01AB               	clrf	(setShortCircuitProtection@i_1117+1)^(0+128)
 11415  19EB                     l7481:	
 11416                           
 11417                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11418  19EB  082B               	movf	(setShortCircuitProtection@i_1117+1)^(0+128),w
 11419  19EC  0085               	movwf	5
 11420  19ED  082A               	movf	setShortCircuitProtection@i_1117^(0+128),w
 11421  19EE  0084               	movwf	4
 11422  19EF  3584               	lslf	4,f
 11423  19F0  0D85               	rlf	5,f
 11424  19F1  3094               	movlw	low (_SCD_delay_setting| (0+32768))
 11425  19F2  0784               	addwf	4,f
 11426  19F3  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11427  19F4  3D85               	addwfc	5,f
 11428  19F5  3F00               	moviw [0]fsr0
 11429  19F6  0020               	movlb	0	; select bank0
 11430  19F7  00EC               	movwf	??_setShortCircuitProtection
 11431  19F8  3F01               	moviw [1]fsr0
 11432  19F9  00ED               	movwf	??_setShortCircuitProtection+1
 11433  19FA  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11434  19FB  3A80               	xorlw	128
 11435  19FC  00EE               	movwf	??_setShortCircuitProtection+2
 11436  19FD  086D               	movf	??_setShortCircuitProtection+1,w
 11437  19FE  3A80               	xorlw	128
 11438  19FF  026E               	subwf	??_setShortCircuitProtection+2,w
 11439  1A00  1D03               	skipz
 11440  1A01  2A04               	goto	u9385
 11441  1A02  086C               	movf	??_setShortCircuitProtection,w
 11442  1A03  026A               	subwf	setShortCircuitProtection@delay_us,w
 11443  1A04                     u9385:	
 11444  1A04  1C03               	skipc
 11445  1A05  2A15               	goto	l7485
 11446                           
 11447                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11448  1A06  0021               	movlb	1	; select bank1
 11449  1A07  082A               	movf	setShortCircuitProtection@i_1117^(0+128),w
 11450  1A08  0020               	movlb	0	; select bank0
 11451  1A09  00EC               	movwf	??_setShortCircuitProtection
 11452  1A0A  0DEC               	rlf	??_setShortCircuitProtection,f
 11453  1A0B  0DEC               	rlf	??_setShortCircuitProtection,f
 11454  1A0C  0DEC               	rlf	??_setShortCircuitProtection,f
 11455  1A0D  0022               	movlb	2	; select bank2
 11456  1A0E  086D               	movf	_protect1^(0+256),w
 11457  1A0F  0020               	movlb	0	; select bank0
 11458  1A10  066C               	xorwf	??_setShortCircuitProtection,w
 11459  1A11  39E7               	andlw	-25
 11460  1A12  066C               	xorwf	??_setShortCircuitProtection,w
 11461  1A13  0022               	movlb	2	; select bank2
 11462  1A14  00ED               	movwf	_protect1^(0+256)
 11463  1A15                     l7485:	
 11464                           
 11465                           ;BQ76920.c: 99:     }
 11466  1A15  3001               	movlw	1
 11467  1A16  0021               	movlb	1	; select bank1
 11468  1A17  07AA               	addwf	setShortCircuitProtection@i_1117^(0+128),f
 11469  1A18  3000               	movlw	0
 11470  1A19  3DAB               	addwfc	(setShortCircuitProtection@i_1117+1)^(0+128),f
 11471  1A1A  3000               	movlw	0
 11472  1A1B  022B               	subwf	(setShortCircuitProtection@i_1117+1)^(0+128),w
 11473  1A1C  3007               	movlw	7
 11474  1A1D  1903               	skipnz
 11475  1A1E  022A               	subwf	setShortCircuitProtection@i_1117^(0+128),w
 11476  1A1F  1C03               	skipc
 11477  1A20  29EB               	goto	l7481
 11478                           
 11479                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11480  1A21  0022               	movlb	2	; select bank2
 11481  1A22  13ED               	bcf	_protect1^(0+256),7
 11482                           
 11483                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11484  1A23  3018               	movlw	24
 11485  1A24  00F5               	movwf	I2C_writeRegister@slaveAddress
 11486  1A25  3000               	movlw	0
 11487  1A26  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11488  1A27  3006               	movlw	6
 11489  1A28  00F7               	movwf	I2C_writeRegister@regAddress
 11490  1A29  3000               	movlw	0
 11491  1A2A  00F8               	movwf	I2C_writeRegister@regAddress+1
 11492  1A2B  086D               	movf	_protect1^(0+256),w
 11493  1A2C  0020               	movlb	0	; select bank0
 11494  1A2D  00EC               	movwf	??_setShortCircuitProtection
 11495  1A2E  01ED               	clrf	??_setShortCircuitProtection+1
 11496  1A2F  086C               	movf	??_setShortCircuitProtection,w
 11497  1A30  00F9               	movwf	I2C_writeRegister@data
 11498  1A31  086D               	movf	??_setShortCircuitProtection+1,w
 11499  1A32  00FA               	movwf	I2C_writeRegister@data+1
 11500  1A33  31B3  23DC         	fcall	_I2C_writeRegister
 11501  1A35  0008               	return
 11502  1A36                     __end_of_setShortCircuitProtection:	
 11503                           
 11504                           	psect	text39
 11505  1809                     __ptext39:	
 11506 ;; *************** function _setOverCurrentDischargeProtection *****************
 11507 ;; Defined at:
 11508 ;;		line 109 in file "BQ76920.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  current_mA      4   70[BANK0 ] long 
 11511 ;;  delay_ms        2   74[BANK0 ] int 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  i               2   10[BANK1 ] int 
 11514 ;;  i               2    8[BANK1 ] int 
 11515 ;;  scaler          4    0[BANK1 ] float 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11525 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11526 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11527 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11528 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11529 ;;Total ram usage:       21 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    3
 11532 ;; This function calls:
 11533 ;;		_I2C_writeRegister
 11534 ;;		___fldiv
 11535 ;;		___flge
 11536 ;;		___flmul
 11537 ;;		___xxtofl
 11538 ;; This function is called by:
 11539 ;;		_init_AFE
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           
 11544                           ;psect for function _setOverCurrentDischargeProtection
 11545  1809                     _setOverCurrentDischargeProtection:	
 11546                           
 11547                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11548                           
 11549                           ;incstack = 0
 11550                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11551  1809  3044               	movlw	68
 11552  180A  0021               	movlb	1	; select bank1
 11553  180B  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11554  180C  307A               	movlw	122
 11555  180D  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11556  180E  3000               	movlw	0
 11557  180F  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11558  1810  3000               	movlw	0
 11559  1811  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11560                           
 11561                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11562  1812  30F0               	movlw	-16
 11563  1813  0022               	movlb	2	; select bank2
 11564  1814  05EC               	andwf	_protect2^(0+256),f
 11565                           
 11566                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11567  1815  0021               	movlb	1	; select bank1
 11568  1816  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11569  1817  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11570  1818                     l7501:	
 11571                           
 11572                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11573  1818  0023               	movlb	3	; select bank3
 11574  1819  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11575  181A  0020               	movlb	0	; select bank0
 11576  181B  00A9               	movwf	___flmul@b+3
 11577  181C  0023               	movlb	3	; select bank3
 11578  181D  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11579  181E  0020               	movlb	0	; select bank0
 11580  181F  00A8               	movwf	___flmul@b+2
 11581  1820  0023               	movlb	3	; select bank3
 11582  1821  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11583  1822  0020               	movlb	0	; select bank0
 11584  1823  00A7               	movwf	___flmul@b+1
 11585  1824  0023               	movlb	3	; select bank3
 11586  1825  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11587  1826  0020               	movlb	0	; select bank0
 11588  1827  00A6               	movwf	___flmul@b
 11589  1828  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11590  1829  00F4               	movwf	___xxtofl@val+3
 11591  182A  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11592  182B  00F3               	movwf	___xxtofl@val+2
 11593  182C  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11594  182D  00F2               	movwf	___xxtofl@val+1
 11595  182E  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11596  182F  00F1               	movwf	___xxtofl@val
 11597  1830  3001               	movlw	1
 11598  1831  31AB  23E3  3198   	fcall	___xxtofl
 11599  1834  0874               	movf	?___xxtofl+3,w
 11600  1835  0020               	movlb	0	; select bank0
 11601  1836  00AD               	movwf	___flmul@a+3
 11602  1837  0873               	movf	?___xxtofl+2,w
 11603  1838  00AC               	movwf	___flmul@a+2
 11604  1839  0872               	movf	?___xxtofl+1,w
 11605  183A  00AB               	movwf	___flmul@a+1
 11606  183B  0871               	movf	?___xxtofl,w
 11607  183C  00AA               	movwf	___flmul@a
 11608  183D  3190  2022  3198   	fcall	___flmul
 11609  1840  0020               	movlb	0	; select bank0
 11610  1841  0829               	movf	?___flmul+3,w
 11611  1842  0021               	movlb	1	; select bank1
 11612  1843  00A7               	movwf	(_setOverCurrentDischargeProtection$2262+3)^(0+128)
 11613  1844  0020               	movlb	0	; select bank0
 11614  1845  0828               	movf	?___flmul+2,w
 11615  1846  0021               	movlb	1	; select bank1
 11616  1847  00A6               	movwf	(_setOverCurrentDischargeProtection$2262+2)^(0+128)
 11617  1848  0020               	movlb	0	; select bank0
 11618  1849  0827               	movf	?___flmul+1,w
 11619  184A  0021               	movlb	1	; select bank1
 11620  184B  00A5               	movwf	(_setOverCurrentDischargeProtection$2262+1)^(0+128)
 11621  184C  0020               	movlb	0	; select bank0
 11622  184D  0826               	movf	?___flmul,w
 11623  184E  0021               	movlb	1	; select bank1
 11624  184F  00A4               	movwf	_setOverCurrentDischargeProtection$2262^(0+128)
 11625                           
 11626                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11627  1850  3044               	movlw	68
 11628  1851  0020               	movlb	0	; select bank0
 11629  1852  00C3               	movwf	___fldiv@a+3
 11630  1853  307A               	movlw	122
 11631  1854  00C2               	movwf	___fldiv@a+2
 11632  1855  3000               	movlw	0
 11633  1856  00C1               	movwf	___fldiv@a+1
 11634  1857  3000               	movlw	0
 11635  1858  00C0               	movwf	___fldiv@a
 11636  1859  0021               	movlb	1	; select bank1
 11637  185A  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11638  185B  0020               	movlb	0	; select bank0
 11639  185C  00A9               	movwf	___flmul@b+3
 11640  185D  0021               	movlb	1	; select bank1
 11641  185E  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11642  185F  0020               	movlb	0	; select bank0
 11643  1860  00A8               	movwf	___flmul@b+2
 11644  1861  0021               	movlb	1	; select bank1
 11645  1862  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11646  1863  0020               	movlb	0	; select bank0
 11647  1864  00A7               	movwf	___flmul@b+1
 11648  1865  0021               	movlb	1	; select bank1
 11649  1866  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11650  1867  0020               	movlb	0	; select bank0
 11651  1868  00A6               	movwf	___flmul@b
 11652  1869  0021               	movlb	1	; select bank1
 11653  186A  0827               	movf	(_setOverCurrentDischargeProtection$2262+3)^(0+128),w
 11654  186B  0020               	movlb	0	; select bank0
 11655  186C  00AD               	movwf	___flmul@a+3
 11656  186D  0021               	movlb	1	; select bank1
 11657  186E  0826               	movf	(_setOverCurrentDischargeProtection$2262+2)^(0+128),w
 11658  186F  0020               	movlb	0	; select bank0
 11659  1870  00AC               	movwf	___flmul@a+2
 11660  1871  0021               	movlb	1	; select bank1
 11661  1872  0825               	movf	(_setOverCurrentDischargeProtection$2262+1)^(0+128),w
 11662  1873  0020               	movlb	0	; select bank0
 11663  1874  00AB               	movwf	___flmul@a+1
 11664  1875  0021               	movlb	1	; select bank1
 11665  1876  0824               	movf	_setOverCurrentDischargeProtection$2262^(0+128),w
 11666  1877  0020               	movlb	0	; select bank0
 11667  1878  00AA               	movwf	___flmul@a
 11668  1879  3190  2022  3198   	fcall	___flmul
 11669  187C  0020               	movlb	0	; select bank0
 11670  187D  0829               	movf	?___flmul+3,w
 11671  187E  00C7               	movwf	___fldiv@b+3
 11672  187F  0828               	movf	?___flmul+2,w
 11673  1880  00C6               	movwf	___fldiv@b+2
 11674  1881  0827               	movf	?___flmul+1,w
 11675  1882  00C5               	movwf	___fldiv@b+1
 11676  1883  0826               	movf	?___flmul,w
 11677  1884  00C4               	movwf	___fldiv@b
 11678  1885  319C  24E2  3198   	fcall	___fldiv
 11679  1888  0020               	movlb	0	; select bank0
 11680  1889  0843               	movf	?___fldiv+3,w
 11681  188A  00DD               	movwf	___flge@ff1+3
 11682  188B  0842               	movf	?___fldiv+2,w
 11683  188C  00DC               	movwf	___flge@ff1+2
 11684  188D  0841               	movf	?___fldiv+1,w
 11685  188E  00DB               	movwf	___flge@ff1+1
 11686  188F  0840               	movf	?___fldiv,w
 11687  1890  00DA               	movwf	___flge@ff1
 11688  1891  0021               	movlb	1	; select bank1
 11689  1892  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11690  1893  0085               	movwf	5
 11691  1894  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11692  1895  0084               	movwf	4
 11693  1896  3584               	lslf	4,f
 11694  1897  0D85               	rlf	5,f
 11695  1898  3050               	movlw	low (_OCD_threshold_setting| (0+32768))
 11696  1899  0784               	addwf	4,f
 11697  189A  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11698  189B  3D85               	addwfc	5,f
 11699  189C  3F00               	moviw [0]fsr0
 11700  189D  0020               	movlb	0	; select bank0
 11701  189E  00EC               	movwf	??_setOverCurrentDischargeProtection
 11702  189F  3F01               	moviw [1]fsr0
 11703  18A0  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11704  18A1  086C               	movf	??_setOverCurrentDischargeProtection,w
 11705  18A2  00F1               	movwf	___xxtofl@val
 11706  18A3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11707  18A4  00F2               	movwf	___xxtofl@val+1
 11708  18A5  0D89               	rlf	9,f
 11709  18A6  3B89               	subwfb	9,f
 11710  18A7  0989               	comf	9,f
 11711  18A8  00F3               	movwf	___xxtofl@val+2
 11712  18A9  00F4               	movwf	___xxtofl@val+3
 11713  18AA  3001               	movlw	1
 11714  18AB  31AB  23E3  3198   	fcall	___xxtofl
 11715  18AE  0874               	movf	?___xxtofl+3,w
 11716  18AF  0020               	movlb	0	; select bank0
 11717  18B0  00E1               	movwf	___flge@ff2+3
 11718  18B1  0873               	movf	?___xxtofl+2,w
 11719  18B2  00E0               	movwf	___flge@ff2+2
 11720  18B3  0872               	movf	?___xxtofl+1,w
 11721  18B4  00DF               	movwf	___flge@ff2+1
 11722  18B5  0871               	movf	?___xxtofl,w
 11723  18B6  00DE               	movwf	___flge@ff2
 11724  18B7  31A9  21EC  3198   	fcall	___flge
 11725  18BA  1C03               	btfss	3,0
 11726  18BB  28C4               	goto	l7507
 11727                           
 11728                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11729  18BC  0022               	movlb	2	; select bank2
 11730  18BD  086C               	movf	_protect2^(0+256),w
 11731  18BE  0021               	movlb	1	; select bank1
 11732  18BF  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11733  18C0  39F0               	andlw	-16
 11734  18C1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11735  18C2  0022               	movlb	2	; select bank2
 11736  18C3  00EC               	movwf	_protect2^(0+256)
 11737  18C4                     l7507:	
 11738                           
 11739                           ;BQ76920.c: 118:     }
 11740  18C4  3001               	movlw	1
 11741  18C5  0021               	movlb	1	; select bank1
 11742  18C6  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11743  18C7  3000               	movlw	0
 11744  18C8  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11745  18C9  3000               	movlw	0
 11746  18CA  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11747  18CB  300F               	movlw	15
 11748  18CC  1903               	skipnz
 11749  18CD  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11750  18CE  1C03               	skipc
 11751  18CF  2818               	goto	l7501
 11752                           
 11753                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 11754  18D0  308F               	movlw	-113
 11755  18D1  0022               	movlb	2	; select bank2
 11756  18D2  05EC               	andwf	_protect2^(0+256),f
 11757                           
 11758                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11759  18D3  0021               	movlb	1	; select bank1
 11760  18D4  01AA               	clrf	setOverCurrentDischargeProtection@i_1126^(0+128)
 11761  18D5  01AB               	clrf	(setOverCurrentDischargeProtection@i_1126+1)^(0+128)
 11762  18D6                     l7519:	
 11763                           
 11764                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 11765  18D6  082B               	movf	(setOverCurrentDischargeProtection@i_1126+1)^(0+128),w
 11766  18D7  0085               	movwf	5
 11767  18D8  082A               	movf	setOverCurrentDischargeProtection@i_1126^(0+128),w
 11768  18D9  0084               	movwf	4
 11769  18DA  3584               	lslf	4,f
 11770  18DB  0D85               	rlf	5,f
 11771  18DC  3064               	movlw	low (_OCD_delay_setting| (0+32768))
 11772  18DD  0784               	addwf	4,f
 11773  18DE  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11774  18DF  3D85               	addwfc	5,f
 11775  18E0  3F00               	moviw [0]fsr0
 11776  18E1  0020               	movlb	0	; select bank0
 11777  18E2  00EC               	movwf	??_setOverCurrentDischargeProtection
 11778  18E3  3F01               	moviw [1]fsr0
 11779  18E4  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11780  18E5  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11781  18E6  3A80               	xorlw	128
 11782  18E7  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11783  18E8  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11784  18E9  3A80               	xorlw	128
 11785  18EA  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11786  18EB  1D03               	skipz
 11787  18EC  28EF               	goto	u9425
 11788  18ED  086C               	movf	??_setOverCurrentDischargeProtection,w
 11789  18EE  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11790  18EF                     u9425:	
 11791  18EF  1C03               	skipc
 11792  18F0  28FE               	goto	l7523
 11793                           
 11794                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 11795  18F1  0021               	movlb	1	; select bank1
 11796  18F2  082A               	movf	setOverCurrentDischargeProtection@i_1126^(0+128),w
 11797  18F3  0020               	movlb	0	; select bank0
 11798  18F4  00EC               	movwf	??_setOverCurrentDischargeProtection
 11799  18F5  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11800  18F6  0022               	movlb	2	; select bank2
 11801  18F7  086C               	movf	_protect2^(0+256),w
 11802  18F8  0020               	movlb	0	; select bank0
 11803  18F9  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11804  18FA  398F               	andlw	-113
 11805  18FB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11806  18FC  0022               	movlb	2	; select bank2
 11807  18FD  00EC               	movwf	_protect2^(0+256)
 11808  18FE                     l7523:	
 11809                           
 11810                           ;BQ76920.c: 125:     }
 11811  18FE  3001               	movlw	1
 11812  18FF  0021               	movlb	1	; select bank1
 11813  1900  07AA               	addwf	setOverCurrentDischargeProtection@i_1126^(0+128),f
 11814  1901  3000               	movlw	0
 11815  1902  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_1126+1)^(0+128),f
 11816  1903  3000               	movlw	0
 11817  1904  022B               	subwf	(setOverCurrentDischargeProtection@i_1126+1)^(0+128),w
 11818  1905  3007               	movlw	7
 11819  1906  1903               	skipnz
 11820  1907  022A               	subwf	setOverCurrentDischargeProtection@i_1126^(0+128),w
 11821  1908  1C03               	skipc
 11822  1909  28D6               	goto	l7519
 11823                           
 11824                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11825  190A  3018               	movlw	24
 11826  190B  00F5               	movwf	I2C_writeRegister@slaveAddress
 11827  190C  3000               	movlw	0
 11828  190D  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11829  190E  3007               	movlw	7
 11830  190F  00F7               	movwf	I2C_writeRegister@regAddress
 11831  1910  3000               	movlw	0
 11832  1911  00F8               	movwf	I2C_writeRegister@regAddress+1
 11833  1912  0022               	movlb	2	; select bank2
 11834  1913  086C               	movf	_protect2^(0+256),w
 11835  1914  0020               	movlb	0	; select bank0
 11836  1915  00EC               	movwf	??_setOverCurrentDischargeProtection
 11837  1916  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11838  1917  086C               	movf	??_setOverCurrentDischargeProtection,w
 11839  1918  00F9               	movwf	I2C_writeRegister@data
 11840  1919  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11841  191A  00FA               	movwf	I2C_writeRegister@data+1
 11842  191B  31B3  23DC         	fcall	_I2C_writeRegister
 11843  191D  0008               	return
 11844  191E                     __end_of_setOverCurrentDischargeProtection:	
 11845                           
 11846                           	psect	text40
 11847  29EC                     __ptext40:	
 11848 ;; *************** function ___flge *****************
 11849 ;; Defined at:
 11850 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  ff1             4   58[BANK0 ] void 
 11853 ;;  ff2             4   62[BANK0 ] void 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;		None               void
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11868 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11869 ;;Total ram usage:       12 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_setShortCircuitProtection
 11876 ;;		_setOverCurrentDischargeProtection
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function ___flge
 11882  29EC                     ___flge:	
 11883                           
 11884                           ;incstack = 0
 11885                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11886  29EC  3000               	movlw	0
 11887  29ED  0020               	movlb	0	; select bank0
 11888  29EE  055A               	andwf	___flge@ff1,w
 11889  29EF  00E2               	movwf	??___flge
 11890  29F0  3000               	movlw	0
 11891  29F1  055B               	andwf	___flge@ff1+1,w
 11892  29F2  00E3               	movwf	??___flge+1
 11893  29F3  3080               	movlw	128
 11894  29F4  055C               	andwf	___flge@ff1+2,w
 11895  29F5  00E4               	movwf	??___flge+2
 11896  29F6  307F               	movlw	127
 11897  29F7  055D               	andwf	___flge@ff1+3,w
 11898  29F8  00E5               	movwf	??___flge+3
 11899  29F9  0865               	movf	??___flge+3,w
 11900  29FA  0464               	iorwf	??___flge+2,w
 11901  29FB  0463               	iorwf	??___flge+1,w
 11902  29FC  0462               	iorwf	??___flge,w
 11903  29FD  1D03               	skipz
 11904  29FE  2A07               	goto	l1216
 11905  29FF  3000               	movlw	0
 11906  2A00  00DD               	movwf	___flge@ff1+3
 11907  2A01  3000               	movlw	0
 11908  2A02  00DC               	movwf	___flge@ff1+2
 11909  2A03  3000               	movlw	0
 11910  2A04  00DB               	movwf	___flge@ff1+1
 11911  2A05  3000               	movlw	0
 11912  2A06  00DA               	movwf	___flge@ff1
 11913  2A07                     l1216:	
 11914  2A07  3000               	movlw	0
 11915  2A08  055E               	andwf	___flge@ff2,w
 11916  2A09  00E2               	movwf	??___flge
 11917  2A0A  3000               	movlw	0
 11918  2A0B  055F               	andwf	___flge@ff2+1,w
 11919  2A0C  00E3               	movwf	??___flge+1
 11920  2A0D  3080               	movlw	128
 11921  2A0E  0560               	andwf	___flge@ff2+2,w
 11922  2A0F  00E4               	movwf	??___flge+2
 11923  2A10  307F               	movlw	127
 11924  2A11  0561               	andwf	___flge@ff2+3,w
 11925  2A12  00E5               	movwf	??___flge+3
 11926  2A13  0865               	movf	??___flge+3,w
 11927  2A14  0464               	iorwf	??___flge+2,w
 11928  2A15  0463               	iorwf	??___flge+1,w
 11929  2A16  0462               	iorwf	??___flge,w
 11930  2A17  1D03               	skipz
 11931  2A18  2A21               	goto	l5871
 11932  2A19  3000               	movlw	0
 11933  2A1A  00E1               	movwf	___flge@ff2+3
 11934  2A1B  3000               	movlw	0
 11935  2A1C  00E0               	movwf	___flge@ff2+2
 11936  2A1D  3000               	movlw	0
 11937  2A1E  00DF               	movwf	___flge@ff2+1
 11938  2A1F  3000               	movlw	0
 11939  2A20  00DE               	movwf	___flge@ff2
 11940  2A21                     l5871:	
 11941  2A21  1FDD               	btfss	___flge@ff1+3,7
 11942  2A22  2A3B               	goto	l5875
 11943  2A23  3000               	movlw	0
 11944  2A24  00E2               	movwf	??___flge
 11945  2A25  3000               	movlw	0
 11946  2A26  00E3               	movwf	??___flge+1
 11947  2A27  3000               	movlw	0
 11948  2A28  00E4               	movwf	??___flge+2
 11949  2A29  3080               	movlw	128
 11950  2A2A  00E5               	movwf	??___flge+3
 11951  2A2B  085A               	movf	___flge@ff1,w
 11952  2A2C  02E2               	subwf	??___flge,f
 11953  2A2D  085B               	movf	___flge@ff1+1,w
 11954  2A2E  3BE3               	subwfb	??___flge+1,f
 11955  2A2F  085C               	movf	___flge@ff1+2,w
 11956  2A30  3BE4               	subwfb	??___flge+2,f
 11957  2A31  085D               	movf	___flge@ff1+3,w
 11958  2A32  3BE5               	subwfb	??___flge+3,f
 11959  2A33  0865               	movf	??___flge+3,w
 11960  2A34  00DD               	movwf	___flge@ff1+3
 11961  2A35  0864               	movf	??___flge+2,w
 11962  2A36  00DC               	movwf	___flge@ff1+2
 11963  2A37  0863               	movf	??___flge+1,w
 11964  2A38  00DB               	movwf	___flge@ff1+1
 11965  2A39  0862               	movf	??___flge,w
 11966  2A3A  00DA               	movwf	___flge@ff1
 11967  2A3B                     l5875:	
 11968  2A3B  1FE1               	btfss	___flge@ff2+3,7
 11969  2A3C  2A55               	goto	l1219
 11970  2A3D  3000               	movlw	0
 11971  2A3E  00E2               	movwf	??___flge
 11972  2A3F  3000               	movlw	0
 11973  2A40  00E3               	movwf	??___flge+1
 11974  2A41  3000               	movlw	0
 11975  2A42  00E4               	movwf	??___flge+2
 11976  2A43  3080               	movlw	128
 11977  2A44  00E5               	movwf	??___flge+3
 11978  2A45  085E               	movf	___flge@ff2,w
 11979  2A46  02E2               	subwf	??___flge,f
 11980  2A47  085F               	movf	___flge@ff2+1,w
 11981  2A48  3BE3               	subwfb	??___flge+1,f
 11982  2A49  0860               	movf	___flge@ff2+2,w
 11983  2A4A  3BE4               	subwfb	??___flge+2,f
 11984  2A4B  0861               	movf	___flge@ff2+3,w
 11985  2A4C  3BE5               	subwfb	??___flge+3,f
 11986  2A4D  0865               	movf	??___flge+3,w
 11987  2A4E  00E1               	movwf	___flge@ff2+3
 11988  2A4F  0864               	movf	??___flge+2,w
 11989  2A50  00E0               	movwf	___flge@ff2+2
 11990  2A51  0863               	movf	??___flge+1,w
 11991  2A52  00DF               	movwf	___flge@ff2+1
 11992  2A53  0862               	movf	??___flge,w
 11993  2A54  00DE               	movwf	___flge@ff2
 11994  2A55                     l1219:	
 11995  2A55  3080               	movlw	128
 11996  2A56  06DD               	xorwf	___flge@ff1+3,f
 11997  2A57  3080               	movlw	128
 11998  2A58  06E1               	xorwf	___flge@ff2+3,f
 11999  2A59  0861               	movf	___flge@ff2+3,w
 12000  2A5A  025D               	subwf	___flge@ff1+3,w
 12001  2A5B  1D03               	skipz
 12002  2A5C  0008               	return
 12003  2A5D  0860               	movf	___flge@ff2+2,w
 12004  2A5E  025C               	subwf	___flge@ff1+2,w
 12005  2A5F  1D03               	skipz
 12006  2A60  0008               	return
 12007  2A61  085F               	movf	___flge@ff2+1,w
 12008  2A62  025B               	subwf	___flge@ff1+1,w
 12009  2A63  1D03               	skipz
 12010  2A64  0008               	return
 12011  2A65  085E               	movf	___flge@ff2,w
 12012  2A66  025A               	subwf	___flge@ff1,w
 12013  2A67  0008               	return
 12014  2A68                     __end_of___flge:	
 12015                           
 12016                           	psect	text41
 12017  2289                     __ptext41:	
 12018 ;; *************** function _setCellUndervoltageProtection *****************
 12019 ;; Defined at:
 12020 ;;		line 133 in file "BQ76920.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  voltage_mV      2   18[BANK0 ] int 
 12023 ;;  delay_s         2   20[BANK0 ] int 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  i               2   37[BANK0 ] int 
 12026 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  1    wreg      void 
 12029 ;; Registers used:
 12030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12037 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12038 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12039 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12040 ;;Total ram usage:       21 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    3
 12043 ;; This function calls:
 12044 ;;		_I2C_writeRegister
 12045 ;;		___aldiv
 12046 ;;		___lmul
 12047 ;;		_readRegister
 12048 ;; This function is called by:
 12049 ;;		_init_AFE
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function _setCellUndervoltageProtection
 12055  2289                     _setCellUndervoltageProtection:	
 12056                           
 12057                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12058                           
 12059                           ;incstack = 0
 12060                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12061  2289  0020               	movlb	0	; select bank0
 12062  228A  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12063  228B  0023               	movlb	3	; select bank3
 12064  228C  00CB               	movwf	(_minCellVoltage+1)^(0+384)
 12065  228D  0020               	movlb	0	; select bank0
 12066  228E  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12067  228F  0023               	movlb	3	; select bank3
 12068  2290  00CA               	movwf	_minCellVoltage^(0+384)
 12069                           
 12070                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12071  2291  3018               	movlw	24
 12072  2292  00F5               	movwf	readRegister@slaveAddress
 12073  2293  3000               	movlw	0
 12074  2294  00F6               	movwf	readRegister@slaveAddress+1
 12075  2295  3008               	movlw	8
 12076  2296  00F7               	movwf	readRegister@regAddress
 12077  2297  3000               	movlw	0
 12078  2298  00F8               	movwf	readRegister@regAddress+1
 12079  2299  31B5  2587  31A2   	fcall	_readRegister
 12080  229C  0875               	movf	?_readRegister,w
 12081  229D  0020               	movlb	0	; select bank0
 12082  229E  00B6               	movwf	??_setCellUndervoltageProtection
 12083  229F  0836               	movf	??_setCellUndervoltageProtection,w
 12084  22A0  0023               	movlb	3	; select bank3
 12085  22A1  00E8               	movwf	_protect3^(0+384)
 12086                           
 12087                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12088  22A2  0022               	movlb	2	; select bank2
 12089  22A3  086E               	movf	_adcGain^(0+256),w
 12090  22A4  0020               	movlb	0	; select bank0
 12091  22A5  00A4               	movwf	___aldiv@divisor
 12092  22A6  0022               	movlb	2	; select bank2
 12093  22A7  086F               	movf	(_adcGain+1)^(0+256),w
 12094  22A8  0020               	movlb	0	; select bank0
 12095  22A9  00A5               	movwf	___aldiv@divisor+1
 12096  22AA  0D89               	rlf	9,f
 12097  22AB  3B89               	subwfb	9,f
 12098  22AC  0989               	comf	9,f
 12099  22AD  00A6               	movwf	___aldiv@divisor+2
 12100  22AE  00A7               	movwf	___aldiv@divisor+3
 12101  22AF  0022               	movlb	2	; select bank2
 12102  22B0  086A               	movf	_adcOffset^(0+256),w
 12103  22B1  0020               	movlb	0	; select bank0
 12104  22B2  00B6               	movwf	??_setCellUndervoltageProtection
 12105  22B3  0022               	movlb	2	; select bank2
 12106  22B4  086B               	movf	(_adcOffset+1)^(0+256),w
 12107  22B5  0020               	movlb	0	; select bank0
 12108  22B6  00B7               	movwf	??_setCellUndervoltageProtection+1
 12109  22B7  3000               	movlw	0
 12110  22B8  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12111  22B9  30FF               	movlw	255
 12112  22BA  00B8               	movwf	??_setCellUndervoltageProtection+2
 12113  22BB  00B9               	movwf	??_setCellUndervoltageProtection+3
 12114  22BC  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12115  22BD  00BA               	movwf	??_setCellUndervoltageProtection+4
 12116  22BE  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12117  22BF  00BB               	movwf	??_setCellUndervoltageProtection+5
 12118  22C0  3000               	movlw	0
 12119  22C1  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12120  22C2  30FF               	movlw	255
 12121  22C3  00BC               	movwf	??_setCellUndervoltageProtection+6
 12122  22C4  00BD               	movwf	??_setCellUndervoltageProtection+7
 12123  22C5  0836               	movf	??_setCellUndervoltageProtection,w
 12124  22C6  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12125  22C7  0837               	movf	??_setCellUndervoltageProtection+1,w
 12126  22C8  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12127  22C9  0838               	movf	??_setCellUndervoltageProtection+2,w
 12128  22CA  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12129  22CB  0839               	movf	??_setCellUndervoltageProtection+3,w
 12130  22CC  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12131  22CD  083D               	movf	??_setCellUndervoltageProtection+7,w
 12132  22CE  00F4               	movwf	___lmul@multiplier+3
 12133  22CF  083C               	movf	??_setCellUndervoltageProtection+6,w
 12134  22D0  00F3               	movwf	___lmul@multiplier+2
 12135  22D1  083B               	movf	??_setCellUndervoltageProtection+5,w
 12136  22D2  00F2               	movwf	___lmul@multiplier+1
 12137  22D3  083A               	movf	??_setCellUndervoltageProtection+4,w
 12138  22D4  00F1               	movwf	___lmul@multiplier
 12139  22D5  3000               	movlw	0
 12140  22D6  00F8               	movwf	___lmul@multiplicand+3
 12141  22D7  3000               	movlw	0
 12142  22D8  00F7               	movwf	___lmul@multiplicand+2
 12143  22D9  3003               	movlw	3
 12144  22DA  00F6               	movwf	___lmul@multiplicand+1
 12145  22DB  30E8               	movlw	232
 12146  22DC  00F5               	movwf	___lmul@multiplicand
 12147  22DD  31B4  24EB  31A2   	fcall	___lmul
 12148  22E0  0874               	movf	?___lmul+3,w
 12149  22E1  0020               	movlb	0	; select bank0
 12150  22E2  00AB               	movwf	___aldiv@dividend+3
 12151  22E3  0873               	movf	?___lmul+2,w
 12152  22E4  00AA               	movwf	___aldiv@dividend+2
 12153  22E5  0872               	movf	?___lmul+1,w
 12154  22E6  00A9               	movwf	___aldiv@dividend+1
 12155  22E7  0871               	movf	?___lmul,w
 12156  22E8  00A8               	movwf	___aldiv@dividend
 12157  22E9  31AB  2361  31A2   	fcall	___aldiv
 12158  22EC  0020               	movlb	0	; select bank0
 12159  22ED  0824               	movf	?___aldiv,w
 12160  22EE  00BE               	movwf	??_setCellUndervoltageProtection+8
 12161  22EF  0825               	movf	?___aldiv+1,w
 12162  22F0  00BF               	movwf	??_setCellUndervoltageProtection+9
 12163  22F1  0826               	movf	?___aldiv+2,w
 12164  22F2  00C0               	movwf	??_setCellUndervoltageProtection+10
 12165  22F3  0827               	movf	?___aldiv+3,w
 12166  22F4  00C1               	movwf	??_setCellUndervoltageProtection+11
 12167  22F5  3004               	movlw	4
 12168  22F6  00C2               	movwf	??_setCellUndervoltageProtection+12
 12169  22F7                     u9445:	
 12170  22F7  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12171  22F8  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12172  22F9  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12173  22FA  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12174  22FB  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12175  22FC  2AF7               	goto	u9445
 12176  22FD  083E               	movf	??_setCellUndervoltageProtection+8,w
 12177  22FE  00C3               	movwf	??_setCellUndervoltageProtection+13
 12178  22FF  0843               	movf	??_setCellUndervoltageProtection+13,w
 12179  2300  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12180                           
 12181                           ;BQ76920.c: 139:     uv_trip += 1;
 12182  2301  3001               	movlw	1
 12183  2302  00B6               	movwf	??_setCellUndervoltageProtection
 12184  2303  0836               	movf	??_setCellUndervoltageProtection,w
 12185  2304  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12186                           
 12187                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12188  2305  3018               	movlw	24
 12189  2306  00F5               	movwf	I2C_writeRegister@slaveAddress
 12190  2307  3000               	movlw	0
 12191  2308  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12192  2309  300A               	movlw	10
 12193  230A  00F7               	movwf	I2C_writeRegister@regAddress
 12194  230B  3000               	movlw	0
 12195  230C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12196  230D  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12197  230E  00B6               	movwf	??_setCellUndervoltageProtection
 12198  230F  01B7               	clrf	??_setCellUndervoltageProtection+1
 12199  2310  0836               	movf	??_setCellUndervoltageProtection,w
 12200  2311  00F9               	movwf	I2C_writeRegister@data
 12201  2312  0837               	movf	??_setCellUndervoltageProtection+1,w
 12202  2313  00FA               	movwf	I2C_writeRegister@data+1
 12203  2314  31B3  23DC  31A2   	fcall	_I2C_writeRegister
 12204                           
 12205                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12206  2317  303F               	movlw	-193
 12207  2318  0023               	movlb	3	; select bank3
 12208  2319  05E8               	andwf	_protect3^(0+384),f
 12209                           
 12210                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12211  231A  0020               	movlb	0	; select bank0
 12212  231B  01C5               	clrf	setCellUndervoltageProtection@i
 12213  231C  01C6               	clrf	setCellUndervoltageProtection@i+1
 12214  231D                     l7549:	
 12215                           
 12216                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12217  231D  0846               	movf	setCellUndervoltageProtection@i+1,w
 12218  231E  0085               	movwf	5
 12219  231F  0845               	movf	setCellUndervoltageProtection@i,w
 12220  2320  0084               	movwf	4
 12221  2321  3584               	lslf	4,f
 12222  2322  0D85               	rlf	5,f
 12223  2323  308C               	movlw	low (_UV_delay_setting| (0+32768))
 12224  2324  0784               	addwf	4,f
 12225  2325  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12226  2326  3D85               	addwfc	5,f
 12227  2327  3F00               	moviw [0]fsr0
 12228  2328  00B6               	movwf	??_setCellUndervoltageProtection
 12229  2329  3F01               	moviw [1]fsr0
 12230  232A  00B7               	movwf	??_setCellUndervoltageProtection+1
 12231  232B  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12232  232C  3A80               	xorlw	128
 12233  232D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12234  232E  0837               	movf	??_setCellUndervoltageProtection+1,w
 12235  232F  3A80               	xorlw	128
 12236  2330  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12237  2331  1D03               	skipz
 12238  2332  2B35               	goto	u9455
 12239  2333  0836               	movf	??_setCellUndervoltageProtection,w
 12240  2334  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12241  2335                     u9455:	
 12242  2335  1C03               	skipc
 12243  2336  2B45               	goto	l7553
 12244                           
 12245                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12246  2337  0020               	movlb	0	; select bank0
 12247  2338  0845               	movf	setCellUndervoltageProtection@i,w
 12248  2339  00B6               	movwf	??_setCellUndervoltageProtection
 12249  233A  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12250  233B  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12251  233C  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12252  233D  0023               	movlb	3	; select bank3
 12253  233E  0868               	movf	_protect3^(0+384),w
 12254  233F  0020               	movlb	0	; select bank0
 12255  2340  0636               	xorwf	??_setCellUndervoltageProtection,w
 12256  2341  393F               	andlw	-193
 12257  2342  0636               	xorwf	??_setCellUndervoltageProtection,w
 12258  2343  0023               	movlb	3	; select bank3
 12259  2344  00E8               	movwf	_protect3^(0+384)
 12260  2345                     l7553:	
 12261                           
 12262                           ;BQ76920.c: 147:     }
 12263  2345  3001               	movlw	1
 12264  2346  0020               	movlb	0	; select bank0
 12265  2347  07C5               	addwf	setCellUndervoltageProtection@i,f
 12266  2348  3000               	movlw	0
 12267  2349  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12268  234A  3000               	movlw	0
 12269  234B  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12270  234C  3003               	movlw	3
 12271  234D  1903               	skipnz
 12272  234E  0245               	subwf	setCellUndervoltageProtection@i,w
 12273  234F  1C03               	skipc
 12274  2350  2B1D               	goto	l7549
 12275                           
 12276                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12277  2351  3018               	movlw	24
 12278  2352  00F5               	movwf	I2C_writeRegister@slaveAddress
 12279  2353  3000               	movlw	0
 12280  2354  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12281  2355  3008               	movlw	8
 12282  2356  00F7               	movwf	I2C_writeRegister@regAddress
 12283  2357  3000               	movlw	0
 12284  2358  00F8               	movwf	I2C_writeRegister@regAddress+1
 12285  2359  0023               	movlb	3	; select bank3
 12286  235A  0868               	movf	_protect3^(0+384),w
 12287  235B  0020               	movlb	0	; select bank0
 12288  235C  00B6               	movwf	??_setCellUndervoltageProtection
 12289  235D  01B7               	clrf	??_setCellUndervoltageProtection+1
 12290  235E  0836               	movf	??_setCellUndervoltageProtection,w
 12291  235F  00F9               	movwf	I2C_writeRegister@data
 12292  2360  0837               	movf	??_setCellUndervoltageProtection+1,w
 12293  2361  00FA               	movwf	I2C_writeRegister@data+1
 12294  2362  31B3  23DC         	fcall	_I2C_writeRegister
 12295  2364  0008               	return
 12296  2365                     __end_of_setCellUndervoltageProtection:	
 12297                           
 12298                           	psect	text42
 12299  20D8                     __ptext42:	
 12300 ;; *************** function _setCellOvervoltageProtection *****************
 12301 ;; Defined at:
 12302 ;;		line 154 in file "BQ76920.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  voltage_mV      2   18[BANK0 ] int 
 12305 ;;  delay_s         2   20[BANK0 ] int 
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;  i               2   37[BANK0 ] int 
 12308 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      void 
 12311 ;; Registers used:
 12312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;Total ram usage:       21 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; Hardware stack levels required when called:    3
 12325 ;; This function calls:
 12326 ;;		_I2C_writeRegister
 12327 ;;		___aldiv
 12328 ;;		___lmul
 12329 ;;		_readRegister
 12330 ;; This function is called by:
 12331 ;;		_init_AFE
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           
 12336                           ;psect for function _setCellOvervoltageProtection
 12337  20D8                     _setCellOvervoltageProtection:	
 12338                           
 12339                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12340                           
 12341                           ;incstack = 0
 12342                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12343  20D8  0020               	movlb	0	; select bank0
 12344  20D9  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12345  20DA  0023               	movlb	3	; select bank3
 12346  20DB  00CD               	movwf	(_maxCellVoltage+1)^(0+384)
 12347  20DC  0020               	movlb	0	; select bank0
 12348  20DD  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12349  20DE  0023               	movlb	3	; select bank3
 12350  20DF  00CC               	movwf	_maxCellVoltage^(0+384)
 12351                           
 12352                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12353  20E0  3018               	movlw	24
 12354  20E1  00F5               	movwf	readRegister@slaveAddress
 12355  20E2  3000               	movlw	0
 12356  20E3  00F6               	movwf	readRegister@slaveAddress+1
 12357  20E4  3008               	movlw	8
 12358  20E5  00F7               	movwf	readRegister@regAddress
 12359  20E6  3000               	movlw	0
 12360  20E7  00F8               	movwf	readRegister@regAddress+1
 12361  20E8  31B5  2587  31A0   	fcall	_readRegister
 12362  20EB  0875               	movf	?_readRegister,w
 12363  20EC  0020               	movlb	0	; select bank0
 12364  20ED  00B6               	movwf	??_setCellOvervoltageProtection
 12365  20EE  0836               	movf	??_setCellOvervoltageProtection,w
 12366  20EF  0023               	movlb	3	; select bank3
 12367  20F0  00E8               	movwf	_protect3^(0+384)
 12368                           
 12369                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12370  20F1  0022               	movlb	2	; select bank2
 12371  20F2  086E               	movf	_adcGain^(0+256),w
 12372  20F3  0020               	movlb	0	; select bank0
 12373  20F4  00A4               	movwf	___aldiv@divisor
 12374  20F5  0022               	movlb	2	; select bank2
 12375  20F6  086F               	movf	(_adcGain+1)^(0+256),w
 12376  20F7  0020               	movlb	0	; select bank0
 12377  20F8  00A5               	movwf	___aldiv@divisor+1
 12378  20F9  0D89               	rlf	9,f
 12379  20FA  3B89               	subwfb	9,f
 12380  20FB  0989               	comf	9,f
 12381  20FC  00A6               	movwf	___aldiv@divisor+2
 12382  20FD  00A7               	movwf	___aldiv@divisor+3
 12383  20FE  0022               	movlb	2	; select bank2
 12384  20FF  086A               	movf	_adcOffset^(0+256),w
 12385  2100  0020               	movlb	0	; select bank0
 12386  2101  00B6               	movwf	??_setCellOvervoltageProtection
 12387  2102  0022               	movlb	2	; select bank2
 12388  2103  086B               	movf	(_adcOffset+1)^(0+256),w
 12389  2104  0020               	movlb	0	; select bank0
 12390  2105  00B7               	movwf	??_setCellOvervoltageProtection+1
 12391  2106  3000               	movlw	0
 12392  2107  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12393  2108  30FF               	movlw	255
 12394  2109  00B8               	movwf	??_setCellOvervoltageProtection+2
 12395  210A  00B9               	movwf	??_setCellOvervoltageProtection+3
 12396  210B  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12397  210C  00BA               	movwf	??_setCellOvervoltageProtection+4
 12398  210D  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12399  210E  00BB               	movwf	??_setCellOvervoltageProtection+5
 12400  210F  3000               	movlw	0
 12401  2110  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12402  2111  30FF               	movlw	255
 12403  2112  00BC               	movwf	??_setCellOvervoltageProtection+6
 12404  2113  00BD               	movwf	??_setCellOvervoltageProtection+7
 12405  2114  0836               	movf	??_setCellOvervoltageProtection,w
 12406  2115  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12407  2116  0837               	movf	??_setCellOvervoltageProtection+1,w
 12408  2117  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12409  2118  0838               	movf	??_setCellOvervoltageProtection+2,w
 12410  2119  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12411  211A  0839               	movf	??_setCellOvervoltageProtection+3,w
 12412  211B  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12413  211C  083D               	movf	??_setCellOvervoltageProtection+7,w
 12414  211D  00F4               	movwf	___lmul@multiplier+3
 12415  211E  083C               	movf	??_setCellOvervoltageProtection+6,w
 12416  211F  00F3               	movwf	___lmul@multiplier+2
 12417  2120  083B               	movf	??_setCellOvervoltageProtection+5,w
 12418  2121  00F2               	movwf	___lmul@multiplier+1
 12419  2122  083A               	movf	??_setCellOvervoltageProtection+4,w
 12420  2123  00F1               	movwf	___lmul@multiplier
 12421  2124  3000               	movlw	0
 12422  2125  00F8               	movwf	___lmul@multiplicand+3
 12423  2126  3000               	movlw	0
 12424  2127  00F7               	movwf	___lmul@multiplicand+2
 12425  2128  3003               	movlw	3
 12426  2129  00F6               	movwf	___lmul@multiplicand+1
 12427  212A  30E8               	movlw	232
 12428  212B  00F5               	movwf	___lmul@multiplicand
 12429  212C  31B4  24EB  31A0   	fcall	___lmul
 12430  212F  0874               	movf	?___lmul+3,w
 12431  2130  0020               	movlb	0	; select bank0
 12432  2131  00AB               	movwf	___aldiv@dividend+3
 12433  2132  0873               	movf	?___lmul+2,w
 12434  2133  00AA               	movwf	___aldiv@dividend+2
 12435  2134  0872               	movf	?___lmul+1,w
 12436  2135  00A9               	movwf	___aldiv@dividend+1
 12437  2136  0871               	movf	?___lmul,w
 12438  2137  00A8               	movwf	___aldiv@dividend
 12439  2138  31AB  2361  31A0   	fcall	___aldiv
 12440  213B  0020               	movlb	0	; select bank0
 12441  213C  0824               	movf	?___aldiv,w
 12442  213D  00BE               	movwf	??_setCellOvervoltageProtection+8
 12443  213E  0825               	movf	?___aldiv+1,w
 12444  213F  00BF               	movwf	??_setCellOvervoltageProtection+9
 12445  2140  0826               	movf	?___aldiv+2,w
 12446  2141  00C0               	movwf	??_setCellOvervoltageProtection+10
 12447  2142  0827               	movf	?___aldiv+3,w
 12448  2143  00C1               	movwf	??_setCellOvervoltageProtection+11
 12449  2144  3004               	movlw	4
 12450  2145  00C2               	movwf	??_setCellOvervoltageProtection+12
 12451  2146                     u9475:	
 12452  2146  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12453  2147  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12454  2148  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12455  2149  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12456  214A  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12457  214B  2946               	goto	u9475
 12458  214C  083E               	movf	??_setCellOvervoltageProtection+8,w
 12459  214D  00C3               	movwf	??_setCellOvervoltageProtection+13
 12460  214E  0843               	movf	??_setCellOvervoltageProtection+13,w
 12461  214F  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12462                           
 12463                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12464  2150  3018               	movlw	24
 12465  2151  00F5               	movwf	I2C_writeRegister@slaveAddress
 12466  2152  3000               	movlw	0
 12467  2153  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12468  2154  3009               	movlw	9
 12469  2155  00F7               	movwf	I2C_writeRegister@regAddress
 12470  2156  3000               	movlw	0
 12471  2157  00F8               	movwf	I2C_writeRegister@regAddress+1
 12472  2158  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12473  2159  00B6               	movwf	??_setCellOvervoltageProtection
 12474  215A  01B7               	clrf	??_setCellOvervoltageProtection+1
 12475  215B  0836               	movf	??_setCellOvervoltageProtection,w
 12476  215C  00F9               	movwf	I2C_writeRegister@data
 12477  215D  0837               	movf	??_setCellOvervoltageProtection+1,w
 12478  215E  00FA               	movwf	I2C_writeRegister@data+1
 12479  215F  31B3  23DC  31A0   	fcall	_I2C_writeRegister
 12480                           
 12481                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12482  2162  0020               	movlb	0	; select bank0
 12483  2163  01C5               	clrf	setCellOvervoltageProtection@i
 12484  2164  01C6               	clrf	setCellOvervoltageProtection@i+1
 12485  2165                     l7575:	
 12486                           
 12487                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12488  2165  0846               	movf	setCellOvervoltageProtection@i+1,w
 12489  2166  0085               	movwf	5
 12490  2167  0845               	movf	setCellOvervoltageProtection@i,w
 12491  2168  0084               	movwf	4
 12492  2169  3584               	lslf	4,f
 12493  216A  0D85               	rlf	5,f
 12494  216B  3084               	movlw	low (_OV_delay_setting| (0+32768))
 12495  216C  0784               	addwf	4,f
 12496  216D  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12497  216E  3D85               	addwfc	5,f
 12498  216F  3F00               	moviw [0]fsr0
 12499  2170  00B6               	movwf	??_setCellOvervoltageProtection
 12500  2171  3F01               	moviw [1]fsr0
 12501  2172  00B7               	movwf	??_setCellOvervoltageProtection+1
 12502  2173  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12503  2174  3A80               	xorlw	128
 12504  2175  00B8               	movwf	??_setCellOvervoltageProtection+2
 12505  2176  0837               	movf	??_setCellOvervoltageProtection+1,w
 12506  2177  3A80               	xorlw	128
 12507  2178  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12508  2179  1D03               	skipz
 12509  217A  297D               	goto	u9485
 12510  217B  0836               	movf	??_setCellOvervoltageProtection,w
 12511  217C  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12512  217D                     u9485:	
 12513  217D  1C03               	skipc
 12514  217E  298D               	goto	l7579
 12515                           
 12516                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12517  217F  0020               	movlb	0	; select bank0
 12518  2180  0845               	movf	setCellOvervoltageProtection@i,w
 12519  2181  00B6               	movwf	??_setCellOvervoltageProtection
 12520  2182  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12521  2183  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12522  2184  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12523  2185  0023               	movlb	3	; select bank3
 12524  2186  0868               	movf	_protect3^(0+384),w
 12525  2187  0020               	movlb	0	; select bank0
 12526  2188  0636               	xorwf	??_setCellOvervoltageProtection,w
 12527  2189  393F               	andlw	-193
 12528  218A  0636               	xorwf	??_setCellOvervoltageProtection,w
 12529  218B  0023               	movlb	3	; select bank3
 12530  218C  00E8               	movwf	_protect3^(0+384)
 12531  218D                     l7579:	
 12532                           
 12533                           ;BQ76920.c: 165:     }
 12534  218D  3001               	movlw	1
 12535  218E  0020               	movlb	0	; select bank0
 12536  218F  07C5               	addwf	setCellOvervoltageProtection@i,f
 12537  2190  3000               	movlw	0
 12538  2191  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12539  2192  3000               	movlw	0
 12540  2193  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12541  2194  3003               	movlw	3
 12542  2195  1903               	skipnz
 12543  2196  0245               	subwf	setCellOvervoltageProtection@i,w
 12544  2197  1C03               	skipc
 12545  2198  2965               	goto	l7575
 12546                           
 12547                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12548  2199  3018               	movlw	24
 12549  219A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12550  219B  3000               	movlw	0
 12551  219C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12552  219D  3008               	movlw	8
 12553  219E  00F7               	movwf	I2C_writeRegister@regAddress
 12554  219F  3000               	movlw	0
 12555  21A0  00F8               	movwf	I2C_writeRegister@regAddress+1
 12556  21A1  0023               	movlb	3	; select bank3
 12557  21A2  0868               	movf	_protect3^(0+384),w
 12558  21A3  0020               	movlb	0	; select bank0
 12559  21A4  00B6               	movwf	??_setCellOvervoltageProtection
 12560  21A5  01B7               	clrf	??_setCellOvervoltageProtection+1
 12561  21A6  0836               	movf	??_setCellOvervoltageProtection,w
 12562  21A7  00F9               	movwf	I2C_writeRegister@data
 12563  21A8  0837               	movf	??_setCellOvervoltageProtection+1,w
 12564  21A9  00FA               	movwf	I2C_writeRegister@data+1
 12565  21AA  31B3  23DC         	fcall	_I2C_writeRegister
 12566  21AC  0008               	return
 12567  21AD                     __end_of_setCellOvervoltageProtection:	
 12568                           
 12569                           	psect	text43
 12570  2DC3                     __ptext43:	
 12571 ;; *************** function _beginAFEcommunication *****************
 12572 ;; Defined at:
 12573 ;;		line 28 in file "BQ76920.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;		None
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;  i               2   13[BANK0 ] int 
 12578 ;;  commSuccess     2   11[BANK0 ] int 
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  2    0[BANK0 ] int 
 12581 ;; Registers used:
 12582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12589 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;Total ram usage:       15 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    3
 12595 ;; This function calls:
 12596 ;;		_I2C_writeRegister
 12597 ;;		_readRegister
 12598 ;; This function is called by:
 12599 ;;		_statemachine
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           
 12604                           ;psect for function _beginAFEcommunication
 12605  2DC3                     _beginAFEcommunication:	
 12606                           
 12607                           ;BQ76920.c: 30:     int commSuccess = 0;
 12608                           
 12609                           ;incstack = 0
 12610                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12611  2DC3  0020               	movlb	0	; select bank0
 12612  2DC4  01AB               	clrf	beginAFEcommunication@commSuccess
 12613  2DC5  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12614                           
 12615                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12616  2DC6  01AD               	clrf	beginAFEcommunication@i
 12617  2DC7  01AE               	clrf	beginAFEcommunication@i+1
 12618  2DC8                     l7733:	
 12619                           
 12620                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12621  2DC8  0020               	movlb	0	; select bank0
 12622  2DC9  352D               	lslf	beginAFEcommunication@i,w
 12623  2DCA  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12624  2DCB  0086               	movwf	6
 12625  2DCC  3001               	movlw	1	; select bank3/4
 12626  2DCD  0087               	movwf	7
 12627  2DCE  3000               	movlw	0
 12628  2DCF  3FC0               	movwi [0]fsr1
 12629  2DD0  3FC1               	movwi [1]fsr1
 12630                           
 12631                           ;BQ76920.c: 35:     }
 12632  2DD1  3001               	movlw	1
 12633  2DD2  07AD               	addwf	beginAFEcommunication@i,f
 12634  2DD3  3000               	movlw	0
 12635  2DD4  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12636  2DD5  082E               	movf	beginAFEcommunication@i+1,w
 12637  2DD6  3A80               	xorlw	128
 12638  2DD7  00A2               	movwf	??_beginAFEcommunication
 12639  2DD8  3080               	movlw	128
 12640  2DD9  0222               	subwf	??_beginAFEcommunication,w
 12641  2DDA  1D03               	skipz
 12642  2DDB  2DDE               	goto	u9625
 12643  2DDC  3004               	movlw	4
 12644  2DDD  022D               	subwf	beginAFEcommunication@i,w
 12645  2DDE                     u9625:	
 12646  2DDE  1C03               	skipc
 12647  2DDF  2DC8               	goto	l7733
 12648                           
 12649                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12650  2DE0  3018               	movlw	24
 12651  2DE1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12652  2DE2  3000               	movlw	0
 12653  2DE3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12654  2DE4  300B               	movlw	11
 12655  2DE5  00F7               	movwf	I2C_writeRegister@regAddress
 12656  2DE6  3000               	movlw	0
 12657  2DE7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12658  2DE8  3019               	movlw	25
 12659  2DE9  00F9               	movwf	I2C_writeRegister@data
 12660  2DEA  3000               	movlw	0
 12661  2DEB  00FA               	movwf	I2C_writeRegister@data+1
 12662  2DEC  31B3  23DC  31AD   	fcall	_I2C_writeRegister
 12663                           
 12664                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12665  2DEF  3018               	movlw	24
 12666  2DF0  00F5               	movwf	readRegister@slaveAddress
 12667  2DF1  3000               	movlw	0
 12668  2DF2  00F6               	movwf	readRegister@slaveAddress+1
 12669  2DF3  300B               	movlw	11
 12670  2DF4  00F7               	movwf	readRegister@regAddress
 12671  2DF5  3000               	movlw	0
 12672  2DF6  00F8               	movwf	readRegister@regAddress+1
 12673  2DF7  31B5  2587  31AD   	fcall	_readRegister
 12674  2DFA  3019               	movlw	25
 12675  2DFB  0675               	xorwf	?_readRegister,w
 12676  2DFC  0476               	iorwf	?_readRegister+1,w
 12677  2DFD  1D03               	btfss	3,2
 12678  2DFE  2E71               	goto	l528
 12679                           
 12680                           ;BQ76920.c: 41:         commSuccess = 1;
 12681  2DFF  3001               	movlw	1
 12682  2E00  0020               	movlb	0	; select bank0
 12683  2E01  00AB               	movwf	beginAFEcommunication@commSuccess
 12684  2E02  3000               	movlw	0
 12685  2E03  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12686                           
 12687                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12688  2E04  3018               	movlw	24
 12689  2E05  00F5               	movwf	I2C_writeRegister@slaveAddress
 12690  2E06  3000               	movlw	0
 12691  2E07  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12692  2E08  3004               	movlw	4
 12693  2E09  00F7               	movwf	I2C_writeRegister@regAddress
 12694  2E0A  3000               	movlw	0
 12695  2E0B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12696  2E0C  3018               	movlw	24
 12697  2E0D  00F9               	movwf	I2C_writeRegister@data
 12698  2E0E  3000               	movlw	0
 12699  2E0F  00FA               	movwf	I2C_writeRegister@data+1
 12700  2E10  31B3  23DC  31AD   	fcall	_I2C_writeRegister
 12701                           
 12702                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12703  2E13  3018               	movlw	24
 12704  2E14  00F5               	movwf	I2C_writeRegister@slaveAddress
 12705  2E15  3000               	movlw	0
 12706  2E16  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12707  2E17  3005               	movlw	5
 12708  2E18  00F7               	movwf	I2C_writeRegister@regAddress
 12709  2E19  3000               	movlw	0
 12710  2E1A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12711  2E1B  3040               	movlw	64
 12712  2E1C  00F9               	movwf	I2C_writeRegister@data
 12713  2E1D  3000               	movlw	0
 12714  2E1E  00FA               	movwf	I2C_writeRegister@data+1
 12715  2E1F  31B3  23DC  31AD   	fcall	_I2C_writeRegister
 12716                           
 12717                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12718  2E22  3018               	movlw	24
 12719  2E23  00F5               	movwf	readRegister@slaveAddress
 12720  2E24  3000               	movlw	0
 12721  2E25  00F6               	movwf	readRegister@slaveAddress+1
 12722  2E26  3051               	movlw	81
 12723  2E27  00F7               	movwf	readRegister@regAddress
 12724  2E28  3000               	movlw	0
 12725  2E29  00F8               	movwf	readRegister@regAddress+1
 12726  2E2A  31B5  2587  31AD   	fcall	_readRegister
 12727  2E2D  0876               	movf	?_readRegister+1,w
 12728  2E2E  0022               	movlb	2	; select bank2
 12729  2E2F  00EB               	movwf	(_adcOffset+1)^(0+256)
 12730  2E30  0875               	movf	?_readRegister,w
 12731  2E31  00EA               	movwf	_adcOffset^(0+256)
 12732                           
 12733                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12734  2E32  3018               	movlw	24
 12735  2E33  00F5               	movwf	readRegister@slaveAddress
 12736  2E34  3000               	movlw	0
 12737  2E35  00F6               	movwf	readRegister@slaveAddress+1
 12738  2E36  3059               	movlw	89
 12739  2E37  00F7               	movwf	readRegister@regAddress
 12740  2E38  3000               	movlw	0
 12741  2E39  00F8               	movwf	readRegister@regAddress+1
 12742  2E3A  31B5  2587  31AD   	fcall	_readRegister
 12743  2E3D  0875               	movf	?_readRegister,w
 12744  2E3E  0020               	movlb	0	; select bank0
 12745  2E3F  00A2               	movwf	??_beginAFEcommunication
 12746  2E40  0876               	movf	?_readRegister+1,w
 12747  2E41  00A3               	movwf	??_beginAFEcommunication+1
 12748  2E42  3005               	movlw	5
 12749  2E43  00A4               	movwf	??_beginAFEcommunication+2
 12750  2E44                     u9645:	
 12751  2E44  0D23               	rlf	??_beginAFEcommunication+1,w
 12752  2E45  0CA3               	rrf	??_beginAFEcommunication+1,f
 12753  2E46  0CA2               	rrf	??_beginAFEcommunication,f
 12754  2E47  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12755  2E48  2E44               	goto	u9645
 12756  2E49  3007               	movlw	7
 12757  2E4A  0522               	andwf	??_beginAFEcommunication,w
 12758  2E4B  00A5               	movwf	??_beginAFEcommunication+3
 12759  2E4C  3000               	movlw	0
 12760  2E4D  0523               	andwf	??_beginAFEcommunication+1,w
 12761  2E4E  00A6               	movwf	??_beginAFEcommunication+4
 12762  2E4F  3018               	movlw	24
 12763  2E50  00F5               	movwf	readRegister@slaveAddress
 12764  2E51  3000               	movlw	0
 12765  2E52  00F6               	movwf	readRegister@slaveAddress+1
 12766  2E53  3050               	movlw	80
 12767  2E54  00F7               	movwf	readRegister@regAddress
 12768  2E55  3000               	movlw	0
 12769  2E56  00F8               	movwf	readRegister@regAddress+1
 12770  2E57  31B5  2587         	fcall	_readRegister
 12771  2E59  300C               	movlw	12
 12772  2E5A  0575               	andwf	?_readRegister,w
 12773  2E5B  0020               	movlb	0	; select bank0
 12774  2E5C  00A7               	movwf	??_beginAFEcommunication+5
 12775  2E5D  3000               	movlw	0
 12776  2E5E  0576               	andwf	?_readRegister+1,w
 12777  2E5F  00A8               	movwf	??_beginAFEcommunication+6
 12778  2E60  35A7               	lslf	??_beginAFEcommunication+5,f
 12779  2E61  0DA8               	rlf	??_beginAFEcommunication+6,f
 12780  2E62  0825               	movf	??_beginAFEcommunication+3,w
 12781  2E63  0427               	iorwf	??_beginAFEcommunication+5,w
 12782  2E64  00A9               	movwf	??_beginAFEcommunication+7
 12783  2E65  0826               	movf	??_beginAFEcommunication+4,w
 12784  2E66  0428               	iorwf	??_beginAFEcommunication+6,w
 12785  2E67  00AA               	movwf	??_beginAFEcommunication+8
 12786  2E68  0829               	movf	??_beginAFEcommunication+7,w
 12787  2E69  3E6D               	addlw	109
 12788  2E6A  0022               	movlb	2	; select bank2
 12789  2E6B  00EE               	movwf	_adcGain^(0+256)
 12790  2E6C  3001               	movlw	1
 12791  2E6D  0020               	movlb	0	; select bank0
 12792  2E6E  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12793  2E6F  0022               	movlb	2	; select bank2
 12794  2E70  00EF               	movwf	(_adcGain+1)^(0+256)
 12795  2E71                     l528:	
 12796                           ;BQ76920.c: 53:     }
 12797                           
 12798                           
 12799                           ;BQ76920.c: 54:     return commSuccess;
 12800  2E71  0020               	movlb	0	; select bank0
 12801  2E72  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12802  2E73  00A1               	movwf	?_beginAFEcommunication+1
 12803  2E74  082B               	movf	beginAFEcommunication@commSuccess,w
 12804  2E75  00A0               	movwf	?_beginAFEcommunication
 12805  2E76  0008               	return
 12806  2E77                     __end_of_beginAFEcommunication:	
 12807                           
 12808                           	psect	text44
 12809  341B                     __ptext44:	
 12810 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12811 ;; Defined at:
 12812 ;;		line 43 in file "RGB.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;		None
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;		None
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  1    wreg      void 
 12819 ;; Registers used:
 12820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12830 ;;Total ram usage:        1 bytes
 12831 ;; Hardware stack levels used:    1
 12832 ;; Hardware stack levels required when called:    2
 12833 ;; This function calls:
 12834 ;;		_RGB_color
 12835 ;; This function is called by:
 12836 ;;		_statemachine
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           
 12841                           ;psect for function _RGB_AWAIT_AFE_CONN
 12842  341B                     _RGB_AWAIT_AFE_CONN:	
 12843                           
 12844                           ;RGB.c: 45:     if (toggleColor) {
 12845                           
 12846                           ;incstack = 0
 12847                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12848  341B  087C               	movf	_toggleColor,w
 12849  341C  1903               	btfsc	3,2
 12850  341D  2C2D               	goto	l6303
 12851                           
 12852                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12853  341E  087C               	movf	_toggleColor,w
 12854  341F  1D03               	btfss	3,2
 12855  3420  2C23               	goto	u7770
 12856  3421  3001               	movlw	1
 12857  3422  2C24               	goto	u7780
 12858  3423                     u7770:	
 12859  3423  3000               	movlw	0
 12860  3424                     u7780:	
 12861  3424  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12862  3425  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12863  3426  00FC               	movwf	_toggleColor
 12864                           
 12865                           ;RGB.c: 47:         RGB_color(0);
 12866  3427  3000               	movlw	0
 12867  3428  00F1               	movwf	RGB_color@color
 12868  3429  00F2               	movwf	RGB_color@color+1
 12869  342A  31B3  23FA         	fcall	_RGB_color
 12870                           
 12871                           ;RGB.c: 48:     } else {
 12872  342C  0008               	return
 12873  342D                     l6303:	
 12874                           
 12875                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12876  342D  087C               	movf	_toggleColor,w
 12877  342E  1D03               	btfss	3,2
 12878  342F  2C32               	goto	u7790
 12879  3430  3001               	movlw	1
 12880  3431  2C33               	goto	u7800
 12881  3432                     u7790:	
 12882  3432  3000               	movlw	0
 12883  3433                     u7800:	
 12884  3433  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12885  3434  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12886  3435  00FC               	movwf	_toggleColor
 12887                           
 12888                           ;RGB.c: 50:         RGB_color(1);
 12889  3436  3001               	movlw	1
 12890  3437  00F1               	movwf	RGB_color@color
 12891  3438  3000               	movlw	0
 12892  3439  00F2               	movwf	RGB_color@color+1
 12893  343A  31B3  23FA         	fcall	_RGB_color
 12894  343C  0008               	return
 12895  343D                     __end_of_RGB_AWAIT_AFE_CONN:	
 12896                           
 12897                           	psect	text45
 12898  33FA                     __ptext45:	
 12899 ;; *************** function _RGB_color *****************
 12900 ;; Defined at:
 12901 ;;		line 17 in file "RGB.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  color           2    1[COMMON] int 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;Total ram usage:        2 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    1
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_statemachine
 12926 ;;		_RGB_AWAIT_AFE_CONN
 12927 ;;		_watchdog_timeout_shutdown
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           
 12932                           ;psect for function _RGB_color
 12933  33FA                     _RGB_color:	
 12934                           
 12935                           ;RGB.c: 19:     switch (color) {
 12936                           
 12937                           ;incstack = 0
 12938                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12939  33FA  2C0A               	goto	l5965
 12940  33FB                     l387:	
 12941                           ;RGB.c: 20:         case 0:
 12942                           
 12943                           
 12944                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12945  33FB  0022               	movlb	2	; select bank2
 12946  33FC  120C               	bcf	12,4	;volatile
 12947                           
 12948                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12949  33FD  168C               	bsf	12,5	;volatile
 12950                           
 12951                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12952  33FE  1410               	bsf	16,0	;volatile
 12953                           
 12954                           ;RGB.c: 24:             break;
 12955  33FF  0008               	return
 12956  3400                     l389:	
 12957                           ;RGB.c: 25:         case 1:
 12958                           
 12959                           
 12960                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12961  3400  0022               	movlb	2	; select bank2
 12962  3401  160C               	bsf	12,4	;volatile
 12963                           
 12964                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12965  3402  128C               	bcf	12,5	;volatile
 12966                           
 12967                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12968  3403  1410               	bsf	16,0	;volatile
 12969                           
 12970                           ;RGB.c: 29:             break;
 12971  3404  0008               	return
 12972  3405                     l390:	
 12973                           ;RGB.c: 30:         case 2:
 12974                           
 12975                           
 12976                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12977  3405  0022               	movlb	2	; select bank2
 12978  3406  160C               	bsf	12,4	;volatile
 12979                           
 12980                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12981  3407  168C               	bsf	12,5	;volatile
 12982                           
 12983                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12984  3408  1010               	bcf	16,0	;volatile
 12985                           
 12986                           ;RGB.c: 34:             break;
 12987  3409  0008               	return
 12988  340A                     l5965:	
 12989                           
 12990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12991                           ; Switch size 1, requested type "simple"
 12992                           ; Number of cases is 1, Range of values is 0 to 0
 12993                           ; switch strategies available:
 12994                           ; Name         Instructions Cycles
 12995                           ; simple_byte            4     3 (average)
 12996                           ; direct_byte            8     6 (fixed)
 12997                           ; jumptable            260     6 (fixed)
 12998                           ;	Chosen strategy is simple_byte
 12999  340A  0872               	movf	RGB_color@color+1,w
 13000  340B  3A00               	xorlw	0	; case 0
 13001  340C  1903               	skipnz
 13002  340D  2C0F               	goto	l8037
 13003  340E  2C1A               	goto	l391
 13004  340F                     l8037:	
 13005                           
 13006                           ; Switch size 1, requested type "simple"
 13007                           ; Number of cases is 3, Range of values is 0 to 2
 13008                           ; switch strategies available:
 13009                           ; Name         Instructions Cycles
 13010                           ; simple_byte           10     6 (average)
 13011                           ; direct_byte           12     6 (fixed)
 13012                           ; jumptable            260     6 (fixed)
 13013                           ;	Chosen strategy is simple_byte
 13014  340F  0871               	movf	RGB_color@color,w
 13015  3410  3A00               	xorlw	0	; case 0
 13016  3411  1903               	skipnz
 13017  3412  2BFB               	goto	l387
 13018  3413  3A01               	xorlw	1	; case 1
 13019  3414  1903               	skipnz
 13020  3415  2C00               	goto	l389
 13021  3416  3A03               	xorlw	3	; case 2
 13022  3417  1903               	skipnz
 13023  3418  2C05               	goto	l390
 13024  3419  2C1A               	goto	l391
 13025  341A                     l391:	
 13026  341A  0008               	return
 13027  341B                     __end_of_RGB_color:	
 13028                           
 13029                           	psect	text46
 13030  362B                     __ptext46:	
 13031 ;; *************** function _AFE_UPDATE *****************
 13032 ;; Defined at:
 13033 ;;		line 172 in file "BQ76920.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;		None
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;		None
 13038 ;; Return value:  Size  Location     Type
 13039 ;;                  1    wreg      void 
 13040 ;; Registers used:
 13041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13042 ;; Tracked objects:
 13043 ;;		On entry : 0/0
 13044 ;;		On exit  : 0/0
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;Total ram usage:        0 bytes
 13052 ;; Hardware stack levels used:    1
 13053 ;; Hardware stack levels required when called:    5
 13054 ;; This function calls:
 13055 ;;		_AFE_FET_Status
 13056 ;;		_AFE_Status
 13057 ;;		_calibrate_BATTSOC
 13058 ;;		_coulomb_counter
 13059 ;;		_enableCharging
 13060 ;;		_enableDischarging
 13061 ;;		_updateCurrent
 13062 ;;		_updateTemperatures
 13063 ;;		_updateVoltages
 13064 ;; This function is called by:
 13065 ;;		_statemachine
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           
 13070                           ;psect for function _AFE_UPDATE
 13071  362B                     _AFE_UPDATE:	
 13072                           
 13073                           ;BQ76920.c: 174:     updateVoltages();
 13074                           
 13075                           ;incstack = 0
 13076                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13077  362B  3192  224E  31B6   	fcall	_updateVoltages
 13078                           
 13079                           ;BQ76920.c: 176:     if(batCurrent<10){
 13080  362E  0023               	movlb	3	; select bank3
 13081  362F  1BC7               	btfsc	(_batCurrent+3)^(0+384),7
 13082  3630  2E3E               	goto	l7767
 13083  3631  0847               	movf	(_batCurrent+3)^(0+384),w
 13084  3632  1D03               	btfss	3,2
 13085  3633  2E42               	goto	l7769
 13086  3634  0846               	movf	(_batCurrent+2)^(0+384),w
 13087  3635  1D03               	btfss	3,2
 13088  3636  2E42               	goto	l7769
 13089  3637  0845               	movf	(_batCurrent+1)^(0+384),w
 13090  3638  1D03               	btfss	3,2
 13091  3639  2E42               	goto	l7769
 13092  363A  300A               	movlw	10
 13093  363B  0244               	subwf	_batCurrent^(0+384),w
 13094  363C  1803               	btfsc	3,0
 13095  363D  2E42               	goto	l7769
 13096  363E                     l7767:	
 13097                           
 13098                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13099  363E  31A0  2012  31B6   	fcall	_calibrate_BATTSOC
 13100                           
 13101                           ;BQ76920.c: 179:     }else{
 13102  3641  2E45               	goto	l7771
 13103  3642                     l7769:	
 13104                           
 13105                           ;BQ76920.c: 180:          coulomb_counter();
 13106  3642  31A1  21AD  31B6   	fcall	_coulomb_counter
 13107  3645                     l7771:	
 13108                           
 13109                           ;BQ76920.c: 183:     updateCurrent();
 13110  3645  31AE  2677  31B6   	fcall	_updateCurrent
 13111                           
 13112                           ;BQ76920.c: 184:     updateTemperatures();
 13113  3648  3195  2526  31B6   	fcall	_updateTemperatures
 13114                           
 13115                           ;BQ76920.c: 189:     AFE_FET_Status();
 13116  364B  31B4  243D  31B6   	fcall	_AFE_FET_Status
 13117                           
 13118                           ;BQ76920.c: 191:     if(AFE_Status()==0){
 13119  364E  31A8  2044  31B6   	fcall	_AFE_Status
 13120  3651  0020               	movlb	0	; select bank0
 13121  3652  0820               	movf	?_AFE_Status,w
 13122  3653  0421               	iorwf	?_AFE_Status+1,w
 13123  3654  1D03               	btfss	3,2
 13124  3655  0008               	return
 13125                           
 13126                           ;BQ76920.c: 192:     enableDischarging(1);
 13127  3656  3001               	movlw	1
 13128  3657  00A0               	movwf	enableDischarging@enable
 13129  3658  3000               	movlw	0
 13130  3659  00A1               	movwf	enableDischarging@enable+1
 13131  365A  31B5  25F4  31B6   	fcall	_enableDischarging
 13132                           
 13133                           ;BQ76920.c: 193:     enableCharging(1);
 13134  365D  3001               	movlw	1
 13135  365E  0020               	movlb	0	; select bank0
 13136  365F  00A0               	movwf	enableCharging@enable
 13137  3660  3000               	movlw	0
 13138  3661  00A1               	movwf	enableCharging@enable+1
 13139  3662  31B5  25BD         	fcall	_enableCharging
 13140  3664  0008               	return
 13141  3665                     __end_of_AFE_UPDATE:	
 13142                           
 13143                           	psect	text47
 13144  124E                     __ptext47:	
 13145 ;; *************** function _updateVoltages *****************
 13146 ;; Defined at:
 13147 ;;		line 223 in file "BQ76920.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;		None
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;  adcVal          4   24[BANK1 ] long 
 13152 ;; Return value:  Size  Location     Type
 13153 ;;                  1    wreg      void 
 13154 ;; Registers used:
 13155 ;;		wreg, status,2, status,0, pclath, cstack
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13162 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13163 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13164 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13165 ;;Total ram usage:       11 bytes
 13166 ;; Hardware stack levels used:    1
 13167 ;; Hardware stack levels required when called:    3
 13168 ;; This function calls:
 13169 ;;		___aldiv
 13170 ;;		___fladd
 13171 ;;		___fldiv
 13172 ;;		___flmul
 13173 ;;		___fltol
 13174 ;;		___lmul
 13175 ;;		___xxtofl
 13176 ;;		_readRegister
 13177 ;; This function is called by:
 13178 ;;		_AFE_UPDATE
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182                           
 13183                           ;psect for function _updateVoltages
 13184  124E                     _updateVoltages:	
 13185                           
 13186                           ;BQ76920.c: 227:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13187                           
 13188                           ;incstack = 0
 13189                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13190  124E  3018               	movlw	24
 13191  124F  00F5               	movwf	readRegister@slaveAddress
 13192  1250  3000               	movlw	0
 13193  1251  00F6               	movwf	readRegister@slaveAddress+1
 13194  1252  302A               	movlw	42
 13195  1253  00F7               	movwf	readRegister@regAddress
 13196  1254  3000               	movlw	0
 13197  1255  00F8               	movwf	readRegister@regAddress+1
 13198  1256  31B5  2587  3192   	fcall	_readRegister
 13199  1259  0875               	movf	?_readRegister,w
 13200  125A  0021               	movlb	1	; select bank1
 13201  125B  00B1               	movwf	??_updateVoltages^(0+128)
 13202  125C  0876               	movf	?_readRegister+1,w
 13203  125D  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13204  125E  0831               	movf	??_updateVoltages^(0+128),w
 13205  125F  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13206  1260  01B1               	clrf	??_updateVoltages^(0+128)
 13207  1261  3018               	movlw	24
 13208  1262  00F5               	movwf	readRegister@slaveAddress
 13209  1263  3000               	movlw	0
 13210  1264  00F6               	movwf	readRegister@slaveAddress+1
 13211  1265  302B               	movlw	43
 13212  1266  00F7               	movwf	readRegister@regAddress
 13213  1267  3000               	movlw	0
 13214  1268  00F8               	movwf	readRegister@regAddress+1
 13215  1269  31B5  2587  3192   	fcall	_readRegister
 13216  126C  0875               	movf	?_readRegister,w
 13217  126D  0021               	movlb	1	; select bank1
 13218  126E  0431               	iorwf	??_updateVoltages^(0+128),w
 13219  126F  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13220  1270  0876               	movf	?_readRegister+1,w
 13221  1271  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13222  1272  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13223  1273  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13224  1274  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13225  1275  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13226  1276  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13227  1277  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13228                           
 13229                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13230  1278  0022               	movlb	2	; select bank2
 13231  1279  086E               	movf	_adcGain^(0+256),w
 13232  127A  00F1               	movwf	___xxtofl@val
 13233  127B  086F               	movf	(_adcGain+1)^(0+256),w
 13234  127C  00F2               	movwf	___xxtofl@val+1
 13235  127D  0D89               	rlf	9,f
 13236  127E  3B89               	subwfb	9,f
 13237  127F  0989               	comf	9,f
 13238  1280  00F3               	movwf	___xxtofl@val+2
 13239  1281  00F4               	movwf	___xxtofl@val+3
 13240  1282  3001               	movlw	1
 13241  1283  31AB  23E3  3192   	fcall	___xxtofl
 13242  1286  0874               	movf	?___xxtofl+3,w
 13243  1287  0020               	movlb	0	; select bank0
 13244  1288  00AD               	movwf	___flmul@a+3
 13245  1289  0873               	movf	?___xxtofl+2,w
 13246  128A  00AC               	movwf	___flmul@a+2
 13247  128B  0872               	movf	?___xxtofl+1,w
 13248  128C  00AB               	movwf	___flmul@a+1
 13249  128D  0871               	movf	?___xxtofl,w
 13250  128E  00AA               	movwf	___flmul@a
 13251  128F  3040               	movlw	64
 13252  1290  00A9               	movwf	___flmul@b+3
 13253  1291  3080               	movlw	128
 13254  1292  00A8               	movwf	___flmul@b+2
 13255  1293  3000               	movlw	0
 13256  1294  00A7               	movwf	___flmul@b+1
 13257  1295  3000               	movlw	0
 13258  1296  00A6               	movwf	___flmul@b
 13259  1297  3190  2022  3192   	fcall	___flmul
 13260  129A  0020               	movlb	0	; select bank0
 13261  129B  0829               	movf	?___flmul+3,w
 13262  129C  0021               	movlb	1	; select bank1
 13263  129D  00B7               	movwf	(_updateVoltages$2263+3)^(0+128)
 13264  129E  0020               	movlb	0	; select bank0
 13265  129F  0828               	movf	?___flmul+2,w
 13266  12A0  0021               	movlb	1	; select bank1
 13267  12A1  00B6               	movwf	(_updateVoltages$2263+2)^(0+128)
 13268  12A2  0020               	movlb	0	; select bank0
 13269  12A3  0827               	movf	?___flmul+1,w
 13270  12A4  0021               	movlb	1	; select bank1
 13271  12A5  00B5               	movwf	(_updateVoltages$2263+1)^(0+128)
 13272  12A6  0020               	movlb	0	; select bank0
 13273  12A7  0826               	movf	?___flmul,w
 13274  12A8  0021               	movlb	1	; select bank1
 13275  12A9  00B4               	movwf	_updateVoltages$2263^(0+128)
 13276                           
 13277                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13278  12AA  0837               	movf	(_updateVoltages$2263+3)^(0+128),w
 13279  12AB  0020               	movlb	0	; select bank0
 13280  12AC  00AD               	movwf	___flmul@a+3
 13281  12AD  0021               	movlb	1	; select bank1
 13282  12AE  0836               	movf	(_updateVoltages$2263+2)^(0+128),w
 13283  12AF  0020               	movlb	0	; select bank0
 13284  12B0  00AC               	movwf	___flmul@a+2
 13285  12B1  0021               	movlb	1	; select bank1
 13286  12B2  0835               	movf	(_updateVoltages$2263+1)^(0+128),w
 13287  12B3  0020               	movlb	0	; select bank0
 13288  12B4  00AB               	movwf	___flmul@a+1
 13289  12B5  0021               	movlb	1	; select bank1
 13290  12B6  0834               	movf	_updateVoltages$2263^(0+128),w
 13291  12B7  0020               	movlb	0	; select bank0
 13292  12B8  00AA               	movwf	___flmul@a
 13293  12B9  0021               	movlb	1	; select bank1
 13294  12BA  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13295  12BB  00F4               	movwf	___xxtofl@val+3
 13296  12BC  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13297  12BD  00F3               	movwf	___xxtofl@val+2
 13298  12BE  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13299  12BF  00F2               	movwf	___xxtofl@val+1
 13300  12C0  0838               	movf	updateVoltages@adcVal^(0+128),w
 13301  12C1  00F1               	movwf	___xxtofl@val
 13302  12C2  3001               	movlw	1
 13303  12C3  31AB  23E3  3192   	fcall	___xxtofl
 13304  12C6  0874               	movf	?___xxtofl+3,w
 13305  12C7  0020               	movlb	0	; select bank0
 13306  12C8  00A9               	movwf	___flmul@b+3
 13307  12C9  0873               	movf	?___xxtofl+2,w
 13308  12CA  00A8               	movwf	___flmul@b+2
 13309  12CB  0872               	movf	?___xxtofl+1,w
 13310  12CC  00A7               	movwf	___flmul@b+1
 13311  12CD  0871               	movf	?___xxtofl,w
 13312  12CE  00A6               	movwf	___flmul@b
 13313  12CF  3190  2022  3192   	fcall	___flmul
 13314  12D2  0020               	movlb	0	; select bank0
 13315  12D3  0829               	movf	?___flmul+3,w
 13316  12D4  00C7               	movwf	___fldiv@b+3
 13317  12D5  0828               	movf	?___flmul+2,w
 13318  12D6  00C6               	movwf	___fldiv@b+2
 13319  12D7  0827               	movf	?___flmul+1,w
 13320  12D8  00C5               	movwf	___fldiv@b+1
 13321  12D9  0826               	movf	?___flmul,w
 13322  12DA  00C4               	movwf	___fldiv@b
 13323  12DB  3044               	movlw	68
 13324  12DC  00C3               	movwf	___fldiv@a+3
 13325  12DD  307A               	movlw	122
 13326  12DE  00C2               	movwf	___fldiv@a+2
 13327  12DF  3000               	movlw	0
 13328  12E0  00C1               	movwf	___fldiv@a+1
 13329  12E1  3000               	movlw	0
 13330  12E2  00C0               	movwf	___fldiv@a
 13331  12E3  319C  24E2  3192   	fcall	___fldiv
 13332  12E6  0020               	movlb	0	; select bank0
 13333  12E7  0843               	movf	?___fldiv+3,w
 13334  12E8  00E1               	movwf	___fladd@a+3
 13335  12E9  0842               	movf	?___fldiv+2,w
 13336  12EA  00E0               	movwf	___fladd@a+2
 13337  12EB  0841               	movf	?___fldiv+1,w
 13338  12EC  00DF               	movwf	___fladd@a+1
 13339  12ED  0840               	movf	?___fldiv,w
 13340  12EE  00DE               	movwf	___fladd@a
 13341  12EF  0022               	movlb	2	; select bank2
 13342  12F0  086B               	movf	(_adcOffset+1)^(0+256),w
 13343  12F1  0021               	movlb	1	; select bank1
 13344  12F2  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13345  12F3  0022               	movlb	2	; select bank2
 13346  12F4  086A               	movf	_adcOffset^(0+256),w
 13347  12F5  0021               	movlb	1	; select bank1
 13348  12F6  00B1               	movwf	??_updateVoltages^(0+128)
 13349  12F7  35B1               	lslf	??_updateVoltages^(0+128),f
 13350  12F8  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13351  12F9  35B1               	lslf	??_updateVoltages^(0+128),f
 13352  12FA  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13353  12FB  0831               	movf	??_updateVoltages^(0+128),w
 13354  12FC  00F1               	movwf	___xxtofl@val
 13355  12FD  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13356  12FE  00F2               	movwf	___xxtofl@val+1
 13357  12FF  0D89               	rlf	9,f
 13358  1300  3B89               	subwfb	9,f
 13359  1301  0989               	comf	9,f
 13360  1302  00F3               	movwf	___xxtofl@val+2
 13361  1303  00F4               	movwf	___xxtofl@val+3
 13362  1304  3001               	movlw	1
 13363  1305  31AB  23E3  3192   	fcall	___xxtofl
 13364  1308  0874               	movf	?___xxtofl+3,w
 13365  1309  0020               	movlb	0	; select bank0
 13366  130A  00DD               	movwf	___fladd@b+3
 13367  130B  0873               	movf	?___xxtofl+2,w
 13368  130C  00DC               	movwf	___fladd@b+2
 13369  130D  0872               	movf	?___xxtofl+1,w
 13370  130E  00DB               	movwf	___fladd@b+1
 13371  130F  0871               	movf	?___xxtofl,w
 13372  1310  00DA               	movwf	___fladd@b
 13373  1311  3185  25FE  3192   	fcall	___fladd
 13374  1314  0020               	movlb	0	; select bank0
 13375  1315  085D               	movf	?___fladd+3,w
 13376  1316  0021               	movlb	1	; select bank1
 13377  1317  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13378  1318  0020               	movlb	0	; select bank0
 13379  1319  085C               	movf	?___fladd+2,w
 13380  131A  0021               	movlb	1	; select bank1
 13381  131B  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13382  131C  0020               	movlb	0	; select bank0
 13383  131D  085B               	movf	?___fladd+1,w
 13384  131E  0021               	movlb	1	; select bank1
 13385  131F  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13386  1320  0020               	movlb	0	; select bank0
 13387  1321  085A               	movf	?___fladd,w
 13388  1322  0021               	movlb	1	; select bank1
 13389  1323  00A8               	movwf	___fltol@f1^(0+128)
 13390  1324  31A8  20A3  3192   	fcall	___fltol
 13391  1327  0021               	movlb	1	; select bank1
 13392  1328  082B               	movf	(?___fltol+3)^(0+128),w
 13393  1329  0024               	movlb	4	; select bank4
 13394  132A  00AD               	movwf	(_batVoltage+3)^(0+512)
 13395  132B  0021               	movlb	1	; select bank1
 13396  132C  082A               	movf	(?___fltol+2)^(0+128),w
 13397  132D  0024               	movlb	4	; select bank4
 13398  132E  00AC               	movwf	(_batVoltage+2)^(0+512)
 13399  132F  0021               	movlb	1	; select bank1
 13400  1330  0829               	movf	(?___fltol+1)^(0+128),w
 13401  1331  0024               	movlb	4	; select bank4
 13402  1332  00AB               	movwf	(_batVoltage+1)^(0+512)
 13403  1333  0021               	movlb	1	; select bank1
 13404  1334  0828               	movf	?___fltol^(0+128),w
 13405  1335  0024               	movlb	4	; select bank4
 13406  1336  00AA               	movwf	_batVoltage^(0+512)
 13407                           
 13408                           ;BQ76920.c: 251:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13409  1337  3018               	movlw	24
 13410  1338  00F5               	movwf	readRegister@slaveAddress
 13411  1339  3000               	movlw	0
 13412  133A  00F6               	movwf	readRegister@slaveAddress+1
 13413  133B  300C               	movlw	12
 13414  133C  00F7               	movwf	readRegister@regAddress
 13415  133D  3000               	movlw	0
 13416  133E  00F8               	movwf	readRegister@regAddress+1
 13417  133F  31B5  2587  3192   	fcall	_readRegister
 13418  1342  303F               	movlw	63
 13419  1343  0575               	andwf	?_readRegister,w
 13420  1344  0021               	movlb	1	; select bank1
 13421  1345  00B1               	movwf	??_updateVoltages^(0+128)
 13422  1346  3000               	movlw	0
 13423  1347  0576               	andwf	?_readRegister+1,w
 13424  1348  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13425  1349  0831               	movf	??_updateVoltages^(0+128),w
 13426  134A  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13427  134B  01B1               	clrf	??_updateVoltages^(0+128)
 13428  134C  3018               	movlw	24
 13429  134D  00F5               	movwf	readRegister@slaveAddress
 13430  134E  3000               	movlw	0
 13431  134F  00F6               	movwf	readRegister@slaveAddress+1
 13432  1350  300D               	movlw	13
 13433  1351  00F7               	movwf	readRegister@regAddress
 13434  1352  3000               	movlw	0
 13435  1353  00F8               	movwf	readRegister@regAddress+1
 13436  1354  31B5  2587  3192   	fcall	_readRegister
 13437  1357  0875               	movf	?_readRegister,w
 13438  1358  0021               	movlb	1	; select bank1
 13439  1359  0431               	iorwf	??_updateVoltages^(0+128),w
 13440  135A  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13441  135B  0876               	movf	?_readRegister+1,w
 13442  135C  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13443  135D  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13444  135E  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13445  135F  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13446  1360  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13447  1361  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13448  1362  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13449                           
 13450                           ;BQ76920.c: 252:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13451  1363  3000               	movlw	0
 13452  1364  0020               	movlb	0	; select bank0
 13453  1365  00A7               	movwf	___aldiv@divisor+3
 13454  1366  3000               	movlw	0
 13455  1367  00A6               	movwf	___aldiv@divisor+2
 13456  1368  3003               	movlw	3
 13457  1369  00A5               	movwf	___aldiv@divisor+1
 13458  136A  30E8               	movlw	232
 13459  136B  00A4               	movwf	___aldiv@divisor
 13460  136C  0022               	movlb	2	; select bank2
 13461  136D  086E               	movf	_adcGain^(0+256),w
 13462  136E  00F1               	movwf	___lmul@multiplier
 13463  136F  086F               	movf	(_adcGain+1)^(0+256),w
 13464  1370  00F2               	movwf	___lmul@multiplier+1
 13465  1371  0D89               	rlf	9,f
 13466  1372  3B89               	subwfb	9,f
 13467  1373  0989               	comf	9,f
 13468  1374  00F3               	movwf	___lmul@multiplier+2
 13469  1375  00F4               	movwf	___lmul@multiplier+3
 13470  1376  0021               	movlb	1	; select bank1
 13471  1377  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13472  1378  00F8               	movwf	___lmul@multiplicand+3
 13473  1379  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13474  137A  00F7               	movwf	___lmul@multiplicand+2
 13475  137B  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13476  137C  00F6               	movwf	___lmul@multiplicand+1
 13477  137D  0838               	movf	updateVoltages@adcVal^(0+128),w
 13478  137E  00F5               	movwf	___lmul@multiplicand
 13479  137F  31B4  24EB  3192   	fcall	___lmul
 13480  1382  0874               	movf	?___lmul+3,w
 13481  1383  0020               	movlb	0	; select bank0
 13482  1384  00AB               	movwf	___aldiv@dividend+3
 13483  1385  0873               	movf	?___lmul+2,w
 13484  1386  00AA               	movwf	___aldiv@dividend+2
 13485  1387  0872               	movf	?___lmul+1,w
 13486  1388  00A9               	movwf	___aldiv@dividend+1
 13487  1389  0871               	movf	?___lmul,w
 13488  138A  00A8               	movwf	___aldiv@dividend
 13489  138B  31AB  2361  3192   	fcall	___aldiv
 13490  138E  0022               	movlb	2	; select bank2
 13491  138F  086A               	movf	_adcOffset^(0+256),w
 13492  1390  0020               	movlb	0	; select bank0
 13493  1391  0724               	addwf	?___aldiv,w
 13494  1392  0023               	movlb	3	; select bank3
 13495  1393  00AA               	movwf	_cellVoltages^(0+384)
 13496  1394  0022               	movlb	2	; select bank2
 13497  1395  086B               	movf	(_adcOffset+1)^(0+256),w
 13498  1396  0020               	movlb	0	; select bank0
 13499  1397  3D25               	addwfc	?___aldiv+1,w
 13500  1398  0023               	movlb	3	; select bank3
 13501  1399  00AB               	movwf	(_cellVoltages+1)^(0+384)
 13502                           
 13503                           ;BQ76920.c: 253:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13504  139A  3018               	movlw	24
 13505  139B  00F5               	movwf	readRegister@slaveAddress
 13506  139C  3000               	movlw	0
 13507  139D  00F6               	movwf	readRegister@slaveAddress+1
 13508  139E  300E               	movlw	14
 13509  139F  00F7               	movwf	readRegister@regAddress
 13510  13A0  3000               	movlw	0
 13511  13A1  00F8               	movwf	readRegister@regAddress+1
 13512  13A2  31B5  2587  3192   	fcall	_readRegister
 13513  13A5  303F               	movlw	63
 13514  13A6  0575               	andwf	?_readRegister,w
 13515  13A7  0021               	movlb	1	; select bank1
 13516  13A8  00B1               	movwf	??_updateVoltages^(0+128)
 13517  13A9  3000               	movlw	0
 13518  13AA  0576               	andwf	?_readRegister+1,w
 13519  13AB  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13520  13AC  0831               	movf	??_updateVoltages^(0+128),w
 13521  13AD  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13522  13AE  01B1               	clrf	??_updateVoltages^(0+128)
 13523  13AF  3018               	movlw	24
 13524  13B0  00F5               	movwf	readRegister@slaveAddress
 13525  13B1  3000               	movlw	0
 13526  13B2  00F6               	movwf	readRegister@slaveAddress+1
 13527  13B3  300F               	movlw	15
 13528  13B4  00F7               	movwf	readRegister@regAddress
 13529  13B5  3000               	movlw	0
 13530  13B6  00F8               	movwf	readRegister@regAddress+1
 13531  13B7  31B5  2587  3192   	fcall	_readRegister
 13532  13BA  0875               	movf	?_readRegister,w
 13533  13BB  0021               	movlb	1	; select bank1
 13534  13BC  0431               	iorwf	??_updateVoltages^(0+128),w
 13535  13BD  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13536  13BE  0876               	movf	?_readRegister+1,w
 13537  13BF  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13538  13C0  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13539  13C1  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13540  13C2  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13541  13C3  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13542  13C4  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13543  13C5  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13544                           
 13545                           ;BQ76920.c: 254:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13546  13C6  3000               	movlw	0
 13547  13C7  0020               	movlb	0	; select bank0
 13548  13C8  00A7               	movwf	___aldiv@divisor+3
 13549  13C9  3000               	movlw	0
 13550  13CA  00A6               	movwf	___aldiv@divisor+2
 13551  13CB  3003               	movlw	3
 13552  13CC  00A5               	movwf	___aldiv@divisor+1
 13553  13CD  30E8               	movlw	232
 13554  13CE  00A4               	movwf	___aldiv@divisor
 13555  13CF  0022               	movlb	2	; select bank2
 13556  13D0  086E               	movf	_adcGain^(0+256),w
 13557  13D1  00F1               	movwf	___lmul@multiplier
 13558  13D2  086F               	movf	(_adcGain+1)^(0+256),w
 13559  13D3  00F2               	movwf	___lmul@multiplier+1
 13560  13D4  0D89               	rlf	9,f
 13561  13D5  3B89               	subwfb	9,f
 13562  13D6  0989               	comf	9,f
 13563  13D7  00F3               	movwf	___lmul@multiplier+2
 13564  13D8  00F4               	movwf	___lmul@multiplier+3
 13565  13D9  0021               	movlb	1	; select bank1
 13566  13DA  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13567  13DB  00F8               	movwf	___lmul@multiplicand+3
 13568  13DC  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13569  13DD  00F7               	movwf	___lmul@multiplicand+2
 13570  13DE  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13571  13DF  00F6               	movwf	___lmul@multiplicand+1
 13572  13E0  0838               	movf	updateVoltages@adcVal^(0+128),w
 13573  13E1  00F5               	movwf	___lmul@multiplicand
 13574  13E2  31B4  24EB  3192   	fcall	___lmul
 13575  13E5  0874               	movf	?___lmul+3,w
 13576  13E6  0020               	movlb	0	; select bank0
 13577  13E7  00AB               	movwf	___aldiv@dividend+3
 13578  13E8  0873               	movf	?___lmul+2,w
 13579  13E9  00AA               	movwf	___aldiv@dividend+2
 13580  13EA  0872               	movf	?___lmul+1,w
 13581  13EB  00A9               	movwf	___aldiv@dividend+1
 13582  13EC  0871               	movf	?___lmul,w
 13583  13ED  00A8               	movwf	___aldiv@dividend
 13584  13EE  31AB  2361  3192   	fcall	___aldiv
 13585  13F1  0022               	movlb	2	; select bank2
 13586  13F2  086A               	movf	_adcOffset^(0+256),w
 13587  13F3  0020               	movlb	0	; select bank0
 13588  13F4  0724               	addwf	?___aldiv,w
 13589  13F5  0023               	movlb	3	; select bank3
 13590  13F6  00AC               	movwf	(_cellVoltages^(0+384)+2)
 13591  13F7  0022               	movlb	2	; select bank2
 13592  13F8  086B               	movf	(_adcOffset+1)^(0+256),w
 13593  13F9  0020               	movlb	0	; select bank0
 13594  13FA  3D25               	addwfc	?___aldiv+1,w
 13595  13FB  0023               	movlb	3	; select bank3
 13596  13FC  00AD               	movwf	((_cellVoltages+1)^(0+384)+2)
 13597                           
 13598                           ;BQ76920.c: 255:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13599  13FD  3018               	movlw	24
 13600  13FE  00F5               	movwf	readRegister@slaveAddress
 13601  13FF  3000               	movlw	0
 13602  1400  00F6               	movwf	readRegister@slaveAddress+1
 13603  1401  3010               	movlw	16
 13604  1402  00F7               	movwf	readRegister@regAddress
 13605  1403  3000               	movlw	0
 13606  1404  00F8               	movwf	readRegister@regAddress+1
 13607  1405  31B5  2587  3192   	fcall	_readRegister
 13608  1408  303F               	movlw	63
 13609  1409  0575               	andwf	?_readRegister,w
 13610  140A  0021               	movlb	1	; select bank1
 13611  140B  00B1               	movwf	??_updateVoltages^(0+128)
 13612  140C  3000               	movlw	0
 13613  140D  0576               	andwf	?_readRegister+1,w
 13614  140E  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13615  140F  0831               	movf	??_updateVoltages^(0+128),w
 13616  1410  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13617  1411  01B1               	clrf	??_updateVoltages^(0+128)
 13618  1412  3018               	movlw	24
 13619  1413  00F5               	movwf	readRegister@slaveAddress
 13620  1414  3000               	movlw	0
 13621  1415  00F6               	movwf	readRegister@slaveAddress+1
 13622  1416  3011               	movlw	17
 13623  1417  00F7               	movwf	readRegister@regAddress
 13624  1418  3000               	movlw	0
 13625  1419  00F8               	movwf	readRegister@regAddress+1
 13626  141A  31B5  2587  3192   	fcall	_readRegister
 13627  141D  0875               	movf	?_readRegister,w
 13628  141E  0021               	movlb	1	; select bank1
 13629  141F  0431               	iorwf	??_updateVoltages^(0+128),w
 13630  1420  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13631  1421  0876               	movf	?_readRegister+1,w
 13632  1422  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13633  1423  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13634  1424  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13635  1425  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13636  1426  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13637  1427  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13638  1428  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13639                           
 13640                           ;BQ76920.c: 256:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13641  1429  3000               	movlw	0
 13642  142A  0020               	movlb	0	; select bank0
 13643  142B  00A7               	movwf	___aldiv@divisor+3
 13644  142C  3000               	movlw	0
 13645  142D  00A6               	movwf	___aldiv@divisor+2
 13646  142E  3003               	movlw	3
 13647  142F  00A5               	movwf	___aldiv@divisor+1
 13648  1430  30E8               	movlw	232
 13649  1431  00A4               	movwf	___aldiv@divisor
 13650  1432  0022               	movlb	2	; select bank2
 13651  1433  086E               	movf	_adcGain^(0+256),w
 13652  1434  00F1               	movwf	___lmul@multiplier
 13653  1435  086F               	movf	(_adcGain+1)^(0+256),w
 13654  1436  00F2               	movwf	___lmul@multiplier+1
 13655  1437  0D89               	rlf	9,f
 13656  1438  3B89               	subwfb	9,f
 13657  1439  0989               	comf	9,f
 13658  143A  00F3               	movwf	___lmul@multiplier+2
 13659  143B  00F4               	movwf	___lmul@multiplier+3
 13660  143C  0021               	movlb	1	; select bank1
 13661  143D  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13662  143E  00F8               	movwf	___lmul@multiplicand+3
 13663  143F  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13664  1440  00F7               	movwf	___lmul@multiplicand+2
 13665  1441  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13666  1442  00F6               	movwf	___lmul@multiplicand+1
 13667  1443  0838               	movf	updateVoltages@adcVal^(0+128),w
 13668  1444  00F5               	movwf	___lmul@multiplicand
 13669  1445  31B4  24EB  3192   	fcall	___lmul
 13670  1448  0874               	movf	?___lmul+3,w
 13671  1449  0020               	movlb	0	; select bank0
 13672  144A  00AB               	movwf	___aldiv@dividend+3
 13673  144B  0873               	movf	?___lmul+2,w
 13674  144C  00AA               	movwf	___aldiv@dividend+2
 13675  144D  0872               	movf	?___lmul+1,w
 13676  144E  00A9               	movwf	___aldiv@dividend+1
 13677  144F  0871               	movf	?___lmul,w
 13678  1450  00A8               	movwf	___aldiv@dividend
 13679  1451  31AB  2361  3192   	fcall	___aldiv
 13680  1454  0022               	movlb	2	; select bank2
 13681  1455  086A               	movf	_adcOffset^(0+256),w
 13682  1456  0020               	movlb	0	; select bank0
 13683  1457  0724               	addwf	?___aldiv,w
 13684  1458  0023               	movlb	3	; select bank3
 13685  1459  00AE               	movwf	(_cellVoltages^(0+384)+4)
 13686  145A  0022               	movlb	2	; select bank2
 13687  145B  086B               	movf	(_adcOffset+1)^(0+256),w
 13688  145C  0020               	movlb	0	; select bank0
 13689  145D  3D25               	addwfc	?___aldiv+1,w
 13690  145E  0023               	movlb	3	; select bank3
 13691  145F  00AF               	movwf	((_cellVoltages+1)^(0+384)+4)
 13692                           
 13693                           ;BQ76920.c: 257:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13694  1460  3018               	movlw	24
 13695  1461  00F5               	movwf	readRegister@slaveAddress
 13696  1462  3000               	movlw	0
 13697  1463  00F6               	movwf	readRegister@slaveAddress+1
 13698  1464  3012               	movlw	18
 13699  1465  00F7               	movwf	readRegister@regAddress
 13700  1466  3000               	movlw	0
 13701  1467  00F8               	movwf	readRegister@regAddress+1
 13702  1468  31B5  2587  3192   	fcall	_readRegister
 13703  146B  303F               	movlw	63
 13704  146C  0575               	andwf	?_readRegister,w
 13705  146D  0021               	movlb	1	; select bank1
 13706  146E  00B1               	movwf	??_updateVoltages^(0+128)
 13707  146F  3000               	movlw	0
 13708  1470  0576               	andwf	?_readRegister+1,w
 13709  1471  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13710  1472  0831               	movf	??_updateVoltages^(0+128),w
 13711  1473  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13712  1474  01B1               	clrf	??_updateVoltages^(0+128)
 13713  1475  3018               	movlw	24
 13714  1476  00F5               	movwf	readRegister@slaveAddress
 13715  1477  3000               	movlw	0
 13716  1478  00F6               	movwf	readRegister@slaveAddress+1
 13717  1479  3013               	movlw	19
 13718  147A  00F7               	movwf	readRegister@regAddress
 13719  147B  3000               	movlw	0
 13720  147C  00F8               	movwf	readRegister@regAddress+1
 13721  147D  31B5  2587  3192   	fcall	_readRegister
 13722  1480  0875               	movf	?_readRegister,w
 13723  1481  0021               	movlb	1	; select bank1
 13724  1482  0431               	iorwf	??_updateVoltages^(0+128),w
 13725  1483  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13726  1484  0876               	movf	?_readRegister+1,w
 13727  1485  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13728  1486  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13729  1487  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13730  1488  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13731  1489  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13732  148A  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13733  148B  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13734                           
 13735                           ;BQ76920.c: 258:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13736  148C  3000               	movlw	0
 13737  148D  0020               	movlb	0	; select bank0
 13738  148E  00A7               	movwf	___aldiv@divisor+3
 13739  148F  3000               	movlw	0
 13740  1490  00A6               	movwf	___aldiv@divisor+2
 13741  1491  3003               	movlw	3
 13742  1492  00A5               	movwf	___aldiv@divisor+1
 13743  1493  30E8               	movlw	232
 13744  1494  00A4               	movwf	___aldiv@divisor
 13745  1495  0022               	movlb	2	; select bank2
 13746  1496  086E               	movf	_adcGain^(0+256),w
 13747  1497  00F1               	movwf	___lmul@multiplier
 13748  1498  086F               	movf	(_adcGain+1)^(0+256),w
 13749  1499  00F2               	movwf	___lmul@multiplier+1
 13750  149A  0D89               	rlf	9,f
 13751  149B  3B89               	subwfb	9,f
 13752  149C  0989               	comf	9,f
 13753  149D  00F3               	movwf	___lmul@multiplier+2
 13754  149E  00F4               	movwf	___lmul@multiplier+3
 13755  149F  0021               	movlb	1	; select bank1
 13756  14A0  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13757  14A1  00F8               	movwf	___lmul@multiplicand+3
 13758  14A2  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13759  14A3  00F7               	movwf	___lmul@multiplicand+2
 13760  14A4  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13761  14A5  00F6               	movwf	___lmul@multiplicand+1
 13762  14A6  0838               	movf	updateVoltages@adcVal^(0+128),w
 13763  14A7  00F5               	movwf	___lmul@multiplicand
 13764  14A8  31B4  24EB  3192   	fcall	___lmul
 13765  14AB  0874               	movf	?___lmul+3,w
 13766  14AC  0020               	movlb	0	; select bank0
 13767  14AD  00AB               	movwf	___aldiv@dividend+3
 13768  14AE  0873               	movf	?___lmul+2,w
 13769  14AF  00AA               	movwf	___aldiv@dividend+2
 13770  14B0  0872               	movf	?___lmul+1,w
 13771  14B1  00A9               	movwf	___aldiv@dividend+1
 13772  14B2  0871               	movf	?___lmul,w
 13773  14B3  00A8               	movwf	___aldiv@dividend
 13774  14B4  31AB  2361  3192   	fcall	___aldiv
 13775  14B7  0022               	movlb	2	; select bank2
 13776  14B8  086A               	movf	_adcOffset^(0+256),w
 13777  14B9  0020               	movlb	0	; select bank0
 13778  14BA  0724               	addwf	?___aldiv,w
 13779  14BB  0023               	movlb	3	; select bank3
 13780  14BC  00B0               	movwf	(_cellVoltages^(0+384)+6)
 13781  14BD  0022               	movlb	2	; select bank2
 13782  14BE  086B               	movf	(_adcOffset+1)^(0+256),w
 13783  14BF  0020               	movlb	0	; select bank0
 13784  14C0  3D25               	addwfc	?___aldiv+1,w
 13785  14C1  0023               	movlb	3	; select bank3
 13786  14C2  00B1               	movwf	((_cellVoltages+1)^(0+384)+6)
 13787                           
 13788                           ;BQ76920.c: 259:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13789  14C3  3018               	movlw	24
 13790  14C4  00F5               	movwf	readRegister@slaveAddress
 13791  14C5  3000               	movlw	0
 13792  14C6  00F6               	movwf	readRegister@slaveAddress+1
 13793  14C7  3014               	movlw	20
 13794  14C8  00F7               	movwf	readRegister@regAddress
 13795  14C9  3000               	movlw	0
 13796  14CA  00F8               	movwf	readRegister@regAddress+1
 13797  14CB  31B5  2587  3192   	fcall	_readRegister
 13798  14CE  303F               	movlw	63
 13799  14CF  0575               	andwf	?_readRegister,w
 13800  14D0  0021               	movlb	1	; select bank1
 13801  14D1  00B1               	movwf	??_updateVoltages^(0+128)
 13802  14D2  3000               	movlw	0
 13803  14D3  0576               	andwf	?_readRegister+1,w
 13804  14D4  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13805  14D5  0831               	movf	??_updateVoltages^(0+128),w
 13806  14D6  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13807  14D7  01B1               	clrf	??_updateVoltages^(0+128)
 13808  14D8  3018               	movlw	24
 13809  14D9  00F5               	movwf	readRegister@slaveAddress
 13810  14DA  3000               	movlw	0
 13811  14DB  00F6               	movwf	readRegister@slaveAddress+1
 13812  14DC  3015               	movlw	21
 13813  14DD  00F7               	movwf	readRegister@regAddress
 13814  14DE  3000               	movlw	0
 13815  14DF  00F8               	movwf	readRegister@regAddress+1
 13816  14E0  31B5  2587  3192   	fcall	_readRegister
 13817  14E3  0875               	movf	?_readRegister,w
 13818  14E4  0021               	movlb	1	; select bank1
 13819  14E5  0431               	iorwf	??_updateVoltages^(0+128),w
 13820  14E6  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13821  14E7  0876               	movf	?_readRegister+1,w
 13822  14E8  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13823  14E9  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13824  14EA  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13825  14EB  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13826  14EC  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13827  14ED  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13828  14EE  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13829                           
 13830                           ;BQ76920.c: 260:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13831  14EF  3000               	movlw	0
 13832  14F0  0020               	movlb	0	; select bank0
 13833  14F1  00A7               	movwf	___aldiv@divisor+3
 13834  14F2  3000               	movlw	0
 13835  14F3  00A6               	movwf	___aldiv@divisor+2
 13836  14F4  3003               	movlw	3
 13837  14F5  00A5               	movwf	___aldiv@divisor+1
 13838  14F6  30E8               	movlw	232
 13839  14F7  00A4               	movwf	___aldiv@divisor
 13840  14F8  0022               	movlb	2	; select bank2
 13841  14F9  086E               	movf	_adcGain^(0+256),w
 13842  14FA  00F1               	movwf	___lmul@multiplier
 13843  14FB  086F               	movf	(_adcGain+1)^(0+256),w
 13844  14FC  00F2               	movwf	___lmul@multiplier+1
 13845  14FD  0D89               	rlf	9,f
 13846  14FE  3B89               	subwfb	9,f
 13847  14FF  0989               	comf	9,f
 13848  1500  00F3               	movwf	___lmul@multiplier+2
 13849  1501  00F4               	movwf	___lmul@multiplier+3
 13850  1502  0021               	movlb	1	; select bank1
 13851  1503  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13852  1504  00F8               	movwf	___lmul@multiplicand+3
 13853  1505  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13854  1506  00F7               	movwf	___lmul@multiplicand+2
 13855  1507  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13856  1508  00F6               	movwf	___lmul@multiplicand+1
 13857  1509  0838               	movf	updateVoltages@adcVal^(0+128),w
 13858  150A  00F5               	movwf	___lmul@multiplicand
 13859  150B  31B4  24EB  3192   	fcall	___lmul
 13860  150E  0874               	movf	?___lmul+3,w
 13861  150F  0020               	movlb	0	; select bank0
 13862  1510  00AB               	movwf	___aldiv@dividend+3
 13863  1511  0873               	movf	?___lmul+2,w
 13864  1512  00AA               	movwf	___aldiv@dividend+2
 13865  1513  0872               	movf	?___lmul+1,w
 13866  1514  00A9               	movwf	___aldiv@dividend+1
 13867  1515  0871               	movf	?___lmul,w
 13868  1516  00A8               	movwf	___aldiv@dividend
 13869  1517  31AB  2361         	fcall	___aldiv
 13870  1519  0022               	movlb	2	; select bank2
 13871  151A  086A               	movf	_adcOffset^(0+256),w
 13872  151B  0020               	movlb	0	; select bank0
 13873  151C  0724               	addwf	?___aldiv,w
 13874  151D  0023               	movlb	3	; select bank3
 13875  151E  00B2               	movwf	(_cellVoltages^(0+384)+8)
 13876  151F  0022               	movlb	2	; select bank2
 13877  1520  086B               	movf	(_adcOffset+1)^(0+256),w
 13878  1521  0020               	movlb	0	; select bank0
 13879  1522  3D25               	addwfc	?___aldiv+1,w
 13880  1523  0023               	movlb	3	; select bank3
 13881  1524  00B3               	movwf	((_cellVoltages+1)^(0+384)+8)
 13882  1525  0008               	return
 13883  1526                     __end_of_updateVoltages:	
 13884                           
 13885                           	psect	text48
 13886  34EB                     __ptext48:	
 13887 ;; *************** function ___lmul *****************
 13888 ;; Defined at:
 13889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13890 ;; Parameters:    Size  Location     Type
 13891 ;;  multiplier      4    1[COMMON] unsigned long 
 13892 ;;  multiplicand    4    5[COMMON] unsigned long 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  product         4    0[BANK0 ] unsigned long 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  4    1[COMMON] unsigned long 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13904 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13907 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13908 ;;Total ram usage:       12 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:    1
 13911 ;; This function calls:
 13912 ;;		Nothing
 13913 ;; This function is called by:
 13914 ;;		_setCellUndervoltageProtection
 13915 ;;		_setCellOvervoltageProtection
 13916 ;;		_updateVoltages
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           
 13921                           ;psect for function ___lmul
 13922  34EB                     ___lmul:	
 13923                           
 13924                           ;incstack = 0
 13925                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13926  34EB  3000               	movlw	0
 13927  34EC  0020               	movlb	0	; select bank0
 13928  34ED  00A3               	movwf	___lmul@product+3
 13929  34EE  3000               	movlw	0
 13930  34EF  00A2               	movwf	___lmul@product+2
 13931  34F0  3000               	movlw	0
 13932  34F1  00A1               	movwf	___lmul@product+1
 13933  34F2  3000               	movlw	0
 13934  34F3  00A0               	movwf	___lmul@product
 13935  34F4                     l7363:	
 13936  34F4  1C71               	btfss	___lmul@multiplier,0
 13937  34F5  2CFF               	goto	l7367
 13938  34F6  0875               	movf	___lmul@multiplicand,w
 13939  34F7  0020               	movlb	0	; select bank0
 13940  34F8  07A0               	addwf	___lmul@product,f
 13941  34F9  0876               	movf	___lmul@multiplicand+1,w
 13942  34FA  3DA1               	addwfc	___lmul@product+1,f
 13943  34FB  0877               	movf	___lmul@multiplicand+2,w
 13944  34FC  3DA2               	addwfc	___lmul@product+2,f
 13945  34FD  0878               	movf	___lmul@multiplicand+3,w
 13946  34FE  3DA3               	addwfc	___lmul@product+3,f
 13947  34FF                     l7367:	
 13948  34FF  3001               	movlw	1
 13949  3500                     u9185:	
 13950  3500  35F5               	lslf	___lmul@multiplicand,f
 13951  3501  0DF6               	rlf	___lmul@multiplicand+1,f
 13952  3502  0DF7               	rlf	___lmul@multiplicand+2,f
 13953  3503  0DF8               	rlf	___lmul@multiplicand+3,f
 13954  3504  0B89               	decfsz	9,f
 13955  3505  2D00               	goto	u9185
 13956  3506  3001               	movlw	1
 13957  3507                     u9195:	
 13958  3507  36F4               	lsrf	___lmul@multiplier+3,f
 13959  3508  0CF3               	rrf	___lmul@multiplier+2,f
 13960  3509  0CF2               	rrf	___lmul@multiplier+1,f
 13961  350A  0CF1               	rrf	___lmul@multiplier,f
 13962  350B  0B89               	decfsz	9,f
 13963  350C  2D07               	goto	u9195
 13964  350D  0874               	movf	___lmul@multiplier+3,w
 13965  350E  0473               	iorwf	___lmul@multiplier+2,w
 13966  350F  0472               	iorwf	___lmul@multiplier+1,w
 13967  3510  0471               	iorwf	___lmul@multiplier,w
 13968  3511  1D03               	skipz
 13969  3512  2CF4               	goto	l7363
 13970  3513  0020               	movlb	0	; select bank0
 13971  3514  0823               	movf	___lmul@product+3,w
 13972  3515  00F4               	movwf	?___lmul+3
 13973  3516  0822               	movf	___lmul@product+2,w
 13974  3517  00F3               	movwf	?___lmul+2
 13975  3518  0821               	movf	___lmul@product+1,w
 13976  3519  00F2               	movwf	?___lmul+1
 13977  351A  0820               	movf	___lmul@product,w
 13978  351B  00F1               	movwf	?___lmul
 13979  351C  0008               	return
 13980  351D                     __end_of___lmul:	
 13981                           
 13982                           	psect	text49
 13983  1526                     __ptext49:	
 13984 ;; *************** function _updateTemperatures *****************
 13985 ;; Defined at:
 13986 ;;		line 267 in file "BQ76920.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;  tmp             4   67[BANK1 ] float 
 13991 ;;  vtsx            2   73[BANK1 ] int 
 13992 ;;  adcVal          2   71[BANK1 ] int 
 13993 ;; Return value:  Size  Location     Type
 13994 ;;                  1    wreg      void 
 13995 ;; Registers used:
 13996 ;;		wreg, status,2, status,0, pclath, cstack
 13997 ;; Tracked objects:
 13998 ;;		On entry : 0/0
 13999 ;;		On exit  : 0/0
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14003 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14004 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14005 ;;      Totals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14006 ;;Total ram usage:       55 bytes
 14007 ;; Hardware stack levels used:    1
 14008 ;; Hardware stack levels required when called:    4
 14009 ;; This function calls:
 14010 ;;		___fladd
 14011 ;;		___fldiv
 14012 ;;		___flmul
 14013 ;;		___flsub
 14014 ;;		___fltol
 14015 ;;		___xxtofl
 14016 ;;		_logf
 14017 ;;		_readRegister
 14018 ;; This function is called by:
 14019 ;;		_AFE_UPDATE
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           
 14024                           ;psect for function _updateTemperatures
 14025  1526                     _updateTemperatures:	
 14026                           
 14027                           ;BQ76920.c: 273:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14028                           
 14029                           ;incstack = 0
 14030                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14031  1526  3018               	movlw	24
 14032  1527  00F5               	movwf	readRegister@slaveAddress
 14033  1528  3000               	movlw	0
 14034  1529  00F6               	movwf	readRegister@slaveAddress+1
 14035  152A  302C               	movlw	44
 14036  152B  00F7               	movwf	readRegister@regAddress
 14037  152C  3000               	movlw	0
 14038  152D  00F8               	movwf	readRegister@regAddress+1
 14039  152E  31B5  2587  3195   	fcall	_readRegister
 14040  1531  303F               	movlw	63
 14041  1532  0575               	andwf	?_readRegister,w
 14042  1533  0021               	movlb	1	; select bank1
 14043  1534  00B4               	movwf	??_updateTemperatures^(0+128)
 14044  1535  3000               	movlw	0
 14045  1536  0576               	andwf	?_readRegister+1,w
 14046  1537  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14047  1538  0834               	movf	??_updateTemperatures^(0+128),w
 14048  1539  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14049  153A  01B4               	clrf	??_updateTemperatures^(0+128)
 14050  153B  3018               	movlw	24
 14051  153C  00F5               	movwf	readRegister@slaveAddress
 14052  153D  3000               	movlw	0
 14053  153E  00F6               	movwf	readRegister@slaveAddress+1
 14054  153F  302D               	movlw	45
 14055  1540  00F7               	movwf	readRegister@regAddress
 14056  1541  3000               	movlw	0
 14057  1542  00F8               	movwf	readRegister@regAddress+1
 14058  1543  31B5  2587  3195   	fcall	_readRegister
 14059  1546  0875               	movf	?_readRegister,w
 14060  1547  0021               	movlb	1	; select bank1
 14061  1548  0434               	iorwf	??_updateTemperatures^(0+128),w
 14062  1549  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14063  154A  0876               	movf	?_readRegister+1,w
 14064  154B  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14065  154C  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14066                           
 14067                           ;BQ76920.c: 274:      vtsx = adcVal * 0.382;
 14068  154D  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14069  154E  00F1               	movwf	___xxtofl@val
 14070  154F  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14071  1550  00F2               	movwf	___xxtofl@val+1
 14072  1551  0D89               	rlf	9,f
 14073  1552  3B89               	subwfb	9,f
 14074  1553  0989               	comf	9,f
 14075  1554  00F3               	movwf	___xxtofl@val+2
 14076  1555  00F4               	movwf	___xxtofl@val+3
 14077  1556  3001               	movlw	1
 14078  1557  31AB  23E3  3195   	fcall	___xxtofl
 14079  155A  0874               	movf	?___xxtofl+3,w
 14080  155B  0020               	movlb	0	; select bank0
 14081  155C  00AD               	movwf	___flmul@a+3
 14082  155D  0873               	movf	?___xxtofl+2,w
 14083  155E  00AC               	movwf	___flmul@a+2
 14084  155F  0872               	movf	?___xxtofl+1,w
 14085  1560  00AB               	movwf	___flmul@a+1
 14086  1561  0871               	movf	?___xxtofl,w
 14087  1562  00AA               	movwf	___flmul@a
 14088  1563  303E               	movlw	62
 14089  1564  00A9               	movwf	___flmul@b+3
 14090  1565  30C3               	movlw	195
 14091  1566  00A8               	movwf	___flmul@b+2
 14092  1567  3095               	movlw	149
 14093  1568  00A7               	movwf	___flmul@b+1
 14094  1569  3081               	movlw	129
 14095  156A  00A6               	movwf	___flmul@b
 14096  156B  3190  2022  3195   	fcall	___flmul
 14097  156E  0020               	movlb	0	; select bank0
 14098  156F  0829               	movf	?___flmul+3,w
 14099  1570  0021               	movlb	1	; select bank1
 14100  1571  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14101  1572  0020               	movlb	0	; select bank0
 14102  1573  0828               	movf	?___flmul+2,w
 14103  1574  0021               	movlb	1	; select bank1
 14104  1575  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14105  1576  0020               	movlb	0	; select bank0
 14106  1577  0827               	movf	?___flmul+1,w
 14107  1578  0021               	movlb	1	; select bank1
 14108  1579  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14109  157A  0020               	movlb	0	; select bank0
 14110  157B  0826               	movf	?___flmul,w
 14111  157C  0021               	movlb	1	; select bank1
 14112  157D  00A8               	movwf	___fltol@f1^(0+128)
 14113  157E  31A8  20A3  3195   	fcall	___fltol
 14114  1581  0021               	movlb	1	; select bank1
 14115  1582  0829               	movf	(?___fltol+1)^(0+128),w
 14116  1583  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14117  1584  0828               	movf	?___fltol^(0+128),w
 14118  1585  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14119                           
 14120                           ;BQ76920.c: 275:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14121  1586  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14122  1587  00F1               	movwf	___xxtofl@val
 14123  1588  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14124  1589  00F2               	movwf	___xxtofl@val+1
 14125  158A  0D89               	rlf	9,f
 14126  158B  3B89               	subwfb	9,f
 14127  158C  0989               	comf	9,f
 14128  158D  00F3               	movwf	___xxtofl@val+2
 14129  158E  00F4               	movwf	___xxtofl@val+3
 14130  158F  3001               	movlw	1
 14131  1590  31AB  23E3  3195   	fcall	___xxtofl
 14132  1593  0874               	movf	?___xxtofl+3,w
 14133  1594  0020               	movlb	0	; select bank0
 14134  1595  00AD               	movwf	___flmul@a+3
 14135  1596  0873               	movf	?___xxtofl+2,w
 14136  1597  00AC               	movwf	___flmul@a+2
 14137  1598  0872               	movf	?___xxtofl+1,w
 14138  1599  00AB               	movwf	___flmul@a+1
 14139  159A  0871               	movf	?___xxtofl,w
 14140  159B  00AA               	movwf	___flmul@a
 14141  159C  3046               	movlw	70
 14142  159D  00A9               	movwf	___flmul@b+3
 14143  159E  301C               	movlw	28
 14144  159F  00A8               	movwf	___flmul@b+2
 14145  15A0  3040               	movlw	64
 14146  15A1  00A7               	movwf	___flmul@b+1
 14147  15A2  3000               	movlw	0
 14148  15A3  00A6               	movwf	___flmul@b
 14149  15A4  3190  2022  3195   	fcall	___flmul
 14150  15A7  0020               	movlb	0	; select bank0
 14151  15A8  0829               	movf	?___flmul+3,w
 14152  15A9  00C7               	movwf	___fldiv@b+3
 14153  15AA  0828               	movf	?___flmul+2,w
 14154  15AB  00C6               	movwf	___fldiv@b+2
 14155  15AC  0827               	movf	?___flmul+1,w
 14156  15AD  00C5               	movwf	___fldiv@b+1
 14157  15AE  0826               	movf	?___flmul,w
 14158  15AF  00C4               	movwf	___fldiv@b
 14159  15B0  3045               	movlw	69
 14160  15B1  0021               	movlb	1	; select bank1
 14161  15B2  00A7               	movwf	(___flsub@b+3)^(0+128)
 14162  15B3  304E               	movlw	78
 14163  15B4  00A6               	movwf	(___flsub@b+2)^(0+128)
 14164  15B5  3040               	movlw	64
 14165  15B6  00A5               	movwf	(___flsub@b+1)^(0+128)
 14166  15B7  3000               	movlw	0
 14167  15B8  00A4               	movwf	___flsub@b^(0+128)
 14168  15B9  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14169  15BA  00F1               	movwf	___xxtofl@val
 14170  15BB  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14171  15BC  00F2               	movwf	___xxtofl@val+1
 14172  15BD  0D89               	rlf	9,f
 14173  15BE  3B89               	subwfb	9,f
 14174  15BF  0989               	comf	9,f
 14175  15C0  00F3               	movwf	___xxtofl@val+2
 14176  15C1  00F4               	movwf	___xxtofl@val+3
 14177  15C2  3001               	movlw	1
 14178  15C3  31AB  23E3  3195   	fcall	___xxtofl
 14179  15C6  0874               	movf	?___xxtofl+3,w
 14180  15C7  0021               	movlb	1	; select bank1
 14181  15C8  00A3               	movwf	(___flsub@a+3)^(0+128)
 14182  15C9  0873               	movf	?___xxtofl+2,w
 14183  15CA  00A2               	movwf	(___flsub@a+2)^(0+128)
 14184  15CB  0872               	movf	?___xxtofl+1,w
 14185  15CC  00A1               	movwf	(___flsub@a+1)^(0+128)
 14186  15CD  0871               	movf	?___xxtofl,w
 14187  15CE  00A0               	movwf	___flsub@a^(0+128)
 14188  15CF  31B5  251D  3195   	fcall	___flsub
 14189  15D2  0021               	movlb	1	; select bank1
 14190  15D3  0823               	movf	(?___flsub+3)^(0+128),w
 14191  15D4  0020               	movlb	0	; select bank0
 14192  15D5  00C3               	movwf	___fldiv@a+3
 14193  15D6  0021               	movlb	1	; select bank1
 14194  15D7  0822               	movf	(?___flsub+2)^(0+128),w
 14195  15D8  0020               	movlb	0	; select bank0
 14196  15D9  00C2               	movwf	___fldiv@a+2
 14197  15DA  0021               	movlb	1	; select bank1
 14198  15DB  0821               	movf	(?___flsub+1)^(0+128),w
 14199  15DC  0020               	movlb	0	; select bank0
 14200  15DD  00C1               	movwf	___fldiv@a+1
 14201  15DE  0021               	movlb	1	; select bank1
 14202  15DF  0820               	movf	?___flsub^(0+128),w
 14203  15E0  0020               	movlb	0	; select bank0
 14204  15E1  00C0               	movwf	___fldiv@a
 14205  15E2  319C  24E2  3195   	fcall	___fldiv
 14206  15E5  0020               	movlb	0	; select bank0
 14207  15E6  0843               	movf	?___fldiv+3,w
 14208  15E7  0021               	movlb	1	; select bank1
 14209  15E8  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14210  15E9  0020               	movlb	0	; select bank0
 14211  15EA  0842               	movf	?___fldiv+2,w
 14212  15EB  0021               	movlb	1	; select bank1
 14213  15EC  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14214  15ED  0020               	movlb	0	; select bank0
 14215  15EE  0841               	movf	?___fldiv+1,w
 14216  15EF  0021               	movlb	1	; select bank1
 14217  15F0  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14218  15F1  0020               	movlb	0	; select bank0
 14219  15F2  0840               	movf	?___fldiv,w
 14220  15F3  0021               	movlb	1	; select bank1
 14221  15F4  00A8               	movwf	___fltol@f1^(0+128)
 14222  15F5  31A8  20A3  3195   	fcall	___fltol
 14223  15F8  0021               	movlb	1	; select bank1
 14224  15F9  082B               	movf	(?___fltol+3)^(0+128),w
 14225  15FA  0023               	movlb	3	; select bank3
 14226  15FB  00BF               	movwf	(_rts+3)^(0+384)
 14227  15FC  0021               	movlb	1	; select bank1
 14228  15FD  082A               	movf	(?___fltol+2)^(0+128),w
 14229  15FE  0023               	movlb	3	; select bank3
 14230  15FF  00BE               	movwf	(_rts+2)^(0+384)
 14231  1600  0021               	movlb	1	; select bank1
 14232  1601  0829               	movf	(?___fltol+1)^(0+128),w
 14233  1602  0023               	movlb	3	; select bank3
 14234  1603  00BD               	movwf	(_rts+1)^(0+384)
 14235  1604  0021               	movlb	1	; select bank1
 14236  1605  0828               	movf	?___fltol^(0+128),w
 14237  1606  0023               	movlb	3	; select bank3
 14238  1607  00BC               	movwf	_rts^(0+384)
 14239                           
 14240                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14241  1608  083F               	movf	(_rts+3)^(0+384),w
 14242  1609  00F4               	movwf	___xxtofl@val+3
 14243  160A  083E               	movf	(_rts+2)^(0+384),w
 14244  160B  00F3               	movwf	___xxtofl@val+2
 14245  160C  083D               	movf	(_rts+1)^(0+384),w
 14246  160D  00F2               	movwf	___xxtofl@val+1
 14247  160E  083C               	movf	_rts^(0+384),w
 14248  160F  00F1               	movwf	___xxtofl@val
 14249  1610  3000               	movlw	0
 14250  1611  31AB  23E3  3195   	fcall	___xxtofl
 14251  1614  0874               	movf	?___xxtofl+3,w
 14252  1615  0021               	movlb	1	; select bank1
 14253  1616  00BA               	movwf	(_updateTemperatures$2264+3)^(0+128)
 14254  1617  0873               	movf	?___xxtofl+2,w
 14255  1618  00B9               	movwf	(_updateTemperatures$2264+2)^(0+128)
 14256  1619  0872               	movf	?___xxtofl+1,w
 14257  161A  00B8               	movwf	(_updateTemperatures$2264+1)^(0+128)
 14258  161B  0871               	movf	?___xxtofl,w
 14259  161C  00B7               	movwf	_updateTemperatures$2264^(0+128)
 14260                           
 14261                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14262  161D  0023               	movlb	3	; select bank3
 14263  161E  083F               	movf	(_rts+3)^(0+384),w
 14264  161F  00F4               	movwf	___xxtofl@val+3
 14265  1620  083E               	movf	(_rts+2)^(0+384),w
 14266  1621  00F3               	movwf	___xxtofl@val+2
 14267  1622  083D               	movf	(_rts+1)^(0+384),w
 14268  1623  00F2               	movwf	___xxtofl@val+1
 14269  1624  083C               	movf	_rts^(0+384),w
 14270  1625  00F1               	movwf	___xxtofl@val
 14271  1626  3000               	movlw	0
 14272  1627  31AB  23E3  3195   	fcall	___xxtofl
 14273  162A  0874               	movf	?___xxtofl+3,w
 14274  162B  0021               	movlb	1	; select bank1
 14275  162C  00BE               	movwf	(_updateTemperatures$2265+3)^(0+128)
 14276  162D  0873               	movf	?___xxtofl+2,w
 14277  162E  00BD               	movwf	(_updateTemperatures$2265+2)^(0+128)
 14278  162F  0872               	movf	?___xxtofl+1,w
 14279  1630  00BC               	movwf	(_updateTemperatures$2265+1)^(0+128)
 14280  1631  0871               	movf	?___xxtofl,w
 14281  1632  00BB               	movwf	_updateTemperatures$2265^(0+128)
 14282                           
 14283                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14284  1633  0023               	movlb	3	; select bank3
 14285  1634  083F               	movf	(_rts+3)^(0+384),w
 14286  1635  00F4               	movwf	___xxtofl@val+3
 14287  1636  083E               	movf	(_rts+2)^(0+384),w
 14288  1637  00F3               	movwf	___xxtofl@val+2
 14289  1638  083D               	movf	(_rts+1)^(0+384),w
 14290  1639  00F2               	movwf	___xxtofl@val+1
 14291  163A  083C               	movf	_rts^(0+384),w
 14292  163B  00F1               	movwf	___xxtofl@val
 14293  163C  3000               	movlw	0
 14294  163D  31AB  23E3  3195   	fcall	___xxtofl
 14295  1640  0874               	movf	?___xxtofl+3,w
 14296  1641  0021               	movlb	1	; select bank1
 14297  1642  00C2               	movwf	(_updateTemperatures$2266+3)^(0+128)
 14298  1643  0873               	movf	?___xxtofl+2,w
 14299  1644  00C1               	movwf	(_updateTemperatures$2266+2)^(0+128)
 14300  1645  0872               	movf	?___xxtofl+1,w
 14301  1646  00C0               	movwf	(_updateTemperatures$2266+1)^(0+128)
 14302  1647  0871               	movf	?___xxtofl,w
 14303  1648  00BF               	movwf	_updateTemperatures$2266^(0+128)
 14304                           
 14305                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14306  1649  083E               	movf	(_updateTemperatures$2265+3)^(0+128),w
 14307  164A  00AB               	movwf	(logf@x+3)^(0+128)
 14308  164B  083D               	movf	(_updateTemperatures$2265+2)^(0+128),w
 14309  164C  00AA               	movwf	(logf@x+2)^(0+128)
 14310  164D  083C               	movf	(_updateTemperatures$2265+1)^(0+128),w
 14311  164E  00A9               	movwf	(logf@x+1)^(0+128)
 14312  164F  083B               	movf	_updateTemperatures$2265^(0+128),w
 14313  1650  00A8               	movwf	logf@x^(0+128)
 14314  1651  3180  2074  3195   	fcall	_logf
 14315  1654  0021               	movlb	1	; select bank1
 14316  1655  082B               	movf	(?_logf+3)^(0+128),w
 14317  1656  00C6               	movwf	(_updateTemperatures$2267+3)^(0+128)
 14318  1657  082A               	movf	(?_logf+2)^(0+128),w
 14319  1658  00C5               	movwf	(_updateTemperatures$2267+2)^(0+128)
 14320  1659  0829               	movf	(?_logf+1)^(0+128),w
 14321  165A  00C4               	movwf	(_updateTemperatures$2267+1)^(0+128)
 14322  165B  0828               	movf	?_logf^(0+128),w
 14323  165C  00C3               	movwf	_updateTemperatures$2267^(0+128)
 14324                           
 14325                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14326  165D  0842               	movf	(_updateTemperatures$2266+3)^(0+128),w
 14327  165E  00AB               	movwf	(logf@x+3)^(0+128)
 14328  165F  0841               	movf	(_updateTemperatures$2266+2)^(0+128),w
 14329  1660  00AA               	movwf	(logf@x+2)^(0+128)
 14330  1661  0840               	movf	(_updateTemperatures$2266+1)^(0+128),w
 14331  1662  00A9               	movwf	(logf@x+1)^(0+128)
 14332  1663  083F               	movf	_updateTemperatures$2266^(0+128),w
 14333  1664  00A8               	movwf	logf@x^(0+128)
 14334  1665  3180  2074  3195   	fcall	_logf
 14335  1668  0021               	movlb	1	; select bank1
 14336  1669  082B               	movf	(?_logf+3)^(0+128),w
 14337  166A  00CA               	movwf	(_updateTemperatures$2268+3)^(0+128)
 14338  166B  082A               	movf	(?_logf+2)^(0+128),w
 14339  166C  00C9               	movwf	(_updateTemperatures$2268+2)^(0+128)
 14340  166D  0829               	movf	(?_logf+1)^(0+128),w
 14341  166E  00C8               	movwf	(_updateTemperatures$2268+1)^(0+128)
 14342  166F  0828               	movf	?_logf^(0+128),w
 14343  1670  00C7               	movwf	_updateTemperatures$2268^(0+128)
 14344                           
 14345                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14346  1671  083A               	movf	(_updateTemperatures$2264+3)^(0+128),w
 14347  1672  00AB               	movwf	(logf@x+3)^(0+128)
 14348  1673  0839               	movf	(_updateTemperatures$2264+2)^(0+128),w
 14349  1674  00AA               	movwf	(logf@x+2)^(0+128)
 14350  1675  0838               	movf	(_updateTemperatures$2264+1)^(0+128),w
 14351  1676  00A9               	movwf	(logf@x+1)^(0+128)
 14352  1677  0837               	movf	_updateTemperatures$2264^(0+128),w
 14353  1678  00A8               	movwf	logf@x^(0+128)
 14354  1679  3180  2074  3195   	fcall	_logf
 14355  167C  0021               	movlb	1	; select bank1
 14356  167D  082B               	movf	(?_logf+3)^(0+128),w
 14357  167E  00CE               	movwf	(_updateTemperatures$2269+3)^(0+128)
 14358  167F  082A               	movf	(?_logf+2)^(0+128),w
 14359  1680  00CD               	movwf	(_updateTemperatures$2269+2)^(0+128)
 14360  1681  0829               	movf	(?_logf+1)^(0+128),w
 14361  1682  00CC               	movwf	(_updateTemperatures$2269+1)^(0+128)
 14362  1683  0828               	movf	?_logf^(0+128),w
 14363  1684  00CB               	movwf	_updateTemperatures$2269^(0+128)
 14364                           
 14365                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14366  1685  0846               	movf	(_updateTemperatures$2267+3)^(0+128),w
 14367  1686  0020               	movlb	0	; select bank0
 14368  1687  00A9               	movwf	___flmul@b+3
 14369  1688  0021               	movlb	1	; select bank1
 14370  1689  0845               	movf	(_updateTemperatures$2267+2)^(0+128),w
 14371  168A  0020               	movlb	0	; select bank0
 14372  168B  00A8               	movwf	___flmul@b+2
 14373  168C  0021               	movlb	1	; select bank1
 14374  168D  0844               	movf	(_updateTemperatures$2267+1)^(0+128),w
 14375  168E  0020               	movlb	0	; select bank0
 14376  168F  00A7               	movwf	___flmul@b+1
 14377  1690  0021               	movlb	1	; select bank1
 14378  1691  0843               	movf	_updateTemperatures$2267^(0+128),w
 14379  1692  0020               	movlb	0	; select bank0
 14380  1693  00A6               	movwf	___flmul@b
 14381  1694  0021               	movlb	1	; select bank1
 14382  1695  084A               	movf	(_updateTemperatures$2268+3)^(0+128),w
 14383  1696  0020               	movlb	0	; select bank0
 14384  1697  00AD               	movwf	___flmul@a+3
 14385  1698  0021               	movlb	1	; select bank1
 14386  1699  0849               	movf	(_updateTemperatures$2268+2)^(0+128),w
 14387  169A  0020               	movlb	0	; select bank0
 14388  169B  00AC               	movwf	___flmul@a+2
 14389  169C  0021               	movlb	1	; select bank1
 14390  169D  0848               	movf	(_updateTemperatures$2268+1)^(0+128),w
 14391  169E  0020               	movlb	0	; select bank0
 14392  169F  00AB               	movwf	___flmul@a+1
 14393  16A0  0021               	movlb	1	; select bank1
 14394  16A1  0847               	movf	_updateTemperatures$2268^(0+128),w
 14395  16A2  0020               	movlb	0	; select bank0
 14396  16A3  00AA               	movwf	___flmul@a
 14397  16A4  3190  2022  3195   	fcall	___flmul
 14398  16A7  0020               	movlb	0	; select bank0
 14399  16A8  0829               	movf	?___flmul+3,w
 14400  16A9  0021               	movlb	1	; select bank1
 14401  16AA  00D2               	movwf	(_updateTemperatures$2270+3)^(0+128)
 14402  16AB  0020               	movlb	0	; select bank0
 14403  16AC  0828               	movf	?___flmul+2,w
 14404  16AD  0021               	movlb	1	; select bank1
 14405  16AE  00D1               	movwf	(_updateTemperatures$2270+2)^(0+128)
 14406  16AF  0020               	movlb	0	; select bank0
 14407  16B0  0827               	movf	?___flmul+1,w
 14408  16B1  0021               	movlb	1	; select bank1
 14409  16B2  00D0               	movwf	(_updateTemperatures$2270+1)^(0+128)
 14410  16B3  0020               	movlb	0	; select bank0
 14411  16B4  0826               	movf	?___flmul,w
 14412  16B5  0021               	movlb	1	; select bank1
 14413  16B6  00CF               	movwf	_updateTemperatures$2270^(0+128)
 14414                           
 14415                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14416  16B7  084E               	movf	(_updateTemperatures$2269+3)^(0+128),w
 14417  16B8  0020               	movlb	0	; select bank0
 14418  16B9  00A9               	movwf	___flmul@b+3
 14419  16BA  0021               	movlb	1	; select bank1
 14420  16BB  084D               	movf	(_updateTemperatures$2269+2)^(0+128),w
 14421  16BC  0020               	movlb	0	; select bank0
 14422  16BD  00A8               	movwf	___flmul@b+2
 14423  16BE  0021               	movlb	1	; select bank1
 14424  16BF  084C               	movf	(_updateTemperatures$2269+1)^(0+128),w
 14425  16C0  0020               	movlb	0	; select bank0
 14426  16C1  00A7               	movwf	___flmul@b+1
 14427  16C2  0021               	movlb	1	; select bank1
 14428  16C3  084B               	movf	_updateTemperatures$2269^(0+128),w
 14429  16C4  0020               	movlb	0	; select bank0
 14430  16C5  00A6               	movwf	___flmul@b
 14431  16C6  0021               	movlb	1	; select bank1
 14432  16C7  0852               	movf	(_updateTemperatures$2270+3)^(0+128),w
 14433  16C8  0020               	movlb	0	; select bank0
 14434  16C9  00AD               	movwf	___flmul@a+3
 14435  16CA  0021               	movlb	1	; select bank1
 14436  16CB  0851               	movf	(_updateTemperatures$2270+2)^(0+128),w
 14437  16CC  0020               	movlb	0	; select bank0
 14438  16CD  00AC               	movwf	___flmul@a+2
 14439  16CE  0021               	movlb	1	; select bank1
 14440  16CF  0850               	movf	(_updateTemperatures$2270+1)^(0+128),w
 14441  16D0  0020               	movlb	0	; select bank0
 14442  16D1  00AB               	movwf	___flmul@a+1
 14443  16D2  0021               	movlb	1	; select bank1
 14444  16D3  084F               	movf	_updateTemperatures$2270^(0+128),w
 14445  16D4  0020               	movlb	0	; select bank0
 14446  16D5  00AA               	movwf	___flmul@a
 14447  16D6  3190  2022  3195   	fcall	___flmul
 14448  16D9  0020               	movlb	0	; select bank0
 14449  16DA  0829               	movf	?___flmul+3,w
 14450  16DB  0021               	movlb	1	; select bank1
 14451  16DC  00D6               	movwf	(_updateTemperatures$2271+3)^(0+128)
 14452  16DD  0020               	movlb	0	; select bank0
 14453  16DE  0828               	movf	?___flmul+2,w
 14454  16DF  0021               	movlb	1	; select bank1
 14455  16E0  00D5               	movwf	(_updateTemperatures$2271+2)^(0+128)
 14456  16E1  0020               	movlb	0	; select bank0
 14457  16E2  0827               	movf	?___flmul+1,w
 14458  16E3  0021               	movlb	1	; select bank1
 14459  16E4  00D4               	movwf	(_updateTemperatures$2271+1)^(0+128)
 14460  16E5  0020               	movlb	0	; select bank0
 14461  16E6  0826               	movf	?___flmul,w
 14462  16E7  0021               	movlb	1	; select bank1
 14463  16E8  00D3               	movwf	_updateTemperatures$2271^(0+128)
 14464                           
 14465                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14466  16E9  0023               	movlb	3	; select bank3
 14467  16EA  083F               	movf	(_rts+3)^(0+384),w
 14468  16EB  00F4               	movwf	___xxtofl@val+3
 14469  16EC  083E               	movf	(_rts+2)^(0+384),w
 14470  16ED  00F3               	movwf	___xxtofl@val+2
 14471  16EE  083D               	movf	(_rts+1)^(0+384),w
 14472  16EF  00F2               	movwf	___xxtofl@val+1
 14473  16F0  083C               	movf	_rts^(0+384),w
 14474  16F1  00F1               	movwf	___xxtofl@val
 14475  16F2  3000               	movlw	0
 14476  16F3  31AB  23E3  3195   	fcall	___xxtofl
 14477  16F6  0874               	movf	?___xxtofl+3,w
 14478  16F7  0021               	movlb	1	; select bank1
 14479  16F8  00DA               	movwf	(_updateTemperatures$2272+3)^(0+128)
 14480  16F9  0873               	movf	?___xxtofl+2,w
 14481  16FA  00D9               	movwf	(_updateTemperatures$2272+2)^(0+128)
 14482  16FB  0872               	movf	?___xxtofl+1,w
 14483  16FC  00D8               	movwf	(_updateTemperatures$2272+1)^(0+128)
 14484  16FD  0871               	movf	?___xxtofl,w
 14485  16FE  00D7               	movwf	_updateTemperatures$2272^(0+128)
 14486                           
 14487                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14488  16FF  085A               	movf	(_updateTemperatures$2272+3)^(0+128),w
 14489  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14490  1701  0859               	movf	(_updateTemperatures$2272+2)^(0+128),w
 14491  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14492  1703  0858               	movf	(_updateTemperatures$2272+1)^(0+128),w
 14493  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14494  1705  0857               	movf	_updateTemperatures$2272^(0+128),w
 14495  1706  00A8               	movwf	logf@x^(0+128)
 14496  1707  3180  2074  3195   	fcall	_logf
 14497  170A  0021               	movlb	1	; select bank1
 14498  170B  082B               	movf	(?_logf+3)^(0+128),w
 14499  170C  00DE               	movwf	(_updateTemperatures$2273+3)^(0+128)
 14500  170D  082A               	movf	(?_logf+2)^(0+128),w
 14501  170E  00DD               	movwf	(_updateTemperatures$2273+2)^(0+128)
 14502  170F  0829               	movf	(?_logf+1)^(0+128),w
 14503  1710  00DC               	movwf	(_updateTemperatures$2273+1)^(0+128)
 14504  1711  0828               	movf	?_logf^(0+128),w
 14505  1712  00DB               	movwf	_updateTemperatures$2273^(0+128)
 14506                           
 14507                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14508  1713  30BC               	movlw	188
 14509  1714  0020               	movlb	0	; select bank0
 14510  1715  00DD               	movwf	___fladd@b+3
 14511  1716  308E               	movlw	142
 14512  1717  00DC               	movwf	___fladd@b+2
 14513  1718  30C5               	movlw	197
 14514  1719  00DB               	movwf	___fladd@b+1
 14515  171A  3072               	movlw	114
 14516  171B  00DA               	movwf	___fladd@b
 14517  171C  303B               	movlw	59
 14518  171D  00A9               	movwf	___flmul@b+3
 14519  171E  304D               	movlw	77
 14520  171F  00A8               	movwf	___flmul@b+2
 14521  1720  3098               	movlw	152
 14522  1721  00A7               	movwf	___flmul@b+1
 14523  1722  3025               	movlw	37
 14524  1723  00A6               	movwf	___flmul@b
 14525  1724  0021               	movlb	1	; select bank1
 14526  1725  085E               	movf	(_updateTemperatures$2273+3)^(0+128),w
 14527  1726  0020               	movlb	0	; select bank0
 14528  1727  00AD               	movwf	___flmul@a+3
 14529  1728  0021               	movlb	1	; select bank1
 14530  1729  085D               	movf	(_updateTemperatures$2273+2)^(0+128),w
 14531  172A  0020               	movlb	0	; select bank0
 14532  172B  00AC               	movwf	___flmul@a+2
 14533  172C  0021               	movlb	1	; select bank1
 14534  172D  085C               	movf	(_updateTemperatures$2273+1)^(0+128),w
 14535  172E  0020               	movlb	0	; select bank0
 14536  172F  00AB               	movwf	___flmul@a+1
 14537  1730  0021               	movlb	1	; select bank1
 14538  1731  085B               	movf	_updateTemperatures$2273^(0+128),w
 14539  1732  0020               	movlb	0	; select bank0
 14540  1733  00AA               	movwf	___flmul@a
 14541  1734  3190  2022  3195   	fcall	___flmul
 14542  1737  0020               	movlb	0	; select bank0
 14543  1738  0829               	movf	?___flmul+3,w
 14544  1739  00E1               	movwf	___fladd@a+3
 14545  173A  0828               	movf	?___flmul+2,w
 14546  173B  00E0               	movwf	___fladd@a+2
 14547  173C  0827               	movf	?___flmul+1,w
 14548  173D  00DF               	movwf	___fladd@a+1
 14549  173E  0826               	movf	?___flmul,w
 14550  173F  00DE               	movwf	___fladd@a
 14551  1740  3185  25FE  3195   	fcall	___fladd
 14552  1743  0020               	movlb	0	; select bank0
 14553  1744  085D               	movf	?___fladd+3,w
 14554  1745  0021               	movlb	1	; select bank1
 14555  1746  00E2               	movwf	(_updateTemperatures$2274+3)^(0+128)
 14556  1747  0020               	movlb	0	; select bank0
 14557  1748  085C               	movf	?___fladd+2,w
 14558  1749  0021               	movlb	1	; select bank1
 14559  174A  00E1               	movwf	(_updateTemperatures$2274+2)^(0+128)
 14560  174B  0020               	movlb	0	; select bank0
 14561  174C  085B               	movf	?___fladd+1,w
 14562  174D  0021               	movlb	1	; select bank1
 14563  174E  00E0               	movwf	(_updateTemperatures$2274+1)^(0+128)
 14564  174F  0020               	movlb	0	; select bank0
 14565  1750  085A               	movf	?___fladd,w
 14566  1751  0021               	movlb	1	; select bank1
 14567  1752  00DF               	movwf	_updateTemperatures$2274^(0+128)
 14568                           
 14569                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14570  1753  30B7               	movlw	183
 14571  1754  0020               	movlb	0	; select bank0
 14572  1755  00A9               	movwf	___flmul@b+3
 14573  1756  302E               	movlw	46
 14574  1757  00A8               	movwf	___flmul@b+2
 14575  1758  302F               	movlw	47
 14576  1759  00A7               	movwf	___flmul@b+1
 14577  175A  3045               	movlw	69
 14578  175B  00A6               	movwf	___flmul@b
 14579  175C  0021               	movlb	1	; select bank1
 14580  175D  0856               	movf	(_updateTemperatures$2271+3)^(0+128),w
 14581  175E  0020               	movlb	0	; select bank0
 14582  175F  00AD               	movwf	___flmul@a+3
 14583  1760  0021               	movlb	1	; select bank1
 14584  1761  0855               	movf	(_updateTemperatures$2271+2)^(0+128),w
 14585  1762  0020               	movlb	0	; select bank0
 14586  1763  00AC               	movwf	___flmul@a+2
 14587  1764  0021               	movlb	1	; select bank1
 14588  1765  0854               	movf	(_updateTemperatures$2271+1)^(0+128),w
 14589  1766  0020               	movlb	0	; select bank0
 14590  1767  00AB               	movwf	___flmul@a+1
 14591  1768  0021               	movlb	1	; select bank1
 14592  1769  0853               	movf	_updateTemperatures$2271^(0+128),w
 14593  176A  0020               	movlb	0	; select bank0
 14594  176B  00AA               	movwf	___flmul@a
 14595  176C  3190  2022  3195   	fcall	___flmul
 14596  176F  0020               	movlb	0	; select bank0
 14597  1770  0829               	movf	?___flmul+3,w
 14598  1771  00DD               	movwf	___fladd@b+3
 14599  1772  0828               	movf	?___flmul+2,w
 14600  1773  00DC               	movwf	___fladd@b+2
 14601  1774  0827               	movf	?___flmul+1,w
 14602  1775  00DB               	movwf	___fladd@b+1
 14603  1776  0826               	movf	?___flmul,w
 14604  1777  00DA               	movwf	___fladd@b
 14605  1778  0021               	movlb	1	; select bank1
 14606  1779  0862               	movf	(_updateTemperatures$2274+3)^(0+128),w
 14607  177A  0020               	movlb	0	; select bank0
 14608  177B  00E1               	movwf	___fladd@a+3
 14609  177C  0021               	movlb	1	; select bank1
 14610  177D  0861               	movf	(_updateTemperatures$2274+2)^(0+128),w
 14611  177E  0020               	movlb	0	; select bank0
 14612  177F  00E0               	movwf	___fladd@a+2
 14613  1780  0021               	movlb	1	; select bank1
 14614  1781  0860               	movf	(_updateTemperatures$2274+1)^(0+128),w
 14615  1782  0020               	movlb	0	; select bank0
 14616  1783  00DF               	movwf	___fladd@a+1
 14617  1784  0021               	movlb	1	; select bank1
 14618  1785  085F               	movf	_updateTemperatures$2274^(0+128),w
 14619  1786  0020               	movlb	0	; select bank0
 14620  1787  00DE               	movwf	___fladd@a
 14621  1788  3185  25FE  3195   	fcall	___fladd
 14622  178B  0020               	movlb	0	; select bank0
 14623  178C  085D               	movf	?___fladd+3,w
 14624  178D  00C3               	movwf	___fldiv@a+3
 14625  178E  085C               	movf	?___fladd+2,w
 14626  178F  00C2               	movwf	___fldiv@a+2
 14627  1790  085B               	movf	?___fladd+1,w
 14628  1791  00C1               	movwf	___fldiv@a+1
 14629  1792  085A               	movf	?___fladd,w
 14630  1793  00C0               	movwf	___fldiv@a
 14631  1794  303F               	movlw	63
 14632  1795  00C7               	movwf	___fldiv@b+3
 14633  1796  3080               	movlw	128
 14634  1797  00C6               	movwf	___fldiv@b+2
 14635  1798  3000               	movlw	0
 14636  1799  00C5               	movwf	___fldiv@b+1
 14637  179A  3000               	movlw	0
 14638  179B  00C4               	movwf	___fldiv@b
 14639  179C  319C  24E2  3195   	fcall	___fldiv
 14640  179F  0020               	movlb	0	; select bank0
 14641  17A0  0843               	movf	?___fldiv+3,w
 14642  17A1  0021               	movlb	1	; select bank1
 14643  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14644  17A3  0020               	movlb	0	; select bank0
 14645  17A4  0842               	movf	?___fldiv+2,w
 14646  17A5  0021               	movlb	1	; select bank1
 14647  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14648  17A7  0020               	movlb	0	; select bank0
 14649  17A8  0841               	movf	?___fldiv+1,w
 14650  17A9  0021               	movlb	1	; select bank1
 14651  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14652  17AB  0020               	movlb	0	; select bank0
 14653  17AC  0840               	movf	?___fldiv,w
 14654  17AD  0021               	movlb	1	; select bank1
 14655  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14656                           
 14657                           ;BQ76920.c: 284:      temperatureThermistor = (tmp - 273.15)*100;
 14658  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14659  17B0  0020               	movlb	0	; select bank0
 14660  17B1  00E1               	movwf	___fladd@a+3
 14661  17B2  0021               	movlb	1	; select bank1
 14662  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14663  17B4  0020               	movlb	0	; select bank0
 14664  17B5  00E0               	movwf	___fladd@a+2
 14665  17B6  0021               	movlb	1	; select bank1
 14666  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14667  17B8  0020               	movlb	0	; select bank0
 14668  17B9  00DF               	movwf	___fladd@a+1
 14669  17BA  0021               	movlb	1	; select bank1
 14670  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14671  17BC  0020               	movlb	0	; select bank0
 14672  17BD  00DE               	movwf	___fladd@a
 14673  17BE  30C3               	movlw	195
 14674  17BF  00DD               	movwf	___fladd@b+3
 14675  17C0  3088               	movlw	136
 14676  17C1  00DC               	movwf	___fladd@b+2
 14677  17C2  3093               	movlw	147
 14678  17C3  00DB               	movwf	___fladd@b+1
 14679  17C4  3033               	movlw	51
 14680  17C5  00DA               	movwf	___fladd@b
 14681  17C6  3185  25FE  3195   	fcall	___fladd
 14682  17C9  0020               	movlb	0	; select bank0
 14683  17CA  085D               	movf	?___fladd+3,w
 14684  17CB  00AD               	movwf	___flmul@a+3
 14685  17CC  085C               	movf	?___fladd+2,w
 14686  17CD  00AC               	movwf	___flmul@a+2
 14687  17CE  085B               	movf	?___fladd+1,w
 14688  17CF  00AB               	movwf	___flmul@a+1
 14689  17D0  085A               	movf	?___fladd,w
 14690  17D1  00AA               	movwf	___flmul@a
 14691  17D2  3042               	movlw	66
 14692  17D3  00A9               	movwf	___flmul@b+3
 14693  17D4  30C8               	movlw	200
 14694  17D5  00A8               	movwf	___flmul@b+2
 14695  17D6  3000               	movlw	0
 14696  17D7  00A7               	movwf	___flmul@b+1
 14697  17D8  3000               	movlw	0
 14698  17D9  00A6               	movwf	___flmul@b
 14699  17DA  3190  2022  3195   	fcall	___flmul
 14700  17DD  0020               	movlb	0	; select bank0
 14701  17DE  0829               	movf	?___flmul+3,w
 14702  17DF  0021               	movlb	1	; select bank1
 14703  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14704  17E1  0020               	movlb	0	; select bank0
 14705  17E2  0828               	movf	?___flmul+2,w
 14706  17E3  0021               	movlb	1	; select bank1
 14707  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14708  17E5  0020               	movlb	0	; select bank0
 14709  17E6  0827               	movf	?___flmul+1,w
 14710  17E7  0021               	movlb	1	; select bank1
 14711  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14712  17E9  0020               	movlb	0	; select bank0
 14713  17EA  0826               	movf	?___flmul,w
 14714  17EB  0021               	movlb	1	; select bank1
 14715  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14716  17ED  31A8  20A3         	fcall	___fltol
 14717  17EF  0021               	movlb	1	; select bank1
 14718  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14719  17F1  0023               	movlb	3	; select bank3
 14720  17F2  00C3               	movwf	(_temperatureThermistor+3)^(0+384)
 14721  17F3  0021               	movlb	1	; select bank1
 14722  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14723  17F5  0023               	movlb	3	; select bank3
 14724  17F6  00C2               	movwf	(_temperatureThermistor+2)^(0+384)
 14725  17F7  0021               	movlb	1	; select bank1
 14726  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14727  17F9  0023               	movlb	3	; select bank3
 14728  17FA  00C1               	movwf	(_temperatureThermistor+1)^(0+384)
 14729  17FB  0021               	movlb	1	; select bank1
 14730  17FC  0828               	movf	?___fltol^(0+128),w
 14731  17FD  0023               	movlb	3	; select bank3
 14732  17FE  00C0               	movwf	_temperatureThermistor^(0+384)
 14733  17FF  0008               	return
 14734  1800                     __end_of_updateTemperatures:	
 14735                           
 14736                           	psect	text50
 14737  0074                     __ptext50:	
 14738 ;; *************** function _logf *****************
 14739 ;; Defined at:
 14740 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  x               4    8[BANK1 ] float 
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;  ix              4   62[BANK2 ] unsigned long 
 14745 ;;  f               4   58[BANK2 ] float 
 14746 ;;  u               4   54[BANK2 ] struct .
 14747 ;;  w               4   46[BANK2 ] float 
 14748 ;;  z               4   42[BANK2 ] float 
 14749 ;;  s               4   38[BANK2 ] float 
 14750 ;;  dk              4   34[BANK2 ] float 
 14751 ;;  hfsq            4   30[BANK2 ] float 
 14752 ;;  t2              4    8[BANK2 ] float 
 14753 ;;  t1              4    4[BANK2 ] float 
 14754 ;;  R               4    0[BANK2 ] float 
 14755 ;;  k               2   28[BANK2 ] int 
 14756 ;; Return value:  Size  Location     Type
 14757 ;;                  4    8[BANK1 ] float 
 14758 ;; Registers used:
 14759 ;;		wreg, status,2, status,0, pclath, cstack
 14760 ;; Tracked objects:
 14761 ;;		On entry : 0/0
 14762 ;;		On exit  : 0/0
 14763 ;;		Unchanged: 0/0
 14764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14765 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14766 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14767 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14768 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14769 ;;Total ram usage:       78 bytes
 14770 ;; Hardware stack levels used:    1
 14771 ;; Hardware stack levels required when called:    3
 14772 ;; This function calls:
 14773 ;;		___fladd
 14774 ;;		___fldiv
 14775 ;;		___flmul
 14776 ;;		___flsub
 14777 ;;		___xxtofl
 14778 ;; This function is called by:
 14779 ;;		_updateTemperatures
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           
 14784                           ;psect for function _logf
 14785  0074                     _logf:	
 14786                           
 14787                           ;incstack = 0
 14788                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14789  0074  0023               	movlb	3	; select bank3
 14790  0075  0837               	movf	(logf@F469+3)^(0+384),w
 14791  0076  0022               	movlb	2	; select bank2
 14792  0077  00D9               	movwf	(logf@u+3)^(0+256)
 14793  0078  0023               	movlb	3	; select bank3
 14794  0079  0836               	movf	(logf@F469+2)^(0+384),w
 14795  007A  0022               	movlb	2	; select bank2
 14796  007B  00D8               	movwf	(logf@u+2)^(0+256)
 14797  007C  0023               	movlb	3	; select bank3
 14798  007D  0835               	movf	(logf@F469+1)^(0+384),w
 14799  007E  0022               	movlb	2	; select bank2
 14800  007F  00D7               	movwf	(logf@u+1)^(0+256)
 14801  0080  0023               	movlb	3	; select bank3
 14802  0081  0834               	movf	logf@F469^(0+384),w
 14803  0082  0022               	movlb	2	; select bank2
 14804  0083  00D6               	movwf	logf@u^(0+256)
 14805  0084  0021               	movlb	1	; select bank1
 14806  0085  082B               	movf	(logf@x+3)^(0+128),w
 14807  0086  0022               	movlb	2	; select bank2
 14808  0087  00D9               	movwf	(logf@u+3)^(0+256)
 14809  0088  0021               	movlb	1	; select bank1
 14810  0089  082A               	movf	(logf@x+2)^(0+128),w
 14811  008A  0022               	movlb	2	; select bank2
 14812  008B  00D8               	movwf	(logf@u+2)^(0+256)
 14813  008C  0021               	movlb	1	; select bank1
 14814  008D  0829               	movf	(logf@x+1)^(0+128),w
 14815  008E  0022               	movlb	2	; select bank2
 14816  008F  00D7               	movwf	(logf@u+1)^(0+256)
 14817  0090  0021               	movlb	1	; select bank1
 14818  0091  0828               	movf	logf@x^(0+128),w
 14819  0092  0022               	movlb	2	; select bank2
 14820  0093  00D6               	movwf	logf@u^(0+256)
 14821  0094  0859               	movf	(logf@u+3)^(0+256),w
 14822  0095  00E1               	movwf	(logf@ix+3)^(0+256)
 14823  0096  0858               	movf	(logf@u+2)^(0+256),w
 14824  0097  00E0               	movwf	(logf@ix+2)^(0+256)
 14825  0098  0857               	movf	(logf@u+1)^(0+256),w
 14826  0099  00DF               	movwf	(logf@ix+1)^(0+256)
 14827  009A  0856               	movf	logf@u^(0+256),w
 14828  009B  00DE               	movwf	logf@ix^(0+256)
 14829  009C  01BC               	clrf	logf@k^(0+256)
 14830  009D  01BD               	clrf	(logf@k+1)^(0+256)
 14831  009E  0861               	movf	(logf@ix+3)^(0+256),w
 14832  009F  1D03               	btfss	3,2
 14833  00A0  28A5               	goto	l5731
 14834  00A1  3080               	movlw	128
 14835  00A2  0260               	subwf	(logf@ix+2)^(0+256),w
 14836  00A3  1C03               	btfss	3,0
 14837  00A4  28C1               	goto	l5733
 14838  00A5                     l5731:	
 14839  00A5  085E               	movf	logf@ix^(0+256),w
 14840  00A6  0021               	movlb	1	; select bank1
 14841  00A7  00AC               	movwf	??_logf^(0+128)
 14842  00A8  0022               	movlb	2	; select bank2
 14843  00A9  085F               	movf	(logf@ix+1)^(0+256),w
 14844  00AA  0021               	movlb	1	; select bank1
 14845  00AB  00AD               	movwf	(??_logf^(0+128)+1)
 14846  00AC  0022               	movlb	2	; select bank2
 14847  00AD  0860               	movf	(logf@ix+2)^(0+256),w
 14848  00AE  0021               	movlb	1	; select bank1
 14849  00AF  00AE               	movwf	(??_logf^(0+128)+2)
 14850  00B0  0022               	movlb	2	; select bank2
 14851  00B1  0861               	movf	(logf@ix+3)^(0+256),w
 14852  00B2  0021               	movlb	1	; select bank1
 14853  00B3  00AF               	movwf	(??_logf^(0+128)+3)
 14854  00B4  301F               	movlw	31
 14855  00B5                     u7015:	
 14856  00B5  36AF               	lsrf	(??_logf^(0+128)+3),f
 14857  00B6  0CAE               	rrf	(??_logf^(0+128)+2),f
 14858  00B7  0CAD               	rrf	(??_logf^(0+128)+1),f
 14859  00B8  0CAC               	rrf	??_logf^(0+128),f
 14860  00B9  0B89               	decfsz	9,f
 14861  00BA  28B5               	goto	u7015
 14862  00BB  082F               	movf	(??_logf+3)^(0+128),w
 14863  00BC  042E               	iorwf	(??_logf+2)^(0+128),w
 14864  00BD  042D               	iorwf	(??_logf+1)^(0+128),w
 14865  00BE  042C               	iorwf	??_logf^(0+128),w
 14866  00BF  1903               	skipnz
 14867  00C0  29CA               	goto	l5753
 14868  00C1                     l5733:	
 14869  00C1  0022               	movlb	2	; select bank2
 14870  00C2  085E               	movf	logf@ix^(0+256),w
 14871  00C3  0021               	movlb	1	; select bank1
 14872  00C4  00AC               	movwf	??_logf^(0+128)
 14873  00C5  0022               	movlb	2	; select bank2
 14874  00C6  085F               	movf	(logf@ix+1)^(0+256),w
 14875  00C7  0021               	movlb	1	; select bank1
 14876  00C8  00AD               	movwf	(??_logf^(0+128)+1)
 14877  00C9  0022               	movlb	2	; select bank2
 14878  00CA  0860               	movf	(logf@ix+2)^(0+256),w
 14879  00CB  0021               	movlb	1	; select bank1
 14880  00CC  00AE               	movwf	(??_logf^(0+128)+2)
 14881  00CD  0022               	movlb	2	; select bank2
 14882  00CE  0861               	movf	(logf@ix+3)^(0+256),w
 14883  00CF  0021               	movlb	1	; select bank1
 14884  00D0  00AF               	movwf	(??_logf^(0+128)+3)
 14885  00D1  3001               	movlw	1
 14886  00D2                     u7035:	
 14887  00D2  35AC               	lslf	??_logf^(0+128),f
 14888  00D3  0DAD               	rlf	(??_logf^(0+128)+1),f
 14889  00D4  0DAE               	rlf	(??_logf^(0+128)+2),f
 14890  00D5  0DAF               	rlf	(??_logf^(0+128)+3),f
 14891  00D6  0B89               	decfsz	9,f
 14892  00D7  28D2               	goto	u7035
 14893  00D8  082F               	movf	(??_logf+3)^(0+128),w
 14894  00D9  042E               	iorwf	(??_logf+2)^(0+128),w
 14895  00DA  042D               	iorwf	(??_logf+1)^(0+128),w
 14896  00DB  042C               	iorwf	??_logf^(0+128),w
 14897  00DC  1D03               	skipz
 14898  00DD  2924               	goto	l5739
 14899  00DE  082B               	movf	(logf@x+3)^(0+128),w
 14900  00DF  0020               	movlb	0	; select bank0
 14901  00E0  00A9               	movwf	___flmul@b+3
 14902  00E1  0021               	movlb	1	; select bank1
 14903  00E2  082A               	movf	(logf@x+2)^(0+128),w
 14904  00E3  0020               	movlb	0	; select bank0
 14905  00E4  00A8               	movwf	___flmul@b+2
 14906  00E5  0021               	movlb	1	; select bank1
 14907  00E6  0829               	movf	(logf@x+1)^(0+128),w
 14908  00E7  0020               	movlb	0	; select bank0
 14909  00E8  00A7               	movwf	___flmul@b+1
 14910  00E9  0021               	movlb	1	; select bank1
 14911  00EA  0828               	movf	logf@x^(0+128),w
 14912  00EB  0020               	movlb	0	; select bank0
 14913  00EC  00A6               	movwf	___flmul@b
 14914  00ED  0021               	movlb	1	; select bank1
 14915  00EE  082B               	movf	(logf@x+3)^(0+128),w
 14916  00EF  0020               	movlb	0	; select bank0
 14917  00F0  00AD               	movwf	___flmul@a+3
 14918  00F1  0021               	movlb	1	; select bank1
 14919  00F2  082A               	movf	(logf@x+2)^(0+128),w
 14920  00F3  0020               	movlb	0	; select bank0
 14921  00F4  00AC               	movwf	___flmul@a+2
 14922  00F5  0021               	movlb	1	; select bank1
 14923  00F6  0829               	movf	(logf@x+1)^(0+128),w
 14924  00F7  0020               	movlb	0	; select bank0
 14925  00F8  00AB               	movwf	___flmul@a+1
 14926  00F9  0021               	movlb	1	; select bank1
 14927  00FA  0828               	movf	logf@x^(0+128),w
 14928  00FB  0020               	movlb	0	; select bank0
 14929  00FC  00AA               	movwf	___flmul@a
 14930  00FD  3190  2022  3180   	fcall	___flmul
 14931  0100  0020               	movlb	0	; select bank0
 14932  0101  0829               	movf	?___flmul+3,w
 14933  0102  00C3               	movwf	___fldiv@a+3
 14934  0103  0828               	movf	?___flmul+2,w
 14935  0104  00C2               	movwf	___fldiv@a+2
 14936  0105  0827               	movf	?___flmul+1,w
 14937  0106  00C1               	movwf	___fldiv@a+1
 14938  0107  0826               	movf	?___flmul,w
 14939  0108  00C0               	movwf	___fldiv@a
 14940  0109  30BF               	movlw	191
 14941  010A  00C7               	movwf	___fldiv@b+3
 14942  010B  3080               	movlw	128
 14943  010C  00C6               	movwf	___fldiv@b+2
 14944  010D  3000               	movlw	0
 14945  010E  00C5               	movwf	___fldiv@b+1
 14946  010F  3000               	movlw	0
 14947  0110  00C4               	movwf	___fldiv@b
 14948  0111  319C  24E2         	fcall	___fldiv
 14949  0113  0020               	movlb	0	; select bank0
 14950  0114  0843               	movf	?___fldiv+3,w
 14951  0115  0021               	movlb	1	; select bank1
 14952  0116  00AB               	movwf	(?_logf+3)^(0+128)
 14953  0117  0020               	movlb	0	; select bank0
 14954  0118  0842               	movf	?___fldiv+2,w
 14955  0119  0021               	movlb	1	; select bank1
 14956  011A  00AA               	movwf	(?_logf+2)^(0+128)
 14957  011B  0020               	movlb	0	; select bank0
 14958  011C  0841               	movf	?___fldiv+1,w
 14959  011D  0021               	movlb	1	; select bank1
 14960  011E  00A9               	movwf	(?_logf+1)^(0+128)
 14961  011F  0020               	movlb	0	; select bank0
 14962  0120  0840               	movf	?___fldiv,w
 14963  0121  0021               	movlb	1	; select bank1
 14964  0122  00A8               	movwf	?_logf^(0+128)
 14965  0123  0008               	return
 14966  0124                     l5739:	
 14967  0124  0022               	movlb	2	; select bank2
 14968  0125  085E               	movf	logf@ix^(0+256),w
 14969  0126  0021               	movlb	1	; select bank1
 14970  0127  00AC               	movwf	??_logf^(0+128)
 14971  0128  0022               	movlb	2	; select bank2
 14972  0129  085F               	movf	(logf@ix+1)^(0+256),w
 14973  012A  0021               	movlb	1	; select bank1
 14974  012B  00AD               	movwf	(??_logf^(0+128)+1)
 14975  012C  0022               	movlb	2	; select bank2
 14976  012D  0860               	movf	(logf@ix+2)^(0+256),w
 14977  012E  0021               	movlb	1	; select bank1
 14978  012F  00AE               	movwf	(??_logf^(0+128)+2)
 14979  0130  0022               	movlb	2	; select bank2
 14980  0131  0861               	movf	(logf@ix+3)^(0+256),w
 14981  0132  0021               	movlb	1	; select bank1
 14982  0133  00AF               	movwf	(??_logf^(0+128)+3)
 14983  0134  301F               	movlw	31
 14984  0135                     u7055:	
 14985  0135  36AF               	lsrf	(??_logf^(0+128)+3),f
 14986  0136  0CAE               	rrf	(??_logf^(0+128)+2),f
 14987  0137  0CAD               	rrf	(??_logf^(0+128)+1),f
 14988  0138  0CAC               	rrf	??_logf^(0+128),f
 14989  0139  0B89               	decfsz	9,f
 14990  013A  2935               	goto	u7055
 14991  013B  082F               	movf	(??_logf+3)^(0+128),w
 14992  013C  042E               	iorwf	(??_logf+2)^(0+128),w
 14993  013D  042D               	iorwf	(??_logf+1)^(0+128),w
 14994  013E  042C               	iorwf	??_logf^(0+128),w
 14995  013F  1903               	skipnz
 14996  0140  2981               	goto	l5745
 14997  0141  3000               	movlw	0
 14998  0142  0020               	movlb	0	; select bank0
 14999  0143  00C3               	movwf	___fldiv@a+3
 15000  0144  3000               	movlw	0
 15001  0145  00C2               	movwf	___fldiv@a+2
 15002  0146  3000               	movlw	0
 15003  0147  00C1               	movwf	___fldiv@a+1
 15004  0148  3000               	movlw	0
 15005  0149  00C0               	movwf	___fldiv@a
 15006  014A  0021               	movlb	1	; select bank1
 15007  014B  082B               	movf	(logf@x+3)^(0+128),w
 15008  014C  00A3               	movwf	(___flsub@a+3)^(0+128)
 15009  014D  082A               	movf	(logf@x+2)^(0+128),w
 15010  014E  00A2               	movwf	(___flsub@a+2)^(0+128)
 15011  014F  0829               	movf	(logf@x+1)^(0+128),w
 15012  0150  00A1               	movwf	(___flsub@a+1)^(0+128)
 15013  0151  0828               	movf	logf@x^(0+128),w
 15014  0152  00A0               	movwf	___flsub@a^(0+128)
 15015  0153  082B               	movf	(logf@x+3)^(0+128),w
 15016  0154  00A7               	movwf	(___flsub@b+3)^(0+128)
 15017  0155  082A               	movf	(logf@x+2)^(0+128),w
 15018  0156  00A6               	movwf	(___flsub@b+2)^(0+128)
 15019  0157  0829               	movf	(logf@x+1)^(0+128),w
 15020  0158  00A5               	movwf	(___flsub@b+1)^(0+128)
 15021  0159  0828               	movf	logf@x^(0+128),w
 15022  015A  00A4               	movwf	___flsub@b^(0+128)
 15023  015B  31B5  251D  3180   	fcall	___flsub
 15024  015E  0021               	movlb	1	; select bank1
 15025  015F  0823               	movf	(?___flsub+3)^(0+128),w
 15026  0160  0020               	movlb	0	; select bank0
 15027  0161  00C7               	movwf	___fldiv@b+3
 15028  0162  0021               	movlb	1	; select bank1
 15029  0163  0822               	movf	(?___flsub+2)^(0+128),w
 15030  0164  0020               	movlb	0	; select bank0
 15031  0165  00C6               	movwf	___fldiv@b+2
 15032  0166  0021               	movlb	1	; select bank1
 15033  0167  0821               	movf	(?___flsub+1)^(0+128),w
 15034  0168  0020               	movlb	0	; select bank0
 15035  0169  00C5               	movwf	___fldiv@b+1
 15036  016A  0021               	movlb	1	; select bank1
 15037  016B  0820               	movf	?___flsub^(0+128),w
 15038  016C  0020               	movlb	0	; select bank0
 15039  016D  00C4               	movwf	___fldiv@b
 15040  016E  319C  24E2         	fcall	___fldiv
 15041  0170  0020               	movlb	0	; select bank0
 15042  0171  0843               	movf	?___fldiv+3,w
 15043  0172  0021               	movlb	1	; select bank1
 15044  0173  00AB               	movwf	(?_logf+3)^(0+128)
 15045  0174  0020               	movlb	0	; select bank0
 15046  0175  0842               	movf	?___fldiv+2,w
 15047  0176  0021               	movlb	1	; select bank1
 15048  0177  00AA               	movwf	(?_logf+2)^(0+128)
 15049  0178  0020               	movlb	0	; select bank0
 15050  0179  0841               	movf	?___fldiv+1,w
 15051  017A  0021               	movlb	1	; select bank1
 15052  017B  00A9               	movwf	(?_logf+1)^(0+128)
 15053  017C  0020               	movlb	0	; select bank0
 15054  017D  0840               	movf	?___fldiv,w
 15055  017E  0021               	movlb	1	; select bank1
 15056  017F  00A8               	movwf	?_logf^(0+128)
 15057  0180  0008               	return
 15058  0181                     l5745:	
 15059  0181  30E7               	movlw	231
 15060  0182  0022               	movlb	2	; select bank2
 15061  0183  07BC               	addwf	logf@k^(0+256),f
 15062  0184  30FF               	movlw	255
 15063  0185  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15064  0186  304C               	movlw	76
 15065  0187  0020               	movlb	0	; select bank0
 15066  0188  00A9               	movwf	___flmul@b+3
 15067  0189  3000               	movlw	0
 15068  018A  00A8               	movwf	___flmul@b+2
 15069  018B  3000               	movlw	0
 15070  018C  00A7               	movwf	___flmul@b+1
 15071  018D  3000               	movlw	0
 15072  018E  00A6               	movwf	___flmul@b
 15073  018F  0021               	movlb	1	; select bank1
 15074  0190  082B               	movf	(logf@x+3)^(0+128),w
 15075  0191  0020               	movlb	0	; select bank0
 15076  0192  00AD               	movwf	___flmul@a+3
 15077  0193  0021               	movlb	1	; select bank1
 15078  0194  082A               	movf	(logf@x+2)^(0+128),w
 15079  0195  0020               	movlb	0	; select bank0
 15080  0196  00AC               	movwf	___flmul@a+2
 15081  0197  0021               	movlb	1	; select bank1
 15082  0198  0829               	movf	(logf@x+1)^(0+128),w
 15083  0199  0020               	movlb	0	; select bank0
 15084  019A  00AB               	movwf	___flmul@a+1
 15085  019B  0021               	movlb	1	; select bank1
 15086  019C  0828               	movf	logf@x^(0+128),w
 15087  019D  0020               	movlb	0	; select bank0
 15088  019E  00AA               	movwf	___flmul@a
 15089  019F  3190  2022  3180   	fcall	___flmul
 15090  01A2  0020               	movlb	0	; select bank0
 15091  01A3  0829               	movf	?___flmul+3,w
 15092  01A4  0021               	movlb	1	; select bank1
 15093  01A5  00AB               	movwf	(logf@x+3)^(0+128)
 15094  01A6  0020               	movlb	0	; select bank0
 15095  01A7  0828               	movf	?___flmul+2,w
 15096  01A8  0021               	movlb	1	; select bank1
 15097  01A9  00AA               	movwf	(logf@x+2)^(0+128)
 15098  01AA  0020               	movlb	0	; select bank0
 15099  01AB  0827               	movf	?___flmul+1,w
 15100  01AC  0021               	movlb	1	; select bank1
 15101  01AD  00A9               	movwf	(logf@x+1)^(0+128)
 15102  01AE  0020               	movlb	0	; select bank0
 15103  01AF  0826               	movf	?___flmul,w
 15104  01B0  0021               	movlb	1	; select bank1
 15105  01B1  00A8               	movwf	logf@x^(0+128)
 15106  01B2  082B               	movf	(logf@x+3)^(0+128),w
 15107  01B3  0022               	movlb	2	; select bank2
 15108  01B4  00D9               	movwf	(logf@u+3)^(0+256)
 15109  01B5  0021               	movlb	1	; select bank1
 15110  01B6  082A               	movf	(logf@x+2)^(0+128),w
 15111  01B7  0022               	movlb	2	; select bank2
 15112  01B8  00D8               	movwf	(logf@u+2)^(0+256)
 15113  01B9  0021               	movlb	1	; select bank1
 15114  01BA  0829               	movf	(logf@x+1)^(0+128),w
 15115  01BB  0022               	movlb	2	; select bank2
 15116  01BC  00D7               	movwf	(logf@u+1)^(0+256)
 15117  01BD  0021               	movlb	1	; select bank1
 15118  01BE  0828               	movf	logf@x^(0+128),w
 15119  01BF  0022               	movlb	2	; select bank2
 15120  01C0  00D6               	movwf	logf@u^(0+256)
 15121  01C1  0859               	movf	(logf@u+3)^(0+256),w
 15122  01C2  00E1               	movwf	(logf@ix+3)^(0+256)
 15123  01C3  0858               	movf	(logf@u+2)^(0+256),w
 15124  01C4  00E0               	movwf	(logf@ix+2)^(0+256)
 15125  01C5  0857               	movf	(logf@u+1)^(0+256),w
 15126  01C6  00DF               	movwf	(logf@ix+1)^(0+256)
 15127  01C7  0856               	movf	logf@u^(0+256),w
 15128  01C8  00DE               	movwf	logf@ix^(0+256)
 15129  01C9  29E4               	goto	l5765
 15130  01CA                     l5753:	
 15131  01CA  3080               	movlw	128
 15132  01CB  0022               	movlb	2	; select bank2
 15133  01CC  0260               	subwf	(logf@ix+2)^(0+256),w
 15134  01CD  307F               	movlw	127
 15135  01CE  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15136  01CF  1803               	btfsc	3,0
 15137  01D0  0008               	return
 15138  01D1  3080               	movlw	128
 15139  01D2  0660               	xorwf	(logf@ix+2)^(0+256),w
 15140  01D3  303F               	movlw	63
 15141  01D4  1903               	skipnz
 15142  01D5  0661               	xorwf	(logf@ix+3)^(0+256),w
 15143  01D6  045E               	iorwf	logf@ix^(0+256),w
 15144  01D7  045F               	iorwf	(logf@ix+1)^(0+256),w
 15145  01D8  1D03               	btfss	3,2
 15146  01D9  29E4               	goto	l5765
 15147  01DA  3000               	movlw	0
 15148  01DB  0021               	movlb	1	; select bank1
 15149  01DC  00AB               	movwf	(?_logf+3)^(0+128)
 15150  01DD  3000               	movlw	0
 15151  01DE  00AA               	movwf	(?_logf+2)^(0+128)
 15152  01DF  3000               	movlw	0
 15153  01E0  00A9               	movwf	(?_logf+1)^(0+128)
 15154  01E1  3000               	movlw	0
 15155  01E2  00A8               	movwf	?_logf^(0+128)
 15156  01E3  0008               	return
 15157  01E4                     l5765:	
 15158  01E4  300D               	movlw	13
 15159  01E5  07DE               	addwf	logf@ix^(0+256),f
 15160  01E6  30FB               	movlw	251
 15161  01E7  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15162  01E8  304A               	movlw	74
 15163  01E9  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15164  01EA  3000               	movlw	0
 15165  01EB  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15166  01EC  085E               	movf	logf@ix^(0+256),w
 15167  01ED  0021               	movlb	1	; select bank1
 15168  01EE  00AC               	movwf	??_logf^(0+128)
 15169  01EF  0022               	movlb	2	; select bank2
 15170  01F0  085F               	movf	(logf@ix+1)^(0+256),w
 15171  01F1  0021               	movlb	1	; select bank1
 15172  01F2  00AD               	movwf	(??_logf^(0+128)+1)
 15173  01F3  0022               	movlb	2	; select bank2
 15174  01F4  0860               	movf	(logf@ix+2)^(0+256),w
 15175  01F5  0021               	movlb	1	; select bank1
 15176  01F6  00AE               	movwf	(??_logf^(0+128)+2)
 15177  01F7  0022               	movlb	2	; select bank2
 15178  01F8  0861               	movf	(logf@ix+3)^(0+256),w
 15179  01F9  0021               	movlb	1	; select bank1
 15180  01FA  00AF               	movwf	(??_logf^(0+128)+3)
 15181  01FB  3017               	movlw	23
 15182  01FC                     u7095:	
 15183  01FC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15184  01FD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15185  01FE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15186  01FF  0CAC               	rrf	??_logf^(0+128),f
 15187  0200  0B89               	decfsz	9,f
 15188  0201  29FC               	goto	u7095
 15189  0202  082C               	movf	??_logf^(0+128),w
 15190  0203  3E81               	addlw	129
 15191  0204  00B0               	movwf	(??_logf+4)^(0+128)
 15192  0205  30FF               	movlw	255
 15193  0206  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15194  0207  00B1               	movwf	(??_logf+5)^(0+128)
 15195  0208  0830               	movf	(??_logf+4)^(0+128),w
 15196  0209  0022               	movlb	2	; select bank2
 15197  020A  07BC               	addwf	logf@k^(0+256),f
 15198  020B  0021               	movlb	1	; select bank1
 15199  020C  0831               	movf	(??_logf+5)^(0+128),w
 15200  020D  0022               	movlb	2	; select bank2
 15201  020E  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15202  020F  30F3               	movlw	243
 15203  0210  0021               	movlb	1	; select bank1
 15204  0211  00AC               	movwf	??_logf^(0+128)
 15205  0212  3004               	movlw	4
 15206  0213  00AD               	movwf	(??_logf^(0+128)+1)
 15207  0214  3035               	movlw	53
 15208  0215  00AE               	movwf	(??_logf^(0+128)+2)
 15209  0216  303F               	movlw	63
 15210  0217  00AF               	movwf	(??_logf^(0+128)+3)
 15211  0218  30FF               	movlw	255
 15212  0219  0022               	movlb	2	; select bank2
 15213  021A  055E               	andwf	logf@ix^(0+256),w
 15214  021B  0021               	movlb	1	; select bank1
 15215  021C  00B0               	movwf	(??_logf+4)^(0+128)
 15216  021D  30FF               	movlw	255
 15217  021E  0022               	movlb	2	; select bank2
 15218  021F  055F               	andwf	(logf@ix+1)^(0+256),w
 15219  0220  0021               	movlb	1	; select bank1
 15220  0221  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15221  0222  307F               	movlw	127
 15222  0223  0022               	movlb	2	; select bank2
 15223  0224  0560               	andwf	(logf@ix+2)^(0+256),w
 15224  0225  0021               	movlb	1	; select bank1
 15225  0226  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15226  0227  3000               	movlw	0
 15227  0228  0022               	movlb	2	; select bank2
 15228  0229  0561               	andwf	(logf@ix+3)^(0+256),w
 15229  022A  0021               	movlb	1	; select bank1
 15230  022B  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15231  022C  0830               	movf	(??_logf+4)^(0+128),w
 15232  022D  07AC               	addwf	??_logf^(0+128),f
 15233  022E  0831               	movf	(??_logf+5)^(0+128),w
 15234  022F  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15235  0230  0832               	movf	(??_logf+6)^(0+128),w
 15236  0231  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15237  0232  0833               	movf	(??_logf+7)^(0+128),w
 15238  0233  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15239  0234  082F               	movf	(??_logf+3)^(0+128),w
 15240  0235  0022               	movlb	2	; select bank2
 15241  0236  00E1               	movwf	(logf@ix+3)^(0+256)
 15242  0237  0021               	movlb	1	; select bank1
 15243  0238  082E               	movf	(??_logf+2)^(0+128),w
 15244  0239  0022               	movlb	2	; select bank2
 15245  023A  00E0               	movwf	(logf@ix+2)^(0+256)
 15246  023B  0021               	movlb	1	; select bank1
 15247  023C  082D               	movf	(??_logf+1)^(0+128),w
 15248  023D  0022               	movlb	2	; select bank2
 15249  023E  00DF               	movwf	(logf@ix+1)^(0+256)
 15250  023F  0021               	movlb	1	; select bank1
 15251  0240  082C               	movf	??_logf^(0+128),w
 15252  0241  0022               	movlb	2	; select bank2
 15253  0242  00DE               	movwf	logf@ix^(0+256)
 15254  0243  0861               	movf	(logf@ix+3)^(0+256),w
 15255  0244  00D9               	movwf	(logf@u+3)^(0+256)
 15256  0245  0860               	movf	(logf@ix+2)^(0+256),w
 15257  0246  00D8               	movwf	(logf@u+2)^(0+256)
 15258  0247  085F               	movf	(logf@ix+1)^(0+256),w
 15259  0248  00D7               	movwf	(logf@u+1)^(0+256)
 15260  0249  085E               	movf	logf@ix^(0+256),w
 15261  024A  00D6               	movwf	logf@u^(0+256)
 15262  024B  0859               	movf	(logf@u+3)^(0+256),w
 15263  024C  0021               	movlb	1	; select bank1
 15264  024D  00AB               	movwf	(logf@x+3)^(0+128)
 15265  024E  0022               	movlb	2	; select bank2
 15266  024F  0858               	movf	(logf@u+2)^(0+256),w
 15267  0250  0021               	movlb	1	; select bank1
 15268  0251  00AA               	movwf	(logf@x+2)^(0+128)
 15269  0252  0022               	movlb	2	; select bank2
 15270  0253  0857               	movf	(logf@u+1)^(0+256),w
 15271  0254  0021               	movlb	1	; select bank1
 15272  0255  00A9               	movwf	(logf@x+1)^(0+128)
 15273  0256  0022               	movlb	2	; select bank2
 15274  0257  0856               	movf	logf@u^(0+256),w
 15275  0258  0021               	movlb	1	; select bank1
 15276  0259  00A8               	movwf	logf@x^(0+128)
 15277  025A  30BF               	movlw	191
 15278  025B  0020               	movlb	0	; select bank0
 15279  025C  00DD               	movwf	___fladd@b+3
 15280  025D  3080               	movlw	128
 15281  025E  00DC               	movwf	___fladd@b+2
 15282  025F  3000               	movlw	0
 15283  0260  00DB               	movwf	___fladd@b+1
 15284  0261  3000               	movlw	0
 15285  0262  00DA               	movwf	___fladd@b
 15286  0263  0021               	movlb	1	; select bank1
 15287  0264  082B               	movf	(logf@x+3)^(0+128),w
 15288  0265  0020               	movlb	0	; select bank0
 15289  0266  00E1               	movwf	___fladd@a+3
 15290  0267  0021               	movlb	1	; select bank1
 15291  0268  082A               	movf	(logf@x+2)^(0+128),w
 15292  0269  0020               	movlb	0	; select bank0
 15293  026A  00E0               	movwf	___fladd@a+2
 15294  026B  0021               	movlb	1	; select bank1
 15295  026C  0829               	movf	(logf@x+1)^(0+128),w
 15296  026D  0020               	movlb	0	; select bank0
 15297  026E  00DF               	movwf	___fladd@a+1
 15298  026F  0021               	movlb	1	; select bank1
 15299  0270  0828               	movf	logf@x^(0+128),w
 15300  0271  0020               	movlb	0	; select bank0
 15301  0272  00DE               	movwf	___fladd@a
 15302  0273  3185  25FE  3180   	fcall	___fladd
 15303  0276  0020               	movlb	0	; select bank0
 15304  0277  085D               	movf	?___fladd+3,w
 15305  0278  0022               	movlb	2	; select bank2
 15306  0279  00DD               	movwf	(logf@f+3)^(0+256)
 15307  027A  0020               	movlb	0	; select bank0
 15308  027B  085C               	movf	?___fladd+2,w
 15309  027C  0022               	movlb	2	; select bank2
 15310  027D  00DC               	movwf	(logf@f+2)^(0+256)
 15311  027E  0020               	movlb	0	; select bank0
 15312  027F  085B               	movf	?___fladd+1,w
 15313  0280  0022               	movlb	2	; select bank2
 15314  0281  00DB               	movwf	(logf@f+1)^(0+256)
 15315  0282  0020               	movlb	0	; select bank0
 15316  0283  085A               	movf	?___fladd,w
 15317  0284  0022               	movlb	2	; select bank2
 15318  0285  00DA               	movwf	logf@f^(0+256)
 15319  0286  3040               	movlw	64
 15320  0287  0020               	movlb	0	; select bank0
 15321  0288  00DD               	movwf	___fladd@b+3
 15322  0289  3000               	movlw	0
 15323  028A  00DC               	movwf	___fladd@b+2
 15324  028B  3000               	movlw	0
 15325  028C  00DB               	movwf	___fladd@b+1
 15326  028D  3000               	movlw	0
 15327  028E  00DA               	movwf	___fladd@b
 15328  028F  0022               	movlb	2	; select bank2
 15329  0290  085D               	movf	(logf@f+3)^(0+256),w
 15330  0291  0020               	movlb	0	; select bank0
 15331  0292  00E1               	movwf	___fladd@a+3
 15332  0293  0022               	movlb	2	; select bank2
 15333  0294  085C               	movf	(logf@f+2)^(0+256),w
 15334  0295  0020               	movlb	0	; select bank0
 15335  0296  00E0               	movwf	___fladd@a+2
 15336  0297  0022               	movlb	2	; select bank2
 15337  0298  085B               	movf	(logf@f+1)^(0+256),w
 15338  0299  0020               	movlb	0	; select bank0
 15339  029A  00DF               	movwf	___fladd@a+1
 15340  029B  0022               	movlb	2	; select bank2
 15341  029C  085A               	movf	logf@f^(0+256),w
 15342  029D  0020               	movlb	0	; select bank0
 15343  029E  00DE               	movwf	___fladd@a
 15344  029F  3185  25FE  3180   	fcall	___fladd
 15345  02A2  0020               	movlb	0	; select bank0
 15346  02A3  085D               	movf	?___fladd+3,w
 15347  02A4  00C3               	movwf	___fldiv@a+3
 15348  02A5  085C               	movf	?___fladd+2,w
 15349  02A6  00C2               	movwf	___fldiv@a+2
 15350  02A7  085B               	movf	?___fladd+1,w
 15351  02A8  00C1               	movwf	___fldiv@a+1
 15352  02A9  085A               	movf	?___fladd,w
 15353  02AA  00C0               	movwf	___fldiv@a
 15354  02AB  0022               	movlb	2	; select bank2
 15355  02AC  085D               	movf	(logf@f+3)^(0+256),w
 15356  02AD  0020               	movlb	0	; select bank0
 15357  02AE  00C7               	movwf	___fldiv@b+3
 15358  02AF  0022               	movlb	2	; select bank2
 15359  02B0  085C               	movf	(logf@f+2)^(0+256),w
 15360  02B1  0020               	movlb	0	; select bank0
 15361  02B2  00C6               	movwf	___fldiv@b+2
 15362  02B3  0022               	movlb	2	; select bank2
 15363  02B4  085B               	movf	(logf@f+1)^(0+256),w
 15364  02B5  0020               	movlb	0	; select bank0
 15365  02B6  00C5               	movwf	___fldiv@b+1
 15366  02B7  0022               	movlb	2	; select bank2
 15367  02B8  085A               	movf	logf@f^(0+256),w
 15368  02B9  0020               	movlb	0	; select bank0
 15369  02BA  00C4               	movwf	___fldiv@b
 15370  02BB  319C  24E2  3180   	fcall	___fldiv
 15371  02BE  0020               	movlb	0	; select bank0
 15372  02BF  0843               	movf	?___fldiv+3,w
 15373  02C0  0022               	movlb	2	; select bank2
 15374  02C1  00C9               	movwf	(logf@s+3)^(0+256)
 15375  02C2  0020               	movlb	0	; select bank0
 15376  02C3  0842               	movf	?___fldiv+2,w
 15377  02C4  0022               	movlb	2	; select bank2
 15378  02C5  00C8               	movwf	(logf@s+2)^(0+256)
 15379  02C6  0020               	movlb	0	; select bank0
 15380  02C7  0841               	movf	?___fldiv+1,w
 15381  02C8  0022               	movlb	2	; select bank2
 15382  02C9  00C7               	movwf	(logf@s+1)^(0+256)
 15383  02CA  0020               	movlb	0	; select bank0
 15384  02CB  0840               	movf	?___fldiv,w
 15385  02CC  0022               	movlb	2	; select bank2
 15386  02CD  00C6               	movwf	logf@s^(0+256)
 15387  02CE  0849               	movf	(logf@s+3)^(0+256),w
 15388  02CF  0020               	movlb	0	; select bank0
 15389  02D0  00A9               	movwf	___flmul@b+3
 15390  02D1  0022               	movlb	2	; select bank2
 15391  02D2  0848               	movf	(logf@s+2)^(0+256),w
 15392  02D3  0020               	movlb	0	; select bank0
 15393  02D4  00A8               	movwf	___flmul@b+2
 15394  02D5  0022               	movlb	2	; select bank2
 15395  02D6  0847               	movf	(logf@s+1)^(0+256),w
 15396  02D7  0020               	movlb	0	; select bank0
 15397  02D8  00A7               	movwf	___flmul@b+1
 15398  02D9  0022               	movlb	2	; select bank2
 15399  02DA  0846               	movf	logf@s^(0+256),w
 15400  02DB  0020               	movlb	0	; select bank0
 15401  02DC  00A6               	movwf	___flmul@b
 15402  02DD  0022               	movlb	2	; select bank2
 15403  02DE  0849               	movf	(logf@s+3)^(0+256),w
 15404  02DF  0020               	movlb	0	; select bank0
 15405  02E0  00AD               	movwf	___flmul@a+3
 15406  02E1  0022               	movlb	2	; select bank2
 15407  02E2  0848               	movf	(logf@s+2)^(0+256),w
 15408  02E3  0020               	movlb	0	; select bank0
 15409  02E4  00AC               	movwf	___flmul@a+2
 15410  02E5  0022               	movlb	2	; select bank2
 15411  02E6  0847               	movf	(logf@s+1)^(0+256),w
 15412  02E7  0020               	movlb	0	; select bank0
 15413  02E8  00AB               	movwf	___flmul@a+1
 15414  02E9  0022               	movlb	2	; select bank2
 15415  02EA  0846               	movf	logf@s^(0+256),w
 15416  02EB  0020               	movlb	0	; select bank0
 15417  02EC  00AA               	movwf	___flmul@a
 15418  02ED  3190  2022  3180   	fcall	___flmul
 15419  02F0  0020               	movlb	0	; select bank0
 15420  02F1  0829               	movf	?___flmul+3,w
 15421  02F2  0022               	movlb	2	; select bank2
 15422  02F3  00CD               	movwf	(logf@z+3)^(0+256)
 15423  02F4  0020               	movlb	0	; select bank0
 15424  02F5  0828               	movf	?___flmul+2,w
 15425  02F6  0022               	movlb	2	; select bank2
 15426  02F7  00CC               	movwf	(logf@z+2)^(0+256)
 15427  02F8  0020               	movlb	0	; select bank0
 15428  02F9  0827               	movf	?___flmul+1,w
 15429  02FA  0022               	movlb	2	; select bank2
 15430  02FB  00CB               	movwf	(logf@z+1)^(0+256)
 15431  02FC  0020               	movlb	0	; select bank0
 15432  02FD  0826               	movf	?___flmul,w
 15433  02FE  0022               	movlb	2	; select bank2
 15434  02FF  00CA               	movwf	logf@z^(0+256)
 15435  0300  084D               	movf	(logf@z+3)^(0+256),w
 15436  0301  0020               	movlb	0	; select bank0
 15437  0302  00A9               	movwf	___flmul@b+3
 15438  0303  0022               	movlb	2	; select bank2
 15439  0304  084C               	movf	(logf@z+2)^(0+256),w
 15440  0305  0020               	movlb	0	; select bank0
 15441  0306  00A8               	movwf	___flmul@b+2
 15442  0307  0022               	movlb	2	; select bank2
 15443  0308  084B               	movf	(logf@z+1)^(0+256),w
 15444  0309  0020               	movlb	0	; select bank0
 15445  030A  00A7               	movwf	___flmul@b+1
 15446  030B  0022               	movlb	2	; select bank2
 15447  030C  084A               	movf	logf@z^(0+256),w
 15448  030D  0020               	movlb	0	; select bank0
 15449  030E  00A6               	movwf	___flmul@b
 15450  030F  0022               	movlb	2	; select bank2
 15451  0310  084D               	movf	(logf@z+3)^(0+256),w
 15452  0311  0020               	movlb	0	; select bank0
 15453  0312  00AD               	movwf	___flmul@a+3
 15454  0313  0022               	movlb	2	; select bank2
 15455  0314  084C               	movf	(logf@z+2)^(0+256),w
 15456  0315  0020               	movlb	0	; select bank0
 15457  0316  00AC               	movwf	___flmul@a+2
 15458  0317  0022               	movlb	2	; select bank2
 15459  0318  084B               	movf	(logf@z+1)^(0+256),w
 15460  0319  0020               	movlb	0	; select bank0
 15461  031A  00AB               	movwf	___flmul@a+1
 15462  031B  0022               	movlb	2	; select bank2
 15463  031C  084A               	movf	logf@z^(0+256),w
 15464  031D  0020               	movlb	0	; select bank0
 15465  031E  00AA               	movwf	___flmul@a
 15466  031F  3190  2022  3180   	fcall	___flmul
 15467  0322  0020               	movlb	0	; select bank0
 15468  0323  0829               	movf	?___flmul+3,w
 15469  0324  0022               	movlb	2	; select bank2
 15470  0325  00D1               	movwf	(logf@w+3)^(0+256)
 15471  0326  0020               	movlb	0	; select bank0
 15472  0327  0828               	movf	?___flmul+2,w
 15473  0328  0022               	movlb	2	; select bank2
 15474  0329  00D0               	movwf	(logf@w+2)^(0+256)
 15475  032A  0020               	movlb	0	; select bank0
 15476  032B  0827               	movf	?___flmul+1,w
 15477  032C  0022               	movlb	2	; select bank2
 15478  032D  00CF               	movwf	(logf@w+1)^(0+256)
 15479  032E  0020               	movlb	0	; select bank0
 15480  032F  0826               	movf	?___flmul,w
 15481  0330  0022               	movlb	2	; select bank2
 15482  0331  00CE               	movwf	logf@w^(0+256)
 15483  0332  303E               	movlw	62
 15484  0333  0020               	movlb	0	; select bank0
 15485  0334  00DD               	movwf	___fladd@b+3
 15486  0335  30CC               	movlw	204
 15487  0336  00DC               	movwf	___fladd@b+2
 15488  0337  30CE               	movlw	206
 15489  0338  00DB               	movwf	___fladd@b+1
 15490  0339  3013               	movlw	19
 15491  033A  00DA               	movwf	___fladd@b
 15492  033B  303E               	movlw	62
 15493  033C  00A9               	movwf	___flmul@b+3
 15494  033D  3078               	movlw	120
 15495  033E  00A8               	movwf	___flmul@b+2
 15496  033F  309E               	movlw	158
 15497  0340  00A7               	movwf	___flmul@b+1
 15498  0341  3026               	movlw	38
 15499  0342  00A6               	movwf	___flmul@b
 15500  0343  0022               	movlb	2	; select bank2
 15501  0344  0851               	movf	(logf@w+3)^(0+256),w
 15502  0345  0020               	movlb	0	; select bank0
 15503  0346  00AD               	movwf	___flmul@a+3
 15504  0347  0022               	movlb	2	; select bank2
 15505  0348  0850               	movf	(logf@w+2)^(0+256),w
 15506  0349  0020               	movlb	0	; select bank0
 15507  034A  00AC               	movwf	___flmul@a+2
 15508  034B  0022               	movlb	2	; select bank2
 15509  034C  084F               	movf	(logf@w+1)^(0+256),w
 15510  034D  0020               	movlb	0	; select bank0
 15511  034E  00AB               	movwf	___flmul@a+1
 15512  034F  0022               	movlb	2	; select bank2
 15513  0350  084E               	movf	logf@w^(0+256),w
 15514  0351  0020               	movlb	0	; select bank0
 15515  0352  00AA               	movwf	___flmul@a
 15516  0353  3190  2022  3180   	fcall	___flmul
 15517  0356  0020               	movlb	0	; select bank0
 15518  0357  0829               	movf	?___flmul+3,w
 15519  0358  00E1               	movwf	___fladd@a+3
 15520  0359  0828               	movf	?___flmul+2,w
 15521  035A  00E0               	movwf	___fladd@a+2
 15522  035B  0827               	movf	?___flmul+1,w
 15523  035C  00DF               	movwf	___fladd@a+1
 15524  035D  0826               	movf	?___flmul,w
 15525  035E  00DE               	movwf	___fladd@a
 15526  035F  3185  25FE  3180   	fcall	___fladd
 15527  0362  0020               	movlb	0	; select bank0
 15528  0363  085D               	movf	?___fladd+3,w
 15529  0364  0022               	movlb	2	; select bank2
 15530  0365  00D5               	movwf	(_logf$2275+3)^(0+256)
 15531  0366  0020               	movlb	0	; select bank0
 15532  0367  085C               	movf	?___fladd+2,w
 15533  0368  0022               	movlb	2	; select bank2
 15534  0369  00D4               	movwf	(_logf$2275+2)^(0+256)
 15535  036A  0020               	movlb	0	; select bank0
 15536  036B  085B               	movf	?___fladd+1,w
 15537  036C  0022               	movlb	2	; select bank2
 15538  036D  00D3               	movwf	(_logf$2275+1)^(0+256)
 15539  036E  0020               	movlb	0	; select bank0
 15540  036F  085A               	movf	?___fladd,w
 15541  0370  0022               	movlb	2	; select bank2
 15542  0371  00D2               	movwf	_logf$2275^(0+256)
 15543  0372  0851               	movf	(logf@w+3)^(0+256),w
 15544  0373  0020               	movlb	0	; select bank0
 15545  0374  00A9               	movwf	___flmul@b+3
 15546  0375  0022               	movlb	2	; select bank2
 15547  0376  0850               	movf	(logf@w+2)^(0+256),w
 15548  0377  0020               	movlb	0	; select bank0
 15549  0378  00A8               	movwf	___flmul@b+2
 15550  0379  0022               	movlb	2	; select bank2
 15551  037A  084F               	movf	(logf@w+1)^(0+256),w
 15552  037B  0020               	movlb	0	; select bank0
 15553  037C  00A7               	movwf	___flmul@b+1
 15554  037D  0022               	movlb	2	; select bank2
 15555  037E  084E               	movf	logf@w^(0+256),w
 15556  037F  0020               	movlb	0	; select bank0
 15557  0380  00A6               	movwf	___flmul@b
 15558  0381  0022               	movlb	2	; select bank2
 15559  0382  0855               	movf	(_logf$2275+3)^(0+256),w
 15560  0383  0020               	movlb	0	; select bank0
 15561  0384  00AD               	movwf	___flmul@a+3
 15562  0385  0022               	movlb	2	; select bank2
 15563  0386  0854               	movf	(_logf$2275+2)^(0+256),w
 15564  0387  0020               	movlb	0	; select bank0
 15565  0388  00AC               	movwf	___flmul@a+2
 15566  0389  0022               	movlb	2	; select bank2
 15567  038A  0853               	movf	(_logf$2275+1)^(0+256),w
 15568  038B  0020               	movlb	0	; select bank0
 15569  038C  00AB               	movwf	___flmul@a+1
 15570  038D  0022               	movlb	2	; select bank2
 15571  038E  0852               	movf	_logf$2275^(0+256),w
 15572  038F  0020               	movlb	0	; select bank0
 15573  0390  00AA               	movwf	___flmul@a
 15574  0391  3190  2022  3180   	fcall	___flmul
 15575  0394  0020               	movlb	0	; select bank0
 15576  0395  0829               	movf	?___flmul+3,w
 15577  0396  0022               	movlb	2	; select bank2
 15578  0397  00A7               	movwf	(logf@t1+3)^(0+256)
 15579  0398  0020               	movlb	0	; select bank0
 15580  0399  0828               	movf	?___flmul+2,w
 15581  039A  0022               	movlb	2	; select bank2
 15582  039B  00A6               	movwf	(logf@t1+2)^(0+256)
 15583  039C  0020               	movlb	0	; select bank0
 15584  039D  0827               	movf	?___flmul+1,w
 15585  039E  0022               	movlb	2	; select bank2
 15586  039F  00A5               	movwf	(logf@t1+1)^(0+256)
 15587  03A0  0020               	movlb	0	; select bank0
 15588  03A1  0826               	movf	?___flmul,w
 15589  03A2  0022               	movlb	2	; select bank2
 15590  03A3  00A4               	movwf	logf@t1^(0+256)
 15591  03A4  303F               	movlw	63
 15592  03A5  0020               	movlb	0	; select bank0
 15593  03A6  00DD               	movwf	___fladd@b+3
 15594  03A7  302A               	movlw	42
 15595  03A8  00DC               	movwf	___fladd@b+2
 15596  03A9  30AA               	movlw	170
 15597  03AA  00DB               	movwf	___fladd@b+1
 15598  03AB  30AA               	movlw	170
 15599  03AC  00DA               	movwf	___fladd@b
 15600  03AD  303E               	movlw	62
 15601  03AE  00A9               	movwf	___flmul@b+3
 15602  03AF  3091               	movlw	145
 15603  03B0  00A8               	movwf	___flmul@b+2
 15604  03B1  30E9               	movlw	233
 15605  03B2  00A7               	movwf	___flmul@b+1
 15606  03B3  30EE               	movlw	238
 15607  03B4  00A6               	movwf	___flmul@b
 15608  03B5  0022               	movlb	2	; select bank2
 15609  03B6  0851               	movf	(logf@w+3)^(0+256),w
 15610  03B7  0020               	movlb	0	; select bank0
 15611  03B8  00AD               	movwf	___flmul@a+3
 15612  03B9  0022               	movlb	2	; select bank2
 15613  03BA  0850               	movf	(logf@w+2)^(0+256),w
 15614  03BB  0020               	movlb	0	; select bank0
 15615  03BC  00AC               	movwf	___flmul@a+2
 15616  03BD  0022               	movlb	2	; select bank2
 15617  03BE  084F               	movf	(logf@w+1)^(0+256),w
 15618  03BF  0020               	movlb	0	; select bank0
 15619  03C0  00AB               	movwf	___flmul@a+1
 15620  03C1  0022               	movlb	2	; select bank2
 15621  03C2  084E               	movf	logf@w^(0+256),w
 15622  03C3  0020               	movlb	0	; select bank0
 15623  03C4  00AA               	movwf	___flmul@a
 15624  03C5  3190  2022  3180   	fcall	___flmul
 15625  03C8  0020               	movlb	0	; select bank0
 15626  03C9  0829               	movf	?___flmul+3,w
 15627  03CA  00E1               	movwf	___fladd@a+3
 15628  03CB  0828               	movf	?___flmul+2,w
 15629  03CC  00E0               	movwf	___fladd@a+2
 15630  03CD  0827               	movf	?___flmul+1,w
 15631  03CE  00DF               	movwf	___fladd@a+1
 15632  03CF  0826               	movf	?___flmul,w
 15633  03D0  00DE               	movwf	___fladd@a
 15634  03D1  3185  25FE  3180   	fcall	___fladd
 15635  03D4  0020               	movlb	0	; select bank0
 15636  03D5  085D               	movf	?___fladd+3,w
 15637  03D6  0022               	movlb	2	; select bank2
 15638  03D7  00D5               	movwf	(_logf$2275+3)^(0+256)
 15639  03D8  0020               	movlb	0	; select bank0
 15640  03D9  085C               	movf	?___fladd+2,w
 15641  03DA  0022               	movlb	2	; select bank2
 15642  03DB  00D4               	movwf	(_logf$2275+2)^(0+256)
 15643  03DC  0020               	movlb	0	; select bank0
 15644  03DD  085B               	movf	?___fladd+1,w
 15645  03DE  0022               	movlb	2	; select bank2
 15646  03DF  00D3               	movwf	(_logf$2275+1)^(0+256)
 15647  03E0  0020               	movlb	0	; select bank0
 15648  03E1  085A               	movf	?___fladd,w
 15649  03E2  0022               	movlb	2	; select bank2
 15650  03E3  00D2               	movwf	_logf$2275^(0+256)
 15651  03E4  084D               	movf	(logf@z+3)^(0+256),w
 15652  03E5  0020               	movlb	0	; select bank0
 15653  03E6  00A9               	movwf	___flmul@b+3
 15654  03E7  0022               	movlb	2	; select bank2
 15655  03E8  084C               	movf	(logf@z+2)^(0+256),w
 15656  03E9  0020               	movlb	0	; select bank0
 15657  03EA  00A8               	movwf	___flmul@b+2
 15658  03EB  0022               	movlb	2	; select bank2
 15659  03EC  084B               	movf	(logf@z+1)^(0+256),w
 15660  03ED  0020               	movlb	0	; select bank0
 15661  03EE  00A7               	movwf	___flmul@b+1
 15662  03EF  0022               	movlb	2	; select bank2
 15663  03F0  084A               	movf	logf@z^(0+256),w
 15664  03F1  0020               	movlb	0	; select bank0
 15665  03F2  00A6               	movwf	___flmul@b
 15666  03F3  0022               	movlb	2	; select bank2
 15667  03F4  0855               	movf	(_logf$2275+3)^(0+256),w
 15668  03F5  0020               	movlb	0	; select bank0
 15669  03F6  00AD               	movwf	___flmul@a+3
 15670  03F7  0022               	movlb	2	; select bank2
 15671  03F8  0854               	movf	(_logf$2275+2)^(0+256),w
 15672  03F9  0020               	movlb	0	; select bank0
 15673  03FA  00AC               	movwf	___flmul@a+2
 15674  03FB  0022               	movlb	2	; select bank2
 15675  03FC  0853               	movf	(_logf$2275+1)^(0+256),w
 15676  03FD  0020               	movlb	0	; select bank0
 15677  03FE  00AB               	movwf	___flmul@a+1
 15678  03FF  0022               	movlb	2	; select bank2
 15679  0400  0852               	movf	_logf$2275^(0+256),w
 15680  0401  0020               	movlb	0	; select bank0
 15681  0402  00AA               	movwf	___flmul@a
 15682  0403  3190  2022  3180   	fcall	___flmul
 15683  0406  0020               	movlb	0	; select bank0
 15684  0407  0829               	movf	?___flmul+3,w
 15685  0408  0022               	movlb	2	; select bank2
 15686  0409  00AB               	movwf	(logf@t2+3)^(0+256)
 15687  040A  0020               	movlb	0	; select bank0
 15688  040B  0828               	movf	?___flmul+2,w
 15689  040C  0022               	movlb	2	; select bank2
 15690  040D  00AA               	movwf	(logf@t2+2)^(0+256)
 15691  040E  0020               	movlb	0	; select bank0
 15692  040F  0827               	movf	?___flmul+1,w
 15693  0410  0022               	movlb	2	; select bank2
 15694  0411  00A9               	movwf	(logf@t2+1)^(0+256)
 15695  0412  0020               	movlb	0	; select bank0
 15696  0413  0826               	movf	?___flmul,w
 15697  0414  0022               	movlb	2	; select bank2
 15698  0415  00A8               	movwf	logf@t2^(0+256)
 15699  0416  0827               	movf	(logf@t1+3)^(0+256),w
 15700  0417  0020               	movlb	0	; select bank0
 15701  0418  00DD               	movwf	___fladd@b+3
 15702  0419  0022               	movlb	2	; select bank2
 15703  041A  0826               	movf	(logf@t1+2)^(0+256),w
 15704  041B  0020               	movlb	0	; select bank0
 15705  041C  00DC               	movwf	___fladd@b+2
 15706  041D  0022               	movlb	2	; select bank2
 15707  041E  0825               	movf	(logf@t1+1)^(0+256),w
 15708  041F  0020               	movlb	0	; select bank0
 15709  0420  00DB               	movwf	___fladd@b+1
 15710  0421  0022               	movlb	2	; select bank2
 15711  0422  0824               	movf	logf@t1^(0+256),w
 15712  0423  0020               	movlb	0	; select bank0
 15713  0424  00DA               	movwf	___fladd@b
 15714  0425  0022               	movlb	2	; select bank2
 15715  0426  082B               	movf	(logf@t2+3)^(0+256),w
 15716  0427  0020               	movlb	0	; select bank0
 15717  0428  00E1               	movwf	___fladd@a+3
 15718  0429  0022               	movlb	2	; select bank2
 15719  042A  082A               	movf	(logf@t2+2)^(0+256),w
 15720  042B  0020               	movlb	0	; select bank0
 15721  042C  00E0               	movwf	___fladd@a+2
 15722  042D  0022               	movlb	2	; select bank2
 15723  042E  0829               	movf	(logf@t2+1)^(0+256),w
 15724  042F  0020               	movlb	0	; select bank0
 15725  0430  00DF               	movwf	___fladd@a+1
 15726  0431  0022               	movlb	2	; select bank2
 15727  0432  0828               	movf	logf@t2^(0+256),w
 15728  0433  0020               	movlb	0	; select bank0
 15729  0434  00DE               	movwf	___fladd@a
 15730  0435  3185  25FE  3180   	fcall	___fladd
 15731  0438  0020               	movlb	0	; select bank0
 15732  0439  085D               	movf	?___fladd+3,w
 15733  043A  0022               	movlb	2	; select bank2
 15734  043B  00A3               	movwf	(logf@R+3)^(0+256)
 15735  043C  0020               	movlb	0	; select bank0
 15736  043D  085C               	movf	?___fladd+2,w
 15737  043E  0022               	movlb	2	; select bank2
 15738  043F  00A2               	movwf	(logf@R+2)^(0+256)
 15739  0440  0020               	movlb	0	; select bank0
 15740  0441  085B               	movf	?___fladd+1,w
 15741  0442  0022               	movlb	2	; select bank2
 15742  0443  00A1               	movwf	(logf@R+1)^(0+256)
 15743  0444  0020               	movlb	0	; select bank0
 15744  0445  085A               	movf	?___fladd,w
 15745  0446  0022               	movlb	2	; select bank2
 15746  0447  00A0               	movwf	logf@R^(0+256)
 15747  0448  303F               	movlw	63
 15748  0449  0020               	movlb	0	; select bank0
 15749  044A  00A9               	movwf	___flmul@b+3
 15750  044B  3000               	movlw	0
 15751  044C  00A8               	movwf	___flmul@b+2
 15752  044D  3000               	movlw	0
 15753  044E  00A7               	movwf	___flmul@b+1
 15754  044F  3000               	movlw	0
 15755  0450  00A6               	movwf	___flmul@b
 15756  0451  0022               	movlb	2	; select bank2
 15757  0452  085D               	movf	(logf@f+3)^(0+256),w
 15758  0453  0020               	movlb	0	; select bank0
 15759  0454  00AD               	movwf	___flmul@a+3
 15760  0455  0022               	movlb	2	; select bank2
 15761  0456  085C               	movf	(logf@f+2)^(0+256),w
 15762  0457  0020               	movlb	0	; select bank0
 15763  0458  00AC               	movwf	___flmul@a+2
 15764  0459  0022               	movlb	2	; select bank2
 15765  045A  085B               	movf	(logf@f+1)^(0+256),w
 15766  045B  0020               	movlb	0	; select bank0
 15767  045C  00AB               	movwf	___flmul@a+1
 15768  045D  0022               	movlb	2	; select bank2
 15769  045E  085A               	movf	logf@f^(0+256),w
 15770  045F  0020               	movlb	0	; select bank0
 15771  0460  00AA               	movwf	___flmul@a
 15772  0461  3190  2022  3180   	fcall	___flmul
 15773  0464  0020               	movlb	0	; select bank0
 15774  0465  0829               	movf	?___flmul+3,w
 15775  0466  0022               	movlb	2	; select bank2
 15776  0467  00D5               	movwf	(_logf$2275+3)^(0+256)
 15777  0468  0020               	movlb	0	; select bank0
 15778  0469  0828               	movf	?___flmul+2,w
 15779  046A  0022               	movlb	2	; select bank2
 15780  046B  00D4               	movwf	(_logf$2275+2)^(0+256)
 15781  046C  0020               	movlb	0	; select bank0
 15782  046D  0827               	movf	?___flmul+1,w
 15783  046E  0022               	movlb	2	; select bank2
 15784  046F  00D3               	movwf	(_logf$2275+1)^(0+256)
 15785  0470  0020               	movlb	0	; select bank0
 15786  0471  0826               	movf	?___flmul,w
 15787  0472  0022               	movlb	2	; select bank2
 15788  0473  00D2               	movwf	_logf$2275^(0+256)
 15789  0474  085D               	movf	(logf@f+3)^(0+256),w
 15790  0475  0020               	movlb	0	; select bank0
 15791  0476  00A9               	movwf	___flmul@b+3
 15792  0477  0022               	movlb	2	; select bank2
 15793  0478  085C               	movf	(logf@f+2)^(0+256),w
 15794  0479  0020               	movlb	0	; select bank0
 15795  047A  00A8               	movwf	___flmul@b+2
 15796  047B  0022               	movlb	2	; select bank2
 15797  047C  085B               	movf	(logf@f+1)^(0+256),w
 15798  047D  0020               	movlb	0	; select bank0
 15799  047E  00A7               	movwf	___flmul@b+1
 15800  047F  0022               	movlb	2	; select bank2
 15801  0480  085A               	movf	logf@f^(0+256),w
 15802  0481  0020               	movlb	0	; select bank0
 15803  0482  00A6               	movwf	___flmul@b
 15804  0483  0022               	movlb	2	; select bank2
 15805  0484  0855               	movf	(_logf$2275+3)^(0+256),w
 15806  0485  0020               	movlb	0	; select bank0
 15807  0486  00AD               	movwf	___flmul@a+3
 15808  0487  0022               	movlb	2	; select bank2
 15809  0488  0854               	movf	(_logf$2275+2)^(0+256),w
 15810  0489  0020               	movlb	0	; select bank0
 15811  048A  00AC               	movwf	___flmul@a+2
 15812  048B  0022               	movlb	2	; select bank2
 15813  048C  0853               	movf	(_logf$2275+1)^(0+256),w
 15814  048D  0020               	movlb	0	; select bank0
 15815  048E  00AB               	movwf	___flmul@a+1
 15816  048F  0022               	movlb	2	; select bank2
 15817  0490  0852               	movf	_logf$2275^(0+256),w
 15818  0491  0020               	movlb	0	; select bank0
 15819  0492  00AA               	movwf	___flmul@a
 15820  0493  3190  2022  3180   	fcall	___flmul
 15821  0496  0020               	movlb	0	; select bank0
 15822  0497  0829               	movf	?___flmul+3,w
 15823  0498  0022               	movlb	2	; select bank2
 15824  0499  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15825  049A  0020               	movlb	0	; select bank0
 15826  049B  0828               	movf	?___flmul+2,w
 15827  049C  0022               	movlb	2	; select bank2
 15828  049D  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15829  049E  0020               	movlb	0	; select bank0
 15830  049F  0827               	movf	?___flmul+1,w
 15831  04A0  0022               	movlb	2	; select bank2
 15832  04A1  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15833  04A2  0020               	movlb	0	; select bank0
 15834  04A3  0826               	movf	?___flmul,w
 15835  04A4  0022               	movlb	2	; select bank2
 15836  04A5  00BE               	movwf	logf@hfsq^(0+256)
 15837  04A6  083C               	movf	logf@k^(0+256),w
 15838  04A7  00F1               	movwf	___xxtofl@val
 15839  04A8  083D               	movf	(logf@k+1)^(0+256),w
 15840  04A9  00F2               	movwf	___xxtofl@val+1
 15841  04AA  0D89               	rlf	9,f
 15842  04AB  3B89               	subwfb	9,f
 15843  04AC  0989               	comf	9,f
 15844  04AD  00F3               	movwf	___xxtofl@val+2
 15845  04AE  00F4               	movwf	___xxtofl@val+3
 15846  04AF  3001               	movlw	1
 15847  04B0  31AB  23E3  3180   	fcall	___xxtofl
 15848  04B3  0874               	movf	?___xxtofl+3,w
 15849  04B4  0022               	movlb	2	; select bank2
 15850  04B5  00C5               	movwf	(logf@dk+3)^(0+256)
 15851  04B6  0873               	movf	?___xxtofl+2,w
 15852  04B7  00C4               	movwf	(logf@dk+2)^(0+256)
 15853  04B8  0872               	movf	?___xxtofl+1,w
 15854  04B9  00C3               	movwf	(logf@dk+1)^(0+256)
 15855  04BA  0871               	movf	?___xxtofl,w
 15856  04BB  00C2               	movwf	logf@dk^(0+256)
 15857  04BC  0849               	movf	(logf@s+3)^(0+256),w
 15858  04BD  0020               	movlb	0	; select bank0
 15859  04BE  00A9               	movwf	___flmul@b+3
 15860  04BF  0022               	movlb	2	; select bank2
 15861  04C0  0848               	movf	(logf@s+2)^(0+256),w
 15862  04C1  0020               	movlb	0	; select bank0
 15863  04C2  00A8               	movwf	___flmul@b+2
 15864  04C3  0022               	movlb	2	; select bank2
 15865  04C4  0847               	movf	(logf@s+1)^(0+256),w
 15866  04C5  0020               	movlb	0	; select bank0
 15867  04C6  00A7               	movwf	___flmul@b+1
 15868  04C7  0022               	movlb	2	; select bank2
 15869  04C8  0846               	movf	logf@s^(0+256),w
 15870  04C9  0020               	movlb	0	; select bank0
 15871  04CA  00A6               	movwf	___flmul@b
 15872  04CB  0022               	movlb	2	; select bank2
 15873  04CC  0823               	movf	(logf@R+3)^(0+256),w
 15874  04CD  0020               	movlb	0	; select bank0
 15875  04CE  00DD               	movwf	___fladd@b+3
 15876  04CF  0022               	movlb	2	; select bank2
 15877  04D0  0822               	movf	(logf@R+2)^(0+256),w
 15878  04D1  0020               	movlb	0	; select bank0
 15879  04D2  00DC               	movwf	___fladd@b+2
 15880  04D3  0022               	movlb	2	; select bank2
 15881  04D4  0821               	movf	(logf@R+1)^(0+256),w
 15882  04D5  0020               	movlb	0	; select bank0
 15883  04D6  00DB               	movwf	___fladd@b+1
 15884  04D7  0022               	movlb	2	; select bank2
 15885  04D8  0820               	movf	logf@R^(0+256),w
 15886  04D9  0020               	movlb	0	; select bank0
 15887  04DA  00DA               	movwf	___fladd@b
 15888  04DB  0022               	movlb	2	; select bank2
 15889  04DC  0841               	movf	(logf@hfsq+3)^(0+256),w
 15890  04DD  0020               	movlb	0	; select bank0
 15891  04DE  00E1               	movwf	___fladd@a+3
 15892  04DF  0022               	movlb	2	; select bank2
 15893  04E0  0840               	movf	(logf@hfsq+2)^(0+256),w
 15894  04E1  0020               	movlb	0	; select bank0
 15895  04E2  00E0               	movwf	___fladd@a+2
 15896  04E3  0022               	movlb	2	; select bank2
 15897  04E4  083F               	movf	(logf@hfsq+1)^(0+256),w
 15898  04E5  0020               	movlb	0	; select bank0
 15899  04E6  00DF               	movwf	___fladd@a+1
 15900  04E7  0022               	movlb	2	; select bank2
 15901  04E8  083E               	movf	logf@hfsq^(0+256),w
 15902  04E9  0020               	movlb	0	; select bank0
 15903  04EA  00DE               	movwf	___fladd@a
 15904  04EB  3185  25FE  3180   	fcall	___fladd
 15905  04EE  0020               	movlb	0	; select bank0
 15906  04EF  085D               	movf	?___fladd+3,w
 15907  04F0  00AD               	movwf	___flmul@a+3
 15908  04F1  085C               	movf	?___fladd+2,w
 15909  04F2  00AC               	movwf	___flmul@a+2
 15910  04F3  085B               	movf	?___fladd+1,w
 15911  04F4  00AB               	movwf	___flmul@a+1
 15912  04F5  085A               	movf	?___fladd,w
 15913  04F6  00AA               	movwf	___flmul@a
 15914  04F7  3190  2022  3180   	fcall	___flmul
 15915  04FA  0020               	movlb	0	; select bank0
 15916  04FB  0829               	movf	?___flmul+3,w
 15917  04FC  0022               	movlb	2	; select bank2
 15918  04FD  00AF               	movwf	(_logf$2276+3)^(0+256)
 15919  04FE  0020               	movlb	0	; select bank0
 15920  04FF  0828               	movf	?___flmul+2,w
 15921  0500  0022               	movlb	2	; select bank2
 15922  0501  00AE               	movwf	(_logf$2276+2)^(0+256)
 15923  0502  0020               	movlb	0	; select bank0
 15924  0503  0827               	movf	?___flmul+1,w
 15925  0504  0022               	movlb	2	; select bank2
 15926  0505  00AD               	movwf	(_logf$2276+1)^(0+256)
 15927  0506  0020               	movlb	0	; select bank0
 15928  0507  0826               	movf	?___flmul,w
 15929  0508  0022               	movlb	2	; select bank2
 15930  0509  00AC               	movwf	_logf$2276^(0+256)
 15931  050A  3037               	movlw	55
 15932  050B  0020               	movlb	0	; select bank0
 15933  050C  00A9               	movwf	___flmul@b+3
 15934  050D  3017               	movlw	23
 15935  050E  00A8               	movwf	___flmul@b+2
 15936  050F  30F7               	movlw	247
 15937  0510  00A7               	movwf	___flmul@b+1
 15938  0511  30D1               	movlw	209
 15939  0512  00A6               	movwf	___flmul@b
 15940  0513  0022               	movlb	2	; select bank2
 15941  0514  0845               	movf	(logf@dk+3)^(0+256),w
 15942  0515  0020               	movlb	0	; select bank0
 15943  0516  00AD               	movwf	___flmul@a+3
 15944  0517  0022               	movlb	2	; select bank2
 15945  0518  0844               	movf	(logf@dk+2)^(0+256),w
 15946  0519  0020               	movlb	0	; select bank0
 15947  051A  00AC               	movwf	___flmul@a+2
 15948  051B  0022               	movlb	2	; select bank2
 15949  051C  0843               	movf	(logf@dk+1)^(0+256),w
 15950  051D  0020               	movlb	0	; select bank0
 15951  051E  00AB               	movwf	___flmul@a+1
 15952  051F  0022               	movlb	2	; select bank2
 15953  0520  0842               	movf	logf@dk^(0+256),w
 15954  0521  0020               	movlb	0	; select bank0
 15955  0522  00AA               	movwf	___flmul@a
 15956  0523  3190  2022  3180   	fcall	___flmul
 15957  0526  0020               	movlb	0	; select bank0
 15958  0527  0829               	movf	?___flmul+3,w
 15959  0528  00DD               	movwf	___fladd@b+3
 15960  0529  0828               	movf	?___flmul+2,w
 15961  052A  00DC               	movwf	___fladd@b+2
 15962  052B  0827               	movf	?___flmul+1,w
 15963  052C  00DB               	movwf	___fladd@b+1
 15964  052D  0826               	movf	?___flmul,w
 15965  052E  00DA               	movwf	___fladd@b
 15966  052F  0022               	movlb	2	; select bank2
 15967  0530  082F               	movf	(_logf$2276+3)^(0+256),w
 15968  0531  0020               	movlb	0	; select bank0
 15969  0532  00E1               	movwf	___fladd@a+3
 15970  0533  0022               	movlb	2	; select bank2
 15971  0534  082E               	movf	(_logf$2276+2)^(0+256),w
 15972  0535  0020               	movlb	0	; select bank0
 15973  0536  00E0               	movwf	___fladd@a+2
 15974  0537  0022               	movlb	2	; select bank2
 15975  0538  082D               	movf	(_logf$2276+1)^(0+256),w
 15976  0539  0020               	movlb	0	; select bank0
 15977  053A  00DF               	movwf	___fladd@a+1
 15978  053B  0022               	movlb	2	; select bank2
 15979  053C  082C               	movf	_logf$2276^(0+256),w
 15980  053D  0020               	movlb	0	; select bank0
 15981  053E  00DE               	movwf	___fladd@a
 15982  053F  3185  25FE  3180   	fcall	___fladd
 15983  0542  0020               	movlb	0	; select bank0
 15984  0543  085D               	movf	?___fladd+3,w
 15985  0544  0022               	movlb	2	; select bank2
 15986  0545  00B3               	movwf	(_logf$2277+3)^(0+256)
 15987  0546  0020               	movlb	0	; select bank0
 15988  0547  085C               	movf	?___fladd+2,w
 15989  0548  0022               	movlb	2	; select bank2
 15990  0549  00B2               	movwf	(_logf$2277+2)^(0+256)
 15991  054A  0020               	movlb	0	; select bank0
 15992  054B  085B               	movf	?___fladd+1,w
 15993  054C  0022               	movlb	2	; select bank2
 15994  054D  00B1               	movwf	(_logf$2277+1)^(0+256)
 15995  054E  0020               	movlb	0	; select bank0
 15996  054F  085A               	movf	?___fladd,w
 15997  0550  0022               	movlb	2	; select bank2
 15998  0551  00B0               	movwf	_logf$2277^(0+256)
 15999  0552  0841               	movf	(logf@hfsq+3)^(0+256),w
 16000  0553  0021               	movlb	1	; select bank1
 16001  0554  00A3               	movwf	(___flsub@a+3)^(0+128)
 16002  0555  0022               	movlb	2	; select bank2
 16003  0556  0840               	movf	(logf@hfsq+2)^(0+256),w
 16004  0557  0021               	movlb	1	; select bank1
 16005  0558  00A2               	movwf	(___flsub@a+2)^(0+128)
 16006  0559  0022               	movlb	2	; select bank2
 16007  055A  083F               	movf	(logf@hfsq+1)^(0+256),w
 16008  055B  0021               	movlb	1	; select bank1
 16009  055C  00A1               	movwf	(___flsub@a+1)^(0+128)
 16010  055D  0022               	movlb	2	; select bank2
 16011  055E  083E               	movf	logf@hfsq^(0+256),w
 16012  055F  0021               	movlb	1	; select bank1
 16013  0560  00A0               	movwf	___flsub@a^(0+128)
 16014  0561  0022               	movlb	2	; select bank2
 16015  0562  0833               	movf	(_logf$2277+3)^(0+256),w
 16016  0563  0021               	movlb	1	; select bank1
 16017  0564  00A7               	movwf	(___flsub@b+3)^(0+128)
 16018  0565  0022               	movlb	2	; select bank2
 16019  0566  0832               	movf	(_logf$2277+2)^(0+256),w
 16020  0567  0021               	movlb	1	; select bank1
 16021  0568  00A6               	movwf	(___flsub@b+2)^(0+128)
 16022  0569  0022               	movlb	2	; select bank2
 16023  056A  0831               	movf	(_logf$2277+1)^(0+256),w
 16024  056B  0021               	movlb	1	; select bank1
 16025  056C  00A5               	movwf	(___flsub@b+1)^(0+128)
 16026  056D  0022               	movlb	2	; select bank2
 16027  056E  0830               	movf	_logf$2277^(0+256),w
 16028  056F  0021               	movlb	1	; select bank1
 16029  0570  00A4               	movwf	___flsub@b^(0+128)
 16030  0571  31B5  251D  3180   	fcall	___flsub
 16031  0574  0021               	movlb	1	; select bank1
 16032  0575  0823               	movf	(?___flsub+3)^(0+128),w
 16033  0576  0022               	movlb	2	; select bank2
 16034  0577  00B7               	movwf	(_logf$2278+3)^(0+256)
 16035  0578  0021               	movlb	1	; select bank1
 16036  0579  0822               	movf	(?___flsub+2)^(0+128),w
 16037  057A  0022               	movlb	2	; select bank2
 16038  057B  00B6               	movwf	(_logf$2278+2)^(0+256)
 16039  057C  0021               	movlb	1	; select bank1
 16040  057D  0821               	movf	(?___flsub+1)^(0+128),w
 16041  057E  0022               	movlb	2	; select bank2
 16042  057F  00B5               	movwf	(_logf$2278+1)^(0+256)
 16043  0580  0021               	movlb	1	; select bank1
 16044  0581  0820               	movf	?___flsub^(0+128),w
 16045  0582  0022               	movlb	2	; select bank2
 16046  0583  00B4               	movwf	_logf$2278^(0+256)
 16047  0584  085D               	movf	(logf@f+3)^(0+256),w
 16048  0585  0020               	movlb	0	; select bank0
 16049  0586  00DD               	movwf	___fladd@b+3
 16050  0587  0022               	movlb	2	; select bank2
 16051  0588  085C               	movf	(logf@f+2)^(0+256),w
 16052  0589  0020               	movlb	0	; select bank0
 16053  058A  00DC               	movwf	___fladd@b+2
 16054  058B  0022               	movlb	2	; select bank2
 16055  058C  085B               	movf	(logf@f+1)^(0+256),w
 16056  058D  0020               	movlb	0	; select bank0
 16057  058E  00DB               	movwf	___fladd@b+1
 16058  058F  0022               	movlb	2	; select bank2
 16059  0590  085A               	movf	logf@f^(0+256),w
 16060  0591  0020               	movlb	0	; select bank0
 16061  0592  00DA               	movwf	___fladd@b
 16062  0593  0022               	movlb	2	; select bank2
 16063  0594  0837               	movf	(_logf$2278+3)^(0+256),w
 16064  0595  0020               	movlb	0	; select bank0
 16065  0596  00E1               	movwf	___fladd@a+3
 16066  0597  0022               	movlb	2	; select bank2
 16067  0598  0836               	movf	(_logf$2278+2)^(0+256),w
 16068  0599  0020               	movlb	0	; select bank0
 16069  059A  00E0               	movwf	___fladd@a+2
 16070  059B  0022               	movlb	2	; select bank2
 16071  059C  0835               	movf	(_logf$2278+1)^(0+256),w
 16072  059D  0020               	movlb	0	; select bank0
 16073  059E  00DF               	movwf	___fladd@a+1
 16074  059F  0022               	movlb	2	; select bank2
 16075  05A0  0834               	movf	_logf$2278^(0+256),w
 16076  05A1  0020               	movlb	0	; select bank0
 16077  05A2  00DE               	movwf	___fladd@a
 16078  05A3  3185  25FE  3180   	fcall	___fladd
 16079  05A6  0020               	movlb	0	; select bank0
 16080  05A7  085D               	movf	?___fladd+3,w
 16081  05A8  0022               	movlb	2	; select bank2
 16082  05A9  00BB               	movwf	(_logf$2279+3)^(0+256)
 16083  05AA  0020               	movlb	0	; select bank0
 16084  05AB  085C               	movf	?___fladd+2,w
 16085  05AC  0022               	movlb	2	; select bank2
 16086  05AD  00BA               	movwf	(_logf$2279+2)^(0+256)
 16087  05AE  0020               	movlb	0	; select bank0
 16088  05AF  085B               	movf	?___fladd+1,w
 16089  05B0  0022               	movlb	2	; select bank2
 16090  05B1  00B9               	movwf	(_logf$2279+1)^(0+256)
 16091  05B2  0020               	movlb	0	; select bank0
 16092  05B3  085A               	movf	?___fladd,w
 16093  05B4  0022               	movlb	2	; select bank2
 16094  05B5  00B8               	movwf	_logf$2279^(0+256)
 16095  05B6  303F               	movlw	63
 16096  05B7  0020               	movlb	0	; select bank0
 16097  05B8  00A9               	movwf	___flmul@b+3
 16098  05B9  3031               	movlw	49
 16099  05BA  00A8               	movwf	___flmul@b+2
 16100  05BB  3071               	movlw	113
 16101  05BC  00A7               	movwf	___flmul@b+1
 16102  05BD  3080               	movlw	128
 16103  05BE  00A6               	movwf	___flmul@b
 16104  05BF  0022               	movlb	2	; select bank2
 16105  05C0  0845               	movf	(logf@dk+3)^(0+256),w
 16106  05C1  0020               	movlb	0	; select bank0
 16107  05C2  00AD               	movwf	___flmul@a+3
 16108  05C3  0022               	movlb	2	; select bank2
 16109  05C4  0844               	movf	(logf@dk+2)^(0+256),w
 16110  05C5  0020               	movlb	0	; select bank0
 16111  05C6  00AC               	movwf	___flmul@a+2
 16112  05C7  0022               	movlb	2	; select bank2
 16113  05C8  0843               	movf	(logf@dk+1)^(0+256),w
 16114  05C9  0020               	movlb	0	; select bank0
 16115  05CA  00AB               	movwf	___flmul@a+1
 16116  05CB  0022               	movlb	2	; select bank2
 16117  05CC  0842               	movf	logf@dk^(0+256),w
 16118  05CD  0020               	movlb	0	; select bank0
 16119  05CE  00AA               	movwf	___flmul@a
 16120  05CF  3190  2022  3180   	fcall	___flmul
 16121  05D2  0020               	movlb	0	; select bank0
 16122  05D3  0829               	movf	?___flmul+3,w
 16123  05D4  00DD               	movwf	___fladd@b+3
 16124  05D5  0828               	movf	?___flmul+2,w
 16125  05D6  00DC               	movwf	___fladd@b+2
 16126  05D7  0827               	movf	?___flmul+1,w
 16127  05D8  00DB               	movwf	___fladd@b+1
 16128  05D9  0826               	movf	?___flmul,w
 16129  05DA  00DA               	movwf	___fladd@b
 16130  05DB  0022               	movlb	2	; select bank2
 16131  05DC  083B               	movf	(_logf$2279+3)^(0+256),w
 16132  05DD  0020               	movlb	0	; select bank0
 16133  05DE  00E1               	movwf	___fladd@a+3
 16134  05DF  0022               	movlb	2	; select bank2
 16135  05E0  083A               	movf	(_logf$2279+2)^(0+256),w
 16136  05E1  0020               	movlb	0	; select bank0
 16137  05E2  00E0               	movwf	___fladd@a+2
 16138  05E3  0022               	movlb	2	; select bank2
 16139  05E4  0839               	movf	(_logf$2279+1)^(0+256),w
 16140  05E5  0020               	movlb	0	; select bank0
 16141  05E6  00DF               	movwf	___fladd@a+1
 16142  05E7  0022               	movlb	2	; select bank2
 16143  05E8  0838               	movf	_logf$2279^(0+256),w
 16144  05E9  0020               	movlb	0	; select bank0
 16145  05EA  00DE               	movwf	___fladd@a
 16146  05EB  3185  25FE         	fcall	___fladd
 16147  05ED  0020               	movlb	0	; select bank0
 16148  05EE  085D               	movf	?___fladd+3,w
 16149  05EF  0021               	movlb	1	; select bank1
 16150  05F0  00AB               	movwf	(?_logf+3)^(0+128)
 16151  05F1  0020               	movlb	0	; select bank0
 16152  05F2  085C               	movf	?___fladd+2,w
 16153  05F3  0021               	movlb	1	; select bank1
 16154  05F4  00AA               	movwf	(?_logf+2)^(0+128)
 16155  05F5  0020               	movlb	0	; select bank0
 16156  05F6  085B               	movf	?___fladd+1,w
 16157  05F7  0021               	movlb	1	; select bank1
 16158  05F8  00A9               	movwf	(?_logf+1)^(0+128)
 16159  05F9  0020               	movlb	0	; select bank0
 16160  05FA  085A               	movf	?___fladd,w
 16161  05FB  0021               	movlb	1	; select bank1
 16162  05FC  00A8               	movwf	?_logf^(0+128)
 16163  05FD  0008               	return
 16164  05FE                     __end_of_logf:	
 16165                           
 16166                           	psect	text51
 16167  2E77                     __ptext51:	
 16168 ;; *************** function _updateCurrent *****************
 16169 ;; Defined at:
 16170 ;;		line 200 in file "BQ76920.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;		None
 16173 ;; Auto vars:     Size  Location     Type
 16174 ;;  adcVal          2   21[BANK1 ] int 
 16175 ;;  sys_stat        1    0        struct regSYS_STAT
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		wreg, status,2, status,0, pclath, cstack
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;Total ram usage:        6 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:    3
 16192 ;; This function calls:
 16193 ;;		_I2C_writeRegister
 16194 ;;		___fldiv
 16195 ;;		___flmul
 16196 ;;		___flneg
 16197 ;;		___fltol
 16198 ;;		___xxtofl
 16199 ;;		_readRegister
 16200 ;; This function is called by:
 16201 ;;		_AFE_UPDATE
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           
 16206                           ;psect for function _updateCurrent
 16207  2E77                     _updateCurrent:	
 16208                           
 16209                           ;incstack = 0
 16210                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16211  2E77  3018               	movlw	24
 16212  2E78  00F5               	movwf	readRegister@slaveAddress
 16213  2E79  3000               	movlw	0
 16214  2E7A  00F6               	movwf	readRegister@slaveAddress+1
 16215  2E7B  3000               	movlw	0
 16216  2E7C  00F7               	movwf	readRegister@regAddress
 16217  2E7D  00F8               	movwf	readRegister@regAddress+1
 16218  2E7E  31B5  2587  31AE   	fcall	_readRegister
 16219                           
 16220                           ;BQ76920.c: 207:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16221  2E81  3018               	movlw	24
 16222  2E82  00F5               	movwf	readRegister@slaveAddress
 16223  2E83  3000               	movlw	0
 16224  2E84  00F6               	movwf	readRegister@slaveAddress+1
 16225  2E85  3032               	movlw	50
 16226  2E86  00F7               	movwf	readRegister@regAddress
 16227  2E87  3000               	movlw	0
 16228  2E88  00F8               	movwf	readRegister@regAddress+1
 16229  2E89  31B5  2587  31AE   	fcall	_readRegister
 16230  2E8C  0875               	movf	?_readRegister,w
 16231  2E8D  0021               	movlb	1	; select bank1
 16232  2E8E  00B1               	movwf	??_updateCurrent^(0+128)
 16233  2E8F  0876               	movf	?_readRegister+1,w
 16234  2E90  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16235  2E91  0831               	movf	??_updateCurrent^(0+128),w
 16236  2E92  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16237  2E93  01B1               	clrf	??_updateCurrent^(0+128)
 16238  2E94  3018               	movlw	24
 16239  2E95  00F5               	movwf	readRegister@slaveAddress
 16240  2E96  3000               	movlw	0
 16241  2E97  00F6               	movwf	readRegister@slaveAddress+1
 16242  2E98  3033               	movlw	51
 16243  2E99  00F7               	movwf	readRegister@regAddress
 16244  2E9A  3000               	movlw	0
 16245  2E9B  00F8               	movwf	readRegister@regAddress+1
 16246  2E9C  31B5  2587  31AE   	fcall	_readRegister
 16247  2E9F  0875               	movf	?_readRegister,w
 16248  2EA0  0021               	movlb	1	; select bank1
 16249  2EA1  0431               	iorwf	??_updateCurrent^(0+128),w
 16250  2EA2  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16251  2EA3  0876               	movf	?_readRegister+1,w
 16252  2EA4  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16253  2EA5  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16254                           
 16255                           ;BQ76920.c: 208:     batCurrent = -(adcVal * 8.44 / 19.6);
 16256  2EA6  0835               	movf	updateCurrent@adcVal^(0+128),w
 16257  2EA7  00F1               	movwf	___xxtofl@val
 16258  2EA8  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16259  2EA9  00F2               	movwf	___xxtofl@val+1
 16260  2EAA  0D89               	rlf	9,f
 16261  2EAB  3B89               	subwfb	9,f
 16262  2EAC  0989               	comf	9,f
 16263  2EAD  00F3               	movwf	___xxtofl@val+2
 16264  2EAE  00F4               	movwf	___xxtofl@val+3
 16265  2EAF  3001               	movlw	1
 16266  2EB0  31AB  23E3  31AE   	fcall	___xxtofl
 16267  2EB3  0874               	movf	?___xxtofl+3,w
 16268  2EB4  0020               	movlb	0	; select bank0
 16269  2EB5  00AD               	movwf	___flmul@a+3
 16270  2EB6  0873               	movf	?___xxtofl+2,w
 16271  2EB7  00AC               	movwf	___flmul@a+2
 16272  2EB8  0872               	movf	?___xxtofl+1,w
 16273  2EB9  00AB               	movwf	___flmul@a+1
 16274  2EBA  0871               	movf	?___xxtofl,w
 16275  2EBB  00AA               	movwf	___flmul@a
 16276  2EBC  3041               	movlw	65
 16277  2EBD  00A9               	movwf	___flmul@b+3
 16278  2EBE  3007               	movlw	7
 16279  2EBF  00A8               	movwf	___flmul@b+2
 16280  2EC0  300A               	movlw	10
 16281  2EC1  00A7               	movwf	___flmul@b+1
 16282  2EC2  303D               	movlw	61
 16283  2EC3  00A6               	movwf	___flmul@b
 16284  2EC4  3190  2022  31AE   	fcall	___flmul
 16285  2EC7  0020               	movlb	0	; select bank0
 16286  2EC8  0829               	movf	?___flmul+3,w
 16287  2EC9  00C7               	movwf	___fldiv@b+3
 16288  2ECA  0828               	movf	?___flmul+2,w
 16289  2ECB  00C6               	movwf	___fldiv@b+2
 16290  2ECC  0827               	movf	?___flmul+1,w
 16291  2ECD  00C5               	movwf	___fldiv@b+1
 16292  2ECE  0826               	movf	?___flmul,w
 16293  2ECF  00C4               	movwf	___fldiv@b
 16294  2ED0  3041               	movlw	65
 16295  2ED1  00C3               	movwf	___fldiv@a+3
 16296  2ED2  309C               	movlw	156
 16297  2ED3  00C2               	movwf	___fldiv@a+2
 16298  2ED4  30CC               	movlw	204
 16299  2ED5  00C1               	movwf	___fldiv@a+1
 16300  2ED6  30CD               	movlw	205
 16301  2ED7  00C0               	movwf	___fldiv@a
 16302  2ED8  319C  24E2  31AE   	fcall	___fldiv
 16303  2EDB  0020               	movlb	0	; select bank0
 16304  2EDC  0843               	movf	?___fldiv+3,w
 16305  2EDD  00DD               	movwf	___flneg@f1+3
 16306  2EDE  0842               	movf	?___fldiv+2,w
 16307  2EDF  00DC               	movwf	___flneg@f1+2
 16308  2EE0  0841               	movf	?___fldiv+1,w
 16309  2EE1  00DB               	movwf	___flneg@f1+1
 16310  2EE2  0840               	movf	?___fldiv,w
 16311  2EE3  00DA               	movwf	___flneg@f1
 16312  2EE4  31B2  2273  31AE   	fcall	___flneg
 16313  2EE7  0020               	movlb	0	; select bank0
 16314  2EE8  085D               	movf	?___flneg+3,w
 16315  2EE9  0021               	movlb	1	; select bank1
 16316  2EEA  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16317  2EEB  0020               	movlb	0	; select bank0
 16318  2EEC  085C               	movf	?___flneg+2,w
 16319  2EED  0021               	movlb	1	; select bank1
 16320  2EEE  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16321  2EEF  0020               	movlb	0	; select bank0
 16322  2EF0  085B               	movf	?___flneg+1,w
 16323  2EF1  0021               	movlb	1	; select bank1
 16324  2EF2  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16325  2EF3  0020               	movlb	0	; select bank0
 16326  2EF4  085A               	movf	?___flneg,w
 16327  2EF5  0021               	movlb	1	; select bank1
 16328  2EF6  00A8               	movwf	___fltol@f1^(0+128)
 16329  2EF7  31A8  20A3  31AE   	fcall	___fltol
 16330  2EFA  0021               	movlb	1	; select bank1
 16331  2EFB  082B               	movf	(?___fltol+3)^(0+128),w
 16332  2EFC  0023               	movlb	3	; select bank3
 16333  2EFD  00C7               	movwf	(_batCurrent+3)^(0+384)
 16334  2EFE  0021               	movlb	1	; select bank1
 16335  2EFF  082A               	movf	(?___fltol+2)^(0+128),w
 16336  2F00  0023               	movlb	3	; select bank3
 16337  2F01  00C6               	movwf	(_batCurrent+2)^(0+384)
 16338  2F02  0021               	movlb	1	; select bank1
 16339  2F03  0829               	movf	(?___fltol+1)^(0+128),w
 16340  2F04  0023               	movlb	3	; select bank3
 16341  2F05  00C5               	movwf	(_batCurrent+1)^(0+384)
 16342  2F06  0021               	movlb	1	; select bank1
 16343  2F07  0828               	movf	?___fltol^(0+128),w
 16344  2F08  0023               	movlb	3	; select bank3
 16345  2F09  00C4               	movwf	_batCurrent^(0+384)
 16346                           
 16347                           ;BQ76920.c: 210:     if (batCurrent > -10 && batCurrent < 10)
 16348  2F0A  1FC7               	btfss	(_batCurrent+3)^(0+384),7
 16349  2F0B  2F16               	goto	l7623
 16350  2F0C  30F7               	movlw	247
 16351  2F0D  0244               	subwf	_batCurrent^(0+384),w
 16352  2F0E  30FF               	movlw	255
 16353  2F0F  3B45               	subwfb	(_batCurrent+1)^(0+384),w
 16354  2F10  30FF               	movlw	255
 16355  2F11  3B46               	subwfb	(_batCurrent+2)^(0+384),w
 16356  2F12  30FF               	movlw	255
 16357  2F13  3B47               	subwfb	(_batCurrent+3)^(0+384),w
 16358  2F14  1C03               	btfss	3,0
 16359  2F15  2F2D               	goto	l7627
 16360  2F16                     l7623:	
 16361  2F16  1BC7               	btfsc	(_batCurrent+3)^(0+384),7
 16362  2F17  2F25               	goto	l7625
 16363  2F18  0847               	movf	(_batCurrent+3)^(0+384),w
 16364  2F19  1D03               	btfss	3,2
 16365  2F1A  2F2D               	goto	l7627
 16366  2F1B  0846               	movf	(_batCurrent+2)^(0+384),w
 16367  2F1C  1D03               	btfss	3,2
 16368  2F1D  2F2D               	goto	l7627
 16369  2F1E  0845               	movf	(_batCurrent+1)^(0+384),w
 16370  2F1F  1D03               	btfss	3,2
 16371  2F20  2F2D               	goto	l7627
 16372  2F21  300A               	movlw	10
 16373  2F22  0244               	subwf	_batCurrent^(0+384),w
 16374  2F23  1803               	btfsc	3,0
 16375  2F24  2F2D               	goto	l7627
 16376  2F25                     l7625:	
 16377                           
 16378                           ;BQ76920.c: 211:     {;BQ76920.c: 212:       batCurrent = 0;
 16379  2F25  3000               	movlw	0
 16380  2F26  00C7               	movwf	(_batCurrent+3)^(0+384)
 16381  2F27  3000               	movlw	0
 16382  2F28  00C6               	movwf	(_batCurrent+2)^(0+384)
 16383  2F29  3000               	movlw	0
 16384  2F2A  00C5               	movwf	(_batCurrent+1)^(0+384)
 16385  2F2B  3000               	movlw	0
 16386  2F2C  00C4               	movwf	_batCurrent^(0+384)
 16387  2F2D                     l7627:	
 16388                           
 16389                           ;BQ76920.c: 215:     I2C_writeRegister(0x18, 0x00, 0x80);
 16390  2F2D  3018               	movlw	24
 16391  2F2E  00F5               	movwf	I2C_writeRegister@slaveAddress
 16392  2F2F  3000               	movlw	0
 16393  2F30  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16394  2F31  3000               	movlw	0
 16395  2F32  00F7               	movwf	I2C_writeRegister@regAddress
 16396  2F33  00F8               	movwf	I2C_writeRegister@regAddress+1
 16397  2F34  3080               	movlw	128
 16398  2F35  00F9               	movwf	I2C_writeRegister@data
 16399  2F36  3000               	movlw	0
 16400  2F37  00FA               	movwf	I2C_writeRegister@data+1
 16401  2F38  31B3  23DC         	fcall	_I2C_writeRegister
 16402  2F3A  0008               	return
 16403  2F3B                     __end_of_updateCurrent:	
 16404                           
 16405                           	psect	text52
 16406  3273                     __ptext52:	
 16407 ;; *************** function ___flneg *****************
 16408 ;; Defined at:
 16409 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;  f1              4   58[BANK0 ] void 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  4   58[BANK0 ] void 
 16416 ;; Registers used:
 16417 ;;		wreg
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16427 ;;Total ram usage:        4 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    1
 16430 ;; This function calls:
 16431 ;;		Nothing
 16432 ;; This function is called by:
 16433 ;;		_updateCurrent
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           
 16438                           ;psect for function ___flneg
 16439  3273                     ___flneg:	
 16440                           
 16441                           ;incstack = 0
 16442                           ; Regs used in ___flneg: [wreg]
 16443  3273  0020               	movlb	0	; select bank0
 16444  3274  085D               	movf	___flneg@f1+3,w
 16445  3275  045C               	iorwf	___flneg@f1+2,w
 16446  3276  045B               	iorwf	___flneg@f1+1,w
 16447  3277  045A               	iorwf	___flneg@f1,w
 16448  3278  1903               	skipnz
 16449  3279  0008               	return
 16450  327A  3080               	movlw	128
 16451  327B  06DD               	xorwf	___flneg@f1+3,f
 16452  327C  0008               	return
 16453  327D                     __end_of___flneg:	
 16454                           
 16455                           	psect	text53
 16456  35F4                     __ptext53:	
 16457 ;; *************** function _enableDischarging *****************
 16458 ;; Defined at:
 16459 ;;		line 291 in file "BQ76920.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  enable          2    0[BANK0 ] unsigned int 
 16462 ;; Auto vars:     Size  Location     Type
 16463 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  1    wreg      void 
 16466 ;; Registers used:
 16467 ;;		wreg, status,2, status,0, pclath, cstack
 16468 ;; Tracked objects:
 16469 ;;		On entry : 0/0
 16470 ;;		On exit  : 0/0
 16471 ;;		Unchanged: 0/0
 16472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16473 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16476 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16477 ;;Total ram usage:        5 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:    3
 16480 ;; This function calls:
 16481 ;;		_I2C_writeRegister
 16482 ;;		_readRegister
 16483 ;; This function is called by:
 16484 ;;		_AFE_UPDATE
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           
 16489                           ;psect for function _enableDischarging
 16490  35F4                     _enableDischarging:	
 16491                           
 16492                           ;BQ76920.c: 292:     uint8_t sys_ctrl2;;BQ76920.c: 293:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16493                           
 16494                           ;incstack = 0
 16495                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 16496  35F4  3018               	movlw	24
 16497  35F5  00F5               	movwf	readRegister@slaveAddress
 16498  35F6  3000               	movlw	0
 16499  35F7  00F6               	movwf	readRegister@slaveAddress+1
 16500  35F8  3005               	movlw	5
 16501  35F9  00F7               	movwf	readRegister@regAddress
 16502  35FA  3000               	movlw	0
 16503  35FB  00F8               	movwf	readRegister@regAddress+1
 16504  35FC  31B5  2587  31B5   	fcall	_readRegister
 16505  35FF  0875               	movf	?_readRegister,w
 16506  3600  0020               	movlb	0	; select bank0
 16507  3601  00A2               	movwf	??_enableDischarging
 16508  3602  0822               	movf	??_enableDischarging,w
 16509  3603  00FB               	movwf	enableDischarging@sys_ctrl2
 16510                           
 16511                           ;BQ76920.c: 294:     if(enable){
 16512  3604  0820               	movf	enableDischarging@enable,w
 16513  3605  0421               	iorwf	enableDischarging@enable+1,w
 16514  3606  1903               	btfsc	3,2
 16515  3607  2E18               	goto	l7717
 16516                           
 16517                           ;BQ76920.c: 295:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 16518  3608  3018               	movlw	24
 16519  3609  00F5               	movwf	I2C_writeRegister@slaveAddress
 16520  360A  3000               	movlw	0
 16521  360B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16522  360C  3005               	movlw	5
 16523  360D  00F7               	movwf	I2C_writeRegister@regAddress
 16524  360E  3000               	movlw	0
 16525  360F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16526  3610  3002               	movlw	2
 16527  3611  047B               	iorwf	enableDischarging@sys_ctrl2,w
 16528  3612  00F9               	movwf	I2C_writeRegister@data
 16529  3613  3000               	movlw	0
 16530  3614  00FA               	movwf	I2C_writeRegister@data+1
 16531  3615  31B3  23DC         	fcall	_I2C_writeRegister
 16532                           
 16533                           ;BQ76920.c: 296:     }else{
 16534  3617  0008               	return
 16535  3618                     l7717:	
 16536                           
 16537                           ;BQ76920.c: 297:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 16538  3618  3018               	movlw	24
 16539  3619  00F5               	movwf	I2C_writeRegister@slaveAddress
 16540  361A  3000               	movlw	0
 16541  361B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16542  361C  3005               	movlw	5
 16543  361D  00F7               	movwf	I2C_writeRegister@regAddress
 16544  361E  3000               	movlw	0
 16545  361F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16546  3620  087B               	movf	enableDischarging@sys_ctrl2,w
 16547  3621  39FD               	andlw	253
 16548  3622  00A2               	movwf	??_enableDischarging
 16549  3623  01A3               	clrf	??_enableDischarging+1
 16550  3624  0822               	movf	??_enableDischarging,w
 16551  3625  00F9               	movwf	I2C_writeRegister@data
 16552  3626  0823               	movf	??_enableDischarging+1,w
 16553  3627  00FA               	movwf	I2C_writeRegister@data+1
 16554  3628  31B3  23DC         	fcall	_I2C_writeRegister
 16555  362A  0008               	return
 16556  362B                     __end_of_enableDischarging:	
 16557                           
 16558                           	psect	text54
 16559  35BD                     __ptext54:	
 16560 ;; *************** function _enableCharging *****************
 16561 ;; Defined at:
 16562 ;;		line 301 in file "BQ76920.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;  enable          2    0[BANK0 ] unsigned int 
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1    wreg      void 
 16569 ;; Registers used:
 16570 ;;		wreg, status,2, status,0, pclath, cstack
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16579 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16580 ;;Total ram usage:        5 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; Hardware stack levels required when called:    3
 16583 ;; This function calls:
 16584 ;;		_I2C_writeRegister
 16585 ;;		_readRegister
 16586 ;; This function is called by:
 16587 ;;		_AFE_UPDATE
 16588 ;; This function uses a non-reentrant model
 16589 ;;
 16590                           
 16591                           
 16592                           ;psect for function _enableCharging
 16593  35BD                     _enableCharging:	
 16594                           
 16595                           ;BQ76920.c: 302:     uint8_t sys_ctrl2;;BQ76920.c: 303:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16596                           
 16597                           ;incstack = 0
 16598                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 16599  35BD  3018               	movlw	24
 16600  35BE  00F5               	movwf	readRegister@slaveAddress
 16601  35BF  3000               	movlw	0
 16602  35C0  00F6               	movwf	readRegister@slaveAddress+1
 16603  35C1  3005               	movlw	5
 16604  35C2  00F7               	movwf	readRegister@regAddress
 16605  35C3  3000               	movlw	0
 16606  35C4  00F8               	movwf	readRegister@regAddress+1
 16607  35C5  31B5  2587  31B5   	fcall	_readRegister
 16608  35C8  0875               	movf	?_readRegister,w
 16609  35C9  0020               	movlb	0	; select bank0
 16610  35CA  00A2               	movwf	??_enableCharging
 16611  35CB  0822               	movf	??_enableCharging,w
 16612  35CC  00FB               	movwf	enableCharging@sys_ctrl2
 16613                           
 16614                           ;BQ76920.c: 304:     if(enable){
 16615  35CD  0820               	movf	enableCharging@enable,w
 16616  35CE  0421               	iorwf	enableCharging@enable+1,w
 16617  35CF  1903               	btfsc	3,2
 16618  35D0  2DE1               	goto	l7725
 16619                           
 16620                           ;BQ76920.c: 305:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 16621  35D1  3018               	movlw	24
 16622  35D2  00F5               	movwf	I2C_writeRegister@slaveAddress
 16623  35D3  3000               	movlw	0
 16624  35D4  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16625  35D5  3005               	movlw	5
 16626  35D6  00F7               	movwf	I2C_writeRegister@regAddress
 16627  35D7  3000               	movlw	0
 16628  35D8  00F8               	movwf	I2C_writeRegister@regAddress+1
 16629  35D9  3001               	movlw	1
 16630  35DA  047B               	iorwf	enableCharging@sys_ctrl2,w
 16631  35DB  00F9               	movwf	I2C_writeRegister@data
 16632  35DC  3000               	movlw	0
 16633  35DD  00FA               	movwf	I2C_writeRegister@data+1
 16634  35DE  31B3  23DC         	fcall	_I2C_writeRegister
 16635                           
 16636                           ;BQ76920.c: 306:     }else{
 16637  35E0  0008               	return
 16638  35E1                     l7725:	
 16639                           
 16640                           ;BQ76920.c: 307:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 16641  35E1  3018               	movlw	24
 16642  35E2  00F5               	movwf	I2C_writeRegister@slaveAddress
 16643  35E3  3000               	movlw	0
 16644  35E4  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16645  35E5  3005               	movlw	5
 16646  35E6  00F7               	movwf	I2C_writeRegister@regAddress
 16647  35E7  3000               	movlw	0
 16648  35E8  00F8               	movwf	I2C_writeRegister@regAddress+1
 16649  35E9  087B               	movf	enableCharging@sys_ctrl2,w
 16650  35EA  39FE               	andlw	254
 16651  35EB  00A2               	movwf	??_enableCharging
 16652  35EC  01A3               	clrf	??_enableCharging+1
 16653  35ED  0822               	movf	??_enableCharging,w
 16654  35EE  00F9               	movwf	I2C_writeRegister@data
 16655  35EF  0823               	movf	??_enableCharging+1,w
 16656  35F0  00FA               	movwf	I2C_writeRegister@data+1
 16657  35F1  31B3  23DC         	fcall	_I2C_writeRegister
 16658  35F3  0008               	return
 16659  35F4                     __end_of_enableCharging:	
 16660                           
 16661                           	psect	text55
 16662  33DC                     __ptext55:	
 16663 ;; *************** function _I2C_writeRegister *****************
 16664 ;; Defined at:
 16665 ;;		line 104 in file "I2C.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  slaveAddress    2    5[COMMON] int 
 16668 ;;  regAddress      2    7[COMMON] int 
 16669 ;;  data            2    9[COMMON] int 
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;		None
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      void 
 16674 ;; Registers used:
 16675 ;;		wreg, status,2, status,0, pclath, cstack
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16681 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16685 ;;Total ram usage:        6 bytes
 16686 ;; Hardware stack levels used:    1
 16687 ;; Hardware stack levels required when called:    2
 16688 ;; This function calls:
 16689 ;;		_send_I2C_controlByte
 16690 ;;		_send_I2C_data
 16691 ;;		_send_I2C_startBit
 16692 ;;		_send_I2C_stopBit
 16693 ;; This function is called by:
 16694 ;;		_beginAFEcommunication
 16695 ;;		_setShortCircuitProtection
 16696 ;;		_setOverCurrentDischargeProtection
 16697 ;;		_setCellUndervoltageProtection
 16698 ;;		_setCellOvervoltageProtection
 16699 ;;		_updateCurrent
 16700 ;;		_enableDischarging
 16701 ;;		_enableCharging
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           
 16706                           ;psect for function _I2C_writeRegister
 16707  33DC                     _I2C_writeRegister:	
 16708                           
 16709                           ;I2C.c: 105:     send_I2C_startBit();
 16710                           
 16711                           ;incstack = 0
 16712                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16713  33DC  31B2  223F  31B3   	fcall	_send_I2C_startBit
 16714                           
 16715                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 16716  33DF  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16717  33E0  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16718  33E1  0875               	movf	I2C_writeRegister@slaveAddress,w
 16719  33E2  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16720  33E3  3000               	movlw	0
 16721  33E4  00F3               	movwf	send_I2C_controlByte@RW_bit
 16722  33E5  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16723  33E6  31B2  2269  31B3   	fcall	_send_I2C_controlByte
 16724                           
 16725                           ;I2C.c: 107:     send_I2C_data(regAddress);
 16726  33E9  0878               	movf	I2C_writeRegister@regAddress+1,w
 16727  33EA  00F2               	movwf	send_I2C_data@databyte+1
 16728  33EB  0877               	movf	I2C_writeRegister@regAddress,w
 16729  33EC  00F1               	movwf	send_I2C_data@databyte
 16730  33ED  3198  2000  31B3   	fcall	_send_I2C_data
 16731                           
 16732                           ;I2C.c: 108:     send_I2C_data(data);
 16733  33F0  087A               	movf	I2C_writeRegister@data+1,w
 16734  33F1  00F2               	movwf	send_I2C_data@databyte+1
 16735  33F2  0879               	movf	I2C_writeRegister@data,w
 16736  33F3  00F1               	movwf	send_I2C_data@databyte
 16737  33F4  3198  2000  31B3   	fcall	_send_I2C_data
 16738                           
 16739                           ;I2C.c: 109:     send_I2C_stopBit();
 16740  33F7  31B2  2247         	fcall	_send_I2C_stopBit
 16741  33F9  0008               	return
 16742  33FA                     __end_of_I2C_writeRegister:	
 16743                           
 16744                           	psect	text56
 16745  21AD                     __ptext56:	
 16746 ;; *************** function _coulomb_counter *****************
 16747 ;; Defined at:
 16748 ;;		line 38 in file "algorithms.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;		None
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;  i               2   17[BANK1 ] int 
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  1    wreg      void 
 16755 ;; Registers used:
 16756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16757 ;; Tracked objects:
 16758 ;;		On entry : 0/0
 16759 ;;		On exit  : 0/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16763 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16765 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16766 ;;Total ram usage:        4 bytes
 16767 ;; Hardware stack levels used:    1
 16768 ;; Hardware stack levels required when called:    3
 16769 ;; This function calls:
 16770 ;;		___fldiv
 16771 ;;		___flmul
 16772 ;;		___flsub
 16773 ;;		___fltol
 16774 ;;		___xxtofl
 16775 ;; This function is called by:
 16776 ;;		_AFE_UPDATE
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           
 16781                           ;psect for function _coulomb_counter
 16782  21AD                     _coulomb_counter:	
 16783                           
 16784                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 16785                           
 16786                           ;incstack = 0
 16787                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16788  21AD  0021               	movlb	1	; select bank1
 16789  21AE  01B1               	clrf	coulomb_counter@i^(0+128)
 16790  21AF  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 16791  21B0                     l6177:	
 16792                           
 16793                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (500/ 3600000.0)
      +                          );
 16794  21B0  0021               	movlb	1	; select bank1
 16795  21B1  3531               	lslf	coulomb_counter@i^(0+128),w
 16796  21B2  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16797  21B3  0086               	movwf	6
 16798  21B4  3001               	movlw	1	; select bank3/4
 16799  21B5  0087               	movwf	7
 16800  21B6  3F40               	moviw [0]fsr1
 16801  21B7  0020               	movlb	0	; select bank0
 16802  21B8  00EE               	movwf	??_coulomb_counter
 16803  21B9  3F41               	moviw [1]fsr1
 16804  21BA  00EF               	movwf	??_coulomb_counter+1
 16805  21BB  086E               	movf	??_coulomb_counter,w
 16806  21BC  00F1               	movwf	___xxtofl@val
 16807  21BD  086F               	movf	??_coulomb_counter+1,w
 16808  21BE  00F2               	movwf	___xxtofl@val+1
 16809  21BF  0D89               	rlf	9,f
 16810  21C0  3B89               	subwfb	9,f
 16811  21C1  0989               	comf	9,f
 16812  21C2  00F3               	movwf	___xxtofl@val+2
 16813  21C3  00F4               	movwf	___xxtofl@val+3
 16814  21C4  3001               	movlw	1
 16815  21C5  31AB  23E3  31A1   	fcall	___xxtofl
 16816  21C8  0874               	movf	?___xxtofl+3,w
 16817  21C9  0021               	movlb	1	; select bank1
 16818  21CA  00A7               	movwf	(___flsub@b+3)^(0+128)
 16819  21CB  0873               	movf	?___xxtofl+2,w
 16820  21CC  00A6               	movwf	(___flsub@b+2)^(0+128)
 16821  21CD  0872               	movf	?___xxtofl+1,w
 16822  21CE  00A5               	movwf	(___flsub@b+1)^(0+128)
 16823  21CF  0871               	movf	?___xxtofl,w
 16824  21D0  00A4               	movwf	___flsub@b^(0+128)
 16825  21D1  0023               	movlb	3	; select bank3
 16826  21D2  0847               	movf	(_batCurrent+3)^(0+384),w
 16827  21D3  00F4               	movwf	___xxtofl@val+3
 16828  21D4  0846               	movf	(_batCurrent+2)^(0+384),w
 16829  21D5  00F3               	movwf	___xxtofl@val+2
 16830  21D6  0845               	movf	(_batCurrent+1)^(0+384),w
 16831  21D7  00F2               	movwf	___xxtofl@val+1
 16832  21D8  0844               	movf	_batCurrent^(0+384),w
 16833  21D9  00F1               	movwf	___xxtofl@val
 16834  21DA  3001               	movlw	1
 16835  21DB  31AB  23E3  31A1   	fcall	___xxtofl
 16836  21DE  0874               	movf	?___xxtofl+3,w
 16837  21DF  0020               	movlb	0	; select bank0
 16838  21E0  00AD               	movwf	___flmul@a+3
 16839  21E1  0873               	movf	?___xxtofl+2,w
 16840  21E2  00AC               	movwf	___flmul@a+2
 16841  21E3  0872               	movf	?___xxtofl+1,w
 16842  21E4  00AB               	movwf	___flmul@a+1
 16843  21E5  0871               	movf	?___xxtofl,w
 16844  21E6  00AA               	movwf	___flmul@a
 16845  21E7  3039               	movlw	57
 16846  21E8  00A9               	movwf	___flmul@b+3
 16847  21E9  3011               	movlw	17
 16848  21EA  00A8               	movwf	___flmul@b+2
 16849  21EB  30A2               	movlw	162
 16850  21EC  00A7               	movwf	___flmul@b+1
 16851  21ED  30B4               	movlw	180
 16852  21EE  00A6               	movwf	___flmul@b
 16853  21EF  3190  2022  31A1   	fcall	___flmul
 16854  21F2  0020               	movlb	0	; select bank0
 16855  21F3  0829               	movf	?___flmul+3,w
 16856  21F4  0021               	movlb	1	; select bank1
 16857  21F5  00A3               	movwf	(___flsub@a+3)^(0+128)
 16858  21F6  0020               	movlb	0	; select bank0
 16859  21F7  0828               	movf	?___flmul+2,w
 16860  21F8  0021               	movlb	1	; select bank1
 16861  21F9  00A2               	movwf	(___flsub@a+2)^(0+128)
 16862  21FA  0020               	movlb	0	; select bank0
 16863  21FB  0827               	movf	?___flmul+1,w
 16864  21FC  0021               	movlb	1	; select bank1
 16865  21FD  00A1               	movwf	(___flsub@a+1)^(0+128)
 16866  21FE  0020               	movlb	0	; select bank0
 16867  21FF  0826               	movf	?___flmul,w
 16868  2200  0021               	movlb	1	; select bank1
 16869  2201  00A0               	movwf	___flsub@a^(0+128)
 16870  2202  31B5  251D  31A1   	fcall	___flsub
 16871  2205  0021               	movlb	1	; select bank1
 16872  2206  0823               	movf	(?___flsub+3)^(0+128),w
 16873  2207  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16874  2208  0822               	movf	(?___flsub+2)^(0+128),w
 16875  2209  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16876  220A  0821               	movf	(?___flsub+1)^(0+128),w
 16877  220B  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16878  220C  0820               	movf	?___flsub^(0+128),w
 16879  220D  00A8               	movwf	___fltol@f1^(0+128)
 16880  220E  31A8  20A3  31A1   	fcall	___fltol
 16881  2211  0021               	movlb	1	; select bank1
 16882  2212  3531               	lslf	coulomb_counter@i^(0+128),w
 16883  2213  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16884  2214  0086               	movwf	6
 16885  2215  3001               	movlw	1	; select bank3/4
 16886  2216  0087               	movwf	7
 16887  2217  0828               	movf	?___fltol^(0+128),w
 16888  2218  3FC0               	movwi [0]fsr1
 16889  2219  0829               	movf	(?___fltol+1)^(0+128),w
 16890  221A  3FC1               	movwi [1]fsr1
 16891                           
 16892                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 16893  221B  3531               	lslf	coulomb_counter@i^(0+128),w
 16894  221C  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16895  221D  0086               	movwf	6
 16896  221E  3001               	movlw	1	; select bank3/4
 16897  221F  0087               	movwf	7
 16898  2220  3F40               	moviw [0]fsr1
 16899  2221  0020               	movlb	0	; select bank0
 16900  2222  00EE               	movwf	??_coulomb_counter
 16901  2223  3F41               	moviw [1]fsr1
 16902  2224  00EF               	movwf	??_coulomb_counter+1
 16903  2225  086E               	movf	??_coulomb_counter,w
 16904  2226  00F1               	movwf	___xxtofl@val
 16905  2227  086F               	movf	??_coulomb_counter+1,w
 16906  2228  00F2               	movwf	___xxtofl@val+1
 16907  2229  0D89               	rlf	9,f
 16908  222A  3B89               	subwfb	9,f
 16909  222B  0989               	comf	9,f
 16910  222C  00F3               	movwf	___xxtofl@val+2
 16911  222D  00F4               	movwf	___xxtofl@val+3
 16912  222E  3001               	movlw	1
 16913  222F  31AB  23E3  31A1   	fcall	___xxtofl
 16914  2232  0874               	movf	?___xxtofl+3,w
 16915  2233  0020               	movlb	0	; select bank0
 16916  2234  00AD               	movwf	___flmul@a+3
 16917  2235  0873               	movf	?___xxtofl+2,w
 16918  2236  00AC               	movwf	___flmul@a+2
 16919  2237  0872               	movf	?___xxtofl+1,w
 16920  2238  00AB               	movwf	___flmul@a+1
 16921  2239  0871               	movf	?___xxtofl,w
 16922  223A  00AA               	movwf	___flmul@a
 16923  223B  3042               	movlw	66
 16924  223C  00A9               	movwf	___flmul@b+3
 16925  223D  30C8               	movlw	200
 16926  223E  00A8               	movwf	___flmul@b+2
 16927  223F  3000               	movlw	0
 16928  2240  00A7               	movwf	___flmul@b+1
 16929  2241  3000               	movlw	0
 16930  2242  00A6               	movwf	___flmul@b
 16931  2243  3190  2022  31A1   	fcall	___flmul
 16932  2246  0020               	movlb	0	; select bank0
 16933  2247  0829               	movf	?___flmul+3,w
 16934  2248  00C7               	movwf	___fldiv@b+3
 16935  2249  0828               	movf	?___flmul+2,w
 16936  224A  00C6               	movwf	___fldiv@b+2
 16937  224B  0827               	movf	?___flmul+1,w
 16938  224C  00C5               	movwf	___fldiv@b+1
 16939  224D  0826               	movf	?___flmul,w
 16940  224E  00C4               	movwf	___fldiv@b
 16941  224F  3045               	movlw	69
 16942  2250  00C3               	movwf	___fldiv@a+3
 16943  2251  301C               	movlw	28
 16944  2252  00C2               	movwf	___fldiv@a+2
 16945  2253  3040               	movlw	64
 16946  2254  00C1               	movwf	___fldiv@a+1
 16947  2255  3000               	movlw	0
 16948  2256  00C0               	movwf	___fldiv@a
 16949  2257  319C  24E2  31A1   	fcall	___fldiv
 16950  225A  0020               	movlb	0	; select bank0
 16951  225B  0843               	movf	?___fldiv+3,w
 16952  225C  0021               	movlb	1	; select bank1
 16953  225D  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16954  225E  0020               	movlb	0	; select bank0
 16955  225F  0842               	movf	?___fldiv+2,w
 16956  2260  0021               	movlb	1	; select bank1
 16957  2261  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16958  2262  0020               	movlb	0	; select bank0
 16959  2263  0841               	movf	?___fldiv+1,w
 16960  2264  0021               	movlb	1	; select bank1
 16961  2265  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16962  2266  0020               	movlb	0	; select bank0
 16963  2267  0840               	movf	?___fldiv,w
 16964  2268  0021               	movlb	1	; select bank1
 16965  2269  00A8               	movwf	___fltol@f1^(0+128)
 16966  226A  31A8  20A3  31A1   	fcall	___fltol
 16967  226D  0021               	movlb	1	; select bank1
 16968  226E  3531               	lslf	coulomb_counter@i^(0+128),w
 16969  226F  3E20               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 16970  2270  0086               	movwf	6
 16971  2271  3002               	movlw	2	; select bank4/5
 16972  2272  0087               	movwf	7
 16973  2273  0828               	movf	?___fltol^(0+128),w
 16974  2274  3FC0               	movwi [0]fsr1
 16975  2275  0829               	movf	(?___fltol+1)^(0+128),w
 16976  2276  3FC1               	movwi [1]fsr1
 16977                           
 16978                           ;algorithms.c: 42:      }
 16979  2277  3001               	movlw	1
 16980  2278  07B1               	addwf	coulomb_counter@i^(0+128),f
 16981  2279  3000               	movlw	0
 16982  227A  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 16983  227B  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 16984  227C  3A80               	xorlw	128
 16985  227D  0020               	movlb	0	; select bank0
 16986  227E  00EE               	movwf	??_coulomb_counter
 16987  227F  3080               	movlw	128
 16988  2280  026E               	subwf	??_coulomb_counter,w
 16989  2281  1D03               	skipz
 16990  2282  2A86               	goto	u7635
 16991  2283  3005               	movlw	5
 16992  2284  0021               	movlb	1	; select bank1
 16993  2285  0231               	subwf	coulomb_counter@i^(0+128),w
 16994  2286                     u7635:	
 16995  2286  1803               	btfsc	3,0
 16996  2287  0008               	return
 16997  2288  29B0               	goto	l6177
 16998  2289                     __end_of_coulomb_counter:	
 16999                           
 17000                           	psect	text57
 17001  351D                     __ptext57:	
 17002 ;; *************** function ___flsub *****************
 17003 ;; Defined at:
 17004 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  a               4    0[BANK1 ] void 
 17007 ;;  b               4    4[BANK1 ] void 
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;		None
 17010 ;; Return value:  Size  Location     Type
 17011 ;;                  4    0[BANK1 ] void 
 17012 ;; Registers used:
 17013 ;;		wreg, status,2, status,0, pclath, cstack
 17014 ;; Tracked objects:
 17015 ;;		On entry : 0/0
 17016 ;;		On exit  : 0/0
 17017 ;;		Unchanged: 0/0
 17018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17019 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17022 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;Total ram usage:        8 bytes
 17024 ;; Hardware stack levels used:    1
 17025 ;; Hardware stack levels required when called:    2
 17026 ;; This function calls:
 17027 ;;		___fladd
 17028 ;; This function is called by:
 17029 ;;		_updateTemperatures
 17030 ;;		_coulomb_counter
 17031 ;;		_logf
 17032 ;; This function uses a non-reentrant model
 17033 ;;
 17034                           
 17035                           
 17036                           ;psect for function ___flsub
 17037  351D                     ___flsub:	
 17038                           
 17039                           ;incstack = 0
 17040                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17041  351D  3080               	movlw	128
 17042  351E  0021               	movlb	1	; select bank1
 17043  351F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 17044  3520  0827               	movf	(___flsub@b+3)^(0+128),w
 17045  3521  0020               	movlb	0	; select bank0
 17046  3522  00DD               	movwf	___fladd@b+3
 17047  3523  0021               	movlb	1	; select bank1
 17048  3524  0826               	movf	(___flsub@b+2)^(0+128),w
 17049  3525  0020               	movlb	0	; select bank0
 17050  3526  00DC               	movwf	___fladd@b+2
 17051  3527  0021               	movlb	1	; select bank1
 17052  3528  0825               	movf	(___flsub@b+1)^(0+128),w
 17053  3529  0020               	movlb	0	; select bank0
 17054  352A  00DB               	movwf	___fladd@b+1
 17055  352B  0021               	movlb	1	; select bank1
 17056  352C  0824               	movf	___flsub@b^(0+128),w
 17057  352D  0020               	movlb	0	; select bank0
 17058  352E  00DA               	movwf	___fladd@b
 17059  352F  0021               	movlb	1	; select bank1
 17060  3530  0823               	movf	(___flsub@a+3)^(0+128),w
 17061  3531  0020               	movlb	0	; select bank0
 17062  3532  00E1               	movwf	___fladd@a+3
 17063  3533  0021               	movlb	1	; select bank1
 17064  3534  0822               	movf	(___flsub@a+2)^(0+128),w
 17065  3535  0020               	movlb	0	; select bank0
 17066  3536  00E0               	movwf	___fladd@a+2
 17067  3537  0021               	movlb	1	; select bank1
 17068  3538  0821               	movf	(___flsub@a+1)^(0+128),w
 17069  3539  0020               	movlb	0	; select bank0
 17070  353A  00DF               	movwf	___fladd@a+1
 17071  353B  0021               	movlb	1	; select bank1
 17072  353C  0820               	movf	___flsub@a^(0+128),w
 17073  353D  0020               	movlb	0	; select bank0
 17074  353E  00DE               	movwf	___fladd@a
 17075  353F  3185  25FE         	fcall	___fladd
 17076  3541  0020               	movlb	0	; select bank0
 17077  3542  085D               	movf	?___fladd+3,w
 17078  3543  0021               	movlb	1	; select bank1
 17079  3544  00A3               	movwf	(?___flsub+3)^(0+128)
 17080  3545  0020               	movlb	0	; select bank0
 17081  3546  085C               	movf	?___fladd+2,w
 17082  3547  0021               	movlb	1	; select bank1
 17083  3548  00A2               	movwf	(?___flsub+2)^(0+128)
 17084  3549  0020               	movlb	0	; select bank0
 17085  354A  085B               	movf	?___fladd+1,w
 17086  354B  0021               	movlb	1	; select bank1
 17087  354C  00A1               	movwf	(?___flsub+1)^(0+128)
 17088  354D  0020               	movlb	0	; select bank0
 17089  354E  085A               	movf	?___fladd,w
 17090  354F  0021               	movlb	1	; select bank1
 17091  3550  00A0               	movwf	?___flsub^(0+128)
 17092  3551  0008               	return
 17093  3552                     __end_of___flsub:	
 17094                           
 17095                           	psect	text58
 17096  05FE                     __ptext58:	
 17097 ;; *************** function ___fladd *****************
 17098 ;; Defined at:
 17099 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  b               4   58[BANK0 ] void 
 17102 ;;  a               4   62[BANK0 ] void 
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;  grs             1   77[BANK0 ] unsigned char 
 17105 ;;  bexp            1   76[BANK0 ] unsigned char 
 17106 ;;  aexp            1   75[BANK0 ] unsigned char 
 17107 ;;  signs           1   74[BANK0 ] unsigned char 
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  4   58[BANK0 ] unsigned char 
 17110 ;; Registers used:
 17111 ;;		wreg, status,2, status,0
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17117 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17119 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17120 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17121 ;;Total ram usage:       20 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; Hardware stack levels required when called:    1
 17124 ;; This function calls:
 17125 ;;		Nothing
 17126 ;; This function is called by:
 17127 ;;		_updateVoltages
 17128 ;;		_updateTemperatures
 17129 ;;		___flsub
 17130 ;;		_logf
 17131 ;; This function uses a non-reentrant model
 17132 ;;
 17133                           
 17134                           
 17135                           ;psect for function ___fladd
 17136  05FE                     ___fladd:	
 17137                           
 17138                           ;incstack = 0
 17139                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17140  05FE  0020               	movlb	0	; select bank0
 17141  05FF  085D               	movf	___fladd@b+3,w
 17142  0600  3980               	andlw	128
 17143  0601  00E2               	movwf	??___fladd
 17144  0602  0862               	movf	??___fladd,w
 17145  0603  00EA               	movwf	___fladd@signs
 17146  0604  355D               	lslf	___fladd@b+3,w
 17147  0605  00E2               	movwf	??___fladd
 17148  0606  0862               	movf	??___fladd,w
 17149  0607  00EC               	movwf	___fladd@bexp
 17150  0608  1BDC               	btfsc	___fladd@b+2,7
 17151  0609  146C               	bsf	___fladd@bexp,0
 17152  060A  086C               	movf	___fladd@bexp,w
 17153  060B  1903               	btfsc	3,2
 17154  060C  2E1B               	goto	l5141
 17155  060D  0A6C               	incf	___fladd@bexp,w
 17156  060E  1D03               	btfss	3,2
 17157  060F  2E18               	goto	l5137
 17158  0610  3000               	movlw	0
 17159  0611  00DD               	movwf	___fladd@b+3
 17160  0612  3000               	movlw	0
 17161  0613  00DC               	movwf	___fladd@b+2
 17162  0614  3000               	movlw	0
 17163  0615  00DB               	movwf	___fladd@b+1
 17164  0616  3000               	movlw	0
 17165  0617  00DA               	movwf	___fladd@b
 17166  0618                     l5137:	
 17167  0618  17DC               	bsf	___fladd@b+2,7
 17168  0619  01DD               	clrf	___fladd@b+3
 17169  061A  2E23               	goto	l5143
 17170  061B                     l5141:	
 17171  061B  3000               	movlw	0
 17172  061C  00DD               	movwf	___fladd@b+3
 17173  061D  3000               	movlw	0
 17174  061E  00DC               	movwf	___fladd@b+2
 17175  061F  3000               	movlw	0
 17176  0620  00DB               	movwf	___fladd@b+1
 17177  0621  3000               	movlw	0
 17178  0622  00DA               	movwf	___fladd@b
 17179  0623                     l5143:	
 17180  0623  0861               	movf	___fladd@a+3,w
 17181  0624  3980               	andlw	128
 17182  0625  00E2               	movwf	??___fladd
 17183  0626  0862               	movf	??___fladd,w
 17184  0627  00EB               	movwf	___fladd@aexp
 17185  0628  086B               	movf	___fladd@aexp,w
 17186  0629  066A               	xorwf	___fladd@signs,w
 17187  062A  1D03               	btfss	3,2
 17188  062B  176A               	bsf	___fladd@signs,6
 17189  062C  3561               	lslf	___fladd@a+3,w
 17190  062D  00E2               	movwf	??___fladd
 17191  062E  0862               	movf	??___fladd,w
 17192  062F  00EB               	movwf	___fladd@aexp
 17193  0630  1BE0               	btfsc	___fladd@a+2,7
 17194  0631  146B               	bsf	___fladd@aexp,0
 17195  0632  086B               	movf	___fladd@aexp,w
 17196  0633  1903               	btfsc	3,2
 17197  0634  2E43               	goto	l5165
 17198  0635  0A6B               	incf	___fladd@aexp,w
 17199  0636  1D03               	btfss	3,2
 17200  0637  2E40               	goto	l5161
 17201  0638  3000               	movlw	0
 17202  0639  00E1               	movwf	___fladd@a+3
 17203  063A  3000               	movlw	0
 17204  063B  00E0               	movwf	___fladd@a+2
 17205  063C  3000               	movlw	0
 17206  063D  00DF               	movwf	___fladd@a+1
 17207  063E  3000               	movlw	0
 17208  063F  00DE               	movwf	___fladd@a
 17209  0640                     l5161:	
 17210  0640  17E0               	bsf	___fladd@a+2,7
 17211  0641  01E1               	clrf	___fladd@a+3
 17212  0642  2E4B               	goto	l1339
 17213  0643                     l5165:	
 17214  0643  3000               	movlw	0
 17215  0644  00E1               	movwf	___fladd@a+3
 17216  0645  3000               	movlw	0
 17217  0646  00E0               	movwf	___fladd@a+2
 17218  0647  3000               	movlw	0
 17219  0648  00DF               	movwf	___fladd@a+1
 17220  0649  3000               	movlw	0
 17221  064A  00DE               	movwf	___fladd@a
 17222  064B                     l1339:	
 17223  064B  086C               	movf	___fladd@bexp,w
 17224  064C  026B               	subwf	___fladd@aexp,w
 17225  064D  1803               	skipnc
 17226  064E  2E91               	goto	l5201
 17227  064F  1F6A               	btfss	___fladd@signs,6
 17228  0650  2E55               	goto	l5171
 17229  0651  3080               	movlw	128
 17230  0652  00E2               	movwf	??___fladd
 17231  0653  0862               	movf	??___fladd,w
 17232  0654  06EA               	xorwf	___fladd@signs,f
 17233  0655                     l5171:	
 17234  0655  086C               	movf	___fladd@bexp,w
 17235  0656  00E2               	movwf	??___fladd
 17236  0657  0862               	movf	??___fladd,w
 17237  0658  00ED               	movwf	___fladd@grs
 17238  0659  086B               	movf	___fladd@aexp,w
 17239  065A  00E2               	movwf	??___fladd
 17240  065B  0862               	movf	??___fladd,w
 17241  065C  00EC               	movwf	___fladd@bexp
 17242  065D  086D               	movf	___fladd@grs,w
 17243  065E  00E2               	movwf	??___fladd
 17244  065F  0862               	movf	??___fladd,w
 17245  0660  00EB               	movwf	___fladd@aexp
 17246  0661  085A               	movf	___fladd@b,w
 17247  0662  00E2               	movwf	??___fladd
 17248  0663  0862               	movf	??___fladd,w
 17249  0664  00ED               	movwf	___fladd@grs
 17250  0665  085E               	movf	___fladd@a,w
 17251  0666  00E2               	movwf	??___fladd
 17252  0667  0862               	movf	??___fladd,w
 17253  0668  00DA               	movwf	___fladd@b
 17254  0669  086D               	movf	___fladd@grs,w
 17255  066A  00E2               	movwf	??___fladd
 17256  066B  0862               	movf	??___fladd,w
 17257  066C  00DE               	movwf	___fladd@a
 17258  066D  085B               	movf	___fladd@b+1,w
 17259  066E  00E2               	movwf	??___fladd
 17260  066F  0862               	movf	??___fladd,w
 17261  0670  00ED               	movwf	___fladd@grs
 17262  0671  085F               	movf	___fladd@a+1,w
 17263  0672  00E2               	movwf	??___fladd
 17264  0673  0862               	movf	??___fladd,w
 17265  0674  00DB               	movwf	___fladd@b+1
 17266  0675  086D               	movf	___fladd@grs,w
 17267  0676  00E2               	movwf	??___fladd
 17268  0677  0862               	movf	??___fladd,w
 17269  0678  00DF               	movwf	___fladd@a+1
 17270  0679  085C               	movf	___fladd@b+2,w
 17271  067A  00E2               	movwf	??___fladd
 17272  067B  0862               	movf	??___fladd,w
 17273  067C  00ED               	movwf	___fladd@grs
 17274  067D  0860               	movf	___fladd@a+2,w
 17275  067E  00E2               	movwf	??___fladd
 17276  067F  0862               	movf	??___fladd,w
 17277  0680  00DC               	movwf	___fladd@b+2
 17278  0681  086D               	movf	___fladd@grs,w
 17279  0682  00E2               	movwf	??___fladd
 17280  0683  0862               	movf	??___fladd,w
 17281  0684  00E0               	movwf	___fladd@a+2
 17282  0685  085D               	movf	___fladd@b+3,w
 17283  0686  00E2               	movwf	??___fladd
 17284  0687  0862               	movf	??___fladd,w
 17285  0688  00ED               	movwf	___fladd@grs
 17286  0689  0861               	movf	___fladd@a+3,w
 17287  068A  00E2               	movwf	??___fladd
 17288  068B  0862               	movf	??___fladd,w
 17289  068C  00DD               	movwf	___fladd@b+3
 17290  068D  086D               	movf	___fladd@grs,w
 17291  068E  00E2               	movwf	??___fladd
 17292  068F  0862               	movf	??___fladd,w
 17293  0690  00E1               	movwf	___fladd@a+3
 17294  0691                     l5201:	
 17295  0691  01ED               	clrf	___fladd@grs
 17296  0692  086B               	movf	___fladd@aexp,w
 17297  0693  00E2               	movwf	??___fladd
 17298  0694  01E3               	clrf	??___fladd+1
 17299  0695  0863               	movf	??___fladd+1,w
 17300  0696  00E5               	movwf	??___fladd+3
 17301  0697  086C               	movf	___fladd@bexp,w
 17302  0698  0262               	subwf	??___fladd,w
 17303  0699  00E4               	movwf	??___fladd+2
 17304  069A  1C03               	skipc
 17305  069B  03E5               	decf	??___fladd+3,f
 17306  069C  0865               	movf	??___fladd+3,w
 17307  069D  3A80               	xorlw	128
 17308  069E  00E6               	movwf	??___fladd+4
 17309  069F  3080               	movlw	128
 17310  06A0  0266               	subwf	??___fladd+4,w
 17311  06A1  1D03               	skipz
 17312  06A2  2EA5               	goto	u5865
 17313  06A3  301A               	movlw	26
 17314  06A4  0264               	subwf	??___fladd+2,w
 17315  06A5                     u5865:	
 17316  06A5  1C03               	skipc
 17317  06A6  2ED9               	goto	l5219
 17318  06A7  0020               	movlb	0	; select bank0
 17319  06A8  085D               	movf	___fladd@b+3,w
 17320  06A9  045C               	iorwf	___fladd@b+2,w
 17321  06AA  045B               	iorwf	___fladd@b+1,w
 17322  06AB  045A               	iorwf	___fladd@b,w
 17323  06AC  1903               	btfsc	3,2
 17324  06AD  2EB0               	goto	u5870
 17325  06AE  3001               	movlw	1
 17326  06AF  2EB1               	goto	u5880
 17327  06B0                     u5870:	
 17328  06B0  3000               	movlw	0
 17329  06B1                     u5880:	
 17330  06B1  00E2               	movwf	??___fladd
 17331  06B2  0862               	movf	??___fladd,w
 17332  06B3  00ED               	movwf	___fladd@grs
 17333  06B4  3000               	movlw	0
 17334  06B5  00DD               	movwf	___fladd@b+3
 17335  06B6  3000               	movlw	0
 17336  06B7  00DC               	movwf	___fladd@b+2
 17337  06B8  3000               	movlw	0
 17338  06B9  00DB               	movwf	___fladd@b+1
 17339  06BA  3000               	movlw	0
 17340  06BB  00DA               	movwf	___fladd@b
 17341  06BC  086B               	movf	___fladd@aexp,w
 17342  06BD  00E2               	movwf	??___fladd
 17343  06BE  0862               	movf	??___fladd,w
 17344  06BF  00EC               	movwf	___fladd@bexp
 17345  06C0  2EDE               	goto	l1343
 17346  06C1                     l1345:	
 17347  06C1  1C6D               	btfss	___fladd@grs,0
 17348  06C2  2EC9               	goto	l5209
 17349  06C3  366D               	lsrf	___fladd@grs,w
 17350  06C4  3801               	iorlw	1
 17351  06C5  00E2               	movwf	??___fladd
 17352  06C6  0862               	movf	??___fladd,w
 17353  06C7  00ED               	movwf	___fladd@grs
 17354  06C8  2ECB               	goto	l5211
 17355  06C9                     l5209:	
 17356  06C9  1003               	clrc
 17357  06CA  0CED               	rrf	___fladd@grs,f
 17358  06CB                     l5211:	
 17359  06CB  185A               	btfsc	___fladd@b,0
 17360  06CC  17ED               	bsf	___fladd@grs,7
 17361  06CD  3001               	movlw	1
 17362  06CE  00E2               	movwf	??___fladd
 17363  06CF                     u5915:	
 17364  06CF  37DD               	asrf	___fladd@b+3,f
 17365  06D0  0CDC               	rrf	___fladd@b+2,f
 17366  06D1  0CDB               	rrf	___fladd@b+1,f
 17367  06D2  0CDA               	rrf	___fladd@b,f
 17368  06D3  0BE2               	decfsz	??___fladd& (0+127),f
 17369  06D4  2ECF               	goto	u5915
 17370  06D5  3001               	movlw	1
 17371  06D6  00E2               	movwf	??___fladd
 17372  06D7  0862               	movf	??___fladd,w
 17373  06D8  07EC               	addwf	___fladd@bexp,f
 17374  06D9                     l5219:	
 17375  06D9  0020               	movlb	0	; select bank0
 17376  06DA  086B               	movf	___fladd@aexp,w
 17377  06DB  026C               	subwf	___fladd@bexp,w
 17378  06DC  1C03               	skipc
 17379  06DD  2EC1               	goto	l1345
 17380  06DE                     l1343:	
 17381  06DE  1B6A               	btfsc	___fladd@signs,6
 17382  06DF  2F0F               	goto	l5245
 17383  06E0  086C               	movf	___fladd@bexp,w
 17384  06E1  1D03               	btfss	3,2
 17385  06E2  2EEC               	goto	l5227
 17386  06E3  3000               	movlw	0
 17387  06E4  00DD               	movwf	?___fladd+3
 17388  06E5  3000               	movlw	0
 17389  06E6  00DC               	movwf	?___fladd+2
 17390  06E7  3000               	movlw	0
 17391  06E8  00DB               	movwf	?___fladd+1
 17392  06E9  3000               	movlw	0
 17393  06EA  00DA               	movwf	?___fladd
 17394  06EB  0008               	return
 17395  06EC                     l5227:	
 17396  06EC  085E               	movf	___fladd@a,w
 17397  06ED  07DA               	addwf	___fladd@b,f
 17398  06EE  085F               	movf	___fladd@a+1,w
 17399  06EF  3DDB               	addwfc	___fladd@b+1,f
 17400  06F0  0860               	movf	___fladd@a+2,w
 17401  06F1  3DDC               	addwfc	___fladd@b+2,f
 17402  06F2  0861               	movf	___fladd@a+3,w
 17403  06F3  3DDD               	addwfc	___fladd@b+3,f
 17404  06F4  1C5D               	btfss	___fladd@b+3,0
 17405  06F5  2F89               	goto	l5279
 17406  06F6  1C6D               	btfss	___fladd@grs,0
 17407  06F7  2EFE               	goto	l5235
 17408  06F8  366D               	lsrf	___fladd@grs,w
 17409  06F9  3801               	iorlw	1
 17410  06FA  00E2               	movwf	??___fladd
 17411  06FB  0862               	movf	??___fladd,w
 17412  06FC  00ED               	movwf	___fladd@grs
 17413  06FD  2F00               	goto	l5237
 17414  06FE                     l5235:	
 17415  06FE  1003               	clrc
 17416  06FF  0CED               	rrf	___fladd@grs,f
 17417  0700                     l5237:	
 17418  0700  185A               	btfsc	___fladd@b,0
 17419  0701  17ED               	bsf	___fladd@grs,7
 17420  0702  3001               	movlw	1
 17421  0703  00E2               	movwf	??___fladd
 17422  0704                     u5985:	
 17423  0704  37DD               	asrf	___fladd@b+3,f
 17424  0705  0CDC               	rrf	___fladd@b+2,f
 17425  0706  0CDB               	rrf	___fladd@b+1,f
 17426  0707  0CDA               	rrf	___fladd@b,f
 17427  0708  0BE2               	decfsz	??___fladd& (0+127),f
 17428  0709  2F04               	goto	u5985
 17429  070A  3001               	movlw	1
 17430  070B  00E2               	movwf	??___fladd
 17431  070C  0862               	movf	??___fladd,w
 17432  070D  07EC               	addwf	___fladd@bexp,f
 17433  070E  2F89               	goto	l5279
 17434  070F                     l5245:	
 17435  070F  085D               	movf	___fladd@b+3,w
 17436  0710  3A80               	xorlw	128
 17437  0711  00E2               	movwf	??___fladd
 17438  0712  0861               	movf	___fladd@a+3,w
 17439  0713  3A80               	xorlw	128
 17440  0714  0262               	subwf	??___fladd,w
 17441  0715  1D03               	skipz
 17442  0716  2F21               	goto	u5993
 17443  0717  0860               	movf	___fladd@a+2,w
 17444  0718  025C               	subwf	___fladd@b+2,w
 17445  0719  1D03               	skipz
 17446  071A  2F21               	goto	u5993
 17447  071B  085F               	movf	___fladd@a+1,w
 17448  071C  025B               	subwf	___fladd@b+1,w
 17449  071D  1D03               	skipz
 17450  071E  2F21               	goto	u5993
 17451  071F  085E               	movf	___fladd@a,w
 17452  0720  025A               	subwf	___fladd@b,w
 17453  0721                     u5993:	
 17454  0721  1803               	skipnc
 17455  0722  2F59               	goto	l5255
 17456  0723  30FF               	movlw	255
 17457  0724  00E2               	movwf	??___fladd
 17458  0725  30FF               	movlw	255
 17459  0726  00E3               	movwf	??___fladd+1
 17460  0727  30FF               	movlw	255
 17461  0728  00E4               	movwf	??___fladd+2
 17462  0729  30FF               	movlw	255
 17463  072A  00E5               	movwf	??___fladd+3
 17464  072B  085A               	movf	___fladd@b,w
 17465  072C  025E               	subwf	___fladd@a,w
 17466  072D  00E6               	movwf	??___fladd+4
 17467  072E  085B               	movf	___fladd@b+1,w
 17468  072F  3B5F               	subwfb	___fladd@a+1,w
 17469  0730  00E7               	movwf	??___fladd+5
 17470  0731  085C               	movf	___fladd@b+2,w
 17471  0732  3B60               	subwfb	___fladd@a+2,w
 17472  0733  00E8               	movwf	??___fladd+6
 17473  0734  085D               	movf	___fladd@b+3,w
 17474  0735  3B61               	subwfb	___fladd@a+3,w
 17475  0736  00E9               	movwf	??___fladd+7
 17476  0737  0866               	movf	??___fladd+4,w
 17477  0738  07E2               	addwf	??___fladd,f
 17478  0739  0867               	movf	??___fladd+5,w
 17479  073A  3DE3               	addwfc	??___fladd+1,f
 17480  073B  0868               	movf	??___fladd+6,w
 17481  073C  3DE4               	addwfc	??___fladd+2,f
 17482  073D  0869               	movf	??___fladd+7,w
 17483  073E  3DE5               	addwfc	??___fladd+3,f
 17484  073F  0865               	movf	??___fladd+3,w
 17485  0740  00DD               	movwf	___fladd@b+3
 17486  0741  0864               	movf	??___fladd+2,w
 17487  0742  00DC               	movwf	___fladd@b+2
 17488  0743  0863               	movf	??___fladd+1,w
 17489  0744  00DB               	movwf	___fladd@b+1
 17490  0745  0862               	movf	??___fladd,w
 17491  0746  00DA               	movwf	___fladd@b
 17492  0747  3080               	movlw	128
 17493  0748  00E2               	movwf	??___fladd
 17494  0749  0862               	movf	??___fladd,w
 17495  074A  06EA               	xorwf	___fladd@signs,f
 17496  074B  09ED               	comf	___fladd@grs,f
 17497  074C  0AED               	incf	___fladd@grs,f
 17498  074D  086D               	movf	___fladd@grs,w
 17499  074E  1D03               	btfss	3,2
 17500  074F  2F61               	goto	l1360
 17501  0750  3001               	movlw	1
 17502  0751  07DA               	addwf	___fladd@b,f
 17503  0752  3000               	movlw	0
 17504  0753  3DDB               	addwfc	___fladd@b+1,f
 17505  0754  3000               	movlw	0
 17506  0755  3DDC               	addwfc	___fladd@b+2,f
 17507  0756  3000               	movlw	0
 17508  0757  3DDD               	addwfc	___fladd@b+3,f
 17509  0758  2F61               	goto	l1360
 17510  0759                     l5255:	
 17511  0759  085E               	movf	___fladd@a,w
 17512  075A  02DA               	subwf	___fladd@b,f
 17513  075B  085F               	movf	___fladd@a+1,w
 17514  075C  3BDB               	subwfb	___fladd@b+1,f
 17515  075D  0860               	movf	___fladd@a+2,w
 17516  075E  3BDC               	subwfb	___fladd@b+2,f
 17517  075F  0861               	movf	___fladd@a+3,w
 17518  0760  3BDD               	subwfb	___fladd@b+3,f
 17519  0761                     l1360:	
 17520  0761  085D               	movf	___fladd@b+3,w
 17521  0762  045C               	iorwf	___fladd@b+2,w
 17522  0763  045B               	iorwf	___fladd@b+1,w
 17523  0764  045A               	iorwf	___fladd@b,w
 17524  0765  1D03               	skipz
 17525  0766  2F87               	goto	l5277
 17526  0767  086D               	movf	___fladd@grs,w
 17527  0768  1D03               	btfss	3,2
 17528  0769  2F87               	goto	l5277
 17529  076A  3000               	movlw	0
 17530  076B  00DD               	movwf	?___fladd+3
 17531  076C  3000               	movlw	0
 17532  076D  00DC               	movwf	?___fladd+2
 17533  076E  3000               	movlw	0
 17534  076F  00DB               	movwf	?___fladd+1
 17535  0770  3000               	movlw	0
 17536  0771  00DA               	movwf	?___fladd
 17537  0772  0008               	return
 17538  0773                     l5263:	
 17539  0773  3001               	movlw	1
 17540  0774                     u6035:	
 17541  0774  35DA               	lslf	___fladd@b,f
 17542  0775  0DDB               	rlf	___fladd@b+1,f
 17543  0776  0DDC               	rlf	___fladd@b+2,f
 17544  0777  0DDD               	rlf	___fladd@b+3,f
 17545  0778  0B89               	decfsz	9,f
 17546  0779  2F74               	goto	u6035
 17547  077A  1BED               	btfsc	___fladd@grs,7
 17548  077B  145A               	bsf	___fladd@b,0
 17549  077C  1C6D               	btfss	___fladd@grs,0
 17550  077D  2F80               	goto	l5271
 17551  077E  1403               	setc
 17552  077F  2F81               	goto	L4
 17553  0780                     l5271:	
 17554  0780  1003               	clrc
 17555  0781                     L4:	
 17556  0781  0DED               	rlf	___fladd@grs,f
 17557  0782  086C               	movf	___fladd@bexp,w
 17558  0783  1903               	btfsc	3,2
 17559  0784  2F87               	goto	l5277
 17560  0785  3001               	movlw	1
 17561  0786  02EC               	subwf	___fladd@bexp,f
 17562  0787                     l5277:	
 17563  0787  1FDC               	btfss	___fladd@b+2,7
 17564  0788  2F73               	goto	l5263
 17565  0789                     l5279:	
 17566  0789  01EB               	clrf	___fladd@aexp
 17567  078A  1FED               	btfss	___fladd@grs,7
 17568  078B  2F94               	goto	l5289
 17569  078C  086D               	movf	___fladd@grs,w
 17570  078D  397F               	andlw	127
 17571  078E  1903               	btfsc	3,2
 17572  078F  185A               	btfsc	___fladd@b,0
 17573  0790  2F92               	goto	l5285
 17574  0791  2F94               	goto	l5289
 17575  0792                     l5285:	
 17576  0792  01EB               	clrf	___fladd@aexp
 17577  0793  0AEB               	incf	___fladd@aexp,f
 17578  0794                     l5289:	
 17579  0794  086B               	movf	___fladd@aexp,w
 17580  0795  1903               	btfsc	3,2
 17581  0796  2FC0               	goto	l1373
 17582  0797  3001               	movlw	1
 17583  0798  07DA               	addwf	___fladd@b,f
 17584  0799  3000               	movlw	0
 17585  079A  3DDB               	addwfc	___fladd@b+1,f
 17586  079B  3000               	movlw	0
 17587  079C  3DDC               	addwfc	___fladd@b+2,f
 17588  079D  3000               	movlw	0
 17589  079E  3DDD               	addwfc	___fladd@b+3,f
 17590  079F  1C5D               	btfss	___fladd@b+3,0
 17591  07A0  2FC0               	goto	l1373
 17592  07A1  085A               	movf	___fladd@b,w
 17593  07A2  00E2               	movwf	??___fladd
 17594  07A3  085B               	movf	___fladd@b+1,w
 17595  07A4  00E3               	movwf	??___fladd+1
 17596  07A5  085C               	movf	___fladd@b+2,w
 17597  07A6  00E4               	movwf	??___fladd+2
 17598  07A7  085D               	movf	___fladd@b+3,w
 17599  07A8  00E5               	movwf	??___fladd+3
 17600  07A9  3001               	movlw	1
 17601  07AA  00E6               	movwf	??___fladd+4
 17602  07AB                     u6135:	
 17603  07AB  37E5               	asrf	??___fladd+3,f
 17604  07AC  0CE4               	rrf	??___fladd+2,f
 17605  07AD  0CE3               	rrf	??___fladd+1,f
 17606  07AE  0CE2               	rrf	??___fladd,f
 17607  07AF  0BE6               	decfsz	??___fladd+4,f
 17608  07B0  2FAB               	goto	u6135
 17609  07B1  0865               	movf	??___fladd+3,w
 17610  07B2  00DD               	movwf	___fladd@b+3
 17611  07B3  0864               	movf	??___fladd+2,w
 17612  07B4  00DC               	movwf	___fladd@b+2
 17613  07B5  0863               	movf	??___fladd+1,w
 17614  07B6  00DB               	movwf	___fladd@b+1
 17615  07B7  0862               	movf	??___fladd,w
 17616  07B8  00DA               	movwf	___fladd@b
 17617  07B9  0A6C               	incf	___fladd@bexp,w
 17618  07BA  1903               	btfsc	3,2
 17619  07BB  2FC0               	goto	l1373
 17620  07BC  3001               	movlw	1
 17621  07BD  00E2               	movwf	??___fladd
 17622  07BE  0862               	movf	??___fladd,w
 17623  07BF  07EC               	addwf	___fladd@bexp,f
 17624  07C0                     l1373:	
 17625  07C0  0A6C               	incf	___fladd@bexp,w
 17626  07C1  1D03               	btfss	3,2
 17627  07C2  086C               	movf	___fladd@bexp,w
 17628  07C3  1D03               	btfss	3,2
 17629  07C4  2FD0               	goto	l5307
 17630  07C5  3000               	movlw	0
 17631  07C6  00DD               	movwf	___fladd@b+3
 17632  07C7  3000               	movlw	0
 17633  07C8  00DC               	movwf	___fladd@b+2
 17634  07C9  3000               	movlw	0
 17635  07CA  00DB               	movwf	___fladd@b+1
 17636  07CB  3000               	movlw	0
 17637  07CC  00DA               	movwf	___fladd@b
 17638  07CD  086C               	movf	___fladd@bexp,w
 17639  07CE  1903               	btfsc	3,2
 17640  07CF  01EA               	clrf	___fladd@signs
 17641  07D0                     l5307:	
 17642  07D0  1C6C               	btfss	___fladd@bexp,0
 17643  07D1  2FD4               	goto	l5311
 17644  07D2  17DC               	bsf	___fladd@b+2,7
 17645  07D3  2FD8               	goto	l1381
 17646  07D4                     l5311:	
 17647  07D4  307F               	movlw	127
 17648  07D5  00E2               	movwf	??___fladd
 17649  07D6  0862               	movf	??___fladd,w
 17650  07D7  05DC               	andwf	___fladd@b+2,f
 17651  07D8                     l1381:	
 17652  07D8  366C               	lsrf	___fladd@bexp,w
 17653  07D9  00E2               	movwf	??___fladd
 17654  07DA  0862               	movf	??___fladd,w
 17655  07DB  00DD               	movwf	___fladd@b+3
 17656  07DC  1FEA               	btfss	___fladd@signs,7
 17657  07DD  0008               	return
 17658  07DE  17DD               	bsf	___fladd@b+3,7
 17659  07DF  0008               	return
 17660  07E0                     __end_of___fladd:	
 17661                           
 17662                           	psect	text59
 17663  2012                     __ptext59:	
 17664 ;; *************** function _calibrate_BATTSOC *****************
 17665 ;; Defined at:
 17666 ;;		line 23 in file "algorithms.c"
 17667 ;; Parameters:    Size  Location     Type
 17668 ;;		None
 17669 ;; Auto vars:     Size  Location     Type
 17670 ;;  j               2   24[BANK1 ] int 
 17671 ;;  i               2   22[BANK1 ] int 
 17672 ;; Return value:  Size  Location     Type
 17673 ;;                  1    wreg      void 
 17674 ;; Registers used:
 17675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17676 ;; Tracked objects:
 17677 ;;		On entry : 0/0
 17678 ;;		On exit  : 0/0
 17679 ;;		Unchanged: 0/0
 17680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17682 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17683 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17684 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17685 ;;Total ram usage:        9 bytes
 17686 ;; Hardware stack levels used:    1
 17687 ;; Hardware stack levels required when called:    3
 17688 ;; This function calls:
 17689 ;;		___fldiv
 17690 ;;		___flmul
 17691 ;;		___fltol
 17692 ;;		___xxtofl
 17693 ;; This function is called by:
 17694 ;;		_AFE_UPDATE
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           
 17699                           ;psect for function _calibrate_BATTSOC
 17700  2012                     _calibrate_BATTSOC:	
 17701                           
 17702                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 17703                           
 17704                           ;incstack = 0
 17705                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17706  2012  0021               	movlb	1	; select bank1
 17707  2013  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 17708  2014  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 17709  2015                     l6155:	
 17710                           
 17711                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 17712  2015  0021               	movlb	1	; select bank1
 17713  2016  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 17714  2017  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 17715  2018                     l6161:	
 17716                           
 17717                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 17718  2018  0021               	movlb	1	; select bank1
 17719  2019  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17720  201A  0085               	movwf	5
 17721  201B  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17722  201C  0084               	movwf	4
 17723  201D  3584               	lslf	4,f
 17724  201E  0D85               	rlf	5,f
 17725  201F  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 17726  2020  0784               	addwf	4,f
 17727  2021  30B0               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 17728  2022  3D85               	addwfc	5,f
 17729  2023  3F00               	moviw [0]fsr0
 17730  2024  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17731  2025  3F01               	moviw [1]fsr0
 17732  2026  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17733  2027  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17734  2028  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 17735  2029  0086               	movwf	6
 17736  202A  3001               	movlw	1	; select bank3/4
 17737  202B  0087               	movwf	7
 17738  202C  3F40               	moviw [0]fsr1
 17739  202D  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 17740  202E  3F41               	moviw [1]fsr1
 17741  202F  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 17742  2030  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 17743  2031  3A80               	xorlw	128
 17744  2032  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 17745  2033  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17746  2034  3A80               	xorlw	128
 17747  2035  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 17748  2036  1D03               	skipz
 17749  2037  283A               	goto	u7605
 17750  2038  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17751  2039  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 17752  203A                     u7605:	
 17753  203A  1C03               	skipc
 17754  203B  28B7               	goto	l6167
 17755                           
 17756                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 17757  203C  0021               	movlb	1	; select bank1
 17758  203D  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17759  203E  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17760  203F  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17761  2040  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17762  2041  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 17763  2042  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 17764  2043  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 17765  2044  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 17766  2045  30B0               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 17767  2046  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 17768  2047  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17769  2048  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 17770  2049  0086               	movwf	6
 17771  204A  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17772  204B  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 17773  204C  0087               	movwf	7
 17774  204D  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17775  204E  3E20               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 17776  204F  0084               	movwf	4
 17777  2050  3002               	movlw	2	; select bank4/5
 17778  2051  0085               	movwf	5
 17779  2052  3F40               	moviw [0]fsr1
 17780  2053  3F80               	movwi [0]fsr0
 17781  2054  3F41               	moviw [1]fsr1
 17782  2055  3F81               	movwi [1]fsr0
 17783                           
 17784                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 17785  2056  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17786  2057  0085               	movwf	5
 17787  2058  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17788  2059  0084               	movwf	4
 17789  205A  3584               	lslf	4,f
 17790  205B  0D85               	rlf	5,f
 17791  205C  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 17792  205D  0784               	addwf	4,f
 17793  205E  30B0               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 17794  205F  3D85               	addwfc	5,f
 17795  2060  3F00               	moviw [0]fsr0
 17796  2061  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17797  2062  3F01               	moviw [1]fsr0
 17798  2063  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17799  2064  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17800  2065  00F1               	movwf	___xxtofl@val
 17801  2066  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17802  2067  00F2               	movwf	___xxtofl@val+1
 17803  2068  0D89               	rlf	9,f
 17804  2069  3B89               	subwfb	9,f
 17805  206A  0989               	comf	9,f
 17806  206B  00F3               	movwf	___xxtofl@val+2
 17807  206C  00F4               	movwf	___xxtofl@val+3
 17808  206D  3001               	movlw	1
 17809  206E  31AB  23E3  31A0   	fcall	___xxtofl
 17810  2071  0874               	movf	?___xxtofl+3,w
 17811  2072  0020               	movlb	0	; select bank0
 17812  2073  00C7               	movwf	___fldiv@b+3
 17813  2074  0873               	movf	?___xxtofl+2,w
 17814  2075  00C6               	movwf	___fldiv@b+2
 17815  2076  0872               	movf	?___xxtofl+1,w
 17816  2077  00C5               	movwf	___fldiv@b+1
 17817  2078  0871               	movf	?___xxtofl,w
 17818  2079  00C4               	movwf	___fldiv@b
 17819  207A  3042               	movlw	66
 17820  207B  00C3               	movwf	___fldiv@a+3
 17821  207C  30C8               	movlw	200
 17822  207D  00C2               	movwf	___fldiv@a+2
 17823  207E  3000               	movlw	0
 17824  207F  00C1               	movwf	___fldiv@a+1
 17825  2080  3000               	movlw	0
 17826  2081  00C0               	movwf	___fldiv@a
 17827  2082  319C  24E2  31A0   	fcall	___fldiv
 17828  2085  0020               	movlb	0	; select bank0
 17829  2086  0843               	movf	?___fldiv+3,w
 17830  2087  00AD               	movwf	___flmul@a+3
 17831  2088  0842               	movf	?___fldiv+2,w
 17832  2089  00AC               	movwf	___flmul@a+2
 17833  208A  0841               	movf	?___fldiv+1,w
 17834  208B  00AB               	movwf	___flmul@a+1
 17835  208C  0840               	movf	?___fldiv,w
 17836  208D  00AA               	movwf	___flmul@a
 17837  208E  3045               	movlw	69
 17838  208F  00A9               	movwf	___flmul@b+3
 17839  2090  301C               	movlw	28
 17840  2091  00A8               	movwf	___flmul@b+2
 17841  2092  3040               	movlw	64
 17842  2093  00A7               	movwf	___flmul@b+1
 17843  2094  3000               	movlw	0
 17844  2095  00A6               	movwf	___flmul@b
 17845  2096  3190  2022  31A0   	fcall	___flmul
 17846  2099  0020               	movlb	0	; select bank0
 17847  209A  0829               	movf	?___flmul+3,w
 17848  209B  0021               	movlb	1	; select bank1
 17849  209C  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17850  209D  0020               	movlb	0	; select bank0
 17851  209E  0828               	movf	?___flmul+2,w
 17852  209F  0021               	movlb	1	; select bank1
 17853  20A0  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17854  20A1  0020               	movlb	0	; select bank0
 17855  20A2  0827               	movf	?___flmul+1,w
 17856  20A3  0021               	movlb	1	; select bank1
 17857  20A4  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17858  20A5  0020               	movlb	0	; select bank0
 17859  20A6  0826               	movf	?___flmul,w
 17860  20A7  0021               	movlb	1	; select bank1
 17861  20A8  00A8               	movwf	___fltol@f1^(0+128)
 17862  20A9  31A8  20A3  31A0   	fcall	___fltol
 17863  20AC  0021               	movlb	1	; select bank1
 17864  20AD  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17865  20AE  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17866  20AF  0086               	movwf	6
 17867  20B0  3001               	movlw	1	; select bank3/4
 17868  20B1  0087               	movwf	7
 17869  20B2  0828               	movf	?___fltol^(0+128),w
 17870  20B3  3FC0               	movwi [0]fsr1
 17871  20B4  0829               	movf	(?___fltol+1)^(0+128),w
 17872  20B5  3FC1               	movwi [1]fsr1
 17873                           
 17874                           ;algorithms.c: 31:                 break;
 17875  20B6  28C7               	goto	l6169
 17876  20B7                     l6167:	
 17877                           
 17878                           ;algorithms.c: 33:         }
 17879  20B7  3001               	movlw	1
 17880  20B8  0021               	movlb	1	; select bank1
 17881  20B9  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 17882  20BA  3000               	movlw	0
 17883  20BB  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 17884  20BC  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17885  20BD  3A80               	xorlw	128
 17886  20BE  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17887  20BF  3080               	movlw	128
 17888  20C0  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 17889  20C1  1D03               	skipz
 17890  20C2  28C5               	goto	u7615
 17891  20C3  302E               	movlw	46
 17892  20C4  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 17893  20C5                     u7615:	
 17894  20C5  1C03               	skipc
 17895  20C6  2818               	goto	l6161
 17896  20C7                     l6169:	
 17897                           
 17898                           ;algorithms.c: 34:     }
 17899  20C7  3001               	movlw	1
 17900  20C8  0021               	movlb	1	; select bank1
 17901  20C9  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 17902  20CA  3000               	movlw	0
 17903  20CB  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 17904  20CC  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 17905  20CD  3A80               	xorlw	128
 17906  20CE  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17907  20CF  3080               	movlw	128
 17908  20D0  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 17909  20D1  1D03               	skipz
 17910  20D2  28D5               	goto	u7625
 17911  20D3  3005               	movlw	5
 17912  20D4  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 17913  20D5                     u7625:	
 17914  20D5  1803               	btfsc	3,0
 17915  20D6  0008               	return
 17916  20D7  2815               	goto	l6155
 17917  20D8                     __end_of_calibrate_BATTSOC:	
 17918                           
 17919                           	psect	text60
 17920  2BE3                     __ptext60:	
 17921 ;; *************** function ___xxtofl *****************
 17922 ;; Defined at:
 17923 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17924 ;; Parameters:    Size  Location     Type
 17925 ;;  sign            1    wreg     unsigned char 
 17926 ;;  val             4    1[COMMON] long 
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;  sign            1    0[BANK0 ] unsigned char 
 17929 ;;  arg             4    2[BANK0 ] unsigned long 
 17930 ;;  exp             1    1[BANK0 ] unsigned char 
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  4    1[COMMON] unsigned char 
 17933 ;; Registers used:
 17934 ;;		wreg, status,2, status,0
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/0
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17941 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17943 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17944 ;;Total ram usage:       14 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:    1
 17947 ;; This function calls:
 17948 ;;		Nothing
 17949 ;; This function is called by:
 17950 ;;		_setShortCircuitProtection
 17951 ;;		_setOverCurrentDischargeProtection
 17952 ;;		_updateCurrent
 17953 ;;		_updateVoltages
 17954 ;;		_updateTemperatures
 17955 ;;		_calibrate_BATTSOC
 17956 ;;		_coulomb_counter
 17957 ;;		_logf
 17958 ;;		_AFE_getSetShortCircuitCurrent
 17959 ;;		_AFE_getOverCurrentDischargeCurrent
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function ___xxtofl
 17965  2BE3                     ___xxtofl:	
 17966                           
 17967                           ;incstack = 0
 17968                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17969                           ;___xxtofl@sign stored from wreg
 17970  2BE3  0020               	movlb	0	; select bank0
 17971  2BE4  00A0               	movwf	___xxtofl@sign
 17972  2BE5  0820               	movf	___xxtofl@sign,w
 17973  2BE6  1D03               	btfss	3,2
 17974  2BE7  1FF4               	btfss	___xxtofl@val+3,7
 17975  2BE8  2BF9               	goto	l5655
 17976  2BE9  0971               	comf	___xxtofl@val,w
 17977  2BEA  00A2               	movwf	___xxtofl@arg
 17978  2BEB  0972               	comf	___xxtofl@val+1,w
 17979  2BEC  00A3               	movwf	___xxtofl@arg+1
 17980  2BED  0973               	comf	___xxtofl@val+2,w
 17981  2BEE  00A4               	movwf	___xxtofl@arg+2
 17982  2BEF  0974               	comf	___xxtofl@val+3,w
 17983  2BF0  00A5               	movwf	___xxtofl@arg+3
 17984  2BF1  0AA2               	incf	___xxtofl@arg,f
 17985  2BF2  1903               	skipnz
 17986  2BF3  0AA3               	incf	___xxtofl@arg+1,f
 17987  2BF4  1903               	skipnz
 17988  2BF5  0AA4               	incf	___xxtofl@arg+2,f
 17989  2BF6  1903               	skipnz
 17990  2BF7  0AA5               	incf	___xxtofl@arg+3,f
 17991  2BF8  2C01               	goto	l1473
 17992  2BF9                     l5655:	
 17993  2BF9  0874               	movf	___xxtofl@val+3,w
 17994  2BFA  00A5               	movwf	___xxtofl@arg+3
 17995  2BFB  0873               	movf	___xxtofl@val+2,w
 17996  2BFC  00A4               	movwf	___xxtofl@arg+2
 17997  2BFD  0872               	movf	___xxtofl@val+1,w
 17998  2BFE  00A3               	movwf	___xxtofl@arg+1
 17999  2BFF  0871               	movf	___xxtofl@val,w
 18000  2C00  00A2               	movwf	___xxtofl@arg
 18001  2C01                     l1473:	
 18002  2C01  0874               	movf	___xxtofl@val+3,w
 18003  2C02  0473               	iorwf	___xxtofl@val+2,w
 18004  2C03  0472               	iorwf	___xxtofl@val+1,w
 18005  2C04  0471               	iorwf	___xxtofl@val,w
 18006  2C05  1D03               	skipz
 18007  2C06  2C10               	goto	l5661
 18008  2C07  3000               	movlw	0
 18009  2C08  00F4               	movwf	?___xxtofl+3
 18010  2C09  3000               	movlw	0
 18011  2C0A  00F3               	movwf	?___xxtofl+2
 18012  2C0B  3000               	movlw	0
 18013  2C0C  00F2               	movwf	?___xxtofl+1
 18014  2C0D  3000               	movlw	0
 18015  2C0E  00F1               	movwf	?___xxtofl
 18016  2C0F  0008               	return
 18017  2C10                     l5661:	
 18018  2C10  3096               	movlw	150
 18019  2C11  00F5               	movwf	??___xxtofl
 18020  2C12  0875               	movf	??___xxtofl,w
 18021  2C13  00A1               	movwf	___xxtofl@exp
 18022  2C14                     l5665:	
 18023  2C14  30FE               	movlw	254
 18024  2C15  0525               	andwf	___xxtofl@arg+3,w
 18025  2C16  1903               	btfsc	3,2
 18026  2C17  2C37               	goto	l1479
 18027  2C18  3001               	movlw	1
 18028  2C19  00F5               	movwf	??___xxtofl
 18029  2C1A  0875               	movf	??___xxtofl,w
 18030  2C1B  07A1               	addwf	___xxtofl@exp,f
 18031  2C1C  3001               	movlw	1
 18032  2C1D                     u6885:	
 18033  2C1D  36A5               	lsrf	___xxtofl@arg+3,f
 18034  2C1E  0CA4               	rrf	___xxtofl@arg+2,f
 18035  2C1F  0CA3               	rrf	___xxtofl@arg+1,f
 18036  2C20  0CA2               	rrf	___xxtofl@arg,f
 18037  2C21  0B89               	decfsz	9,f
 18038  2C22  2C1D               	goto	u6885
 18039  2C23  2C14               	goto	l5665
 18040  2C24                     l5667:	
 18041  2C24  3001               	movlw	1
 18042  2C25  00F5               	movwf	??___xxtofl
 18043  2C26  0875               	movf	??___xxtofl,w
 18044  2C27  07A1               	addwf	___xxtofl@exp,f
 18045  2C28  3001               	movlw	1
 18046  2C29  07A2               	addwf	___xxtofl@arg,f
 18047  2C2A  3000               	movlw	0
 18048  2C2B  3DA3               	addwfc	___xxtofl@arg+1,f
 18049  2C2C  3000               	movlw	0
 18050  2C2D  3DA4               	addwfc	___xxtofl@arg+2,f
 18051  2C2E  3000               	movlw	0
 18052  2C2F  3DA5               	addwfc	___xxtofl@arg+3,f
 18053  2C30  3001               	movlw	1
 18054  2C31                     u6905:	
 18055  2C31  36A5               	lsrf	___xxtofl@arg+3,f
 18056  2C32  0CA4               	rrf	___xxtofl@arg+2,f
 18057  2C33  0CA3               	rrf	___xxtofl@arg+1,f
 18058  2C34  0CA2               	rrf	___xxtofl@arg,f
 18059  2C35  0B89               	decfsz	9,f
 18060  2C36  2C31               	goto	u6905
 18061  2C37                     l1479:	
 18062  2C37  30FF               	movlw	255
 18063  2C38  0525               	andwf	___xxtofl@arg+3,w
 18064  2C39  1903               	btfsc	3,2
 18065  2C3A  2C49               	goto	l5675
 18066  2C3B  2C24               	goto	l5667
 18067  2C3C                     l5677:	
 18068  2C3C  3002               	movlw	2
 18069  2C3D  0221               	subwf	___xxtofl@exp,w
 18070  2C3E  1C03               	btfss	3,0
 18071  2C3F  2C4B               	goto	l1486
 18072  2C40  3001               	movlw	1
 18073  2C41  02A1               	subwf	___xxtofl@exp,f
 18074  2C42  3001               	movlw	1
 18075  2C43                     u6925:	
 18076  2C43  35A2               	lslf	___xxtofl@arg,f
 18077  2C44  0DA3               	rlf	___xxtofl@arg+1,f
 18078  2C45  0DA4               	rlf	___xxtofl@arg+2,f
 18079  2C46  0DA5               	rlf	___xxtofl@arg+3,f
 18080  2C47  0B89               	decfsz	9,f
 18081  2C48  2C43               	goto	u6925
 18082  2C49                     l5675:	
 18083  2C49  1FA4               	btfss	___xxtofl@arg+2,7
 18084  2C4A  2C3C               	goto	l5677
 18085  2C4B                     l1486:	
 18086  2C4B  1821               	btfsc	___xxtofl@exp,0
 18087  2C4C  2C55               	goto	l1487
 18088  2C4D  30FF               	movlw	255
 18089  2C4E  05A2               	andwf	___xxtofl@arg,f
 18090  2C4F  30FF               	movlw	255
 18091  2C50  05A3               	andwf	___xxtofl@arg+1,f
 18092  2C51  307F               	movlw	127
 18093  2C52  05A4               	andwf	___xxtofl@arg+2,f
 18094  2C53  30FF               	movlw	255
 18095  2C54  05A5               	andwf	___xxtofl@arg+3,f
 18096  2C55                     l1487:	
 18097  2C55  1003               	clrc
 18098  2C56  0CA1               	rrf	___xxtofl@exp,f
 18099  2C57  0821               	movf	___xxtofl@exp,w
 18100  2C58  00F5               	movwf	??___xxtofl
 18101  2C59  01F6               	clrf	??___xxtofl+1
 18102  2C5A  01F7               	clrf	??___xxtofl+2
 18103  2C5B  01F8               	clrf	??___xxtofl+3
 18104  2C5C  3018               	movlw	24
 18105  2C5D                     u6965:	
 18106  2C5D  35F5               	lslf	??___xxtofl,f
 18107  2C5E  0DF6               	rlf	??___xxtofl+1,f
 18108  2C5F  0DF7               	rlf	??___xxtofl+2,f
 18109  2C60  0DF8               	rlf	??___xxtofl+3,f
 18110  2C61  0B89               	decfsz	9,f
 18111  2C62  2C5D               	goto	u6965
 18112  2C63  0875               	movf	??___xxtofl,w
 18113  2C64  04A2               	iorwf	___xxtofl@arg,f
 18114  2C65  0876               	movf	??___xxtofl+1,w
 18115  2C66  04A3               	iorwf	___xxtofl@arg+1,f
 18116  2C67  0877               	movf	??___xxtofl+2,w
 18117  2C68  04A4               	iorwf	___xxtofl@arg+2,f
 18118  2C69  0878               	movf	??___xxtofl+3,w
 18119  2C6A  04A5               	iorwf	___xxtofl@arg+3,f
 18120  2C6B  0820               	movf	___xxtofl@sign,w
 18121  2C6C  1D03               	btfss	3,2
 18122  2C6D  1FF4               	btfss	___xxtofl@val+3,7
 18123  2C6E  2C70               	goto	l5689
 18124  2C6F  17A5               	bsf	___xxtofl@arg+3,7
 18125  2C70                     l5689:	
 18126  2C70  0825               	movf	___xxtofl@arg+3,w
 18127  2C71  00F4               	movwf	?___xxtofl+3
 18128  2C72  0824               	movf	___xxtofl@arg+2,w
 18129  2C73  00F3               	movwf	?___xxtofl+2
 18130  2C74  0823               	movf	___xxtofl@arg+1,w
 18131  2C75  00F2               	movwf	?___xxtofl+1
 18132  2C76  0822               	movf	___xxtofl@arg,w
 18133  2C77  00F1               	movwf	?___xxtofl
 18134  2C78  0008               	return
 18135  2C79                     __end_of___xxtofl:	
 18136                           
 18137                           	psect	text61
 18138  28A3                     __ptext61:	
 18139 ;; *************** function ___fltol *****************
 18140 ;; Defined at:
 18141 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18142 ;; Parameters:    Size  Location     Type
 18143 ;;  f1              4    8[BANK1 ] unsigned char 
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;  exp1            1   11[COMMON] unsigned char 
 18146 ;;  sign1           1   10[COMMON] unsigned char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  4    8[BANK1 ] long 
 18149 ;; Registers used:
 18150 ;;		wreg, status,2, status,0
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18156 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18158 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18159 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18160 ;;Total ram usage:       11 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:    1
 18163 ;; This function calls:
 18164 ;;		Nothing
 18165 ;; This function is called by:
 18166 ;;		_updateCurrent
 18167 ;;		_updateVoltages
 18168 ;;		_updateTemperatures
 18169 ;;		_calibrate_BATTSOC
 18170 ;;		_coulomb_counter
 18171 ;;		_AFE_getSetShortCircuitCurrent
 18172 ;;		_AFE_getOverCurrentDischargeCurrent
 18173 ;; This function uses a non-reentrant model
 18174 ;;
 18175                           
 18176                           
 18177                           ;psect for function ___fltol
 18178  28A3                     ___fltol:	
 18179                           
 18180                           ;incstack = 0
 18181                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18182  28A3  1003               	clrc
 18183  28A4  0021               	movlb	1	; select bank1
 18184  28A5  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18185  28A6  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18186  28A7  00AC               	movwf	??___fltol^(0+128)
 18187  28A8  082C               	movf	??___fltol^(0+128),w
 18188  28A9  00FB               	movwf	___fltol@exp1
 18189  28AA  087B               	movf	___fltol@exp1,w
 18190  28AB  1D03               	btfss	3,2
 18191  28AC  28B6               	goto	l5899
 18192  28AD                     l5895:	
 18193  28AD  3000               	movlw	0
 18194  28AE  00AB               	movwf	(?___fltol+3)^(0+128)
 18195  28AF  3000               	movlw	0
 18196  28B0  00AA               	movwf	(?___fltol+2)^(0+128)
 18197  28B1  3000               	movlw	0
 18198  28B2  00A9               	movwf	(?___fltol+1)^(0+128)
 18199  28B3  3000               	movlw	0
 18200  28B4  00A8               	movwf	?___fltol^(0+128)
 18201  28B5  0008               	return
 18202  28B6                     l5899:	
 18203  28B6  0828               	movf	___fltol@f1^(0+128),w
 18204  28B7  00AC               	movwf	??___fltol^(0+128)
 18205  28B8  0829               	movf	(___fltol@f1+1)^(0+128),w
 18206  28B9  00AD               	movwf	(??___fltol^(0+128)+1)
 18207  28BA  082A               	movf	(___fltol@f1+2)^(0+128),w
 18208  28BB  00AE               	movwf	(??___fltol^(0+128)+2)
 18209  28BC  082B               	movf	(___fltol@f1+3)^(0+128),w
 18210  28BD  00AF               	movwf	(??___fltol^(0+128)+3)
 18211  28BE  301F               	movlw	31
 18212  28BF                     u7315:	
 18213  28BF  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18214  28C0  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18215  28C1  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18216  28C2  0CAC               	rrf	??___fltol^(0+128),f
 18217  28C3  0B89               	decfsz	9,f
 18218  28C4  28BF               	goto	u7315
 18219  28C5  082C               	movf	??___fltol^(0+128),w
 18220  28C6  00B0               	movwf	(??___fltol+4)^(0+128)
 18221  28C7  0830               	movf	(??___fltol+4)^(0+128),w
 18222  28C8  00FA               	movwf	___fltol@sign1
 18223  28C9  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18224  28CA  30FF               	movlw	255
 18225  28CB  05A8               	andwf	___fltol@f1^(0+128),f
 18226  28CC  30FF               	movlw	255
 18227  28CD  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18228  28CE  30FF               	movlw	255
 18229  28CF  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18230  28D0  3000               	movlw	0
 18231  28D1  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18232  28D2  3096               	movlw	150
 18233  28D3  02FB               	subwf	___fltol@exp1,f
 18234  28D4  1FFB               	btfss	___fltol@exp1,7
 18235  28D5  28E9               	goto	l5917
 18236  28D6  087B               	movf	___fltol@exp1,w
 18237  28D7  3A80               	xorlw	128
 18238  28D8  3E97               	addlw	151
 18239  28D9  1C03               	btfss	3,0
 18240  28DA  28AD               	goto	l5895
 18241  28DB                     l5915:	
 18242  28DB  3001               	movlw	1
 18243  28DC                     u7345:	
 18244  28DC  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18245  28DD  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18246  28DE  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18247  28DF  0CA8               	rrf	___fltol@f1^(0+128),f
 18248  28E0  0B89               	decfsz	9,f
 18249  28E1  28DC               	goto	u7345
 18250  28E2  3001               	movlw	1
 18251  28E3  00AC               	movwf	??___fltol^(0+128)
 18252  28E4  082C               	movf	??___fltol^(0+128),w
 18253  28E5  07FB               	addwf	___fltol@exp1,f
 18254  28E6  1903               	btfsc	3,2
 18255  28E7  28FA               	goto	l5925
 18256  28E8  28DB               	goto	l5915
 18257  28E9                     l5917:	
 18258  28E9  3020               	movlw	32
 18259  28EA  027B               	subwf	___fltol@exp1,w
 18260  28EB  1803               	btfsc	3,0
 18261  28EC  28AD               	goto	l5895
 18262  28ED                     l1239:	
 18263  28ED  087B               	movf	___fltol@exp1,w
 18264  28EE  1903               	btfsc	3,2
 18265  28EF  28FA               	goto	l5925
 18266  28F0  3001               	movlw	1
 18267  28F1                     u7375:	
 18268  28F1  35A8               	lslf	___fltol@f1^(0+128),f
 18269  28F2  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18270  28F3  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18271  28F4  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18272  28F5  0B89               	decfsz	9,f
 18273  28F6  28F1               	goto	u7375
 18274  28F7  3001               	movlw	1
 18275  28F8  02FB               	subwf	___fltol@exp1,f
 18276  28F9  28ED               	goto	l1239
 18277  28FA                     l5925:	
 18278  28FA  087A               	movf	___fltol@sign1,w
 18279  28FB  1903               	btfsc	3,2
 18280  28FC  0008               	return
 18281  28FD  09A8               	comf	___fltol@f1^(0+128),f
 18282  28FE  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18283  28FF  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18284  2900  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18285  2901  0AA8               	incf	___fltol@f1^(0+128),f
 18286  2902  1903               	skipnz
 18287  2903  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18288  2904  1903               	skipnz
 18289  2905  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18290  2906  1903               	skipnz
 18291  2907  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18292  2908  0008               	return
 18293  2909                     __end_of___fltol:	
 18294                           
 18295                           	psect	text62
 18296  1022                     __ptext62:	
 18297 ;; *************** function ___flmul *****************
 18298 ;; Defined at:
 18299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18300 ;; Parameters:    Size  Location     Type
 18301 ;;  b               4    6[BANK0 ] long 
 18302 ;;  a               4   10[BANK0 ] long 
 18303 ;; Auto vars:     Size  Location     Type
 18304 ;;  prod            4   26[BANK0 ] struct .
 18305 ;;  grs             4   20[BANK0 ] unsigned long 
 18306 ;;  temp            2   30[BANK0 ] struct .
 18307 ;;  bexp            1   25[BANK0 ] unsigned char 
 18308 ;;  aexp            1   24[BANK0 ] unsigned char 
 18309 ;;  sign            1   19[BANK0 ] unsigned char 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  4    6[BANK0 ] unsigned char 
 18312 ;; Registers used:
 18313 ;;		wreg, status,2, status,0, pclath, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18319 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18320 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18321 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18322 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18323 ;;Total ram usage:       26 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:    2
 18326 ;; This function calls:
 18327 ;;		__Umul8_16
 18328 ;; This function is called by:
 18329 ;;		_setShortCircuitProtection
 18330 ;;		_setOverCurrentDischargeProtection
 18331 ;;		_updateCurrent
 18332 ;;		_updateVoltages
 18333 ;;		_updateTemperatures
 18334 ;;		_calibrate_BATTSOC
 18335 ;;		_coulomb_counter
 18336 ;;		_logf
 18337 ;; This function uses a non-reentrant model
 18338 ;;
 18339                           
 18340                           
 18341                           ;psect for function ___flmul
 18342  1022                     ___flmul:	
 18343                           
 18344                           ;incstack = 0
 18345                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18346  1022  0020               	movlb	0	; select bank0
 18347  1023  0829               	movf	___flmul@b+3,w
 18348  1024  3980               	andlw	128
 18349  1025  00AE               	movwf	??___flmul
 18350  1026  082E               	movf	??___flmul,w
 18351  1027  00B3               	movwf	___flmul@sign
 18352  1028  3529               	lslf	___flmul@b+3,w
 18353  1029  00AE               	movwf	??___flmul
 18354  102A  082E               	movf	??___flmul,w
 18355  102B  00B9               	movwf	___flmul@bexp
 18356  102C  1BA8               	btfsc	___flmul@b+2,7
 18357  102D  1439               	bsf	___flmul@bexp,0
 18358  102E  0839               	movf	___flmul@bexp,w
 18359  102F  1903               	btfsc	3,2
 18360  1030  283E               	goto	l5525
 18361  1031  0A39               	incf	___flmul@bexp,w
 18362  1032  1D03               	btfss	3,2
 18363  1033  283C               	goto	l5523
 18364  1034  3000               	movlw	0
 18365  1035  00A9               	movwf	___flmul@b+3
 18366  1036  3000               	movlw	0
 18367  1037  00A8               	movwf	___flmul@b+2
 18368  1038  3000               	movlw	0
 18369  1039  00A7               	movwf	___flmul@b+1
 18370  103A  3000               	movlw	0
 18371  103B  00A6               	movwf	___flmul@b
 18372  103C                     l5523:	
 18373  103C  17A8               	bsf	___flmul@b+2,7
 18374  103D  2846               	goto	l5527
 18375  103E                     l5525:	
 18376  103E  3000               	movlw	0
 18377  103F  00A9               	movwf	___flmul@b+3
 18378  1040  3000               	movlw	0
 18379  1041  00A8               	movwf	___flmul@b+2
 18380  1042  3000               	movlw	0
 18381  1043  00A7               	movwf	___flmul@b+1
 18382  1044  3000               	movlw	0
 18383  1045  00A6               	movwf	___flmul@b
 18384  1046                     l5527:	
 18385  1046  082D               	movf	___flmul@a+3,w
 18386  1047  3980               	andlw	128
 18387  1048  00AE               	movwf	??___flmul
 18388  1049  082E               	movf	??___flmul,w
 18389  104A  06B3               	xorwf	___flmul@sign,f
 18390  104B  352D               	lslf	___flmul@a+3,w
 18391  104C  00AE               	movwf	??___flmul
 18392  104D  082E               	movf	??___flmul,w
 18393  104E  00B8               	movwf	___flmul@aexp
 18394  104F  1BAC               	btfsc	___flmul@a+2,7
 18395  1050  1438               	bsf	___flmul@aexp,0
 18396  1051  0838               	movf	___flmul@aexp,w
 18397  1052  1903               	btfsc	3,2
 18398  1053  2861               	goto	l5543
 18399  1054  0A38               	incf	___flmul@aexp,w
 18400  1055  1D03               	btfss	3,2
 18401  1056  285F               	goto	l5541
 18402  1057  3000               	movlw	0
 18403  1058  00AD               	movwf	___flmul@a+3
 18404  1059  3000               	movlw	0
 18405  105A  00AC               	movwf	___flmul@a+2
 18406  105B  3000               	movlw	0
 18407  105C  00AB               	movwf	___flmul@a+1
 18408  105D  3000               	movlw	0
 18409  105E  00AA               	movwf	___flmul@a
 18410  105F                     l5541:	
 18411  105F  17AC               	bsf	___flmul@a+2,7
 18412  1060  2869               	goto	l5545
 18413  1061                     l5543:	
 18414  1061  3000               	movlw	0
 18415  1062  00AD               	movwf	___flmul@a+3
 18416  1063  3000               	movlw	0
 18417  1064  00AC               	movwf	___flmul@a+2
 18418  1065  3000               	movlw	0
 18419  1066  00AB               	movwf	___flmul@a+1
 18420  1067  3000               	movlw	0
 18421  1068  00AA               	movwf	___flmul@a
 18422  1069                     l5545:	
 18423  1069  0838               	movf	___flmul@aexp,w
 18424  106A  1D03               	btfss	3,2
 18425  106B  0839               	movf	___flmul@bexp,w
 18426  106C  1D03               	btfss	3,2
 18427  106D  2877               	goto	l5553
 18428  106E  3000               	movlw	0
 18429  106F  00A9               	movwf	?___flmul+3
 18430  1070  3000               	movlw	0
 18431  1071  00A8               	movwf	?___flmul+2
 18432  1072  3000               	movlw	0
 18433  1073  00A7               	movwf	?___flmul+1
 18434  1074  3000               	movlw	0
 18435  1075  00A6               	movwf	?___flmul
 18436  1076  0008               	return
 18437  1077                     l5553:	
 18438  1077  0826               	movf	___flmul@b,w
 18439  1078  00AE               	movwf	??___flmul
 18440  1079  082E               	movf	??___flmul,w
 18441  107A  00F1               	movwf	__Umul8_16@multiplicand
 18442  107B  082C               	movf	___flmul@a+2,w
 18443  107C  3187  27E0  3190   	fcall	__Umul8_16
 18444  107F  0872               	movf	?__Umul8_16+1,w
 18445  1080  0020               	movlb	0	; select bank0
 18446  1081  00BF               	movwf	___flmul@temp+1
 18447  1082  0871               	movf	?__Umul8_16,w
 18448  1083  00BE               	movwf	___flmul@temp
 18449  1084  083E               	movf	___flmul@temp,w
 18450  1085  00AE               	movwf	??___flmul
 18451  1086  01AF               	clrf	??___flmul+1
 18452  1087  01B0               	clrf	??___flmul+2
 18453  1088  01B1               	clrf	??___flmul+3
 18454  1089  0831               	movf	??___flmul+3,w
 18455  108A  00B7               	movwf	___flmul@grs+3
 18456  108B  0830               	movf	??___flmul+2,w
 18457  108C  00B6               	movwf	___flmul@grs+2
 18458  108D  082F               	movf	??___flmul+1,w
 18459  108E  00B5               	movwf	___flmul@grs+1
 18460  108F  082E               	movf	??___flmul,w
 18461  1090  00B4               	movwf	___flmul@grs
 18462  1091  083F               	movf	___flmul@temp+1,w
 18463  1092  00AE               	movwf	??___flmul
 18464  1093  01AF               	clrf	??___flmul+1
 18465  1094  01B0               	clrf	??___flmul+2
 18466  1095  01B1               	clrf	??___flmul+3
 18467  1096  0831               	movf	??___flmul+3,w
 18468  1097  00BD               	movwf	___flmul@prod+3
 18469  1098  0830               	movf	??___flmul+2,w
 18470  1099  00BC               	movwf	___flmul@prod+2
 18471  109A  082F               	movf	??___flmul+1,w
 18472  109B  00BB               	movwf	___flmul@prod+1
 18473  109C  082E               	movf	??___flmul,w
 18474  109D  00BA               	movwf	___flmul@prod
 18475  109E  0827               	movf	___flmul@b+1,w
 18476  109F  00AE               	movwf	??___flmul
 18477  10A0  082E               	movf	??___flmul,w
 18478  10A1  00F1               	movwf	__Umul8_16@multiplicand
 18479  10A2  082B               	movf	___flmul@a+1,w
 18480  10A3  3187  27E0  3190   	fcall	__Umul8_16
 18481  10A6  0872               	movf	?__Umul8_16+1,w
 18482  10A7  0020               	movlb	0	; select bank0
 18483  10A8  00BF               	movwf	___flmul@temp+1
 18484  10A9  0871               	movf	?__Umul8_16,w
 18485  10AA  00BE               	movwf	___flmul@temp
 18486  10AB  083E               	movf	___flmul@temp,w
 18487  10AC  00AE               	movwf	??___flmul
 18488  10AD  01AF               	clrf	??___flmul+1
 18489  10AE  01B0               	clrf	??___flmul+2
 18490  10AF  01B1               	clrf	??___flmul+3
 18491  10B0  082E               	movf	??___flmul,w
 18492  10B1  07B4               	addwf	___flmul@grs,f
 18493  10B2  082F               	movf	??___flmul+1,w
 18494  10B3  3DB5               	addwfc	___flmul@grs+1,f
 18495  10B4  0830               	movf	??___flmul+2,w
 18496  10B5  3DB6               	addwfc	___flmul@grs+2,f
 18497  10B6  0831               	movf	??___flmul+3,w
 18498  10B7  3DB7               	addwfc	___flmul@grs+3,f
 18499  10B8  083F               	movf	___flmul@temp+1,w
 18500  10B9  00AE               	movwf	??___flmul
 18501  10BA  01AF               	clrf	??___flmul+1
 18502  10BB  01B0               	clrf	??___flmul+2
 18503  10BC  01B1               	clrf	??___flmul+3
 18504  10BD  082E               	movf	??___flmul,w
 18505  10BE  07BA               	addwf	___flmul@prod,f
 18506  10BF  082F               	movf	??___flmul+1,w
 18507  10C0  3DBB               	addwfc	___flmul@prod+1,f
 18508  10C1  0830               	movf	??___flmul+2,w
 18509  10C2  3DBC               	addwfc	___flmul@prod+2,f
 18510  10C3  0831               	movf	??___flmul+3,w
 18511  10C4  3DBD               	addwfc	___flmul@prod+3,f
 18512  10C5  0828               	movf	___flmul@b+2,w
 18513  10C6  00AE               	movwf	??___flmul
 18514  10C7  082E               	movf	??___flmul,w
 18515  10C8  00F1               	movwf	__Umul8_16@multiplicand
 18516  10C9  082A               	movf	___flmul@a,w
 18517  10CA  3187  27E0  3190   	fcall	__Umul8_16
 18518  10CD  0872               	movf	?__Umul8_16+1,w
 18519  10CE  0020               	movlb	0	; select bank0
 18520  10CF  00BF               	movwf	___flmul@temp+1
 18521  10D0  0871               	movf	?__Umul8_16,w
 18522  10D1  00BE               	movwf	___flmul@temp
 18523  10D2  083E               	movf	___flmul@temp,w
 18524  10D3  00AE               	movwf	??___flmul
 18525  10D4  01AF               	clrf	??___flmul+1
 18526  10D5  01B0               	clrf	??___flmul+2
 18527  10D6  01B1               	clrf	??___flmul+3
 18528  10D7  082E               	movf	??___flmul,w
 18529  10D8  07B4               	addwf	___flmul@grs,f
 18530  10D9  082F               	movf	??___flmul+1,w
 18531  10DA  3DB5               	addwfc	___flmul@grs+1,f
 18532  10DB  0830               	movf	??___flmul+2,w
 18533  10DC  3DB6               	addwfc	___flmul@grs+2,f
 18534  10DD  0831               	movf	??___flmul+3,w
 18535  10DE  3DB7               	addwfc	___flmul@grs+3,f
 18536  10DF  083F               	movf	___flmul@temp+1,w
 18537  10E0  00AE               	movwf	??___flmul
 18538  10E1  01AF               	clrf	??___flmul+1
 18539  10E2  01B0               	clrf	??___flmul+2
 18540  10E3  01B1               	clrf	??___flmul+3
 18541  10E4  082E               	movf	??___flmul,w
 18542  10E5  07BA               	addwf	___flmul@prod,f
 18543  10E6  082F               	movf	??___flmul+1,w
 18544  10E7  3DBB               	addwfc	___flmul@prod+1,f
 18545  10E8  0830               	movf	??___flmul+2,w
 18546  10E9  3DBC               	addwfc	___flmul@prod+2,f
 18547  10EA  0831               	movf	??___flmul+3,w
 18548  10EB  3DBD               	addwfc	___flmul@prod+3,f
 18549  10EC  3008               	movlw	8
 18550  10ED                     u6675:	
 18551  10ED  35B4               	lslf	___flmul@grs,f
 18552  10EE  0DB5               	rlf	___flmul@grs+1,f
 18553  10EF  0DB6               	rlf	___flmul@grs+2,f
 18554  10F0  0DB7               	rlf	___flmul@grs+3,f
 18555  10F1  0B89               	decfsz	9,f
 18556  10F2  28ED               	goto	u6675
 18557  10F3  0827               	movf	___flmul@b+1,w
 18558  10F4  00AE               	movwf	??___flmul
 18559  10F5  082E               	movf	??___flmul,w
 18560  10F6  00F1               	movwf	__Umul8_16@multiplicand
 18561  10F7  082A               	movf	___flmul@a,w
 18562  10F8  3187  27E0  3190   	fcall	__Umul8_16
 18563  10FB  0872               	movf	?__Umul8_16+1,w
 18564  10FC  0020               	movlb	0	; select bank0
 18565  10FD  00BF               	movwf	___flmul@temp+1
 18566  10FE  0871               	movf	?__Umul8_16,w
 18567  10FF  00BE               	movwf	___flmul@temp
 18568  1100  083E               	movf	___flmul@temp,w
 18569  1101  07B4               	addwf	___flmul@grs,f
 18570  1102  083F               	movf	___flmul@temp+1,w
 18571  1103  3DB5               	addwfc	___flmul@grs+1,f
 18572  1104  3000               	movlw	0
 18573  1105  3DB6               	addwfc	___flmul@grs+2,f
 18574  1106  3DB7               	addwfc	___flmul@grs+3,f
 18575  1107  0826               	movf	___flmul@b,w
 18576  1108  00AE               	movwf	??___flmul
 18577  1109  082E               	movf	??___flmul,w
 18578  110A  00F1               	movwf	__Umul8_16@multiplicand
 18579  110B  082B               	movf	___flmul@a+1,w
 18580  110C  3187  27E0  3190   	fcall	__Umul8_16
 18581  110F  0872               	movf	?__Umul8_16+1,w
 18582  1110  0020               	movlb	0	; select bank0
 18583  1111  00BF               	movwf	___flmul@temp+1
 18584  1112  0871               	movf	?__Umul8_16,w
 18585  1113  00BE               	movwf	___flmul@temp
 18586  1114  083E               	movf	___flmul@temp,w
 18587  1115  07B4               	addwf	___flmul@grs,f
 18588  1116  083F               	movf	___flmul@temp+1,w
 18589  1117  3DB5               	addwfc	___flmul@grs+1,f
 18590  1118  3000               	movlw	0
 18591  1119  3DB6               	addwfc	___flmul@grs+2,f
 18592  111A  3DB7               	addwfc	___flmul@grs+3,f
 18593  111B  3008               	movlw	8
 18594  111C                     u6685:	
 18595  111C  35B4               	lslf	___flmul@grs,f
 18596  111D  0DB5               	rlf	___flmul@grs+1,f
 18597  111E  0DB6               	rlf	___flmul@grs+2,f
 18598  111F  0DB7               	rlf	___flmul@grs+3,f
 18599  1120  0B89               	decfsz	9,f
 18600  1121  291C               	goto	u6685
 18601  1122  0826               	movf	___flmul@b,w
 18602  1123  00AE               	movwf	??___flmul
 18603  1124  082E               	movf	??___flmul,w
 18604  1125  00F1               	movwf	__Umul8_16@multiplicand
 18605  1126  082A               	movf	___flmul@a,w
 18606  1127  3187  27E0  3190   	fcall	__Umul8_16
 18607  112A  0872               	movf	?__Umul8_16+1,w
 18608  112B  0020               	movlb	0	; select bank0
 18609  112C  00BF               	movwf	___flmul@temp+1
 18610  112D  0871               	movf	?__Umul8_16,w
 18611  112E  00BE               	movwf	___flmul@temp
 18612  112F  083E               	movf	___flmul@temp,w
 18613  1130  07B4               	addwf	___flmul@grs,f
 18614  1131  083F               	movf	___flmul@temp+1,w
 18615  1132  3DB5               	addwfc	___flmul@grs+1,f
 18616  1133  3000               	movlw	0
 18617  1134  3DB6               	addwfc	___flmul@grs+2,f
 18618  1135  3DB7               	addwfc	___flmul@grs+3,f
 18619  1136  0827               	movf	___flmul@b+1,w
 18620  1137  00AE               	movwf	??___flmul
 18621  1138  082E               	movf	??___flmul,w
 18622  1139  00F1               	movwf	__Umul8_16@multiplicand
 18623  113A  082C               	movf	___flmul@a+2,w
 18624  113B  3187  27E0  3190   	fcall	__Umul8_16
 18625  113E  0872               	movf	?__Umul8_16+1,w
 18626  113F  0020               	movlb	0	; select bank0
 18627  1140  00BF               	movwf	___flmul@temp+1
 18628  1141  0871               	movf	?__Umul8_16,w
 18629  1142  00BE               	movwf	___flmul@temp
 18630  1143  083E               	movf	___flmul@temp,w
 18631  1144  07BA               	addwf	___flmul@prod,f
 18632  1145  083F               	movf	___flmul@temp+1,w
 18633  1146  3DBB               	addwfc	___flmul@prod+1,f
 18634  1147  3000               	movlw	0
 18635  1148  3DBC               	addwfc	___flmul@prod+2,f
 18636  1149  3DBD               	addwfc	___flmul@prod+3,f
 18637  114A  0828               	movf	___flmul@b+2,w
 18638  114B  00AE               	movwf	??___flmul
 18639  114C  082E               	movf	??___flmul,w
 18640  114D  00F1               	movwf	__Umul8_16@multiplicand
 18641  114E  082B               	movf	___flmul@a+1,w
 18642  114F  3187  27E0  3190   	fcall	__Umul8_16
 18643  1152  0872               	movf	?__Umul8_16+1,w
 18644  1153  0020               	movlb	0	; select bank0
 18645  1154  00BF               	movwf	___flmul@temp+1
 18646  1155  0871               	movf	?__Umul8_16,w
 18647  1156  00BE               	movwf	___flmul@temp
 18648  1157  083E               	movf	___flmul@temp,w
 18649  1158  07BA               	addwf	___flmul@prod,f
 18650  1159  083F               	movf	___flmul@temp+1,w
 18651  115A  3DBB               	addwfc	___flmul@prod+1,f
 18652  115B  3000               	movlw	0
 18653  115C  3DBC               	addwfc	___flmul@prod+2,f
 18654  115D  3DBD               	addwfc	___flmul@prod+3,f
 18655  115E  0828               	movf	___flmul@b+2,w
 18656  115F  00AE               	movwf	??___flmul
 18657  1160  082E               	movf	??___flmul,w
 18658  1161  00F1               	movwf	__Umul8_16@multiplicand
 18659  1162  082C               	movf	___flmul@a+2,w
 18660  1163  3187  27E0  3190   	fcall	__Umul8_16
 18661  1166  0872               	movf	?__Umul8_16+1,w
 18662  1167  0020               	movlb	0	; select bank0
 18663  1168  00BF               	movwf	___flmul@temp+1
 18664  1169  0871               	movf	?__Umul8_16,w
 18665  116A  00BE               	movwf	___flmul@temp
 18666  116B  083E               	movf	___flmul@temp,w
 18667  116C  00AE               	movwf	??___flmul
 18668  116D  083F               	movf	___flmul@temp+1,w
 18669  116E  00AF               	movwf	??___flmul+1
 18670  116F  01B0               	clrf	??___flmul+2
 18671  1170  01B1               	clrf	??___flmul+3
 18672  1171  3008               	movlw	8
 18673  1172                     u6695:	
 18674  1172  35AE               	lslf	??___flmul,f
 18675  1173  0DAF               	rlf	??___flmul+1,f
 18676  1174  0DB0               	rlf	??___flmul+2,f
 18677  1175  0DB1               	rlf	??___flmul+3,f
 18678  1176  0B89               	decfsz	9,f
 18679  1177  2972               	goto	u6695
 18680  1178  082E               	movf	??___flmul,w
 18681  1179  07BA               	addwf	___flmul@prod,f
 18682  117A  082F               	movf	??___flmul+1,w
 18683  117B  3DBB               	addwfc	___flmul@prod+1,f
 18684  117C  0830               	movf	??___flmul+2,w
 18685  117D  3DBC               	addwfc	___flmul@prod+2,f
 18686  117E  0831               	movf	??___flmul+3,w
 18687  117F  3DBD               	addwfc	___flmul@prod+3,f
 18688  1180  0834               	movf	___flmul@grs,w
 18689  1181  00AE               	movwf	??___flmul
 18690  1182  0835               	movf	___flmul@grs+1,w
 18691  1183  00AF               	movwf	??___flmul+1
 18692  1184  0836               	movf	___flmul@grs+2,w
 18693  1185  00B0               	movwf	??___flmul+2
 18694  1186  0837               	movf	___flmul@grs+3,w
 18695  1187  00B1               	movwf	??___flmul+3
 18696  1188  3018               	movlw	24
 18697  1189                     u6705:	
 18698  1189  36B1               	lsrf	??___flmul+3,f
 18699  118A  0CB0               	rrf	??___flmul+2,f
 18700  118B  0CAF               	rrf	??___flmul+1,f
 18701  118C  0CAE               	rrf	??___flmul,f
 18702  118D  0B89               	decfsz	9,f
 18703  118E  2989               	goto	u6705
 18704  118F  082E               	movf	??___flmul,w
 18705  1190  07BA               	addwf	___flmul@prod,f
 18706  1191  082F               	movf	??___flmul+1,w
 18707  1192  3DBB               	addwfc	___flmul@prod+1,f
 18708  1193  0830               	movf	??___flmul+2,w
 18709  1194  3DBC               	addwfc	___flmul@prod+2,f
 18710  1195  0831               	movf	??___flmul+3,w
 18711  1196  3DBD               	addwfc	___flmul@prod+3,f
 18712  1197  3008               	movlw	8
 18713  1198                     u6715:	
 18714  1198  35B4               	lslf	___flmul@grs,f
 18715  1199  0DB5               	rlf	___flmul@grs+1,f
 18716  119A  0DB6               	rlf	___flmul@grs+2,f
 18717  119B  0DB7               	rlf	___flmul@grs+3,f
 18718  119C  0B89               	decfsz	9,f
 18719  119D  2998               	goto	u6715
 18720  119E  0839               	movf	___flmul@bexp,w
 18721  119F  0738               	addwf	___flmul@aexp,w
 18722  11A0  00AE               	movwf	??___flmul
 18723  11A1  01AF               	clrf	??___flmul+1
 18724  11A2  0DAF               	rlf	??___flmul+1,f
 18725  11A3  082E               	movf	??___flmul,w
 18726  11A4  3E82               	addlw	130
 18727  11A5  00BE               	movwf	___flmul@temp
 18728  11A6  30FF               	movlw	255
 18729  11A7  3D2F               	addwfc	??___flmul+1,w
 18730  11A8  00BF               	movwf	___flmul@temp+1
 18731  11A9                     l5605:	
 18732  11A9  1BBC               	btfsc	___flmul@prod+2,7
 18733  11AA  29C0               	goto	l5607
 18734  11AB  3001               	movlw	1
 18735  11AC                     u6725:	
 18736  11AC  35BA               	lslf	___flmul@prod,f
 18737  11AD  0DBB               	rlf	___flmul@prod+1,f
 18738  11AE  0DBC               	rlf	___flmul@prod+2,f
 18739  11AF  0DBD               	rlf	___flmul@prod+3,f
 18740  11B0  0B89               	decfsz	9,f
 18741  11B1  29AC               	goto	u6725
 18742  11B2  1BB7               	btfsc	___flmul@grs+3,7
 18743  11B3  143A               	bsf	___flmul@prod,0
 18744  11B4  3001               	movlw	1
 18745  11B5                     u6745:	
 18746  11B5  35B4               	lslf	___flmul@grs,f
 18747  11B6  0DB5               	rlf	___flmul@grs+1,f
 18748  11B7  0DB6               	rlf	___flmul@grs+2,f
 18749  11B8  0DB7               	rlf	___flmul@grs+3,f
 18750  11B9  0B89               	decfsz	9,f
 18751  11BA  29B5               	goto	u6745
 18752  11BB  30FF               	movlw	255
 18753  11BC  07BE               	addwf	___flmul@temp,f
 18754  11BD  30FF               	movlw	255
 18755  11BE  3DBF               	addwfc	___flmul@temp+1,f
 18756  11BF  29A9               	goto	l5605
 18757  11C0                     l5607:	
 18758  11C0  01B8               	clrf	___flmul@aexp
 18759  11C1  1FB7               	btfss	___flmul@grs+3,7
 18760  11C2  29D9               	goto	l5617
 18761  11C3  30FF               	movlw	255
 18762  11C4  0534               	andwf	___flmul@grs,w
 18763  11C5  00AE               	movwf	??___flmul
 18764  11C6  30FF               	movlw	255
 18765  11C7  0535               	andwf	___flmul@grs+1,w
 18766  11C8  00AF               	movwf	??___flmul+1
 18767  11C9  30FF               	movlw	255
 18768  11CA  0536               	andwf	___flmul@grs+2,w
 18769  11CB  00B0               	movwf	??___flmul+2
 18770  11CC  307F               	movlw	127
 18771  11CD  0537               	andwf	___flmul@grs+3,w
 18772  11CE  00B1               	movwf	??___flmul+3
 18773  11CF  0831               	movf	??___flmul+3,w
 18774  11D0  0430               	iorwf	??___flmul+2,w
 18775  11D1  042F               	iorwf	??___flmul+1,w
 18776  11D2  042E               	iorwf	??___flmul,w
 18777  11D3  1903               	skipnz
 18778  11D4  183A               	btfsc	___flmul@prod,0
 18779  11D5  29D7               	goto	l5613
 18780  11D6  29D9               	goto	l5617
 18781  11D7                     l5613:	
 18782  11D7  01B8               	clrf	___flmul@aexp
 18783  11D8  0AB8               	incf	___flmul@aexp,f
 18784  11D9                     l5617:	
 18785  11D9  0838               	movf	___flmul@aexp,w
 18786  11DA  1903               	btfsc	3,2
 18787  11DB  2A02               	goto	l5627
 18788  11DC  3001               	movlw	1
 18789  11DD  07BA               	addwf	___flmul@prod,f
 18790  11DE  3000               	movlw	0
 18791  11DF  3DBB               	addwfc	___flmul@prod+1,f
 18792  11E0  3000               	movlw	0
 18793  11E1  3DBC               	addwfc	___flmul@prod+2,f
 18794  11E2  3000               	movlw	0
 18795  11E3  3DBD               	addwfc	___flmul@prod+3,f
 18796  11E4  1C3D               	btfss	___flmul@prod+3,0
 18797  11E5  2A02               	goto	l5627
 18798  11E6  083A               	movf	___flmul@prod,w
 18799  11E7  00AE               	movwf	??___flmul
 18800  11E8  083B               	movf	___flmul@prod+1,w
 18801  11E9  00AF               	movwf	??___flmul+1
 18802  11EA  083C               	movf	___flmul@prod+2,w
 18803  11EB  00B0               	movwf	??___flmul+2
 18804  11EC  083D               	movf	___flmul@prod+3,w
 18805  11ED  00B1               	movwf	??___flmul+3
 18806  11EE  3001               	movlw	1
 18807  11EF  00B2               	movwf	??___flmul+4
 18808  11F0                     u6815:	
 18809  11F0  37B1               	asrf	??___flmul+3,f
 18810  11F1  0CB0               	rrf	??___flmul+2,f
 18811  11F2  0CAF               	rrf	??___flmul+1,f
 18812  11F3  0CAE               	rrf	??___flmul,f
 18813  11F4  0BB2               	decfsz	??___flmul+4,f
 18814  11F5  29F0               	goto	u6815
 18815  11F6  0831               	movf	??___flmul+3,w
 18816  11F7  00BD               	movwf	___flmul@prod+3
 18817  11F8  0830               	movf	??___flmul+2,w
 18818  11F9  00BC               	movwf	___flmul@prod+2
 18819  11FA  082F               	movf	??___flmul+1,w
 18820  11FB  00BB               	movwf	___flmul@prod+1
 18821  11FC  082E               	movf	??___flmul,w
 18822  11FD  00BA               	movwf	___flmul@prod
 18823  11FE  3001               	movlw	1
 18824  11FF  07BE               	addwf	___flmul@temp,f
 18825  1200  3000               	movlw	0
 18826  1201  3DBF               	addwfc	___flmul@temp+1,f
 18827  1202                     l5627:	
 18828  1202  083F               	movf	___flmul@temp+1,w
 18829  1203  3A80               	xorlw	128
 18830  1204  00AE               	movwf	??___flmul
 18831  1205  3080               	movlw	128
 18832  1206  022E               	subwf	??___flmul,w
 18833  1207  1D03               	skipz
 18834  1208  2A0B               	goto	u6825
 18835  1209  30FF               	movlw	255
 18836  120A  023E               	subwf	___flmul@temp,w
 18837  120B                     u6825:	
 18838  120B  1C03               	skipc
 18839  120C  2A17               	goto	l5631
 18840  120D  307F               	movlw	127
 18841  120E  0020               	movlb	0	; select bank0
 18842  120F  00BD               	movwf	___flmul@prod+3
 18843  1210  3080               	movlw	128
 18844  1211  00BC               	movwf	___flmul@prod+2
 18845  1212  3000               	movlw	0
 18846  1213  00BB               	movwf	___flmul@prod+1
 18847  1214  3000               	movlw	0
 18848  1215  00BA               	movwf	___flmul@prod
 18849  1216  2A41               	goto	l1447
 18850  1217                     l5631:	
 18851  1217  0020               	movlb	0	; select bank0
 18852  1218  083F               	movf	___flmul@temp+1,w
 18853  1219  3A80               	xorlw	128
 18854  121A  00AE               	movwf	??___flmul
 18855  121B  3080               	movlw	128
 18856  121C  022E               	subwf	??___flmul,w
 18857  121D  1D03               	skipz
 18858  121E  2A21               	goto	u6835
 18859  121F  3001               	movlw	1
 18860  1220  023E               	subwf	___flmul@temp,w
 18861  1221                     u6835:	
 18862  1221  1803               	skipnc
 18863  1222  2A2E               	goto	l5637
 18864  1223  3000               	movlw	0
 18865  1224  0020               	movlb	0	; select bank0
 18866  1225  00BD               	movwf	___flmul@prod+3
 18867  1226  3000               	movlw	0
 18868  1227  00BC               	movwf	___flmul@prod+2
 18869  1228  3000               	movlw	0
 18870  1229  00BB               	movwf	___flmul@prod+1
 18871  122A  3000               	movlw	0
 18872  122B  00BA               	movwf	___flmul@prod
 18873  122C  01B3               	clrf	___flmul@sign
 18874  122D  2A41               	goto	l1447
 18875  122E                     l5637:	
 18876  122E  0020               	movlb	0	; select bank0
 18877  122F  083E               	movf	___flmul@temp,w
 18878  1230  00AE               	movwf	??___flmul
 18879  1231  082E               	movf	??___flmul,w
 18880  1232  00B9               	movwf	___flmul@bexp
 18881  1233  30FF               	movlw	255
 18882  1234  05BA               	andwf	___flmul@prod,f
 18883  1235  30FF               	movlw	255
 18884  1236  05BB               	andwf	___flmul@prod+1,f
 18885  1237  307F               	movlw	127
 18886  1238  05BC               	andwf	___flmul@prod+2,f
 18887  1239  3000               	movlw	0
 18888  123A  05BD               	andwf	___flmul@prod+3,f
 18889  123B  1839               	btfsc	___flmul@bexp,0
 18890  123C  17BC               	bsf	___flmul@prod+2,7
 18891  123D  3639               	lsrf	___flmul@bexp,w
 18892  123E  00AE               	movwf	??___flmul
 18893  123F  082E               	movf	??___flmul,w
 18894  1240  00BD               	movwf	___flmul@prod+3
 18895  1241                     l1447:	
 18896  1241  0833               	movf	___flmul@sign,w
 18897  1242  00AE               	movwf	??___flmul
 18898  1243  082E               	movf	??___flmul,w
 18899  1244  04BD               	iorwf	___flmul@prod+3,f
 18900  1245  083D               	movf	___flmul@prod+3,w
 18901  1246  00A9               	movwf	?___flmul+3
 18902  1247  083C               	movf	___flmul@prod+2,w
 18903  1248  00A8               	movwf	?___flmul+2
 18904  1249  083B               	movf	___flmul@prod+1,w
 18905  124A  00A7               	movwf	?___flmul+1
 18906  124B  083A               	movf	___flmul@prod,w
 18907  124C  00A6               	movwf	?___flmul
 18908  124D  0008               	return
 18909  124E                     __end_of___flmul:	
 18910                           
 18911                           	psect	text63
 18912  07E0                     __ptext63:	
 18913 ;; *************** function __Umul8_16 *****************
 18914 ;; Defined at:
 18915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18916 ;; Parameters:    Size  Location     Type
 18917 ;;  multiplier      1    wreg     unsigned char 
 18918 ;;  multiplicand    1    1[COMMON] unsigned char 
 18919 ;; Auto vars:     Size  Location     Type
 18920 ;;  multiplier      1    9[COMMON] unsigned char 
 18921 ;;  word_mpld       2    7[COMMON] unsigned int 
 18922 ;;  product         2    5[COMMON] unsigned int 
 18923 ;; Return value:  Size  Location     Type
 18924 ;;                  2    1[COMMON] unsigned int 
 18925 ;; Registers used:
 18926 ;;		wreg, status,2, status,0
 18927 ;; Tracked objects:
 18928 ;;		On entry : 0/0
 18929 ;;		On exit  : 0/0
 18930 ;;		Unchanged: 0/0
 18931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18933 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18935 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18936 ;;Total ram usage:        9 bytes
 18937 ;; Hardware stack levels used:    1
 18938 ;; Hardware stack levels required when called:    1
 18939 ;; This function calls:
 18940 ;;		Nothing
 18941 ;; This function is called by:
 18942 ;;		___flmul
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946                           
 18947                           ;psect for function __Umul8_16
 18948  07E0                     __Umul8_16:	
 18949                           
 18950                           ;incstack = 0
 18951                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18952                           ;__Umul8_16@multiplier stored from wreg
 18953  07E0  00F9               	movwf	__Umul8_16@multiplier
 18954  07E1  01F5               	clrf	__Umul8_16@product
 18955  07E2  01F6               	clrf	__Umul8_16@product+1
 18956  07E3  0871               	movf	__Umul8_16@multiplicand,w
 18957  07E4  00F3               	movwf	??__Umul8_16
 18958  07E5  01F4               	clrf	??__Umul8_16+1
 18959  07E6  0873               	movf	??__Umul8_16,w
 18960  07E7  00F7               	movwf	__Umul8_16@word_mpld
 18961  07E8  0874               	movf	??__Umul8_16+1,w
 18962  07E9  00F8               	movwf	__Umul8_16@word_mpld+1
 18963  07EA                     l5321:	
 18964  07EA  1C79               	btfss	__Umul8_16@multiplier,0
 18965  07EB  2FF0               	goto	l1640
 18966  07EC  0877               	movf	__Umul8_16@word_mpld,w
 18967  07ED  07F5               	addwf	__Umul8_16@product,f
 18968  07EE  0878               	movf	__Umul8_16@word_mpld+1,w
 18969  07EF  3DF6               	addwfc	__Umul8_16@product+1,f
 18970  07F0                     l1640:	
 18971  07F0  3001               	movlw	1
 18972  07F1                     u6215:	
 18973  07F1  35F7               	lslf	__Umul8_16@word_mpld,f
 18974  07F2  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18975  07F3  0B89               	decfsz	9,f
 18976  07F4  2FF1               	goto	u6215
 18977  07F5  1003               	clrc
 18978  07F6  0CF9               	rrf	__Umul8_16@multiplier,f
 18979  07F7  0879               	movf	__Umul8_16@multiplier,w
 18980  07F8  1D03               	btfss	3,2
 18981  07F9  2FEA               	goto	l5321
 18982  07FA  0876               	movf	__Umul8_16@product+1,w
 18983  07FB  00F2               	movwf	?__Umul8_16+1
 18984  07FC  0875               	movf	__Umul8_16@product,w
 18985  07FD  00F1               	movwf	?__Umul8_16
 18986  07FE  0008               	return
 18987  07FF                     __end_of__Umul8_16:	
 18988                           
 18989                           	psect	text64
 18990  1CE2                     __ptext64:	
 18991 ;; *************** function ___fldiv *****************
 18992 ;; Defined at:
 18993 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18994 ;; Parameters:    Size  Location     Type
 18995 ;;  a               4   32[BANK0 ] unsigned int 
 18996 ;;  b               4   36[BANK0 ] unsigned int 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  grs             4   52[BANK0 ] unsigned long 
 18999 ;;  rem             4   45[BANK0 ] unsigned long 
 19000 ;;  new_exp         2   50[BANK0 ] int 
 19001 ;;  aexp            1   57[BANK0 ] unsigned char 
 19002 ;;  bexp            1   56[BANK0 ] unsigned char 
 19003 ;;  sign            1   49[BANK0 ] unsigned char 
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  4   32[BANK0 ] unsigned char 
 19006 ;; Registers used:
 19007 ;;		wreg, status,2, status,0
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19014 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19015 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19016 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19017 ;;Total ram usage:       26 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:    1
 19020 ;; This function calls:
 19021 ;;		Nothing
 19022 ;; This function is called by:
 19023 ;;		_setShortCircuitProtection
 19024 ;;		_setOverCurrentDischargeProtection
 19025 ;;		_updateCurrent
 19026 ;;		_updateVoltages
 19027 ;;		_updateTemperatures
 19028 ;;		_calibrate_BATTSOC
 19029 ;;		_coulomb_counter
 19030 ;;		_logf
 19031 ;;		_AFE_getSetShortCircuitCurrent
 19032 ;;		_AFE_getOverCurrentDischargeCurrent
 19033 ;; This function uses a non-reentrant model
 19034 ;;
 19035                           
 19036                           
 19037                           ;psect for function ___fldiv
 19038  1CE2                     ___fldiv:	
 19039                           
 19040                           ;incstack = 0
 19041                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19042  1CE2  0020               	movlb	0	; select bank0
 19043  1CE3  0847               	movf	___fldiv@b+3,w
 19044  1CE4  3980               	andlw	128
 19045  1CE5  00C8               	movwf	??___fldiv
 19046  1CE6  0848               	movf	??___fldiv,w
 19047  1CE7  00D1               	movwf	___fldiv@sign
 19048  1CE8  3547               	lslf	___fldiv@b+3,w
 19049  1CE9  00C8               	movwf	??___fldiv
 19050  1CEA  0848               	movf	??___fldiv,w
 19051  1CEB  00D8               	movwf	___fldiv@bexp
 19052  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 19053  1CED  1458               	bsf	___fldiv@bexp,0
 19054  1CEE  0858               	movf	___fldiv@bexp,w
 19055  1CEF  1903               	btfsc	3,2
 19056  1CF0  2CFF               	goto	l5387
 19057  1CF1  0A58               	incf	___fldiv@bexp,w
 19058  1CF2  1D03               	btfss	3,2
 19059  1CF3  2CFC               	goto	l5383
 19060  1CF4  3000               	movlw	0
 19061  1CF5  00C7               	movwf	___fldiv@b+3
 19062  1CF6  3000               	movlw	0
 19063  1CF7  00C6               	movwf	___fldiv@b+2
 19064  1CF8  3000               	movlw	0
 19065  1CF9  00C5               	movwf	___fldiv@b+1
 19066  1CFA  3000               	movlw	0
 19067  1CFB  00C4               	movwf	___fldiv@b
 19068  1CFC                     l5383:	
 19069  1CFC  17C6               	bsf	___fldiv@b+2,7
 19070  1CFD  01C7               	clrf	___fldiv@b+3
 19071  1CFE  2D07               	goto	l5389
 19072  1CFF                     l5387:	
 19073  1CFF  3000               	movlw	0
 19074  1D00  00C7               	movwf	___fldiv@b+3
 19075  1D01  3000               	movlw	0
 19076  1D02  00C6               	movwf	___fldiv@b+2
 19077  1D03  3000               	movlw	0
 19078  1D04  00C5               	movwf	___fldiv@b+1
 19079  1D05  3000               	movlw	0
 19080  1D06  00C4               	movwf	___fldiv@b
 19081  1D07                     l5389:	
 19082  1D07  0843               	movf	___fldiv@a+3,w
 19083  1D08  3980               	andlw	128
 19084  1D09  00C8               	movwf	??___fldiv
 19085  1D0A  0848               	movf	??___fldiv,w
 19086  1D0B  06D1               	xorwf	___fldiv@sign,f
 19087  1D0C  3543               	lslf	___fldiv@a+3,w
 19088  1D0D  00C8               	movwf	??___fldiv
 19089  1D0E  0848               	movf	??___fldiv,w
 19090  1D0F  00D9               	movwf	___fldiv@aexp
 19091  1D10  1BC2               	btfsc	___fldiv@a+2,7
 19092  1D11  1459               	bsf	___fldiv@aexp,0
 19093  1D12  0859               	movf	___fldiv@aexp,w
 19094  1D13  1903               	btfsc	3,2
 19095  1D14  2D23               	goto	l5407
 19096  1D15  0A59               	incf	___fldiv@aexp,w
 19097  1D16  1D03               	btfss	3,2
 19098  1D17  2D20               	goto	l5403
 19099  1D18  3000               	movlw	0
 19100  1D19  00C3               	movwf	___fldiv@a+3
 19101  1D1A  3000               	movlw	0
 19102  1D1B  00C2               	movwf	___fldiv@a+2
 19103  1D1C  3000               	movlw	0
 19104  1D1D  00C1               	movwf	___fldiv@a+1
 19105  1D1E  3000               	movlw	0
 19106  1D1F  00C0               	movwf	___fldiv@a
 19107  1D20                     l5403:	
 19108  1D20  17C2               	bsf	___fldiv@a+2,7
 19109  1D21  01C3               	clrf	___fldiv@a+3
 19110  1D22  2D2B               	goto	l1395
 19111  1D23                     l5407:	
 19112  1D23  3000               	movlw	0
 19113  1D24  00C3               	movwf	___fldiv@a+3
 19114  1D25  3000               	movlw	0
 19115  1D26  00C2               	movwf	___fldiv@a+2
 19116  1D27  3000               	movlw	0
 19117  1D28  00C1               	movwf	___fldiv@a+1
 19118  1D29  3000               	movlw	0
 19119  1D2A  00C0               	movwf	___fldiv@a
 19120  1D2B                     l1395:	
 19121  1D2B  0843               	movf	___fldiv@a+3,w
 19122  1D2C  0442               	iorwf	___fldiv@a+2,w
 19123  1D2D  0441               	iorwf	___fldiv@a+1,w
 19124  1D2E  0440               	iorwf	___fldiv@a,w
 19125  1D2F  1D03               	skipz
 19126  1D30  2D4A               	goto	l5417
 19127  1D31  3000               	movlw	0
 19128  1D32  00C7               	movwf	___fldiv@b+3
 19129  1D33  3000               	movlw	0
 19130  1D34  00C6               	movwf	___fldiv@b+2
 19131  1D35  3000               	movlw	0
 19132  1D36  00C5               	movwf	___fldiv@b+1
 19133  1D37  3000               	movlw	0
 19134  1D38  00C4               	movwf	___fldiv@b
 19135  1D39  3080               	movlw	128
 19136  1D3A  04C6               	iorwf	___fldiv@b+2,f
 19137  1D3B  307F               	movlw	127
 19138  1D3C  04C7               	iorwf	___fldiv@b+3,f
 19139  1D3D                     L5:	
 19140  1D3D  0851               	movf	___fldiv@sign,w
 19141  1D3E  00C8               	movwf	??___fldiv
 19142  1D3F  0848               	movf	??___fldiv,w
 19143  1D40  04C7               	iorwf	___fldiv@b+3,f
 19144  1D41  0847               	movf	___fldiv@b+3,w
 19145  1D42  00C3               	movwf	?___fldiv+3
 19146  1D43  0846               	movf	___fldiv@b+2,w
 19147  1D44  00C2               	movwf	?___fldiv+2
 19148  1D45  0845               	movf	___fldiv@b+1,w
 19149  1D46  00C1               	movwf	?___fldiv+1
 19150  1D47  0844               	movf	___fldiv@b,w
 19151  1D48  00C0               	movwf	?___fldiv
 19152  1D49  0008               	return
 19153  1D4A                     l5417:	
 19154  1D4A  0858               	movf	___fldiv@bexp,w
 19155  1D4B  1D03               	btfss	3,2
 19156  1D4C  2D56               	goto	l5423
 19157  1D4D  3000               	movlw	0
 19158  1D4E  00C3               	movwf	?___fldiv+3
 19159  1D4F  3000               	movlw	0
 19160  1D50  00C2               	movwf	?___fldiv+2
 19161  1D51  3000               	movlw	0
 19162  1D52  00C1               	movwf	?___fldiv+1
 19163  1D53  3000               	movlw	0
 19164  1D54  00C0               	movwf	?___fldiv
 19165  1D55  0008               	return
 19166  1D56                     l5423:	
 19167  1D56  0858               	movf	___fldiv@bexp,w
 19168  1D57  00C8               	movwf	??___fldiv
 19169  1D58  01C9               	clrf	??___fldiv+1
 19170  1D59  0849               	movf	??___fldiv+1,w
 19171  1D5A  00CB               	movwf	??___fldiv+3
 19172  1D5B  0859               	movf	___fldiv@aexp,w
 19173  1D5C  0248               	subwf	??___fldiv,w
 19174  1D5D  00CA               	movwf	??___fldiv+2
 19175  1D5E  1C03               	skipc
 19176  1D5F  03CB               	decf	??___fldiv+3,f
 19177  1D60  084A               	movf	??___fldiv+2,w
 19178  1D61  3E7F               	addlw	127
 19179  1D62  00D2               	movwf	___fldiv@new_exp
 19180  1D63  3000               	movlw	0
 19181  1D64  3D4B               	addwfc	??___fldiv+3,w
 19182  1D65  00D3               	movwf	___fldiv@new_exp+1
 19183  1D66  0847               	movf	___fldiv@b+3,w
 19184  1D67  00D0               	movwf	___fldiv@rem+3
 19185  1D68  0846               	movf	___fldiv@b+2,w
 19186  1D69  00CF               	movwf	___fldiv@rem+2
 19187  1D6A  0845               	movf	___fldiv@b+1,w
 19188  1D6B  00CE               	movwf	___fldiv@rem+1
 19189  1D6C  0844               	movf	___fldiv@b,w
 19190  1D6D  00CD               	movwf	___fldiv@rem
 19191  1D6E  3000               	movlw	0
 19192  1D6F  00C7               	movwf	___fldiv@b+3
 19193  1D70  3000               	movlw	0
 19194  1D71  00C6               	movwf	___fldiv@b+2
 19195  1D72  3000               	movlw	0
 19196  1D73  00C5               	movwf	___fldiv@b+1
 19197  1D74  3000               	movlw	0
 19198  1D75  00C4               	movwf	___fldiv@b
 19199  1D76  3000               	movlw	0
 19200  1D77  00D7               	movwf	___fldiv@grs+3
 19201  1D78  3000               	movlw	0
 19202  1D79  00D6               	movwf	___fldiv@grs+2
 19203  1D7A  3000               	movlw	0
 19204  1D7B  00D5               	movwf	___fldiv@grs+1
 19205  1D7C  3000               	movlw	0
 19206  1D7D  00D4               	movwf	___fldiv@grs
 19207  1D7E  01D9               	clrf	___fldiv@aexp
 19208  1D7F                     l5451:	
 19209  1D7F  301A               	movlw	26
 19210  1D80  0259               	subwf	___fldiv@aexp,w
 19211  1D81  1803               	btfsc	3,0
 19212  1D82  2DBB               	goto	l5453
 19213  1D83  0859               	movf	___fldiv@aexp,w
 19214  1D84  1903               	btfsc	3,2
 19215  1D85  2D9D               	goto	l5443
 19216  1D86  3001               	movlw	1
 19217  1D87                     u6395:	
 19218  1D87  35CD               	lslf	___fldiv@rem,f
 19219  1D88  0DCE               	rlf	___fldiv@rem+1,f
 19220  1D89  0DCF               	rlf	___fldiv@rem+2,f
 19221  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 19222  1D8B  0B89               	decfsz	9,f
 19223  1D8C  2D87               	goto	u6395
 19224  1D8D  3001               	movlw	1
 19225  1D8E                     u6405:	
 19226  1D8E  35C4               	lslf	___fldiv@b,f
 19227  1D8F  0DC5               	rlf	___fldiv@b+1,f
 19228  1D90  0DC6               	rlf	___fldiv@b+2,f
 19229  1D91  0DC7               	rlf	___fldiv@b+3,f
 19230  1D92  0B89               	decfsz	9,f
 19231  1D93  2D8E               	goto	u6405
 19232  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 19233  1D95  1444               	bsf	___fldiv@b,0
 19234  1D96  3001               	movlw	1
 19235  1D97                     u6425:	
 19236  1D97  35D4               	lslf	___fldiv@grs,f
 19237  1D98  0DD5               	rlf	___fldiv@grs+1,f
 19238  1D99  0DD6               	rlf	___fldiv@grs+2,f
 19239  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 19240  1D9B  0B89               	decfsz	9,f
 19241  1D9C  2D97               	goto	u6425
 19242  1D9D                     l5443:	
 19243  1D9D  0843               	movf	___fldiv@a+3,w
 19244  1D9E  0250               	subwf	___fldiv@rem+3,w
 19245  1D9F  1D03               	skipz
 19246  1DA0  2DAB               	goto	u6435
 19247  1DA1  0842               	movf	___fldiv@a+2,w
 19248  1DA2  024F               	subwf	___fldiv@rem+2,w
 19249  1DA3  1D03               	skipz
 19250  1DA4  2DAB               	goto	u6435
 19251  1DA5  0841               	movf	___fldiv@a+1,w
 19252  1DA6  024E               	subwf	___fldiv@rem+1,w
 19253  1DA7  1D03               	skipz
 19254  1DA8  2DAB               	goto	u6435
 19255  1DA9  0840               	movf	___fldiv@a,w
 19256  1DAA  024D               	subwf	___fldiv@rem,w
 19257  1DAB                     u6435:	
 19258  1DAB  1C03               	skipc
 19259  1DAC  2DB6               	goto	l5449
 19260  1DAD  1757               	bsf	___fldiv@grs+3,6
 19261  1DAE  0840               	movf	___fldiv@a,w
 19262  1DAF  02CD               	subwf	___fldiv@rem,f
 19263  1DB0  0841               	movf	___fldiv@a+1,w
 19264  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 19265  1DB2  0842               	movf	___fldiv@a+2,w
 19266  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 19267  1DB4  0843               	movf	___fldiv@a+3,w
 19268  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 19269  1DB6                     l5449:	
 19270  1DB6  3001               	movlw	1
 19271  1DB7  00C8               	movwf	??___fldiv
 19272  1DB8  0848               	movf	??___fldiv,w
 19273  1DB9  07D9               	addwf	___fldiv@aexp,f
 19274  1DBA  2D7F               	goto	l5451
 19275  1DBB                     l5453:	
 19276  1DBB  0850               	movf	___fldiv@rem+3,w
 19277  1DBC  044F               	iorwf	___fldiv@rem+2,w
 19278  1DBD  044E               	iorwf	___fldiv@rem+1,w
 19279  1DBE  044D               	iorwf	___fldiv@rem,w
 19280  1DBF  1D03               	btfss	3,2
 19281  1DC0  1454               	bsf	___fldiv@grs,0
 19282  1DC1                     l5467:	
 19283  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 19284  1DC2  2DD8               	goto	l5469
 19285  1DC3  3001               	movlw	1
 19286  1DC4                     u6465:	
 19287  1DC4  35C4               	lslf	___fldiv@b,f
 19288  1DC5  0DC5               	rlf	___fldiv@b+1,f
 19289  1DC6  0DC6               	rlf	___fldiv@b+2,f
 19290  1DC7  0DC7               	rlf	___fldiv@b+3,f
 19291  1DC8  0B89               	decfsz	9,f
 19292  1DC9  2DC4               	goto	u6465
 19293  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 19294  1DCB  1444               	bsf	___fldiv@b,0
 19295  1DCC  3001               	movlw	1
 19296  1DCD                     u6485:	
 19297  1DCD  35D4               	lslf	___fldiv@grs,f
 19298  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 19299  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 19300  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 19301  1DD1  0B89               	decfsz	9,f
 19302  1DD2  2DCD               	goto	u6485
 19303  1DD3  30FF               	movlw	255
 19304  1DD4  07D2               	addwf	___fldiv@new_exp,f
 19305  1DD5  30FF               	movlw	255
 19306  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 19307  1DD7  2DC1               	goto	l5467
 19308  1DD8                     l5469:	
 19309  1DD8  01D9               	clrf	___fldiv@aexp
 19310  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 19311  1DDA  2DF1               	goto	l5479
 19312  1DDB  30FF               	movlw	255
 19313  1DDC  0554               	andwf	___fldiv@grs,w
 19314  1DDD  00C8               	movwf	??___fldiv
 19315  1DDE  30FF               	movlw	255
 19316  1DDF  0555               	andwf	___fldiv@grs+1,w
 19317  1DE0  00C9               	movwf	??___fldiv+1
 19318  1DE1  30FF               	movlw	255
 19319  1DE2  0556               	andwf	___fldiv@grs+2,w
 19320  1DE3  00CA               	movwf	??___fldiv+2
 19321  1DE4  307F               	movlw	127
 19322  1DE5  0557               	andwf	___fldiv@grs+3,w
 19323  1DE6  00CB               	movwf	??___fldiv+3
 19324  1DE7  084B               	movf	??___fldiv+3,w
 19325  1DE8  044A               	iorwf	??___fldiv+2,w
 19326  1DE9  0449               	iorwf	??___fldiv+1,w
 19327  1DEA  0448               	iorwf	??___fldiv,w
 19328  1DEB  1903               	skipnz
 19329  1DEC  1844               	btfsc	___fldiv@b,0
 19330  1DED  2DEF               	goto	l5475
 19331  1DEE  2DF1               	goto	l5479
 19332  1DEF                     l5475:	
 19333  1DEF  01D9               	clrf	___fldiv@aexp
 19334  1DF0  0AD9               	incf	___fldiv@aexp,f
 19335  1DF1                     l5479:	
 19336  1DF1  0859               	movf	___fldiv@aexp,w
 19337  1DF2  1903               	btfsc	3,2
 19338  1DF3  2E1A               	goto	l5489
 19339  1DF4  3001               	movlw	1
 19340  1DF5  07C4               	addwf	___fldiv@b,f
 19341  1DF6  3000               	movlw	0
 19342  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 19343  1DF8  3000               	movlw	0
 19344  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 19345  1DFA  3000               	movlw	0
 19346  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 19347  1DFC  1C47               	btfss	___fldiv@b+3,0
 19348  1DFD  2E1A               	goto	l5489
 19349  1DFE  0844               	movf	___fldiv@b,w
 19350  1DFF  00C8               	movwf	??___fldiv
 19351  1E00  0845               	movf	___fldiv@b+1,w
 19352  1E01  00C9               	movwf	??___fldiv+1
 19353  1E02  0846               	movf	___fldiv@b+2,w
 19354  1E03  00CA               	movwf	??___fldiv+2
 19355  1E04  0847               	movf	___fldiv@b+3,w
 19356  1E05  00CB               	movwf	??___fldiv+3
 19357  1E06  3001               	movlw	1
 19358  1E07  00CC               	movwf	??___fldiv+4
 19359  1E08                     u6555:	
 19360  1E08  37CB               	asrf	??___fldiv+3,f
 19361  1E09  0CCA               	rrf	??___fldiv+2,f
 19362  1E0A  0CC9               	rrf	??___fldiv+1,f
 19363  1E0B  0CC8               	rrf	??___fldiv,f
 19364  1E0C  0BCC               	decfsz	??___fldiv+4,f
 19365  1E0D  2E08               	goto	u6555
 19366  1E0E  084B               	movf	??___fldiv+3,w
 19367  1E0F  00C7               	movwf	___fldiv@b+3
 19368  1E10  084A               	movf	??___fldiv+2,w
 19369  1E11  00C6               	movwf	___fldiv@b+2
 19370  1E12  0849               	movf	??___fldiv+1,w
 19371  1E13  00C5               	movwf	___fldiv@b+1
 19372  1E14  0848               	movf	??___fldiv,w
 19373  1E15  00C4               	movwf	___fldiv@b
 19374  1E16  3001               	movlw	1
 19375  1E17  07D2               	addwf	___fldiv@new_exp,f
 19376  1E18  3000               	movlw	0
 19377  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 19378  1E1A                     l5489:	
 19379  1E1A  0853               	movf	___fldiv@new_exp+1,w
 19380  1E1B  3A80               	xorlw	128
 19381  1E1C  00C8               	movwf	??___fldiv
 19382  1E1D  3080               	movlw	128
 19383  1E1E  0248               	subwf	??___fldiv,w
 19384  1E1F  1D03               	skipz
 19385  1E20  2E23               	goto	u6565
 19386  1E21  30FF               	movlw	255
 19387  1E22  0252               	subwf	___fldiv@new_exp,w
 19388  1E23                     u6565:	
 19389  1E23  1C03               	skipc
 19390  1E24  2E32               	goto	l1416
 19391  1E25  30FF               	movlw	255
 19392  1E26  0020               	movlb	0	; select bank0
 19393  1E27  00D2               	movwf	___fldiv@new_exp
 19394  1E28  3000               	movlw	0
 19395  1E29  00D3               	movwf	___fldiv@new_exp+1
 19396  1E2A  3000               	movlw	0
 19397  1E2B  00C7               	movwf	___fldiv@b+3
 19398  1E2C  3000               	movlw	0
 19399  1E2D  00C6               	movwf	___fldiv@b+2
 19400  1E2E  3000               	movlw	0
 19401  1E2F  00C5               	movwf	___fldiv@b+1
 19402  1E30  3000               	movlw	0
 19403  1E31  00C4               	movwf	___fldiv@b
 19404  1E32                     l1416:	
 19405  1E32  0020               	movlb	0	; select bank0
 19406  1E33  0853               	movf	___fldiv@new_exp+1,w
 19407  1E34  3A80               	xorlw	128
 19408  1E35  00C8               	movwf	??___fldiv
 19409  1E36  3080               	movlw	128
 19410  1E37  0248               	subwf	??___fldiv,w
 19411  1E38  1D03               	skipz
 19412  1E39  2E3C               	goto	u6575
 19413  1E3A  3001               	movlw	1
 19414  1E3B  0252               	subwf	___fldiv@new_exp,w
 19415  1E3C                     u6575:	
 19416  1E3C  1803               	skipnc
 19417  1E3D  2E4A               	goto	l1417
 19418  1E3E  0020               	movlb	0	; select bank0
 19419  1E3F  01D2               	clrf	___fldiv@new_exp
 19420  1E40  01D3               	clrf	___fldiv@new_exp+1
 19421  1E41  3000               	movlw	0
 19422  1E42  00C7               	movwf	___fldiv@b+3
 19423  1E43  3000               	movlw	0
 19424  1E44  00C6               	movwf	___fldiv@b+2
 19425  1E45  3000               	movlw	0
 19426  1E46  00C5               	movwf	___fldiv@b+1
 19427  1E47  3000               	movlw	0
 19428  1E48  00C4               	movwf	___fldiv@b
 19429  1E49  01D1               	clrf	___fldiv@sign
 19430  1E4A                     l1417:	
 19431  1E4A  0020               	movlb	0	; select bank0
 19432  1E4B  0852               	movf	___fldiv@new_exp,w
 19433  1E4C  00C8               	movwf	??___fldiv
 19434  1E4D  0848               	movf	??___fldiv,w
 19435  1E4E  00D8               	movwf	___fldiv@bexp
 19436  1E4F  1C58               	btfss	___fldiv@bexp,0
 19437  1E50  2E53               	goto	l5503
 19438  1E51  17C6               	bsf	___fldiv@b+2,7
 19439  1E52  2E57               	goto	l1419
 19440  1E53                     l5503:	
 19441  1E53  307F               	movlw	127
 19442  1E54  00C8               	movwf	??___fldiv
 19443  1E55  0848               	movf	??___fldiv,w
 19444  1E56  05C6               	andwf	___fldiv@b+2,f
 19445  1E57                     l1419:	
 19446  1E57  3658               	lsrf	___fldiv@bexp,w
 19447  1E58  00C8               	movwf	??___fldiv
 19448  1E59  0848               	movf	??___fldiv,w
 19449  1E5A  00C7               	movwf	___fldiv@b+3
 19450  1E5B  2D3D               	goto	L5
 19451  1E5C                     __end_of___fldiv:	
 19452                           
 19453                           	psect	text65
 19454  2844                     __ptext65:	
 19455 ;; *************** function _AFE_Status *****************
 19456 ;; Defined at:
 19457 ;;		line 45 in file "algorithms.c"
 19458 ;; Parameters:    Size  Location     Type
 19459 ;;		None
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;  error_flag      2    2[BANK0 ] int 
 19462 ;;  sys_stat        1    4[BANK0 ] struct regSYS_STAT
 19463 ;; Return value:  Size  Location     Type
 19464 ;;                  2    0[BANK0 ] int 
 19465 ;; Registers used:
 19466 ;;		wreg, status,2, status,0, pclath, cstack
 19467 ;; Tracked objects:
 19468 ;;		On entry : 0/0
 19469 ;;		On exit  : 0/0
 19470 ;;		Unchanged: 0/0
 19471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19475 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19476 ;;Total ram usage:        6 bytes
 19477 ;; Hardware stack levels used:    1
 19478 ;; Hardware stack levels required when called:    3
 19479 ;; This function calls:
 19480 ;;		_readRegister
 19481 ;; This function is called by:
 19482 ;;		_AFE_UPDATE
 19483 ;; This function uses a non-reentrant model
 19484 ;;
 19485                           
 19486                           
 19487                           ;psect for function _AFE_Status
 19488  2844                     _AFE_Status:	
 19489                           
 19490                           ;algorithms.c: 47:     regSYS_STAT_t sys_stat;;algorithms.c: 48:     int error_flag = 0;
 19491                           
 19492                           ;incstack = 0
 19493                           ; Regs used in _AFE_Status: [wreg+status,2+status,0+pclath+cstack]
 19494  2844  0020               	movlb	0	; select bank0
 19495  2845  01A2               	clrf	AFE_Status@error_flag
 19496  2846  01A3               	clrf	AFE_Status@error_flag+1
 19497                           
 19498                           ;algorithms.c: 49:     sys_stat.regByte = readRegister(0x18, 0x00);
 19499  2847  3018               	movlw	24
 19500  2848  00F5               	movwf	readRegister@slaveAddress
 19501  2849  3000               	movlw	0
 19502  284A  00F6               	movwf	readRegister@slaveAddress+1
 19503  284B  3000               	movlw	0
 19504  284C  00F7               	movwf	readRegister@regAddress
 19505  284D  00F8               	movwf	readRegister@regAddress+1
 19506  284E  31B5  2587  31A8   	fcall	_readRegister
 19507  2851  0875               	movf	?_readRegister,w
 19508  2852  00FB               	movwf	??_AFE_Status
 19509  2853  087B               	movf	??_AFE_Status,w
 19510  2854  0020               	movlb	0	; select bank0
 19511  2855  00A4               	movwf	AFE_Status@sys_stat
 19512                           
 19513                           ;algorithms.c: 53:     if (sys_stat.regByte & 0x20){
 19514  2856  1EA4               	btfss	AFE_Status@sys_stat,5
 19515  2857  2862               	goto	l7689
 19516                           
 19517                           ;algorithms.c: 54:         XR_error = 1;
 19518  2858  3001               	movlw	1
 19519  2859  0023               	movlb	3	; select bank3
 19520  285A  00DC               	movwf	_XR_error^(0+384)
 19521  285B  3000               	movlw	0
 19522  285C  00DD               	movwf	(_XR_error^(0+384)+1)
 19523                           
 19524                           ;algorithms.c: 55:         error_flag=1;
 19525  285D  3001               	movlw	1
 19526  285E  0020               	movlb	0	; select bank0
 19527  285F  00A2               	movwf	AFE_Status@error_flag
 19528  2860  3000               	movlw	0
 19529  2861  00A3               	movwf	AFE_Status@error_flag+1
 19530  2862                     l7689:	
 19531                           
 19532                           ;algorithms.c: 58:     if(sys_stat.regByte & 0x10){
 19533  2862  1E24               	btfss	AFE_Status@sys_stat,4
 19534  2863  286E               	goto	l7693
 19535                           
 19536                           ;algorithms.c: 59:         alert_error = 1;
 19537  2864  3001               	movlw	1
 19538  2865  0023               	movlb	3	; select bank3
 19539  2866  00DA               	movwf	_alert_error^(0+384)
 19540  2867  3000               	movlw	0
 19541  2868  00DB               	movwf	(_alert_error^(0+384)+1)
 19542                           
 19543                           ;algorithms.c: 60:         error_flag=1;
 19544  2869  3001               	movlw	1
 19545  286A  0020               	movlb	0	; select bank0
 19546  286B  00A2               	movwf	AFE_Status@error_flag
 19547  286C  3000               	movlw	0
 19548  286D  00A3               	movwf	AFE_Status@error_flag+1
 19549  286E                     l7693:	
 19550                           
 19551                           ;algorithms.c: 63:     if(sys_stat.regByte & 0x08 ){
 19552  286E  1DA4               	btfss	AFE_Status@sys_stat,3
 19553  286F  287A               	goto	l7697
 19554                           
 19555                           ;algorithms.c: 64:         uv_error = 1;
 19556  2870  3001               	movlw	1
 19557  2871  0023               	movlb	3	; select bank3
 19558  2872  00D8               	movwf	_uv_error^(0+384)
 19559  2873  3000               	movlw	0
 19560  2874  00D9               	movwf	(_uv_error^(0+384)+1)
 19561                           
 19562                           ;algorithms.c: 65:         error_flag=1;
 19563  2875  3001               	movlw	1
 19564  2876  0020               	movlb	0	; select bank0
 19565  2877  00A2               	movwf	AFE_Status@error_flag
 19566  2878  3000               	movlw	0
 19567  2879  00A3               	movwf	AFE_Status@error_flag+1
 19568  287A                     l7697:	
 19569                           
 19570                           ;algorithms.c: 68:     if(sys_stat.regByte & 0x04 ){
 19571  287A  1D24               	btfss	AFE_Status@sys_stat,2
 19572  287B  2886               	goto	l7701
 19573                           
 19574                           ;algorithms.c: 69:         ov_error = 1;
 19575  287C  3001               	movlw	1
 19576  287D  0023               	movlb	3	; select bank3
 19577  287E  00D6               	movwf	_ov_error^(0+384)
 19578  287F  3000               	movlw	0
 19579  2880  00D7               	movwf	(_ov_error^(0+384)+1)
 19580                           
 19581                           ;algorithms.c: 70:         error_flag=1;
 19582  2881  3001               	movlw	1
 19583  2882  0020               	movlb	0	; select bank0
 19584  2883  00A2               	movwf	AFE_Status@error_flag
 19585  2884  3000               	movlw	0
 19586  2885  00A3               	movwf	AFE_Status@error_flag+1
 19587  2886                     l7701:	
 19588                           
 19589                           ;algorithms.c: 73:    if(sys_stat.regByte & 0x02 ){
 19590  2886  1CA4               	btfss	AFE_Status@sys_stat,1
 19591  2887  2892               	goto	l7705
 19592                           
 19593                           ;algorithms.c: 74:         scd_error = 1;
 19594  2888  3001               	movlw	1
 19595  2889  0023               	movlb	3	; select bank3
 19596  288A  00D4               	movwf	_scd_error^(0+384)
 19597  288B  3000               	movlw	0
 19598  288C  00D5               	movwf	(_scd_error^(0+384)+1)
 19599                           
 19600                           ;algorithms.c: 75:         error_flag=1;
 19601  288D  3001               	movlw	1
 19602  288E  0020               	movlb	0	; select bank0
 19603  288F  00A2               	movwf	AFE_Status@error_flag
 19604  2890  3000               	movlw	0
 19605  2891  00A3               	movwf	AFE_Status@error_flag+1
 19606  2892                     l7705:	
 19607                           
 19608                           ;algorithms.c: 78:    if(sys_stat.regByte & 0x01){
 19609  2892  1C24               	btfss	AFE_Status@sys_stat,0
 19610  2893  289E               	goto	l721
 19611                           
 19612                           ;algorithms.c: 79:         ocd_error = 1;
 19613  2894  3001               	movlw	1
 19614  2895  0023               	movlb	3	; select bank3
 19615  2896  00D2               	movwf	_ocd_error^(0+384)
 19616  2897  3000               	movlw	0
 19617  2898  00D3               	movwf	(_ocd_error^(0+384)+1)
 19618                           
 19619                           ;algorithms.c: 80:         error_flag=1;
 19620  2899  3001               	movlw	1
 19621  289A  0020               	movlb	0	; select bank0
 19622  289B  00A2               	movwf	AFE_Status@error_flag
 19623  289C  3000               	movlw	0
 19624  289D  00A3               	movwf	AFE_Status@error_flag+1
 19625  289E                     l721:	
 19626                           ;algorithms.c: 81:     }
 19627                           
 19628                           
 19629                           ;algorithms.c: 83:     return error_flag;
 19630  289E  0823               	movf	AFE_Status@error_flag+1,w
 19631  289F  00A1               	movwf	?_AFE_Status+1
 19632  28A0  0822               	movf	AFE_Status@error_flag,w
 19633  28A1  00A0               	movwf	?_AFE_Status
 19634  28A2  0008               	return
 19635  28A3                     __end_of_AFE_Status:	
 19636                           
 19637                           	psect	text66
 19638  343D                     __ptext66:	
 19639 ;; *************** function _AFE_FET_Status *****************
 19640 ;; Defined at:
 19641 ;;		line 86 in file "algorithms.c"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;		None
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;  sys_ctrl2       1    0[BANK0 ] unsigned char 
 19646 ;; Return value:  Size  Location     Type
 19647 ;;                  1    wreg      void 
 19648 ;; Registers used:
 19649 ;;		wreg, status,2, status,0, pclath, cstack
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19658 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19659 ;;Total ram usage:        2 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; Hardware stack levels required when called:    3
 19662 ;; This function calls:
 19663 ;;		_readRegister
 19664 ;; This function is called by:
 19665 ;;		_AFE_UPDATE
 19666 ;; This function uses a non-reentrant model
 19667 ;;
 19668                           
 19669                           
 19670                           ;psect for function _AFE_FET_Status
 19671  343D                     _AFE_FET_Status:	
 19672                           
 19673                           ;algorithms.c: 87:     uint8_t sys_ctrl2;;algorithms.c: 88:     sys_ctrl2 = readRegister
      +                          (0x18, 0x05);
 19674                           
 19675                           ;incstack = 0
 19676                           ; Regs used in _AFE_FET_Status: [wreg+status,2+status,0+pclath+cstack]
 19677  343D  3018               	movlw	24
 19678  343E  00F5               	movwf	readRegister@slaveAddress
 19679  343F  3000               	movlw	0
 19680  3440  00F6               	movwf	readRegister@slaveAddress+1
 19681  3441  3005               	movlw	5
 19682  3442  00F7               	movwf	readRegister@regAddress
 19683  3443  3000               	movlw	0
 19684  3444  00F8               	movwf	readRegister@regAddress+1
 19685  3445  31B5  2587  31B4   	fcall	_readRegister
 19686  3448  0875               	movf	?_readRegister,w
 19687  3449  00FB               	movwf	??_AFE_FET_Status
 19688  344A  087B               	movf	??_AFE_FET_Status,w
 19689  344B  0020               	movlb	0	; select bank0
 19690  344C  00A0               	movwf	AFE_FET_Status@sys_ctrl2
 19691                           
 19692                           ;algorithms.c: 89:     chg_fet_enable = 0;
 19693  344D  0023               	movlb	3	; select bank3
 19694  344E  01D0               	clrf	_chg_fet_enable^(0+384)
 19695  344F  01D1               	clrf	(_chg_fet_enable+1)^(0+384)
 19696                           
 19697                           ;algorithms.c: 90:     dschg_fet_enable = 0;
 19698  3450  01CE               	clrf	_dschg_fet_enable^(0+384)
 19699  3451  01CF               	clrf	(_dschg_fet_enable+1)^(0+384)
 19700                           
 19701                           ;algorithms.c: 92:    if(sys_ctrl2 & 0x01){
 19702  3452  0020               	movlb	0	; select bank0
 19703  3453  1C20               	btfss	AFE_FET_Status@sys_ctrl2,0
 19704  3454  2C5A               	goto	l7677
 19705                           
 19706                           ;algorithms.c: 93:        chg_fet_enable = 1;
 19707  3455  3001               	movlw	1
 19708  3456  0023               	movlb	3	; select bank3
 19709  3457  00D0               	movwf	_chg_fet_enable^(0+384)
 19710  3458  3000               	movlw	0
 19711  3459  00D1               	movwf	(_chg_fet_enable^(0+384)+1)
 19712  345A                     l7677:	
 19713                           
 19714                           ;algorithms.c: 96:    if(sys_ctrl2 & 0x02){
 19715  345A  0020               	movlb	0	; select bank0
 19716  345B  1CA0               	btfss	AFE_FET_Status@sys_ctrl2,1
 19717  345C  0008               	return
 19718                           
 19719                           ;algorithms.c: 97:        dschg_fet_enable = 1;
 19720  345D  3001               	movlw	1
 19721  345E  0023               	movlb	3	; select bank3
 19722  345F  00CE               	movwf	_dschg_fet_enable^(0+384)
 19723  3460  3000               	movlw	0
 19724  3461  00CF               	movwf	(_dschg_fet_enable^(0+384)+1)
 19725  3462  0008               	return
 19726  3463                     __end_of_AFE_FET_Status:	
 19727                           
 19728                           	psect	text67
 19729  3587                     __ptext67:	
 19730 ;; *************** function _readRegister *****************
 19731 ;; Defined at:
 19732 ;;		line 115 in file "I2C.c"
 19733 ;; Parameters:    Size  Location     Type
 19734 ;;  slaveAddress    2    5[COMMON] int 
 19735 ;;  regAddress      2    7[COMMON] int 
 19736 ;; Auto vars:     Size  Location     Type
 19737 ;;  recievedData    2    9[COMMON] int 
 19738 ;; Return value:  Size  Location     Type
 19739 ;;                  2    5[COMMON] int 
 19740 ;; Registers used:
 19741 ;;		wreg, status,2, status,0, pclath, cstack
 19742 ;; Tracked objects:
 19743 ;;		On entry : 0/0
 19744 ;;		On exit  : 0/0
 19745 ;;		Unchanged: 0/0
 19746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19750 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19751 ;;Total ram usage:        6 bytes
 19752 ;; Hardware stack levels used:    1
 19753 ;; Hardware stack levels required when called:    2
 19754 ;; This function calls:
 19755 ;;		_read_I2C_data
 19756 ;;		_send_I2C_NACK
 19757 ;;		_send_I2C_controlByte
 19758 ;;		_send_I2C_data
 19759 ;;		_send_I2C_startBit
 19760 ;;		_send_I2C_stopBit
 19761 ;; This function is called by:
 19762 ;;		_beginAFEcommunication
 19763 ;;		_setCellUndervoltageProtection
 19764 ;;		_setCellOvervoltageProtection
 19765 ;;		_updateCurrent
 19766 ;;		_updateVoltages
 19767 ;;		_updateTemperatures
 19768 ;;		_enableDischarging
 19769 ;;		_enableCharging
 19770 ;;		_AFE_Status
 19771 ;;		_AFE_FET_Status
 19772 ;;		_printotAFERegisters
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           
 19777                           ;psect for function _readRegister
 19778  3587                     _readRegister:	
 19779                           
 19780                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 19781                           
 19782                           ;incstack = 0
 19783                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 19784  3587  31B2  223F  31B5   	fcall	_send_I2C_startBit
 19785                           
 19786                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 19787  358A  0876               	movf	readRegister@slaveAddress+1,w
 19788  358B  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19789  358C  0875               	movf	readRegister@slaveAddress,w
 19790  358D  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19791  358E  3000               	movlw	0
 19792  358F  00F3               	movwf	send_I2C_controlByte@RW_bit
 19793  3590  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19794  3591  31B2  2269  31B5   	fcall	_send_I2C_controlByte
 19795                           
 19796                           ;I2C.c: 119:     send_I2C_data(regAddress);
 19797  3594  0878               	movf	readRegister@regAddress+1,w
 19798  3595  00F2               	movwf	send_I2C_data@databyte+1
 19799  3596  0877               	movf	readRegister@regAddress,w
 19800  3597  00F1               	movwf	send_I2C_data@databyte
 19801  3598  3198  2000  31B5   	fcall	_send_I2C_data
 19802                           
 19803                           ;I2C.c: 120:     send_I2C_stopBit();
 19804  359B  31B2  2247  31B5   	fcall	_send_I2C_stopBit
 19805                           
 19806                           ;I2C.c: 121:     send_I2C_startBit();
 19807  359E  31B2  223F  31B5   	fcall	_send_I2C_startBit
 19808                           
 19809                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 19810  35A1  0876               	movf	readRegister@slaveAddress+1,w
 19811  35A2  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19812  35A3  0875               	movf	readRegister@slaveAddress,w
 19813  35A4  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19814  35A5  3001               	movlw	1
 19815  35A6  00F3               	movwf	send_I2C_controlByte@RW_bit
 19816  35A7  3000               	movlw	0
 19817  35A8  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19818  35A9  31B2  2269  31B5   	fcall	_send_I2C_controlByte
 19819                           
 19820                           ;I2C.c: 123:     recievedData = read_I2C_data();
 19821  35AC  31A0  2002  31B5   	fcall	_read_I2C_data
 19822  35AF  0872               	movf	?_read_I2C_data+1,w
 19823  35B0  00FA               	movwf	readRegister@recievedData+1
 19824  35B1  0871               	movf	?_read_I2C_data,w
 19825  35B2  00F9               	movwf	readRegister@recievedData
 19826                           
 19827                           ;I2C.c: 124:     send_I2C_NACK();
 19828  35B3  31B2  2260  31B5   	fcall	_send_I2C_NACK
 19829                           
 19830                           ;I2C.c: 125:     send_I2C_stopBit();
 19831  35B6  31B2  2247         	fcall	_send_I2C_stopBit
 19832                           
 19833                           ;I2C.c: 126:     return recievedData;
 19834  35B8  087A               	movf	readRegister@recievedData+1,w
 19835  35B9  00F6               	movwf	?_readRegister+1
 19836  35BA  0879               	movf	readRegister@recievedData,w
 19837  35BB  00F5               	movwf	?_readRegister
 19838  35BC  0008               	return
 19839  35BD                     __end_of_readRegister:	
 19840                           
 19841                           	psect	text68
 19842  3247                     __ptext68:	
 19843 ;; *************** function _send_I2C_stopBit *****************
 19844 ;; Defined at:
 19845 ;;		line 78 in file "I2C.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;		None
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;		None
 19850 ;; Return value:  Size  Location     Type
 19851 ;;                  1    wreg      void 
 19852 ;; Registers used:
 19853 ;;		None
 19854 ;; Tracked objects:
 19855 ;;		On entry : 0/0
 19856 ;;		On exit  : 0/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19863 ;;Total ram usage:        0 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:    1
 19866 ;; This function calls:
 19867 ;;		Nothing
 19868 ;; This function is called by:
 19869 ;;		_I2C_writeRegister
 19870 ;;		_readRegister
 19871 ;; This function uses a non-reentrant model
 19872 ;;
 19873                           
 19874                           
 19875                           ;psect for function _send_I2C_stopBit
 19876  3247                     _send_I2C_stopBit:	
 19877                           
 19878                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19879                           
 19880                           ;incstack = 0
 19881                           ; Regs used in _send_I2C_stopBit: []
 19882  3247  0020               	movlb	0	; select bank0
 19883  3248  1191               	bcf	17,3	;volatile
 19884                           
 19885                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19886  3249  0024               	movlb	4	; select bank4
 19887  324A  1516               	bsf	22,2	;volatile
 19888  324B                     l353:	
 19889                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19890                           
 19891  324B  0020               	movlb	0	; select bank0
 19892  324C  1991               	btfsc	17,3	;volatile
 19893  324D  0008               	return
 19894  324E  2A4B               	goto	l353
 19895  324F                     __end_of_send_I2C_stopBit:	
 19896                           
 19897                           	psect	text69
 19898  323F                     __ptext69:	
 19899 ;; *************** function _send_I2C_startBit *****************
 19900 ;; Defined at:
 19901 ;;		line 65 in file "I2C.c"
 19902 ;; Parameters:    Size  Location     Type
 19903 ;;		None
 19904 ;; Auto vars:     Size  Location     Type
 19905 ;;		None
 19906 ;; Return value:  Size  Location     Type
 19907 ;;                  1    wreg      void 
 19908 ;; Registers used:
 19909 ;;		None
 19910 ;; Tracked objects:
 19911 ;;		On entry : 0/0
 19912 ;;		On exit  : 0/0
 19913 ;;		Unchanged: 0/0
 19914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19919 ;;Total ram usage:        0 bytes
 19920 ;; Hardware stack levels used:    1
 19921 ;; Hardware stack levels required when called:    1
 19922 ;; This function calls:
 19923 ;;		Nothing
 19924 ;; This function is called by:
 19925 ;;		_I2C_writeRegister
 19926 ;;		_readRegister
 19927 ;; This function uses a non-reentrant model
 19928 ;;
 19929                           
 19930                           
 19931                           ;psect for function _send_I2C_startBit
 19932  323F                     _send_I2C_startBit:	
 19933                           
 19934                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19935                           
 19936                           ;incstack = 0
 19937                           ; Regs used in _send_I2C_startBit: []
 19938  323F  0020               	movlb	0	; select bank0
 19939  3240  1191               	bcf	17,3	;volatile
 19940                           
 19941                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19942  3241  0024               	movlb	4	; select bank4
 19943  3242  1416               	bsf	22,0	;volatile
 19944  3243                     l341:	
 19945                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19946                           
 19947  3243  0020               	movlb	0	; select bank0
 19948  3244  1991               	btfsc	17,3	;volatile
 19949  3245  0008               	return
 19950  3246  2A43               	goto	l341
 19951  3247                     __end_of_send_I2C_startBit:	
 19952                           
 19953                           	psect	text70
 19954  1800                     __ptext70:	
 19955 ;; *************** function _send_I2C_data *****************
 19956 ;; Defined at:
 19957 ;;		line 33 in file "I2C.c"
 19958 ;; Parameters:    Size  Location     Type
 19959 ;;  databyte        2    1[COMMON] unsigned int 
 19960 ;; Auto vars:     Size  Location     Type
 19961 ;;		None
 19962 ;; Return value:  Size  Location     Type
 19963 ;;                  1    wreg      void 
 19964 ;; Registers used:
 19965 ;;		wreg
 19966 ;; Tracked objects:
 19967 ;;		On entry : 0/0
 19968 ;;		On exit  : 0/0
 19969 ;;		Unchanged: 0/0
 19970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19975 ;;Total ram usage:        2 bytes
 19976 ;; Hardware stack levels used:    1
 19977 ;; Hardware stack levels required when called:    1
 19978 ;; This function calls:
 19979 ;;		Nothing
 19980 ;; This function is called by:
 19981 ;;		_I2C_writeRegister
 19982 ;;		_readRegister
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           
 19987                           ;psect for function _send_I2C_data
 19988  1800                     _send_I2C_data:	
 19989                           
 19990                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19991                           
 19992                           ;incstack = 0
 19993                           ; Regs used in _send_I2C_data: [wreg]
 19994  1800  0020               	movlb	0	; select bank0
 19995  1801  1191               	bcf	17,3	;volatile
 19996                           
 19997                           ;I2C.c: 35:     SSPBUF = databyte;
 19998  1802  0871               	movf	send_I2C_data@databyte,w
 19999  1803  0024               	movlb	4	; select bank4
 20000  1804  0091               	movwf	17	;volatile
 20001  1805                     l323:	
 20002                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 20003                           
 20004  1805  0020               	movlb	0	; select bank0
 20005  1806  1991               	btfsc	17,3	;volatile
 20006  1807  0008               	return
 20007  1808  2805               	goto	l323
 20008  1809                     __end_of_send_I2C_data:	
 20009                           
 20010                           	psect	text71
 20011  3269                     __ptext71:	
 20012 ;; *************** function _send_I2C_controlByte *****************
 20013 ;; Defined at:
 20014 ;;		line 53 in file "I2C.c"
 20015 ;; Parameters:    Size  Location     Type
 20016 ;;  BlockAddress    2    1[COMMON] unsigned int 
 20017 ;;  RW_bit          2    3[COMMON] unsigned int 
 20018 ;; Auto vars:     Size  Location     Type
 20019 ;;		None
 20020 ;; Return value:  Size  Location     Type
 20021 ;;                  1    wreg      void 
 20022 ;; Registers used:
 20023 ;;		wreg, status,2, status,0
 20024 ;; Tracked objects:
 20025 ;;		On entry : 0/0
 20026 ;;		On exit  : 0/0
 20027 ;;		Unchanged: 0/0
 20028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;Total ram usage:        4 bytes
 20034 ;; Hardware stack levels used:    1
 20035 ;; Hardware stack levels required when called:    1
 20036 ;; This function calls:
 20037 ;;		Nothing
 20038 ;; This function is called by:
 20039 ;;		_I2C_writeRegister
 20040 ;;		_readRegister
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           
 20045                           ;psect for function _send_I2C_controlByte
 20046  3269                     _send_I2C_controlByte:	
 20047                           
 20048                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 20049                           
 20050                           ;incstack = 0
 20051                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 20052  3269  0020               	movlb	0	; select bank0
 20053  326A  1191               	bcf	17,3	;volatile
 20054                           
 20055                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 20056  326B  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 20057  326C  0773               	addwf	send_I2C_controlByte@RW_bit,w
 20058  326D  0024               	movlb	4	; select bank4
 20059  326E  0091               	movwf	17	;volatile
 20060  326F                     l335:	
 20061                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 20062                           
 20063  326F  0020               	movlb	0	; select bank0
 20064  3270  1991               	btfsc	17,3	;volatile
 20065  3271  0008               	return
 20066  3272  2A6F               	goto	l335
 20067  3273                     __end_of_send_I2C_controlByte:	
 20068                           
 20069                           	psect	text72
 20070  3260                     __ptext72:	
 20071 ;; *************** function _send_I2C_NACK *****************
 20072 ;; Defined at:
 20073 ;;		line 91 in file "I2C.c"
 20074 ;; Parameters:    Size  Location     Type
 20075 ;;		None
 20076 ;; Auto vars:     Size  Location     Type
 20077 ;;		None
 20078 ;; Return value:  Size  Location     Type
 20079 ;;                  1    wreg      void 
 20080 ;; Registers used:
 20081 ;;		None
 20082 ;; Tracked objects:
 20083 ;;		On entry : 0/0
 20084 ;;		On exit  : 0/0
 20085 ;;		Unchanged: 0/0
 20086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20091 ;;Total ram usage:        0 bytes
 20092 ;; Hardware stack levels used:    1
 20093 ;; Hardware stack levels required when called:    1
 20094 ;; This function calls:
 20095 ;;		Nothing
 20096 ;; This function is called by:
 20097 ;;		_readRegister
 20098 ;; This function uses a non-reentrant model
 20099 ;;
 20100                           
 20101                           
 20102                           ;psect for function _send_I2C_NACK
 20103  3260                     _send_I2C_NACK:	
 20104                           
 20105                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 20106                           
 20107                           ;incstack = 0
 20108                           ; Regs used in _send_I2C_NACK: []
 20109  3260  0020               	movlb	0	; select bank0
 20110  3261  1191               	bcf	17,3	;volatile
 20111                           
 20112                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 20113  3262  0024               	movlb	4	; select bank4
 20114  3263  1696               	bsf	22,5	;volatile
 20115                           
 20116                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 20117  3264  1616               	bsf	22,4	;volatile
 20118  3265                     l365:	
 20119                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 20120                           
 20121  3265  0020               	movlb	0	; select bank0
 20122  3266  1991               	btfsc	17,3	;volatile
 20123  3267  0008               	return
 20124  3268  2A65               	goto	l365
 20125  3269                     __end_of_send_I2C_NACK:	
 20126                           
 20127                           	psect	text73
 20128  2002                     __ptext73:	
 20129 ;; *************** function _read_I2C_data *****************
 20130 ;; Defined at:
 20131 ;;		line 43 in file "I2C.c"
 20132 ;; Parameters:    Size  Location     Type
 20133 ;;		None
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;		None
 20136 ;; Return value:  Size  Location     Type
 20137 ;;                  2    1[COMMON] unsigned int 
 20138 ;; Registers used:
 20139 ;;		wreg
 20140 ;; Tracked objects:
 20141 ;;		On entry : 0/0
 20142 ;;		On exit  : 0/0
 20143 ;;		Unchanged: 0/0
 20144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20149 ;;Total ram usage:        4 bytes
 20150 ;; Hardware stack levels used:    1
 20151 ;; Hardware stack levels required when called:    1
 20152 ;; This function calls:
 20153 ;;		Nothing
 20154 ;; This function is called by:
 20155 ;;		_readRegister
 20156 ;; This function uses a non-reentrant model
 20157 ;;
 20158                           
 20159                           
 20160                           ;psect for function _read_I2C_data
 20161  2002                     _read_I2C_data:	
 20162                           
 20163                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 20164                           
 20165                           ;incstack = 0
 20166                           ; Regs used in _read_I2C_data: [wreg]
 20167  2002  0020               	movlb	0	; select bank0
 20168  2003  1191               	bcf	17,3	;volatile
 20169                           
 20170                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 20171  2004  0024               	movlb	4	; select bank4
 20172  2005  1596               	bsf	22,3	;volatile
 20173  2006                     l329:	
 20174                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 20175                           
 20176  2006  0020               	movlb	0	; select bank0
 20177  2007  1D91               	btfss	17,3	;volatile
 20178  2008  2806               	goto	l329
 20179                           
 20180                           ;I2C.c: 47:     return (SSPBUF);
 20181  2009  0024               	movlb	4	; select bank4
 20182  200A  0811               	movf	17,w	;volatile
 20183  200B  00F3               	movwf	??_read_I2C_data
 20184  200C  01F4               	clrf	??_read_I2C_data+1
 20185  200D  0873               	movf	??_read_I2C_data,w
 20186  200E  00F1               	movwf	?_read_I2C_data
 20187  200F  0874               	movf	??_read_I2C_data+1,w
 20188  2010  00F2               	movwf	?_read_I2C_data+1
 20189  2011  0008               	return
 20190  2012                     __end_of_read_I2C_data:	
 20191                           
 20192                           	psect	text74
 20193  32AE                     __ptext74:	
 20194 ;; *************** function _init_TMR6 *****************
 20195 ;; Defined at:
 20196 ;;		line 211 in file "main.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;		None
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;		None
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  1    wreg      void 
 20203 ;; Registers used:
 20204 ;;		wreg, status,2, status,0
 20205 ;; Tracked objects:
 20206 ;;		On entry : 0/0
 20207 ;;		On exit  : 0/0
 20208 ;;		Unchanged: 0/0
 20209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20214 ;;Total ram usage:        0 bytes
 20215 ;; Hardware stack levels used:    1
 20216 ;; Hardware stack levels required when called:    1
 20217 ;; This function calls:
 20218 ;;		Nothing
 20219 ;; This function is called by:
 20220 ;;		_main
 20221 ;; This function uses a non-reentrant model
 20222 ;;
 20223                           
 20224                           
 20225                           ;psect for function _init_TMR6
 20226  32AE                     _init_TMR6:	
 20227                           
 20228                           ;main.c: 218:     CCPTMRSbits.C1TSEL = 0b10;
 20229                           
 20230                           ;incstack = 0
 20231                           ; Regs used in _init_TMR6: [wreg+status,2+status,0]
 20232  32AE  0025               	movlb	5	; select bank5
 20233  32AF  081E               	movf	30,w	;volatile
 20234  32B0  39FC               	andlw	-4
 20235  32B1  3802               	iorlw	2
 20236  32B2  009E               	movwf	30	;volatile
 20237                           
 20238                           ;main.c: 232:     T6CONbits.T6CKPS = 0b00;
 20239  32B3  30FC               	movlw	-4
 20240  32B4  0028               	movlb	8	; select bank8
 20241  32B5  059E               	andwf	30,f	;volatile
 20242                           
 20243                           ;main.c: 235:     T6CONbits.TMR6ON = 1;
 20244  32B6  151E               	bsf	30,2	;volatile
 20245                           
 20246                           ;main.c: 238:     PR6 = 255;
 20247  32B7  30FF               	movlw	255
 20248  32B8  009D               	movwf	29	;volatile
 20249                           
 20250                           ;main.c: 243:     CCP1CONbits.DC1B = 00;
 20251  32B9  30CF               	movlw	-49
 20252  32BA  0025               	movlb	5	; select bank5
 20253  32BB  0593               	andwf	19,f	;volatile
 20254                           
 20255                           ;main.c: 246:     CCP1CONbits.CCP1M = 0b1100;
 20256  32BC  0813               	movf	19,w	;volatile
 20257  32BD  39F0               	andlw	-16
 20258  32BE  380C               	iorlw	12
 20259  32BF  0093               	movwf	19	;volatile
 20260                           
 20261                           ;main.c: 249: CCPTMRSbits.P3TSEL = 0b10;
 20262  32C0  081E               	movf	30,w	;volatile
 20263  32C1  39CF               	andlw	-49
 20264  32C2  3820               	iorlw	32
 20265  32C3  009E               	movwf	30	;volatile
 20266  32C4  0008               	return
 20267  32C5                     __end_of_init_TMR6:	
 20268                           
 20269                           	psect	text75
 20270  3287                     __ptext75:	
 20271 ;; *************** function _init_TMR1 *****************
 20272 ;; Defined at:
 20273 ;;		line 194 in file "main.c"
 20274 ;; Parameters:    Size  Location     Type
 20275 ;;		None
 20276 ;; Auto vars:     Size  Location     Type
 20277 ;;		None
 20278 ;; Return value:  Size  Location     Type
 20279 ;;                  1    wreg      void 
 20280 ;; Registers used:
 20281 ;;		wreg, status,2, status,0
 20282 ;; Tracked objects:
 20283 ;;		On entry : 0/0
 20284 ;;		On exit  : 0/0
 20285 ;;		Unchanged: 0/0
 20286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20291 ;;Total ram usage:        0 bytes
 20292 ;; Hardware stack levels used:    1
 20293 ;; Hardware stack levels required when called:    1
 20294 ;; This function calls:
 20295 ;;		Nothing
 20296 ;; This function is called by:
 20297 ;;		_main
 20298 ;; This function uses a non-reentrant model
 20299 ;;
 20300                           
 20301                           
 20302                           ;psect for function _init_TMR1
 20303  3287                     _init_TMR1:	
 20304                           
 20305                           ;main.c: 197:     T1CONbits.T1CKPS = 0b00;
 20306                           
 20307                           ;incstack = 0
 20308                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20309  3287  30CF               	movlw	-49
 20310  3288  0020               	movlb	0	; select bank0
 20311  3289  0598               	andwf	24,f	;volatile
 20312                           
 20313                           ;main.c: 199:     TMR1 = 0;
 20314  328A  0196               	clrf	22	;volatile
 20315  328B  0197               	clrf	23	;volatile
 20316                           
 20317                           ;main.c: 201:     T1CONbits.TMR1ON = 1;
 20318  328C  1418               	bsf	24,0	;volatile
 20319                           
 20320                           ;main.c: 203:     PIE1bits.TMR1IE = 1;
 20321  328D  0021               	movlb	1	; select bank1
 20322  328E  1411               	bsf	17,0	;volatile
 20323                           
 20324                           ;main.c: 205:     INTCONbits.PEIE = 1;
 20325  328F  170B               	bsf	11,6	;volatile
 20326                           
 20327                           ;main.c: 207:     (INTCONbits.GIE = 1);
 20328  3290  178B               	bsf	11,7	;volatile
 20329  3291  0008               	return
 20330  3292                     __end_of_init_TMR1:	
 20331                           
 20332                           	psect	text76
 20333  322D                     __ptext76:	
 20334 ;; *************** function _init_RGB *****************
 20335 ;; Defined at:
 20336 ;;		line 6 in file "RGB.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;		None
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;		None
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		None
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20354 ;;Total ram usage:        0 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; Hardware stack levels required when called:    1
 20357 ;; This function calls:
 20358 ;;		Nothing
 20359 ;; This function is called by:
 20360 ;;		_main
 20361 ;; This function uses a non-reentrant model
 20362 ;;
 20363                           
 20364                           
 20365                           ;psect for function _init_RGB
 20366  322D                     _init_RGB:	
 20367                           
 20368                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20369                           
 20370                           ;incstack = 0
 20371                           ; Regs used in _init_RGB: []
 20372  322D  0022               	movlb	2	; select bank2
 20373  322E  160C               	bsf	12,4	;volatile
 20374                           
 20375                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20376  322F  168C               	bsf	12,5	;volatile
 20377                           
 20378                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20379  3230  1410               	bsf	16,0	;volatile
 20380  3231  0008               	return
 20381  3232                     __end_of_init_RGB:	
 20382                           
 20383                           	psect	text77
 20384  329E                     __ptext77:	
 20385 ;; *************** function _init_I2C *****************
 20386 ;; Defined at:
 20387 ;;		line 10 in file "I2C.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;		None
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;		None
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  1    wreg      void 
 20394 ;; Registers used:
 20395 ;;		wreg, status,2, status,0
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;Total ram usage:        1 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:    1
 20408 ;; This function calls:
 20409 ;;		Nothing
 20410 ;; This function is called by:
 20411 ;;		_main
 20412 ;; This function uses a non-reentrant model
 20413 ;;
 20414                           
 20415                           
 20416                           ;psect for function _init_I2C
 20417  329E                     _init_I2C:	
 20418                           
 20419                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20420                           
 20421                           ;incstack = 0
 20422                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20423  329E  0024               	movlb	4	; select bank4
 20424  329F  0815               	movf	21,w	;volatile
 20425  32A0  39F0               	andlw	-16
 20426  32A1  3808               	iorlw	8
 20427  32A2  0095               	movwf	21	;volatile
 20428                           
 20429                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20430  32A3  1695               	bsf	21,5	;volatile
 20431                           
 20432                           ;I2C.c: 24:     SSPADD = 39;
 20433  32A4  3027               	movlw	39
 20434  32A5  0092               	movwf	18	;volatile
 20435                           
 20436                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20437  32A6  3034               	movlw	52
 20438  32A7  00F1               	movwf	??_init_I2C
 20439  32A8  30F2               	movlw	242
 20440  32A9                     u9787:	
 20441  32A9  0B89               	decfsz	9,f
 20442  32AA  2AA9               	goto	u9787
 20443  32AB  0BF1               	decfsz	??_init_I2C,f
 20444  32AC  2AA9               	goto	u9787
 20445  32AD  0008               	return
 20446  32AE                     __end_of_init_I2C:	
 20447                           
 20448                           	psect	text78
 20449  0800                     __ptext78:	
 20450 ;; *************** function _init_GPIO *****************
 20451 ;; Defined at:
 20452 ;;		line 252 in file "main.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;		None
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;		None
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      void 
 20459 ;; Registers used:
 20460 ;;		wreg, status,2, status,0
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20470 ;;Total ram usage:        0 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:    1
 20473 ;; This function calls:
 20474 ;;		Nothing
 20475 ;; This function is called by:
 20476 ;;		_main
 20477 ;; This function uses a non-reentrant model
 20478 ;;
 20479                           
 20480                           
 20481                           ;psect for function _init_GPIO
 20482  0800                     _init_GPIO:	
 20483                           
 20484                           ;main.c: 258:     TRISBbits.TRISB2 = 0;
 20485                           
 20486                           ;incstack = 0
 20487                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20488  0800  0021               	movlb	1	; select bank1
 20489  0801  110D               	bcf	13,2	;volatile
 20490                           
 20491                           ;main.c: 259:     ANSELBbits.ANSB2 = 0;
 20492  0802  0023               	movlb	3	; select bank3
 20493  0803  110D               	bcf	13,2	;volatile
 20494                           
 20495                           ;main.c: 260:     TRISBbits.TRISB3 = 1;
 20496  0804  0021               	movlb	1	; select bank1
 20497  0805  158D               	bsf	13,3	;volatile
 20498                           
 20499                           ;main.c: 261:     ANSELBbits.ANSB3 = 0;
 20500  0806  0023               	movlb	3	; select bank3
 20501  0807  118D               	bcf	13,3	;volatile
 20502                           
 20503                           ;main.c: 266:     ANSELCbits.ANSC4 = 0;
 20504  0808  120E               	bcf	14,4	;volatile
 20505                           
 20506                           ;main.c: 267:     ANSELCbits.ANSC5 = 0;
 20507  0809  128E               	bcf	14,5	;volatile
 20508                           
 20509                           ;main.c: 268:     TRISCbits.TRISC4 = 1;
 20510  080A  0021               	movlb	1	; select bank1
 20511  080B  160E               	bsf	14,4	;volatile
 20512                           
 20513                           ;main.c: 269:     TRISCbits.TRISC5 = 1;
 20514  080C  168E               	bsf	14,5	;volatile
 20515                           
 20516                           ;main.c: 278:     TRISAbits.TRISA4 = 0;
 20517  080D  120C               	bcf	12,4	;volatile
 20518                           
 20519                           ;main.c: 279:     TRISAbits.TRISA5 = 0;
 20520  080E  128C               	bcf	12,5	;volatile
 20521                           
 20522                           ;main.c: 280:     TRISEbits.TRISE0 = 0;
 20523  080F  1010               	bcf	16,0	;volatile
 20524                           
 20525                           ;main.c: 285:     TRISAbits.TRISA3 = 0;
 20526  0810  118C               	bcf	12,3	;volatile
 20527                           
 20528                           ;main.c: 286:     LATAbits.LATA3 = 0;
 20529  0811  0022               	movlb	2	; select bank2
 20530  0812  118C               	bcf	12,3	;volatile
 20531                           
 20532                           ;main.c: 289:     TRISBbits.TRISB1 = 0;
 20533  0813  0021               	movlb	1	; select bank1
 20534  0814  108D               	bcf	13,1	;volatile
 20535                           
 20536                           ;main.c: 295:     PPSLOCK = 0x55;
 20537  0815  3055               	movlw	85
 20538  0816  003C               	movlb	28	; select bank28
 20539  0817  008F               	movwf	15	;volsfr
 20540                           
 20541                           ;main.c: 296:     PPSLOCK = 0xAA;
 20542  0818  30AA               	movlw	170
 20543  0819  008F               	movwf	15	;volsfr
 20544                           
 20545                           ;main.c: 297:     PPSLOCKbits.PPSLOCKED = 0x00;
 20546  081A  100F               	bcf	15,0	;volsfr
 20547                           
 20548                           ;main.c: 301:     RC4PPSbits.RC4PPS = 0x0011;
 20549  081B  003D               	movlb	29	; select bank29
 20550  081C  0824               	movf	36,w	;volatile
 20551  081D  39E0               	andlw	-32
 20552  081E  3811               	iorlw	17
 20553  081F  00A4               	movwf	36	;volatile
 20554                           
 20555                           ;main.c: 302:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20556  0820  003C               	movlb	28	; select bank28
 20557  0821  0821               	movf	33,w	;volatile
 20558  0822  39E0               	andlw	-32
 20559  0823  3814               	iorlw	20
 20560  0824  00A1               	movwf	33	;volatile
 20561                           
 20562                           ;main.c: 303:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20563  0825  0820               	movf	32,w	;volatile
 20564  0826  39E0               	andlw	-32
 20565  0827  3815               	iorlw	21
 20566  0828  00A0               	movwf	32	;volatile
 20567                           
 20568                           ;main.c: 304:     RC5PPSbits.RC5PPS = 0x0010;
 20569  0829  003D               	movlb	29	; select bank29
 20570  082A  0825               	movf	37,w	;volatile
 20571  082B  39E0               	andlw	-32
 20572  082C  3810               	iorlw	16
 20573  082D  00A5               	movwf	37	;volatile
 20574                           
 20575                           ;main.c: 307:     RB2PPSbits.RB2PPS = 0x14;
 20576  082E  081A               	movf	26,w	;volatile
 20577  082F  39E0               	andlw	-32
 20578  0830  3814               	iorlw	20
 20579  0831  009A               	movwf	26	;volatile
 20580                           
 20581                           ;main.c: 308:     RXPPSbits.RXPPS = 0x0B;
 20582  0832  003C               	movlb	28	; select bank28
 20583  0833  0824               	movf	36,w	;volatile
 20584  0834  39E0               	andlw	-32
 20585  0835  380B               	iorlw	11
 20586  0836  00A4               	movwf	36	;volatile
 20587                           
 20588                           ;main.c: 311:     RB1PPSbits.RB1PPS = 0b01100;
 20589  0837  003D               	movlb	29	; select bank29
 20590  0838  0819               	movf	25,w	;volatile
 20591  0839  39E0               	andlw	-32
 20592  083A  380C               	iorlw	12
 20593  083B  0099               	movwf	25	;volatile
 20594                           
 20595                           ;main.c: 313:     PPSLOCK = 0x55;
 20596  083C  3055               	movlw	85
 20597  083D  003C               	movlb	28	; select bank28
 20598  083E  008F               	movwf	15	;volsfr
 20599                           
 20600                           ;main.c: 314:     PPSLOCK = 0xAA;
 20601  083F  30AA               	movlw	170
 20602  0840  008F               	movwf	15	;volsfr
 20603                           
 20604                           ;main.c: 315:     PPSLOCKbits.PPSLOCKED = 0x01;
 20605  0841  140F               	bsf	15,0	;volsfr
 20606  0842  0008               	return
 20607  0843                     __end_of_init_GPIO:	
 20608                           
 20609                           	psect	text79
 20610  3232                     __ptext79:	
 20611 ;; *************** function _initWDT *****************
 20612 ;; Defined at:
 20613 ;;		line 319 in file "main.c"
 20614 ;; Parameters:    Size  Location     Type
 20615 ;;		None
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;		None
 20618 ;; Return value:  Size  Location     Type
 20619 ;;                  1    wreg      void 
 20620 ;; Registers used:
 20621 ;;		wreg, status,2, status,0
 20622 ;; Tracked objects:
 20623 ;;		On entry : 0/0
 20624 ;;		On exit  : 0/0
 20625 ;;		Unchanged: 0/0
 20626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20631 ;;Total ram usage:        0 bytes
 20632 ;; Hardware stack levels used:    1
 20633 ;; Hardware stack levels required when called:    1
 20634 ;; This function calls:
 20635 ;;		Nothing
 20636 ;; This function is called by:
 20637 ;;		_main
 20638 ;; This function uses a non-reentrant model
 20639 ;;
 20640                           
 20641                           
 20642                           ;psect for function _initWDT
 20643  3232                     _initWDT:	
 20644                           
 20645                           ;main.c: 321:     WDTCONbits.WDTPS = 0b01101;
 20646                           
 20647                           ;incstack = 0
 20648                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20649  3232  0021               	movlb	1	; select bank1
 20650  3233  0817               	movf	23,w	;volatile
 20651  3234  39C1               	andlw	-63
 20652  3235  381A               	iorlw	26
 20653  3236  0097               	movwf	23	;volatile
 20654  3237  0008               	return
 20655  3238                     __end_of_initWDT:	
 20656                           
 20657                           	psect	text80
 20658  3226                     __ptext80:	
 20659 ;; *************** function _initClock *****************
 20660 ;; Defined at:
 20661 ;;		line 185 in file "main.c"
 20662 ;; Parameters:    Size  Location     Type
 20663 ;;		None
 20664 ;; Auto vars:     Size  Location     Type
 20665 ;;		None
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  1    wreg      void 
 20668 ;; Registers used:
 20669 ;;		status,2, status,0, pclath, cstack
 20670 ;; Tracked objects:
 20671 ;;		On entry : 0/0
 20672 ;;		On exit  : 0/0
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20679 ;;Total ram usage:        0 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:    2
 20682 ;; This function calls:
 20683 ;;		_internal_16
 20684 ;; This function is called by:
 20685 ;;		_main
 20686 ;; This function uses a non-reentrant model
 20687 ;;
 20688                           
 20689                           
 20690                           ;psect for function _initClock
 20691  3226                     _initClock:	
 20692                           
 20693                           ;main.c: 187:     internal_16();
 20694                           
 20695                           ;incstack = 0
 20696                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20697  3226  31B2  2257         	fcall	_internal_16
 20698  3228  0008               	return
 20699  3229                     __end_of_initClock:	
 20700                           
 20701                           	psect	text81
 20702  3257                     __ptext81:	
 20703 ;; *************** function _internal_16 *****************
 20704 ;; Defined at:
 20705 ;;		line 26 in file "pic16f1719_internals.c"
 20706 ;; Parameters:    Size  Location     Type
 20707 ;;		None
 20708 ;; Auto vars:     Size  Location     Type
 20709 ;;		None
 20710 ;; Return value:  Size  Location     Type
 20711 ;;                  1    wreg      void 
 20712 ;; Registers used:
 20713 ;;		None
 20714 ;; Tracked objects:
 20715 ;;		On entry : 0/0
 20716 ;;		On exit  : 0/0
 20717 ;;		Unchanged: 0/0
 20718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20723 ;;Total ram usage:        0 bytes
 20724 ;; Hardware stack levels used:    1
 20725 ;; Hardware stack levels required when called:    1
 20726 ;; This function calls:
 20727 ;;		Nothing
 20728 ;; This function is called by:
 20729 ;;		_initClock
 20730 ;; This function uses a non-reentrant model
 20731 ;;
 20732                           
 20733                           
 20734                           ;psect for function _internal_16
 20735  3257                     _internal_16:	
 20736                           
 20737                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20738                           
 20739                           ;incstack = 0
 20740                           ; Regs used in _internal_16: []
 20741  3257  0021               	movlb	1	; select bank1
 20742  3258  1019               	bcf	25,0	;volatile
 20743                           
 20744                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20745  3259  1099               	bcf	25,1	;volatile
 20746                           
 20747                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20748  325A  1599               	bsf	25,3	;volatile
 20749                           
 20750                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20751  325B  1619               	bsf	25,4	;volatile
 20752                           
 20753                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20754  325C  1699               	bsf	25,5	;volatile
 20755                           
 20756                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20757  325D  1719               	bsf	25,6	;volatile
 20758                           
 20759                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20760  325E  1399               	bcf	25,7	;volatile
 20761  325F  0008               	return
 20762  3260                     __end_of_internal_16:	
 20763                           
 20764                           	psect	text82
 20765  2D1A                     __ptext82:	
 20766 ;; *************** function _EUSART_Initialize *****************
 20767 ;; Defined at:
 20768 ;;		line 6 in file "EUSART.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  baudrate        4   18[BANK0 ] const long 
 20771 ;; Auto vars:     Size  Location     Type
 20772 ;;  x               2   10[COMMON] unsigned int 
 20773 ;; Return value:  Size  Location     Type
 20774 ;;                  1    wreg      unsigned char 
 20775 ;; Registers used:
 20776 ;;		wreg, status,2, status,0, pclath, cstack
 20777 ;; Tracked objects:
 20778 ;;		On entry : 0/0
 20779 ;;		On exit  : 0/0
 20780 ;;		Unchanged: 0/0
 20781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20786 ;;Total ram usage:       18 bytes
 20787 ;; Hardware stack levels used:    1
 20788 ;; Hardware stack levels required when called:    2
 20789 ;; This function calls:
 20790 ;;		___aldiv
 20791 ;; This function is called by:
 20792 ;;		_main
 20793 ;; This function uses a non-reentrant model
 20794 ;;
 20795                           
 20796                           
 20797                           ;psect for function _EUSART_Initialize
 20798  2D1A                     _EUSART_Initialize:	
 20799                           
 20800                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20801                           
 20802                           ;incstack = 0
 20803                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20804  2D1A  0020               	movlb	0	; select bank0
 20805  2D1B  0832               	movf	EUSART_Initialize@baudrate,w
 20806  2D1C  00B6               	movwf	??_EUSART_Initialize
 20807  2D1D  0833               	movf	EUSART_Initialize@baudrate+1,w
 20808  2D1E  00B7               	movwf	??_EUSART_Initialize+1
 20809  2D1F  0834               	movf	EUSART_Initialize@baudrate+2,w
 20810  2D20  00B8               	movwf	??_EUSART_Initialize+2
 20811  2D21  0835               	movf	EUSART_Initialize@baudrate+3,w
 20812  2D22  00B9               	movwf	??_EUSART_Initialize+3
 20813  2D23  3006               	movlw	6
 20814  2D24                     u9675:	
 20815  2D24  35B6               	lslf	??_EUSART_Initialize,f
 20816  2D25  0DB7               	rlf	??_EUSART_Initialize+1,f
 20817  2D26  0DB8               	rlf	??_EUSART_Initialize+2,f
 20818  2D27  0DB9               	rlf	??_EUSART_Initialize+3,f
 20819  2D28  0B89               	decfsz	9,f
 20820  2D29  2D24               	goto	u9675
 20821  2D2A  0839               	movf	??_EUSART_Initialize+3,w
 20822  2D2B  00A7               	movwf	___aldiv@divisor+3
 20823  2D2C  0838               	movf	??_EUSART_Initialize+2,w
 20824  2D2D  00A6               	movwf	___aldiv@divisor+2
 20825  2D2E  0837               	movf	??_EUSART_Initialize+1,w
 20826  2D2F  00A5               	movwf	___aldiv@divisor+1
 20827  2D30  0836               	movf	??_EUSART_Initialize,w
 20828  2D31  00A4               	movwf	___aldiv@divisor
 20829  2D32  0832               	movf	EUSART_Initialize@baudrate,w
 20830  2D33  00BA               	movwf	??_EUSART_Initialize+4
 20831  2D34  0833               	movf	EUSART_Initialize@baudrate+1,w
 20832  2D35  00BB               	movwf	??_EUSART_Initialize+5
 20833  2D36  0834               	movf	EUSART_Initialize@baudrate+2,w
 20834  2D37  00BC               	movwf	??_EUSART_Initialize+6
 20835  2D38  0835               	movf	EUSART_Initialize@baudrate+3,w
 20836  2D39  00BD               	movwf	??_EUSART_Initialize+7
 20837  2D3A  3006               	movlw	6
 20838  2D3B                     u9685:	
 20839  2D3B  35BA               	lslf	??_EUSART_Initialize+4,f
 20840  2D3C  0DBB               	rlf	??_EUSART_Initialize+5,f
 20841  2D3D  0DBC               	rlf	??_EUSART_Initialize+6,f
 20842  2D3E  0DBD               	rlf	??_EUSART_Initialize+7,f
 20843  2D3F  0B89               	decfsz	9,f
 20844  2D40  2D3B               	goto	u9685
 20845  2D41  3000               	movlw	0
 20846  2D42  00BE               	movwf	??_EUSART_Initialize+8
 20847  2D43  3024               	movlw	36
 20848  2D44  00BF               	movwf	??_EUSART_Initialize+9
 20849  2D45  30F4               	movlw	244
 20850  2D46  00C0               	movwf	??_EUSART_Initialize+10
 20851  2D47  3000               	movlw	0
 20852  2D48  00C1               	movwf	??_EUSART_Initialize+11
 20853  2D49  083A               	movf	??_EUSART_Initialize+4,w
 20854  2D4A  02BE               	subwf	??_EUSART_Initialize+8,f
 20855  2D4B  083B               	movf	??_EUSART_Initialize+5,w
 20856  2D4C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20857  2D4D  083C               	movf	??_EUSART_Initialize+6,w
 20858  2D4E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20859  2D4F  083D               	movf	??_EUSART_Initialize+7,w
 20860  2D50  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20861  2D51  0841               	movf	??_EUSART_Initialize+11,w
 20862  2D52  00AB               	movwf	___aldiv@dividend+3
 20863  2D53  0840               	movf	??_EUSART_Initialize+10,w
 20864  2D54  00AA               	movwf	___aldiv@dividend+2
 20865  2D55  083F               	movf	??_EUSART_Initialize+9,w
 20866  2D56  00A9               	movwf	___aldiv@dividend+1
 20867  2D57  083E               	movf	??_EUSART_Initialize+8,w
 20868  2D58  00A8               	movwf	___aldiv@dividend
 20869  2D59  31AB  2361  31AD   	fcall	___aldiv
 20870  2D5C  0020               	movlb	0	; select bank0
 20871  2D5D  0825               	movf	?___aldiv+1,w
 20872  2D5E  00FB               	movwf	EUSART_Initialize@x+1
 20873  2D5F  0824               	movf	?___aldiv,w
 20874  2D60  00FA               	movwf	EUSART_Initialize@x
 20875                           
 20876                           ;EUSART.c: 10:  if(x>255)
 20877  2D61  3001               	movlw	1
 20878  2D62  027B               	subwf	EUSART_Initialize@x+1,w
 20879  2D63  3000               	movlw	0
 20880  2D64  1903               	skipnz
 20881  2D65  027A               	subwf	EUSART_Initialize@x,w
 20882  2D66  1C03               	skipc
 20883  2D67  2DB0               	goto	l7795
 20884                           
 20885                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20886  2D68  0832               	movf	EUSART_Initialize@baudrate,w
 20887  2D69  00B6               	movwf	??_EUSART_Initialize
 20888  2D6A  0833               	movf	EUSART_Initialize@baudrate+1,w
 20889  2D6B  00B7               	movwf	??_EUSART_Initialize+1
 20890  2D6C  0834               	movf	EUSART_Initialize@baudrate+2,w
 20891  2D6D  00B8               	movwf	??_EUSART_Initialize+2
 20892  2D6E  0835               	movf	EUSART_Initialize@baudrate+3,w
 20893  2D6F  00B9               	movwf	??_EUSART_Initialize+3
 20894  2D70  3004               	movlw	4
 20895  2D71                     u9705:	
 20896  2D71  35B6               	lslf	??_EUSART_Initialize,f
 20897  2D72  0DB7               	rlf	??_EUSART_Initialize+1,f
 20898  2D73  0DB8               	rlf	??_EUSART_Initialize+2,f
 20899  2D74  0DB9               	rlf	??_EUSART_Initialize+3,f
 20900  2D75  0B89               	decfsz	9,f
 20901  2D76  2D71               	goto	u9705
 20902  2D77  0839               	movf	??_EUSART_Initialize+3,w
 20903  2D78  00A7               	movwf	___aldiv@divisor+3
 20904  2D79  0838               	movf	??_EUSART_Initialize+2,w
 20905  2D7A  00A6               	movwf	___aldiv@divisor+2
 20906  2D7B  0837               	movf	??_EUSART_Initialize+1,w
 20907  2D7C  00A5               	movwf	___aldiv@divisor+1
 20908  2D7D  0836               	movf	??_EUSART_Initialize,w
 20909  2D7E  00A4               	movwf	___aldiv@divisor
 20910  2D7F  0832               	movf	EUSART_Initialize@baudrate,w
 20911  2D80  00BA               	movwf	??_EUSART_Initialize+4
 20912  2D81  0833               	movf	EUSART_Initialize@baudrate+1,w
 20913  2D82  00BB               	movwf	??_EUSART_Initialize+5
 20914  2D83  0834               	movf	EUSART_Initialize@baudrate+2,w
 20915  2D84  00BC               	movwf	??_EUSART_Initialize+6
 20916  2D85  0835               	movf	EUSART_Initialize@baudrate+3,w
 20917  2D86  00BD               	movwf	??_EUSART_Initialize+7
 20918  2D87  3004               	movlw	4
 20919  2D88                     u9715:	
 20920  2D88  35BA               	lslf	??_EUSART_Initialize+4,f
 20921  2D89  0DBB               	rlf	??_EUSART_Initialize+5,f
 20922  2D8A  0DBC               	rlf	??_EUSART_Initialize+6,f
 20923  2D8B  0DBD               	rlf	??_EUSART_Initialize+7,f
 20924  2D8C  0B89               	decfsz	9,f
 20925  2D8D  2D88               	goto	u9715
 20926  2D8E  3000               	movlw	0
 20927  2D8F  00BE               	movwf	??_EUSART_Initialize+8
 20928  2D90  3024               	movlw	36
 20929  2D91  00BF               	movwf	??_EUSART_Initialize+9
 20930  2D92  30F4               	movlw	244
 20931  2D93  00C0               	movwf	??_EUSART_Initialize+10
 20932  2D94  3000               	movlw	0
 20933  2D95  00C1               	movwf	??_EUSART_Initialize+11
 20934  2D96  083A               	movf	??_EUSART_Initialize+4,w
 20935  2D97  02BE               	subwf	??_EUSART_Initialize+8,f
 20936  2D98  083B               	movf	??_EUSART_Initialize+5,w
 20937  2D99  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20938  2D9A  083C               	movf	??_EUSART_Initialize+6,w
 20939  2D9B  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20940  2D9C  083D               	movf	??_EUSART_Initialize+7,w
 20941  2D9D  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20942  2D9E  0841               	movf	??_EUSART_Initialize+11,w
 20943  2D9F  00AB               	movwf	___aldiv@dividend+3
 20944  2DA0  0840               	movf	??_EUSART_Initialize+10,w
 20945  2DA1  00AA               	movwf	___aldiv@dividend+2
 20946  2DA2  083F               	movf	??_EUSART_Initialize+9,w
 20947  2DA3  00A9               	movwf	___aldiv@dividend+1
 20948  2DA4  083E               	movf	??_EUSART_Initialize+8,w
 20949  2DA5  00A8               	movwf	___aldiv@dividend
 20950  2DA6  31AB  2361  31AD   	fcall	___aldiv
 20951  2DA9  0020               	movlb	0	; select bank0
 20952  2DAA  0825               	movf	?___aldiv+1,w
 20953  2DAB  00FB               	movwf	EUSART_Initialize@x+1
 20954  2DAC  0824               	movf	?___aldiv,w
 20955  2DAD  00FA               	movwf	EUSART_Initialize@x
 20956                           
 20957                           ;EUSART.c: 13:   BRGH = 1;
 20958  2DAE  0023               	movlb	3	; select bank3
 20959  2DAF  151E               	bsf	30,2	;volatile
 20960  2DB0                     l7795:	
 20961                           
 20962                           ;EUSART.c: 15:  if(x<256)
 20963  2DB0  3001               	movlw	1
 20964  2DB1  027B               	subwf	EUSART_Initialize@x+1,w
 20965  2DB2  3000               	movlw	0
 20966  2DB3  1903               	skipnz
 20967  2DB4  027A               	subwf	EUSART_Initialize@x,w
 20968  2DB5  1803               	skipnc
 20969  2DB6  0008               	return
 20970                           
 20971                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20972  2DB7  087A               	movf	EUSART_Initialize@x,w
 20973  2DB8  0023               	movlb	3	; select bank3
 20974  2DB9  009B               	movwf	27	;volatile
 20975                           
 20976                           ;EUSART.c: 18:    SYNC = 0;
 20977  2DBA  121E               	bcf	30,4	;volatile
 20978                           
 20979                           ;EUSART.c: 19:    SPEN = 1;
 20980  2DBB  179D               	bsf	29,7	;volatile
 20981                           
 20982                           ;EUSART.c: 20:           TRISC7 = 1;
 20983  2DBC  0021               	movlb	1	; select bank1
 20984  2DBD  178E               	bsf	14,7	;volatile
 20985                           
 20986                           ;EUSART.c: 21:           TRISC6 = 1;
 20987  2DBE  170E               	bsf	14,6	;volatile
 20988                           
 20989                           ;EUSART.c: 22:           CREN = 1;
 20990  2DBF  0023               	movlb	3	; select bank3
 20991  2DC0  161D               	bsf	29,4	;volatile
 20992                           
 20993                           ;EUSART.c: 23:           TXEN = 1;
 20994  2DC1  169E               	bsf	30,5	;volatile
 20995  2DC2  0008               	return
 20996  2DC3                     __end_of_EUSART_Initialize:	
 20997                           
 20998                           	psect	text83
 20999  2B61                     __ptext83:	
 21000 ;; *************** function ___aldiv *****************
 21001 ;; Defined at:
 21002 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;  divisor         4    4[BANK0 ] long 
 21005 ;;  dividend        4    8[BANK0 ] long 
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;  quotient        4   14[BANK0 ] long 
 21008 ;;  sign            1   13[BANK0 ] unsigned char 
 21009 ;;  counter         1   12[BANK0 ] unsigned char 
 21010 ;; Return value:  Size  Location     Type
 21011 ;;                  4    4[BANK0 ] long 
 21012 ;; Registers used:
 21013 ;;		wreg, status,2, status,0
 21014 ;; Tracked objects:
 21015 ;;		On entry : 0/0
 21016 ;;		On exit  : 0/0
 21017 ;;		Unchanged: 0/0
 21018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21019 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21020 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21022 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21023 ;;Total ram usage:       15 bytes
 21024 ;; Hardware stack levels used:    1
 21025 ;; Hardware stack levels required when called:    1
 21026 ;; This function calls:
 21027 ;;		Nothing
 21028 ;; This function is called by:
 21029 ;;		_EUSART_Initialize
 21030 ;;		_setCellUndervoltageProtection
 21031 ;;		_setCellOvervoltageProtection
 21032 ;;		_updateVoltages
 21033 ;; This function uses a non-reentrant model
 21034 ;;
 21035                           
 21036                           
 21037                           ;psect for function ___aldiv
 21038  2B61                     ___aldiv:	
 21039                           
 21040                           ;incstack = 0
 21041                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21042  2B61  0020               	movlb	0	; select bank0
 21043  2B62  01AD               	clrf	___aldiv@sign
 21044  2B63  1FA7               	btfss	___aldiv@divisor+3,7
 21045  2B64  2B72               	goto	l1103
 21046  2B65  09A4               	comf	___aldiv@divisor,f
 21047  2B66  09A5               	comf	___aldiv@divisor+1,f
 21048  2B67  09A6               	comf	___aldiv@divisor+2,f
 21049  2B68  09A7               	comf	___aldiv@divisor+3,f
 21050  2B69  0AA4               	incf	___aldiv@divisor,f
 21051  2B6A  1903               	skipnz
 21052  2B6B  0AA5               	incf	___aldiv@divisor+1,f
 21053  2B6C  1903               	skipnz
 21054  2B6D  0AA6               	incf	___aldiv@divisor+2,f
 21055  2B6E  1903               	skipnz
 21056  2B6F  0AA7               	incf	___aldiv@divisor+3,f
 21057  2B70  01AD               	clrf	___aldiv@sign
 21058  2B71  0AAD               	incf	___aldiv@sign,f
 21059  2B72                     l1103:	
 21060  2B72  1FAB               	btfss	___aldiv@dividend+3,7
 21061  2B73  2B83               	goto	l7385
 21062  2B74  09A8               	comf	___aldiv@dividend,f
 21063  2B75  09A9               	comf	___aldiv@dividend+1,f
 21064  2B76  09AA               	comf	___aldiv@dividend+2,f
 21065  2B77  09AB               	comf	___aldiv@dividend+3,f
 21066  2B78  0AA8               	incf	___aldiv@dividend,f
 21067  2B79  1903               	skipnz
 21068  2B7A  0AA9               	incf	___aldiv@dividend+1,f
 21069  2B7B  1903               	skipnz
 21070  2B7C  0AAA               	incf	___aldiv@dividend+2,f
 21071  2B7D  1903               	skipnz
 21072  2B7E  0AAB               	incf	___aldiv@dividend+3,f
 21073  2B7F  3001               	movlw	1
 21074  2B80  00F9               	movwf	??___aldiv
 21075  2B81  0879               	movf	??___aldiv,w
 21076  2B82  06AD               	xorwf	___aldiv@sign,f
 21077  2B83                     l7385:	
 21078  2B83  3000               	movlw	0
 21079  2B84  00B1               	movwf	___aldiv@quotient+3
 21080  2B85  3000               	movlw	0
 21081  2B86  00B0               	movwf	___aldiv@quotient+2
 21082  2B87  3000               	movlw	0
 21083  2B88  00AF               	movwf	___aldiv@quotient+1
 21084  2B89  3000               	movlw	0
 21085  2B8A  00AE               	movwf	___aldiv@quotient
 21086  2B8B  0827               	movf	___aldiv@divisor+3,w
 21087  2B8C  0426               	iorwf	___aldiv@divisor+2,w
 21088  2B8D  0425               	iorwf	___aldiv@divisor+1,w
 21089  2B8E  0424               	iorwf	___aldiv@divisor,w
 21090  2B8F  1903               	skipnz
 21091  2B90  2BCC               	goto	l7407
 21092  2B91  01AC               	clrf	___aldiv@counter
 21093  2B92  0AAC               	incf	___aldiv@counter,f
 21094  2B93                     l7393:	
 21095  2B93  1BA7               	btfsc	___aldiv@divisor+3,7
 21096  2B94  2BA1               	goto	l7395
 21097  2B95  3001               	movlw	1
 21098  2B96                     u9245:	
 21099  2B96  35A4               	lslf	___aldiv@divisor,f
 21100  2B97  0DA5               	rlf	___aldiv@divisor+1,f
 21101  2B98  0DA6               	rlf	___aldiv@divisor+2,f
 21102  2B99  0DA7               	rlf	___aldiv@divisor+3,f
 21103  2B9A  0B89               	decfsz	9,f
 21104  2B9B  2B96               	goto	u9245
 21105  2B9C  3001               	movlw	1
 21106  2B9D  00F9               	movwf	??___aldiv
 21107  2B9E  0879               	movf	??___aldiv,w
 21108  2B9F  07AC               	addwf	___aldiv@counter,f
 21109  2BA0  2B93               	goto	l7393
 21110  2BA1                     l7395:	
 21111  2BA1  3001               	movlw	1
 21112  2BA2                     u9265:	
 21113  2BA2  35AE               	lslf	___aldiv@quotient,f
 21114  2BA3  0DAF               	rlf	___aldiv@quotient+1,f
 21115  2BA4  0DB0               	rlf	___aldiv@quotient+2,f
 21116  2BA5  0DB1               	rlf	___aldiv@quotient+3,f
 21117  2BA6  0B89               	decfsz	9,f
 21118  2BA7  2BA2               	goto	u9265
 21119  2BA8  0827               	movf	___aldiv@divisor+3,w
 21120  2BA9  022B               	subwf	___aldiv@dividend+3,w
 21121  2BAA  1D03               	skipz
 21122  2BAB  2BB6               	goto	u9275
 21123  2BAC  0826               	movf	___aldiv@divisor+2,w
 21124  2BAD  022A               	subwf	___aldiv@dividend+2,w
 21125  2BAE  1D03               	skipz
 21126  2BAF  2BB6               	goto	u9275
 21127  2BB0  0825               	movf	___aldiv@divisor+1,w
 21128  2BB1  0229               	subwf	___aldiv@dividend+1,w
 21129  2BB2  1D03               	skipz
 21130  2BB3  2BB6               	goto	u9275
 21131  2BB4  0824               	movf	___aldiv@divisor,w
 21132  2BB5  0228               	subwf	___aldiv@dividend,w
 21133  2BB6                     u9275:	
 21134  2BB6  1C03               	skipc
 21135  2BB7  2BC1               	goto	l7403
 21136  2BB8  0824               	movf	___aldiv@divisor,w
 21137  2BB9  02A8               	subwf	___aldiv@dividend,f
 21138  2BBA  0825               	movf	___aldiv@divisor+1,w
 21139  2BBB  3BA9               	subwfb	___aldiv@dividend+1,f
 21140  2BBC  0826               	movf	___aldiv@divisor+2,w
 21141  2BBD  3BAA               	subwfb	___aldiv@dividend+2,f
 21142  2BBE  0827               	movf	___aldiv@divisor+3,w
 21143  2BBF  3BAB               	subwfb	___aldiv@dividend+3,f
 21144  2BC0  142E               	bsf	___aldiv@quotient,0
 21145  2BC1                     l7403:	
 21146  2BC1  3001               	movlw	1
 21147  2BC2                     u9285:	
 21148  2BC2  36A7               	lsrf	___aldiv@divisor+3,f
 21149  2BC3  0CA6               	rrf	___aldiv@divisor+2,f
 21150  2BC4  0CA5               	rrf	___aldiv@divisor+1,f
 21151  2BC5  0CA4               	rrf	___aldiv@divisor,f
 21152  2BC6  0B89               	decfsz	9,f
 21153  2BC7  2BC2               	goto	u9285
 21154  2BC8  3001               	movlw	1
 21155  2BC9  02AC               	subwf	___aldiv@counter,f
 21156  2BCA  1D03               	btfss	3,2
 21157  2BCB  2BA1               	goto	l7395
 21158  2BCC                     l7407:	
 21159  2BCC  082D               	movf	___aldiv@sign,w
 21160  2BCD  1903               	btfsc	3,2
 21161  2BCE  2BDA               	goto	l7411
 21162  2BCF  09AE               	comf	___aldiv@quotient,f
 21163  2BD0  09AF               	comf	___aldiv@quotient+1,f
 21164  2BD1  09B0               	comf	___aldiv@quotient+2,f
 21165  2BD2  09B1               	comf	___aldiv@quotient+3,f
 21166  2BD3  0AAE               	incf	___aldiv@quotient,f
 21167  2BD4  1903               	skipnz
 21168  2BD5  0AAF               	incf	___aldiv@quotient+1,f
 21169  2BD6  1903               	skipnz
 21170  2BD7  0AB0               	incf	___aldiv@quotient+2,f
 21171  2BD8  1903               	skipnz
 21172  2BD9  0AB1               	incf	___aldiv@quotient+3,f
 21173  2BDA                     l7411:	
 21174  2BDA  0831               	movf	___aldiv@quotient+3,w
 21175  2BDB  00A7               	movwf	?___aldiv+3
 21176  2BDC  0830               	movf	___aldiv@quotient+2,w
 21177  2BDD  00A6               	movwf	?___aldiv+2
 21178  2BDE  082F               	movf	___aldiv@quotient+1,w
 21179  2BDF  00A5               	movwf	?___aldiv+1
 21180  2BE0  082E               	movf	___aldiv@quotient,w
 21181  2BE1  00A4               	movwf	?___aldiv
 21182  2BE2  0008               	return
 21183  2BE3                     __end_of___aldiv:	
 21184                           
 21185                           	psect	intentry
 21186  0004                     __pintentry:	
 21187 ;; *************** function _myIsr *****************
 21188 ;; Defined at:
 21189 ;;		line 55 in file "main.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, status,2, status,0
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21207 ;;Total ram usage:        1 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; This function calls:
 21210 ;;		Nothing
 21211 ;; This function is called by:
 21212 ;;		Interrupt level 1
 21213 ;; This function uses a non-reentrant model
 21214 ;;
 21215                           
 21216  0004                     _myIsr:	
 21217                           
 21218                           ;incstack = 0
 21219  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21220                           
 21221                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21222  0005  3180               	pagesel	$
 21223                           
 21224                           ;main.c: 57:     static uint8_t count = 0;;main.c: 59:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21225  0006  0020               	movlb	0	; select bank0
 21226  0007  1C11               	btfss	17,0	;volatile
 21227  0008  281C               	goto	i1l187
 21228  0009  0021               	movlb	1	; select bank1
 21229  000A  1C11               	btfss	17,0	;volatile
 21230  000B  281C               	goto	i1l187
 21231                           
 21232                           ;main.c: 60:         PIR1bits.TMR1IF = 0;
 21233  000C  0020               	movlb	0	; select bank0
 21234  000D  1011               	bcf	17,0	;volatile
 21235                           
 21236                           ;main.c: 61:         count++;
 21237  000E  3001               	movlw	1
 21238  000F  00F0               	movwf	??_myIsr
 21239  0010  0870               	movf	??_myIsr,w
 21240  0011  0023               	movlb	3	; select bank3
 21241  0012  07E6               	addwf	myIsr@count^(0+384),f
 21242                           
 21243                           ;main.c: 64:         if (count == 61) {
 21244  0013  303D               	movlw	61
 21245  0014  0666               	xorwf	myIsr@count^(0+384),w
 21246  0015  1D03               	btfss	3,2
 21247  0016  281C               	goto	i1l187
 21248                           
 21249                           ;main.c: 65:             tmr1_flag = 1;
 21250  0017  3001               	movlw	1
 21251  0018  00F0               	movwf	??_myIsr
 21252  0019  0870               	movf	??_myIsr,w
 21253  001A  00E7               	movwf	_tmr1_flag^(0+384)	;volatile
 21254                           
 21255                           ;main.c: 66:             count = 0;
 21256  001B  01E6               	clrf	myIsr@count^(0+384)
 21257  001C                     i1l187:	
 21258  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21259  001D  0009               	retfie
 21260  001E                     __end_of_myIsr:	
 21261  007E                     btemp	set	126	;btemp
 21262  007E                     int$flags	set	126
 21263  007E                     wtemp0	set	126
 21264  2771                     
 21265                           	psect	text7_split_1
 21266  2706                     l7021:	
 21267                           
 21268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21269  2706  0859               	movf	vfpfcnvrt@fmt,w
 21270  2707  0086               	movwf	6
 21271  2708  0187               	clrf	7
 21272  2709  3F40               	moviw [0]fsr1
 21273  270A  00F1               	movwf	strncmp@_l
 21274  270B  3F41               	moviw [1]fsr1
 21275  270C  00F2               	movwf	strncmp@_l+1
 21276  270D  30BE               	movlw	low (STR_19| (0+32768))
 21277  270E  00F3               	movwf	strncmp@_r
 21278  270F  30B9               	movlw	high (STR_19| (0+32768))
 21279  2710  00F4               	movwf	strncmp@_r+1
 21280  2711  3003               	movlw	3
 21281  2712  00F5               	movwf	strncmp@n
 21282  2713  3000               	movlw	0
 21283  2714  00F6               	movwf	strncmp@n+1
 21284  2715  31B7  2704  31A7   	fcall	_strncmp
 21285  2718  0871               	movf	?_strncmp,w
 21286  2719  0472               	iorwf	?_strncmp+1,w
 21287  271A  1903               	btfsc	3,2
 21288  271B  2F33               	goto	l7025
 21289  271C  0020               	movlb	0	; select bank0
 21290  271D  0859               	movf	vfpfcnvrt@fmt,w
 21291  271E  0086               	movwf	6
 21292  271F  0187               	clrf	7
 21293  2720  3F40               	moviw [0]fsr1
 21294  2721  00F1               	movwf	strncmp@_l
 21295  2722  3F41               	moviw [1]fsr1
 21296  2723  00F2               	movwf	strncmp@_l+1
 21297  2724  30C2               	movlw	low (STR_23| (0+32768))
 21298  2725  00F3               	movwf	strncmp@_r
 21299  2726  30B9               	movlw	high (STR_23| (0+32768))
 21300  2727  00F4               	movwf	strncmp@_r+1
 21301  2728  3003               	movlw	3
 21302  2729  00F5               	movwf	strncmp@n
 21303  272A  3000               	movlw	0
 21304  272B  00F6               	movwf	strncmp@n+1
 21305  272C  31B7  2704  31A7   	fcall	_strncmp
 21306  272F  0871               	movf	?_strncmp,w
 21307  2730  0472               	iorwf	?_strncmp+1,w
 21308  2731  1D03               	btfss	3,2
 21309  2732  2F7E               	goto	l7033
 21310  2733                     l7025:	
 21311                           
 21312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21313  2733  0020               	movlb	0	; select bank0
 21314  2734  0859               	movf	vfpfcnvrt@fmt,w
 21315  2735  0086               	movwf	6
 21316  2736  0187               	clrf	7
 21317  2737  3003               	movlw	3
 21318  2738  0781               	addwf	1,f
 21319  2739  3141               	addfsr 1,1
 21320  273A  1803               	skipnc
 21321  273B  0A81               	incf	1,f
 21322                           
 21323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21324  273C  085A               	movf	vfpfcnvrt@ap,w
 21325  273D  0086               	movwf	6
 21326  273E  0187               	clrf	7
 21327  273F  0801               	movf	1,w
 21328  2740  0084               	movwf	4
 21329  2741  0185               	clrf	5
 21330  2742  3002               	movlw	2
 21331  2743  0781               	addwf	1,f
 21332  2744  0800               	movf	0,w
 21333  2745  0021               	movlb	1	; select bank1
 21334  2746  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21335  2747  3980               	andlw	128
 21336  2748  1D03               	skipz
 21337  2749  30FF               	movlw	255
 21338  274A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21339  274B  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21340  274C  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21341  274D  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21342  274E  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21343  274F  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21344  2750  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21345                           
 21346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21347  2751  0020               	movlb	0	; select bank0
 21348  2752  0858               	movf	vfpfcnvrt@fp+1,w
 21349  2753  00B1               	movwf	dtoa@fp+1
 21350  2754  0857               	movf	vfpfcnvrt@fp,w
 21351  2755  00B0               	movwf	dtoa@fp
 21352  2756  0021               	movlb	1	; select bank1
 21353  2757  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21354  2758  0020               	movlb	0	; select bank0
 21355  2759  00B2               	movwf	dtoa@d
 21356  275A  0021               	movlb	1	; select bank1
 21357  275B  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21358  275C  0020               	movlb	0	; select bank0
 21359  275D  00B3               	movwf	dtoa@d+1
 21360  275E  0021               	movlb	1	; select bank1
 21361  275F  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21362  2760  0020               	movlb	0	; select bank0
 21363  2761  00B4               	movwf	dtoa@d+2
 21364  2762  0021               	movlb	1	; select bank1
 21365  2763  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21366  2764  0020               	movlb	0	; select bank0
 21367  2765  00B5               	movwf	dtoa@d+3
 21368  2766  0021               	movlb	1	; select bank1
 21369  2767  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21370  2768  0020               	movlb	0	; select bank0
 21371  2769  00B6               	movwf	dtoa@d+4
 21372  276A  0021               	movlb	1	; select bank1
 21373  276B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21374  276C  0020               	movlb	0	; select bank0
 21375  276D  00B7               	movwf	dtoa@d+5
 21376  276E  0021               	movlb	1	; select bank1
 21377  276F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21378  2770  0020               	movlb	0	; select bank0
 21379  2771  00B8               	movwf	dtoa@d+6
 21380  2772  0021               	movlb	1	; select bank1
 21381  2773  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21382  2774  0020               	movlb	0	; select bank0
 21383  2775  00B9               	movwf	dtoa@d+7
 21384  2776  319A  2236         	fcall	_dtoa
 21385  2778  0020               	movlb	0	; select bank0
 21386  2779  0831               	movf	?_dtoa+1,w
 21387  277A  00D8               	movwf	?_vfpfcnvrt+1
 21388  277B  0830               	movf	?_dtoa,w
 21389  277C  00D7               	movwf	?_vfpfcnvrt
 21390  277D  0008               	return
 21391  277E                     l7033:	
 21392                           
 21393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21394  277E  0020               	movlb	0	; select bank0
 21395  277F  0859               	movf	vfpfcnvrt@fmt,w
 21396  2780  0086               	movwf	6
 21397  2781  0187               	clrf	7
 21398  2782  3F40               	moviw [0]fsr1
 21399  2783  00F1               	movwf	strncmp@_l
 21400  2784  3F41               	moviw [1]fsr1
 21401  2785  00F2               	movwf	strncmp@_l+1
 21402  2786  30BF               	movlw	low ((STR_19+1)| (0+32768))
 21403  2787  00F3               	movwf	strncmp@_r
 21404  2788  30B9               	movlw	high ((STR_19+1)| (0+32768))
 21405  2789  00F4               	movwf	strncmp@_r+1
 21406  278A  3002               	movlw	2
 21407  278B  00F5               	movwf	strncmp@n
 21408  278C  3000               	movlw	0
 21409  278D  00F6               	movwf	strncmp@n+1
 21410  278E  31B7  2704  31A7   	fcall	_strncmp
 21411  2791  0871               	movf	?_strncmp,w
 21412  2792  0472               	iorwf	?_strncmp+1,w
 21413  2793  1903               	btfsc	3,2
 21414  2794  2FAC               	goto	l7037
 21415  2795  0020               	movlb	0	; select bank0
 21416  2796  0859               	movf	vfpfcnvrt@fmt,w
 21417  2797  0086               	movwf	6
 21418  2798  0187               	clrf	7
 21419  2799  3F40               	moviw [0]fsr1
 21420  279A  00F1               	movwf	strncmp@_l
 21421  279B  3F41               	moviw [1]fsr1
 21422  279C  00F2               	movwf	strncmp@_l+1
 21423  279D  30C3               	movlw	low ((STR_23+1)| (0+32768))
 21424  279E  00F3               	movwf	strncmp@_r
 21425  279F  30B9               	movlw	high ((STR_23+1)| (0+32768))
 21426  27A0  00F4               	movwf	strncmp@_r+1
 21427  27A1  3002               	movlw	2
 21428  27A2  00F5               	movwf	strncmp@n
 21429  27A3  3000               	movlw	0
 21430  27A4  00F6               	movwf	strncmp@n+1
 21431  27A5  31B7  2704  31A7   	fcall	_strncmp
 21432  27A8  0871               	movf	?_strncmp,w
 21433  27A9  0472               	iorwf	?_strncmp+1,w
 21434  27AA  1D03               	btfss	3,2
 21435  27AB  2FFE               	goto	L9
 21436  27AC                     l7037:	
 21437                           
 21438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21439  27AC  0020               	movlb	0	; select bank0
 21440  27AD  0859               	movf	vfpfcnvrt@fmt,w
 21441  27AE  0086               	movwf	6
 21442  27AF  0187               	clrf	7
 21443  27B0  3002               	movlw	2
 21444  27B1  0781               	addwf	1,f
 21445  27B2  3141               	addfsr 1,1
 21446  27B3  1803               	skipnc
 21447  27B4  0A81               	incf	1,f
 21448                           
 21449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21450  27B5  085A               	movf	vfpfcnvrt@ap,w
 21451  27B6  0086               	movwf	6
 21452  27B7  0187               	clrf	7
 21453  27B8  0801               	movf	1,w
 21454  27B9  0084               	movwf	4
 21455  27BA  0185               	clrf	5
 21456  27BB  3002               	movlw	2
 21457  27BC  0781               	addwf	1,f
 21458  27BD  3F00               	moviw [0]fsr0
 21459  27BE  00DB               	movwf	??_vfpfcnvrt
 21460  27BF  3F01               	moviw [1]fsr0
 21461  27C0  00DC               	movwf	??_vfpfcnvrt+1
 21462  27C1  085B               	movf	??_vfpfcnvrt,w
 21463  27C2  0021               	movlb	1	; select bank1
 21464  27C3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21465  27C4  0020               	movlb	0	; select bank0
 21466  27C5  085C               	movf	??_vfpfcnvrt+1,w
 21467  27C6  0021               	movlb	1	; select bank1
 21468  27C7  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21469  27C8  0D89               	rlf	9,f
 21470  27C9  3B89               	subwfb	9,f
 21471  27CA  0989               	comf	9,f
 21472  27CB  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21473  27CC  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21474  27CD  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21475  27CE  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21476  27CF  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21477  27D0  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21478                           
 21479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21480  27D1  0020               	movlb	0	; select bank0
 21481  27D2  0858               	movf	vfpfcnvrt@fp+1,w
 21482  27D3  00B1               	movwf	dtoa@fp+1
 21483  27D4  0857               	movf	vfpfcnvrt@fp,w
 21484  27D5  00B0               	movwf	dtoa@fp
 21485  27D6  0021               	movlb	1	; select bank1
 21486  27D7  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21487  27D8  0020               	movlb	0	; select bank0
 21488  27D9  00B2               	movwf	dtoa@d
 21489  27DA  0021               	movlb	1	; select bank1
 21490  27DB  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21491  27DC  0020               	movlb	0	; select bank0
 21492  27DD  00B3               	movwf	dtoa@d+1
 21493  27DE  0021               	movlb	1	; select bank1
 21494  27DF  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21495  27E0  0020               	movlb	0	; select bank0
 21496  27E1  00B4               	movwf	dtoa@d+2
 21497  27E2  0021               	movlb	1	; select bank1
 21498  27E3  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21499  27E4  0020               	movlb	0	; select bank0
 21500  27E5  00B5               	movwf	dtoa@d+3
 21501  27E6  0021               	movlb	1	; select bank1
 21502  27E7  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21503  27E8  0020               	movlb	0	; select bank0
 21504  27E9  00B6               	movwf	dtoa@d+4
 21505  27EA  0021               	movlb	1	; select bank1
 21506  27EB  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21507  27EC  0020               	movlb	0	; select bank0
 21508  27ED  00B7               	movwf	dtoa@d+5
 21509  27EE  0021               	movlb	1	; select bank1
 21510  27EF  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21511  27F0  0020               	movlb	0	; select bank0
 21512  27F1  00B8               	movwf	dtoa@d+6
 21513  27F2  0021               	movlb	1	; select bank1
 21514  27F3  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21515  27F4  0020               	movlb	0	; select bank0
 21516  27F5  00B9               	movwf	dtoa@d+7
 21517  27F6  319A  2236         	fcall	_dtoa
 21518  27F8  0020               	movlb	0	; select bank0
 21519  27F9  0831               	movf	?_dtoa+1,w
 21520  27FA  00D8               	movwf	?_vfpfcnvrt+1
 21521  27FB  0830               	movf	?_dtoa,w
 21522  27FC  00D7               	movwf	?_vfpfcnvrt
 21523  27FD  0008               	return
 21524  27FE                     L9:	
 21525  27FE                     L8:	
 21526  27FE  3188  2843         	ljmp	l7045
 21527                           
 21528                           	psect	text7_split_2
 21529  0843                     l7045:	
 21530                           
 21531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21532  0843  0020               	movlb	0	; select bank0
 21533  0844  0859               	movf	vfpfcnvrt@fmt,w
 21534  0845  0086               	movwf	6
 21535  0846  0187               	clrf	7
 21536  0847  3F40               	moviw [0]fsr1
 21537  0848  00DB               	movwf	??_vfpfcnvrt
 21538  0849  3F41               	moviw [1]fsr1
 21539  084A  00DC               	movwf	??_vfpfcnvrt+1
 21540  084B  085B               	movf	??_vfpfcnvrt,w
 21541  084C  0084               	movwf	4
 21542  084D  085C               	movf	??_vfpfcnvrt+1,w
 21543  084E  0085               	movwf	5
 21544  084F  0012               	moviw fsr0++
 21545  0850  3A64               	xorlw	100
 21546  0851  1903               	btfsc	3,2
 21547  0852  2862               	goto	l7049
 21548  0853  0859               	movf	vfpfcnvrt@fmt,w
 21549  0854  0086               	movwf	6
 21550  0855  0187               	clrf	7
 21551  0856  3F40               	moviw [0]fsr1
 21552  0857  00DB               	movwf	??_vfpfcnvrt
 21553  0858  3F41               	moviw [1]fsr1
 21554  0859  00DC               	movwf	??_vfpfcnvrt+1
 21555  085A  085B               	movf	??_vfpfcnvrt,w
 21556  085B  0084               	movwf	4
 21557  085C  085C               	movf	??_vfpfcnvrt+1,w
 21558  085D  0085               	movwf	5
 21559  085E  0012               	moviw fsr0++
 21560  085F  3A69               	xorlw	105
 21561  0860  1D03               	btfss	3,2
 21562  0861  28B3               	goto	l7057
 21563  0862                     l7049:	
 21564                           
 21565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21566  0862  0859               	movf	vfpfcnvrt@fmt,w
 21567  0863  0086               	movwf	6
 21568  0864  0187               	clrf	7
 21569  0865  3001               	movlw	1
 21570  0866  0781               	addwf	1,f
 21571  0867  3141               	addfsr 1,1
 21572  0868  1803               	skipnc
 21573  0869  0A81               	incf	1,f
 21574                           
 21575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21576  086A  085A               	movf	vfpfcnvrt@ap,w
 21577  086B  0086               	movwf	6
 21578  086C  0187               	clrf	7
 21579  086D  0801               	movf	1,w
 21580  086E  0084               	movwf	4
 21581  086F  0185               	clrf	5
 21582  0870  3002               	movlw	2
 21583  0871  0781               	addwf	1,f
 21584  0872  3F00               	moviw [0]fsr0
 21585  0873  00DB               	movwf	??_vfpfcnvrt
 21586  0874  3F01               	moviw [1]fsr0
 21587  0875  00DC               	movwf	??_vfpfcnvrt+1
 21588  0876  085B               	movf	??_vfpfcnvrt,w
 21589  0877  0021               	movlb	1	; select bank1
 21590  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21591  0879  0020               	movlb	0	; select bank0
 21592  087A  085C               	movf	??_vfpfcnvrt+1,w
 21593  087B  0021               	movlb	1	; select bank1
 21594  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21595  087D  0D89               	rlf	9,f
 21596  087E  3B89               	subwfb	9,f
 21597  087F  0989               	comf	9,f
 21598  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21599  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21600  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21601  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21602  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21603  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21604                           
 21605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21606  0886  0020               	movlb	0	; select bank0
 21607  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21608  0888  00B1               	movwf	dtoa@fp+1
 21609  0889  0857               	movf	vfpfcnvrt@fp,w
 21610  088A  00B0               	movwf	dtoa@fp
 21611  088B  0021               	movlb	1	; select bank1
 21612  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21613  088D  0020               	movlb	0	; select bank0
 21614  088E  00B2               	movwf	dtoa@d
 21615  088F  0021               	movlb	1	; select bank1
 21616  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21617  0891  0020               	movlb	0	; select bank0
 21618  0892  00B3               	movwf	dtoa@d+1
 21619  0893  0021               	movlb	1	; select bank1
 21620  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21621  0895  0020               	movlb	0	; select bank0
 21622  0896  00B4               	movwf	dtoa@d+2
 21623  0897  0021               	movlb	1	; select bank1
 21624  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21625  0899  0020               	movlb	0	; select bank0
 21626  089A  00B5               	movwf	dtoa@d+3
 21627  089B  0021               	movlb	1	; select bank1
 21628  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21629  089D  0020               	movlb	0	; select bank0
 21630  089E  00B6               	movwf	dtoa@d+4
 21631  089F  0021               	movlb	1	; select bank1
 21632  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21633  08A1  0020               	movlb	0	; select bank0
 21634  08A2  00B7               	movwf	dtoa@d+5
 21635  08A3  0021               	movlb	1	; select bank1
 21636  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21637  08A5  0020               	movlb	0	; select bank0
 21638  08A6  00B8               	movwf	dtoa@d+6
 21639  08A7  0021               	movlb	1	; select bank1
 21640  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21641  08A9  0020               	movlb	0	; select bank0
 21642  08AA  00B9               	movwf	dtoa@d+7
 21643  08AB  319A  2236         	fcall	_dtoa
 21644  08AD  0020               	movlb	0	; select bank0
 21645  08AE  0831               	movf	?_dtoa+1,w
 21646  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21647  08B0  0830               	movf	?_dtoa,w
 21648  08B1  00D7               	movwf	?_vfpfcnvrt
 21649  08B2  0008               	return
 21650  08B3                     l7057:	
 21651                           
 21652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21653  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21654  08B4  0086               	movwf	6
 21655  08B5  0187               	clrf	7
 21656  08B6  3F40               	moviw [0]fsr1
 21657  08B7  00F1               	movwf	strncmp@_l
 21658  08B8  3F41               	moviw [1]fsr1
 21659  08B9  00F2               	movwf	strncmp@_l+1
 21660  08BA  30DD               	movlw	low (STR_37| (0+32768))
 21661  08BB  00F3               	movwf	strncmp@_r
 21662  08BC  30B9               	movlw	high (STR_37| (0+32768))
 21663  08BD  00F4               	movwf	strncmp@_r+1
 21664  08BE  3002               	movlw	2
 21665  08BF  00F5               	movwf	strncmp@n
 21666  08C0  3000               	movlw	0
 21667  08C1  00F6               	movwf	strncmp@n+1
 21668  08C2  31B7  2704  3188   	fcall	_strncmp
 21669  08C5  0871               	movf	?_strncmp,w
 21670  08C6  0472               	iorwf	?_strncmp+1,w
 21671  08C7  1903               	btfsc	3,2
 21672  08C8  28E0               	goto	l7061
 21673  08C9  0020               	movlb	0	; select bank0
 21674  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21675  08CB  0086               	movwf	6
 21676  08CC  0187               	clrf	7
 21677  08CD  3F40               	moviw [0]fsr1
 21678  08CE  00F1               	movwf	strncmp@_l
 21679  08CF  3F41               	moviw [1]fsr1
 21680  08D0  00F2               	movwf	strncmp@_l+1
 21681  08D1  30E0               	movlw	low (STR_41| (0+32768))
 21682  08D2  00F3               	movwf	strncmp@_r
 21683  08D3  30B9               	movlw	high (STR_41| (0+32768))
 21684  08D4  00F4               	movwf	strncmp@_r+1
 21685  08D5  3002               	movlw	2
 21686  08D6  00F5               	movwf	strncmp@n
 21687  08D7  3000               	movlw	0
 21688  08D8  00F6               	movwf	strncmp@n+1
 21689  08D9  31B7  2704  3188   	fcall	_strncmp
 21690  08DC  0871               	movf	?_strncmp,w
 21691  08DD  0472               	iorwf	?_strncmp+1,w
 21692  08DE  1D03               	btfss	3,2
 21693  08DF  2929               	goto	l7069
 21694  08E0                     l7061:	
 21695                           
 21696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21697  08E0  0020               	movlb	0	; select bank0
 21698  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21699  08E2  0086               	movwf	6
 21700  08E3  0187               	clrf	7
 21701  08E4  3002               	movlw	2
 21702  08E5  0781               	addwf	1,f
 21703  08E6  3141               	addfsr 1,1
 21704  08E7  1803               	skipnc
 21705  08E8  0A81               	incf	1,f
 21706                           
 21707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21708  08E9  085A               	movf	vfpfcnvrt@ap,w
 21709  08EA  0086               	movwf	6
 21710  08EB  0187               	clrf	7
 21711  08EC  0801               	movf	1,w
 21712  08ED  0084               	movwf	4
 21713  08EE  0185               	clrf	5
 21714  08EF  3002               	movlw	2
 21715  08F0  0781               	addwf	1,f
 21716  08F1  3F00               	moviw [0]fsr0
 21717  08F2  0021               	movlb	1	; select bank1
 21718  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21719  08F4  3F01               	moviw [1]fsr0
 21720  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21721  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21722  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21723  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21724  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21725  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21726  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21727                           
 21728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21729  08FC  0020               	movlb	0	; select bank0
 21730  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21731  08FE  00B1               	movwf	dtoa@fp+1
 21732  08FF  0857               	movf	vfpfcnvrt@fp,w
 21733  0900  00B0               	movwf	dtoa@fp
 21734  0901  0021               	movlb	1	; select bank1
 21735  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21736  0903  0020               	movlb	0	; select bank0
 21737  0904  00B2               	movwf	dtoa@d
 21738  0905  0021               	movlb	1	; select bank1
 21739  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21740  0907  0020               	movlb	0	; select bank0
 21741  0908  00B3               	movwf	dtoa@d+1
 21742  0909  0021               	movlb	1	; select bank1
 21743  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21744  090B  0020               	movlb	0	; select bank0
 21745  090C  00B4               	movwf	dtoa@d+2
 21746  090D  0021               	movlb	1	; select bank1
 21747  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21748  090F  0020               	movlb	0	; select bank0
 21749  0910  00B5               	movwf	dtoa@d+3
 21750  0911  0021               	movlb	1	; select bank1
 21751  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21752  0913  0020               	movlb	0	; select bank0
 21753  0914  00B6               	movwf	dtoa@d+4
 21754  0915  0021               	movlb	1	; select bank1
 21755  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21756  0917  0020               	movlb	0	; select bank0
 21757  0918  00B7               	movwf	dtoa@d+5
 21758  0919  0021               	movlb	1	; select bank1
 21759  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21760  091B  0020               	movlb	0	; select bank0
 21761  091C  00B8               	movwf	dtoa@d+6
 21762  091D  0021               	movlb	1	; select bank1
 21763  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21764  091F  0020               	movlb	0	; select bank0
 21765  0920  00B9               	movwf	dtoa@d+7
 21766  0921  319A  2236         	fcall	_dtoa
 21767  0923  0020               	movlb	0	; select bank0
 21768  0924  0831               	movf	?_dtoa+1,w
 21769  0925  00D8               	movwf	?_vfpfcnvrt+1
 21770  0926  0830               	movf	?_dtoa,w
 21771  0927  00D7               	movwf	?_vfpfcnvrt
 21772  0928  0008               	return
 21773  0929                     l7069:	
 21774                           
 21775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21776  0929  0020               	movlb	0	; select bank0
 21777  092A  0859               	movf	vfpfcnvrt@fmt,w
 21778  092B  0086               	movwf	6
 21779  092C  0187               	clrf	7
 21780  092D  3F40               	moviw [0]fsr1
 21781  092E  00F1               	movwf	strncmp@_l
 21782  092F  3F41               	moviw [1]fsr1
 21783  0930  00F2               	movwf	strncmp@_l+1
 21784  0931  30CA               	movlw	low (STR_46| (0+32768))
 21785  0932  00F3               	movwf	strncmp@_r
 21786  0933  30B9               	movlw	high (STR_46| (0+32768))
 21787  0934  00F4               	movwf	strncmp@_r+1
 21788  0935  3003               	movlw	3
 21789  0936  00F5               	movwf	strncmp@n
 21790  0937  3000               	movlw	0
 21791  0938  00F6               	movwf	strncmp@n+1
 21792  0939  31B7  2704  3188   	fcall	_strncmp
 21793  093C  0871               	movf	?_strncmp,w
 21794  093D  0472               	iorwf	?_strncmp+1,w
 21795  093E  1D03               	btfss	3,2
 21796  093F  2988               	goto	l7079
 21797                           
 21798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21799  0940  0020               	movlb	0	; select bank0
 21800  0941  0859               	movf	vfpfcnvrt@fmt,w
 21801  0942  0086               	movwf	6
 21802  0943  0187               	clrf	7
 21803  0944  3003               	movlw	3
 21804  0945  0781               	addwf	1,f
 21805  0946  3141               	addfsr 1,1
 21806  0947  1803               	skipnc
 21807  0948  0A81               	incf	1,f
 21808                           
 21809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21810  0949  085A               	movf	vfpfcnvrt@ap,w
 21811  094A  0086               	movwf	6
 21812  094B  0187               	clrf	7
 21813  094C  0801               	movf	1,w
 21814  094D  0084               	movwf	4
 21815  094E  0185               	clrf	5
 21816  094F  3002               	movlw	2
 21817  0950  0781               	addwf	1,f
 21818  0951  0800               	movf	0,w
 21819  0952  0021               	movlb	1	; select bank1
 21820  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21821  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21822  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21823  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21824  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21825  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21826  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21827  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21828                           
 21829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21830  095B  0020               	movlb	0	; select bank0
 21831  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21832  095D  00B1               	movwf	otoa@fp+1
 21833  095E  0857               	movf	vfpfcnvrt@fp,w
 21834  095F  00B0               	movwf	otoa@fp
 21835  0960  0021               	movlb	1	; select bank1
 21836  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21837  0962  0020               	movlb	0	; select bank0
 21838  0963  00B2               	movwf	otoa@d
 21839  0964  0021               	movlb	1	; select bank1
 21840  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21841  0966  0020               	movlb	0	; select bank0
 21842  0967  00B3               	movwf	otoa@d+1
 21843  0968  0021               	movlb	1	; select bank1
 21844  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21845  096A  0020               	movlb	0	; select bank0
 21846  096B  00B4               	movwf	otoa@d+2
 21847  096C  0021               	movlb	1	; select bank1
 21848  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21849  096E  0020               	movlb	0	; select bank0
 21850  096F  00B5               	movwf	otoa@d+3
 21851  0970  0021               	movlb	1	; select bank1
 21852  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21853  0972  0020               	movlb	0	; select bank0
 21854  0973  00B6               	movwf	otoa@d+4
 21855  0974  0021               	movlb	1	; select bank1
 21856  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21857  0976  0020               	movlb	0	; select bank0
 21858  0977  00B7               	movwf	otoa@d+5
 21859  0978  0021               	movlb	1	; select bank1
 21860  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21861  097A  0020               	movlb	0	; select bank0
 21862  097B  00B8               	movwf	otoa@d+6
 21863  097C  0021               	movlb	1	; select bank1
 21864  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21865  097E  0020               	movlb	0	; select bank0
 21866  097F  00B9               	movwf	otoa@d+7
 21867  0980  31A5  2522         	fcall	_otoa
 21868  0982  0020               	movlb	0	; select bank0
 21869  0983  0831               	movf	?_otoa+1,w
 21870  0984  00D8               	movwf	?_vfpfcnvrt+1
 21871  0985  0830               	movf	?_otoa,w
 21872  0986  00D7               	movwf	?_vfpfcnvrt
 21873  0987  0008               	return
 21874  0988                     l7079:	
 21875                           
 21876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21877  0988  0020               	movlb	0	; select bank0
 21878  0989  0859               	movf	vfpfcnvrt@fmt,w
 21879  098A  0086               	movwf	6
 21880  098B  0187               	clrf	7
 21881  098C  3F40               	moviw [0]fsr1
 21882  098D  00F1               	movwf	strncmp@_l
 21883  098E  3F41               	moviw [1]fsr1
 21884  098F  00F2               	movwf	strncmp@_l+1
 21885  0990  30CB               	movlw	low ((STR_46+1)| (0+32768))
 21886  0991  00F3               	movwf	strncmp@_r
 21887  0992  30B9               	movlw	high ((STR_46+1)| (0+32768))
 21888  0993  00F4               	movwf	strncmp@_r+1
 21889  0994  3002               	movlw	2
 21890  0995  00F5               	movwf	strncmp@n
 21891  0996  3000               	movlw	0
 21892  0997  00F6               	movwf	strncmp@n+1
 21893  0998  31B7  2704  3188   	fcall	_strncmp
 21894  099B  0871               	movf	?_strncmp,w
 21895  099C  0472               	iorwf	?_strncmp+1,w
 21896  099D  1D03               	btfss	3,2
 21897  099E  29E8               	goto	l7089
 21898                           
 21899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21900  099F  0020               	movlb	0	; select bank0
 21901  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21902  09A1  0086               	movwf	6
 21903  09A2  0187               	clrf	7
 21904  09A3  3002               	movlw	2
 21905  09A4  0781               	addwf	1,f
 21906  09A5  3141               	addfsr 1,1
 21907  09A6  1803               	skipnc
 21908  09A7  0A81               	incf	1,f
 21909                           
 21910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21911  09A8  085A               	movf	vfpfcnvrt@ap,w
 21912  09A9  0086               	movwf	6
 21913  09AA  0187               	clrf	7
 21914  09AB  0801               	movf	1,w
 21915  09AC  0084               	movwf	4
 21916  09AD  0185               	clrf	5
 21917  09AE  3002               	movlw	2
 21918  09AF  0781               	addwf	1,f
 21919  09B0  3F00               	moviw [0]fsr0
 21920  09B1  0021               	movlb	1	; select bank1
 21921  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21922  09B3  3F01               	moviw [1]fsr0
 21923  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21924  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21925  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21926  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21927  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21928  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21929  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21930                           
 21931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21932  09BB  0020               	movlb	0	; select bank0
 21933  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21934  09BD  00B1               	movwf	otoa@fp+1
 21935  09BE  0857               	movf	vfpfcnvrt@fp,w
 21936  09BF  00B0               	movwf	otoa@fp
 21937  09C0  0021               	movlb	1	; select bank1
 21938  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21939  09C2  0020               	movlb	0	; select bank0
 21940  09C3  00B2               	movwf	otoa@d
 21941  09C4  0021               	movlb	1	; select bank1
 21942  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21943  09C6  0020               	movlb	0	; select bank0
 21944  09C7  00B3               	movwf	otoa@d+1
 21945  09C8  0021               	movlb	1	; select bank1
 21946  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21947  09CA  0020               	movlb	0	; select bank0
 21948  09CB  00B4               	movwf	otoa@d+2
 21949  09CC  0021               	movlb	1	; select bank1
 21950  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21951  09CE  0020               	movlb	0	; select bank0
 21952  09CF  00B5               	movwf	otoa@d+3
 21953  09D0  0021               	movlb	1	; select bank1
 21954  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21955  09D2  0020               	movlb	0	; select bank0
 21956  09D3  00B6               	movwf	otoa@d+4
 21957  09D4  0021               	movlb	1	; select bank1
 21958  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21959  09D6  0020               	movlb	0	; select bank0
 21960  09D7  00B7               	movwf	otoa@d+5
 21961  09D8  0021               	movlb	1	; select bank1
 21962  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21963  09DA  0020               	movlb	0	; select bank0
 21964  09DB  00B8               	movwf	otoa@d+6
 21965  09DC  0021               	movlb	1	; select bank1
 21966  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21967  09DE  0020               	movlb	0	; select bank0
 21968  09DF  00B9               	movwf	otoa@d+7
 21969  09E0  31A5  2522         	fcall	_otoa
 21970  09E2  0020               	movlb	0	; select bank0
 21971  09E3  0831               	movf	?_otoa+1,w
 21972  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21973  09E5  0830               	movf	?_otoa,w
 21974  09E6  00D7               	movwf	?_vfpfcnvrt
 21975  09E7  0008               	return
 21976  09E8                     l7089:	
 21977                           
 21978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21979  09E8  0020               	movlb	0	; select bank0
 21980  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21981  09EA  0086               	movwf	6
 21982  09EB  0187               	clrf	7
 21983  09EC  3F40               	moviw [0]fsr1
 21984  09ED  00DB               	movwf	??_vfpfcnvrt
 21985  09EE  3F41               	moviw [1]fsr1
 21986  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21987  09F0  085B               	movf	??_vfpfcnvrt,w
 21988  09F1  0084               	movwf	4
 21989  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21990  09F3  0085               	movwf	5
 21991  09F4  0012               	moviw fsr0++
 21992  09F5  3A6F               	xorlw	111
 21993  09F6  1D03               	btfss	3,2
 21994  09F7  2A40               	goto	l7099
 21995                           
 21996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21997  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21998  09F9  0086               	movwf	6
 21999  09FA  0187               	clrf	7
 22000  09FB  3001               	movlw	1
 22001  09FC  0781               	addwf	1,f
 22002  09FD  3141               	addfsr 1,1
 22003  09FE  1803               	skipnc
 22004  09FF  0A81               	incf	1,f
 22005                           
 22006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 22007  0A00  085A               	movf	vfpfcnvrt@ap,w
 22008  0A01  0086               	movwf	6
 22009  0A02  0187               	clrf	7
 22010  0A03  0801               	movf	1,w
 22011  0A04  0084               	movwf	4
 22012  0A05  0185               	clrf	5
 22013  0A06  3002               	movlw	2
 22014  0A07  0781               	addwf	1,f
 22015  0A08  3F00               	moviw [0]fsr0
 22016  0A09  0021               	movlb	1	; select bank1
 22017  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22018  0A0B  3F01               	moviw [1]fsr0
 22019  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22020  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22021  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22022  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22023  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22024  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22025  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22026                           
 22027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 22028  0A13  0020               	movlb	0	; select bank0
 22029  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 22030  0A15  00B1               	movwf	otoa@fp+1
 22031  0A16  0857               	movf	vfpfcnvrt@fp,w
 22032  0A17  00B0               	movwf	otoa@fp
 22033  0A18  0021               	movlb	1	; select bank1
 22034  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22035  0A1A  0020               	movlb	0	; select bank0
 22036  0A1B  00B2               	movwf	otoa@d
 22037  0A1C  0021               	movlb	1	; select bank1
 22038  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22039  0A1E  0020               	movlb	0	; select bank0
 22040  0A1F  00B3               	movwf	otoa@d+1
 22041  0A20  0021               	movlb	1	; select bank1
 22042  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22043  0A22  0020               	movlb	0	; select bank0
 22044  0A23  00B4               	movwf	otoa@d+2
 22045  0A24  0021               	movlb	1	; select bank1
 22046  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22047  0A26  0020               	movlb	0	; select bank0
 22048  0A27  00B5               	movwf	otoa@d+3
 22049  0A28  0021               	movlb	1	; select bank1
 22050  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22051  0A2A  0020               	movlb	0	; select bank0
 22052  0A2B  00B6               	movwf	otoa@d+4
 22053  0A2C  0021               	movlb	1	; select bank1
 22054  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22055  0A2E  0020               	movlb	0	; select bank0
 22056  0A2F  00B7               	movwf	otoa@d+5
 22057  0A30  0021               	movlb	1	; select bank1
 22058  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22059  0A32  0020               	movlb	0	; select bank0
 22060  0A33  00B8               	movwf	otoa@d+6
 22061  0A34  0021               	movlb	1	; select bank1
 22062  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22063  0A36  0020               	movlb	0	; select bank0
 22064  0A37  00B9               	movwf	otoa@d+7
 22065  0A38  31A5  2522         	fcall	_otoa
 22066  0A3A  0020               	movlb	0	; select bank0
 22067  0A3B  0831               	movf	?_otoa+1,w
 22068  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 22069  0A3D  0830               	movf	?_otoa,w
 22070  0A3E  00D7               	movwf	?_vfpfcnvrt
 22071  0A3F  0008               	return
 22072  0A40                     l7099:	
 22073                           
 22074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22075  0A40  0859               	movf	vfpfcnvrt@fmt,w
 22076  0A41  0086               	movwf	6
 22077  0A42  0187               	clrf	7
 22078  0A43  3F40               	moviw [0]fsr1
 22079  0A44  00F1               	movwf	strncmp@_l
 22080  0A45  3F41               	moviw [1]fsr1
 22081  0A46  00F2               	movwf	strncmp@_l+1
 22082  0A47  30E6               	movlw	low (STR_56| (0+32768))
 22083  0A48  00F3               	movwf	strncmp@_r
 22084  0A49  30B9               	movlw	high (STR_56| (0+32768))
 22085  0A4A  00F4               	movwf	strncmp@_r+1
 22086  0A4B  3002               	movlw	2
 22087  0A4C  00F5               	movwf	strncmp@n
 22088  0A4D  3000               	movlw	0
 22089  0A4E  00F6               	movwf	strncmp@n+1
 22090  0A4F  31B7  2704  3188   	fcall	_strncmp
 22091  0A52  0871               	movf	?_strncmp,w
 22092  0A53  0472               	iorwf	?_strncmp+1,w
 22093  0A54  1D03               	btfss	3,2
 22094  0A55  2A9F               	goto	l7109
 22095                           
 22096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22097  0A56  0020               	movlb	0	; select bank0
 22098  0A57  0859               	movf	vfpfcnvrt@fmt,w
 22099  0A58  0086               	movwf	6
 22100  0A59  0187               	clrf	7
 22101  0A5A  3002               	movlw	2
 22102  0A5B  0781               	addwf	1,f
 22103  0A5C  3141               	addfsr 1,1
 22104  0A5D  1803               	skipnc
 22105  0A5E  0A81               	incf	1,f
 22106                           
 22107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22108  0A5F  085A               	movf	vfpfcnvrt@ap,w
 22109  0A60  0086               	movwf	6
 22110  0A61  0187               	clrf	7
 22111  0A62  0801               	movf	1,w
 22112  0A63  0084               	movwf	4
 22113  0A64  0185               	clrf	5
 22114  0A65  3002               	movlw	2
 22115  0A66  0781               	addwf	1,f
 22116  0A67  3F00               	moviw [0]fsr0
 22117  0A68  0021               	movlb	1	; select bank1
 22118  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22119  0A6A  3F01               	moviw [1]fsr0
 22120  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22121  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22122  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22123  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22124  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22125  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22126  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22127                           
 22128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22129  0A72  0020               	movlb	0	; select bank0
 22130  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 22131  0A74  00B1               	movwf	otoa@fp+1
 22132  0A75  0857               	movf	vfpfcnvrt@fp,w
 22133  0A76  00B0               	movwf	otoa@fp
 22134  0A77  0021               	movlb	1	; select bank1
 22135  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22136  0A79  0020               	movlb	0	; select bank0
 22137  0A7A  00B2               	movwf	otoa@d
 22138  0A7B  0021               	movlb	1	; select bank1
 22139  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22140  0A7D  0020               	movlb	0	; select bank0
 22141  0A7E  00B3               	movwf	otoa@d+1
 22142  0A7F  0021               	movlb	1	; select bank1
 22143  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22144  0A81  0020               	movlb	0	; select bank0
 22145  0A82  00B4               	movwf	otoa@d+2
 22146  0A83  0021               	movlb	1	; select bank1
 22147  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22148  0A85  0020               	movlb	0	; select bank0
 22149  0A86  00B5               	movwf	otoa@d+3
 22150  0A87  0021               	movlb	1	; select bank1
 22151  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22152  0A89  0020               	movlb	0	; select bank0
 22153  0A8A  00B6               	movwf	otoa@d+4
 22154  0A8B  0021               	movlb	1	; select bank1
 22155  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22156  0A8D  0020               	movlb	0	; select bank0
 22157  0A8E  00B7               	movwf	otoa@d+5
 22158  0A8F  0021               	movlb	1	; select bank1
 22159  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22160  0A91  0020               	movlb	0	; select bank0
 22161  0A92  00B8               	movwf	otoa@d+6
 22162  0A93  0021               	movlb	1	; select bank1
 22163  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22164  0A95  0020               	movlb	0	; select bank0
 22165  0A96  00B9               	movwf	otoa@d+7
 22166  0A97  31A5  2522         	fcall	_otoa
 22167  0A99  0020               	movlb	0	; select bank0
 22168  0A9A  0831               	movf	?_otoa+1,w
 22169  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 22170  0A9C  0830               	movf	?_otoa,w
 22171  0A9D  00D7               	movwf	?_vfpfcnvrt
 22172  0A9E  0008               	return
 22173  0A9F                     l7109:	
 22174                           
 22175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22176  0A9F  0020               	movlb	0	; select bank0
 22177  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 22178  0AA1  0086               	movwf	6
 22179  0AA2  0187               	clrf	7
 22180  0AA3  3F40               	moviw [0]fsr1
 22181  0AA4  00F1               	movwf	strncmp@_l
 22182  0AA5  3F41               	moviw [1]fsr1
 22183  0AA6  00F2               	movwf	strncmp@_l+1
 22184  0AA7  30C6               	movlw	low (STR_61| (0+32768))
 22185  0AA8  00F3               	movwf	strncmp@_r
 22186  0AA9  30B9               	movlw	high (STR_61| (0+32768))
 22187  0AAA  00F4               	movwf	strncmp@_r+1
 22188  0AAB  3003               	movlw	3
 22189  0AAC  00F5               	movwf	strncmp@n
 22190  0AAD  3000               	movlw	0
 22191  0AAE  00F6               	movwf	strncmp@n+1
 22192  0AAF  31B7  2704  3188   	fcall	_strncmp
 22193  0AB2  0871               	movf	?_strncmp,w
 22194  0AB3  0472               	iorwf	?_strncmp+1,w
 22195  0AB4  1D03               	btfss	3,2
 22196  0AB5  2B36               	goto	l7121
 22197                           
 22198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22199  0AB6  0020               	movlb	0	; select bank0
 22200  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22201  0AB8  0086               	movwf	6
 22202  0AB9  0187               	clrf	7
 22203  0ABA  3003               	movlw	3
 22204  0ABB  0781               	addwf	1,f
 22205  0ABC  3141               	addfsr 1,1
 22206  0ABD  1803               	skipnc
 22207  0ABE  0A81               	incf	1,f
 22208                           
 22209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22210  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22211  0AC0  0086               	movwf	6
 22212  0AC1  0187               	clrf	7
 22213  0AC2  0801               	movf	1,w
 22214  0AC3  0084               	movwf	4
 22215  0AC4  0185               	clrf	5
 22216  0AC5  3002               	movlw	2
 22217  0AC6  0781               	addwf	1,f
 22218  0AC7  3F00               	moviw [0]fsr0
 22219  0AC8  0021               	movlb	1	; select bank1
 22220  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22221  0ACA  3F01               	moviw [1]fsr0
 22222  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22223                           
 22224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22225  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22226  0ACD  0086               	movwf	6
 22227  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22228  0ACF  0087               	movwf	7
 22229  0AD0  0022               	movlb	2	; select bank2
 22230  0AD1  0862               	movf	_nout^(0+256),w
 22231  0AD2  0081               	movwf	1
 22232  0AD3  2B32               	goto	l7117
 22233  0AD4                     l7123:	
 22234                           
 22235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22236  0AD4  0020               	movlb	0	; select bank0
 22237  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22238  0AD6  0086               	movwf	6
 22239  0AD7  0187               	clrf	7
 22240  0AD8  3002               	movlw	2
 22241  0AD9  0781               	addwf	1,f
 22242  0ADA  3141               	addfsr 1,1
 22243  0ADB  1803               	skipnc
 22244  0ADC  0A81               	incf	1,f
 22245                           
 22246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22247  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22248  0ADE  0086               	movwf	6
 22249  0ADF  0187               	clrf	7
 22250  0AE0  0801               	movf	1,w
 22251  0AE1  0084               	movwf	4
 22252  0AE2  0185               	clrf	5
 22253  0AE3  3002               	movlw	2
 22254  0AE4  0781               	addwf	1,f
 22255  0AE5  3F00               	moviw [0]fsr0
 22256  0AE6  0021               	movlb	1	; select bank1
 22257  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22258  0AE8  3F01               	moviw [1]fsr0
 22259  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22260                           
 22261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22262  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22263  0AEB  0086               	movwf	6
 22264  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22265  0AED  0087               	movwf	7
 22266  0AEE  0022               	movlb	2	; select bank2
 22267  0AEF  0862               	movf	_nout^(0+256),w
 22268  0AF0  3FC0               	movwi [0]fsr1
 22269  0AF1  0863               	movf	(_nout+1)^(0+256),w
 22270  0AF2  3FC1               	movwi [1]fsr1
 22271  0AF3  2B32               	goto	l7117
 22272  0AF4                     l7135:	
 22273                           
 22274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22275  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22276  0AF5  0086               	movwf	6
 22277  0AF6  0187               	clrf	7
 22278  0AF7  3001               	movlw	1
 22279  0AF8  0781               	addwf	1,f
 22280  0AF9  3141               	addfsr 1,1
 22281  0AFA  1803               	skipnc
 22282  0AFB  0A81               	incf	1,f
 22283                           
 22284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22285  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22286  0AFD  0086               	movwf	6
 22287  0AFE  0187               	clrf	7
 22288  0AFF  0801               	movf	1,w
 22289  0B00  0084               	movwf	4
 22290  0B01  0185               	clrf	5
 22291  0B02  3002               	movlw	2
 22292  0B03  0781               	addwf	1,f
 22293  0B04  3F00               	moviw [0]fsr0
 22294  0B05  0021               	movlb	1	; select bank1
 22295  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22296  0B07  3F01               	moviw [1]fsr0
 22297  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22298                           
 22299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22300  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22301  0B0A  0086               	movwf	6
 22302  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22303  0B0C  0087               	movwf	7
 22304  0B0D  0022               	movlb	2	; select bank2
 22305  0B0E  0862               	movf	_nout^(0+256),w
 22306  0B0F  3FC0               	movwi [0]fsr1
 22307  0B10  0863               	movf	(_nout+1)^(0+256),w
 22308  0B11  3FC1               	movwi [1]fsr1
 22309  0B12  2B32               	goto	l7117
 22310  0B13                     l7147:	
 22311                           
 22312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22313  0B13  0020               	movlb	0	; select bank0
 22314  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22315  0B15  0086               	movwf	6
 22316  0B16  0187               	clrf	7
 22317  0B17  3002               	movlw	2
 22318  0B18  0781               	addwf	1,f
 22319  0B19  3141               	addfsr 1,1
 22320  0B1A  1803               	skipnc
 22321  0B1B  0A81               	incf	1,f
 22322                           
 22323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22324  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22325  0B1D  0086               	movwf	6
 22326  0B1E  0187               	clrf	7
 22327  0B1F  0801               	movf	1,w
 22328  0B20  0084               	movwf	4
 22329  0B21  0185               	clrf	5
 22330  0B22  3002               	movlw	2
 22331  0B23  0781               	addwf	1,f
 22332  0B24  3F00               	moviw [0]fsr0
 22333  0B25  0021               	movlb	1	; select bank1
 22334  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22335  0B27  3F01               	moviw [1]fsr0
 22336  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22337                           
 22338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22339  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22340  0B2A  0086               	movwf	6
 22341  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22342  0B2C  0087               	movwf	7
 22343  0B2D  0022               	movlb	2	; select bank2
 22344  0B2E  0862               	movf	_nout^(0+256),w
 22345  0B2F  3FC0               	movwi [0]fsr1
 22346  0B30  0863               	movf	(_nout+1)^(0+256),w
 22347  0B31  3FC1               	movwi [1]fsr1
 22348  0B32                     l7117:	
 22349                           
 22350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22351  0B32  0020               	movlb	0	; select bank0
 22352  0B33  01D7               	clrf	?_vfpfcnvrt
 22353  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22354  0B35  0008               	return
 22355  0B36                     l7121:	
 22356                           
 22357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22358  0B36  0020               	movlb	0	; select bank0
 22359  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22360  0B38  0086               	movwf	6
 22361  0B39  0187               	clrf	7
 22362  0B3A  3F40               	moviw [0]fsr1
 22363  0B3B  00F1               	movwf	strncmp@_l
 22364  0B3C  3F41               	moviw [1]fsr1
 22365  0B3D  00F2               	movwf	strncmp@_l+1
 22366  0B3E  30C7               	movlw	low ((STR_61+1)| (0+32768))
 22367  0B3F  00F3               	movwf	strncmp@_r
 22368  0B40  30B9               	movlw	high ((STR_61+1)| (0+32768))
 22369  0B41  00F4               	movwf	strncmp@_r+1
 22370  0B42  3002               	movlw	2
 22371  0B43  00F5               	movwf	strncmp@n
 22372  0B44  3000               	movlw	0
 22373  0B45  00F6               	movwf	strncmp@n+1
 22374  0B46  31B7  2704  3188   	fcall	_strncmp
 22375  0B49  0871               	movf	?_strncmp,w
 22376  0B4A  0472               	iorwf	?_strncmp+1,w
 22377  0B4B  1903               	btfsc	3,2
 22378  0B4C  2AD4               	goto	l7123
 22379                           
 22380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22381  0B4D  0020               	movlb	0	; select bank0
 22382  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22383  0B4F  0086               	movwf	6
 22384  0B50  0187               	clrf	7
 22385  0B51  3F40               	moviw [0]fsr1
 22386  0B52  00DB               	movwf	??_vfpfcnvrt
 22387  0B53  3F41               	moviw [1]fsr1
 22388  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22389  0B55  085B               	movf	??_vfpfcnvrt,w
 22390  0B56  0084               	movwf	4
 22391  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22392  0B58  0085               	movwf	5
 22393  0B59  0012               	moviw fsr0++
 22394  0B5A  3A6E               	xorlw	110
 22395  0B5B  1903               	btfsc	3,2
 22396  0B5C  2AF4               	goto	l7135
 22397                           
 22398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22399  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22400  0B5E  0086               	movwf	6
 22401  0B5F  0187               	clrf	7
 22402  0B60  3F40               	moviw [0]fsr1
 22403  0B61  00F1               	movwf	strncmp@_l
 22404  0B62  3F41               	moviw [1]fsr1
 22405  0B63  00F2               	movwf	strncmp@_l+1
 22406  0B64  30E3               	movlw	low (STR_71| (0+32768))
 22407  0B65  00F3               	movwf	strncmp@_r
 22408  0B66  30B9               	movlw	high (STR_71| (0+32768))
 22409  0B67  00F4               	movwf	strncmp@_r+1
 22410  0B68  3002               	movlw	2
 22411  0B69  00F5               	movwf	strncmp@n
 22412  0B6A  3000               	movlw	0
 22413  0B6B  00F6               	movwf	strncmp@n+1
 22414  0B6C  31B7  2704  3188   	fcall	_strncmp
 22415  0B6F  0871               	movf	?_strncmp,w
 22416  0B70  0472               	iorwf	?_strncmp+1,w
 22417  0B71  1903               	btfsc	3,2
 22418  0B72  2B13               	goto	l7147
 22419                           
 22420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22421  0B73  0020               	movlb	0	; select bank0
 22422  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22423  0B75  0086               	movwf	6
 22424  0B76  0187               	clrf	7
 22425  0B77  3F40               	moviw [0]fsr1
 22426  0B78  00DB               	movwf	??_vfpfcnvrt
 22427  0B79  3F41               	moviw [1]fsr1
 22428  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22429  0B7B  085B               	movf	??_vfpfcnvrt,w
 22430  0B7C  0084               	movwf	4
 22431  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22432  0B7E  0085               	movwf	5
 22433  0B7F  0012               	moviw fsr0++
 22434  0B80  3A70               	xorlw	112
 22435  0B81  1D03               	btfss	3,2
 22436  0B82  2BCF               	goto	l7167
 22437                           
 22438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22439  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22440  0B84  0086               	movwf	6
 22441  0B85  0187               	clrf	7
 22442  0B86  3001               	movlw	1
 22443  0B87  0781               	addwf	1,f
 22444  0B88  3141               	addfsr 1,1
 22445  0B89  1803               	skipnc
 22446  0B8A  0A81               	incf	1,f
 22447                           
 22448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22449  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22450  0B8C  0086               	movwf	6
 22451  0B8D  0187               	clrf	7
 22452  0B8E  0801               	movf	1,w
 22453  0B8F  0084               	movwf	4
 22454  0B90  0185               	clrf	5
 22455  0B91  3002               	movlw	2
 22456  0B92  0781               	addwf	1,f
 22457  0B93  3F00               	moviw [0]fsr0
 22458  0B94  0021               	movlb	1	; select bank1
 22459  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22460  0B96  3F01               	moviw [1]fsr0
 22461  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22462  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22463  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22464  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22465  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22466  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22467  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22468                           
 22469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22470  0B9E  0020               	movlb	0	; select bank0
 22471  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22472  0BA0  00B1               	movwf	xtoa@fp+1
 22473  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22474  0BA2  00B0               	movwf	xtoa@fp
 22475  0BA3  0021               	movlb	1	; select bank1
 22476  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22477  0BA5  0020               	movlb	0	; select bank0
 22478  0BA6  00B2               	movwf	xtoa@d
 22479  0BA7  0021               	movlb	1	; select bank1
 22480  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22481  0BA9  0020               	movlb	0	; select bank0
 22482  0BAA  00B3               	movwf	xtoa@d+1
 22483  0BAB  0021               	movlb	1	; select bank1
 22484  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22485  0BAD  0020               	movlb	0	; select bank0
 22486  0BAE  00B4               	movwf	xtoa@d+2
 22487  0BAF  0021               	movlb	1	; select bank1
 22488  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22489  0BB1  0020               	movlb	0	; select bank0
 22490  0BB2  00B5               	movwf	xtoa@d+3
 22491  0BB3  0021               	movlb	1	; select bank1
 22492  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22493  0BB5  0020               	movlb	0	; select bank0
 22494  0BB6  00B6               	movwf	xtoa@d+4
 22495  0BB7  0021               	movlb	1	; select bank1
 22496  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22497  0BB9  0020               	movlb	0	; select bank0
 22498  0BBA  00B7               	movwf	xtoa@d+5
 22499  0BBB  0021               	movlb	1	; select bank1
 22500  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22501  0BBD  0020               	movlb	0	; select bank0
 22502  0BBE  00B8               	movwf	xtoa@d+6
 22503  0BBF  0021               	movlb	1	; select bank1
 22504  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22505  0BC1  0020               	movlb	0	; select bank0
 22506  0BC2  00B9               	movwf	xtoa@d+7
 22507  0BC3  3078               	movlw	120
 22508  0BC4  00DB               	movwf	??_vfpfcnvrt
 22509  0BC5  085B               	movf	??_vfpfcnvrt,w
 22510  0BC6  00BA               	movwf	xtoa@x
 22511  0BC7  319B  2389         	fcall	_xtoa
 22512  0BC9  0020               	movlb	0	; select bank0
 22513  0BCA  0831               	movf	?_xtoa+1,w
 22514  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22515  0BCC  0830               	movf	?_xtoa,w
 22516  0BCD  00D7               	movwf	?_vfpfcnvrt
 22517  0BCE  0008               	return
 22518  0BCF                     l7167:	
 22519                           
 22520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22521  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22522  0BD0  0086               	movwf	6
 22523  0BD1  0187               	clrf	7
 22524  0BD2  3F40               	moviw [0]fsr1
 22525  0BD3  00DB               	movwf	??_vfpfcnvrt
 22526  0BD4  3F41               	moviw [1]fsr1
 22527  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22528  0BD6  085B               	movf	??_vfpfcnvrt,w
 22529  0BD7  0084               	movwf	4
 22530  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22531  0BD9  0085               	movwf	5
 22532  0BDA  0012               	moviw fsr0++
 22533  0BDB  3A73               	xorlw	115
 22534  0BDC  1D03               	btfss	3,2
 22535  0BDD  2C08               	goto	l7177
 22536                           
 22537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22538  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22539  0BDF  0086               	movwf	6
 22540  0BE0  0187               	clrf	7
 22541  0BE1  3001               	movlw	1
 22542  0BE2  0781               	addwf	1,f
 22543  0BE3  3141               	addfsr 1,1
 22544  0BE4  1803               	skipnc
 22545  0BE5  0A81               	incf	1,f
 22546                           
 22547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22548  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22549  0BE7  0086               	movwf	6
 22550  0BE8  0187               	clrf	7
 22551  0BE9  0801               	movf	1,w
 22552  0BEA  0084               	movwf	4
 22553  0BEB  0185               	clrf	5
 22554  0BEC  3002               	movlw	2
 22555  0BED  0781               	addwf	1,f
 22556  0BEE  3F00               	moviw [0]fsr0
 22557  0BEF  0021               	movlb	1	; select bank1
 22558  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22559  0BF1  3F01               	moviw [1]fsr0
 22560  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22561                           
 22562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22563  0BF3  0020               	movlb	0	; select bank0
 22564  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22565  0BF5  00A1               	movwf	stoa@fp+1
 22566  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22567  0BF7  00A0               	movwf	stoa@fp
 22568  0BF8  0021               	movlb	1	; select bank1
 22569  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22570  0BFA  0020               	movlb	0	; select bank0
 22571  0BFB  00A3               	movwf	stoa@s+1
 22572  0BFC  0021               	movlb	1	; select bank1
 22573  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22574  0BFE  0020               	movlb	0	; select bank0
 22575  0BFF  00A2               	movwf	stoa@s
 22576  0C00  31AF  273B         	fcall	_stoa
 22577  0C02  0020               	movlb	0	; select bank0
 22578  0C03  0821               	movf	?_stoa+1,w
 22579  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22580  0C05  0820               	movf	?_stoa,w
 22581  0C06  00D7               	movwf	?_vfpfcnvrt
 22582  0C07  0008               	return
 22583  0C08                     l7177:	
 22584                           
 22585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22586  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22587  0C09  0086               	movwf	6
 22588  0C0A  0187               	clrf	7
 22589  0C0B  3F40               	moviw [0]fsr1
 22590  0C0C  00F1               	movwf	strncmp@_l
 22591  0C0D  3F41               	moviw [1]fsr1
 22592  0C0E  00F2               	movwf	strncmp@_l+1
 22593  0C0F  30CE               	movlw	low (STR_76| (0+32768))
 22594  0C10  00F3               	movwf	strncmp@_r
 22595  0C11  30B9               	movlw	high (STR_76| (0+32768))
 22596  0C12  00F4               	movwf	strncmp@_r+1
 22597  0C13  3003               	movlw	3
 22598  0C14  00F5               	movwf	strncmp@n
 22599  0C15  3000               	movlw	0
 22600  0C16  00F6               	movwf	strncmp@n+1
 22601  0C17  31B7  2704  3188   	fcall	_strncmp
 22602  0C1A  0871               	movf	?_strncmp,w
 22603  0C1B  0472               	iorwf	?_strncmp+1,w
 22604  0C1C  1D03               	btfss	3,2
 22605  0C1D  2C66               	goto	l7187
 22606                           
 22607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22608  0C1E  0020               	movlb	0	; select bank0
 22609  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22610  0C20  0086               	movwf	6
 22611  0C21  0187               	clrf	7
 22612  0C22  3003               	movlw	3
 22613  0C23  0781               	addwf	1,f
 22614  0C24  3141               	addfsr 1,1
 22615  0C25  1803               	skipnc
 22616  0C26  0A81               	incf	1,f
 22617                           
 22618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22619  0C27  085A               	movf	vfpfcnvrt@ap,w
 22620  0C28  0086               	movwf	6
 22621  0C29  0187               	clrf	7
 22622  0C2A  0801               	movf	1,w
 22623  0C2B  0084               	movwf	4
 22624  0C2C  0185               	clrf	5
 22625  0C2D  3002               	movlw	2
 22626  0C2E  0781               	addwf	1,f
 22627  0C2F  0800               	movf	0,w
 22628  0C30  0021               	movlb	1	; select bank1
 22629  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22630  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22631  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22632  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22633  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22634  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22635  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22636  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22637                           
 22638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22639  0C39  0020               	movlb	0	; select bank0
 22640  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22641  0C3B  00B1               	movwf	utoa@fp+1
 22642  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22643  0C3D  00B0               	movwf	utoa@fp
 22644  0C3E  0021               	movlb	1	; select bank1
 22645  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22646  0C40  0020               	movlb	0	; select bank0
 22647  0C41  00B2               	movwf	utoa@d
 22648  0C42  0021               	movlb	1	; select bank1
 22649  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22650  0C44  0020               	movlb	0	; select bank0
 22651  0C45  00B3               	movwf	utoa@d+1
 22652  0C46  0021               	movlb	1	; select bank1
 22653  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22654  0C48  0020               	movlb	0	; select bank0
 22655  0C49  00B4               	movwf	utoa@d+2
 22656  0C4A  0021               	movlb	1	; select bank1
 22657  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22658  0C4C  0020               	movlb	0	; select bank0
 22659  0C4D  00B5               	movwf	utoa@d+3
 22660  0C4E  0021               	movlb	1	; select bank1
 22661  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22662  0C50  0020               	movlb	0	; select bank0
 22663  0C51  00B6               	movwf	utoa@d+4
 22664  0C52  0021               	movlb	1	; select bank1
 22665  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22666  0C54  0020               	movlb	0	; select bank0
 22667  0C55  00B7               	movwf	utoa@d+5
 22668  0C56  0021               	movlb	1	; select bank1
 22669  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22670  0C58  0020               	movlb	0	; select bank0
 22671  0C59  00B8               	movwf	utoa@d+6
 22672  0C5A  0021               	movlb	1	; select bank1
 22673  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22674  0C5C  0020               	movlb	0	; select bank0
 22675  0C5D  00B9               	movwf	utoa@d+7
 22676  0C5E  31A4  2441         	fcall	_utoa
 22677  0C60  0020               	movlb	0	; select bank0
 22678  0C61  0831               	movf	?_utoa+1,w
 22679  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22680  0C63  0830               	movf	?_utoa,w
 22681  0C64  00D7               	movwf	?_vfpfcnvrt
 22682  0C65  0008               	return
 22683  0C66                     l7187:	
 22684                           
 22685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22686  0C66  0020               	movlb	0	; select bank0
 22687  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22688  0C68  0086               	movwf	6
 22689  0C69  0187               	clrf	7
 22690  0C6A  3F40               	moviw [0]fsr1
 22691  0C6B  00F1               	movwf	strncmp@_l
 22692  0C6C  3F41               	moviw [1]fsr1
 22693  0C6D  00F2               	movwf	strncmp@_l+1
 22694  0C6E  30CF               	movlw	low ((STR_76+1)| (0+32768))
 22695  0C6F  00F3               	movwf	strncmp@_r
 22696  0C70  30B9               	movlw	high ((STR_76+1)| (0+32768))
 22697  0C71  00F4               	movwf	strncmp@_r+1
 22698  0C72  3002               	movlw	2
 22699  0C73  00F5               	movwf	strncmp@n
 22700  0C74  3000               	movlw	0
 22701  0C75  00F6               	movwf	strncmp@n+1
 22702  0C76  31B7  2704  3188   	fcall	_strncmp
 22703  0C79  0871               	movf	?_strncmp,w
 22704  0C7A  0472               	iorwf	?_strncmp+1,w
 22705  0C7B  1D03               	btfss	3,2
 22706  0C7C  2CC6               	goto	l7197
 22707                           
 22708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22709  0C7D  0020               	movlb	0	; select bank0
 22710  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22711  0C7F  0086               	movwf	6
 22712  0C80  0187               	clrf	7
 22713  0C81  3002               	movlw	2
 22714  0C82  0781               	addwf	1,f
 22715  0C83  3141               	addfsr 1,1
 22716  0C84  1803               	skipnc
 22717  0C85  0A81               	incf	1,f
 22718                           
 22719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22720  0C86  085A               	movf	vfpfcnvrt@ap,w
 22721  0C87  0086               	movwf	6
 22722  0C88  0187               	clrf	7
 22723  0C89  0801               	movf	1,w
 22724  0C8A  0084               	movwf	4
 22725  0C8B  0185               	clrf	5
 22726  0C8C  3002               	movlw	2
 22727  0C8D  0781               	addwf	1,f
 22728  0C8E  3F00               	moviw [0]fsr0
 22729  0C8F  0021               	movlb	1	; select bank1
 22730  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22731  0C91  3F01               	moviw [1]fsr0
 22732  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22733  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22734  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22735  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22736  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22737  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22738  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22739                           
 22740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22741  0C99  0020               	movlb	0	; select bank0
 22742  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22743  0C9B  00B1               	movwf	utoa@fp+1
 22744  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22745  0C9D  00B0               	movwf	utoa@fp
 22746  0C9E  0021               	movlb	1	; select bank1
 22747  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22748  0CA0  0020               	movlb	0	; select bank0
 22749  0CA1  00B2               	movwf	utoa@d
 22750  0CA2  0021               	movlb	1	; select bank1
 22751  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22752  0CA4  0020               	movlb	0	; select bank0
 22753  0CA5  00B3               	movwf	utoa@d+1
 22754  0CA6  0021               	movlb	1	; select bank1
 22755  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22756  0CA8  0020               	movlb	0	; select bank0
 22757  0CA9  00B4               	movwf	utoa@d+2
 22758  0CAA  0021               	movlb	1	; select bank1
 22759  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22760  0CAC  0020               	movlb	0	; select bank0
 22761  0CAD  00B5               	movwf	utoa@d+3
 22762  0CAE  0021               	movlb	1	; select bank1
 22763  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22764  0CB0  0020               	movlb	0	; select bank0
 22765  0CB1  00B6               	movwf	utoa@d+4
 22766  0CB2  0021               	movlb	1	; select bank1
 22767  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22768  0CB4  0020               	movlb	0	; select bank0
 22769  0CB5  00B7               	movwf	utoa@d+5
 22770  0CB6  0021               	movlb	1	; select bank1
 22771  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22772  0CB8  0020               	movlb	0	; select bank0
 22773  0CB9  00B8               	movwf	utoa@d+6
 22774  0CBA  0021               	movlb	1	; select bank1
 22775  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22776  0CBC  0020               	movlb	0	; select bank0
 22777  0CBD  00B9               	movwf	utoa@d+7
 22778  0CBE  31A4  2441         	fcall	_utoa
 22779  0CC0  0020               	movlb	0	; select bank0
 22780  0CC1  0831               	movf	?_utoa+1,w
 22781  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22782  0CC3  0830               	movf	?_utoa,w
 22783  0CC4  00D7               	movwf	?_vfpfcnvrt
 22784  0CC5  0008               	return
 22785  0CC6                     l7197:	
 22786                           
 22787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22788  0CC6  0020               	movlb	0	; select bank0
 22789  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22790  0CC8  0086               	movwf	6
 22791  0CC9  0187               	clrf	7
 22792  0CCA  3F40               	moviw [0]fsr1
 22793  0CCB  00DB               	movwf	??_vfpfcnvrt
 22794  0CCC  3F41               	moviw [1]fsr1
 22795  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22796  0CCE  085B               	movf	??_vfpfcnvrt,w
 22797  0CCF  0084               	movwf	4
 22798  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22799  0CD1  0085               	movwf	5
 22800  0CD2  0012               	moviw fsr0++
 22801  0CD3  3A75               	xorlw	117
 22802  0CD4  1D03               	btfss	3,2
 22803  0CD5  2D1E               	goto	l7207
 22804                           
 22805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22806  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22807  0CD7  0086               	movwf	6
 22808  0CD8  0187               	clrf	7
 22809  0CD9  3001               	movlw	1
 22810  0CDA  0781               	addwf	1,f
 22811  0CDB  3141               	addfsr 1,1
 22812  0CDC  1803               	skipnc
 22813  0CDD  0A81               	incf	1,f
 22814                           
 22815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22816  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22817  0CDF  0086               	movwf	6
 22818  0CE0  0187               	clrf	7
 22819  0CE1  0801               	movf	1,w
 22820  0CE2  0084               	movwf	4
 22821  0CE3  0185               	clrf	5
 22822  0CE4  3002               	movlw	2
 22823  0CE5  0781               	addwf	1,f
 22824  0CE6  3F00               	moviw [0]fsr0
 22825  0CE7  0021               	movlb	1	; select bank1
 22826  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22827  0CE9  3F01               	moviw [1]fsr0
 22828  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22829  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22830  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22831  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22832  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22833  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22834  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22835                           
 22836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22837  0CF1  0020               	movlb	0	; select bank0
 22838  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22839  0CF3  00B1               	movwf	utoa@fp+1
 22840  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22841  0CF5  00B0               	movwf	utoa@fp
 22842  0CF6  0021               	movlb	1	; select bank1
 22843  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22844  0CF8  0020               	movlb	0	; select bank0
 22845  0CF9  00B2               	movwf	utoa@d
 22846  0CFA  0021               	movlb	1	; select bank1
 22847  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22848  0CFC  0020               	movlb	0	; select bank0
 22849  0CFD  00B3               	movwf	utoa@d+1
 22850  0CFE  0021               	movlb	1	; select bank1
 22851  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22852  0D00  0020               	movlb	0	; select bank0
 22853  0D01  00B4               	movwf	utoa@d+2
 22854  0D02  0021               	movlb	1	; select bank1
 22855  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22856  0D04  0020               	movlb	0	; select bank0
 22857  0D05  00B5               	movwf	utoa@d+3
 22858  0D06  0021               	movlb	1	; select bank1
 22859  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22860  0D08  0020               	movlb	0	; select bank0
 22861  0D09  00B6               	movwf	utoa@d+4
 22862  0D0A  0021               	movlb	1	; select bank1
 22863  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22864  0D0C  0020               	movlb	0	; select bank0
 22865  0D0D  00B7               	movwf	utoa@d+5
 22866  0D0E  0021               	movlb	1	; select bank1
 22867  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22868  0D10  0020               	movlb	0	; select bank0
 22869  0D11  00B8               	movwf	utoa@d+6
 22870  0D12  0021               	movlb	1	; select bank1
 22871  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22872  0D14  0020               	movlb	0	; select bank0
 22873  0D15  00B9               	movwf	utoa@d+7
 22874  0D16  31A4  2441         	fcall	_utoa
 22875  0D18  0020               	movlb	0	; select bank0
 22876  0D19  0831               	movf	?_utoa+1,w
 22877  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22878  0D1B  0830               	movf	?_utoa,w
 22879  0D1C  00D7               	movwf	?_vfpfcnvrt
 22880  0D1D  0008               	return
 22881  0D1E                     l7207:	
 22882                           
 22883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22884  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22885  0D1F  0086               	movwf	6
 22886  0D20  0187               	clrf	7
 22887  0D21  3F40               	moviw [0]fsr1
 22888  0D22  00F1               	movwf	strncmp@_l
 22889  0D23  3F41               	moviw [1]fsr1
 22890  0D24  00F2               	movwf	strncmp@_l+1
 22891  0D25  30E9               	movlw	low (STR_86| (0+32768))
 22892  0D26  00F3               	movwf	strncmp@_r
 22893  0D27  30B9               	movlw	high (STR_86| (0+32768))
 22894  0D28  00F4               	movwf	strncmp@_r+1
 22895  0D29  3002               	movlw	2
 22896  0D2A  00F5               	movwf	strncmp@n
 22897  0D2B  3000               	movlw	0
 22898  0D2C  00F6               	movwf	strncmp@n+1
 22899  0D2D  31B7  2704  3188   	fcall	_strncmp
 22900  0D30  0871               	movf	?_strncmp,w
 22901  0D31  0472               	iorwf	?_strncmp+1,w
 22902  0D32  1D03               	btfss	3,2
 22903  0D33  2D7D               	goto	l7217
 22904                           
 22905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22906  0D34  0020               	movlb	0	; select bank0
 22907  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22908  0D36  0086               	movwf	6
 22909  0D37  0187               	clrf	7
 22910  0D38  3002               	movlw	2
 22911  0D39  0781               	addwf	1,f
 22912  0D3A  3141               	addfsr 1,1
 22913  0D3B  1803               	skipnc
 22914  0D3C  0A81               	incf	1,f
 22915                           
 22916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22917  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22918  0D3E  0086               	movwf	6
 22919  0D3F  0187               	clrf	7
 22920  0D40  0801               	movf	1,w
 22921  0D41  0084               	movwf	4
 22922  0D42  0185               	clrf	5
 22923  0D43  3002               	movlw	2
 22924  0D44  0781               	addwf	1,f
 22925  0D45  3F00               	moviw [0]fsr0
 22926  0D46  0021               	movlb	1	; select bank1
 22927  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22928  0D48  3F01               	moviw [1]fsr0
 22929  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22930  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22931  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22932  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22933  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22934  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22935  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22936                           
 22937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22938  0D50  0020               	movlb	0	; select bank0
 22939  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22940  0D52  00B1               	movwf	utoa@fp+1
 22941  0D53  0857               	movf	vfpfcnvrt@fp,w
 22942  0D54  00B0               	movwf	utoa@fp
 22943  0D55  0021               	movlb	1	; select bank1
 22944  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22945  0D57  0020               	movlb	0	; select bank0
 22946  0D58  00B2               	movwf	utoa@d
 22947  0D59  0021               	movlb	1	; select bank1
 22948  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22949  0D5B  0020               	movlb	0	; select bank0
 22950  0D5C  00B3               	movwf	utoa@d+1
 22951  0D5D  0021               	movlb	1	; select bank1
 22952  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22953  0D5F  0020               	movlb	0	; select bank0
 22954  0D60  00B4               	movwf	utoa@d+2
 22955  0D61  0021               	movlb	1	; select bank1
 22956  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22957  0D63  0020               	movlb	0	; select bank0
 22958  0D64  00B5               	movwf	utoa@d+3
 22959  0D65  0021               	movlb	1	; select bank1
 22960  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22961  0D67  0020               	movlb	0	; select bank0
 22962  0D68  00B6               	movwf	utoa@d+4
 22963  0D69  0021               	movlb	1	; select bank1
 22964  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22965  0D6B  0020               	movlb	0	; select bank0
 22966  0D6C  00B7               	movwf	utoa@d+5
 22967  0D6D  0021               	movlb	1	; select bank1
 22968  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22969  0D6F  0020               	movlb	0	; select bank0
 22970  0D70  00B8               	movwf	utoa@d+6
 22971  0D71  0021               	movlb	1	; select bank1
 22972  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22973  0D73  0020               	movlb	0	; select bank0
 22974  0D74  00B9               	movwf	utoa@d+7
 22975  0D75  31A4  2441         	fcall	_utoa
 22976  0D77  0020               	movlb	0	; select bank0
 22977  0D78  0831               	movf	?_utoa+1,w
 22978  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22979  0D7A  0830               	movf	?_utoa,w
 22980  0D7B  00D7               	movwf	?_vfpfcnvrt
 22981  0D7C  0008               	return
 22982  0D7D                     l7217:	
 22983                           
 22984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22985  0D7D  0020               	movlb	0	; select bank0
 22986  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22987  0D7F  0086               	movwf	6
 22988  0D80  0187               	clrf	7
 22989  0D81  3F40               	moviw [0]fsr1
 22990  0D82  00F1               	movwf	strncmp@_l
 22991  0D83  3F41               	moviw [1]fsr1
 22992  0D84  00F2               	movwf	strncmp@_l+1
 22993  0D85  30D2               	movlw	low (STR_91| (0+32768))
 22994  0D86  00F3               	movwf	strncmp@_r
 22995  0D87  30B9               	movlw	high (STR_91| (0+32768))
 22996  0D88  00F4               	movwf	strncmp@_r+1
 22997  0D89  3003               	movlw	3
 22998  0D8A  00F5               	movwf	strncmp@n
 22999  0D8B  3000               	movlw	0
 23000  0D8C  00F6               	movwf	strncmp@n+1
 23001  0D8D  31B7  2704  3188   	fcall	_strncmp
 23002  0D90  0871               	movf	?_strncmp,w
 23003  0D91  0472               	iorwf	?_strncmp+1,w
 23004  0D92  1903               	btfsc	3,2
 23005  0D93  2DAB               	goto	l7221
 23006  0D94  0020               	movlb	0	; select bank0
 23007  0D95  0859               	movf	vfpfcnvrt@fmt,w
 23008  0D96  0086               	movwf	6
 23009  0D97  0187               	clrf	7
 23010  0D98  3F40               	moviw [0]fsr1
 23011  0D99  00F1               	movwf	strncmp@_l
 23012  0D9A  3F41               	moviw [1]fsr1
 23013  0D9B  00F2               	movwf	strncmp@_l+1
 23014  0D9C  30BA               	movlw	low (STR_95| (0+32768))
 23015  0D9D  00F3               	movwf	strncmp@_r
 23016  0D9E  30B9               	movlw	high (STR_95| (0+32768))
 23017  0D9F  00F4               	movwf	strncmp@_r+1
 23018  0DA0  3003               	movlw	3
 23019  0DA1  00F5               	movwf	strncmp@n
 23020  0DA2  3000               	movlw	0
 23021  0DA3  00F6               	movwf	strncmp@n+1
 23022  0DA4  31B7  2704  3188   	fcall	_strncmp
 23023  0DA7  0871               	movf	?_strncmp,w
 23024  0DA8  0472               	iorwf	?_strncmp+1,w
 23025  0DA9  1D03               	btfss	3,2
 23026  0DAA  2E0D               	goto	l7231
 23027  0DAB                     l7221:	
 23028                           
 23029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23030  0DAB  0020               	movlb	0	; select bank0
 23031  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 23032  0DAD  0086               	movwf	6
 23033  0DAE  0187               	clrf	7
 23034  0DAF  3F40               	moviw [0]fsr1
 23035  0DB0  00DB               	movwf	??_vfpfcnvrt
 23036  0DB1  3F41               	moviw [1]fsr1
 23037  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 23038  0DB3  3002               	movlw	2
 23039  0DB4  075B               	addwf	??_vfpfcnvrt,w
 23040  0DB5  0084               	movwf	4
 23041  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 23042  0DB7  1803               	skipnc
 23043  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 23044  0DB9  0085               	movwf	5
 23045  0DBA  0800               	movf	0,w	;code access
 23046  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 23047  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 23048  0DBD  0021               	movlb	1	; select bank1
 23049  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23050                           
 23051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23052  0DBF  0020               	movlb	0	; select bank0
 23053  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 23054  0DC1  0086               	movwf	6
 23055  0DC2  0187               	clrf	7
 23056  0DC3  3003               	movlw	3
 23057  0DC4  0781               	addwf	1,f
 23058  0DC5  3141               	addfsr 1,1
 23059  0DC6  1803               	skipnc
 23060  0DC7  0A81               	incf	1,f
 23061                           
 23062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23063  0DC8  085A               	movf	vfpfcnvrt@ap,w
 23064  0DC9  0086               	movwf	6
 23065  0DCA  0187               	clrf	7
 23066  0DCB  0801               	movf	1,w
 23067  0DCC  0084               	movwf	4
 23068  0DCD  0185               	clrf	5
 23069  0DCE  3002               	movlw	2
 23070  0DCF  0781               	addwf	1,f
 23071  0DD0  0800               	movf	0,w
 23072  0DD1  0021               	movlb	1	; select bank1
 23073  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23074  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 23075  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23076  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23077  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23078  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23079  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23080  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23081                           
 23082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23083  0DDA  0020               	movlb	0	; select bank0
 23084  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 23085  0DDC  00B1               	movwf	xtoa@fp+1
 23086  0DDD  0857               	movf	vfpfcnvrt@fp,w
 23087  0DDE  00B0               	movwf	xtoa@fp
 23088  0DDF  0021               	movlb	1	; select bank1
 23089  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23090  0DE1  0020               	movlb	0	; select bank0
 23091  0DE2  00B2               	movwf	xtoa@d
 23092  0DE3  0021               	movlb	1	; select bank1
 23093  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23094  0DE5  0020               	movlb	0	; select bank0
 23095  0DE6  00B3               	movwf	xtoa@d+1
 23096  0DE7  0021               	movlb	1	; select bank1
 23097  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23098  0DE9  0020               	movlb	0	; select bank0
 23099  0DEA  00B4               	movwf	xtoa@d+2
 23100  0DEB  0021               	movlb	1	; select bank1
 23101  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23102  0DED  0020               	movlb	0	; select bank0
 23103  0DEE  00B5               	movwf	xtoa@d+3
 23104  0DEF  0021               	movlb	1	; select bank1
 23105  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23106  0DF1  0020               	movlb	0	; select bank0
 23107  0DF2  00B6               	movwf	xtoa@d+4
 23108  0DF3  0021               	movlb	1	; select bank1
 23109  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23110  0DF5  0020               	movlb	0	; select bank0
 23111  0DF6  00B7               	movwf	xtoa@d+5
 23112  0DF7  0021               	movlb	1	; select bank1
 23113  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23114  0DF9  0020               	movlb	0	; select bank0
 23115  0DFA  00B8               	movwf	xtoa@d+6
 23116  0DFB  0021               	movlb	1	; select bank1
 23117  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23118  0DFD  0020               	movlb	0	; select bank0
 23119  0DFE  00B9               	movwf	xtoa@d+7
 23120  0DFF  0021               	movlb	1	; select bank1
 23121  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 23122  0E01  0020               	movlb	0	; select bank0
 23123  0E02  00DB               	movwf	??_vfpfcnvrt
 23124  0E03  085B               	movf	??_vfpfcnvrt,w
 23125  0E04  00BA               	movwf	xtoa@x
 23126  0E05  319B  2389         	fcall	_xtoa
 23127  0E07  0020               	movlb	0	; select bank0
 23128  0E08  0831               	movf	?_xtoa+1,w
 23129  0E09  00D8               	movwf	?_vfpfcnvrt+1
 23130  0E0A  0830               	movf	?_xtoa,w
 23131  0E0B  00D7               	movwf	?_vfpfcnvrt
 23132  0E0C  0008               	return
 23133  0E0D                     l7231:	
 23134                           
 23135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23136  0E0D  0020               	movlb	0	; select bank0
 23137  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 23138  0E0F  0086               	movwf	6
 23139  0E10  0187               	clrf	7
 23140  0E11  3F40               	moviw [0]fsr1
 23141  0E12  00F1               	movwf	strncmp@_l
 23142  0E13  3F41               	moviw [1]fsr1
 23143  0E14  00F2               	movwf	strncmp@_l+1
 23144  0E15  30D3               	movlw	low ((STR_91+1)| (0+32768))
 23145  0E16  00F3               	movwf	strncmp@_r
 23146  0E17  30B9               	movlw	high ((STR_91+1)| (0+32768))
 23147  0E18  00F4               	movwf	strncmp@_r+1
 23148  0E19  3002               	movlw	2
 23149  0E1A  00F5               	movwf	strncmp@n
 23150  0E1B  3000               	movlw	0
 23151  0E1C  00F6               	movwf	strncmp@n+1
 23152  0E1D  31B7  2704  3188   	fcall	_strncmp
 23153  0E20  0871               	movf	?_strncmp,w
 23154  0E21  0472               	iorwf	?_strncmp+1,w
 23155  0E22  1903               	btfsc	3,2
 23156  0E23  2E3B               	goto	l7235
 23157  0E24  0020               	movlb	0	; select bank0
 23158  0E25  0859               	movf	vfpfcnvrt@fmt,w
 23159  0E26  0086               	movwf	6
 23160  0E27  0187               	clrf	7
 23161  0E28  3F40               	moviw [0]fsr1
 23162  0E29  00F1               	movwf	strncmp@_l
 23163  0E2A  3F41               	moviw [1]fsr1
 23164  0E2B  00F2               	movwf	strncmp@_l+1
 23165  0E2C  30BB               	movlw	low ((STR_95+1)| (0+32768))
 23166  0E2D  00F3               	movwf	strncmp@_r
 23167  0E2E  30B9               	movlw	high ((STR_95+1)| (0+32768))
 23168  0E2F  00F4               	movwf	strncmp@_r+1
 23169  0E30  3002               	movlw	2
 23170  0E31  00F5               	movwf	strncmp@n
 23171  0E32  3000               	movlw	0
 23172  0E33  00F6               	movwf	strncmp@n+1
 23173  0E34  31B7  2704  3188   	fcall	_strncmp
 23174  0E37  0871               	movf	?_strncmp,w
 23175  0E38  0472               	iorwf	?_strncmp+1,w
 23176  0E39  1D03               	btfss	3,2
 23177  0E3A  2E9E               	goto	l7245
 23178  0E3B                     l7235:	
 23179                           
 23180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23181  0E3B  0020               	movlb	0	; select bank0
 23182  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 23183  0E3D  0086               	movwf	6
 23184  0E3E  0187               	clrf	7
 23185  0E3F  3F40               	moviw [0]fsr1
 23186  0E40  00DB               	movwf	??_vfpfcnvrt
 23187  0E41  3F41               	moviw [1]fsr1
 23188  0E42  00DC               	movwf	??_vfpfcnvrt+1
 23189  0E43  3001               	movlw	1
 23190  0E44  075B               	addwf	??_vfpfcnvrt,w
 23191  0E45  0084               	movwf	4
 23192  0E46  085C               	movf	??_vfpfcnvrt+1,w
 23193  0E47  1803               	skipnc
 23194  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 23195  0E49  0085               	movwf	5
 23196  0E4A  0800               	movf	0,w	;code access
 23197  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23198  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23199  0E4D  0021               	movlb	1	; select bank1
 23200  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23201                           
 23202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23203  0E4F  0020               	movlb	0	; select bank0
 23204  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23205  0E51  0086               	movwf	6
 23206  0E52  0187               	clrf	7
 23207  0E53  3002               	movlw	2
 23208  0E54  0781               	addwf	1,f
 23209  0E55  3141               	addfsr 1,1
 23210  0E56  1803               	skipnc
 23211  0E57  0A81               	incf	1,f
 23212                           
 23213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23214  0E58  085A               	movf	vfpfcnvrt@ap,w
 23215  0E59  0086               	movwf	6
 23216  0E5A  0187               	clrf	7
 23217  0E5B  0801               	movf	1,w
 23218  0E5C  0084               	movwf	4
 23219  0E5D  0185               	clrf	5
 23220  0E5E  3002               	movlw	2
 23221  0E5F  0781               	addwf	1,f
 23222  0E60  3F00               	moviw [0]fsr0
 23223  0E61  0021               	movlb	1	; select bank1
 23224  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23225  0E63  3F01               	moviw [1]fsr0
 23226  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23227  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23228  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23229  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23230  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23231  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23232  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23233                           
 23234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23235  0E6B  0020               	movlb	0	; select bank0
 23236  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23237  0E6D  00B1               	movwf	xtoa@fp+1
 23238  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23239  0E6F  00B0               	movwf	xtoa@fp
 23240  0E70  0021               	movlb	1	; select bank1
 23241  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23242  0E72  0020               	movlb	0	; select bank0
 23243  0E73  00B2               	movwf	xtoa@d
 23244  0E74  0021               	movlb	1	; select bank1
 23245  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23246  0E76  0020               	movlb	0	; select bank0
 23247  0E77  00B3               	movwf	xtoa@d+1
 23248  0E78  0021               	movlb	1	; select bank1
 23249  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23250  0E7A  0020               	movlb	0	; select bank0
 23251  0E7B  00B4               	movwf	xtoa@d+2
 23252  0E7C  0021               	movlb	1	; select bank1
 23253  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23254  0E7E  0020               	movlb	0	; select bank0
 23255  0E7F  00B5               	movwf	xtoa@d+3
 23256  0E80  0021               	movlb	1	; select bank1
 23257  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23258  0E82  0020               	movlb	0	; select bank0
 23259  0E83  00B6               	movwf	xtoa@d+4
 23260  0E84  0021               	movlb	1	; select bank1
 23261  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23262  0E86  0020               	movlb	0	; select bank0
 23263  0E87  00B7               	movwf	xtoa@d+5
 23264  0E88  0021               	movlb	1	; select bank1
 23265  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23266  0E8A  0020               	movlb	0	; select bank0
 23267  0E8B  00B8               	movwf	xtoa@d+6
 23268  0E8C  0021               	movlb	1	; select bank1
 23269  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23270  0E8E  0020               	movlb	0	; select bank0
 23271  0E8F  00B9               	movwf	xtoa@d+7
 23272  0E90  0021               	movlb	1	; select bank1
 23273  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23274  0E92  0020               	movlb	0	; select bank0
 23275  0E93  00DB               	movwf	??_vfpfcnvrt
 23276  0E94  085B               	movf	??_vfpfcnvrt,w
 23277  0E95  00BA               	movwf	xtoa@x
 23278  0E96  319B  2389         	fcall	_xtoa
 23279  0E98  0020               	movlb	0	; select bank0
 23280  0E99  0831               	movf	?_xtoa+1,w
 23281  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23282  0E9B  0830               	movf	?_xtoa,w
 23283  0E9C  00D7               	movwf	?_vfpfcnvrt
 23284  0E9D  0008               	return
 23285  0E9E                     l7245:	
 23286                           
 23287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23288  0E9E  0020               	movlb	0	; select bank0
 23289  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23290  0EA0  0086               	movwf	6
 23291  0EA1  0187               	clrf	7
 23292  0EA2  3F40               	moviw [0]fsr1
 23293  0EA3  00DB               	movwf	??_vfpfcnvrt
 23294  0EA4  3F41               	moviw [1]fsr1
 23295  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23296  0EA6  085B               	movf	??_vfpfcnvrt,w
 23297  0EA7  0084               	movwf	4
 23298  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23299  0EA9  0085               	movwf	5
 23300  0EAA  0012               	moviw fsr0++
 23301  0EAB  3A78               	xorlw	120
 23302  0EAC  1903               	btfsc	3,2
 23303  0EAD  2EBD               	goto	l7249
 23304  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23305  0EAF  0086               	movwf	6
 23306  0EB0  0187               	clrf	7
 23307  0EB1  3F40               	moviw [0]fsr1
 23308  0EB2  00DB               	movwf	??_vfpfcnvrt
 23309  0EB3  3F41               	moviw [1]fsr1
 23310  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23311  0EB5  085B               	movf	??_vfpfcnvrt,w
 23312  0EB6  0084               	movwf	4
 23313  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23314  0EB8  0085               	movwf	5
 23315  0EB9  0012               	moviw fsr0++
 23316  0EBA  3A58               	xorlw	88
 23317  0EBB  1D03               	btfss	3,2
 23318  0EBC  2F1C               	goto	l7259
 23319  0EBD                     l7249:	
 23320                           
 23321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23322  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23323  0EBE  0086               	movwf	6
 23324  0EBF  0187               	clrf	7
 23325  0EC0  3F40               	moviw [0]fsr1
 23326  0EC1  00DB               	movwf	??_vfpfcnvrt
 23327  0EC2  3F41               	moviw [1]fsr1
 23328  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23329  0EC4  085B               	movf	??_vfpfcnvrt,w
 23330  0EC5  0084               	movwf	4
 23331  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23332  0EC7  0085               	movwf	5
 23333  0EC8  0800               	movf	0,w	;code access
 23334  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23335  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23336  0ECB  0021               	movlb	1	; select bank1
 23337  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23338                           
 23339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23340  0ECD  0020               	movlb	0	; select bank0
 23341  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23342  0ECF  0086               	movwf	6
 23343  0ED0  0187               	clrf	7
 23344  0ED1  3001               	movlw	1
 23345  0ED2  0781               	addwf	1,f
 23346  0ED3  3141               	addfsr 1,1
 23347  0ED4  1803               	skipnc
 23348  0ED5  0A81               	incf	1,f
 23349                           
 23350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23351  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23352  0ED7  0086               	movwf	6
 23353  0ED8  0187               	clrf	7
 23354  0ED9  0801               	movf	1,w
 23355  0EDA  0084               	movwf	4
 23356  0EDB  0185               	clrf	5
 23357  0EDC  3002               	movlw	2
 23358  0EDD  0781               	addwf	1,f
 23359  0EDE  3F00               	moviw [0]fsr0
 23360  0EDF  0021               	movlb	1	; select bank1
 23361  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23362  0EE1  3F01               	moviw [1]fsr0
 23363  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23364  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23365  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23366  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23367  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23368  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23369  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23370                           
 23371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23372  0EE9  0020               	movlb	0	; select bank0
 23373  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23374  0EEB  00B1               	movwf	xtoa@fp+1
 23375  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23376  0EED  00B0               	movwf	xtoa@fp
 23377  0EEE  0021               	movlb	1	; select bank1
 23378  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23379  0EF0  0020               	movlb	0	; select bank0
 23380  0EF1  00B2               	movwf	xtoa@d
 23381  0EF2  0021               	movlb	1	; select bank1
 23382  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23383  0EF4  0020               	movlb	0	; select bank0
 23384  0EF5  00B3               	movwf	xtoa@d+1
 23385  0EF6  0021               	movlb	1	; select bank1
 23386  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23387  0EF8  0020               	movlb	0	; select bank0
 23388  0EF9  00B4               	movwf	xtoa@d+2
 23389  0EFA  0021               	movlb	1	; select bank1
 23390  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23391  0EFC  0020               	movlb	0	; select bank0
 23392  0EFD  00B5               	movwf	xtoa@d+3
 23393  0EFE  0021               	movlb	1	; select bank1
 23394  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23395  0F00  0020               	movlb	0	; select bank0
 23396  0F01  00B6               	movwf	xtoa@d+4
 23397  0F02  0021               	movlb	1	; select bank1
 23398  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23399  0F04  0020               	movlb	0	; select bank0
 23400  0F05  00B7               	movwf	xtoa@d+5
 23401  0F06  0021               	movlb	1	; select bank1
 23402  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23403  0F08  0020               	movlb	0	; select bank0
 23404  0F09  00B8               	movwf	xtoa@d+6
 23405  0F0A  0021               	movlb	1	; select bank1
 23406  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23407  0F0C  0020               	movlb	0	; select bank0
 23408  0F0D  00B9               	movwf	xtoa@d+7
 23409  0F0E  0021               	movlb	1	; select bank1
 23410  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23411  0F10  0020               	movlb	0	; select bank0
 23412  0F11  00DB               	movwf	??_vfpfcnvrt
 23413  0F12  085B               	movf	??_vfpfcnvrt,w
 23414  0F13  00BA               	movwf	xtoa@x
 23415  0F14  319B  2389         	fcall	_xtoa
 23416  0F16  0020               	movlb	0	; select bank0
 23417  0F17  0831               	movf	?_xtoa+1,w
 23418  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23419  0F19  0830               	movf	?_xtoa,w
 23420  0F1A  00D7               	movwf	?_vfpfcnvrt
 23421  0F1B  0008               	return
 23422  0F1C                     l7259:	
 23423                           
 23424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23425  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23426  0F1D  0086               	movwf	6
 23427  0F1E  0187               	clrf	7
 23428  0F1F  3F40               	moviw [0]fsr1
 23429  0F20  00F1               	movwf	strncmp@_l
 23430  0F21  3F41               	moviw [1]fsr1
 23431  0F22  00F2               	movwf	strncmp@_l+1
 23432  0F23  30EC               	movlw	low (STR_109| (0+32768))
 23433  0F24  00F3               	movwf	strncmp@_r
 23434  0F25  30B9               	movlw	high (STR_109| (0+32768))
 23435  0F26  00F4               	movwf	strncmp@_r+1
 23436  0F27  3002               	movlw	2
 23437  0F28  00F5               	movwf	strncmp@n
 23438  0F29  3000               	movlw	0
 23439  0F2A  00F6               	movwf	strncmp@n+1
 23440  0F2B  31B7  2704  3188   	fcall	_strncmp
 23441  0F2E  0871               	movf	?_strncmp,w
 23442  0F2F  0472               	iorwf	?_strncmp+1,w
 23443  0F30  1903               	btfsc	3,2
 23444  0F31  2F49               	goto	l7263
 23445  0F32  0020               	movlb	0	; select bank0
 23446  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23447  0F34  0086               	movwf	6
 23448  0F35  0187               	clrf	7
 23449  0F36  3F40               	moviw [0]fsr1
 23450  0F37  00F1               	movwf	strncmp@_l
 23451  0F38  3F41               	moviw [1]fsr1
 23452  0F39  00F2               	movwf	strncmp@_l+1
 23453  0F3A  30DA               	movlw	low (STR_113| (0+32768))
 23454  0F3B  00F3               	movwf	strncmp@_r
 23455  0F3C  30B9               	movlw	high (STR_113| (0+32768))
 23456  0F3D  00F4               	movwf	strncmp@_r+1
 23457  0F3E  3002               	movlw	2
 23458  0F3F  00F5               	movwf	strncmp@n
 23459  0F40  3000               	movlw	0
 23460  0F41  00F6               	movwf	strncmp@n+1
 23461  0F42  31B7  2704  3188   	fcall	_strncmp
 23462  0F45  0871               	movf	?_strncmp,w
 23463  0F46  0472               	iorwf	?_strncmp+1,w
 23464  0F47  1D03               	btfss	3,2
 23465  0F48  2FAC               	goto	l7273
 23466  0F49                     l7263:	
 23467                           
 23468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23469  0F49  0020               	movlb	0	; select bank0
 23470  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23471  0F4B  0086               	movwf	6
 23472  0F4C  0187               	clrf	7
 23473  0F4D  3F40               	moviw [0]fsr1
 23474  0F4E  00DB               	movwf	??_vfpfcnvrt
 23475  0F4F  3F41               	moviw [1]fsr1
 23476  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23477  0F51  3001               	movlw	1
 23478  0F52  075B               	addwf	??_vfpfcnvrt,w
 23479  0F53  0084               	movwf	4
 23480  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23481  0F55  1803               	skipnc
 23482  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23483  0F57  0085               	movwf	5
 23484  0F58  0800               	movf	0,w	;code access
 23485  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23486  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23487  0F5B  0021               	movlb	1	; select bank1
 23488  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23489                           
 23490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23491  0F5D  0020               	movlb	0	; select bank0
 23492  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23493  0F5F  0086               	movwf	6
 23494  0F60  0187               	clrf	7
 23495  0F61  3002               	movlw	2
 23496  0F62  0781               	addwf	1,f
 23497  0F63  3141               	addfsr 1,1
 23498  0F64  1803               	skipnc
 23499  0F65  0A81               	incf	1,f
 23500                           
 23501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23502  0F66  085A               	movf	vfpfcnvrt@ap,w
 23503  0F67  0086               	movwf	6
 23504  0F68  0187               	clrf	7
 23505  0F69  0801               	movf	1,w
 23506  0F6A  0084               	movwf	4
 23507  0F6B  0185               	clrf	5
 23508  0F6C  3002               	movlw	2
 23509  0F6D  0781               	addwf	1,f
 23510  0F6E  3F00               	moviw [0]fsr0
 23511  0F6F  0021               	movlb	1	; select bank1
 23512  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23513  0F71  3F01               	moviw [1]fsr0
 23514  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23515  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23516  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23517  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23518  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23519  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23520  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23521                           
 23522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23523  0F79  0020               	movlb	0	; select bank0
 23524  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23525  0F7B  00B1               	movwf	xtoa@fp+1
 23526  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23527  0F7D  00B0               	movwf	xtoa@fp
 23528  0F7E  0021               	movlb	1	; select bank1
 23529  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23530  0F80  0020               	movlb	0	; select bank0
 23531  0F81  00B2               	movwf	xtoa@d
 23532  0F82  0021               	movlb	1	; select bank1
 23533  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23534  0F84  0020               	movlb	0	; select bank0
 23535  0F85  00B3               	movwf	xtoa@d+1
 23536  0F86  0021               	movlb	1	; select bank1
 23537  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23538  0F88  0020               	movlb	0	; select bank0
 23539  0F89  00B4               	movwf	xtoa@d+2
 23540  0F8A  0021               	movlb	1	; select bank1
 23541  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23542  0F8C  0020               	movlb	0	; select bank0
 23543  0F8D  00B5               	movwf	xtoa@d+3
 23544  0F8E  0021               	movlb	1	; select bank1
 23545  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23546  0F90  0020               	movlb	0	; select bank0
 23547  0F91  00B6               	movwf	xtoa@d+4
 23548  0F92  0021               	movlb	1	; select bank1
 23549  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23550  0F94  0020               	movlb	0	; select bank0
 23551  0F95  00B7               	movwf	xtoa@d+5
 23552  0F96  0021               	movlb	1	; select bank1
 23553  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23554  0F98  0020               	movlb	0	; select bank0
 23555  0F99  00B8               	movwf	xtoa@d+6
 23556  0F9A  0021               	movlb	1	; select bank1
 23557  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23558  0F9C  0020               	movlb	0	; select bank0
 23559  0F9D  00B9               	movwf	xtoa@d+7
 23560  0F9E  0021               	movlb	1	; select bank1
 23561  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23562  0FA0  0020               	movlb	0	; select bank0
 23563  0FA1  00DB               	movwf	??_vfpfcnvrt
 23564  0FA2  085B               	movf	??_vfpfcnvrt,w
 23565  0FA3  00BA               	movwf	xtoa@x
 23566  0FA4  319B  2389         	fcall	_xtoa
 23567  0FA6  0020               	movlb	0	; select bank0
 23568  0FA7  0831               	movf	?_xtoa+1,w
 23569  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23570  0FA9  0830               	movf	?_xtoa,w
 23571  0FAA  00D7               	movwf	?_vfpfcnvrt
 23572  0FAB  0008               	return
 23573  0FAC                     l7273:	
 23574                           
 23575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23576  0FAC  0020               	movlb	0	; select bank0
 23577  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23578  0FAE  0086               	movwf	6
 23579  0FAF  0187               	clrf	7
 23580  0FB0  3F40               	moviw [0]fsr1
 23581  0FB1  00DB               	movwf	??_vfpfcnvrt
 23582  0FB2  3F41               	moviw [1]fsr1
 23583  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23584  0FB4  085B               	movf	??_vfpfcnvrt,w
 23585  0FB5  0084               	movwf	4
 23586  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23587  0FB7  0085               	movwf	5
 23588  0FB8  0012               	moviw fsr0++
 23589  0FB9  3A25               	xorlw	37
 23590  0FBA  1D03               	btfss	3,2
 23591  0FBB  2FD4               	goto	l7283
 23592                           
 23593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23594  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23595  0FBD  0086               	movwf	6
 23596  0FBE  0187               	clrf	7
 23597  0FBF  3001               	movlw	1
 23598  0FC0  0781               	addwf	1,f
 23599  0FC1  3141               	addfsr 1,1
 23600  0FC2  1803               	skipnc
 23601  0FC3  0A81               	incf	1,f
 23602                           
 23603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23604  0FC4  3025               	movlw	37
 23605  0FC5  00F1               	movwf	fputc@c
 23606  0FC6  3000               	movlw	0
 23607  0FC7  00F2               	movwf	fputc@c+1
 23608  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23609  0FC9  00F4               	movwf	fputc@fp+1
 23610  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23611  0FCB  00F3               	movwf	fputc@fp
 23612  0FCC  31B7  2756         	fcall	_fputc
 23613  0FCE                     l7279:	
 23614                           
 23615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23616  0FCE  3001               	movlw	1
 23617  0FCF  0020               	movlb	0	; select bank0
 23618  0FD0  00D7               	movwf	?_vfpfcnvrt
 23619  0FD1  3000               	movlw	0
 23620  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23621  0FD3  0008               	return
 23622  0FD4                     l7283:	
 23623                           
 23624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23625  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23626  0FD5  0086               	movwf	6
 23627  0FD6  0187               	clrf	7
 23628  0FD7  3001               	movlw	1
 23629  0FD8  0781               	addwf	1,f
 23630  0FD9  3141               	addfsr 1,1
 23631  0FDA  1803               	skipnc
 23632  0FDB  0A81               	incf	1,f
 23633  0FDC  2B32               	goto	l7117
 23634  0FDD                     l7289:	
 23635                           
 23636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23637  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23638  0FDE  0086               	movwf	6
 23639  0FDF  0187               	clrf	7
 23640  0FE0  3F40               	moviw [0]fsr1
 23641  0FE1  00DB               	movwf	??_vfpfcnvrt
 23642  0FE2  3F41               	moviw [1]fsr1
 23643  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23644  0FE4  085B               	movf	??_vfpfcnvrt,w
 23645  0FE5  0084               	movwf	4
 23646  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23647  0FE7  0085               	movwf	5
 23648  0FE8  0800               	movf	0,w	;code access
 23649  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23650  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23651  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23652  0FEC  00F1               	movwf	fputc@c
 23653  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23654  0FEE  00F2               	movwf	fputc@c+1
 23655  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23656  0FF0  00F4               	movwf	fputc@fp+1
 23657  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23658  0FF2  00F3               	movwf	fputc@fp
 23659  0FF3  31B7  2756  3188   	fcall	_fputc
 23660                           
 23661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23662  0FF6  0020               	movlb	0	; select bank0
 23663  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23664  0FF8  0086               	movwf	6
 23665  0FF9  0187               	clrf	7
 23666  0FFA  3001               	movlw	1
 23667  0FFB  0781               	addwf	1,f
 23668  0FFC  3141               	addfsr 1,1
 23669  0FFD  1803               	skipnc
 23670  0FFE  0A81               	incf	1,f
 23671  0FFF  2FCE               	goto	l7279
 23672  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     381
    Constant    298
    Data        11
    BSS         135
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     66      80
    BANK3            80      0      78
    BANK4            80      0      53
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> updateTemperatures@vtsx(BANK1[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> updateTemperatures@vtsx(BANK1[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1953_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_18(CODE[3]), STR_5(CODE[3]), STR_4(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_AFE_FET_Status
    _AFE_UPDATE->_AFE_Status
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _AFE_Status->_readRegister
    _AFE_FET_Status->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  379563
                                             78 BANK1      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                          _init_TMR6
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  376783
                                             75 BANK1      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   55486
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   54006
                                             76 BANK0      4     4      0
                                             44 BANK1     10     0     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1480
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   70567
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16730
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16727
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12962
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  181444
                     _AFE_FET_Status
                         _AFE_Status
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   28905
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  55    55      0   52876
                                             20 BANK1     55    55      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   26028
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _AFE_Status                                           6     4      2    8291
                                             11 COMMON     1     1      0
                                              0 BANK0      5     3      2
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _AFE_FET_Status                                       2     2      0    8115
                                             11 COMMON     1     1      0
                                              0 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    8050
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_TMR6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _init_TMR6
   _statemachine
     _AFE_UPDATE
       _AFE_FET_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _AFE_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     42      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4E      11       97.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      35      13       66.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     180      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     180      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 13 16:48:36 2020

          __end_of_setShortCircuitProtection 1A36                               _maxCellVoltage 01CC  
                      __end_of_send_I2C_data 1809                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124E  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 327D                               _chg_fet_enable 01D0  
                        __Umul8_16@word_mpld 0077                                          l206 29EB  
                                        l323 1805                                          l341 3243  
                                        l335 326F                      enableDischarging@enable 0020  
                                        l329 2006                                          l353 324B  
                                        l365 3265                                          l390 3405  
                                        l391 341A                                          l528 2E71  
                                        l288 3250                                          l721 289E  
                                        l387 33FB                                          l389 3400  
                                        l830 36C9                                          l902 2FD8  
                                        l910 2448                                          l833 36E9  
                                        l850 1A9D                                          l914 2463  
                                        l851 1AB1                                          l845 1A7B  
                                        l925 1B90                                          l854 1B47  
                                        l846 1A82                                          l950 1CAE  
                                        l871 2529                                          l929 1BAB  
                                        l961 1E8D                                          l882 25E4  
                                        l962 1E90                                          l875 2544  
                                        l963 1E93                                          l876 25D9  
                                        l964 1E96                                          l893 2F7D  
                                        l966 1EC9                                          l959 1E81  
                                        _PR6 041D                                          _Lg1 39AE  
                                        _Lg2 39AA                                          _Lg3 39A6  
                                        _Lg4 39A2                          __size_of_AFE_UPDATE 003A  
                        ??_calibrate_BATTSOC 00B1                                          _abs 32F3  
                             RGB_color@color 0071                                          _pad 36B3  
                                        _rts 01BC                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2972  
                               __CFG_LVP$OFF 0000                          __size_of_AFE_Status 005F  
                               ___fltol@exp1 007B                                         l1103 2B72  
                                       ?_abs 0074                                         l1038 335A  
                                       l1151 242F                                         l1216 2A07  
                                       l1138 26F4                                         l1219 2A55  
                                       l1239 28ED                                         l1343 06DE  
                                       l1271 2AD3                                         l1416 1E32  
                                       l1360 0761                                         l1417 1E4A  
                                       l1345 06C1                                         l1513 2CE2  
                                       l1281 2961                                         l1419 1E57  
                                       l1339 064B                                         l1381 07D8  
                                       l1373 07C0                                         l1447 1241  
                                       l1640 07F0                                         l1473 2C01  
                                       l1395 1D2B                                         l4211 375E  
                                       l4213 3762                                         l1486 2C4B  
                                       l1487 2C55                                         l1479 2C37  
                                       l5201 0691                                         l4217 3789  
                                       l4313 263D                                         l5211 06CB  
                                       l4235 32E0                                         l4331 268E  
                                       l4411 2955                                         l5141 061B  
                                       l4421 33B7                                         l4229 3467  
                                       l4237 32EC                                         l4341 26D3  
                                       l4317 2664                                         l4405 2916  
                                       l5311 07D4                                         l5143 0623  
                                       l4319 2668                                         l4351 238F  
                                       l4407 2925                                         l5321 07EA  
                                       l5209 06C9                                         l5161 0640  
                                       l5137 0618                                         l4329 267F  
                                       l7001 1F82                                         l5403 1D20  
                                       l5307 07D0                                         l5235 06FE  
                                       l5227 06EC                                         l5219 06D9  
                                       l5171 0655                                         l4339 26C7  
                                       l4363 23C3                                         l4371 240E  
                                       l4355 23B6                                         l7003 1F92  
                                       l7011 1FC5                                         l5237 0700  
                                       l5245 070F                                         l5165 0643  
                                       l4365 23D2                                         l7021 2706  
                                       l7005 1F9B                                         ?_pad 0026  
                                       l5503 1E53                                         l5423 1D56  
                                       l5407 1D23                                         l5271 0780  
                                       l5263 0773                                         l5255 0759  
                                       l6303 342D                                         l4295 3354  
                                       l5417 1D4A                                         l6161 2018  
                                       l4369 2402                                         l4385 2A7F  
                                       l7121 0B36                                         l7033 277E  
                                       l7025 2733                                         l5443 1D9D  
                                       l5451 1D7F                                         l5523 103C  
                                       l6155 2015                                         l4563 2F8E  
                                       l4395 2AC7                                         l4387 2A8E  
                                       l7123 0AD4                                         l5453 1DBB  
                                       l5613 11D7                                         l5605 11A9  
                                       l5541 105F                                         l5525 103E  
                                       l5285 0792                                         l5277 0787  
                                       l4581 2FDC                                         l4549 2F56  
                                       l7221 0DAB                                         l7117 0B32  
                                       l7109 0A9F                                         l7061 08E0  
                                       l7045 0843                                         l7037 27AC  
                                       l5383 1CFC                                         l5631 1217  
                                       l5607 11C0                                         l5543 1061  
                                       l5527 1046                                         l6167 20B7  
                                       l5279 0789                                         l4567 2F9F  
                                       l7231 0E0D                                         l7207 0D1E  
                                       l7135 0AF4                                         l8031 29DD  
                                       l5449 1DB6                                         l5617 11D9  
                                       l5553 1077                                         l5545 1069  
                                       l6169 20C7                                         l5289 0794  
                                       l6177 21B0                                         l4585 2FED  
                                       l4577 2FAF                                         l4569 2FAC  
                                       l7217 0D7D                                         l7057 08B3  
                                       l7049 0862                                         l8033 1EB7  
                                       l7411 2BDA                                         l7403 2BC1  
                                       l5475 1DEF                                         l5467 1DC1  
                                       l5387 1CFF                                         l5627 1202  
                                       l5731 00A5                                         l8035 2CBB  
                                       l4587 2FFA                                         l4755 3745  
                                       l4747 373E                                         l7235 0E3B  
                                       l7147 0B13                                         l5469 1DD8  
                                       l5389 1D07                                         l5637 122E  
                                       l5661 2C10                                         l5733 00C1  
                                       l8037 340F                                         l7501 1818  
                                       l6701 1A95                                         l4749 3719  
                                       l7245 0E9E                                         l7069 0929  
                                       l7421 2AF7                                         l7407 2BCC  
                                       l5479 1DF1                                         l5655 2BF9  
                                       l6711 1ADE                                         l7263 0F49  
                                       l7167 0BCF                                         l7079 0988  
                                       l7327 34C2                                         l5489 1E1A  
                                       l5665 2C14                                         l5745 0181  
                                       l5753 01CA                                         l6721 1AB9  
                                       l7273 0FAC                                         l7249 0EBD  
                                       l7177 0C08                                         l7089 09E8  
                                       l7329 34E2                                         l7441 2B55  
                                       l5915 28DB                                         l5675 2C49  
                                       l5667 2C24                                         l5739 0124  
                                       l7363 34F4                                         l7523 18FE  
                                       l7507 18C4                                         l6651 36C7  
                                       l6707 1AAC                                         l6803 24A6  
                                       l7283 0FD4                                         l7259 0F1C  
                                       l7187 0C66                                         l7099 0A40  
                                       l7443 2B5C                                         l7427 2B0B  
                                       l7701 2886                                         l5925 28FA  
                                       l5917 28E9                                         l5677 2C3C  
                                       l5765 01E4                                         l6661 36F5  
                                       l6733 1B5B                                         l6813 2507  
                                       l7197 0CC6                                         l7429 2B13  
                                       l7623 2F16                                         l7367 34FF  
                                       l5871 2A21                                         l7519 18D6  
                                       l7463 192D                                         l6911 2CAF  
                                       l6903 2C9A                                         l6647 36BF  
                                       l6743 1B73                                         l6815 2482  
                                       l6823 250C                                         l7279 0FCE  
                                       l7439 2B51                                         l7393 2B93  
                                       l7385 2B83                                         l7705 2892  
                                       l5689 2C70                                         l7625 2F25  
                                       l7553 2345                                         l7481 19EB  
                                       l6913 2CC3                                         l6657 36CB  
                                       l6681 349F                                         l6729 1B53  
                                       l6761 258B                                         l6753 253C  
                                       l6833 1BA3                                         l7289 0FDD  
                                       l7395 2BA1                                         l7627 2F2D  
                                       l5875 2A3B                                         l6739 1B66  
                                       l6771 2566                                         l6843 1BD3  
                                       l7725 35E1                                         l7717 3618  
                                       l5965 340A                                         l7733 2DC8  
                                       l7549 231D                                         l7485 1A15  
                                       l7469 19D9                                         l6917 2CE6  
                                       l6909 2CAA                                         l5895 28AD  
                                       l7575 2165                                         l5983 333A  
                                       l6927 2D15                                         l6679 3496  
                                       l6863 1C3B                                         l6847 1BED  
                                       l6871 1C7D                                         l6839 1BBB  
                                       l7815 2976                                         l7841 29BD  
                                       l7833 2998                                         l5899 28B6  
                                       l7771 3645                                         l7579 218D  
                                       l6787 25FD                                         l6947 1E83  
                                       l6963 1E9E                                         l7677 345A  
                                       l7693 286E                                         l6797 245B  
                                       l6981 1F0E                                         l6957 1E99  
                                       l7837 29A8                                         l7767 363E  
                                       l6895 2C7E                                         l6887 1CCC  
                                       l6983 1F17                                         l6967 1ED0  
                                       l7847 29D3                                         l7871 3576  
                                       l7697 287A                                         l7689 2862  
                                       l7769 3642                                         l7795 2DB0  
                                       l6979 1EFE                                         l6989 1F41  
                                       STR_1 3802                                 __CFG_WDTE$ON 0000  
                                       STR_2 39D6                                         STR_3 399C  
                                       STR_4 382A                                         STR_6 38F0  
                                       STR_7 389C                                         STR_8 3870  
                                       STR_9 3886                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u4220 32D4  
                                       u4230 32D5                                         u4150 3319  
                                       u4055 3787                                         u4320 266F  
                                       u4160 331A                                         u4145 32FC  
                                       u4170 33D4                                         u4180 33D5  
                                       u4255 335B                                         u4265 3360  
                                       u6035 0774                                         u4355 26B4  
                                       u4525 2AB4                                         u6215 07F1  
                                       u6135 07AB                                         u7015 00B5  
                                       u4455 23F0                   enableDischarging@sys_ctrl2 007B  
                                       u4490 2A6F                                         u7035 00D2  
                                       u6405 1D8E                                         u4565 2943  
                                       u7055 0135                                         u8040 1010  
                                       u6425 1D97                                         u8025 36D5  
                                       u4905 2F76                                         u8050 1011  
                                       _SCS0 04C8                                         u6435 1DAB  
                                       u7315 28BF                                         _SCS1 04C9  
                                       u4925 2FAA                                         u4870 2F45  
                                       u7095 01FC                                         u8135 1A8D  
                                       u4935 2FB9                                         u8080 1A51  
                                       u6465 1DC4                                         u6705 1189  
                                       u7345 28DC                                         u8305 2586  
                                       u8090 1A52                                         u6555 1E08  
                                       u6395 1D87                                         u6715 1198  
                                       u5915 06CF                                         u4955 2FF8  
                                       u6565 1E23                                         u6485 1DCD  
                                       u6725 11AC                                         u7605 203A  
                                       u8165 1B51                                         u5870 06B0  
                                       u6575 1E3C                                         u6815 11F0  
                                       u7375 28F1                                         u7615 20C5  
                                       u8255 2534                                         u5880 06B1  
                                       u7800 3433                                         u6825 120B  
                                       u6745 11B5                                         u6905 2C31  
                                       u7625 20D5                                         u5865 06A5  
                                       u8185 1ACD                                         u8265 25BD  
                                       u8425 1B9B                                         u8610 2CFA  
                                       u8450 1C04                                         u6835 1221  
                                       u6675 10ED                                         u7635 2286  
                                       u8195 1AD9                                         u8275 25E2  
                                       u8355 2453                                         u8515 1C61  
                                       u8620 2CFB                                         u8460 1C05  
                                       u8700 1F33                                         u9245 2B96  
                                       u6685 111C                                         u6925 2C43  
                                       u8525 1C87                                         u8445 1BE7  
                                       u8710 1F34                                         u6695 1172  
                                       u8295 257A                                         u8480 1C24  
                                       u9265 2BA2                                         u5993 0721  
                                       u5985 0704                                         u9185 3500  
                                       u9425 18EF                                         u8385 2495  
                                       u8545 1C9D                                         u7770 3423  
                                       u8490 1C25                                         u9275 2BB6  
                                       u9195 3507                                         u8395 24A1  
                                       u8555 1CA9                                         u9355 2B48  
                                       u7780 3424                                         u9285 2BC2  
                                       u6965 2C5D                                         u6885 2C1D  
                                       u9445 22F7                                         u7790 3432  
                                       u8750 1FB7                                         u9455 2335  
                                       u8760 1FB8                                         u9705 2D71  
                                       u9625 2DDE                                         u9385 1A04  
                                       u9715 2D88                                         u9475 2146  
                                       u7980 3330                                         u9645 2E44  
                                       u9485 217D                                         u7990 3331  
                                       u9675 2D24                                         u9685 2D3B  
                                       u9757 357F                                         u9767 3396  
                                       u9777 29B5                                         _TMR1 0016  
                                       u9787 32A9                                         _SPEN 0CEF  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 022E  
                             ?_updateCurrent 0070                                         _atoi 2C79  
                                       _ctoa 3489                                         _main 3552  
                                       _dtoa 1A36                                         _logf 0074  
                                       _prec 0166                                         _otoa 2522  
                                       _nout 0162                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2F3B                                         btemp 007E  
                                       _utoa 2441                                         _xtoa 1B89  
                                       start 001E                    __end_of_calibrate_BATTSOC 20D8  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 1526  
                   __end_of_send_I2C_stopBit 324F                            _enableDischarging 35F4  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 3269                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 2BE3                              __end_of___aodiv 2706  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 07E0                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2441  
              I2C_writeRegister@slaveAddress 0075                                        ?_logf 00A8  
                            __end_of___fldiv 1E5C                              __end_of___flneg 327D  
                                      STR_10 38B1                                        STR_11 38C6  
                                      STR_12 38DB                                        STR_21 39BE  
                                      STR_13 3905                                        STR_30 39BF  
                                      STR_14 3919                                        STR_23 39C2  
                                      STR_15 392D                                        STR_16 3940  
                                      STR_25 39C2                                        STR_41 39E0  
                                      STR_17 3952                                        STR_34 39C3  
                                      STR_43 39E0                                        STR_19 39BE  
                                      STR_53 39CB                                        STR_37 39DD  
                                      STR_61 39C6                                        STR_46 39CA  
                                      STR_39 39DD                                        STR_63 39C6  
                                      STR_71 39E3                                        STR_48 39CA  
                                      STR_56 39E6                                        STR_73 39E3  
                                      STR_58 39E6                                        STR_83 39CF  
                                      STR_91 39D2                                        STR_68 39C7  
                                      STR_76 39CE                                        STR_93 39D2  
                                      STR_78 39CE                                        STR_86 39E9  
                                      STR_95 39BA                                        STR_88 39E9  
                            __end_of___flmul 124E                                        STR_97 39BA  
                                      ?_otoa 0030                              __end_of___flsub 3552  
                            __end_of___fltol 2909                                        ?_stoa 0020  
                                      ?_utoa 0030                              __end_of___lodiv 2AE4  
                                      ?_xtoa 0030                              __end_of___lomod 2972  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l187 001C  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 3238  
                                      _flags 0168                                        _errno 01C8  
                                      _fputc 3756                              __end_of_isalpha 33DC  
                                      _fputs 3463                                        _myIsr 0004  
                            __end_of_isdigit 32DC                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0164                                        ctoa@c 0032  
                                      _putch 07FF                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 3338                              __end_of_isspace 33BF  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
         __end_of_lookupTableSamsung_voltage 30B8                   _lookupTableSamsung_voltage 305C  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 3321  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3994                              __end_of_strncmp 3756  
                            __end_of_toupper 1022                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                     __size_of_coulomb_counter 00DC  
                               _toupper$2020 0079                               __CFG_MCLRE$OFF 0000  
                  __end_of_enableDischarging 362B                              __initialization 0020  
                            ?_updateVoltages 0070                     updateTemperatures@adcVal 00E7  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2D1A  
                               __end_of_ctoa 34BA                                 __end_of_main 3587  
                               __end_of_dtoa 1B89                                 __end_of_logf 05FE  
                               __end_of_otoa 2613                                 __end_of_stoa 3000  
                               __end_of_utoa 2522                                 __end_of_xtoa 1CE2  
                   __end_of_UV_delay_setting 3994                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                    _watchdog_timeout_shutdown 3388  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3800  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 00EE                                       ??_dtoa 003A  
                                     ??_logf 00AC                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 36B3  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_102 39D3                                       ?_fputs 007A  
                                     STR_111 39EC                                       STR_113 39DA  
                                     STR_106 39BB                                       STR_115 39DA  
                                     ?_myIsr 0070                                       STR_109 39EC  
                                     _CCPR1L 0291                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3870  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 399C                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     u440lld 238D                                       _SPLLEN 04CF  
                                     u429lld 263B                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                _read_I2C_data 2002  
                           __end_of___xxtofl 2C79                   __size_of_calibrate_BATTSOC 00C6  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 341B  
                               vfprintf@cfmt 0068                                 ??_AFE_Status 007B  
                                     ___flge 29EC                                       ___lmul 34EB  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01CA                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3352  
                                     _ln2_hi 39B6                                    ??___fldiv 0048  
                                     _ln2_lo 39B2                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 32AE  
                                  ??___lomod 0071                             __end_of_init_AFE 3800  
                           __end_of_init_RGB 3232                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2DC3                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 32DC                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3665                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2263 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 34EB  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 3388                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                         __end_of_AFE_Status 28A3                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 0070                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                             coulomb_counter@i 00B1  
                                 ___fltol@f1 00A8                      AFE_FET_Status@sys_ctrl2 0020  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 3229  
                               __pidataBANK4 3238                                __end_of_fputc 37AA  
                              __end_of_fputs 3489                                __end_of_myIsr 001E  
                               _cellVoltages 01AA                                __end_of_putch 0800  
                          ??_coulomb_counter 006E                      __size_of_AFE_FET_Status 0026  
                                 _batCurrent 01C4                           _RGB_AWAIT_AFE_CONN 341B  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02DA  
                                 _batVoltage 022A                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                   _cellCharge 01A0  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK2 0162  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 3257              setShortCircuitProtection@i_1117 00AA  
                         __size_of_init_GPIO 0043                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                           __size_of_init_TMR6 0017  
                        statemachine@success 00ED                            __end_of__Umul8_16 07FF  
                                 __pmaintext 3552                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B8                                    ?___xxtofl 0071  
                         __size_of_vfpfcnvrt F1A4           __size_of_watchdog_timeout_shutdown 001B  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 21AD        __size_of_setCellOvervoltageProtection 00D5  
               _setCellOvervoltageProtection 20D8                             ??_updateVoltages 00B1  
      __end_of_setCellUndervoltageProtection 2365       __size_of_setCellUndervoltageProtection 00DC  
              _setCellUndervoltageProtection 2289                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                      _samsung_cell_max_charge 01EA  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 35BD  
                                    ___aldiv 2B61                                      _adcGain 016E  
                            __size_of___flge 007C                                      ___aodiv 2613  
                                    ___fladd 05FE                                      ___aomod 2365  
                                    ___fldiv 1CE2                                      ___flneg 3273  
                            __size_of___lmul 0032                                      ___flmul 1022  
                                    ___flsub 351D                                      ___fltol 28A3  
                            __size_of___wmul 001B                                      ___lodiv 2A68  
                                    ___lomod 2909                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                      _cellSOC 0220  
                              _messageBuffer 2771                                      __ptext1 3388  
                                    __ptext2 2972                                      __ptext3 3665  
                                    __ptext4 336D                                      __ptext5 2AE4  
                                    __ptext6 34BA                                      __ptext7 1E5C  
                                    __ptext8 1B89                                      __ptext9 1000  
                          __end_of_init_GPIO 0843                            __end_of_initClock 3229  
                          __end_of_init_TMR1 3292                            __end_of_init_TMR6 32C5  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 3232                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 33BF  
                                    _isdigit 32C5                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 3321  
                                    _isspace 33A3    __end_of_setOverCurrentDischargeProtection 191E  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 1809  
                                    _isupper 330A                                    _T6CONbits 041E  
                                    atoi@neg 0024                                      clrloop0 3293  
          __end_of_watchdog_timeout_shutdown 33A3                                      _strncmp 3704  
                                    _toupper 1000                         end_of_initialization 0070  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2D1A                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 3260  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 440092                                      psplit$1 920093  
                              _send_I2C_data 1800                                    _RGB_color 33FA  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                               _AFE_FET_Status 343D  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 35BD  
                          __end_of_vsnprintf 2B61                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 004E  
              __end_of_SCD_threshold_setting 3984                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 33DC                                  ___flmul@grs 0034  
                     _lookupTableSamsung_SOC 3000                    __end_of_EUSART_Initialize 2DC3  
                      __end_of_updateCurrent 2F3B                        _OCD_threshold_setting 3850  
                                _CCP1CONbits 0293                             _dschg_fet_enable 01CE  
                            _coulomb_counter 21AD                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                       __end_of_AFE_FET_Status 3463  
                        ??_I2C_writeRegister 007B                                   ?_RGB_color 0071  
                             __end_of___flge 2A68                               __end_of___lmul 351D  
                                vfpfcnvrt@ap 005A                                  vfpfcnvrt@cp 00A0  
                                vfpfcnvrt@fp 0057                                  vfpfcnvrt@ll 00A8  
                             __end_of___wmul 336D                                  vfpfcnvrt@vp 00B0  
                             __end_of_ln2_hi 39BA                               __end_of_ln2_lo 39B6  
                               _EUSART_Write 324F                  I2C_writeRegister@regAddress 0077  
              setShuntResistorValue@res_mOhm 0071                       __end_of_enableCharging 35F4  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 32F3  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 01EC  
                                __end_of_Lg1 39B2                                  __end_of_Lg2 39AE  
                                __end_of_Lg3 39AA                                  __end_of_Lg4 39A6  
                              ?_statemachine 0070                                  __end_of_abs 330A  
                                __end_of_pad 3704                            _minCellTempCharge 01E4  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01DE  
                       updateVoltages@adcVal 00B8                         _minCellTempDischarge 01E2  
                          pnum$text7_split_1 0092                            pnum$text7_split_2 0093  
                  __end_of_I2C_writeRegister 33FA       _setOverCurrentDischargeProtection$2262 00A4  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 3338                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                            ?_AFE_FET_Status 0070                                  _CCPTMRSbits 029E  
                                  __Umul8_16 07E0                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01EA                                  __pdataBANK4 024E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016A                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 00EB                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01E6  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 00D0  
                          __size_of___xxtofl 0096                                 _readRegister 3587  
                    __end_of_coulomb_counter 2289     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                    __end_of_EUSART_Write_Text 3352  
                         calibrate_BATTSOC@i 00B6                           calibrate_BATTSOC@j 00B8  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1885 0026                                    _atoi$1886 002A  
                                  _atoi$1887 0028                             _OV_delay_setting 3984  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 323F  
                                  _dtoa$1434 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022                                  _alert_error 01DA  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 3287  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                         AFE_Status@error_flag 0022  
                                   ?___flsub 00A0                                     ?___fltol 00A8  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                                    _logf$2275 0152  
                                  _logf$2276 012C                                    _logf$2277 0130  
                                  _logf$2278 0134                                    _logf$2279 0138  
                          __size_of_vfprintf 0031                          ??_send_I2C_startBit 0071  
                          __size_of_snprintf 001B                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                  _ocd_error 01D2                                     ?_islower 0071  
                                   ?_isspace 0071                                    _init_GPIO 0800  
                                   ?_isupper 0071                                    _initClock 3226  
                                  _init_TMR1 3287                                    _init_TMR6 32AE  
                                  _currState 01E9                    _setShortCircuitProtection 191E  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                                    _scd_error 01D4  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 2012  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 3247                                    clear_ram0 3292  
                                  _tmr1_flag 01E7                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 3260  
                        _printcellParameters 3665                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1470 0043                                    _xtoa$1471 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 2800  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                                   ?_init_TMR6 0070  
                               _isspace$1912 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 00B2                            ___lmul@multiplier 0071  
                       ?_printcellParameters 0070                             ?_coulomb_counter 0070  
                      _temperatureThermistor 01C0                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2AE4  
                                   _XR_error 01DC                                   _AFE_UPDATE 362B  
                          _OCD_delay_setting 3964                         __end_of_statemachine 29EC  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                 _AFE_Status 2844                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___flneg 000A               _setShortCircuitProtection$2261 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2BE3  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 305C                             _send_I2C_stopBit 3247  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 3321                                     __ptext11 330A  
                                   __ptext20 32F3                                     __ptext12 33BF  
                                   __ptext21 2365                                     __ptext13 2441  
                                   __ptext30 33A3                                     __ptext22 2613  
                                   __ptext14 2909                                     __ptext31 32C5  
                                   __ptext23 3489                                     __ptext15 2A68  
                                   __ptext40 29EC                                     __ptext32 3338  
                                   __ptext24 36B3                                     __ptext16 3704  
                                   __ptext41 2289                                     __ptext33 324F  
                                   __ptext25 32DC                                     __ptext17 2F3B  
                                   __ptext50 0074                                     __ptext42 20D8  
                                   __ptext34 37AA                                     __ptext26 3463  
                                   __ptext18 2522                                     __ptext51 2E77  
                                   __ptext43 2DC3                                     __ptext35 2800  
                                   __ptext27 3756                                     __ptext19 1A36  
                                   __ptext60 2BE3                                     __ptext52 3273  
                                   __ptext44 341B                                     __ptext36 3352  
                                   __ptext28 07FF                                     __ptext61 28A3  
                                   __ptext53 35F4                                     __ptext45 33FA  
                                   __ptext37 327D                                     __ptext29 2C79  
                                   __ptext70 1800                                     __ptext62 1022  
                                   __ptext54 35BD                                     __ptext46 362B  
                                   __ptext38 191E                                     __ptext71 3269  
                                   __ptext63 07E0                                     __ptext55 33DC  
                                   __ptext47 124E                                     __ptext39 1809  
                                   __ptext80 3226                                     __ptext72 3260  
                                   __ptext64 1CE2                                     __ptext56 21AD  
                                   __ptext48 34EB                                     __ptext81 3257  
                                   __ptext73 2002                                     __ptext65 2844  
                                   __ptext57 351D                                     __ptext49 1526  
                                   __ptext82 2D1A                                     __ptext74 32AE  
                                   __ptext66 343D                                     __ptext58 05FE  
                                   __ptext83 2B61                                     __ptext75 3287  
                                   __ptext67 3587                                     __ptext59 2012  
                                   __ptext76 322D                                     __ptext68 3247  
                                   __ptext77 329E                                     __ptext69 323F  
                                   __ptext78 0800                                     __ptext79 3232  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 3974  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 329E                                     _init_AFE 37AA  
                                   _init_RGB 322D                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0035  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0044                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3974  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3257                             ??_AFE_FET_Status 007B  
                                 _RB1PPSbits 0E99                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 024E  
                                   _ov_error 01D6                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2E77                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 016D  
                                   _protect2 016C                                     _protect3 01E8  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 34BA  
                           ??_enableCharging 0022                                     _snprintf 336D  
                                   _uv_error 01D8                             ___aomod@dividend 0028  
                                   logf@F469 01B4                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 398C  
                             _vfpfcnvrt$1485 00A4                               _vfpfcnvrt$1486 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                ??_init_TMR6 0071                                     logf@hfsq 013E  
                             __pstringtext10 39A6                               __pstringtext11 39AA  
                             __pstringtext20 38B1                               __pstringtext12 39AE  
                             __pstringtext21 38C6                               __pstringtext13 39B2  
                             __pstringtext30 39BA                               __pstringtext22 38DB  
                             __pstringtext14 39B6                               __pstringtext31 39BE  
                             __pstringtext23 38F0                               __pstringtext15 3800  
                             __pstringtext40 39E0                               __pstringtext32 39C2  
                             __pstringtext24 3905                               __pstringtext16 382A  
                             __pstringtext41 39E3                               __pstringtext33 39C6  
                             __pstringtext25 3919                               __pstringtext17 3870  
                             __pstringtext42 39E6                               __pstringtext34 39CA  
                             __pstringtext26 392D                               __pstringtext18 3886  
                             __pstringtext43 39E9                               __pstringtext35 39CE  
                             __pstringtext27 3940                               __pstringtext19 389C  
                             __pstringtext44 39EC                               __pstringtext36 39D2  
                             __pstringtext28 3952                               __pstringtext45 0000  
                             __pstringtext37 39D6                               __pstringtext29 399C  
                             __pstringtext38 39DA                               __pstringtext39 39DD  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1526  
                           _UV_delay_setting 398C                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 3273  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                ?_AFE_Status 0020                            _maxCellTempCharge 01E0  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3000                                __pstringtext2 305C  
                              __pstringtext3 3850                                __pstringtext4 3964  
                              __pstringtext5 3974                                __pstringtext6 3984  
                              __pstringtext7 398C                                __pstringtext8 3994  
                              __pstringtext9 39A2                           AFE_Status@sys_stat 0024  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$2057 00C2      setOverCurrentDischargeProtection@i_1126 00AA  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 2844  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2270 00CF                      _updateTemperatures$2271 00D3  
                    _updateTemperatures$2272 00D7                      _updateTemperatures$2264 00B7  
                    _updateTemperatures$2273 00DB                      _updateTemperatures$2265 00BB  
                    _updateTemperatures$2274 00DF                      _updateTemperatures$2266 00BF  
                    _updateTemperatures$2267 00C3                      _updateTemperatures$2268 00C7  
                    _updateTemperatures$2269 00CB                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 007A  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2E77  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 343D  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3269                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2012  
