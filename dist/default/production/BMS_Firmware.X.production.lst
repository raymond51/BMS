

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Dec 25 02:09:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	cinit,global,class=CODE,merge=1,delta=2
    48                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    49                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    50                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    51                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    54                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    55                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    56                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    57                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    58                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    59                           	psect	text1,local,class=CODE,merge=1,delta=2
    60                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text4,local,class=CODE,merge=1,delta=2
    63                           	psect	text5,local,class=CODE,merge=1,delta=2
    64                           	psect	text6,local,class=CODE,merge=1,delta=2
    65                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text10,local,class=CODE,merge=1,delta=2
    69                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text14,local,class=CODE,merge=1,delta=2
    73                           	psect	text15,local,class=CODE,merge=1,delta=2
    74                           	psect	text16,local,class=CODE,merge=1,delta=2
    75                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text28,local,class=CODE,merge=1,delta=2
    87                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text32,local,class=CODE,merge=1,delta=2
    91                           	psect	text33,local,class=CODE,merge=1,delta=2
    92                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text41,local,class=CODE,merge=1,delta=2
   100                           	psect	text42,local,class=CODE,merge=1,delta=2
   101                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text44,local,class=CODE,merge=1,delta=2
   103                           	psect	text45,local,class=CODE,merge=1,delta=2
   104                           	psect	text46,local,class=CODE,merge=1,delta=2
   105                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text50,local,class=CODE,merge=1,delta=2
   109                           	psect	text51,local,class=CODE,merge=1,delta=2
   110                           	psect	text52,local,class=CODE,merge=1,delta=2
   111                           	psect	text53,local,class=CODE,merge=1,delta=2
   112                           	psect	text54,local,class=CODE,merge=1,delta=2
   113                           	psect	text55,local,class=CODE,merge=1,delta=2
   114                           	psect	text56,local,class=CODE,merge=1,delta=2
   115                           	psect	text57,local,class=CODE,merge=1,delta=2
   116                           	psect	text58,local,class=CODE,merge=1,delta=2
   117                           	psect	text59,local,class=CODE,merge=1,delta=2
   118                           	psect	text60,local,class=CODE,merge=1,delta=2
   119                           	psect	text61,local,class=CODE,merge=1,delta=2
   120                           	psect	text62,local,class=CODE,merge=1,delta=2
   121                           	psect	text63,local,class=CODE,merge=1,delta=2
   122                           	psect	text64,local,class=CODE,merge=1,delta=2
   123                           	psect	text65,local,class=CODE,merge=1,delta=2
   124                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text69,local,class=CODE,merge=1,delta=2
   128                           	psect	text70,local,class=CODE,merge=1,delta=2
   129                           	psect	text71,local,class=CODE,merge=1,delta=2
   130                           	psect	text72,local,class=CODE,merge=1,delta=2
   131                           	psect	text73,local,class=CODE,merge=1,delta=2
   132                           	psect	text74,local,class=CODE,merge=1,delta=2
   133                           	psect	text75,local,class=CODE,merge=1,delta=2
   134                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
   135                           	psect	intentry,global,class=CODE,delta=2
   136                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
   137                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
   138                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
   139                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
   140                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
   141                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
   142                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
   143                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
   144                           	dabs	1,0xCA0,32
   145                           	dabs	1,0xC20,80
   146                           	dabs	1,0xBE1,15
   147                           	dabs	1,0x2771,0,_messageBuffer
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 2.05
   151                           ; Generated 20/12/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F1719 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0110                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011C                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0199                     	;# 
   266  0199                     	;# 
   267  0199                     	;# 
   268  019A                     	;# 
   269  019A                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019C                     	;# 
   277  019C                     	;# 
   278  019C                     	;# 
   279  019D                     	;# 
   280  019D                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019E                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  019F                     	;# 
   288  019F                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  020D                     	;# 
   292  020E                     	;# 
   293  020F                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  028C                     	;# 
   312  028D                     	;# 
   313  028E                     	;# 
   314  028F                     	;# 
   315  0290                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0293                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029A                     	;# 
   326  029E                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  038C                     	;# 
   333  038D                     	;# 
   334  038E                     	;# 
   335  038F                     	;# 
   336  0390                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0397                     	;# 
   344  0398                     	;# 
   345  0399                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0498                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  049E                     	;# 
   364  049F                     	;# 
   365  0511                     	;# 
   366  0515                     	;# 
   367  0617                     	;# 
   368  0618                     	;# 
   369  0619                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061C                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  0695                     	;# 
   380  0696                     	;# 
   381  0697                     	;# 
   382  0698                     	;# 
   383  0699                     	;# 
   384  069A                     	;# 
   385  069B                     	;# 
   386  069C                     	;# 
   387  069D                     	;# 
   388  069E                     	;# 
   389  069F                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E17                     	;# 
   398  0E20                     	;# 
   399  0E21                     	;# 
   400  0E22                     	;# 
   401  0E24                     	;# 
   402  0E25                     	;# 
   403  0E28                     	;# 
   404  0E29                     	;# 
   405  0E2A                     	;# 
   406  0E2B                     	;# 
   407  0E90                     	;# 
   408  0E91                     	;# 
   409  0E92                     	;# 
   410  0E93                     	;# 
   411  0E94                     	;# 
   412  0E95                     	;# 
   413  0E96                     	;# 
   414  0E97                     	;# 
   415  0E98                     	;# 
   416  0E99                     	;# 
   417  0E9A                     	;# 
   418  0E9B                     	;# 
   419  0E9C                     	;# 
   420  0E9D                     	;# 
   421  0E9E                     	;# 
   422  0E9F                     	;# 
   423  0EA0                     	;# 
   424  0EA1                     	;# 
   425  0EA2                     	;# 
   426  0EA3                     	;# 
   427  0EA4                     	;# 
   428  0EA5                     	;# 
   429  0EA6                     	;# 
   430  0EA7                     	;# 
   431  0EA8                     	;# 
   432  0EA9                     	;# 
   433  0EAA                     	;# 
   434  0EAB                     	;# 
   435  0EAC                     	;# 
   436  0EAD                     	;# 
   437  0EAE                     	;# 
   438  0EAF                     	;# 
   439  0EB0                     	;# 
   440  0EB1                     	;# 
   441  0EB2                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0110                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011A                     	;# 
   558  011B                     	;# 
   559  011B                     	;# 
   560  011C                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  018F                     	;# 
   565  0190                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  020C                     	;# 
   601  020D                     	;# 
   602  020E                     	;# 
   603  020F                     	;# 
   604  0210                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  028C                     	;# 
   622  028D                     	;# 
   623  028E                     	;# 
   624  028F                     	;# 
   625  0290                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0293                     	;# 
   631  0298                     	;# 
   632  0298                     	;# 
   633  0299                     	;# 
   634  029A                     	;# 
   635  029A                     	;# 
   636  029E                     	;# 
   637  030C                     	;# 
   638  030D                     	;# 
   639  030E                     	;# 
   640  030F                     	;# 
   641  0310                     	;# 
   642  038C                     	;# 
   643  038D                     	;# 
   644  038E                     	;# 
   645  038F                     	;# 
   646  0390                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  039D                     	;# 
   657  039E                     	;# 
   658  039F                     	;# 
   659  0415                     	;# 
   660  0416                     	;# 
   661  0417                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049D                     	;# 
   673  049E                     	;# 
   674  049F                     	;# 
   675  0511                     	;# 
   676  0515                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0696                     	;# 
   691  0697                     	;# 
   692  0698                     	;# 
   693  0699                     	;# 
   694  069A                     	;# 
   695  069B                     	;# 
   696  069C                     	;# 
   697  069D                     	;# 
   698  069E                     	;# 
   699  069F                     	;# 
   700  0E0F                     	;# 
   701  0E10                     	;# 
   702  0E11                     	;# 
   703  0E12                     	;# 
   704  0E13                     	;# 
   705  0E14                     	;# 
   706  0E15                     	;# 
   707  0E17                     	;# 
   708  0E20                     	;# 
   709  0E21                     	;# 
   710  0E22                     	;# 
   711  0E24                     	;# 
   712  0E25                     	;# 
   713  0E28                     	;# 
   714  0E29                     	;# 
   715  0E2A                     	;# 
   716  0E2B                     	;# 
   717  0E90                     	;# 
   718  0E91                     	;# 
   719  0E92                     	;# 
   720  0E93                     	;# 
   721  0E94                     	;# 
   722  0E95                     	;# 
   723  0E96                     	;# 
   724  0E97                     	;# 
   725  0E98                     	;# 
   726  0E99                     	;# 
   727  0E9A                     	;# 
   728  0E9B                     	;# 
   729  0E9C                     	;# 
   730  0E9D                     	;# 
   731  0E9E                     	;# 
   732  0E9F                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0EA6                     	;# 
   740  0EA7                     	;# 
   741  0EA8                     	;# 
   742  0EA9                     	;# 
   743  0EAA                     	;# 
   744  0EAB                     	;# 
   745  0EAC                     	;# 
   746  0EAD                     	;# 
   747  0EAE                     	;# 
   748  0EAF                     	;# 
   749  0EB0                     	;# 
   750  0EB1                     	;# 
   751  0EB2                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0F20                     	;# 
   770  0F21                     	;# 
   771  0F22                     	;# 
   772  0F23                     	;# 
   773  0F24                     	;# 
   774  0F25                     	;# 
   775  0F26                     	;# 
   776  0F27                     	;# 
   777  0F28                     	;# 
   778  0F29                     	;# 
   779  0F2A                     	;# 
   780  0F2B                     	;# 
   781  0F2C                     	;# 
   782  0F2D                     	;# 
   783  0F2E                     	;# 
   784  0F2F                     	;# 
   785  0F30                     	;# 
   786  0F31                     	;# 
   787  0F32                     	;# 
   788  0F33                     	;# 
   789  0F34                     	;# 
   790  0F35                     	;# 
   791  0F36                     	;# 
   792  0F37                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000D                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0015                     	;# 
   825  0016                     	;# 
   826  0016                     	;# 
   827  0017                     	;# 
   828  0018                     	;# 
   829  0019                     	;# 
   830  001A                     	;# 
   831  001B                     	;# 
   832  001C                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0110                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011B                     	;# 
   870  011C                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  018F                     	;# 
   875  0190                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0194                     	;# 
   882  0195                     	;# 
   883  0196                     	;# 
   884  0197                     	;# 
   885  0199                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  020D                     	;# 
   912  020E                     	;# 
   913  020F                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  028C                     	;# 
   932  028D                     	;# 
   933  028E                     	;# 
   934  028F                     	;# 
   935  0290                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0293                     	;# 
   941  0298                     	;# 
   942  0298                     	;# 
   943  0299                     	;# 
   944  029A                     	;# 
   945  029A                     	;# 
   946  029E                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  030F                     	;# 
   951  0310                     	;# 
   952  038C                     	;# 
   953  038D                     	;# 
   954  038E                     	;# 
   955  038F                     	;# 
   956  0390                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  0394                     	;# 
   961  0395                     	;# 
   962  0396                     	;# 
   963  0397                     	;# 
   964  0398                     	;# 
   965  0399                     	;# 
   966  039D                     	;# 
   967  039E                     	;# 
   968  039F                     	;# 
   969  0415                     	;# 
   970  0416                     	;# 
   971  0417                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0511                     	;# 
   986  0515                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061C                     	;# 
   995  0691                     	;# 
   996  0692                     	;# 
   997  0693                     	;# 
   998  0694                     	;# 
   999  0695                     	;# 
  1000  0696                     	;# 
  1001  0697                     	;# 
  1002  0698                     	;# 
  1003  0699                     	;# 
  1004  069A                     	;# 
  1005  069B                     	;# 
  1006  069C                     	;# 
  1007  069D                     	;# 
  1008  069E                     	;# 
  1009  069F                     	;# 
  1010  0E0F                     	;# 
  1011  0E10                     	;# 
  1012  0E11                     	;# 
  1013  0E12                     	;# 
  1014  0E13                     	;# 
  1015  0E14                     	;# 
  1016  0E15                     	;# 
  1017  0E17                     	;# 
  1018  0E20                     	;# 
  1019  0E21                     	;# 
  1020  0E22                     	;# 
  1021  0E24                     	;# 
  1022  0E25                     	;# 
  1023  0E28                     	;# 
  1024  0E29                     	;# 
  1025  0E2A                     	;# 
  1026  0E2B                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E98                     	;# 
  1036  0E99                     	;# 
  1037  0E9A                     	;# 
  1038  0E9B                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0E9F                     	;# 
  1043  0EA0                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA6                     	;# 
  1050  0EA7                     	;# 
  1051  0EA8                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EAD                     	;# 
  1057  0EAE                     	;# 
  1058  0EAF                     	;# 
  1059  0EB0                     	;# 
  1060  0EB1                     	;# 
  1061  0EB2                     	;# 
  1062  0F0F                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F28                     	;# 
  1088  0F29                     	;# 
  1089  0F2A                     	;# 
  1090  0F2B                     	;# 
  1091  0F2C                     	;# 
  1092  0F2D                     	;# 
  1093  0F2E                     	;# 
  1094  0F2F                     	;# 
  1095  0F30                     	;# 
  1096  0F31                     	;# 
  1097  0F32                     	;# 
  1098  0F33                     	;# 
  1099  0F34                     	;# 
  1100  0F35                     	;# 
  1101  0F36                     	;# 
  1102  0F37                     	;# 
  1103  0FE4                     	;# 
  1104  0FE5                     	;# 
  1105  0FE6                     	;# 
  1106  0FE7                     	;# 
  1107  0FE8                     	;# 
  1108  0FE9                     	;# 
  1109  0FEA                     	;# 
  1110  0FEB                     	;# 
  1111  0FED                     	;# 
  1112  0FEE                     	;# 
  1113  0FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  000F                     	;# 
  1130  0010                     	;# 
  1131  0011                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  008C                     	;# 
  1144  008D                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  010F                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  018C                     	;# 
  1182  018D                     	;# 
  1183  018E                     	;# 
  1184  018F                     	;# 
  1185  0190                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  0199                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019A                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  019C                     	;# 
  1208  019C                     	;# 
  1209  019D                     	;# 
  1210  019D                     	;# 
  1211  019D                     	;# 
  1212  019E                     	;# 
  1213  019E                     	;# 
  1214  019E                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  019F                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  020C                     	;# 
  1221  020D                     	;# 
  1222  020E                     	;# 
  1223  020F                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0213                     	;# 
  1231  0214                     	;# 
  1232  0214                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0293                     	;# 
  1251  0298                     	;# 
  1252  0298                     	;# 
  1253  0299                     	;# 
  1254  029A                     	;# 
  1255  029A                     	;# 
  1256  029E                     	;# 
  1257  030C                     	;# 
  1258  030D                     	;# 
  1259  030E                     	;# 
  1260  030F                     	;# 
  1261  0310                     	;# 
  1262  038C                     	;# 
  1263  038D                     	;# 
  1264  038E                     	;# 
  1265  038F                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  0393                     	;# 
  1270  0394                     	;# 
  1271  0395                     	;# 
  1272  0396                     	;# 
  1273  0397                     	;# 
  1274  0398                     	;# 
  1275  0399                     	;# 
  1276  039D                     	;# 
  1277  039E                     	;# 
  1278  039F                     	;# 
  1279  0415                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  0498                     	;# 
  1286  0498                     	;# 
  1287  0499                     	;# 
  1288  049A                     	;# 
  1289  049B                     	;# 
  1290  049B                     	;# 
  1291  049C                     	;# 
  1292  049D                     	;# 
  1293  049E                     	;# 
  1294  049F                     	;# 
  1295  0511                     	;# 
  1296  0515                     	;# 
  1297  0617                     	;# 
  1298  0618                     	;# 
  1299  0619                     	;# 
  1300  0619                     	;# 
  1301  061A                     	;# 
  1302  061B                     	;# 
  1303  061C                     	;# 
  1304  061C                     	;# 
  1305  0691                     	;# 
  1306  0692                     	;# 
  1307  0693                     	;# 
  1308  0694                     	;# 
  1309  0695                     	;# 
  1310  0696                     	;# 
  1311  0697                     	;# 
  1312  0698                     	;# 
  1313  0699                     	;# 
  1314  069A                     	;# 
  1315  069B                     	;# 
  1316  069C                     	;# 
  1317  069D                     	;# 
  1318  069E                     	;# 
  1319  069F                     	;# 
  1320  0E0F                     	;# 
  1321  0E10                     	;# 
  1322  0E11                     	;# 
  1323  0E12                     	;# 
  1324  0E13                     	;# 
  1325  0E14                     	;# 
  1326  0E15                     	;# 
  1327  0E17                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E24                     	;# 
  1332  0E25                     	;# 
  1333  0E28                     	;# 
  1334  0E29                     	;# 
  1335  0E2A                     	;# 
  1336  0E2B                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA2                     	;# 
  1356  0EA3                     	;# 
  1357  0EA4                     	;# 
  1358  0EA5                     	;# 
  1359  0EA6                     	;# 
  1360  0EA7                     	;# 
  1361  0EA8                     	;# 
  1362  0EA9                     	;# 
  1363  0EAA                     	;# 
  1364  0EAB                     	;# 
  1365  0EAC                     	;# 
  1366  0EAD                     	;# 
  1367  0EAE                     	;# 
  1368  0EAF                     	;# 
  1369  0EB0                     	;# 
  1370  0EB1                     	;# 
  1371  0EB2                     	;# 
  1372  0F0F                     	;# 
  1373  0F10                     	;# 
  1374  0F11                     	;# 
  1375  0F12                     	;# 
  1376  0F13                     	;# 
  1377  0F14                     	;# 
  1378  0F15                     	;# 
  1379  0F16                     	;# 
  1380  0F17                     	;# 
  1381  0F18                     	;# 
  1382  0F19                     	;# 
  1383  0F1A                     	;# 
  1384  0F1B                     	;# 
  1385  0F1C                     	;# 
  1386  0F1D                     	;# 
  1387  0F1E                     	;# 
  1388  0F1F                     	;# 
  1389  0F20                     	;# 
  1390  0F21                     	;# 
  1391  0F22                     	;# 
  1392  0F23                     	;# 
  1393  0F24                     	;# 
  1394  0F25                     	;# 
  1395  0F26                     	;# 
  1396  0F27                     	;# 
  1397  0F28                     	;# 
  1398  0F29                     	;# 
  1399  0F2A                     	;# 
  1400  0F2B                     	;# 
  1401  0F2C                     	;# 
  1402  0F2D                     	;# 
  1403  0F2E                     	;# 
  1404  0F2F                     	;# 
  1405  0F30                     	;# 
  1406  0F31                     	;# 
  1407  0F32                     	;# 
  1408  0F33                     	;# 
  1409  0F34                     	;# 
  1410  0F35                     	;# 
  1411  0F36                     	;# 
  1412  0F37                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  000F                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0015                     	;# 
  1445  0016                     	;# 
  1446  0016                     	;# 
  1447  0017                     	;# 
  1448  0018                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  008C                     	;# 
  1454  008D                     	;# 
  1455  008E                     	;# 
  1456  008F                     	;# 
  1457  0090                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0098                     	;# 
  1465  0099                     	;# 
  1466  009A                     	;# 
  1467  009B                     	;# 
  1468  009B                     	;# 
  1469  009C                     	;# 
  1470  009D                     	;# 
  1471  009E                     	;# 
  1472  009F                     	;# 
  1473  010C                     	;# 
  1474  010D                     	;# 
  1475  010E                     	;# 
  1476  010F                     	;# 
  1477  0110                     	;# 
  1478  0111                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0115                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  0118                     	;# 
  1486  0119                     	;# 
  1487  011A                     	;# 
  1488  011B                     	;# 
  1489  011B                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  018F                     	;# 
  1495  0190                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  020C                     	;# 
  1531  020D                     	;# 
  1532  020E                     	;# 
  1533  020F                     	;# 
  1534  0210                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  028F                     	;# 
  1555  0290                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0293                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  029A                     	;# 
  1566  029E                     	;# 
  1567  030C                     	;# 
  1568  030D                     	;# 
  1569  030E                     	;# 
  1570  030F                     	;# 
  1571  0310                     	;# 
  1572  038C                     	;# 
  1573  038D                     	;# 
  1574  038E                     	;# 
  1575  038F                     	;# 
  1576  0390                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  039D                     	;# 
  1587  039E                     	;# 
  1588  039F                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  0498                     	;# 
  1596  0498                     	;# 
  1597  0499                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049B                     	;# 
  1601  049C                     	;# 
  1602  049D                     	;# 
  1603  049E                     	;# 
  1604  049F                     	;# 
  1605  0511                     	;# 
  1606  0515                     	;# 
  1607  0617                     	;# 
  1608  0618                     	;# 
  1609  0619                     	;# 
  1610  0619                     	;# 
  1611  061A                     	;# 
  1612  061B                     	;# 
  1613  061C                     	;# 
  1614  061C                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  069A                     	;# 
  1625  069B                     	;# 
  1626  069C                     	;# 
  1627  069D                     	;# 
  1628  069E                     	;# 
  1629  069F                     	;# 
  1630  0E0F                     	;# 
  1631  0E10                     	;# 
  1632  0E11                     	;# 
  1633  0E12                     	;# 
  1634  0E13                     	;# 
  1635  0E14                     	;# 
  1636  0E15                     	;# 
  1637  0E17                     	;# 
  1638  0E20                     	;# 
  1639  0E21                     	;# 
  1640  0E22                     	;# 
  1641  0E24                     	;# 
  1642  0E25                     	;# 
  1643  0E28                     	;# 
  1644  0E29                     	;# 
  1645  0E2A                     	;# 
  1646  0E2B                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E93                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E96                     	;# 
  1654  0E97                     	;# 
  1655  0E98                     	;# 
  1656  0E99                     	;# 
  1657  0E9A                     	;# 
  1658  0E9B                     	;# 
  1659  0E9C                     	;# 
  1660  0E9D                     	;# 
  1661  0E9E                     	;# 
  1662  0E9F                     	;# 
  1663  0EA0                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA6                     	;# 
  1670  0EA7                     	;# 
  1671  0EA8                     	;# 
  1672  0EA9                     	;# 
  1673  0EAA                     	;# 
  1674  0EAB                     	;# 
  1675  0EAC                     	;# 
  1676  0EAD                     	;# 
  1677  0EAE                     	;# 
  1678  0EAF                     	;# 
  1679  0EB0                     	;# 
  1680  0EB1                     	;# 
  1681  0EB2                     	;# 
  1682  0F0F                     	;# 
  1683  0F10                     	;# 
  1684  0F11                     	;# 
  1685  0F12                     	;# 
  1686  0F13                     	;# 
  1687  0F14                     	;# 
  1688  0F15                     	;# 
  1689  0F16                     	;# 
  1690  0F17                     	;# 
  1691  0F18                     	;# 
  1692  0F19                     	;# 
  1693  0F1A                     	;# 
  1694  0F1B                     	;# 
  1695  0F1C                     	;# 
  1696  0F1D                     	;# 
  1697  0F1E                     	;# 
  1698  0F1F                     	;# 
  1699  0F20                     	;# 
  1700  0F21                     	;# 
  1701  0F22                     	;# 
  1702  0F23                     	;# 
  1703  0F24                     	;# 
  1704  0F25                     	;# 
  1705  0F26                     	;# 
  1706  0F27                     	;# 
  1707  0F28                     	;# 
  1708  0F29                     	;# 
  1709  0F2A                     	;# 
  1710  0F2B                     	;# 
  1711  0F2C                     	;# 
  1712  0F2D                     	;# 
  1713  0F2E                     	;# 
  1714  0F2F                     	;# 
  1715  0F30                     	;# 
  1716  0F31                     	;# 
  1717  0F32                     	;# 
  1718  0F33                     	;# 
  1719  0F34                     	;# 
  1720  0F35                     	;# 
  1721  0F36                     	;# 
  1722  0F37                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0091                     	;# 
  1769  0092                     	;# 
  1770  0093                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011C                     	;# 
  1801  018C                     	;# 
  1802  018D                     	;# 
  1803  018E                     	;# 
  1804  018F                     	;# 
  1805  0190                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  028C                     	;# 
  1862  028D                     	;# 
  1863  028E                     	;# 
  1864  028F                     	;# 
  1865  0290                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0293                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  029A                     	;# 
  1875  029A                     	;# 
  1876  029E                     	;# 
  1877  030C                     	;# 
  1878  030D                     	;# 
  1879  030E                     	;# 
  1880  030F                     	;# 
  1881  0310                     	;# 
  1882  038C                     	;# 
  1883  038D                     	;# 
  1884  038E                     	;# 
  1885  038F                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0415                     	;# 
  1900  0416                     	;# 
  1901  0417                     	;# 
  1902  041C                     	;# 
  1903  041D                     	;# 
  1904  041E                     	;# 
  1905  0498                     	;# 
  1906  0498                     	;# 
  1907  0499                     	;# 
  1908  049A                     	;# 
  1909  049B                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  049E                     	;# 
  1914  049F                     	;# 
  1915  0511                     	;# 
  1916  0515                     	;# 
  1917  0617                     	;# 
  1918  0618                     	;# 
  1919  0619                     	;# 
  1920  0619                     	;# 
  1921  061A                     	;# 
  1922  061B                     	;# 
  1923  061C                     	;# 
  1924  061C                     	;# 
  1925  0691                     	;# 
  1926  0692                     	;# 
  1927  0693                     	;# 
  1928  0694                     	;# 
  1929  0695                     	;# 
  1930  0696                     	;# 
  1931  0697                     	;# 
  1932  0698                     	;# 
  1933  0699                     	;# 
  1934  069A                     	;# 
  1935  069B                     	;# 
  1936  069C                     	;# 
  1937  069D                     	;# 
  1938  069E                     	;# 
  1939  069F                     	;# 
  1940  0E0F                     	;# 
  1941  0E10                     	;# 
  1942  0E11                     	;# 
  1943  0E12                     	;# 
  1944  0E13                     	;# 
  1945  0E14                     	;# 
  1946  0E15                     	;# 
  1947  0E17                     	;# 
  1948  0E20                     	;# 
  1949  0E21                     	;# 
  1950  0E22                     	;# 
  1951  0E24                     	;# 
  1952  0E25                     	;# 
  1953  0E28                     	;# 
  1954  0E29                     	;# 
  1955  0E2A                     	;# 
  1956  0E2B                     	;# 
  1957  0E90                     	;# 
  1958  0E91                     	;# 
  1959  0E92                     	;# 
  1960  0E93                     	;# 
  1961  0E94                     	;# 
  1962  0E95                     	;# 
  1963  0E96                     	;# 
  1964  0E97                     	;# 
  1965  0E98                     	;# 
  1966  0E99                     	;# 
  1967  0E9A                     	;# 
  1968  0E9B                     	;# 
  1969  0E9C                     	;# 
  1970  0E9D                     	;# 
  1971  0E9E                     	;# 
  1972  0E9F                     	;# 
  1973  0EA0                     	;# 
  1974  0EA1                     	;# 
  1975  0EA2                     	;# 
  1976  0EA3                     	;# 
  1977  0EA4                     	;# 
  1978  0EA5                     	;# 
  1979  0EA6                     	;# 
  1980  0EA7                     	;# 
  1981  0EA8                     	;# 
  1982  0EA9                     	;# 
  1983  0EAA                     	;# 
  1984  0EAB                     	;# 
  1985  0EAC                     	;# 
  1986  0EAD                     	;# 
  1987  0EAE                     	;# 
  1988  0EAF                     	;# 
  1989  0EB0                     	;# 
  1990  0EB1                     	;# 
  1991  0EB2                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;_messageBuffer
  2044                           
  2045                           	psect	idataBANK3
  2046  34C1                     __pidataBANK3:	
  2047                           
  2048                           ;initializer for stoa@F1174
  2049  34C1  3428               	retlw	40
  2050  34C2  346E               	retlw	110
  2051  34C3  3475               	retlw	117
  2052  34C4  346C               	retlw	108
  2053  34C5  346C               	retlw	108
  2054  34C6  3429               	retlw	41
  2055  34C7  3400               	retlw	0
  2056                           
  2057                           	psect	stringtext1
  2058  3963                     __pstringtext1:	
  2059  3963                     _OCD_threshold_setting:	
  2060  3963  3411               	retlw	17
  2061  3964  3400               	retlw	0
  2062  3965  3416               	retlw	22
  2063  3966  3400               	retlw	0
  2064  3967  341C               	retlw	28
  2065  3968  3400               	retlw	0
  2066  3969  3421               	retlw	33
  2067  396A  3400               	retlw	0
  2068  396B  3427               	retlw	39
  2069  396C  3400               	retlw	0
  2070  396D  342C               	retlw	44
  2071  396E  3400               	retlw	0
  2072  396F  3432               	retlw	50
  2073  3970  3400               	retlw	0
  2074  3971  3438               	retlw	56
  2075  3972  3400               	retlw	0
  2076  3973  343D               	retlw	61
  2077  3974  3400               	retlw	0
  2078  3975  3443               	retlw	67
  2079  3976  3400               	retlw	0
  2080  3977  3448               	retlw	72
  2081  3978  3400               	retlw	0
  2082  3979  344E               	retlw	78
  2083  397A  3400               	retlw	0
  2084  397B  3453               	retlw	83
  2085  397C  3400               	retlw	0
  2086  397D  3459               	retlw	89
  2087  397E  3400               	retlw	0
  2088  397F  345E               	retlw	94
  2089  3980  3400               	retlw	0
  2090  3981  3464               	retlw	100
  2091  3982  3400               	retlw	0
  2092  3983                     __end_of_OCD_threshold_setting:	
  2093                           
  2094                           	psect	stringtext2
  2095  3983                     __pstringtext2:	
  2096  3983                     _OCD_delay_setting:	
  2097  3983  3408               	retlw	8
  2098  3984  3400               	retlw	0
  2099  3985  3414               	retlw	20
  2100  3986  3400               	retlw	0
  2101  3987  3428               	retlw	40
  2102  3988  3400               	retlw	0
  2103  3989  3450               	retlw	80
  2104  398A  3400               	retlw	0
  2105  398B  34A0               	retlw	160
  2106  398C  3400               	retlw	0
  2107  398D  3440               	retlw	64
  2108  398E  3401               	retlw	1
  2109  398F  3480               	retlw	128
  2110  3990  3402               	retlw	2
  2111  3991  3400               	retlw	0
  2112  3992  3405               	retlw	5
  2113  3993                     __end_of_OCD_delay_setting:	
  2114                           
  2115                           	psect	stringtext3
  2116  3993                     __pstringtext3:	
  2117  3993                     _SCD_threshold_setting:	
  2118  3993  342C               	retlw	44
  2119  3994  3400               	retlw	0
  2120  3995  3443               	retlw	67
  2121  3996  3400               	retlw	0
  2122  3997  3459               	retlw	89
  2123  3998  3400               	retlw	0
  2124  3999  346F               	retlw	111
  2125  399A  3400               	retlw	0
  2126  399B  3485               	retlw	133
  2127  399C  3400               	retlw	0
  2128  399D  349B               	retlw	155
  2129  399E  3400               	retlw	0
  2130  399F  34B2               	retlw	178
  2131  39A0  3400               	retlw	0
  2132  39A1  34C8               	retlw	200
  2133  39A2  3400               	retlw	0
  2134  39A3                     __end_of_SCD_threshold_setting:	
  2135                           
  2136                           	psect	stringtext4
  2137  39A3                     __pstringtext4:	
  2138  39A3                     _OV_delay_setting:	
  2139  39A3  3401               	retlw	1
  2140  39A4  3400               	retlw	0
  2141  39A5  3402               	retlw	2
  2142  39A6  3400               	retlw	0
  2143  39A7  3404               	retlw	4
  2144  39A8  3400               	retlw	0
  2145  39A9  3408               	retlw	8
  2146  39AA  3400               	retlw	0
  2147  39AB                     __end_of_OV_delay_setting:	
  2148                           
  2149                           	psect	stringtext5
  2150  39AB                     __pstringtext5:	
  2151  39AB                     _UV_delay_setting:	
  2152  39AB  3401               	retlw	1
  2153  39AC  3400               	retlw	0
  2154  39AD  3404               	retlw	4
  2155  39AE  3400               	retlw	0
  2156  39AF  3408               	retlw	8
  2157  39B0  3400               	retlw	0
  2158  39B1  3410               	retlw	16
  2159  39B2  3400               	retlw	0
  2160  39B3                     __end_of_UV_delay_setting:	
  2161                           
  2162                           	psect	stringtext6
  2163  39B3                     __pstringtext6:	
  2164  39B3                     _SCD_delay_setting:	
  2165  39B3  3446               	retlw	70
  2166  39B4  3400               	retlw	0
  2167  39B5  3464               	retlw	100
  2168  39B6  3400               	retlw	0
  2169  39B7  34C8               	retlw	200
  2170  39B8  3400               	retlw	0
  2171  39B9  3490               	retlw	144
  2172  39BA  3401               	retlw	1
  2173  39BB                     __end_of_SCD_delay_setting:	
  2174                           
  2175                           	psect	stringtext7
  2176  3000                     __pstringtext7:	
  2177  3000                     _ATmega328_address:	
  2178  3000  3402               	retlw	2
  2179  3001  3400               	retlw	0
  2180  3002                     __end_of_ATmega328_address:	
  2181  0016                     _TMR1	set	22
  2182  000B                     _INTCONbits	set	11
  2183  0018                     _T1CONbits	set	24
  2184  0011                     _PIR1bits	set	17
  2185  0090                     _TRISEbits	set	144
  2186  008C                     _TRISAbits	set	140
  2187  008E                     _TRISCbits	set	142
  2188  008D                     _TRISBbits	set	141
  2189  0091                     _PIE1bits	set	145
  2190  0476                     _TRISC6	set	1142
  2191  0477                     _TRISC7	set	1143
  2192  04CF                     _SPLLEN	set	1231
  2193  04CE                     _IRCF3	set	1230
  2194  04CD                     _IRCF2	set	1229
  2195  04CC                     _IRCF1	set	1228
  2196  04CB                     _IRCF0	set	1227
  2197  04C9                     _SCS1	set	1225
  2198  04C8                     _SCS0	set	1224
  2199  0110                     _LATEbits	set	272
  2200  010C                     _LATAbits	set	268
  2201  019A                     _TX1REG	set	410
  2202  0199                     _RC1REG	set	409
  2203  019D                     _RC1STAbits	set	413
  2204  019B                     _SPBRG	set	411
  2205  018E                     _ANSELCbits	set	398
  2206  018D                     _ANSELBbits	set	397
  2207  0CF5                     _TXEN	set	3317
  2208  0CEC                     _CREN	set	3308
  2209  0CEF                     _SPEN	set	3311
  2210  0CF4                     _SYNC	set	3316
  2211  0CF2                     _BRGH	set	3314
  2212  0216                     _SSPCON2bits	set	534
  2213  0211                     _SSPBUF	set	529
  2214  0212                     _SSPADD	set	530
  2215  0215                     _SSPCONbits	set	533
  2216  0E24                     _RXPPSbits	set	3620
  2217  0E20                     _SSPCLKPPSbits	set	3616
  2218  0E21                     _SSPDATPPSbits	set	3617
  2219  0E0F                     _PPSLOCKbits	set	3599
  2220  0E0F                     _PPSLOCK	set	3599
  2221  0E9A                     _RB2PPSbits	set	3738
  2222  0EA5                     _RC5PPSbits	set	3749
  2223  0EA4                     _RC4PPSbits	set	3748
  2224  3002                     STR_8:	
  2225  3002  3453               	retlw	83	;'S'
  2226  3003  3465               	retlw	101	;'e'
  2227  3004  3474               	retlw	116	;'t'
  2228  3005  3420               	retlw	32	;' '
  2229  3006  344F               	retlw	79	;'O'
  2230  3007  3476               	retlw	118	;'v'
  2231  3008  3465               	retlw	101	;'e'
  2232  3009  3472               	retlw	114	;'r'
  2233  300A  342D               	retlw	45	;'-'
  2234  300B  3463               	retlw	99	;'c'
  2235  300C  3475               	retlw	117	;'u'
  2236  300D  3472               	retlw	114	;'r'
  2237  300E  3472               	retlw	114	;'r'
  2238  300F  3465               	retlw	101	;'e'
  2239  3010  346E               	retlw	110	;'n'
  2240  3011  3474               	retlw	116	;'t'
  2241  3012  3420               	retlw	32	;' '
  2242  3013  3464               	retlw	100	;'d'
  2243  3014  3469               	retlw	105	;'i'
  2244  3015  3473               	retlw	115	;'s'
  2245  3016  3463               	retlw	99	;'c'
  2246  3017  3468               	retlw	104	;'h'
  2247  3018  3461               	retlw	97	;'a'
  2248  3019  3472               	retlw	114	;'r'
  2249  301A  3467               	retlw	103	;'g'
  2250  301B  3465               	retlw	101	;'e'
  2251  301C  3420               	retlw	32	;' '
  2252  301D  3470               	retlw	112	;'p'
  2253  301E  3472               	retlw	114	;'r'
  2254  301F  346F               	retlw	111	;'o'
  2255  3020  3474               	retlw	116	;'t'
  2256  3021  3465               	retlw	101	;'e'
  2257  3022  3463               	retlw	99	;'c'
  2258  3023  3474               	retlw	116	;'t'
  2259  3024  3469               	retlw	105	;'i'
  2260  3025  346F               	retlw	111	;'o'
  2261  3026  346E               	retlw	110	;'n'
  2262  3027  3420               	retlw	32	;' '
  2263  3028  3420               	retlw	32	;' '
  2264  3029  3466               	retlw	102	;'f'
  2265  302A  346F               	retlw	111	;'o'
  2266  302B  3472               	retlw	114	;'r'
  2267  302C  3420               	retlw	32	;' '
  2268  302D  3441               	retlw	65	;'A'
  2269  302E  3446               	retlw	70	;'F'
  2270  302F  3445               	retlw	69	;'E'
  2271  3030  343A               	retlw	58	;':'
  2272  3031  3420               	retlw	32	;' '
  2273  3032  3425               	retlw	37	;'%'
  2274  3033  346C               	retlw	108	;'l'
  2275  3034  3475               	retlw	117	;'u'
  2276  3035  3420               	retlw	32	;' '
  2277  3036  346D               	retlw	109	;'m'
  2278  3037  3441               	retlw	65	;'A'
  2279  3038  340A               	retlw	10
  2280  3039  340D               	retlw	13
  2281  303A  3400               	retlw	0
  2282                           
  2283                           	psect	stringtext8
  2284  3800                     __pstringtext8:	
  2285  3800                     STR_4:	
  2286  3800  3441               	retlw	65	;'A'
  2287  3801  3474               	retlw	116	;'t'
  2288  3802  3474               	retlw	116	;'t'
  2289  3803  3465               	retlw	101	;'e'
  2290  3804  346D               	retlw	109	;'m'
  2291  3805  3470               	retlw	112	;'p'
  2292  3806  3474               	retlw	116	;'t'
  2293  3807  3420               	retlw	32	;' '
  2294  3808  3474               	retlw	116	;'t'
  2295  3809  346F               	retlw	111	;'o'
  2296  380A  3420               	retlw	32	;' '
  2297  380B  3473               	retlw	115	;'s'
  2298  380C  3465               	retlw	101	;'e'
  2299  380D  3474               	retlw	116	;'t'
  2300  380E  3420               	retlw	32	;' '
  2301  380F  3469               	retlw	105	;'i'
  2302  3810  346E               	retlw	110	;'n'
  2303  3811  3469               	retlw	105	;'i'
  2304  3812  3474               	retlw	116	;'t'
  2305  3813  3469               	retlw	105	;'i'
  2306  3814  3461               	retlw	97	;'a'
  2307  3815  346C               	retlw	108	;'l'
  2308  3816  3420               	retlw	32	;' '
  2309  3817  3473               	retlw	115	;'s'
  2310  3818  3479               	retlw	121	;'y'
  2311  3819  3473               	retlw	115	;'s'
  2312  381A  3474               	retlw	116	;'t'
  2313  381B  3465               	retlw	101	;'e'
  2314  381C  346D               	retlw	109	;'m'
  2315  381D  3420               	retlw	32	;' '
  2316  381E  3470               	retlw	112	;'p'
  2317  381F  3461               	retlw	97	;'a'
  2318  3820  3472               	retlw	114	;'r'
  2319  3821  3461               	retlw	97	;'a'
  2320  3822  346D               	retlw	109	;'m'
  2321  3823  3465               	retlw	101	;'e'
  2322  3824  3474               	retlw	116	;'t'
  2323  3825  3465               	retlw	101	;'e'
  2324  3826  3472               	retlw	114	;'r'
  2325  3827  3473               	retlw	115	;'s'
  2326  3828  3420               	retlw	32	;' '
  2327  3829  3474               	retlw	116	;'t'
  2328  382A  346F               	retlw	111	;'o'
  2329  382B  3420               	retlw	32	;' '
  2330  382C  3441               	retlw	65	;'A'
  2331  382D  3446               	retlw	70	;'F'
  2332  382E  3445               	retlw	69	;'E'
  2333  382F  342E               	retlw	46	;'.'
  2334  3830  342E               	retlw	46	;'.'
  2335  3831  342E               	retlw	46	;'.'
  2336  3832  340A               	retlw	10
  2337  3833  340D               	retlw	13
  2338  3834  3400               	retlw	0
  2339                           
  2340                           	psect	stringtext9
  2341  3835                     __pstringtext9:	
  2342  3835                     STR_2:	
  2343  3835  3443               	retlw	67	;'C'
  2344  3836  346F               	retlw	111	;'o'
  2345  3837  346D               	retlw	109	;'m'
  2346  3838  346D               	retlw	109	;'m'
  2347  3839  3475               	retlw	117	;'u'
  2348  383A  346E               	retlw	110	;'n'
  2349  383B  3469               	retlw	105	;'i'
  2350  383C  3463               	retlw	99	;'c'
  2351  383D  3461               	retlw	97	;'a'
  2352  383E  3474               	retlw	116	;'t'
  2353  383F  3469               	retlw	105	;'i'
  2354  3840  346F               	retlw	111	;'o'
  2355  3841  346E               	retlw	110	;'n'
  2356  3842  3420               	retlw	32	;' '
  2357  3843  3477               	retlw	119	;'w'
  2358  3844  3469               	retlw	105	;'i'
  2359  3845  3474               	retlw	116	;'t'
  2360  3846  3468               	retlw	104	;'h'
  2361  3847  3420               	retlw	32	;' '
  2362  3848  3442               	retlw	66	;'B'
  2363  3849  3451               	retlw	81	;'Q'
  2364  384A  3437               	retlw	55	;'7'
  2365  384B  3436               	retlw	54	;'6'
  2366  384C  3439               	retlw	57	;'9'
  2367  384D  3432               	retlw	50	;'2'
  2368  384E  3430               	retlw	48	;'0'
  2369  384F  3420               	retlw	32	;' '
  2370  3850  3441               	retlw	65	;'A'
  2371  3851  3446               	retlw	70	;'F'
  2372  3852  3445               	retlw	69	;'E'
  2373  3853  3420               	retlw	32	;' '
  2374  3854  3465               	retlw	101	;'e'
  2375  3855  3473               	retlw	115	;'s'
  2376  3856  3474               	retlw	116	;'t'
  2377  3857  3461               	retlw	97	;'a'
  2378  3858  3462               	retlw	98	;'b'
  2379  3859  346C               	retlw	108	;'l'
  2380  385A  3469               	retlw	105	;'i'
  2381  385B  3473               	retlw	115	;'s'
  2382  385C  3468               	retlw	104	;'h'
  2383  385D  3465               	retlw	101	;'e'
  2384  385E  3464               	retlw	100	;'d'
  2385  385F  3421               	retlw	33	;'!'
  2386  3860  340A               	retlw	10
  2387  3861  340D               	retlw	13
  2388  3862  3400               	retlw	0
  2389                           
  2390                           	psect	stringtext10
  2391  3863                     __pstringtext10:	
  2392  3863                     STR_10:	
  2393  3863  344E               	retlw	78	;'N'
  2394  3864  346F               	retlw	111	;'o'
  2395  3865  3477               	retlw	119	;'w'
  2396  3866  3420               	retlw	32	;' '
  2397  3867  3472               	retlw	114	;'r'
  2398  3868  3465               	retlw	101	;'e'
  2399  3869  3461               	retlw	97	;'a'
  2400  386A  3464               	retlw	100	;'d'
  2401  386B  3469               	retlw	105	;'i'
  2402  386C  346E               	retlw	110	;'n'
  2403  386D  3467               	retlw	103	;'g'
  2404  386E  3420               	retlw	32	;' '
  2405  386F  3441               	retlw	65	;'A'
  2406  3870  3446               	retlw	70	;'F'
  2407  3871  3445               	retlw	69	;'E'
  2408  3872  3420               	retlw	32	;' '
  2409  3873  3464               	retlw	100	;'d'
  2410  3874  3461               	retlw	97	;'a'
  2411  3875  3474               	retlw	116	;'t'
  2412  3876  3461               	retlw	97	;'a'
  2413  3877  3420               	retlw	32	;' '
  2414  3878  3461               	retlw	97	;'a'
  2415  3879  3474               	retlw	116	;'t'
  2416  387A  3420               	retlw	32	;' '
  2417  387B  3472               	retlw	114	;'r'
  2418  387C  3465               	retlw	101	;'e'
  2419  387D  3467               	retlw	103	;'g'
  2420  387E  3475               	retlw	117	;'u'
  2421  387F  346C               	retlw	108	;'l'
  2422  3880  3461               	retlw	97	;'a'
  2423  3881  3472               	retlw	114	;'r'
  2424  3882  3420               	retlw	32	;' '
  2425  3883  3469               	retlw	105	;'i'
  2426  3884  346E               	retlw	110	;'n'
  2427  3885  3474               	retlw	116	;'t'
  2428  3886  3465               	retlw	101	;'e'
  2429  3887  3472               	retlw	114	;'r'
  2430  3888  3476               	retlw	118	;'v'
  2431  3889  3461               	retlw	97	;'a'
  2432  388A  346C               	retlw	108	;'l'
  2433  388B  3473               	retlw	115	;'s'
  2434  388C  342E               	retlw	46	;'.'
  2435  388D  340A               	retlw	10
  2436  388E  340D               	retlw	13
  2437  388F  3400               	retlw	0
  2438                           
  2439                           	psect	stringtext11
  2440  3890                     __pstringtext11:	
  2441  3890                     STR_7:	
  2442  3890  3453               	retlw	83	;'S'
  2443  3891  3465               	retlw	101	;'e'
  2444  3892  3474               	retlw	116	;'t'
  2445  3893  3420               	retlw	32	;' '
  2446  3894  3473               	retlw	115	;'s'
  2447  3895  3468               	retlw	104	;'h'
  2448  3896  346F               	retlw	111	;'o'
  2449  3897  3472               	retlw	114	;'r'
  2450  3898  3474               	retlw	116	;'t'
  2451  3899  3420               	retlw	32	;' '
  2452  389A  3463               	retlw	99	;'c'
  2453  389B  3469               	retlw	105	;'i'
  2454  389C  3472               	retlw	114	;'r'
  2455  389D  3463               	retlw	99	;'c'
  2456  389E  3475               	retlw	117	;'u'
  2457  389F  3469               	retlw	105	;'i'
  2458  38A0  3474               	retlw	116	;'t'
  2459  38A1  3420               	retlw	32	;' '
  2460  38A2  3463               	retlw	99	;'c'
  2461  38A3  3475               	retlw	117	;'u'
  2462  38A4  3472               	retlw	114	;'r'
  2463  38A5  3472               	retlw	114	;'r'
  2464  38A6  3465               	retlw	101	;'e'
  2465  38A7  346E               	retlw	110	;'n'
  2466  38A8  3474               	retlw	116	;'t'
  2467  38A9  3420               	retlw	32	;' '
  2468  38AA  3466               	retlw	102	;'f'
  2469  38AB  346F               	retlw	111	;'o'
  2470  38AC  3472               	retlw	114	;'r'
  2471  38AD  3420               	retlw	32	;' '
  2472  38AE  3441               	retlw	65	;'A'
  2473  38AF  3446               	retlw	70	;'F'
  2474  38B0  3445               	retlw	69	;'E'
  2475  38B1  343A               	retlw	58	;':'
  2476  38B2  3420               	retlw	32	;' '
  2477  38B3  3425               	retlw	37	;'%'
  2478  38B4  346C               	retlw	108	;'l'
  2479  38B5  3475               	retlw	117	;'u'
  2480  38B6  3420               	retlw	32	;' '
  2481  38B7  346D               	retlw	109	;'m'
  2482  38B8  3441               	retlw	65	;'A'
  2483  38B9  340A               	retlw	10
  2484  38BA  340D               	retlw	13
  2485  38BB  3400               	retlw	0
  2486                           
  2487                           	psect	stringtext12
  2488  38BC                     __pstringtext12:	
  2489  38BC                     STR_3:	
  2490  38BC  344F               	retlw	79	;'O'
  2491  38BD  3462               	retlw	98	;'b'
  2492  38BE  3474               	retlw	116	;'t'
  2493  38BF  3461               	retlw	97	;'a'
  2494  38C0  3469               	retlw	105	;'i'
  2495  38C1  346E               	retlw	110	;'n'
  2496  38C2  3465               	retlw	101	;'e'
  2497  38C3  3464               	retlw	100	;'d'
  2498  38C4  3420               	retlw	32	;' '
  2499  38C5  3461               	retlw	97	;'a'
  2500  38C6  3464               	retlw	100	;'d'
  2501  38C7  3463               	retlw	99	;'c'
  2502  38C8  344F               	retlw	79	;'O'
  2503  38C9  3466               	retlw	102	;'f'
  2504  38CA  3466               	retlw	102	;'f'
  2505  38CB  3473               	retlw	115	;'s'
  2506  38CC  3465               	retlw	101	;'e'
  2507  38CD  3474               	retlw	116	;'t'
  2508  38CE  3420               	retlw	32	;' '
  2509  38CF  343D               	retlw	61	;'='
  2510  38D0  3420               	retlw	32	;' '
  2511  38D1  3425               	retlw	37	;'%'
  2512  38D2  3469               	retlw	105	;'i'
  2513  38D3  3420               	retlw	32	;' '
  2514  38D4  3461               	retlw	97	;'a'
  2515  38D5  346E               	retlw	110	;'n'
  2516  38D6  3464               	retlw	100	;'d'
  2517  38D7  3420               	retlw	32	;' '
  2518  38D8  3461               	retlw	97	;'a'
  2519  38D9  3464               	retlw	100	;'d'
  2520  38DA  3463               	retlw	99	;'c'
  2521  38DB  3447               	retlw	71	;'G'
  2522  38DC  3461               	retlw	97	;'a'
  2523  38DD  3469               	retlw	105	;'i'
  2524  38DE  346E               	retlw	110	;'n'
  2525  38DF  3420               	retlw	32	;' '
  2526  38E0  343D               	retlw	61	;'='
  2527  38E1  3420               	retlw	32	;' '
  2528  38E2  3425               	retlw	37	;'%'
  2529  38E3  3469               	retlw	105	;'i'
  2530  38E4  340A               	retlw	10
  2531  38E5  340D               	retlw	13
  2532  38E6  3400               	retlw	0
  2533                           
  2534                           	psect	stringtext13
  2535  38E7                     __pstringtext13:	
  2536  38E7                     STR_9:	
  2537  38E7  3449               	retlw	73	;'I'
  2538  38E8  346E               	retlw	110	;'n'
  2539  38E9  3469               	retlw	105	;'i'
  2540  38EA  3474               	retlw	116	;'t'
  2541  38EB  3469               	retlw	105	;'i'
  2542  38EC  3461               	retlw	97	;'a'
  2543  38ED  346C               	retlw	108	;'l'
  2544  38EE  3420               	retlw	32	;' '
  2545  38EF  3470               	retlw	112	;'p'
  2546  38F0  3461               	retlw	97	;'a'
  2547  38F1  3472               	retlw	114	;'r'
  2548  38F2  3461               	retlw	97	;'a'
  2549  38F3  346D               	retlw	109	;'m'
  2550  38F4  3465               	retlw	101	;'e'
  2551  38F5  3474               	retlw	116	;'t'
  2552  38F6  3465               	retlw	101	;'e'
  2553  38F7  3472               	retlw	114	;'r'
  2554  38F8  3473               	retlw	115	;'s'
  2555  38F9  3420               	retlw	32	;' '
  2556  38FA  3466               	retlw	102	;'f'
  2557  38FB  346F               	retlw	111	;'o'
  2558  38FC  3472               	retlw	114	;'r'
  2559  38FD  3420               	retlw	32	;' '
  2560  38FE  3442               	retlw	66	;'B'
  2561  38FF  3451               	retlw	81	;'Q'
  2562  3900  3437               	retlw	55	;'7'
  2563  3901  3436               	retlw	54	;'6'
  2564  3902  3439               	retlw	57	;'9'
  2565  3903  3432               	retlw	50	;'2'
  2566  3904  3430               	retlw	48	;'0'
  2567  3905  3420               	retlw	32	;' '
  2568  3906  3441               	retlw	65	;'A'
  2569  3907  3446               	retlw	70	;'F'
  2570  3908  3445               	retlw	69	;'E'
  2571  3909  3420               	retlw	32	;' '
  2572  390A  3473               	retlw	115	;'s'
  2573  390B  3465               	retlw	101	;'e'
  2574  390C  3474               	retlw	116	;'t'
  2575  390D  3421               	retlw	33	;'!'
  2576  390E  340A               	retlw	10
  2577  390F  340D               	retlw	13
  2578  3910  3400               	retlw	0
  2579                           
  2580                           	psect	stringtext14
  2581  3911                     __pstringtext14:	
  2582  3911                     STR_6:	
  2583  3911  3443               	retlw	67	;'C'
  2584  3912  3475               	retlw	117	;'u'
  2585  3913  3472               	retlw	114	;'r'
  2586  3914  3472               	retlw	114	;'r'
  2587  3915  3465               	retlw	101	;'e'
  2588  3916  346E               	retlw	110	;'n'
  2589  3917  3474               	retlw	116	;'t'
  2590  3918  3420               	retlw	32	;' '
  2591  3919  3473               	retlw	115	;'s'
  2592  391A  3465               	retlw	101	;'e'
  2593  391B  346E               	retlw	110	;'n'
  2594  391C  3473               	retlw	115	;'s'
  2595  391D  3465               	retlw	101	;'e'
  2596  391E  3420               	retlw	32	;' '
  2597  391F  3472               	retlw	114	;'r'
  2598  3920  3465               	retlw	101	;'e'
  2599  3921  3473               	retlw	115	;'s'
  2600  3922  3469               	retlw	105	;'i'
  2601  3923  3473               	retlw	115	;'s'
  2602  3924  3474               	retlw	116	;'t'
  2603  3925  346F               	retlw	111	;'o'
  2604  3926  3472               	retlw	114	;'r'
  2605  3927  3420               	retlw	32	;' '
  2606  3928  3476               	retlw	118	;'v'
  2607  3929  3461               	retlw	97	;'a'
  2608  392A  346C               	retlw	108	;'l'
  2609  392B  3475               	retlw	117	;'u'
  2610  392C  3465               	retlw	101	;'e'
  2611  392D  343A               	retlw	58	;':'
  2612  392E  3420               	retlw	32	;' '
  2613  392F  3425               	retlw	37	;'%'
  2614  3930  342E               	retlw	46	;'.'
  2615  3931  3434               	retlw	52	;'4'
  2616  3932  3466               	retlw	102	;'f'
  2617  3933  3420               	retlw	32	;' '
  2618  3934  346F               	retlw	111	;'o'
  2619  3935  3468               	retlw	104	;'h'
  2620  3936  346D               	retlw	109	;'m'
  2621  3937  3473               	retlw	115	;'s'
  2622  3938  340A               	retlw	10
  2623  3939  340D               	retlw	13
  2624  393A  3400               	retlw	0
  2625                           
  2626                           	psect	stringtext15
  2627  393B                     __pstringtext15:	
  2628  393B                     STR_1:	
  2629  393B  3441               	retlw	65	;'A'
  2630  393C  3474               	retlw	116	;'t'
  2631  393D  3474               	retlw	116	;'t'
  2632  393E  3465               	retlw	101	;'e'
  2633  393F  346D               	retlw	109	;'m'
  2634  3940  3470               	retlw	112	;'p'
  2635  3941  3474               	retlw	116	;'t'
  2636  3942  3469               	retlw	105	;'i'
  2637  3943  346E               	retlw	110	;'n'
  2638  3944  3467               	retlw	103	;'g'
  2639  3945  3420               	retlw	32	;' '
  2640  3946  3474               	retlw	116	;'t'
  2641  3947  346F               	retlw	111	;'o'
  2642  3948  3420               	retlw	32	;' '
  2643  3949  3463               	retlw	99	;'c'
  2644  394A  346F               	retlw	111	;'o'
  2645  394B  346D               	retlw	109	;'m'
  2646  394C  346D               	retlw	109	;'m'
  2647  394D  3475               	retlw	117	;'u'
  2648  394E  346E               	retlw	110	;'n'
  2649  394F  3469               	retlw	105	;'i'
  2650  3950  3463               	retlw	99	;'c'
  2651  3951  3461               	retlw	97	;'a'
  2652  3952  3474               	retlw	116	;'t'
  2653  3953  3465               	retlw	101	;'e'
  2654  3954  3420               	retlw	32	;' '
  2655  3955  3477               	retlw	119	;'w'
  2656  3956  3469               	retlw	105	;'i'
  2657  3957  3474               	retlw	116	;'t'
  2658  3958  3468               	retlw	104	;'h'
  2659  3959  3420               	retlw	32	;' '
  2660  395A  3441               	retlw	65	;'A'
  2661  395B  3446               	retlw	70	;'F'
  2662  395C  3445               	retlw	69	;'E'
  2663  395D  342E               	retlw	46	;'.'
  2664  395E  342E               	retlw	46	;'.'
  2665  395F  342E               	retlw	46	;'.'
  2666  3960  340A               	retlw	10
  2667  3961  340D               	retlw	13
  2668  3962  3400               	retlw	0
  2669                           
  2670                           	psect	stringtext16
  2671  39BB                     __pstringtext16:	
  2672  39BB                     STR_11:	
  2673  39BB  3449               	retlw	73	;'I'
  2674  39BC  344E               	retlw	78	;'N'
  2675  39BD  3446               	retlw	70	;'F'
  2676  39BE  3400               	retlw	0
  2677                           
  2678                           	psect	stringtext17
  2679  39BF                     __pstringtext17:	
  2680  39BF                     STR_15:	
  2681  39BF  344E               	retlw	78	;'N'
  2682  39C0  3441               	retlw	65	;'A'
  2683  39C1  344E               	retlw	78	;'N'
  2684  39C2  3400               	retlw	0
  2685                           
  2686                           	psect	stringtext18
  2687  39C3                     __pstringtext18:	
  2688  39C3                     STR_124:	
  2689  39C3  3468               	retlw	104	;'h'
  2690  39C4  3468               	retlw	104	;'h'
  2691  39C5  3458               	retlw	88	;'X'
  2692  39C6  3400               	retlw	0
  2693                           
  2694                           	psect	stringtext19
  2695  39C7                     __pstringtext19:	
  2696  39C7                     STR_19:	
  2697  39C7  3468               	retlw	104	;'h'
  2698  39C8  3468               	retlw	104	;'h'
  2699  39C9  3464               	retlw	100	;'d'
  2700  39CA  3400               	retlw	0
  2701                           
  2702                           	psect	stringtext20
  2703  39CB                     __pstringtext20:	
  2704  39CB                     STR_12:	
  2705  39CB  3469               	retlw	105	;'i'
  2706  39CC  346E               	retlw	110	;'n'
  2707  39CD  3466               	retlw	102	;'f'
  2708  39CE  3400               	retlw	0
  2709                           
  2710                           	psect	stringtext21
  2711  39CF                     __pstringtext21:	
  2712  39CF                     STR_23:	
  2713  39CF  3468               	retlw	104	;'h'
  2714  39D0  3468               	retlw	104	;'h'
  2715  39D1  3469               	retlw	105	;'i'
  2716  39D2  3400               	retlw	0
  2717                           
  2718                           	psect	stringtext22
  2719  39D3                     __pstringtext22:	
  2720  39D3                     STR_16:	
  2721  39D3  346E               	retlw	110	;'n'
  2722  39D4  3461               	retlw	97	;'a'
  2723  39D5  346E               	retlw	110	;'n'
  2724  39D6  3400               	retlw	0
  2725                           
  2726                           	psect	stringtext23
  2727  39D7                     __pstringtext23:	
  2728  39D7                     STR_80:	
  2729  39D7  3468               	retlw	104	;'h'
  2730  39D8  3468               	retlw	104	;'h'
  2731  39D9  346E               	retlw	110	;'n'
  2732  39DA  3400               	retlw	0
  2733                           
  2734                           	psect	stringtext24
  2735  39DB                     __pstringtext24:	
  2736  39DB                     STR_60:	
  2737  39DB  3468               	retlw	104	;'h'
  2738  39DC  3468               	retlw	104	;'h'
  2739  39DD  346F               	retlw	111	;'o'
  2740  39DE  3400               	retlw	0
  2741                           
  2742                           	psect	stringtext25
  2743  39DF                     __pstringtext25:	
  2744  39DF                     STR_100:	
  2745  39DF  3468               	retlw	104	;'h'
  2746  39E0  3468               	retlw	104	;'h'
  2747  39E1  3475               	retlw	117	;'u'
  2748  39E2  3400               	retlw	0
  2749                           
  2750                           	psect	stringtext26
  2751  39E3                     __pstringtext26:	
  2752  39E3                     STR_120:	
  2753  39E3  3468               	retlw	104	;'h'
  2754  39E4  3468               	retlw	104	;'h'
  2755  39E5  3478               	retlw	120	;'x'
  2756  39E6  3400               	retlw	0
  2757                           
  2758                           	psect	stringtext27
  2759  39E7                     __pstringtext27:	
  2760  39E7                     STR_142:	
  2761  39E7  346C               	retlw	108	;'l'
  2762  39E8  3458               	retlw	88	;'X'
  2763  39E9  3400               	retlw	0
  2764                           
  2765                           	psect	stringtext28
  2766  39EA                     __pstringtext28:	
  2767  39EA                     STR_151:	
  2768  39EA  347A               	retlw	122	;'z'
  2769  39EB  3458               	retlw	88	;'X'
  2770  39EC  3400               	retlw	0
  2771                           
  2772                           	psect	stringtext29
  2773  39ED                     __pstringtext29:	
  2774  39ED                     STR_37:	
  2775  39ED  346C               	retlw	108	;'l'
  2776  39EE  3464               	retlw	100	;'d'
  2777  39EF  3400               	retlw	0
  2778                           
  2779                           	psect	stringtext30
  2780  39F0                     __pstringtext30:	
  2781  39F0                     STR_46:	
  2782  39F0  347A               	retlw	122	;'z'
  2783  39F1  3464               	retlw	100	;'d'
  2784  39F2  3400               	retlw	0
  2785                           
  2786                           	psect	stringtext31
  2787  39F3                     __pstringtext31:	
  2788  39F3                     STR_55:	
  2789  39F3  346C               	retlw	108	;'l'
  2790  39F4  3466               	retlw	102	;'f'
  2791  39F5  3400               	retlw	0
  2792                           
  2793                           	psect	stringtext32
  2794  39F6                     __pstringtext32:	
  2795  39F6                     STR_41:	
  2796  39F6  346C               	retlw	108	;'l'
  2797  39F7  3469               	retlw	105	;'i'
  2798  39F8  3400               	retlw	0
  2799                           
  2800                           	psect	stringtext33
  2801  39F9                     __pstringtext33:	
  2802  39F9                     STR_50:	
  2803  39F9  347A               	retlw	122	;'z'
  2804  39FA  3469               	retlw	105	;'i'
  2805  39FB  3400               	retlw	0
  2806                           
  2807                           	psect	stringtext34
  2808  39FC                     __pstringtext34:	
  2809  39FC                     STR_90:	
  2810  39FC  346C               	retlw	108	;'l'
  2811  39FD  346E               	retlw	110	;'n'
  2812  39FE  3400               	retlw	0
  2813                           
  2814                           	psect	stringtext35
  2815  39FF                     __pstringtext35:	
  2816  39FF                     STR_95:	
  2817  39FF  347A               	retlw	122	;'z'
  2818  3A00  346E               	retlw	110	;'n'
  2819  3A01  3400               	retlw	0
  2820                           
  2821                           	psect	stringtext36
  2822  3A02                     __pstringtext36:	
  2823  3A02                     STR_70:	
  2824  3A02  346C               	retlw	108	;'l'
  2825  3A03  346F               	retlw	111	;'o'
  2826  3A04  3400               	retlw	0
  2827                           
  2828                           	psect	stringtext37
  2829  3A05                     __pstringtext37:	
  2830  3A05                     STR_75:	
  2831  3A05  347A               	retlw	122	;'z'
  2832  3A06  346F               	retlw	111	;'o'
  2833  3A07  3400               	retlw	0
  2834                           
  2835                           	psect	stringtext38
  2836  3A08                     __pstringtext38:	
  2837  3A08                     STR_110:	
  2838  3A08  346C               	retlw	108	;'l'
  2839  3A09  3475               	retlw	117	;'u'
  2840  3A0A  3400               	retlw	0
  2841                           
  2842                           	psect	stringtext39
  2843  3A0B                     __pstringtext39:	
  2844  3A0B                     STR_115:	
  2845  3A0B  347A               	retlw	122	;'z'
  2846  3A0C  3475               	retlw	117	;'u'
  2847  3A0D  3400               	retlw	0
  2848                           
  2849                           	psect	stringtext40
  2850  3A0E                     __pstringtext40:	
  2851  3A0E                     STR_138:	
  2852  3A0E  346C               	retlw	108	;'l'
  2853  3A0F  3478               	retlw	120	;'x'
  2854  3A10  3400               	retlw	0
  2855                           
  2856                           	psect	stringtext41
  2857  3A11                     __pstringtext41:	
  2858  3A11                     STR_147:	
  2859  3A11  347A               	retlw	122	;'z'
  2860  3A12  3478               	retlw	120	;'x'
  2861  3A13  3400               	retlw	0
  2862                           
  2863                           	psect	stringtext42
  2864  0000                     __pstringtext42:	
  2865  3860                     
  2866                           ; #config settings
  2867  0000                     
  2868                           	psect	cinit
  2869  0020                     start_initialization:	
  2870  0020                     __initialization:		;BIGRAM
  2871                           
  2872                           ; Initialize objects allocated to BANK3
  2873  0020  30C1               	movlw	low __pidataBANK3
  2874  0021  0084               	movwf	4
  2875  0022  30B4               	movlw	(high __pidataBANK3)| (0+128)
  2876  0023  0085               	movwf	5
  2877  0024  0023               	movlb	3	; select bank3
  2878  0025  0012               	moviw fsr0++
  2879  0026  00D7               	movwf	__pdataBANK3& (0+127)
  2880  0027  0012               	moviw fsr0++
  2881  0028  00D8               	movwf	(__pdataBANK3+1)& (0+127)
  2882  0029  0012               	moviw fsr0++
  2883  002A  00D9               	movwf	(__pdataBANK3+2)& (0+127)
  2884  002B  0012               	moviw fsr0++
  2885  002C  00DA               	movwf	(__pdataBANK3+3)& (0+127)
  2886  002D  0012               	moviw fsr0++
  2887  002E  00DB               	movwf	(__pdataBANK3+4)& (0+127)
  2888  002F  0012               	moviw fsr0++
  2889  0030  00DC               	movwf	(__pdataBANK3+5)& (0+127)
  2890  0031  0012               	moviw fsr0++
  2891  0032  00DD               	movwf	(__pdataBANK3+6)& (0+127)
  2892                           
  2893                           ; Clear objects allocated to BIGRAM
  2894  0033  3071               	movlw	low (0+10097)
  2895  0034  0084               	movwf	4
  2896  0035  3027               	movlw	high (0+10097)
  2897  0036  0085               	movwf	5
  2898  0037  307F               	movlw	127
  2899  0038  00FE               	movwf	btemp
  2900  0039  3000               	movlw	0
  2901  003A  00FF               	movwf	btemp+1
  2902  003B  3190  2001  3180   	fcall	clear_ram0
  2903                           
  2904                           ; Clear objects allocated to COMMON
  2905  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  2906                           
  2907                           ; Clear objects allocated to BANK3
  2908  003F  30A0               	movlw	low __pbssBANK3
  2909  0040  0084               	movwf	4
  2910  0041  3001               	movlw	high __pbssBANK3
  2911  0042  0085               	movwf	5
  2912  0043  3037               	movlw	55
  2913  0044  00FE               	movwf	btemp
  2914  0045  3000               	movlw	0
  2915  0046  00FF               	movwf	btemp+1
  2916  0047  3190  2001  3180   	fcall	clear_ram0
  2917                           
  2918                           ; Clear objects allocated to BANK4
  2919  004A  3020               	movlw	low __pbssBANK4
  2920  004B  0084               	movwf	4
  2921  004C  3002               	movlw	high __pbssBANK4
  2922  004D  0085               	movwf	5
  2923  004E  3050               	movlw	80
  2924  004F  00FE               	movwf	btemp
  2925  0050  3000               	movlw	0
  2926  0051  00FF               	movwf	btemp+1
  2927  0052  3190  2001         	fcall	clear_ram0
  2928  0054                     end_of_initialization:	
  2929                           ;End of C runtime variable initialization code
  2930                           
  2931  0054                     __end_of__initialization:	
  2932  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2933  0055  0020               	movlb	0
  2934  0056  31B7  2F3C         	ljmp	_main	;jump to C main() function
  2935                           
  2936                           	psect	bssCOMMON
  2937  007C                     __pbssCOMMON:	
  2938  007C                     _toggleColor:	
  2939  007C                     	ds	1
  2940                           
  2941                           	psect	bssBANK3
  2942  01A0                     __pbssBANK3:	
  2943  01A0                     _cellVoltages:	
  2944  01A0                     	ds	10
  2945  01AA                     floorf@F524:	
  2946  01AA                     	ds	4
  2947  01AE                     ___fpclassifyf@F463:	
  2948  01AE                     	ds	4
  2949  01B2                     BQ76920@shuntResistorValue_mOhm:	
  2950  01B2                     	ds	4
  2951  01B6                     _shuntResistorValue_mOhm:	
  2952  01B6                     	ds	4
  2953  01BA                     _errno:	
  2954  01BA                     	ds	2
  2955  01BC                     _nout:	
  2956  01BC                     	ds	2
  2957  01BE                     _width:	
  2958  01BE                     	ds	2
  2959  01C0                     _prec:	
  2960  01C0                     	ds	2
  2961  01C2                     _flags:	
  2962  01C2                     	ds	2
  2963  01C4                     _maxCellTempDischarge:	
  2964  01C4                     	ds	2
  2965  01C6                     _maxCellTempCharge:	
  2966  01C6                     	ds	2
  2967  01C8                     _minCellTempDischarge:	
  2968  01C8                     	ds	2
  2969  01CA                     _minCellTempCharge:	
  2970  01CA                     	ds	2
  2971  01CC                     _adcOffset:	
  2972  01CC                     	ds	2
  2973  01CE                     _adcGain:	
  2974  01CE                     	ds	2
  2975  01D0                     BQ76920@protect2:	
  2976  01D0                     	ds	1
  2977  01D1                     BQ76920@protect1:	
  2978  01D1                     	ds	1
  2979  01D2                     myIsr@count:	
  2980  01D2                     	ds	1
  2981  01D3                     _tmr1_flag:	
  2982  01D3                     	ds	1
  2983  01D4                     _currState:	
  2984  01D4                     	ds	1
  2985  01D5                     _protect2:	
  2986  01D5                     	ds	1
  2987  01D6                     _protect1:	
  2988  01D6                     	ds	1
  2989                           
  2990                           	psect	dataBANK3
  2991  01D7                     __pdataBANK3:	
  2992  01D7                     stoa@F1174:	
  2993  01D7                     	ds	7
  2994                           
  2995                           	psect	bssBANK4
  2996  0220                     __pbssBANK4:	
  2997  0220                     _dbuf:	
  2998  0220                     	ds	80
  2999                           
  3000                           	psect	clrtext
  3001  1001                     clear_ram0:	
  3002                           ;	Called with FSR0 containing the base address, and
  3003                           ;	btemp/btemp+1 has the size to clear
  3004                           
  3005  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
  3006  1002                     clrloop0:	
  3007  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
  3008  1003  3101               	addfsr 0,1
  3009  1004  3001               	movlw	1
  3010  1005  02FE               	subwf	126,f
  3011  1006  3000               	movlw	0
  3012  1007  3BFF               	subwfb	127,f
  3013  1008  087F               	movf	127,w
  3014  1009  047E               	iorwf	126,w
  3015  100A  1903               	btfsc	3,2
  3016  100B  3400               	retlw	0	;all done for this memory range, return
  3017  100C  2802               	goto	clrloop0	;have we reached the end yet?
  3018                           
  3019                           	psect	cstackBANK3
  3020  01DE                     __pcstackBANK3:	
  3021  01DE                     ??_main:	
  3022                           
  3023                           ; 1 bytes @ 0x0
  3024  01DE                     	ds	1
  3025                           
  3026                           	psect	cstackBANK2
  3027  0120                     __pcstackBANK2:	
  3028  0120                     ??_vfpfcnvrt:	
  3029                           
  3030                           ; 1 bytes @ 0x0
  3031  0120                     	ds	12
  3032  012C                     vfpfcnvrt@cp:	
  3033                           
  3034                           ; 1 bytes @ 0xC
  3035  012C                     	ds	1
  3036  012D                     vfpfcnvrt@done:	
  3037                           
  3038                           ; 2 bytes @ 0xD
  3039  012D                     	ds	2
  3040  012F                     _vfpfcnvrt$1078:	
  3041                           
  3042                           ; 2 bytes @ 0xF
  3043  012F                     	ds	2
  3044  0131                     _vfpfcnvrt$1079:	
  3045                           
  3046                           ; 2 bytes @ 0x11
  3047  0131                     	ds	2
  3048  0133                     _vfpfcnvrt$1105:	
  3049                           
  3050                           ; 2 bytes @ 0x13
  3051  0133                     	ds	2
  3052  0135                     vfpfcnvrt@ct:	
  3053                           
  3054                           ; 3 bytes @ 0x15
  3055  0135                     	ds	3
  3056  0138                     vfpfcnvrt@f:	
  3057                           
  3058                           ; 4 bytes @ 0x18
  3059  0138                     	ds	4
  3060  013C                     vfpfcnvrt@ll:	
  3061                           
  3062                           ; 8 bytes @ 0x1C
  3063  013C                     	ds	8
  3064  0144                     vfpfcnvrt@vp:	
  3065                           
  3066                           ; 1 bytes @ 0x24
  3067  0144                     	ds	1
  3068  0145                     vfpfcnvrt@c:	
  3069                           
  3070                           ; 1 bytes @ 0x25
  3071  0145                     	ds	1
  3072  0146                     vfpfcnvrt@llu:	
  3073                           
  3074                           ; 8 bytes @ 0x26
  3075  0146                     	ds	8
  3076  014E                     ?_vsnprintf:	
  3077  014E                     vsnprintf@s:	
  3078                           ; 2 bytes @ 0x2E
  3079                           
  3080                           
  3081                           ; 2 bytes @ 0x2E
  3082  014E                     	ds	2
  3083  0150                     vsnprintf@n:	
  3084                           
  3085                           ; 2 bytes @ 0x30
  3086  0150                     	ds	2
  3087  0152                     vsnprintf@fmt:	
  3088                           
  3089                           ; 2 bytes @ 0x32
  3090  0152                     	ds	2
  3091  0154                     vsnprintf@ap:	
  3092                           
  3093                           ; 1 bytes @ 0x34
  3094  0154                     	ds	1
  3095  0155                     _vsnprintf$1707:	
  3096                           
  3097                           ; 2 bytes @ 0x35
  3098  0155                     	ds	2
  3099  0157                     vsnprintf@cnt:	
  3100                           
  3101                           ; 2 bytes @ 0x37
  3102  0157                     	ds	2
  3103  0159                     vsnprintf@f:	
  3104                           
  3105                           ; 6 bytes @ 0x39
  3106  0159                     	ds	6
  3107  015F                     ?_snprintf:	
  3108  015F                     snprintf@s:	
  3109                           ; 2 bytes @ 0x3F
  3110                           
  3111                           
  3112                           ; 2 bytes @ 0x3F
  3113  015F                     	ds	2
  3114  0161                     snprintf@n:	
  3115                           
  3116                           ; 2 bytes @ 0x41
  3117  0161                     	ds	2
  3118  0163                     snprintf@fmt:	
  3119                           
  3120                           ; 2 bytes @ 0x43
  3121  0163                     	ds	6
  3122  0169                     ??_snprintf:	
  3123                           
  3124                           ; 1 bytes @ 0x49
  3125  0169                     	ds	3
  3126  016C                     snprintf@ap:	
  3127                           
  3128                           ; 1 bytes @ 0x4C
  3129  016C                     	ds	1
  3130  016D                     ??_statemachine:	
  3131                           
  3132                           ; 1 bytes @ 0x4D
  3133  016D                     	ds	2
  3134  016F                     statemachine@success:	
  3135                           
  3136                           ; 1 bytes @ 0x4F
  3137  016F                     	ds	1
  3138                           
  3139                           	psect	cstackBANK1
  3140  00A0                     __pcstackBANK1:	
  3141  00A0                     ?_efgtoa:	
  3142  00A0                     efgtoa@fp:	
  3143                           ; 2 bytes @ 0x0
  3144                           
  3145  00A0                     setShortCircuitProtection@scaler:	
  3146                           ; 2 bytes @ 0x0
  3147                           
  3148  00A0                     setOverCurrentDischargeProtection@scaler:	
  3149                           ; 4 bytes @ 0x0
  3150                           
  3151                           
  3152                           ; 4 bytes @ 0x0
  3153  00A0                     	ds	2
  3154  00A2                     efgtoa@f:	
  3155                           
  3156                           ; 4 bytes @ 0x2
  3157  00A2                     	ds	2
  3158  00A4                     _setShortCircuitProtection$1904:	
  3159  00A4                     _setOverCurrentDischargeProtection$1905:	
  3160                           ; 4 bytes @ 0x4
  3161                           
  3162                           
  3163                           ; 4 bytes @ 0x4
  3164  00A4                     	ds	2
  3165  00A6                     efgtoa@c:	
  3166                           
  3167                           ; 1 bytes @ 0x6
  3168  00A6                     	ds	1
  3169  00A7                     ??_efgtoa:	
  3170                           
  3171                           ; 1 bytes @ 0x7
  3172  00A7                     	ds	1
  3173  00A8                     setShortCircuitProtection@i:	
  3174  00A8                     setOverCurrentDischargeProtection@i:	
  3175                           ; 2 bytes @ 0x8
  3176                           
  3177                           
  3178                           ; 2 bytes @ 0x8
  3179  00A8                     	ds	2
  3180  00AA                     setShortCircuitProtection@i_842:	
  3181  00AA                     setOverCurrentDischargeProtection@i_851:	
  3182                           ; 2 bytes @ 0xA
  3183                           
  3184                           
  3185                           ; 2 bytes @ 0xA
  3186  00AA                     	ds	1
  3187  00AB                     efgtoa@ou:	
  3188                           
  3189                           ; 4 bytes @ 0xB
  3190  00AB                     	ds	4
  3191  00AF                     _efgtoa$1016:	
  3192                           
  3193                           ; 2 bytes @ 0xF
  3194  00AF                     	ds	2
  3195  00B1                     _efgtoa$1017:	
  3196                           
  3197                           ; 2 bytes @ 0x11
  3198  00B1                     	ds	2
  3199  00B3                     _efgtoa$1021:	
  3200                           
  3201                           ; 2 bytes @ 0x13
  3202  00B3                     	ds	2
  3203  00B5                     _efgtoa$1025:	
  3204                           
  3205                           ; 2 bytes @ 0x15
  3206  00B5                     	ds	2
  3207  00B7                     _efgtoa$1026:	
  3208                           
  3209                           ; 2 bytes @ 0x17
  3210  00B7                     	ds	2
  3211  00B9                     _efgtoa$1027:	
  3212                           
  3213                           ; 2 bytes @ 0x19
  3214  00B9                     	ds	2
  3215  00BB                     efgtoa@t:	
  3216                           
  3217                           ; 2 bytes @ 0x1B
  3218  00BB                     	ds	2
  3219  00BD                     efgtoa@pp:	
  3220                           
  3221                           ; 2 bytes @ 0x1D
  3222  00BD                     	ds	2
  3223  00BF                     efgtoa@m:	
  3224                           
  3225                           ; 2 bytes @ 0x1F
  3226  00BF                     	ds	2
  3227  00C1                     efgtoa@ne:	
  3228                           
  3229                           ; 2 bytes @ 0x21
  3230  00C1                     	ds	2
  3231  00C3                     efgtoa@d:	
  3232                           
  3233                           ; 2 bytes @ 0x23
  3234  00C3                     	ds	2
  3235  00C5                     efgtoa@sign:	
  3236                           
  3237                           ; 2 bytes @ 0x25
  3238  00C5                     	ds	2
  3239  00C7                     efgtoa@p:	
  3240                           
  3241                           ; 2 bytes @ 0x27
  3242  00C7                     	ds	2
  3243  00C9                     efgtoa@nmode:	
  3244                           
  3245                           ; 1 bytes @ 0x29
  3246  00C9                     	ds	1
  3247  00CA                     efgtoa@w:	
  3248                           
  3249                           ; 2 bytes @ 0x2A
  3250  00CA                     	ds	2
  3251  00CC                     efgtoa@mode:	
  3252                           
  3253                           ; 1 bytes @ 0x2C
  3254  00CC                     	ds	1
  3255  00CD                     efgtoa@h:	
  3256                           
  3257                           ; 4 bytes @ 0x2D
  3258  00CD                     	ds	4
  3259  00D1                     efgtoa@l:	
  3260                           
  3261                           ; 4 bytes @ 0x31
  3262  00D1                     	ds	4
  3263  00D5                     efgtoa@i:	
  3264                           
  3265                           ; 2 bytes @ 0x35
  3266  00D5                     	ds	2
  3267  00D7                     efgtoa@g:	
  3268                           
  3269                           ; 4 bytes @ 0x37
  3270  00D7                     	ds	4
  3271  00DB                     efgtoa@e:	
  3272                           
  3273                           ; 2 bytes @ 0x3B
  3274  00DB                     	ds	2
  3275  00DD                     efgtoa@n:	
  3276                           
  3277                           ; 2 bytes @ 0x3D
  3278  00DD                     	ds	2
  3279  00DF                     efgtoa@u:	
  3280                           
  3281                           ; 4 bytes @ 0x3F
  3282  00DF                     	ds	4
  3283  00E3                     ?_vfpfcnvrt:	
  3284  00E3                     vfpfcnvrt@fp:	
  3285                           ; 2 bytes @ 0x43
  3286                           
  3287                           
  3288                           ; 2 bytes @ 0x43
  3289  00E3                     	ds	2
  3290  00E5                     vfpfcnvrt@fmt:	
  3291                           
  3292                           ; 1 bytes @ 0x45
  3293  00E5                     	ds	1
  3294  00E6                     vfpfcnvrt@ap:	
  3295                           
  3296                           ; 1 bytes @ 0x46
  3297  00E6                     	ds	1
  3298  00E7                     ?_vfprintf:	
  3299  00E7                     vfprintf@fp:	
  3300                           ; 2 bytes @ 0x47
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0x47
  3304  00E7                     	ds	2
  3305  00E9                     vfprintf@fmt:	
  3306                           
  3307                           ; 2 bytes @ 0x49
  3308  00E9                     	ds	2
  3309  00EB                     vfprintf@ap:	
  3310                           
  3311                           ; 1 bytes @ 0x4B
  3312  00EB                     	ds	1
  3313  00EC                     vfprintf@cfmt:	
  3314                           
  3315                           ; 2 bytes @ 0x4C
  3316  00EC                     	ds	2
  3317  00EE                     ??_vsnprintf:	
  3318                           
  3319                           ; 1 bytes @ 0x4E
  3320  00EE                     	ds	2
  3321                           
  3322                           	psect	cstackCOMMON
  3323  0070                     __pcstackCOMMON:	
  3324  0070                     ?_initClock:	
  3325  0070                     ?_init_GPIO:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0070                     ?_init_I2C:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0070                     ?_init_TMR1:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  0070                     ?_init_RGB:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  0070                     ?_statemachine:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_init_AFE:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ?_internal_16:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_putch:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_myIsr:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ??_myIsr:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ?_main:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_EUSART_Write:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ?_send_I2C_startBit:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_send_I2C_stopBit:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ?_send_I2C_NACK:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     putch@c:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376                           
  3377                           ; 1 bytes @ 0x0
  3378  0070                     	ds	1
  3379  0071                     ?___fleq:	
  3380  0071                     ??_initClock:	
  3381                           ; 1 bit 
  3382                           
  3383  0071                     ??_init_GPIO:	
  3384                           ; 1 bytes @ 0x1
  3385                           
  3386  0071                     ??_init_I2C:	
  3387                           ; 1 bytes @ 0x1
  3388                           
  3389  0071                     ??_init_TMR1:	
  3390                           ; 1 bytes @ 0x1
  3391                           
  3392  0071                     ??_init_RGB:	
  3393                           ; 1 bytes @ 0x1
  3394                           
  3395  0071                     ?_RGB_color:	
  3396                           ; 1 bytes @ 0x1
  3397                           
  3398  0071                     ??_internal_16:	
  3399                           ; 1 bytes @ 0x1
  3400                           
  3401  0071                     ?_setShuntResistorValue:	
  3402                           ; 1 bytes @ 0x1
  3403                           
  3404  0071                     ?_strcpy:	
  3405                           ; 1 bytes @ 0x1
  3406                           
  3407  0071                     ??_putch:	
  3408                           ; 1 bytes @ 0x1
  3409                           
  3410  0071                     ??_EUSART_Write:	
  3411                           ; 1 bytes @ 0x1
  3412                           
  3413  0071                     ?_send_I2C_data:	
  3414                           ; 1 bytes @ 0x1
  3415                           
  3416  0071                     ?_send_I2C_controlByte:	
  3417                           ; 1 bytes @ 0x1
  3418                           
  3419  0071                     ??_send_I2C_startBit:	
  3420                           ; 1 bytes @ 0x1
  3421                           
  3422  0071                     ??_send_I2C_stopBit:	
  3423                           ; 1 bytes @ 0x1
  3424                           
  3425  0071                     ??_send_I2C_NACK:	
  3426                           ; 1 bytes @ 0x1
  3427                           
  3428  0071                     ??___aodiv:	
  3429                           ; 1 bytes @ 0x1
  3430                           
  3431  0071                     ??___aomod:	
  3432                           ; 1 bytes @ 0x1
  3433                           
  3434  0071                     ??___lodiv:	
  3435                           ; 1 bytes @ 0x1
  3436                           
  3437  0071                     ??___lomod:	
  3438                           ; 1 bytes @ 0x1
  3439                           
  3440  0071                     ?_fputc:	
  3441                           ; 1 bytes @ 0x1
  3442                           
  3443  0071                     ?_strlen:	
  3444                           ; 2 bytes @ 0x1
  3445                           
  3446  0071                     ?___fpclassifyf:	
  3447                           ; 2 bytes @ 0x1
  3448                           
  3449  0071                     ?_isupper:	
  3450                           ; 2 bytes @ 0x1
  3451                           
  3452  0071                     ?_isalpha:	
  3453                           ; 2 bytes @ 0x1
  3454                           
  3455  0071                     ?_isdigit:	
  3456                           ; 2 bytes @ 0x1
  3457                           
  3458  0071                     ?_strncmp:	
  3459                           ; 2 bytes @ 0x1
  3460                           
  3461  0071                     ?__Umul8_16:	
  3462                           ; 2 bytes @ 0x1
  3463                           
  3464  0071                     ?_isspace:	
  3465                           ; 2 bytes @ 0x1
  3466                           
  3467  0071                     ?_islower:	
  3468                           ; 2 bytes @ 0x1
  3469                           
  3470  0071                     ?_read_I2C_data:	
  3471                           ; 2 bytes @ 0x1
  3472                           
  3473  0071                     ?___wmul:	
  3474                           ; 2 bytes @ 0x1
  3475                           
  3476  0071                     ?___awdiv:	
  3477                           ; 2 bytes @ 0x1
  3478                           
  3479  0071                     ?___awmod:	
  3480                           ; 2 bytes @ 0x1
  3481                           
  3482  0071                     ?_AFE_getSetCurrentSenseRes:	
  3483                           ; 2 bytes @ 0x1
  3484                           
  3485  0071                     ?___aldiv:	
  3486                           ; 4 bytes @ 0x1
  3487                           
  3488  0071                     ?___flneg:	
  3489                           ; 4 bytes @ 0x1
  3490                           
  3491  0071                     ?___fladd:	
  3492                           ; 4 bytes @ 0x1
  3493                           
  3494  0071                     ?___xxtofl:	
  3495                           ; 4 bytes @ 0x1
  3496                           
  3497  0071                     EUSART_Write@txData:	
  3498                           ; 4 bytes @ 0x1
  3499                           
  3500  0071                     __Umul8_16@multiplicand:	
  3501                           ; 1 bytes @ 0x1
  3502                           
  3503  0071                     send_I2C_data@databyte:	
  3504                           ; 1 bytes @ 0x1
  3505                           
  3506  0071                     send_I2C_controlByte@BlockAddress:	
  3507                           ; 2 bytes @ 0x1
  3508                           
  3509  0071                     RGB_color@color:	
  3510                           ; 2 bytes @ 0x1
  3511                           
  3512  0071                     ___wmul@multiplier:	
  3513                           ; 2 bytes @ 0x1
  3514                           
  3515  0071                     ___awdiv@divisor:	
  3516                           ; 2 bytes @ 0x1
  3517                           
  3518  0071                     ___awmod@divisor:	
  3519                           ; 2 bytes @ 0x1
  3520                           
  3521  0071                     isalpha@c:	
  3522                           ; 2 bytes @ 0x1
  3523                           
  3524  0071                     isdigit@c:	
  3525                           ; 2 bytes @ 0x1
  3526                           
  3527  0071                     isspace@c:	
  3528                           ; 2 bytes @ 0x1
  3529                           
  3530  0071                     isupper@c:	
  3531                           ; 2 bytes @ 0x1
  3532                           
  3533  0071                     fputc@c:	
  3534                           ; 2 bytes @ 0x1
  3535                           
  3536  0071                     strcpy@src:	
  3537                           ; 2 bytes @ 0x1
  3538                           
  3539  0071                     strlen@s:	
  3540                           ; 2 bytes @ 0x1
  3541                           
  3542  0071                     strncmp@_l:	
  3543                           ; 2 bytes @ 0x1
  3544                           
  3545  0071                     islower@c:	
  3546                           ; 2 bytes @ 0x1
  3547                           
  3548  0071                     setShuntResistorValue@res_mOhm:	
  3549                           ; 2 bytes @ 0x1
  3550                           
  3551  0071                     ___aldiv@divisor:	
  3552                           ; 4 bytes @ 0x1
  3553                           
  3554  0071                     ___fleq@ff1:	
  3555                           ; 4 bytes @ 0x1
  3556                           
  3557  0071                     ___flneg@f1:	
  3558                           ; 4 bytes @ 0x1
  3559                           
  3560  0071                     ___fladd@b:	
  3561                           ; 4 bytes @ 0x1
  3562                           
  3563  0071                     ___xxtofl@val:	
  3564                           ; 4 bytes @ 0x1
  3565                           
  3566  0071                     ___fpclassifyf@x:	
  3567                           ; 4 bytes @ 0x1
  3568                           
  3569                           
  3570                           ; 4 bytes @ 0x1
  3571  0071                     	ds	1
  3572  0072                     ?_EUSART_Write_Text:	
  3573  0072                     ___aodiv@counter:	
  3574                           ; 1 bytes @ 0x2
  3575                           
  3576  0072                     ___aomod@counter:	
  3577                           ; 1 bytes @ 0x2
  3578                           
  3579  0072                     ___lomod@counter:	
  3580                           ; 1 bytes @ 0x2
  3581                           
  3582  0072                     EUSART_Write_Text@text:	
  3583                           ; 1 bytes @ 0x2
  3584                           
  3585  0072                     ___lodiv@quotient:	
  3586                           ; 2 bytes @ 0x2
  3587                           
  3588                           
  3589                           ; 8 bytes @ 0x2
  3590  0072                     	ds	1
  3591  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3592  0073                     ??_RGB_color:	
  3593                           ; 1 bytes @ 0x3
  3594                           
  3595  0073                     ??_strlen:	
  3596                           ; 1 bytes @ 0x3
  3597                           
  3598  0073                     ??_isupper:	
  3599                           ; 1 bytes @ 0x3
  3600                           
  3601  0073                     ??_strcpy:	
  3602                           ; 1 bytes @ 0x3
  3603                           
  3604  0073                     ??_isalpha:	
  3605                           ; 1 bytes @ 0x3
  3606                           
  3607  0073                     ??_isdigit:	
  3608                           ; 1 bytes @ 0x3
  3609                           
  3610  0073                     ??__Umul8_16:	
  3611                           ; 1 bytes @ 0x3
  3612                           
  3613  0073                     ??_isspace:	
  3614                           ; 1 bytes @ 0x3
  3615                           
  3616  0073                     ??_islower:	
  3617                           ; 1 bytes @ 0x3
  3618                           
  3619  0073                     ??_send_I2C_data:	
  3620                           ; 1 bytes @ 0x3
  3621                           
  3622  0073                     ??_read_I2C_data:	
  3623                           ; 1 bytes @ 0x3
  3624                           
  3625  0073                     ___aodiv@sign:	
  3626                           ; 1 bytes @ 0x3
  3627                           
  3628  0073                     ___aomod@sign:	
  3629                           ; 1 bytes @ 0x3
  3630                           
  3631  0073                     send_I2C_controlByte@RW_bit:	
  3632                           ; 1 bytes @ 0x3
  3633                           
  3634  0073                     ___wmul@multiplicand:	
  3635                           ; 2 bytes @ 0x3
  3636                           
  3637  0073                     ___awdiv@dividend:	
  3638                           ; 2 bytes @ 0x3
  3639                           
  3640  0073                     ___awmod@dividend:	
  3641                           ; 2 bytes @ 0x3
  3642                           
  3643  0073                     fputc@fp:	
  3644                           ; 2 bytes @ 0x3
  3645                           
  3646  0073                     strlen@a:	
  3647                           ; 2 bytes @ 0x3
  3648                           
  3649  0073                     strncmp@_r:	
  3650                           ; 2 bytes @ 0x3
  3651                           
  3652                           
  3653                           ; 2 bytes @ 0x3
  3654  0073                     	ds	1
  3655  0074                     ??_EUSART_Write_Text:	
  3656  0074                     ?_abs:	
  3657                           ; 1 bytes @ 0x4
  3658                           
  3659  0074                     abs@a:	
  3660                           ; 2 bytes @ 0x4
  3661                           
  3662  0074                     ___aodiv@quotient:	
  3663                           ; 2 bytes @ 0x4
  3664                           
  3665                           
  3666                           ; 8 bytes @ 0x4
  3667  0074                     	ds	1
  3668  0075                     ??_AFE_getSetCurrentSenseRes:	
  3669  0075                     ??_setShuntResistorValue:	
  3670                           ; 1 bytes @ 0x5
  3671                           
  3672  0075                     ??_fputc:	
  3673                           ; 1 bytes @ 0x5
  3674                           
  3675  0075                     ??___fpclassifyf:	
  3676                           ; 1 bytes @ 0x5
  3677                           
  3678  0075                     ??_send_I2C_controlByte:	
  3679                           ; 1 bytes @ 0x5
  3680                           
  3681  0075                     ?_I2C_writeRegister:	
  3682                           ; 1 bytes @ 0x5
  3683                           
  3684  0075                     ??___wmul:	
  3685                           ; 1 bytes @ 0x5
  3686                           
  3687  0075                     ??___awdiv:	
  3688                           ; 1 bytes @ 0x5
  3689                           
  3690  0075                     ??___awmod:	
  3691                           ; 1 bytes @ 0x5
  3692                           
  3693  0075                     ??___flneg:	
  3694                           ; 1 bytes @ 0x5
  3695                           
  3696  0075                     ??___xxtofl:	
  3697                           ; 1 bytes @ 0x5
  3698                           
  3699  0075                     ?_readRegister:	
  3700                           ; 1 bytes @ 0x5
  3701                           
  3702  0075                     _isspace$1572:	
  3703                           ; 2 bytes @ 0x5
  3704                           
  3705  0075                     EUSART_Write_Text@i:	
  3706                           ; 1 bytes @ 0x5
  3707                           
  3708  0075                     I2C_writeRegister@slaveAddress:	
  3709                           ; 2 bytes @ 0x5
  3710                           
  3711  0075                     readRegister@slaveAddress:	
  3712                           ; 2 bytes @ 0x5
  3713                           
  3714  0075                     ___wmul@product:	
  3715                           ; 2 bytes @ 0x5
  3716                           
  3717  0075                     strcpy@s:	
  3718                           ; 2 bytes @ 0x5
  3719                           
  3720  0075                     strncmp@n:	
  3721                           ; 2 bytes @ 0x5
  3722                           
  3723  0075                     __Umul8_16@product:	
  3724                           ; 2 bytes @ 0x5
  3725                           
  3726  0075                     ___aldiv@dividend:	
  3727                           ; 2 bytes @ 0x5
  3728                           
  3729  0075                     ___fleq@ff2:	
  3730                           ; 4 bytes @ 0x5
  3731                           
  3732  0075                     ___fladd@a:	
  3733                           ; 4 bytes @ 0x5
  3734                           
  3735                           
  3736                           ; 4 bytes @ 0x5
  3737  0075                     	ds	1
  3738  0076                     ??_abs:	
  3739  0076                     ___awdiv@counter:	
  3740                           ; 1 bytes @ 0x6
  3741                           
  3742  0076                     ___awmod@counter:	
  3743                           ; 1 bytes @ 0x6
  3744                           
  3745                           
  3746                           ; 1 bytes @ 0x6
  3747  0076                     	ds	1
  3748  0077                     ??_setTemperatureLimitsint:	
  3749  0077                     ??_strncmp:	
  3750                           ; 1 bytes @ 0x7
  3751                           
  3752  0077                     ?_tolower:	
  3753                           ; 1 bytes @ 0x7
  3754                           
  3755  0077                     ?_toupper:	
  3756                           ; 2 bytes @ 0x7
  3757                           
  3758  0077                     ?_atoi:	
  3759                           ; 2 bytes @ 0x7
  3760                           
  3761  0077                     ___awdiv@sign:	
  3762                           ; 2 bytes @ 0x7
  3763                           
  3764  0077                     ___awmod@sign:	
  3765                           ; 1 bytes @ 0x7
  3766                           
  3767  0077                     strcpy@d:	
  3768                           ; 1 bytes @ 0x7
  3769                           
  3770  0077                     I2C_writeRegister@regAddress:	
  3771                           ; 1 bytes @ 0x7
  3772                           
  3773  0077                     readRegister@regAddress:	
  3774                           ; 2 bytes @ 0x7
  3775                           
  3776  0077                     atoi@s:	
  3777                           ; 2 bytes @ 0x7
  3778                           
  3779  0077                     tolower@c:	
  3780                           ; 2 bytes @ 0x7
  3781                           
  3782  0077                     toupper@c:	
  3783                           ; 2 bytes @ 0x7
  3784                           
  3785  0077                     __Umul8_16@word_mpld:	
  3786                           ; 2 bytes @ 0x7
  3787                           
  3788                           
  3789                           ; 2 bytes @ 0x7
  3790  0077                     	ds	1
  3791  0078                     strcpy@dest:	
  3792  0078                     ___awdiv@quotient:	
  3793                           ; 1 bytes @ 0x8
  3794                           
  3795  0078                     strncmp@l:	
  3796                           ; 2 bytes @ 0x8
  3797                           
  3798                           
  3799                           ; 2 bytes @ 0x8
  3800  0078                     	ds	1
  3801  0079                     ??_readRegister:	
  3802  0079                     ??___aldiv:	
  3803                           ; 1 bytes @ 0x9
  3804                           
  3805  0079                     __Umul8_16@multiplier:	
  3806                           ; 1 bytes @ 0x9
  3807                           
  3808  0079                     I2C_writeRegister@data:	
  3809                           ; 1 bytes @ 0x9
  3810                           
  3811  0079                     readRegister@recievedData:	
  3812                           ; 2 bytes @ 0x9
  3813                           
  3814  0079                     _tolower$1655:	
  3815                           ; 2 bytes @ 0x9
  3816                           
  3817  0079                     _toupper$1670:	
  3818                           ; 2 bytes @ 0x9
  3819                           
  3820                           
  3821                           ; 2 bytes @ 0x9
  3822  0079                     	ds	1
  3823  007A                     ??_stoa:	
  3824  007A                     ??___flsub:	
  3825                           ; 1 bytes @ 0xA
  3826                           
  3827  007A                     ?_fputs:	
  3828                           ; 1 bytes @ 0xA
  3829                           
  3830  007A                     ___fltol@sign1:	
  3831                           ; 2 bytes @ 0xA
  3832                           
  3833  007A                     ___lodiv@counter:	
  3834                           ; 1 bytes @ 0xA
  3835                           
  3836  007A                     EUSART_Initialize@x:	
  3837                           ; 1 bytes @ 0xA
  3838                           
  3839  007A                     fputs@fp:	
  3840                           ; 2 bytes @ 0xA
  3841                           
  3842  007A                     strncmp@r:	
  3843                           ; 2 bytes @ 0xA
  3844                           
  3845                           
  3846                           ; 2 bytes @ 0xA
  3847  007A                     	ds	1
  3848  007B                     ??_init_AFE:	
  3849  007B                     ??_I2C_writeRegister:	
  3850                           ; 1 bytes @ 0xB
  3851                           
  3852  007B                     ___fltol@exp1:	
  3853                           ; 1 bytes @ 0xB
  3854                           
  3855                           
  3856                           ; 1 bytes @ 0xB
  3857  007B                     	ds	1
  3858                           
  3859                           	psect	cstackBANK0
  3860  0020                     __pcstackBANK0:	
  3861  0020                     ?_setTemperatureLimitsint:	
  3862  0020                     ??_fputs:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0020                     ??_tolower:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0020                     ??_toupper:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0020                     ??_atoi:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0020                     ??___fleq:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0020                     ??___fladd:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0020                     ?_beginAFEcommunication:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0020                     ?_stoa:	
  3884                           ; 2 bytes @ 0x0
  3885                           
  3886  0020                     ?___aodiv:	
  3887                           ; 2 bytes @ 0x0
  3888                           
  3889  0020                     ?___aomod:	
  3890                           ; 8 bytes @ 0x0
  3891                           
  3892  0020                     ?___lodiv:	
  3893                           ; 8 bytes @ 0x0
  3894                           
  3895  0020                     ?___lomod:	
  3896                           ; 8 bytes @ 0x0
  3897                           
  3898  0020                     ___aldiv@counter:	
  3899                           ; 8 bytes @ 0x0
  3900                           
  3901  0020                     ___xxtofl@sign:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0020                     setTemperatureLimitsint@minDischarge_degC:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0020                     stoa@fp:	
  3908                           ; 2 bytes @ 0x0
  3909                           
  3910  0020                     ___fpclassifyf@e:	
  3911                           ; 2 bytes @ 0x0
  3912                           
  3913  0020                     ___aodiv@divisor:	
  3914                           ; 2 bytes @ 0x0
  3915                           
  3916  0020                     ___aomod@divisor:	
  3917                           ; 8 bytes @ 0x0
  3918                           
  3919  0020                     ___lodiv@divisor:	
  3920                           ; 8 bytes @ 0x0
  3921                           
  3922  0020                     ___lomod@divisor:	
  3923                           ; 8 bytes @ 0x0
  3924                           
  3925                           
  3926                           ; 8 bytes @ 0x0
  3927  0020                     	ds	1
  3928  0021                     ___aldiv@sign:	
  3929  0021                     ___xxtofl@exp:	
  3930                           ; 1 bytes @ 0x1
  3931                           
  3932                           
  3933                           ; 1 bytes @ 0x1
  3934  0021                     	ds	1
  3935  0022                     ??_beginAFEcommunication:	
  3936  0022                     stoa@s:	
  3937                           ; 1 bytes @ 0x2
  3938                           
  3939  0022                     fputs@c:	
  3940                           ; 1 bytes @ 0x2
  3941                           
  3942  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  3943                           ; 1 bytes @ 0x2
  3944                           
  3945  0022                     ___aldiv@quotient:	
  3946                           ; 2 bytes @ 0x2
  3947                           
  3948  0022                     ___xxtofl@arg:	
  3949                           ; 4 bytes @ 0x2
  3950                           
  3951  0022                     ___fpclassifyf@u:	
  3952                           ; 4 bytes @ 0x2
  3953                           
  3954                           
  3955                           ; 4 bytes @ 0x2
  3956  0022                     	ds	1
  3957  0023                     fputs@i:	
  3958  0023                     stoa@nuls:	
  3959                           ; 2 bytes @ 0x3
  3960                           
  3961                           
  3962                           ; 7 bytes @ 0x3
  3963  0023                     	ds	1
  3964  0024                     setTemperatureLimitsint@minCharge_degC:	
  3965  0024                     atoi@neg:	
  3966                           ; 2 bytes @ 0x4
  3967                           
  3968                           
  3969                           ; 2 bytes @ 0x4
  3970  0024                     	ds	1
  3971  0025                     fputs@s:	
  3972                           
  3973                           ; 1 bytes @ 0x5
  3974  0025                     	ds	1
  3975  0026                     ?_EUSART_Initialize:	
  3976  0026                     ?_pad:	
  3977                           ; 1 bytes @ 0x6
  3978                           
  3979  0026                     ?___flmul:	
  3980                           ; 2 bytes @ 0x6
  3981                           
  3982  0026                     setTemperatureLimitsint@maxCharge_degC:	
  3983                           ; 4 bytes @ 0x6
  3984                           
  3985  0026                     pad@fp:	
  3986                           ; 2 bytes @ 0x6
  3987                           
  3988  0026                     _atoi$1532:	
  3989                           ; 2 bytes @ 0x6
  3990                           
  3991  0026                     EUSART_Initialize@baudrate:	
  3992                           ; 2 bytes @ 0x6
  3993                           
  3994  0026                     ___flmul@b:	
  3995                           ; 4 bytes @ 0x6
  3996                           
  3997                           
  3998                           ; 4 bytes @ 0x6
  3999  0026                     	ds	2
  4000  0028                     pad@buf:	
  4001  0028                     ___fladd@signs:	
  4002                           ; 1 bytes @ 0x8
  4003                           
  4004  0028                     _atoi$1534:	
  4005                           ; 1 bytes @ 0x8
  4006                           
  4007  0028                     ___aodiv@dividend:	
  4008                           ; 2 bytes @ 0x8
  4009                           
  4010  0028                     ___aomod@dividend:	
  4011                           ; 8 bytes @ 0x8
  4012                           
  4013  0028                     ___lodiv@dividend:	
  4014                           ; 8 bytes @ 0x8
  4015                           
  4016  0028                     ___lomod@dividend:	
  4017                           ; 8 bytes @ 0x8
  4018                           
  4019                           
  4020                           ; 8 bytes @ 0x8
  4021  0028                     	ds	1
  4022  0029                     ___fladd@aexp:	
  4023  0029                     pad@p:	
  4024                           ; 1 bytes @ 0x9
  4025                           
  4026                           
  4027                           ; 2 bytes @ 0x9
  4028  0029                     	ds	1
  4029  002A                     ??_EUSART_Initialize:	
  4030  002A                     ___fladd@bexp:	
  4031                           ; 1 bytes @ 0xA
  4032                           
  4033  002A                     _atoi$1533:	
  4034                           ; 1 bytes @ 0xA
  4035                           
  4036  002A                     stoa@i:	
  4037                           ; 1 bytes @ 0xA
  4038                           
  4039  002A                     ___flmul@a:	
  4040                           ; 2 bytes @ 0xA
  4041                           
  4042                           
  4043                           ; 4 bytes @ 0xA
  4044  002A                     	ds	1
  4045  002B                     ??_pad:	
  4046  002B                     ___fladd@grs:	
  4047                           ; 1 bytes @ 0xB
  4048                           
  4049  002B                     beginAFEcommunication@commSuccess:	
  4050                           ; 1 bytes @ 0xB
  4051                           
  4052  002B                     atoi@n:	
  4053                           ; 2 bytes @ 0xB
  4054                           
  4055                           
  4056                           ; 2 bytes @ 0xB
  4057  002B                     	ds	1
  4058  002C                     pad@i:	
  4059  002C                     stoa@w:	
  4060                           ; 2 bytes @ 0xC
  4061                           
  4062                           
  4063                           ; 2 bytes @ 0xC
  4064  002C                     	ds	1
  4065  002D                     beginAFEcommunication@i:	
  4066                           
  4067                           ; 2 bytes @ 0xD
  4068  002D                     	ds	1
  4069  002E                     ??___flmul:	
  4070  002E                     pad@w:	
  4071                           ; 1 bytes @ 0xE
  4072                           
  4073  002E                     stoa@cp:	
  4074                           ; 2 bytes @ 0xE
  4075                           
  4076                           
  4077                           ; 2 bytes @ 0xE
  4078  002E                     	ds	2
  4079  0030                     ?_ctoa:	
  4080  0030                     ?_dtoa:	
  4081                           ; 2 bytes @ 0x10
  4082                           
  4083  0030                     ?_otoa:	
  4084                           ; 2 bytes @ 0x10
  4085                           
  4086  0030                     ?_utoa:	
  4087                           ; 2 bytes @ 0x10
  4088                           
  4089  0030                     ?_xtoa:	
  4090                           ; 2 bytes @ 0x10
  4091                           
  4092  0030                     ctoa@fp:	
  4093                           ; 2 bytes @ 0x10
  4094                           
  4095  0030                     dtoa@fp:	
  4096                           ; 2 bytes @ 0x10
  4097                           
  4098  0030                     otoa@fp:	
  4099                           ; 2 bytes @ 0x10
  4100                           
  4101  0030                     stoa@p:	
  4102                           ; 2 bytes @ 0x10
  4103                           
  4104  0030                     utoa@fp:	
  4105                           ; 2 bytes @ 0x10
  4106                           
  4107  0030                     xtoa@fp:	
  4108                           ; 2 bytes @ 0x10
  4109                           
  4110                           
  4111                           ; 2 bytes @ 0x10
  4112  0030                     	ds	2
  4113  0032                     ctoa@c:	
  4114  0032                     stoa@l:	
  4115                           ; 1 bytes @ 0x12
  4116                           
  4117  0032                     dtoa@d:	
  4118                           ; 2 bytes @ 0x12
  4119                           
  4120  0032                     otoa@d:	
  4121                           ; 8 bytes @ 0x12
  4122                           
  4123  0032                     utoa@d:	
  4124                           ; 8 bytes @ 0x12
  4125                           
  4126  0032                     xtoa@d:	
  4127                           ; 8 bytes @ 0x12
  4128                           
  4129                           
  4130                           ; 8 bytes @ 0x12
  4131  0032                     	ds	1
  4132  0033                     ??_ctoa:	
  4133  0033                     ___flmul@sign:	
  4134                           ; 1 bytes @ 0x13
  4135                           
  4136                           
  4137                           ; 1 bytes @ 0x13
  4138  0033                     	ds	1
  4139  0034                     ctoa@w:	
  4140  0034                     ___flmul@grs:	
  4141                           ; 2 bytes @ 0x14
  4142                           
  4143                           
  4144                           ; 4 bytes @ 0x14
  4145  0034                     	ds	4
  4146  0038                     ___flmul@aexp:	
  4147                           
  4148                           ; 1 bytes @ 0x18
  4149  0038                     	ds	1
  4150  0039                     ___flmul@bexp:	
  4151                           
  4152                           ; 1 bytes @ 0x19
  4153  0039                     	ds	1
  4154  003A                     ??_dtoa:	
  4155  003A                     ??_otoa:	
  4156                           ; 1 bytes @ 0x1A
  4157                           
  4158  003A                     ??_utoa:	
  4159                           ; 1 bytes @ 0x1A
  4160                           
  4161  003A                     xtoa@x:	
  4162                           ; 1 bytes @ 0x1A
  4163                           
  4164  003A                     ___flmul@prod:	
  4165                           ; 1 bytes @ 0x1A
  4166                           
  4167                           
  4168                           ; 4 bytes @ 0x1A
  4169  003A                     	ds	1
  4170  003B                     ??_xtoa:	
  4171  003B                     utoa@p:	
  4172                           ; 1 bytes @ 0x1B
  4173                           
  4174                           
  4175                           ; 2 bytes @ 0x1B
  4176  003B                     	ds	2
  4177  003D                     _dtoa$993:	
  4178  003D                     utoa@w:	
  4179                           ; 2 bytes @ 0x1D
  4180                           
  4181                           
  4182                           ; 2 bytes @ 0x1D
  4183  003D                     	ds	1
  4184  003E                     ___flmul@temp:	
  4185                           
  4186                           ; 2 bytes @ 0x1E
  4187  003E                     	ds	1
  4188  003F                     dtoa@p:	
  4189  003F                     utoa@n:	
  4190                           ; 2 bytes @ 0x1F
  4191                           
  4192                           
  4193                           ; 8 bytes @ 0x1F
  4194  003F                     	ds	1
  4195  0040                     ?___flsub:	
  4196  0040                     ?___fldiv:	
  4197                           ; 4 bytes @ 0x20
  4198                           
  4199  0040                     ___flsub@a:	
  4200                           ; 4 bytes @ 0x20
  4201                           
  4202  0040                     ___fldiv@a:	
  4203                           ; 4 bytes @ 0x20
  4204                           
  4205                           
  4206                           ; 4 bytes @ 0x20
  4207  0040                     	ds	1
  4208  0041                     dtoa@w:	
  4209                           
  4210                           ; 2 bytes @ 0x21
  4211  0041                     	ds	1
  4212  0042                     otoa@p:	
  4213                           
  4214                           ; 2 bytes @ 0x22
  4215  0042                     	ds	1
  4216  0043                     dtoa@s:	
  4217  0043                     _xtoa$1063:	
  4218                           ; 2 bytes @ 0x23
  4219                           
  4220                           
  4221                           ; 2 bytes @ 0x23
  4222  0043                     	ds	1
  4223  0044                     otoa@t:	
  4224  0044                     ___flsub@b:	
  4225                           ; 2 bytes @ 0x24
  4226                           
  4227  0044                     ___fldiv@b:	
  4228                           ; 4 bytes @ 0x24
  4229                           
  4230                           
  4231                           ; 4 bytes @ 0x24
  4232  0044                     	ds	1
  4233  0045                     _xtoa$1064:	
  4234  0045                     dtoa@n:	
  4235                           ; 2 bytes @ 0x25
  4236                           
  4237                           
  4238                           ; 8 bytes @ 0x25
  4239  0045                     	ds	1
  4240  0046                     otoa@w:	
  4241                           
  4242                           ; 2 bytes @ 0x26
  4243  0046                     	ds	1
  4244  0047                     utoa@i:	
  4245  0047                     xtoa@p:	
  4246                           ; 2 bytes @ 0x27
  4247                           
  4248                           
  4249                           ; 2 bytes @ 0x27
  4250  0047                     	ds	1
  4251  0048                     ??___fldiv:	
  4252  0048                     otoa@n:	
  4253                           ; 1 bytes @ 0x28
  4254                           
  4255                           
  4256                           ; 8 bytes @ 0x28
  4257  0048                     	ds	1
  4258  0049                     xtoa@w:	
  4259                           
  4260                           ; 2 bytes @ 0x29
  4261  0049                     	ds	2
  4262  004B                     xtoa@n:	
  4263                           
  4264                           ; 8 bytes @ 0x2B
  4265  004B                     	ds	2
  4266  004D                     dtoa@i:	
  4267  004D                     ___fldiv@rem:	
  4268                           ; 2 bytes @ 0x2D
  4269                           
  4270                           
  4271                           ; 4 bytes @ 0x2D
  4272  004D                     	ds	3
  4273  0050                     otoa@i:	
  4274                           
  4275                           ; 2 bytes @ 0x30
  4276  0050                     	ds	1
  4277  0051                     ___fldiv@sign:	
  4278                           
  4279                           ; 1 bytes @ 0x31
  4280  0051                     	ds	1
  4281  0052                     ___fldiv@new_exp:	
  4282                           
  4283                           ; 2 bytes @ 0x32
  4284  0052                     	ds	1
  4285  0053                     xtoa@i:	
  4286                           
  4287                           ; 2 bytes @ 0x33
  4288  0053                     	ds	1
  4289  0054                     ___fldiv@grs:	
  4290                           
  4291                           ; 4 bytes @ 0x34
  4292  0054                     	ds	1
  4293  0055                     xtoa@c:	
  4294                           
  4295                           ; 2 bytes @ 0x35
  4296  0055                     	ds	3
  4297  0058                     ___fldiv@bexp:	
  4298                           
  4299                           ; 1 bytes @ 0x38
  4300  0058                     	ds	1
  4301  0059                     ___fldiv@aexp:	
  4302                           
  4303                           ; 1 bytes @ 0x39
  4304  0059                     	ds	1
  4305  005A                     ?___flge:	
  4306  005A                     ?_floorf:	
  4307                           ; 1 bit 
  4308                           
  4309  005A                     ?___fltol:	
  4310                           ; 4 bytes @ 0x3A
  4311                           
  4312  005A                     ___flge@ff1:	
  4313                           ; 4 bytes @ 0x3A
  4314                           
  4315  005A                     ___fltol@f1:	
  4316                           ; 4 bytes @ 0x3A
  4317                           
  4318  005A                     floorf@x:	
  4319                           ; 4 bytes @ 0x3A
  4320                           
  4321                           
  4322                           ; 4 bytes @ 0x3A
  4323  005A                     	ds	4
  4324  005E                     ??_floorf:	
  4325  005E                     ??___fltol:	
  4326                           ; 1 bytes @ 0x3E
  4327                           
  4328  005E                     ___flge@ff2:	
  4329                           ; 1 bytes @ 0x3E
  4330                           
  4331                           
  4332                           ; 4 bytes @ 0x3E
  4333  005E                     	ds	4
  4334  0062                     ??___flge:	
  4335                           
  4336                           ; 1 bytes @ 0x42
  4337  0062                     	ds	1
  4338  0063                     ?_AFE_getSetShortCircuitCurrent:	
  4339  0063                     ?_AFE_getOverCurrentDischargeCurrent:	
  4340                           ; 4 bytes @ 0x43
  4341                           
  4342                           
  4343                           ; 4 bytes @ 0x43
  4344  0063                     	ds	1
  4345  0064                     floorf@m:	
  4346                           
  4347                           ; 4 bytes @ 0x44
  4348  0064                     	ds	2
  4349  0066                     ?_setShortCircuitProtection:	
  4350  0066                     ?_setOverCurrentDischargeProtection:	
  4351                           ; 1 bytes @ 0x46
  4352                           
  4353  0066                     setShortCircuitProtection@current_mA:	
  4354                           ; 1 bytes @ 0x46
  4355                           
  4356  0066                     setOverCurrentDischargeProtection@current_mA:	
  4357                           ; 4 bytes @ 0x46
  4358                           
  4359                           
  4360                           ; 4 bytes @ 0x46
  4361  0066                     	ds	1
  4362  0067                     ??_AFE_getSetShortCircuitCurrent:	
  4363  0067                     ??_AFE_getOverCurrentDischargeCurrent:	
  4364                           ; 1 bytes @ 0x47
  4365                           
  4366                           
  4367                           ; 1 bytes @ 0x47
  4368  0067                     	ds	1
  4369  0068                     floorf@e:	
  4370                           
  4371                           ; 2 bytes @ 0x48
  4372  0068                     	ds	2
  4373  006A                     setShortCircuitProtection@delay_us:	
  4374  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4375                           ; 2 bytes @ 0x4A
  4376                           
  4377  006A                     floorf@u:	
  4378                           ; 2 bytes @ 0x4A
  4379                           
  4380                           
  4381                           ; 4 bytes @ 0x4A
  4382  006A                     	ds	2
  4383  006C                     ??_setShortCircuitProtection:	
  4384  006C                     ??_setOverCurrentDischargeProtection:	
  4385                           ; 1 bytes @ 0x4C
  4386                           
  4387                           
  4388                           ; 1 bytes @ 0x4C
  4389  006C                     	ds	2
  4390  006E                     ??_vfprintf:	
  4391                           
  4392                           ; 1 bytes @ 0x4E
  4393  006E                     	ds	2
  4394                           
  4395                           	psect	maintext
  4396  373C                     __pmaintext:	
  4397 ;;
  4398 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4399 ;;
  4400 ;; *************** function _main *****************
  4401 ;; Defined at:
  4402 ;;		line 75 in file "main.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : B1F/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4420 ;;Total ram usage:        1 bytes
  4421 ;; Hardware stack levels required when called:   11
  4422 ;; This function calls:
  4423 ;;		_EUSART_Initialize
  4424 ;;		_initClock
  4425 ;;		_init_GPIO
  4426 ;;		_init_I2C
  4427 ;;		_init_RGB
  4428 ;;		_init_TMR1
  4429 ;;		_statemachine
  4430 ;; This function is called by:
  4431 ;;		Startup code after reset
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _main
  4437  373C                     _main:	
  4438                           
  4439                           ;main.c: 78:     initClock();
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4443  373C  3198  2001  31B7   	fcall	_initClock
  4444                           
  4445                           ;main.c: 79:     init_GPIO();
  4446  373F  3198  2004  31B7   	fcall	_init_GPIO
  4447                           
  4448                           ;main.c: 80:     init_I2C();
  4449  3742  31B5  252D  31B7   	fcall	_init_I2C
  4450                           
  4451                           ;main.c: 81:     EUSART_Initialize(9600);
  4452  3745  3000               	movlw	0
  4453  3746  0020               	movlb	0	; select bank0
  4454  3747  00A9               	movwf	EUSART_Initialize@baudrate+3
  4455  3748  3000               	movlw	0
  4456  3749  00A8               	movwf	EUSART_Initialize@baudrate+2
  4457  374A  3025               	movlw	37
  4458  374B  00A7               	movwf	EUSART_Initialize@baudrate+1
  4459  374C  3080               	movlw	128
  4460  374D  00A6               	movwf	EUSART_Initialize@baudrate
  4461  374E  31A0  20BD  31B7   	fcall	_EUSART_Initialize
  4462                           
  4463                           ;main.c: 82:     init_TMR1();
  4464  3751  31B5  2522  31B7   	fcall	_init_TMR1
  4465                           
  4466                           ;main.c: 83:     init_RGB();
  4467  3754  3187  27FA  31B7   	fcall	_init_RGB
  4468  3757                     l8221:	
  4469                           
  4470                           ;main.c: 87:         statemachine();
  4471  3757  3186  26D5  31B7   	fcall	_statemachine
  4472                           
  4473                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4474  375A  3034               	movlw	52
  4475  375B  0023               	movlb	3	; select bank3
  4476  375C  00DE               	movwf	??_main^(0+384)
  4477  375D  30F1               	movlw	241
  4478  375E                     u11907:	
  4479  375E  0B89               	decfsz	9,f
  4480  375F  2F5E               	goto	u11907
  4481  3760  0BDE               	decfsz	??_main^(0+384),f
  4482  3761  2F5E               	goto	u11907
  4483  3762  3200               	nop2
  4484  3763  2F57               	goto	l8221
  4485  3764                     __end_of_main:	
  4486                           
  4487                           	psect	text1
  4488  06D5                     __ptext1:	
  4489 ;; *************** function _statemachine *****************
  4490 ;; Defined at:
  4491 ;;		line 95 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  success         1   79[BANK2 ] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        3 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:   10
  4512 ;; This function calls:
  4513 ;;		_AFE_getOverCurrentDischargeCurrent
  4514 ;;		_AFE_getSetCurrentSenseRes
  4515 ;;		_AFE_getSetShortCircuitCurrent
  4516 ;;		_EUSART_Write_Text
  4517 ;;		_RGB_AWAIT_AFE_CONN
  4518 ;;		_RGB_color
  4519 ;;		_beginAFEcommunication
  4520 ;;		_init_AFE
  4521 ;;		_snprintf
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _statemachine
  4529  06D5                     _statemachine:	
  4530                           
  4531                           ;main.c: 97:     switch (currState) {
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4535  06D5  2FE4               	goto	l8203
  4536  06D6                     l8145:	
  4537                           
  4538                           ;main.c: 100:             if (tmr1_flag) {
  4539  06D6  0023               	movlb	3	; select bank3
  4540  06D7  0853               	movf	_tmr1_flag^(0+384),w	;volatile
  4541  06D8  1903               	btfsc	3,2
  4542  06D9  0008               	return
  4543                           
  4544                           ;main.c: 101:                 tmr1_flag = 0;
  4545  06DA  01D3               	clrf	_tmr1_flag^(0+384)	;volatile
  4546                           
  4547                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4548  06DB  31B6  26B0  3186   	fcall	_RGB_AWAIT_AFE_CONN
  4549                           
  4550                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4551  06DE  31A1  2165  3186   	fcall	_beginAFEcommunication
  4552  06E1  0020               	movlb	0	; select bank0
  4553  06E2  0820               	movf	?_beginAFEcommunication,w
  4554  06E3  0022               	movlb	2	; select bank2
  4555  06E4  00ED               	movwf	??_statemachine^(0+256)
  4556  06E5  086D               	movf	??_statemachine^(0+256),w
  4557  06E6  00EF               	movwf	statemachine@success^(0+256)
  4558                           
  4559                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4560  06E7  303B               	movlw	low (STR_1| (0+32768))
  4561  06E8  00F2               	movwf	EUSART_Write_Text@text
  4562  06E9  30B9               	movlw	high (STR_1| (0+32768))
  4563  06EA  00F3               	movwf	EUSART_Write_Text@text+1
  4564  06EB  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4565                           
  4566                           ;main.c: 108:                 if (success) {
  4567  06EE  0022               	movlb	2	; select bank2
  4568  06EF  086F               	movf	statemachine@success^(0+256),w
  4569  06F0  1903               	btfsc	3,2
  4570  06F1  0008               	return
  4571                           
  4572                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  4573  06F2  0020               	movlb	0	; select bank0
  4574  06F3  1018               	bcf	24,0	;volatile
  4575                           
  4576                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  4577  06F4  0021               	movlb	1	; select bank1
  4578  06F5  1011               	bcf	17,0	;volatile
  4579                           
  4580                           ;main.c: 111:                     RGB_color(0);
  4581  06F6  3000               	movlw	0
  4582  06F7  00F1               	movwf	RGB_color@color
  4583  06F8  00F2               	movwf	RGB_color@color+1
  4584  06F9  31B6  268F  3186   	fcall	_RGB_color
  4585                           
  4586                           ;main.c: 112:                     tmr1_flag = 0;
  4587  06FC  0023               	movlb	3	; select bank3
  4588  06FD  01D3               	clrf	_tmr1_flag^(0+384)	;volatile
  4589                           
  4590                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  4591  06FE  301A               	movlw	26
  4592  06FF  0022               	movlb	2	; select bank2
  4593  0700  00ED               	movwf	??_statemachine^(0+256)
  4594  0701  30F8               	movlw	248
  4595  0702                     u11917:	
  4596  0702  0B89               	decfsz	9,f
  4597  0703  2F02               	goto	u11917
  4598  0704  0BED               	decfsz	??_statemachine^(0+256),f
  4599  0705  2F02               	goto	u11917
  4600  0706  0000               	nop
  4601                           
  4602                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  4603  0707  3035               	movlw	low (STR_2| (0+32768))
  4604  0708  00F2               	movwf	EUSART_Write_Text@text
  4605  0709  30B8               	movlw	high (STR_2| (0+32768))
  4606  070A  00F3               	movwf	EUSART_Write_Text@text+1
  4607  070B  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4608                           
  4609                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  4610  070E  3071               	movlw	113
  4611  070F  0022               	movlb	2	; select bank2
  4612  0710  00DF               	movwf	snprintf@s^(0+256)
  4613  0711  3027               	movlw	39
  4614  0712  00E0               	movwf	(snprintf@s^(0+256)+1)
  4615  0713  307F               	movlw	127
  4616  0714  00E1               	movwf	snprintf@n^(0+256)
  4617  0715  3000               	movlw	0
  4618  0716  00E2               	movwf	(snprintf@n^(0+256)+1)
  4619  0717  30BC               	movlw	low (STR_3| (0+32768))
  4620  0718  00E3               	movwf	snprintf@fmt^(0+256)
  4621  0719  30B8               	movlw	high (STR_3| (0+32768))
  4622  071A  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4623  071B  0023               	movlb	3	; select bank3
  4624  071C  084D               	movf	(_adcOffset+1)^(0+384),w
  4625  071D  0022               	movlb	2	; select bank2
  4626  071E  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4627  071F  0023               	movlb	3	; select bank3
  4628  0720  084C               	movf	_adcOffset^(0+384),w
  4629  0721  0022               	movlb	2	; select bank2
  4630  0722  00E5               	movwf	(?_snprintf^(0+256)+6)
  4631  0723  0023               	movlb	3	; select bank3
  4632  0724  084F               	movf	(_adcGain+1)^(0+384),w
  4633  0725  0022               	movlb	2	; select bank2
  4634  0726  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  4635  0727  0023               	movlb	3	; select bank3
  4636  0728  084E               	movf	_adcGain^(0+384),w
  4637  0729  0022               	movlb	2	; select bank2
  4638  072A  00E7               	movwf	(?_snprintf^(0+256)+8)
  4639  072B  31A0  2001  3186   	fcall	_snprintf
  4640                           
  4641                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  4642  072E  3071               	movlw	113
  4643  072F  00F2               	movwf	EUSART_Write_Text@text
  4644  0730  3027               	movlw	39
  4645  0731  00F3               	movwf	EUSART_Write_Text@text+1
  4646  0732  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4647                           
  4648                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  4649  0735  3000               	movlw	low (STR_4| (0+32768))
  4650  0736  00F2               	movwf	EUSART_Write_Text@text
  4651  0737  30B8               	movlw	high (STR_4| (0+32768))
  4652  0738  00F3               	movwf	EUSART_Write_Text@text+1
  4653  0739  31A8  2000         	fcall	_EUSART_Write_Text
  4654                           
  4655                           ;main.c: 121:                     currState = 1;
  4656  073B  0023               	movlb	3	; select bank3
  4657  073C  01D4               	clrf	_currState^(0+384)
  4658  073D  0AD4               	incf	_currState^(0+384),f
  4659  073E  0008               	return
  4660  073F                     l8175:	
  4661                           
  4662                           ;main.c: 130:             init_AFE();
  4663  073F  3188  2001  3186   	fcall	_init_AFE
  4664                           
  4665                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  4666  0742  301A               	movlw	26
  4667  0743  0022               	movlb	2	; select bank2
  4668  0744  00ED               	movwf	??_statemachine^(0+256)
  4669  0745  30F8               	movlw	248
  4670  0746                     u11927:	
  4671  0746  0B89               	decfsz	9,f
  4672  0747  2F46               	goto	u11927
  4673  0748  0BED               	decfsz	??_statemachine^(0+256),f
  4674  0749  2F46               	goto	u11927
  4675  074A  0000               	nop
  4676                           
  4677                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  4678  074B  3060               	movlw	low ((STR_2+43)| (0+32768))
  4679  074C  00F2               	movwf	EUSART_Write_Text@text
  4680  074D  30B8               	movlw	high ((STR_2+43)| (0+32768))
  4681  074E  00F3               	movwf	EUSART_Write_Text@text+1
  4682  074F  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4683                           
  4684                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  4685  0752  3071               	movlw	113
  4686  0753  0022               	movlb	2	; select bank2
  4687  0754  00DF               	movwf	snprintf@s^(0+256)
  4688  0755  3027               	movlw	39
  4689  0756  00E0               	movwf	(snprintf@s^(0+256)+1)
  4690  0757  307F               	movlw	127
  4691  0758  00E1               	movwf	snprintf@n^(0+256)
  4692  0759  3000               	movlw	0
  4693  075A  00E2               	movwf	(snprintf@n^(0+256)+1)
  4694  075B  3011               	movlw	low (STR_6| (0+32768))
  4695  075C  00E3               	movwf	snprintf@fmt^(0+256)
  4696  075D  30B9               	movlw	high (STR_6| (0+32768))
  4697  075E  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4698  075F  31B5  2504  3186   	fcall	_AFE_getSetCurrentSenseRes
  4699  0762  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  4700  0763  0022               	movlb	2	; select bank2
  4701  0764  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4702  0765  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  4703  0766  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4704  0767  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  4705  0768  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4706  0769  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  4707  076A  00E5               	movwf	(?_snprintf^(0+256)+6)
  4708  076B  31A0  2001  3186   	fcall	_snprintf
  4709                           
  4710                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  4711  076E  3071               	movlw	113
  4712  076F  00F2               	movwf	EUSART_Write_Text@text
  4713  0770  3027               	movlw	39
  4714  0771  00F3               	movwf	EUSART_Write_Text@text+1
  4715  0772  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4716                           
  4717                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  4718  0775  3071               	movlw	113
  4719  0776  0022               	movlb	2	; select bank2
  4720  0777  00DF               	movwf	snprintf@s^(0+256)
  4721  0778  3027               	movlw	39
  4722  0779  00E0               	movwf	(snprintf@s^(0+256)+1)
  4723  077A  307F               	movlw	127
  4724  077B  00E1               	movwf	snprintf@n^(0+256)
  4725  077C  3000               	movlw	0
  4726  077D  00E2               	movwf	(snprintf@n^(0+256)+1)
  4727  077E  3090               	movlw	low (STR_7| (0+32768))
  4728  077F  00E3               	movwf	snprintf@fmt^(0+256)
  4729  0780  30B8               	movlw	high (STR_7| (0+32768))
  4730  0781  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4731  0782  31A9  213C  3186   	fcall	_AFE_getSetShortCircuitCurrent
  4732  0785  0020               	movlb	0	; select bank0
  4733  0786  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  4734  0787  0022               	movlb	2	; select bank2
  4735  0788  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4736  0789  0020               	movlb	0	; select bank0
  4737  078A  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  4738  078B  0022               	movlb	2	; select bank2
  4739  078C  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4740  078D  0020               	movlb	0	; select bank0
  4741  078E  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  4742  078F  0022               	movlb	2	; select bank2
  4743  0790  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4744  0791  0020               	movlb	0	; select bank0
  4745  0792  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  4746  0793  0022               	movlb	2	; select bank2
  4747  0794  00E5               	movwf	(?_snprintf^(0+256)+6)
  4748  0795  31A0  2001  3186   	fcall	_snprintf
  4749                           
  4750                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  4751  0798  3071               	movlw	113
  4752  0799  00F2               	movwf	EUSART_Write_Text@text
  4753  079A  3027               	movlw	39
  4754  079B  00F3               	movwf	EUSART_Write_Text@text+1
  4755  079C  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4756                           
  4757                           ;main.c: 139:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  4758  079F  3071               	movlw	113
  4759  07A0  0022               	movlb	2	; select bank2
  4760  07A1  00DF               	movwf	snprintf@s^(0+256)
  4761  07A2  3027               	movlw	39
  4762  07A3  00E0               	movwf	(snprintf@s^(0+256)+1)
  4763  07A4  307F               	movlw	127
  4764  07A5  00E1               	movwf	snprintf@n^(0+256)
  4765  07A6  3000               	movlw	0
  4766  07A7  00E2               	movwf	(snprintf@n^(0+256)+1)
  4767  07A8  3002               	movlw	low (STR_8| (0+32768))
  4768  07A9  00E3               	movwf	snprintf@fmt^(0+256)
  4769  07AA  30B0               	movlw	high (STR_8| (0+32768))
  4770  07AB  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4771  07AC  31A8  20EC  3186   	fcall	_AFE_getOverCurrentDischargeCurrent
  4772  07AF  0020               	movlb	0	; select bank0
  4773  07B0  0866               	movf	?_AFE_getOverCurrentDischargeCurrent+3,w
  4774  07B1  0022               	movlb	2	; select bank2
  4775  07B2  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4776  07B3  0020               	movlb	0	; select bank0
  4777  07B4  0865               	movf	?_AFE_getOverCurrentDischargeCurrent+2,w
  4778  07B5  0022               	movlb	2	; select bank2
  4779  07B6  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4780  07B7  0020               	movlb	0	; select bank0
  4781  07B8  0864               	movf	?_AFE_getOverCurrentDischargeCurrent+1,w
  4782  07B9  0022               	movlb	2	; select bank2
  4783  07BA  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4784  07BB  0020               	movlb	0	; select bank0
  4785  07BC  0863               	movf	?_AFE_getOverCurrentDischargeCurrent,w
  4786  07BD  0022               	movlb	2	; select bank2
  4787  07BE  00E5               	movwf	(?_snprintf^(0+256)+6)
  4788  07BF  31A0  2001  3186   	fcall	_snprintf
  4789                           
  4790                           ;main.c: 140:             EUSART_Write_Text(messageBuffer);
  4791  07C2  3071               	movlw	113
  4792  07C3  00F2               	movwf	EUSART_Write_Text@text
  4793  07C4  3027               	movlw	39
  4794  07C5  00F3               	movwf	EUSART_Write_Text@text+1
  4795  07C6  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4796                           
  4797                           ;main.c: 141:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  4798  07C9  30E7               	movlw	low (STR_9| (0+32768))
  4799  07CA  00F2               	movwf	EUSART_Write_Text@text
  4800  07CB  30B8               	movlw	high (STR_9| (0+32768))
  4801  07CC  00F3               	movwf	EUSART_Write_Text@text+1
  4802  07CD  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4803                           
  4804                           ;main.c: 142:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  4805  07D0  3063               	movlw	low (STR_10| (0+32768))
  4806  07D1  00F2               	movwf	EUSART_Write_Text@text
  4807  07D2  30B8               	movlw	high (STR_10| (0+32768))
  4808  07D3  00F3               	movwf	EUSART_Write_Text@text+1
  4809  07D4  31A8  2000  3186   	fcall	_EUSART_Write_Text
  4810                           
  4811                           ;main.c: 144:             RGB_color(1);
  4812  07D7  3001               	movlw	1
  4813  07D8  00F1               	movwf	RGB_color@color
  4814  07D9  3000               	movlw	0
  4815  07DA  00F2               	movwf	RGB_color@color+1
  4816  07DB  31B6  268F         	fcall	_RGB_color
  4817                           
  4818                           ;main.c: 145:             currState = 2;
  4819  07DD  3002               	movlw	2
  4820  07DE  0022               	movlb	2	; select bank2
  4821  07DF  00ED               	movwf	??_statemachine^(0+256)
  4822  07E0  086D               	movf	??_statemachine^(0+256),w
  4823  07E1  0023               	movlb	3	; select bank3
  4824  07E2  00D4               	movwf	_currState^(0+384)
  4825                           
  4826                           ;main.c: 146:             break;
  4827  07E3  0008               	return
  4828  07E4                     l8203:	
  4829  07E4  0023               	movlb	3	; select bank3
  4830  07E5  0854               	movf	_currState^(0+384),w
  4831  07E6  0022               	movlb	2	; select bank2
  4832  07E7  00ED               	movwf	??_statemachine^(0+256)
  4833  07E8  01EE               	clrf	(??_statemachine^(0+256)+1)
  4834                           
  4835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4836                           ; Switch size 1, requested type "simple"
  4837                           ; Number of cases is 1, Range of values is 0 to 0
  4838                           ; switch strategies available:
  4839                           ; Name         Instructions Cycles
  4840                           ; simple_byte            4     3 (average)
  4841                           ; direct_byte            8     6 (fixed)
  4842                           ; jumptable            260     6 (fixed)
  4843                           ;	Chosen strategy is simple_byte
  4844  07E9  086E               	movf	(??_statemachine+1)^(0+256),w
  4845  07EA  3A00               	xorlw	0	; case 0
  4846  07EB  1903               	skipnz
  4847  07EC  2FEE               	goto	l8325
  4848  07ED  2FF9               	goto	l143
  4849  07EE                     l8325:	
  4850                           
  4851                           ; Switch size 1, requested type "simple"
  4852                           ; Number of cases is 3, Range of values is 0 to 2
  4853                           ; switch strategies available:
  4854                           ; Name         Instructions Cycles
  4855                           ; simple_byte           10     6 (average)
  4856                           ; direct_byte           12     6 (fixed)
  4857                           ; jumptable            260     6 (fixed)
  4858                           ;	Chosen strategy is simple_byte
  4859  07EE  086D               	movf	??_statemachine^(0+256),w
  4860  07EF  3A00               	xorlw	0	; case 0
  4861  07F0  1903               	skipnz
  4862  07F1  2ED6               	goto	l8145
  4863  07F2  3A01               	xorlw	1	; case 1
  4864  07F3  1903               	skipnz
  4865  07F4  2F3F               	goto	l8175
  4866  07F5  3A03               	xorlw	3	; case 2
  4867  07F6  1903               	skipnz
  4868  07F7  2FF9               	goto	l143
  4869  07F8  2FF9               	goto	l143
  4870  07F9                     l143:	
  4871  07F9  0008               	return
  4872  07FA                     __end_of_statemachine:	
  4873                           
  4874                           	psect	text2
  4875  2001                     __ptext2:	
  4876 ;; *************** function _snprintf *****************
  4877 ;; Defined at:
  4878 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  s               2   63[BANK2 ] PTR unsigned char 
  4881 ;;		 -> messageBuffer(127), 
  4882 ;;  n               2   65[BANK2 ] unsigned int 
  4883 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  4884 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  ret             2    0        int 
  4887 ;;  ap              1   76[BANK2 ] PTR void [1]
  4888 ;;		 -> ?_snprintf(2), 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2   63[BANK2 ] int 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4898 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4901 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4902 ;;Total ram usage:       14 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    9
  4905 ;; This function calls:
  4906 ;;		_vsnprintf
  4907 ;; This function is called by:
  4908 ;;		_statemachine
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _snprintf
  4914  2001                     _snprintf:	
  4915                           
  4916                           ;incstack = 0
  4917                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4918  2001  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  4919  2002  0022               	movlb	2	; select bank2
  4920  2003  00E9               	movwf	??_snprintf^(0+256)
  4921  2004  0869               	movf	??_snprintf^(0+256),w
  4922  2005  00EC               	movwf	snprintf@ap^(0+256)
  4923  2006  0860               	movf	(snprintf@s+1)^(0+256),w
  4924  2007  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  4925  2008  085F               	movf	snprintf@s^(0+256),w
  4926  2009  00CE               	movwf	vsnprintf@s^(0+256)
  4927  200A  0862               	movf	(snprintf@n+1)^(0+256),w
  4928  200B  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  4929  200C  0861               	movf	snprintf@n^(0+256),w
  4930  200D  00D0               	movwf	vsnprintf@n^(0+256)
  4931  200E  0864               	movf	(snprintf@fmt+1)^(0+256),w
  4932  200F  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  4933  2010  0863               	movf	snprintf@fmt^(0+256),w
  4934  2011  00D2               	movwf	vsnprintf@fmt^(0+256)
  4935  2012  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  4936  2013  00E9               	movwf	??_snprintf^(0+256)
  4937  2014  0869               	movf	??_snprintf^(0+256),w
  4938  2015  00D4               	movwf	vsnprintf@ap^(0+256)
  4939  2016  31AC  24BF         	fcall	_vsnprintf
  4940  2018  0008               	return
  4941  2019                     __end_of_snprintf:	
  4942                           
  4943                           	psect	text3
  4944  2CBF                     __ptext3:	
  4945 ;; *************** function _vsnprintf *****************
  4946 ;; Defined at:
  4947 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  s               2   46[BANK2 ] PTR unsigned char 
  4950 ;;		 -> messageBuffer(127), 
  4951 ;;  n               2   48[BANK2 ] unsigned int 
  4952 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  4953 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  4954 ;;  ap              1   52[BANK2 ] PTR PTR void 
  4955 ;;		 -> snprintf@ap(1), 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  f               6   57[BANK2 ] struct _IO_FILE
  4958 ;;  cnt             2   55[BANK2 ] int 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  2   46[BANK2 ] int 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4968 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4969 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4970 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4971 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4972 ;;Total ram usage:       19 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    8
  4975 ;; This function calls:
  4976 ;;		_vfprintf
  4977 ;; This function is called by:
  4978 ;;		_snprintf
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           
  4983                           ;psect for function _vsnprintf
  4984  2CBF                     _vsnprintf:	
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4988  2CBF  3080               	movlw	128
  4989  2CC0  0022               	movlb	2	; select bank2
  4990  2CC1  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  4991  2CC2  3000               	movlw	0
  4992  2CC3  1903               	skipnz
  4993  2CC4  0250               	subwf	vsnprintf@n^(0+256),w
  4994  2CC5  1C03               	skipc
  4995  2CC6  2CD2               	goto	l8085
  4996  2CC7  304B               	movlw	75
  4997  2CC8  0023               	movlb	3	; select bank3
  4998  2CC9  00BA               	movwf	_errno^(0+384)
  4999  2CCA  3000               	movlw	0
  5000  2CCB  00BB               	movwf	(_errno^(0+384)+1)
  5001  2CCC  30FF               	movlw	255
  5002  2CCD  0022               	movlb	2	; select bank2
  5003  2CCE  00CE               	movwf	?_vsnprintf^(0+256)
  5004  2CCF  30FF               	movlw	255
  5005  2CD0  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  5006  2CD1  0008               	return
  5007  2CD2                     l8085:	
  5008  2CD2  084F               	movf	(vsnprintf@s+1)^(0+256),w
  5009  2CD3  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  5010  2CD4  084E               	movf	vsnprintf@s^(0+256),w
  5011  2CD5  00D9               	movwf	vsnprintf@f^(0+256)
  5012  2CD6  3000               	movlw	0
  5013  2CD7  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  5014  2CD8  3002               	movlw	2
  5015  2CD9  1903               	skipnz
  5016  2CDA  0250               	subwf	vsnprintf@n^(0+256),w
  5017  2CDB  1C03               	skipc
  5018  2CDC  2CE6               	goto	l8091
  5019  2CDD  0850               	movf	vsnprintf@n^(0+256),w
  5020  2CDE  3EFF               	addlw	255
  5021  2CDF  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5022  2CE0  30FF               	movlw	255
  5023  2CE1  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5024  2CE2  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  5025  2CE3  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  5026  2CE4  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  5027  2CE5  2CEE               	goto	l8093
  5028  2CE6                     l8091:	
  5029  2CE6  3001               	movlw	1
  5030  2CE7  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  5031  2CE8  3000               	movlw	0
  5032  2CE9  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  5033  2CEA  3001               	movlw	1
  5034  2CEB  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  5035  2CEC  3000               	movlw	0
  5036  2CED  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  5037  2CEE                     l8093:	
  5038  2CEE  3059               	movlw	low vsnprintf@f
  5039  2CEF  0021               	movlb	1	; select bank1
  5040  2CF0  00E7               	movwf	vfprintf@fp^(0+128)
  5041  2CF1  3001               	movlw	high vsnprintf@f
  5042  2CF2  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  5043  2CF3  0022               	movlb	2	; select bank2
  5044  2CF4  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  5045  2CF5  0021               	movlb	1	; select bank1
  5046  2CF6  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  5047  2CF7  0022               	movlb	2	; select bank2
  5048  2CF8  0852               	movf	vsnprintf@fmt^(0+256),w
  5049  2CF9  0021               	movlb	1	; select bank1
  5050  2CFA  00E9               	movwf	vfprintf@fmt^(0+128)
  5051  2CFB  0022               	movlb	2	; select bank2
  5052  2CFC  0854               	movf	vsnprintf@ap^(0+256),w
  5053  2CFD  0021               	movlb	1	; select bank1
  5054  2CFE  00EE               	movwf	??_vsnprintf^(0+128)
  5055  2CFF  086E               	movf	??_vsnprintf^(0+128),w
  5056  2D00  00EB               	movwf	vfprintf@ap^(0+128)
  5057  2D01  31B7  2795  31AC   	fcall	_vfprintf
  5058  2D04  0021               	movlb	1	; select bank1
  5059  2D05  0868               	movf	(?_vfprintf+1)^(0+128),w
  5060  2D06  0022               	movlb	2	; select bank2
  5061  2D07  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  5062  2D08  0021               	movlb	1	; select bank1
  5063  2D09  0867               	movf	?_vfprintf^(0+128),w
  5064  2D0A  0022               	movlb	2	; select bank2
  5065  2D0B  00D7               	movwf	vsnprintf@cnt^(0+256)
  5066  2D0C  0850               	movf	vsnprintf@n^(0+256),w
  5067  2D0D  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  5068  2D0E  1D03               	btfss	3,2
  5069  2D0F  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  5070  2D10  2D37               	goto	l8107
  5071  2D11  0850               	movf	vsnprintf@n^(0+256),w
  5072  2D12  3EFF               	addlw	255
  5073  2D13  0021               	movlb	1	; select bank1
  5074  2D14  00EE               	movwf	??_vsnprintf^(0+128)
  5075  2D15  30FF               	movlw	255
  5076  2D16  0022               	movlb	2	; select bank2
  5077  2D17  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5078  2D18  0021               	movlb	1	; select bank1
  5079  2D19  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  5080  2D1A  086F               	movf	(??_vsnprintf+1)^(0+128),w
  5081  2D1B  0022               	movlb	2	; select bank2
  5082  2D1C  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  5083  2D1D  1D03               	skipz
  5084  2D1E  2D23               	goto	u11845
  5085  2D1F  0021               	movlb	1	; select bank1
  5086  2D20  086E               	movf	??_vsnprintf^(0+128),w
  5087  2D21  0022               	movlb	2	; select bank2
  5088  2D22  0257               	subwf	vsnprintf@cnt^(0+256),w
  5089  2D23                     u11845:	
  5090  2D23  1C03               	skipc
  5091  2D24  2D2C               	goto	l8103
  5092  2D25  0850               	movf	vsnprintf@n^(0+256),w
  5093  2D26  3EFF               	addlw	255
  5094  2D27  00D5               	movwf	_vsnprintf$1707^(0+256)
  5095  2D28  30FF               	movlw	255
  5096  2D29  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  5097  2D2A  00D6               	movwf	(_vsnprintf$1707+1)^(0+256)
  5098  2D2B  2D30               	goto	l8105
  5099  2D2C                     l8103:	
  5100  2D2C  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  5101  2D2D  00D6               	movwf	(_vsnprintf$1707+1)^(0+256)
  5102  2D2E  0857               	movf	vsnprintf@cnt^(0+256),w
  5103  2D2F  00D5               	movwf	_vsnprintf$1707^(0+256)
  5104  2D30                     l8105:	
  5105  2D30  0855               	movf	_vsnprintf$1707^(0+256),w
  5106  2D31  074E               	addwf	vsnprintf@s^(0+256),w
  5107  2D32  0086               	movwf	6
  5108  2D33  0856               	movf	(_vsnprintf$1707+1)^(0+256),w
  5109  2D34  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  5110  2D35  0087               	movwf	7
  5111  2D36  0181               	clrf	1
  5112  2D37                     l8107:	
  5113  2D37  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  5114  2D38  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  5115  2D39  0857               	movf	vsnprintf@cnt^(0+256),w
  5116  2D3A  00CE               	movwf	?_vsnprintf^(0+256)
  5117  2D3B  0008               	return
  5118  2D3C                     __end_of_vsnprintf:	
  5119                           
  5120                           	psect	text4
  5121  3795                     __ptext4:	
  5122 ;; *************** function _vfprintf *****************
  5123 ;; Defined at:
  5124 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  5127 ;;		 -> vsnprintf@f(6), 
  5128 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  5129 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5130 ;;  ap              1   75[BANK1 ] PTR PTR void 
  5131 ;;		 -> snprintf@ap(1), 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  5134 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2   71[BANK1 ] int 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5144 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        9 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    7
  5151 ;; This function calls:
  5152 ;;		_vfpfcnvrt
  5153 ;; This function is called by:
  5154 ;;		_vsnprintf
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _vfprintf
  5160  3795                     _vfprintf:	
  5161                           
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5166  3795  0021               	movlb	1	; select bank1
  5167  3796  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  5168  3797  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  5169  3798  0869               	movf	vfprintf@fmt^(0+128),w
  5170  3799  00EC               	movwf	vfprintf@cfmt^(0+128)
  5171                           
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5173  379A  0023               	movlb	3	; select bank3
  5174  379B  01BC               	clrf	_nout^(0+384)
  5175  379C  01BD               	clrf	(_nout+1)^(0+384)
  5176  379D                     l8073:	
  5177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5178                           
  5179                           
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5181  379D  0021               	movlb	1	; select bank1
  5182  379E  086C               	movf	vfprintf@cfmt^(0+128),w
  5183  379F  0084               	movwf	4
  5184  37A0  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  5185  37A1  0085               	movwf	5
  5186  37A2  0012               	moviw fsr0++
  5187  37A3  1903               	btfsc	3,2
  5188  37A4  2FC1               	goto	l8075
  5189                           
  5190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5191  37A5  0868               	movf	(vfprintf@fp+1)^(0+128),w
  5192  37A6  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  5193  37A7  0867               	movf	vfprintf@fp^(0+128),w
  5194  37A8  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  5195  37A9  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5196  37AA  0020               	movlb	0	; select bank0
  5197  37AB  00EE               	movwf	??_vfprintf
  5198  37AC  086E               	movf	??_vfprintf,w
  5199  37AD  0021               	movlb	1	; select bank1
  5200  37AE  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  5201  37AF  086B               	movf	vfprintf@ap^(0+128),w
  5202  37B0  0020               	movlb	0	; select bank0
  5203  37B1  00EF               	movwf	??_vfprintf+1
  5204  37B2  086F               	movf	??_vfprintf+1,w
  5205  37B3  0021               	movlb	1	; select bank1
  5206  37B4  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  5207  37B5  3193  23BD  31B7   	fcall	_vfpfcnvrt
  5208  37B8  0021               	movlb	1	; select bank1
  5209  37B9  0863               	movf	?_vfpfcnvrt^(0+128),w
  5210  37BA  0023               	movlb	3	; select bank3
  5211  37BB  07BC               	addwf	_nout^(0+384),f
  5212  37BC  0021               	movlb	1	; select bank1
  5213  37BD  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5214  37BE  0023               	movlb	3	; select bank3
  5215  37BF  3DBD               	addwfc	(_nout+1)^(0+384),f
  5216  37C0  2F9D               	goto	l8073
  5217  37C1                     l8075:	
  5218                           
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5220  37C1  0023               	movlb	3	; select bank3
  5221  37C2  083D               	movf	(_nout+1)^(0+384),w
  5222  37C3  0021               	movlb	1	; select bank1
  5223  37C4  00E8               	movwf	(?_vfprintf+1)^(0+128)
  5224  37C5  0023               	movlb	3	; select bank3
  5225  37C6  083C               	movf	_nout^(0+384),w
  5226  37C7  0021               	movlb	1	; select bank1
  5227  37C8  00E7               	movwf	?_vfprintf^(0+128)
  5228  37C9  0008               	return
  5229  37CA                     __end_of_vfprintf:	
  5230                           
  5231                           	psect	text5
  5232  13BD                     __ptext5:	
  5233 ;; *************** function _vfpfcnvrt *****************
  5234 ;; Defined at:
  5235 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  5238 ;;		 -> vsnprintf@f(6), 
  5239 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  5240 ;;		 -> vfprintf@cfmt(2), 
  5241 ;;  ap              1   70[BANK1 ] PTR PTR void 
  5242 ;;		 -> snprintf@ap(1), 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  llu             8   38[BANK2 ] unsigned long long 
  5245 ;;  ll              8   28[BANK2 ] long long 
  5246 ;;  f               4   24[BANK2 ] long long 
  5247 ;;  ct              3   21[BANK2 ] unsigned char [3]
  5248 ;;  done            2   13[BANK2 ] int 
  5249 ;;  i               2    0        int 
  5250 ;;  c               1   37[BANK2 ] unsigned char 
  5251 ;;  vp              1   36[BANK2 ] PTR void 
  5252 ;;		 -> ?_snprintf(2), 
  5253 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  5254 ;;		 -> ?_snprintf(2), 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2   67[BANK1 ] int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5264 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5265 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5266 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5267 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:       50 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    6
  5271 ;; This function calls:
  5272 ;;		_atoi
  5273 ;;		_ctoa
  5274 ;;		_dtoa
  5275 ;;		_efgtoa
  5276 ;;		_fputc
  5277 ;;		_isdigit
  5278 ;;		_isupper
  5279 ;;		_otoa
  5280 ;;		_stoa
  5281 ;;		_strncmp
  5282 ;;		_tolower
  5283 ;;		_utoa
  5284 ;;		_xtoa
  5285 ;; This function is called by:
  5286 ;;		_vfprintf
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _vfpfcnvrt
  5292  13BD                     _vfpfcnvrt:	
  5293                           
  5294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5298  13BD  0021               	movlb	1	; select bank1
  5299  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5300  13BF  0086               	movwf	6
  5301  13C0  0187               	clrf	7
  5302  13C1  3F40               	moviw [0]fsr1
  5303  13C2  0022               	movlb	2	; select bank2
  5304  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5305  13C4  3F41               	moviw [1]fsr1
  5306  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5307  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  5308  13C7  0084               	movwf	4
  5309  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5310  13C9  0085               	movwf	5
  5311  13CA  0012               	moviw fsr0++
  5312  13CB  3A25               	xorlw	37
  5313  13CC  1D03               	btfss	3,2
  5314  13CD  2DD2               	goto	L16
  5315                           
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5317  13CE  0021               	movlb	1	; select bank1
  5318  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5319  13D0  0086               	movwf	6
  5320  13D1  0187               	clrf	7
  5321  13D2  3001               	movlw	1
  5322  13D3  0781               	addwf	1,f
  5323  13D4  3141               	addfsr 1,1
  5324  13D5  1803               	skipnc
  5325  13D6  0A81               	incf	1,f
  5326                           
  5327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5328  13D7  0023               	movlb	3	; select bank3
  5329  13D8  01BE               	clrf	_width^(0+384)
  5330  13D9  01BF               	clrf	(_width+1)^(0+384)
  5331  13DA  01C2               	clrf	_flags^(0+384)
  5332  13DB  01C3               	clrf	(_flags+1)^(0+384)
  5333                           
  5334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5335  13DC  30FF               	movlw	255
  5336  13DD  00C0               	movwf	_prec^(0+384)
  5337  13DE  30FF               	movlw	255
  5338  13DF  00C1               	movwf	(_prec^(0+384)+1)
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5341  13E0  0022               	movlb	2	; select bank2
  5342  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  5343  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5346  13E3  2C00               	goto	l7631
  5347  13E4                     l743:	
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5349                           
  5350                           
  5351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5352  13E4  0023               	movlb	3	; select bank3
  5353  13E5  1442               	bsf	_flags^(0+384),0
  5354  13E6                     l7615:	
  5355                           
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5357  13E6  0021               	movlb	1	; select bank1
  5358  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5359  13E8  0086               	movwf	6
  5360  13E9  0187               	clrf	7
  5361  13EA  3001               	movlw	1
  5362  13EB  0781               	addwf	1,f
  5363  13EC  3141               	addfsr 1,1
  5364  13ED  1803               	skipnc
  5365  13EE  0A81               	incf	1,f
  5366                           
  5367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5368  13EF  2C00               	goto	l7631
  5369  13F0                     l745:	
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5371                           
  5372                           
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5374  13F0  0023               	movlb	3	; select bank3
  5375  13F1  14C2               	bsf	_flags^(0+384),1
  5376  13F2  2BE6               	goto	l7615
  5377  13F3                     l746:	
  5378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5379                           
  5380                           
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5382  13F3  0023               	movlb	3	; select bank3
  5383  13F4  1542               	bsf	_flags^(0+384),2
  5384  13F5  2BE6               	goto	l7615
  5385  13F6                     l747:	
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5387                           
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5390  13F6  0023               	movlb	3	; select bank3
  5391  13F7  15C2               	bsf	_flags^(0+384),3
  5392  13F8  2BE6               	goto	l7615
  5393  13F9                     l748:	
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5395                           
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5398  13F9  0023               	movlb	3	; select bank3
  5399  13FA  1642               	bsf	_flags^(0+384),4
  5400  13FB  2BE6               	goto	l7615
  5401  13FC                     l7625:	
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5404  13FC  3001               	movlw	1
  5405  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  5406  13FE  3000               	movlw	0
  5407  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  5408  1400                     l7631:	
  5409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5410                           
  5411                           
  5412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5413  1400  0022               	movlb	2	; select bank2
  5414  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  5415  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  5416  1403  1D03               	btfss	3,2
  5417  1404  2C2C               	goto	l750
  5418  1405  0021               	movlb	1	; select bank1
  5419  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5420  1407  0086               	movwf	6
  5421  1408  0187               	clrf	7
  5422  1409  3F40               	moviw [0]fsr1
  5423  140A  0022               	movlb	2	; select bank2
  5424  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5425  140C  3F41               	moviw [1]fsr1
  5426  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5427  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  5428  140F  0084               	movwf	4
  5429  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5430  1411  0085               	movwf	5
  5431  1412  0800               	movf	0,w	;code access
  5432  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5433  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5434                           
  5435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5436                           ; Switch size 1, requested type "simple"
  5437                           ; Number of cases is 1, Range of values is 0 to 0
  5438                           ; switch strategies available:
  5439                           ; Name         Instructions Cycles
  5440                           ; simple_byte            4     3 (average)
  5441                           ; direct_byte            8     6 (fixed)
  5442                           ; jumptable            260     6 (fixed)
  5443                           ;	Chosen strategy is simple_byte
  5444  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5445  1416  3A00               	xorlw	0	; case 0
  5446  1417  1903               	skipnz
  5447  1418  2C1A               	goto	l8327
  5448  1419  2BFC               	goto	l7625
  5449  141A                     l8327:	
  5450                           
  5451                           ; Switch size 1, requested type "simple"
  5452                           ; Number of cases is 5, Range of values is 32 to 48
  5453                           ; switch strategies available:
  5454                           ; Name         Instructions Cycles
  5455                           ; simple_byte           16     9 (average)
  5456                           ; direct_byte           43     9 (fixed)
  5457                           ; jumptable            263     9 (fixed)
  5458                           ;	Chosen strategy is simple_byte
  5459  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5460  141B  3A20               	xorlw	32	; case 32
  5461  141C  1903               	skipnz
  5462  141D  2BF6               	goto	l747
  5463  141E  3A03               	xorlw	3	; case 35
  5464  141F  1903               	skipnz
  5465  1420  2BF9               	goto	l748
  5466  1421  3A08               	xorlw	8	; case 43
  5467  1422  1903               	skipnz
  5468  1423  2BF3               	goto	l746
  5469  1424  3A06               	xorlw	6	; case 45
  5470  1425  1903               	skipnz
  5471  1426  2BE4               	goto	l743
  5472  1427  3A1D               	xorlw	29	; case 48
  5473  1428  1903               	skipnz
  5474  1429  2BF0               	goto	l745
  5475  142A  2BFC               	goto	l7625
  5476  142B  2C00               	goto	l7631
  5477  142C                     l750:	
  5478                           
  5479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5480  142C  0023               	movlb	3	; select bank3
  5481  142D  1C42               	btfss	_flags^(0+384),0
  5482  142E  2C33               	goto	l7635
  5483                           
  5484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5485  142F  30FD               	movlw	253
  5486  1430  05C2               	andwf	_flags^(0+384),f
  5487  1431  30FF               	movlw	255
  5488  1432  05C3               	andwf	(_flags+1)^(0+384),f
  5489  1433                     l7635:	
  5490                           
  5491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5492  1433  0021               	movlb	1	; select bank1
  5493  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5494  1435  0086               	movwf	6
  5495  1436  0187               	clrf	7
  5496  1437  3F40               	moviw [0]fsr1
  5497  1438  0022               	movlb	2	; select bank2
  5498  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5499  143A  3F41               	moviw [1]fsr1
  5500  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5501  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  5502  143D  0084               	movwf	4
  5503  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5504  143F  0085               	movwf	5
  5505  1440  0012               	moviw fsr0++
  5506  1441  3A2A               	xorlw	42
  5507  1442  1D03               	btfss	3,2
  5508  1443  2C65               	goto	l7647
  5509                           
  5510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5511  1444  0021               	movlb	1	; select bank1
  5512  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5513  1446  0086               	movwf	6
  5514  1447  0187               	clrf	7
  5515  1448  3001               	movlw	1
  5516  1449  0781               	addwf	1,f
  5517  144A  3141               	addfsr 1,1
  5518  144B  1803               	skipnc
  5519  144C  0A81               	incf	1,f
  5520                           
  5521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5522  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5523  144E  0086               	movwf	6
  5524  144F  3001               	movlw	1	; select bank2/3
  5525  1450  0087               	movwf	7
  5526  1451  0801               	movf	1,w
  5527  1452  0084               	movwf	4
  5528  1453  3001               	movlw	1	; select bank2/3
  5529  1454  0085               	movwf	5
  5530  1455  3002               	movlw	2
  5531  1456  0781               	addwf	1,f
  5532  1457  3F00               	moviw [0]fsr0
  5533  1458  0023               	movlb	3	; select bank3
  5534  1459  00BE               	movwf	_width^(0+384)
  5535  145A  3F01               	moviw [1]fsr0
  5536  145B  00BF               	movwf	(_width+1)^(0+384)
  5537                           
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5539  145C  1FBF               	btfss	(_width+1)^(0+384),7
  5540  145D  2CA7               	goto	l7657
  5541                           
  5542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5543  145E  1442               	bsf	_flags^(0+384),0
  5544                           
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5546  145F  09BE               	comf	_width^(0+384),f
  5547  1460  09BF               	comf	(_width+1)^(0+384),f
  5548  1461  0ABE               	incf	_width^(0+384),f
  5549  1462  1903               	skipnz
  5550  1463  0ABF               	incf	(_width+1)^(0+384),f
  5551  1464  2CA7               	goto	l7657
  5552  1465                     l7647:	
  5553                           
  5554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5555  1465  0021               	movlb	1	; select bank1
  5556  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5557  1467  0086               	movwf	6
  5558  1468  0187               	clrf	7
  5559  1469  3F40               	moviw [0]fsr1
  5560  146A  00F7               	movwf	atoi@s
  5561  146B  3F41               	moviw [1]fsr1
  5562  146C  00F8               	movwf	atoi@s+1
  5563  146D  31AF  275F  3193   	fcall	_atoi
  5564  1470  0878               	movf	?_atoi+1,w
  5565  1471  0023               	movlb	3	; select bank3
  5566  1472  00BF               	movwf	(_width+1)^(0+384)
  5567  1473  0877               	movf	?_atoi,w
  5568  1474  00BE               	movwf	_width^(0+384)
  5569                           
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5571  1475  2C7F               	goto	l7651
  5572  1476                     l7649:	
  5573                           
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5575  1476  0021               	movlb	1	; select bank1
  5576  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5577  1478  0086               	movwf	6
  5578  1479  0187               	clrf	7
  5579  147A  3001               	movlw	1
  5580  147B  0781               	addwf	1,f
  5581  147C  3141               	addfsr 1,1
  5582  147D  1803               	skipnc
  5583  147E  0A81               	incf	1,f
  5584  147F                     l7651:	
  5585  147F  0021               	movlb	1	; select bank1
  5586  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5587  1481  0086               	movwf	6
  5588  1482  0187               	clrf	7
  5589  1483  3F40               	moviw [0]fsr1
  5590  1484  0022               	movlb	2	; select bank2
  5591  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5592  1486  3F41               	moviw [1]fsr1
  5593  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5594  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  5595  1489  0084               	movwf	4
  5596  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5597  148B  0085               	movwf	5
  5598  148C  0800               	movf	0,w	;code access
  5599  148D  3ED0               	addlw	208
  5600  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5601  148F  30FF               	movlw	255
  5602  1490  1803               	skipnc
  5603  1491  3000               	movlw	0
  5604  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5605  1493  3000               	movlw	0
  5606  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5607  1495  300A               	movlw	10
  5608  1496  1903               	skipnz
  5609  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5610  1498  1803               	btfsc	3,0
  5611  1499  2C9C               	goto	u11250
  5612  149A  3001               	movlw	1
  5613  149B  2C9D               	goto	u11260
  5614  149C                     u11250:	
  5615  149C  3000               	movlw	0
  5616  149D                     u11260:	
  5617  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5618  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5619  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5620  14A0  00AF               	movwf	_vfpfcnvrt$1078^(0+256)
  5621  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5622  14A2  00B0               	movwf	(_vfpfcnvrt$1078+1)^(0+256)
  5623  14A3  082F               	movf	_vfpfcnvrt$1078^(0+256),w
  5624  14A4  0430               	iorwf	(_vfpfcnvrt$1078+1)^(0+256),w
  5625  14A5  1D03               	btfss	3,2
  5626  14A6  2C76               	goto	l7649
  5627  14A7                     l7657:	
  5628                           
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5630  14A7  0021               	movlb	1	; select bank1
  5631  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5632  14A9  0086               	movwf	6
  5633  14AA  0187               	clrf	7
  5634  14AB  3F40               	moviw [0]fsr1
  5635  14AC  0022               	movlb	2	; select bank2
  5636  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5637  14AE  3F41               	moviw [1]fsr1
  5638  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5639  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  5640  14B1  0084               	movwf	4
  5641  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5642  14B3  0085               	movwf	5
  5643  14B4  0012               	moviw fsr0++
  5644  14B5  3A2E               	xorlw	46
  5645  14B6  1D03               	btfss	3,2
  5646  14B7  2D2F               	goto	l7679
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5649  14B8  0023               	movlb	3	; select bank3
  5650  14B9  01C0               	clrf	_prec^(0+384)
  5651  14BA  01C1               	clrf	(_prec+1)^(0+384)
  5652                           
  5653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5654  14BB  0021               	movlb	1	; select bank1
  5655  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5656  14BD  0086               	movwf	6
  5657  14BE  0187               	clrf	7
  5658  14BF  3001               	movlw	1
  5659  14C0  0781               	addwf	1,f
  5660  14C1  3141               	addfsr 1,1
  5661  14C2  1803               	skipnc
  5662  14C3  0A81               	incf	1,f
  5663                           
  5664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5665  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5666  14C5  0086               	movwf	6
  5667  14C6  0187               	clrf	7
  5668  14C7  3F40               	moviw [0]fsr1
  5669  14C8  0022               	movlb	2	; select bank2
  5670  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5671  14CA  3F41               	moviw [1]fsr1
  5672  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5673  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  5674  14CD  0084               	movwf	4
  5675  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5676  14CF  0085               	movwf	5
  5677  14D0  0012               	moviw fsr0++
  5678  14D1  3A2A               	xorlw	42
  5679  14D2  1D03               	btfss	3,2
  5680  14D3  2CED               	goto	l7669
  5681                           
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5683  14D4  0021               	movlb	1	; select bank1
  5684  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5685  14D6  0086               	movwf	6
  5686  14D7  0187               	clrf	7
  5687  14D8  3001               	movlw	1
  5688  14D9  0781               	addwf	1,f
  5689  14DA  3141               	addfsr 1,1
  5690  14DB  1803               	skipnc
  5691  14DC  0A81               	incf	1,f
  5692                           
  5693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5694  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5695  14DE  0086               	movwf	6
  5696  14DF  3001               	movlw	1	; select bank2/3
  5697  14E0  0087               	movwf	7
  5698  14E1  0801               	movf	1,w
  5699  14E2  0084               	movwf	4
  5700  14E3  3001               	movlw	1	; select bank2/3
  5701  14E4  0085               	movwf	5
  5702  14E5  3002               	movlw	2
  5703  14E6  0781               	addwf	1,f
  5704  14E7  3F00               	moviw [0]fsr0
  5705  14E8  0023               	movlb	3	; select bank3
  5706  14E9  00C0               	movwf	_prec^(0+384)
  5707  14EA  3F01               	moviw [1]fsr0
  5708  14EB  00C1               	movwf	(_prec+1)^(0+384)
  5709                           
  5710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5711  14EC  2D2F               	goto	l7679
  5712  14ED                     l7669:	
  5713                           
  5714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5715  14ED  0021               	movlb	1	; select bank1
  5716  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5717  14EF  0086               	movwf	6
  5718  14F0  0187               	clrf	7
  5719  14F1  3F40               	moviw [0]fsr1
  5720  14F2  00F7               	movwf	atoi@s
  5721  14F3  3F41               	moviw [1]fsr1
  5722  14F4  00F8               	movwf	atoi@s+1
  5723  14F5  31AF  275F  3193   	fcall	_atoi
  5724  14F8  0878               	movf	?_atoi+1,w
  5725  14F9  0023               	movlb	3	; select bank3
  5726  14FA  00C1               	movwf	(_prec+1)^(0+384)
  5727  14FB  0877               	movf	?_atoi,w
  5728  14FC  00C0               	movwf	_prec^(0+384)
  5729                           
  5730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5731  14FD  2D07               	goto	l7673
  5732  14FE                     l7671:	
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5735  14FE  0021               	movlb	1	; select bank1
  5736  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5737  1500  0086               	movwf	6
  5738  1501  0187               	clrf	7
  5739  1502  3001               	movlw	1
  5740  1503  0781               	addwf	1,f
  5741  1504  3141               	addfsr 1,1
  5742  1505  1803               	skipnc
  5743  1506  0A81               	incf	1,f
  5744  1507                     l7673:	
  5745  1507  0021               	movlb	1	; select bank1
  5746  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5747  1509  0086               	movwf	6
  5748  150A  0187               	clrf	7
  5749  150B  3F40               	moviw [0]fsr1
  5750  150C  0022               	movlb	2	; select bank2
  5751  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5752  150E  3F41               	moviw [1]fsr1
  5753  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5754  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  5755  1511  0084               	movwf	4
  5756  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5757  1513  0085               	movwf	5
  5758  1514  0800               	movf	0,w	;code access
  5759  1515  3ED0               	addlw	208
  5760  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5761  1517  30FF               	movlw	255
  5762  1518  1803               	skipnc
  5763  1519  3000               	movlw	0
  5764  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5765  151B  3000               	movlw	0
  5766  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5767  151D  300A               	movlw	10
  5768  151E  1903               	skipnz
  5769  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5770  1520  1803               	btfsc	3,0
  5771  1521  2D24               	goto	u11300
  5772  1522  3001               	movlw	1
  5773  1523  2D25               	goto	u11310
  5774  1524                     u11300:	
  5775  1524  3000               	movlw	0
  5776  1525                     u11310:	
  5777  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5778  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5779  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5780  1528  00B1               	movwf	_vfpfcnvrt$1079^(0+256)
  5781  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5782  152A  00B2               	movwf	(_vfpfcnvrt$1079+1)^(0+256)
  5783  152B  0831               	movf	_vfpfcnvrt$1079^(0+256),w
  5784  152C  0432               	iorwf	(_vfpfcnvrt$1079+1)^(0+256),w
  5785  152D  1D03               	btfss	3,2
  5786  152E  2CFE               	goto	l7671
  5787  152F                     l7679:	
  5788                           
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5790  152F  0021               	movlb	1	; select bank1
  5791  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5792  1531  0086               	movwf	6
  5793  1532  0187               	clrf	7
  5794  1533  3F40               	moviw [0]fsr1
  5795  1534  0022               	movlb	2	; select bank2
  5796  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5797  1536  3F41               	moviw [1]fsr1
  5798  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5799  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  5800  1539  0084               	movwf	4
  5801  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5802  153B  0085               	movwf	5
  5803  153C  0800               	movf	0,w	;code access
  5804  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5805  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5806  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5807  1540  00F7               	movwf	tolower@c
  5808  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5809  1542  00F8               	movwf	tolower@c+1
  5810  1543  31B6  26D2  3193   	fcall	_tolower
  5811  1546  0877               	movf	?_tolower,w
  5812  1547  0022               	movlb	2	; select bank2
  5813  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5814  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5815  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  5816                           
  5817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5818  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  5819  154C  1903               	btfsc	3,2
  5820  154D  2D8F               	goto	l7689
  5821                           
  5822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5823  154E  0021               	movlb	1	; select bank1
  5824  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5825  1550  0086               	movwf	6
  5826  1551  0187               	clrf	7
  5827  1552  3F40               	moviw [0]fsr1
  5828  1553  0022               	movlb	2	; select bank2
  5829  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5830  1555  3F41               	moviw [1]fsr1
  5831  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5832  1557  3001               	movlw	1
  5833  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5834  1559  0084               	movwf	4
  5835  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5836  155B  1803               	skipnc
  5837  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5838  155D  0085               	movwf	5
  5839  155E  0800               	movf	0,w	;code access
  5840  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5841  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5842  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5843  1562  00F7               	movwf	tolower@c
  5844  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5845  1564  00F8               	movwf	tolower@c+1
  5846  1565  31B6  26D2  3193   	fcall	_tolower
  5847  1568  0877               	movf	?_tolower,w
  5848  1569  0022               	movlb	2	; select bank2
  5849  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5850  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5851  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  5852                           
  5853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5854  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  5855  156E  1903               	btfsc	3,2
  5856  156F  2D8F               	goto	l7689
  5857                           
  5858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5859  1570  0021               	movlb	1	; select bank1
  5860  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5861  1572  0086               	movwf	6
  5862  1573  0187               	clrf	7
  5863  1574  3F40               	moviw [0]fsr1
  5864  1575  0022               	movlb	2	; select bank2
  5865  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5866  1577  3F41               	moviw [1]fsr1
  5867  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5868  1579  3002               	movlw	2
  5869  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5870  157B  0084               	movwf	4
  5871  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5872  157D  1803               	skipnc
  5873  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5874  157F  0085               	movwf	5
  5875  1580  0800               	movf	0,w	;code access
  5876  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5877  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5878  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5879  1584  00F7               	movwf	tolower@c
  5880  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5881  1586  00F8               	movwf	tolower@c+1
  5882  1587  31B6  26D2  3193   	fcall	_tolower
  5883  158A  0877               	movf	?_tolower,w
  5884  158B  0022               	movlb	2	; select bank2
  5885  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5886  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5887  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  5888  158F                     l7689:	
  5889                           
  5890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5891  158F  0021               	movlb	1	; select bank1
  5892  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5893  1591  0086               	movwf	6
  5894  1592  0187               	clrf	7
  5895  1593  3F40               	moviw [0]fsr1
  5896  1594  0022               	movlb	2	; select bank2
  5897  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5898  1596  3F41               	moviw [1]fsr1
  5899  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5900  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  5901  1599  0084               	movwf	4
  5902  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5903  159B  0085               	movwf	5
  5904  159C  0012               	moviw fsr0++
  5905  159D  3A63               	xorlw	99
  5906  159E  31AD  1D03         	btfss	3,2
  5907  15A0  2DBE               	goto	l7699
  5908                           
  5909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5910  15A1  0021               	movlb	1	; select bank1
  5911  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5912  15A3  0086               	movwf	6
  5913  15A4  0187               	clrf	7
  5914  15A5  3001               	movlw	1
  5915  15A6  0781               	addwf	1,f
  5916  15A7  3141               	addfsr 1,1
  5917  15A8  1803               	skipnc
  5918  15A9  0A81               	incf	1,f
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5921  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5922  15AB  0086               	movwf	6
  5923  15AC  3001               	movlw	1	; select bank2/3
  5924  15AD  0087               	movwf	7
  5925  15AE  0801               	movf	1,w
  5926  15AF  0084               	movwf	4
  5927  15B0  3001               	movlw	1	; select bank2/3
  5928  15B1  0085               	movwf	5
  5929  15B2  3002               	movlw	2
  5930  15B3  0781               	addwf	1,f
  5931  15B4  0800               	movf	0,w
  5932  15B5  0022               	movlb	2	; select bank2
  5933  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5934  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  5935  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  5936                           
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5938  15B9  0021               	movlb	1	; select bank1
  5939  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  5940  15BB  0020               	movlb	0	; select bank0
  5941  15BC  00B1               	movwf	ctoa@fp+1
  5942  15BD  0021               	movlb	1	; select bank1
  5943  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  5944  15BF  0020               	movlb	0	; select bank0
  5945  15C0  00B0               	movwf	ctoa@fp
  5946  15C1  0022               	movlb	2	; select bank2
  5947  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  5948  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5949  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  5950  15C5  0020               	movlb	0	; select bank0
  5951  15C6  00B2               	movwf	ctoa@c
  5952  15C7  31B7  2764         	fcall	_ctoa
  5953  15C9  0020               	movlb	0	; select bank0
  5954  15CA  0831               	movf	?_ctoa+1,w
  5955  15CB  0021               	movlb	1	; select bank1
  5956  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5957  15CD  0020               	movlb	0	; select bank0
  5958  15CE  0830               	movf	?_ctoa,w
  5959  15CF  0021               	movlb	1	; select bank1
  5960  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  5961  15D1  0008               	return
  5962  15D2                     L16:	
  5963  15D2                     L15:	
  5964  15D2  318F  2FDA         	ljmp	l8055
  5965                           
  5966                           	psect	text6
  5967  1EA7                     __ptext6:	
  5968 ;; *************** function _xtoa *****************
  5969 ;; Defined at:
  5970 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5973 ;;		 -> vsnprintf@f(6), 
  5974 ;;  d               8   18[BANK0 ] unsigned long long 
  5975 ;;  x               1   26[BANK0 ] unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  n               8   43[BANK0 ] unsigned long long 
  5978 ;;  c               2   53[BANK0 ] int 
  5979 ;;  i               2   51[BANK0 ] int 
  5980 ;;  w               2   41[BANK0 ] int 
  5981 ;;  p               2   39[BANK0 ] int 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2   16[BANK0 ] int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5991 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5992 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5993 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5994 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5995 ;;Total ram usage:       39 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    5
  5998 ;; This function calls:
  5999 ;;		_isalpha
  6000 ;;		_isupper
  6001 ;;		_pad
  6002 ;;		_toupper
  6003 ;; This function is called by:
  6004 ;;		_vfpfcnvrt
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function _xtoa
  6010  1EA7                     _xtoa:	
  6011                           
  6012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6016  1EA7  0023               	movlb	3	; select bank3
  6017  1EA8  1BC1               	btfsc	(_prec+1)^(0+384),7
  6018  1EA9  2EAE               	goto	l709
  6019                           
  6020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6021  1EAA  30FD               	movlw	253
  6022  1EAB  05C2               	andwf	_flags^(0+384),f
  6023  1EAC  30FF               	movlw	255
  6024  1EAD  05C3               	andwf	(_flags+1)^(0+384),f
  6025  1EAE                     l709:	
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6027                           
  6028                           
  6029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6030  1EAE  0841               	movf	(_prec+1)^(0+384),w
  6031  1EAF  3A80               	xorlw	128
  6032  1EB0  0020               	movlb	0	; select bank0
  6033  1EB1  00BB               	movwf	??_xtoa
  6034  1EB2  3080               	movlw	128
  6035  1EB3  023B               	subwf	??_xtoa,w
  6036  1EB4  1D03               	skipz
  6037  1EB5  2EB9               	goto	u10975
  6038  1EB6  3001               	movlw	1
  6039  1EB7  0023               	movlb	3	; select bank3
  6040  1EB8  0240               	subwf	_prec^(0+384),w
  6041  1EB9                     u10975:	
  6042  1EB9  1803               	skipnc
  6043  1EBA  2EC1               	goto	l7501
  6044  1EBB  3001               	movlw	1
  6045  1EBC  0020               	movlb	0	; select bank0
  6046  1EBD  00C7               	movwf	xtoa@p
  6047  1EBE  3000               	movlw	0
  6048  1EBF  00C8               	movwf	xtoa@p+1
  6049  1EC0  2EC9               	goto	l713
  6050  1EC1                     l7501:	
  6051  1EC1  0023               	movlb	3	; select bank3
  6052  1EC2  0841               	movf	(_prec+1)^(0+384),w
  6053  1EC3  0020               	movlb	0	; select bank0
  6054  1EC4  00C8               	movwf	xtoa@p+1
  6055  1EC5  0023               	movlb	3	; select bank3
  6056  1EC6  0840               	movf	_prec^(0+384),w
  6057  1EC7  0020               	movlb	0	; select bank0
  6058  1EC8  00C7               	movwf	xtoa@p
  6059  1EC9                     l713:	
  6060                           
  6061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6062  1EC9  0023               	movlb	3	; select bank3
  6063  1ECA  083F               	movf	(_width+1)^(0+384),w
  6064  1ECB  0020               	movlb	0	; select bank0
  6065  1ECC  00CA               	movwf	xtoa@w+1
  6066  1ECD  0023               	movlb	3	; select bank3
  6067  1ECE  083E               	movf	_width^(0+384),w
  6068  1ECF  0020               	movlb	0	; select bank0
  6069  1ED0  00C9               	movwf	xtoa@w
  6070                           
  6071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6072  1ED1  0023               	movlb	3	; select bank3
  6073  1ED2  1E42               	btfss	_flags^(0+384),4
  6074  1ED3  2ED9               	goto	l7507
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6077  1ED4  30FE               	movlw	254
  6078  1ED5  0020               	movlb	0	; select bank0
  6079  1ED6  07C9               	addwf	xtoa@w,f
  6080  1ED7  30FF               	movlw	255
  6081  1ED8  3DCA               	addwfc	xtoa@w+1,f
  6082  1ED9                     l7507:	
  6083                           
  6084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6085  1ED9  0020               	movlb	0	; select bank0
  6086  1EDA  0832               	movf	xtoa@d,w
  6087  1EDB  00CB               	movwf	xtoa@n
  6088  1EDC  0833               	movf	xtoa@d+1,w
  6089  1EDD  00CC               	movwf	xtoa@n+1
  6090  1EDE  0834               	movf	xtoa@d+2,w
  6091  1EDF  00CD               	movwf	xtoa@n+2
  6092  1EE0  0835               	movf	xtoa@d+3,w
  6093  1EE1  00CE               	movwf	xtoa@n+3
  6094  1EE2  0836               	movf	xtoa@d+4,w
  6095  1EE3  00CF               	movwf	xtoa@n+4
  6096  1EE4  0837               	movf	xtoa@d+5,w
  6097  1EE5  00D0               	movwf	xtoa@n+5
  6098  1EE6  0838               	movf	xtoa@d+6,w
  6099  1EE7  00D1               	movwf	xtoa@n+6
  6100  1EE8  0839               	movf	xtoa@d+7,w
  6101  1EE9  00D2               	movwf	xtoa@n+7
  6102                           
  6103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6104  1EEA  304F               	movlw	79
  6105  1EEB  00D3               	movwf	xtoa@i
  6106  1EEC  3000               	movlw	0
  6107  1EED  00D4               	movwf	xtoa@i+1
  6108                           
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6110  1EEE  0024               	movlb	4	; select bank4
  6111  1EEF  01EF               	clrf	(_dbuf^(0+512)+79)
  6112                           
  6113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6114  1EF0  2F9B               	goto	l7539
  6115  1EF1                     l7511:	
  6116                           
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6118  1EF1  30FF               	movlw	255
  6119  1EF2  0020               	movlb	0	; select bank0
  6120  1EF3  07D3               	addwf	xtoa@i,f
  6121  1EF4  30FF               	movlw	255
  6122  1EF5  3DD4               	addwfc	xtoa@i+1,f
  6123                           
  6124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6125  1EF6  300F               	movlw	15
  6126  1EF7  054B               	andwf	xtoa@n,w
  6127  1EF8  00D5               	movwf	xtoa@c
  6128  1EF9  3000               	movlw	0
  6129  1EFA  054C               	andwf	xtoa@n+1,w
  6130  1EFB  00D6               	movwf	xtoa@c+1
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6133  1EFC  0856               	movf	xtoa@c+1,w
  6134  1EFD  3A80               	xorlw	128
  6135  1EFE  00BB               	movwf	??_xtoa
  6136  1EFF  3080               	movlw	128
  6137  1F00  023B               	subwf	??_xtoa,w
  6138  1F01  1D03               	skipz
  6139  1F02  2F05               	goto	u10995
  6140  1F03  300A               	movlw	10
  6141  1F04  0255               	subwf	xtoa@c,w
  6142  1F05                     u10995:	
  6143  1F05  1C03               	skipc
  6144  1F06  2F0B               	goto	l7515
  6145  1F07  0020               	movlb	0	; select bank0
  6146  1F08  0855               	movf	xtoa@c,w
  6147  1F09  3E57               	addlw	87
  6148  1F0A  2F0E               	goto	L2
  6149  1F0B                     l7515:	
  6150  1F0B  0020               	movlb	0	; select bank0
  6151  1F0C  0855               	movf	xtoa@c,w
  6152  1F0D  3E30               	addlw	48
  6153  1F0E                     L2:	
  6154  1F0E  00D5               	movwf	xtoa@c
  6155  1F0F  3000               	movlw	0
  6156  1F10  3D56               	addwfc	xtoa@c+1,w
  6157  1F11  00D6               	movwf	xtoa@c+1
  6158  1F12  083A               	movf	xtoa@x,w
  6159  1F13  3EBF               	addlw	191
  6160  1F14  00BB               	movwf	??_xtoa
  6161  1F15  30FF               	movlw	255
  6162  1F16  1803               	skipnc
  6163  1F17  3000               	movlw	0
  6164  1F18  00BC               	movwf	??_xtoa+1
  6165  1F19  3000               	movlw	0
  6166  1F1A  023C               	subwf	??_xtoa+1,w
  6167  1F1B  301A               	movlw	26
  6168  1F1C  1903               	skipnz
  6169  1F1D  023B               	subwf	??_xtoa,w
  6170  1F1E  1803               	btfsc	3,0
  6171  1F1F  2F22               	goto	u11000
  6172  1F20  3001               	movlw	1
  6173  1F21  2F23               	goto	u11010
  6174  1F22                     u11000:	
  6175  1F22  3000               	movlw	0
  6176  1F23                     u11010:	
  6177  1F23  00BD               	movwf	??_xtoa+2
  6178  1F24  01BE               	clrf	??_xtoa+3
  6179  1F25  083D               	movf	??_xtoa+2,w
  6180  1F26  00C3               	movwf	_xtoa$1063
  6181  1F27  083E               	movf	??_xtoa+3,w
  6182  1F28  00C4               	movwf	_xtoa$1063+1
  6183  1F29  0843               	movf	_xtoa$1063,w
  6184  1F2A  0444               	iorwf	_xtoa$1063+1,w
  6185  1F2B  1903               	btfsc	3,2
  6186  1F2C  2F59               	goto	l7531
  6187  1F2D  3020               	movlw	32
  6188  1F2E  0455               	iorwf	xtoa@c,w
  6189  1F2F  00BB               	movwf	??_xtoa
  6190  1F30  3000               	movlw	0
  6191  1F31  0456               	iorwf	xtoa@c+1,w
  6192  1F32  00BC               	movwf	??_xtoa+1
  6193  1F33  083B               	movf	??_xtoa,w
  6194  1F34  3E9F               	addlw	159
  6195  1F35  00BD               	movwf	??_xtoa+2
  6196  1F36  30FF               	movlw	255
  6197  1F37  3D3C               	addwfc	??_xtoa+1,w
  6198  1F38  00BE               	movwf	??_xtoa+3
  6199  1F39  3000               	movlw	0
  6200  1F3A  023E               	subwf	??_xtoa+3,w
  6201  1F3B  301A               	movlw	26
  6202  1F3C  1903               	skipnz
  6203  1F3D  023D               	subwf	??_xtoa+2,w
  6204  1F3E  1803               	btfsc	3,0
  6205  1F3F  2F42               	goto	u11030
  6206  1F40  3001               	movlw	1
  6207  1F41  2F43               	goto	u11040
  6208  1F42                     u11030:	
  6209  1F42  3000               	movlw	0
  6210  1F43                     u11040:	
  6211  1F43  00BF               	movwf	??_xtoa+4
  6212  1F44  01C0               	clrf	??_xtoa+5
  6213  1F45  083F               	movf	??_xtoa+4,w
  6214  1F46  00C5               	movwf	_xtoa$1064
  6215  1F47  0840               	movf	??_xtoa+5,w
  6216  1F48  00C6               	movwf	_xtoa$1064+1
  6217  1F49  0845               	movf	_xtoa$1064,w
  6218  1F4A  0446               	iorwf	_xtoa$1064+1,w
  6219  1F4B  1903               	btfsc	3,2
  6220  1F4C  2F59               	goto	l7531
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6223  1F4D  0856               	movf	xtoa@c+1,w
  6224  1F4E  00F8               	movwf	toupper@c+1
  6225  1F4F  0855               	movf	xtoa@c,w
  6226  1F50  00F7               	movwf	toupper@c
  6227  1F51  31B6  26F4  319E   	fcall	_toupper
  6228  1F54  0878               	movf	?_toupper+1,w
  6229  1F55  0020               	movlb	0	; select bank0
  6230  1F56  00D6               	movwf	xtoa@c+1
  6231  1F57  0877               	movf	?_toupper,w
  6232  1F58  00D5               	movwf	xtoa@c
  6233  1F59                     l7531:	
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6236  1F59  0855               	movf	xtoa@c,w
  6237  1F5A  00BB               	movwf	??_xtoa
  6238  1F5B  0853               	movf	xtoa@i,w
  6239  1F5C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6240  1F5D  0086               	movwf	6
  6241  1F5E  3002               	movlw	2	; select bank4/5
  6242  1F5F  0087               	movwf	7
  6243  1F60  083B               	movf	??_xtoa,w
  6244  1F61  0081               	movwf	1
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6247  1F62  30FF               	movlw	255
  6248  1F63  07C7               	addwf	xtoa@p,f
  6249  1F64  30FF               	movlw	255
  6250  1F65  3DC8               	addwfc	xtoa@p+1,f
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6253  1F66  30FF               	movlw	255
  6254  1F67  07C9               	addwf	xtoa@w,f
  6255  1F68  30FF               	movlw	255
  6256  1F69  3DCA               	addwfc	xtoa@w+1,f
  6257                           
  6258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6259  1F6A  304B               	movlw	low xtoa@n
  6260  1F6B  0086               	movwf	6
  6261  1F6C  3000               	movlw	high xtoa@n
  6262  1F6D  0087               	movwf	7
  6263  1F6E  3F40               	moviw [0]fsr1
  6264  1F6F  00BB               	movwf	??_xtoa
  6265  1F70  3F41               	moviw [1]fsr1
  6266  1F71  00BC               	movwf	??_xtoa+1
  6267  1F72  3F42               	moviw [2]fsr1
  6268  1F73  00BD               	movwf	??_xtoa+2
  6269  1F74  3F43               	moviw [3]fsr1
  6270  1F75  00BE               	movwf	??_xtoa+3
  6271  1F76  3F44               	moviw [4]fsr1
  6272  1F77  00BF               	movwf	??_xtoa+4
  6273  1F78  3F45               	moviw [5]fsr1
  6274  1F79  00C0               	movwf	??_xtoa+5
  6275  1F7A  3F46               	moviw [6]fsr1
  6276  1F7B  00C1               	movwf	??_xtoa+6
  6277  1F7C  3F47               	moviw [7]fsr1
  6278  1F7D  00C2               	movwf	??_xtoa+7
  6279  1F7E  3004               	movlw	4
  6280  1F7F                     u11065:	
  6281  1F7F  0020               	movlb	0	; select bank0
  6282  1F80  36C2               	lsrf	??_xtoa+7,f
  6283  1F81  0CC1               	rrf	??_xtoa+6,f
  6284  1F82  0CC0               	rrf	??_xtoa+5,f
  6285  1F83  0CBF               	rrf	??_xtoa+4,f
  6286  1F84  0CBE               	rrf	??_xtoa+3,f
  6287  1F85  0CBD               	rrf	??_xtoa+2,f
  6288  1F86  0CBC               	rrf	??_xtoa+1,f
  6289  1F87  0CBB               	rrf	??_xtoa,f
  6290  1F88  0B89               	decfsz	9,f
  6291  1F89  2F7F               	goto	u11065
  6292  1F8A  0020               	movlb	0	; select bank0
  6293  1F8B  0842               	movf	??_xtoa+7,w
  6294  1F8C  00D2               	movwf	xtoa@n+7
  6295  1F8D  0841               	movf	??_xtoa+6,w
  6296  1F8E  00D1               	movwf	xtoa@n+6
  6297  1F8F  0840               	movf	??_xtoa+5,w
  6298  1F90  00D0               	movwf	xtoa@n+5
  6299  1F91  083F               	movf	??_xtoa+4,w
  6300  1F92  00CF               	movwf	xtoa@n+4
  6301  1F93  083E               	movf	??_xtoa+3,w
  6302  1F94  00CE               	movwf	xtoa@n+3
  6303  1F95  083D               	movf	??_xtoa+2,w
  6304  1F96  00CD               	movwf	xtoa@n+2
  6305  1F97  083C               	movf	??_xtoa+1,w
  6306  1F98  00CC               	movwf	xtoa@n+1
  6307  1F99  083B               	movf	??_xtoa,w
  6308  1F9A  00CB               	movwf	xtoa@n
  6309  1F9B                     l7539:	
  6310                           
  6311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6312  1F9B  0020               	movlb	0	; select bank0
  6313  1F9C  0854               	movf	xtoa@i+1,w
  6314  1F9D  3A80               	xorlw	128
  6315  1F9E  00BB               	movwf	??_xtoa
  6316  1F9F  3080               	movlw	128
  6317  1FA0  023B               	subwf	??_xtoa,w
  6318  1FA1  1D03               	skipz
  6319  1FA2  2FA5               	goto	u11075
  6320  1FA3  3002               	movlw	2
  6321  1FA4  0253               	subwf	xtoa@i,w
  6322  1FA5                     u11075:	
  6323  1FA5  1C03               	skipc
  6324  1FA6  2FCC               	goto	l734
  6325  1FA7  0020               	movlb	0	; select bank0
  6326  1FA8  084B               	movf	xtoa@n,w
  6327  1FA9  044C               	iorwf	xtoa@n+1,w
  6328  1FAA  044D               	iorwf	xtoa@n+2,w
  6329  1FAB  044E               	iorwf	xtoa@n+3,w
  6330  1FAC  044F               	iorwf	xtoa@n+4,w
  6331  1FAD  0450               	iorwf	xtoa@n+5,w
  6332  1FAE  0451               	iorwf	xtoa@n+6,w
  6333  1FAF  0452               	iorwf	xtoa@n+7,w
  6334  1FB0  1D03               	skipz
  6335  1FB1  2EF1               	goto	l7511
  6336  1FB2  0848               	movf	xtoa@p+1,w
  6337  1FB3  3A80               	xorlw	128
  6338  1FB4  00BB               	movwf	??_xtoa
  6339  1FB5  3080               	movlw	128
  6340  1FB6  023B               	subwf	??_xtoa,w
  6341  1FB7  1D03               	skipz
  6342  1FB8  2FBB               	goto	u11095
  6343  1FB9  3001               	movlw	1
  6344  1FBA  0247               	subwf	xtoa@p,w
  6345  1FBB                     u11095:	
  6346  1FBB  1803               	skipnc
  6347  1FBC  2EF1               	goto	l7511
  6348  1FBD  0020               	movlb	0	; select bank0
  6349  1FBE  084A               	movf	xtoa@w+1,w
  6350  1FBF  3A80               	xorlw	128
  6351  1FC0  00BB               	movwf	??_xtoa
  6352  1FC1  3080               	movlw	128
  6353  1FC2  023B               	subwf	??_xtoa,w
  6354  1FC3  1D03               	skipz
  6355  1FC4  2FC7               	goto	u11105
  6356  1FC5  3001               	movlw	1
  6357  1FC6  0249               	subwf	xtoa@w,w
  6358  1FC7                     u11105:	
  6359  1FC7  1C03               	skipc
  6360  1FC8  2FCC               	goto	l734
  6361  1FC9  0023               	movlb	3	; select bank3
  6362  1FCA  18C2               	btfsc	_flags^(0+384),1
  6363  1FCB  2EF1               	goto	l7511
  6364  1FCC                     l734:	
  6365                           
  6366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6367  1FCC  0023               	movlb	3	; select bank3
  6368  1FCD  1E42               	btfss	_flags^(0+384),4
  6369  1FCE  2FEA               	goto	l7555
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6372  1FCF  30FF               	movlw	255
  6373  1FD0  0020               	movlb	0	; select bank0
  6374  1FD1  07D3               	addwf	xtoa@i,f
  6375  1FD2  30FF               	movlw	255
  6376  1FD3  3DD4               	addwfc	xtoa@i+1,f
  6377                           
  6378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6379  1FD4  083A               	movf	xtoa@x,w
  6380  1FD5  00BB               	movwf	??_xtoa
  6381  1FD6  0853               	movf	xtoa@i,w
  6382  1FD7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6383  1FD8  0086               	movwf	6
  6384  1FD9  3002               	movlw	2	; select bank4/5
  6385  1FDA  0087               	movwf	7
  6386  1FDB  083B               	movf	??_xtoa,w
  6387  1FDC  0081               	movwf	1
  6388                           
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6390  1FDD  30FF               	movlw	255
  6391  1FDE  07D3               	addwf	xtoa@i,f
  6392  1FDF  30FF               	movlw	255
  6393  1FE0  3DD4               	addwfc	xtoa@i+1,f
  6394                           
  6395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6396  1FE1  3030               	movlw	48
  6397  1FE2  00BB               	movwf	??_xtoa
  6398  1FE3  0853               	movf	xtoa@i,w
  6399  1FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6400  1FE5  0086               	movwf	6
  6401  1FE6  3002               	movlw	2	; select bank4/5
  6402  1FE7  0087               	movwf	7
  6403  1FE8  083B               	movf	??_xtoa,w
  6404  1FE9  0081               	movwf	1
  6405  1FEA                     l7555:	
  6406                           
  6407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6408  1FEA  0020               	movlb	0	; select bank0
  6409  1FEB  0831               	movf	xtoa@fp+1,w
  6410  1FEC  00A7               	movwf	pad@fp+1
  6411  1FED  0830               	movf	xtoa@fp,w
  6412  1FEE  00A6               	movwf	pad@fp
  6413  1FEF  0853               	movf	xtoa@i,w
  6414  1FF0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6415  1FF1  00BB               	movwf	??_xtoa
  6416  1FF2  083B               	movf	??_xtoa,w
  6417  1FF3  00A8               	movwf	pad@buf
  6418  1FF4  084A               	movf	xtoa@w+1,w
  6419  1FF5  00AA               	movwf	pad@p+1
  6420  1FF6  0849               	movf	xtoa@w,w
  6421  1FF7  00A9               	movwf	pad@p
  6422  1FF8  31A9  218C         	fcall	_pad
  6423  1FFA  0020               	movlb	0	; select bank0
  6424  1FFB  0827               	movf	?_pad+1,w
  6425  1FFC  00B1               	movwf	?_xtoa+1
  6426  1FFD  0826               	movf	?_pad,w
  6427  1FFE  00B0               	movwf	?_xtoa
  6428  1FFF  0008               	return
  6429  2000                     __end_of_xtoa:	
  6430                           
  6431                           	psect	text7
  6432  36F4                     __ptext7:	
  6433 ;; *************** function _toupper *****************
  6434 ;; Defined at:
  6435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  c               2    7[COMMON] int 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  2    7[COMMON] int 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6452 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        8 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		_islower
  6458 ;; This function is called by:
  6459 ;;		_xtoa
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _toupper
  6465  36F4                     _toupper:	
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6469  36F4  0877               	movf	toupper@c,w
  6470  36F5  3E9F               	addlw	159
  6471  36F6  0020               	movlb	0	; select bank0
  6472  36F7  00A0               	movwf	??_toupper
  6473  36F8  30FF               	movlw	255
  6474  36F9  3D78               	addwfc	toupper@c+1,w
  6475  36FA  00A1               	movwf	??_toupper+1
  6476  36FB  3000               	movlw	0
  6477  36FC  0221               	subwf	??_toupper+1,w
  6478  36FD  301A               	movlw	26
  6479  36FE  1903               	skipnz
  6480  36FF  0220               	subwf	??_toupper,w
  6481  3700  1803               	btfsc	3,0
  6482  3701  2F04               	goto	u9950
  6483  3702  3001               	movlw	1
  6484  3703  2F05               	goto	u9960
  6485  3704                     u9950:	
  6486  3704  3000               	movlw	0
  6487  3705                     u9960:	
  6488  3705  00A2               	movwf	??_toupper+2
  6489  3706  01A3               	clrf	??_toupper+3
  6490  3707  0822               	movf	??_toupper+2,w
  6491  3708  00F9               	movwf	_toupper$1670
  6492  3709  0823               	movf	??_toupper+3,w
  6493  370A  00FA               	movwf	_toupper$1670+1
  6494  370B  0879               	movf	_toupper$1670,w
  6495  370C  047A               	iorwf	_toupper$1670+1,w
  6496  370D  1903               	btfsc	3,2
  6497  370E  0008               	return
  6498  370F  305F               	movlw	95
  6499  3710  0577               	andwf	toupper@c,w
  6500  3711  00F7               	movwf	?_toupper
  6501  3712  3000               	movlw	0
  6502  3713  0578               	andwf	toupper@c+1,w
  6503  3714  00F8               	movwf	?_toupper+1
  6504  3715  0008               	return
  6505  3716                     __end_of_toupper:	
  6506                           
  6507                           	psect	text8
  6508  35A9                     __ptext8:	
  6509 ;; *************** function _islower *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  c               2    1[COMMON] int 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    1[COMMON] int 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6529 ;;Total ram usage:        6 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_toupper
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function _islower
  6541  35A9                     _islower:	
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _islower: [wreg+status,2+status,0]
  6545  35A9  0871               	movf	islower@c,w
  6546  35AA  3E9F               	addlw	159
  6547  35AB  00F3               	movwf	??_islower
  6548  35AC  30FF               	movlw	255
  6549  35AD  3D72               	addwfc	islower@c+1,w
  6550  35AE  00F4               	movwf	??_islower+1
  6551  35AF  3000               	movlw	0
  6552  35B0  0274               	subwf	??_islower+1,w
  6553  35B1  301A               	movlw	26
  6554  35B2  1903               	skipnz
  6555  35B3  0273               	subwf	??_islower,w
  6556  35B4  1803               	btfsc	3,0
  6557  35B5  2DB8               	goto	u9860
  6558  35B6  3001               	movlw	1
  6559  35B7  2DB9               	goto	u9870
  6560  35B8                     u9860:	
  6561  35B8  3000               	movlw	0
  6562  35B9                     u9870:	
  6563  35B9  00F5               	movwf	??_islower+2
  6564  35BA  01F6               	clrf	??_islower+3
  6565  35BB  0875               	movf	??_islower+2,w
  6566  35BC  00F1               	movwf	?_islower
  6567  35BD  0876               	movf	??_islower+3,w
  6568  35BE  00F2               	movwf	?_islower+1
  6569  35BF  0008               	return
  6570  35C0                     __end_of_islower:	
  6571                           
  6572                           	psect	text9
  6573  35F7                     __ptext9:	
  6574 ;; *************** function _isalpha *****************
  6575 ;; Defined at:
  6576 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  c               2    1[COMMON] int 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  2    1[COMMON] int 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6592 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6593 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6594 ;;Total ram usage:        8 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    1
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_xtoa
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function _isalpha
  6606  35F7                     _isalpha:	
  6607                           
  6608                           ;incstack = 0
  6609                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6610  35F7  3020               	movlw	32
  6611  35F8  0471               	iorwf	isalpha@c,w
  6612  35F9  00F3               	movwf	??_isalpha
  6613  35FA  3000               	movlw	0
  6614  35FB  0472               	iorwf	isalpha@c+1,w
  6615  35FC  00F4               	movwf	??_isalpha+1
  6616  35FD  0873               	movf	??_isalpha,w
  6617  35FE  3E9F               	addlw	159
  6618  35FF  00F5               	movwf	??_isalpha+2
  6619  3600  30FF               	movlw	255
  6620  3601  3D74               	addwfc	??_isalpha+1,w
  6621  3602  00F6               	movwf	??_isalpha+3
  6622  3603  3000               	movlw	0
  6623  3604  0276               	subwf	??_isalpha+3,w
  6624  3605  301A               	movlw	26
  6625  3606  1903               	skipnz
  6626  3607  0275               	subwf	??_isalpha+2,w
  6627  3608  1803               	btfsc	3,0
  6628  3609  2E0C               	goto	u5570
  6629  360A  3001               	movlw	1
  6630  360B  2E0D               	goto	u5580
  6631  360C                     u5570:	
  6632  360C  3000               	movlw	0
  6633  360D                     u5580:	
  6634  360D  00F7               	movwf	??_isalpha+4
  6635  360E  01F8               	clrf	??_isalpha+5
  6636  360F  0877               	movf	??_isalpha+4,w
  6637  3610  00F1               	movwf	?_isalpha
  6638  3611  0878               	movf	??_isalpha+5,w
  6639  3612  00F2               	movwf	?_isalpha+1
  6640  3613  0008               	return
  6641  3614                     __end_of_isalpha:	
  6642                           
  6643                           	psect	text10
  6644  2639                     __ptext10:	
  6645 ;; *************** function _utoa *****************
  6646 ;; Defined at:
  6647 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6650 ;;		 -> vsnprintf@f(6), 
  6651 ;;  d               8   18[BANK0 ] unsigned long long 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  n               8   31[BANK0 ] unsigned long long 
  6654 ;;  i               2   39[BANK0 ] int 
  6655 ;;  w               2   29[BANK0 ] int 
  6656 ;;  p               2   27[BANK0 ] int 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  2   16[BANK0 ] int 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6666 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6667 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6669 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6670 ;;Total ram usage:       25 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    5
  6673 ;; This function calls:
  6674 ;;		___lodiv
  6675 ;;		___lomod
  6676 ;;		_pad
  6677 ;; This function is called by:
  6678 ;;		_vfpfcnvrt
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _utoa
  6684  2639                     _utoa:	
  6685                           
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6687                           
  6688                           ;incstack = 0
  6689                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6690  2639  0023               	movlb	3	; select bank3
  6691  263A  1BC1               	btfsc	(_prec+1)^(0+384),7
  6692  263B  2E40               	goto	l694
  6693                           
  6694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6695  263C  30FD               	movlw	253
  6696  263D  05C2               	andwf	_flags^(0+384),f
  6697  263E  30FF               	movlw	255
  6698  263F  05C3               	andwf	(_flags+1)^(0+384),f
  6699  2640                     l694:	
  6700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  6701                           
  6702                           
  6703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6704  2640  0841               	movf	(_prec+1)^(0+384),w
  6705  2641  3A80               	xorlw	128
  6706  2642  0020               	movlb	0	; select bank0
  6707  2643  00BA               	movwf	??_utoa
  6708  2644  3080               	movlw	128
  6709  2645  023A               	subwf	??_utoa,w
  6710  2646  1D03               	skipz
  6711  2647  2E4B               	goto	u10905
  6712  2648  3001               	movlw	1
  6713  2649  0023               	movlb	3	; select bank3
  6714  264A  0240               	subwf	_prec^(0+384),w
  6715  264B                     u10905:	
  6716  264B  1803               	skipnc
  6717  264C  2E53               	goto	l7465
  6718  264D  3001               	movlw	1
  6719  264E  0020               	movlb	0	; select bank0
  6720  264F  00BB               	movwf	utoa@p
  6721  2650  3000               	movlw	0
  6722  2651  00BC               	movwf	utoa@p+1
  6723  2652  2E5B               	goto	l698
  6724  2653                     l7465:	
  6725  2653  0023               	movlb	3	; select bank3
  6726  2654  0841               	movf	(_prec+1)^(0+384),w
  6727  2655  0020               	movlb	0	; select bank0
  6728  2656  00BC               	movwf	utoa@p+1
  6729  2657  0023               	movlb	3	; select bank3
  6730  2658  0840               	movf	_prec^(0+384),w
  6731  2659  0020               	movlb	0	; select bank0
  6732  265A  00BB               	movwf	utoa@p
  6733  265B                     l698:	
  6734                           
  6735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6736  265B  0023               	movlb	3	; select bank3
  6737  265C  083F               	movf	(_width+1)^(0+384),w
  6738  265D  0020               	movlb	0	; select bank0
  6739  265E  00BE               	movwf	utoa@w+1
  6740  265F  0023               	movlb	3	; select bank3
  6741  2660  083E               	movf	_width^(0+384),w
  6742  2661  0020               	movlb	0	; select bank0
  6743  2662  00BD               	movwf	utoa@w
  6744                           
  6745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6746  2663  0832               	movf	utoa@d,w
  6747  2664  00BF               	movwf	utoa@n
  6748  2665  0833               	movf	utoa@d+1,w
  6749  2666  00C0               	movwf	utoa@n+1
  6750  2667  0834               	movf	utoa@d+2,w
  6751  2668  00C1               	movwf	utoa@n+2
  6752  2669  0835               	movf	utoa@d+3,w
  6753  266A  00C2               	movwf	utoa@n+3
  6754  266B  0836               	movf	utoa@d+4,w
  6755  266C  00C3               	movwf	utoa@n+4
  6756  266D  0837               	movf	utoa@d+5,w
  6757  266E  00C4               	movwf	utoa@n+5
  6758  266F  0838               	movf	utoa@d+6,w
  6759  2670  00C5               	movwf	utoa@n+6
  6760  2671  0839               	movf	utoa@d+7,w
  6761  2672  00C6               	movwf	utoa@n+7
  6762                           
  6763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6764  2673  304F               	movlw	79
  6765  2674  00C7               	movwf	utoa@i
  6766  2675  3000               	movlw	0
  6767  2676  00C8               	movwf	utoa@i+1
  6768                           
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6770  2677  0024               	movlb	4	; select bank4
  6771  2678  01EF               	clrf	(_dbuf^(0+512)+79)
  6772                           
  6773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6774  2679  2EFF               	goto	l7481
  6775  267A                     l7483:	
  6776  267A  083F               	movf	utoa@n,w
  6777  267B  0440               	iorwf	utoa@n+1,w
  6778  267C  0441               	iorwf	utoa@n+2,w
  6779  267D  0442               	iorwf	utoa@n+3,w
  6780  267E  0443               	iorwf	utoa@n+4,w
  6781  267F  0444               	iorwf	utoa@n+5,w
  6782  2680  0445               	iorwf	utoa@n+6,w
  6783  2681  0446               	iorwf	utoa@n+7,w
  6784  2682  1D03               	skipz
  6785  2683  2E9E               	goto	l7471
  6786  2684  083C               	movf	utoa@p+1,w
  6787  2685  3A80               	xorlw	128
  6788  2686  00BA               	movwf	??_utoa
  6789  2687  3080               	movlw	128
  6790  2688  023A               	subwf	??_utoa,w
  6791  2689  1D03               	skipz
  6792  268A  2E8D               	goto	u10935
  6793  268B  3001               	movlw	1
  6794  268C  023B               	subwf	utoa@p,w
  6795  268D                     u10935:	
  6796  268D  1803               	skipnc
  6797  268E  2E9E               	goto	l7471
  6798  268F  0020               	movlb	0	; select bank0
  6799  2690  083E               	movf	utoa@w+1,w
  6800  2691  3A80               	xorlw	128
  6801  2692  00BA               	movwf	??_utoa
  6802  2693  3080               	movlw	128
  6803  2694  023A               	subwf	??_utoa,w
  6804  2695  1D03               	skipz
  6805  2696  2E99               	goto	u10945
  6806  2697  3001               	movlw	1
  6807  2698  023D               	subwf	utoa@w,w
  6808  2699                     u10945:	
  6809  2699  1C03               	skipc
  6810  269A  2F04               	goto	l7491
  6811  269B  0023               	movlb	3	; select bank3
  6812  269C  1CC2               	btfss	_flags^(0+384),1
  6813  269D  2F04               	goto	l7491
  6814  269E                     l7471:	
  6815                           
  6816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6817  269E  30FF               	movlw	255
  6818  269F  0020               	movlb	0	; select bank0
  6819  26A0  07C7               	addwf	utoa@i,f
  6820  26A1  30FF               	movlw	255
  6821  26A2  3DC8               	addwfc	utoa@i+1,f
  6822                           
  6823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6824  26A3  300A               	movlw	10
  6825  26A4  00A0               	movwf	___lomod@divisor
  6826  26A5  01A1               	clrf	___lomod@divisor+1
  6827  26A6  01A2               	clrf	___lomod@divisor+2
  6828  26A7  01A3               	clrf	___lomod@divisor+3
  6829  26A8  01A4               	clrf	___lomod@divisor+4
  6830  26A9  01A5               	clrf	___lomod@divisor+5
  6831  26AA  01A6               	clrf	___lomod@divisor+6
  6832  26AB  01A7               	clrf	___lomod@divisor+7
  6833  26AC  083F               	movf	utoa@n,w
  6834  26AD  00A8               	movwf	___lomod@dividend
  6835  26AE  0840               	movf	utoa@n+1,w
  6836  26AF  00A9               	movwf	___lomod@dividend+1
  6837  26B0  0841               	movf	utoa@n+2,w
  6838  26B1  00AA               	movwf	___lomod@dividend+2
  6839  26B2  0842               	movf	utoa@n+3,w
  6840  26B3  00AB               	movwf	___lomod@dividend+3
  6841  26B4  0843               	movf	utoa@n+4,w
  6842  26B5  00AC               	movwf	___lomod@dividend+4
  6843  26B6  0844               	movf	utoa@n+5,w
  6844  26B7  00AD               	movwf	___lomod@dividend+5
  6845  26B8  0845               	movf	utoa@n+6,w
  6846  26B9  00AE               	movwf	___lomod@dividend+6
  6847  26BA  0846               	movf	utoa@n+7,w
  6848  26BB  00AF               	movwf	___lomod@dividend+7
  6849  26BC  31AA  22E6  31A6   	fcall	___lomod
  6850  26BF  0020               	movlb	0	; select bank0
  6851  26C0  0820               	movf	?___lomod,w
  6852  26C1  3E30               	addlw	48
  6853  26C2  00BA               	movwf	??_utoa
  6854  26C3  0847               	movf	utoa@i,w
  6855  26C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6856  26C5  0086               	movwf	6
  6857  26C6  3002               	movlw	2	; select bank4/5
  6858  26C7  0087               	movwf	7
  6859  26C8  083A               	movf	??_utoa,w
  6860  26C9  0081               	movwf	1
  6861                           
  6862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6863  26CA  30FF               	movlw	255
  6864  26CB  07BB               	addwf	utoa@p,f
  6865  26CC  30FF               	movlw	255
  6866  26CD  3DBC               	addwfc	utoa@p+1,f
  6867                           
  6868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6869  26CE  30FF               	movlw	255
  6870  26CF  07BD               	addwf	utoa@w,f
  6871  26D0  30FF               	movlw	255
  6872  26D1  3DBE               	addwfc	utoa@w+1,f
  6873                           
  6874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6875  26D2  300A               	movlw	10
  6876  26D3  00A0               	movwf	___lodiv@divisor
  6877  26D4  01A1               	clrf	___lodiv@divisor+1
  6878  26D5  01A2               	clrf	___lodiv@divisor+2
  6879  26D6  01A3               	clrf	___lodiv@divisor+3
  6880  26D7  01A4               	clrf	___lodiv@divisor+4
  6881  26D8  01A5               	clrf	___lodiv@divisor+5
  6882  26D9  01A6               	clrf	___lodiv@divisor+6
  6883  26DA  01A7               	clrf	___lodiv@divisor+7
  6884  26DB  083F               	movf	utoa@n,w
  6885  26DC  00A8               	movwf	___lodiv@dividend
  6886  26DD  0840               	movf	utoa@n+1,w
  6887  26DE  00A9               	movwf	___lodiv@dividend+1
  6888  26DF  0841               	movf	utoa@n+2,w
  6889  26E0  00AA               	movwf	___lodiv@dividend+2
  6890  26E1  0842               	movf	utoa@n+3,w
  6891  26E2  00AB               	movwf	___lodiv@dividend+3
  6892  26E3  0843               	movf	utoa@n+4,w
  6893  26E4  00AC               	movwf	___lodiv@dividend+4
  6894  26E5  0844               	movf	utoa@n+5,w
  6895  26E6  00AD               	movwf	___lodiv@dividend+5
  6896  26E7  0845               	movf	utoa@n+6,w
  6897  26E8  00AE               	movwf	___lodiv@dividend+6
  6898  26E9  0846               	movf	utoa@n+7,w
  6899  26EA  00AF               	movwf	___lodiv@dividend+7
  6900  26EB  31AC  2443  31A6   	fcall	___lodiv
  6901  26EE  0020               	movlb	0	; select bank0
  6902  26EF  0820               	movf	?___lodiv,w
  6903  26F0  00BF               	movwf	utoa@n
  6904  26F1  0821               	movf	?___lodiv+1,w
  6905  26F2  00C0               	movwf	utoa@n+1
  6906  26F3  0822               	movf	?___lodiv+2,w
  6907  26F4  00C1               	movwf	utoa@n+2
  6908  26F5  0823               	movf	?___lodiv+3,w
  6909  26F6  00C2               	movwf	utoa@n+3
  6910  26F7  0824               	movf	?___lodiv+4,w
  6911  26F8  00C3               	movwf	utoa@n+4
  6912  26F9  0825               	movf	?___lodiv+5,w
  6913  26FA  00C4               	movwf	utoa@n+5
  6914  26FB  0826               	movf	?___lodiv+6,w
  6915  26FC  00C5               	movwf	utoa@n+6
  6916  26FD  0827               	movf	?___lodiv+7,w
  6917  26FE  00C6               	movwf	utoa@n+7
  6918  26FF                     l7481:	
  6919                           
  6920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6921  26FF  0020               	movlb	0	; select bank0
  6922  2700  0847               	movf	utoa@i,w
  6923  2701  0448               	iorwf	utoa@i+1,w
  6924  2702  1D03               	btfss	3,2
  6925  2703  2E7A               	goto	l7483
  6926  2704                     l7491:	
  6927                           
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6929  2704  0020               	movlb	0	; select bank0
  6930  2705  0831               	movf	utoa@fp+1,w
  6931  2706  00A7               	movwf	pad@fp+1
  6932  2707  0830               	movf	utoa@fp,w
  6933  2708  00A6               	movwf	pad@fp
  6934  2709  0847               	movf	utoa@i,w
  6935  270A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6936  270B  00BA               	movwf	??_utoa
  6937  270C  083A               	movf	??_utoa,w
  6938  270D  00A8               	movwf	pad@buf
  6939  270E  083E               	movf	utoa@w+1,w
  6940  270F  00AA               	movwf	pad@p+1
  6941  2710  083D               	movf	utoa@w,w
  6942  2711  00A9               	movwf	pad@p
  6943  2712  31A9  218C         	fcall	_pad
  6944  2714  0020               	movlb	0	; select bank0
  6945  2715  0827               	movf	?_pad+1,w
  6946  2716  00B1               	movwf	?_utoa+1
  6947  2717  0826               	movf	?_pad,w
  6948  2718  00B0               	movwf	?_utoa
  6949  2719  0008               	return
  6950  271A                     __end_of_utoa:	
  6951                           
  6952                           	psect	text11
  6953  2AE6                     __ptext11:	
  6954 ;; *************** function ___lomod *****************
  6955 ;; Defined at:
  6956 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6959 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  counter         1    2[COMMON] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  8    0[BANK0 ] unsigned long long 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6971 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6974 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6975 ;;Total ram usage:       18 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    1
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_utoa
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function ___lomod
  6987  2AE6                     ___lomod:	
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6991  2AE6  0020               	movlb	0	; select bank0
  6992  2AE7  0820               	movf	___lomod@divisor,w
  6993  2AE8  0421               	iorwf	___lomod@divisor+1,w
  6994  2AE9  0422               	iorwf	___lomod@divisor+2,w
  6995  2AEA  0423               	iorwf	___lomod@divisor+3,w
  6996  2AEB  0424               	iorwf	___lomod@divisor+4,w
  6997  2AEC  0425               	iorwf	___lomod@divisor+5,w
  6998  2AED  0426               	iorwf	___lomod@divisor+6,w
  6999  2AEE  0427               	iorwf	___lomod@divisor+7,w
  7000  2AEF  1903               	skipnz
  7001  2AF0  2B3E               	goto	l1084
  7002  2AF1  01F2               	clrf	___lomod@counter
  7003  2AF2  0AF2               	incf	___lomod@counter,f
  7004  2AF3                     l4781:	
  7005  2AF3  1BA7               	btfsc	___lomod@divisor+7,7
  7006  2AF4  2B02               	goto	l4783
  7007  2AF5  35A0               	lslf	___lomod@divisor,f
  7008  2AF6  0DA1               	rlf	___lomod@divisor+1,f
  7009  2AF7  0DA2               	rlf	___lomod@divisor+2,f
  7010  2AF8  0DA3               	rlf	___lomod@divisor+3,f
  7011  2AF9  0DA4               	rlf	___lomod@divisor+4,f
  7012  2AFA  0DA5               	rlf	___lomod@divisor+5,f
  7013  2AFB  0DA6               	rlf	___lomod@divisor+6,f
  7014  2AFC  0DA7               	rlf	___lomod@divisor+7,f
  7015  2AFD  3001               	movlw	1
  7016  2AFE  00F1               	movwf	??___lomod
  7017  2AFF  0871               	movf	??___lomod,w
  7018  2B00  07F2               	addwf	___lomod@counter,f
  7019  2B01  2AF3               	goto	l4781
  7020  2B02                     l4783:	
  7021  2B02  0827               	movf	___lomod@divisor+7,w
  7022  2B03  022F               	subwf	___lomod@dividend+7,w
  7023  2B04  1D03               	skipz
  7024  2B05  2B20               	goto	u6345
  7025  2B06  0826               	movf	___lomod@divisor+6,w
  7026  2B07  022E               	subwf	___lomod@dividend+6,w
  7027  2B08  1D03               	skipz
  7028  2B09  2B20               	goto	u6345
  7029  2B0A  0825               	movf	___lomod@divisor+5,w
  7030  2B0B  022D               	subwf	___lomod@dividend+5,w
  7031  2B0C  1D03               	skipz
  7032  2B0D  2B20               	goto	u6345
  7033  2B0E  0824               	movf	___lomod@divisor+4,w
  7034  2B0F  022C               	subwf	___lomod@dividend+4,w
  7035  2B10  1D03               	skipz
  7036  2B11  2B20               	goto	u6345
  7037  2B12  0823               	movf	___lomod@divisor+3,w
  7038  2B13  022B               	subwf	___lomod@dividend+3,w
  7039  2B14  1D03               	skipz
  7040  2B15  2B20               	goto	u6345
  7041  2B16  0822               	movf	___lomod@divisor+2,w
  7042  2B17  022A               	subwf	___lomod@dividend+2,w
  7043  2B18  1D03               	skipz
  7044  2B19  2B20               	goto	u6345
  7045  2B1A  0821               	movf	___lomod@divisor+1,w
  7046  2B1B  0229               	subwf	___lomod@dividend+1,w
  7047  2B1C  1D03               	skipz
  7048  2B1D  2B20               	goto	u6345
  7049  2B1E  0820               	movf	___lomod@divisor,w
  7050  2B1F  0228               	subwf	___lomod@dividend,w
  7051  2B20                     u6345:	
  7052  2B20  1C03               	skipc
  7053  2B21  2B32               	goto	l4787
  7054  2B22  0820               	movf	___lomod@divisor,w
  7055  2B23  02A8               	subwf	___lomod@dividend,f
  7056  2B24  0821               	movf	___lomod@divisor+1,w
  7057  2B25  3BA9               	subwfb	___lomod@dividend+1,f
  7058  2B26  0822               	movf	___lomod@divisor+2,w
  7059  2B27  3BAA               	subwfb	___lomod@dividend+2,f
  7060  2B28  0823               	movf	___lomod@divisor+3,w
  7061  2B29  3BAB               	subwfb	___lomod@dividend+3,f
  7062  2B2A  0824               	movf	___lomod@divisor+4,w
  7063  2B2B  3BAC               	subwfb	___lomod@dividend+4,f
  7064  2B2C  0825               	movf	___lomod@divisor+5,w
  7065  2B2D  3BAD               	subwfb	___lomod@dividend+5,f
  7066  2B2E  0826               	movf	___lomod@divisor+6,w
  7067  2B2F  3BAE               	subwfb	___lomod@dividend+6,f
  7068  2B30  0827               	movf	___lomod@divisor+7,w
  7069  2B31  3BAF               	subwfb	___lomod@dividend+7,f
  7070  2B32                     l4787:	
  7071  2B32  36A7               	lsrf	___lomod@divisor+7,f
  7072  2B33  0CA6               	rrf	___lomod@divisor+6,f
  7073  2B34  0CA5               	rrf	___lomod@divisor+5,f
  7074  2B35  0CA4               	rrf	___lomod@divisor+4,f
  7075  2B36  0CA3               	rrf	___lomod@divisor+3,f
  7076  2B37  0CA2               	rrf	___lomod@divisor+2,f
  7077  2B38  0CA1               	rrf	___lomod@divisor+1,f
  7078  2B39  0CA0               	rrf	___lomod@divisor,f
  7079  2B3A  3001               	movlw	1
  7080  2B3B  02F2               	subwf	___lomod@counter,f
  7081  2B3C  1D03               	btfss	3,2
  7082  2B3D  2B02               	goto	l4783
  7083  2B3E                     l1084:	
  7084  2B3E  0828               	movf	___lomod@dividend,w
  7085  2B3F  00A0               	movwf	?___lomod
  7086  2B40  0829               	movf	___lomod@dividend+1,w
  7087  2B41  00A1               	movwf	?___lomod+1
  7088  2B42  082A               	movf	___lomod@dividend+2,w
  7089  2B43  00A2               	movwf	?___lomod+2
  7090  2B44  082B               	movf	___lomod@dividend+3,w
  7091  2B45  00A3               	movwf	?___lomod+3
  7092  2B46  082C               	movf	___lomod@dividend+4,w
  7093  2B47  00A4               	movwf	?___lomod+4
  7094  2B48  082D               	movf	___lomod@dividend+5,w
  7095  2B49  00A5               	movwf	?___lomod+5
  7096  2B4A  082E               	movf	___lomod@dividend+6,w
  7097  2B4B  00A6               	movwf	?___lomod+6
  7098  2B4C  082F               	movf	___lomod@dividend+7,w
  7099  2B4D  00A7               	movwf	?___lomod+7
  7100  2B4E  0008               	return
  7101  2B4F                     __end_of___lomod:	
  7102                           
  7103                           	psect	text12
  7104  2C43                     __ptext12:	
  7105 ;; *************** function ___lodiv *****************
  7106 ;; Defined at:
  7107 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7110 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  quotient        8    2[COMMON] unsigned long long 
  7113 ;;  counter         1   10[COMMON] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  8    0[BANK0 ] unsigned long long 
  7116 ;; Registers used:
  7117 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7123 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7124 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7126 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7127 ;;Total ram usage:       26 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    1
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_utoa
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function ___lodiv
  7139  2C43                     ___lodiv:	
  7140                           
  7141                           ;incstack = 0
  7142                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7143  2C43  3072               	movlw	low ___lodiv@quotient
  7144  2C44  0086               	movwf	6
  7145  2C45  3000               	movlw	high ___lodiv@quotient
  7146  2C46  0087               	movwf	7
  7147  2C47  3008               	movlw	8
  7148  2C48  00F1               	movwf	??___lodiv
  7149  2C49  3000               	movlw	0
  7150  2C4A                     u6270:	
  7151  2C4A  001E               	movwi fsr1++
  7152  2C4B  0BF1               	decfsz	??___lodiv,f
  7153  2C4C  2C4A               	goto	u6270
  7154  2C4D  0020               	movlb	0	; select bank0
  7155  2C4E  0820               	movf	___lodiv@divisor,w
  7156  2C4F  0421               	iorwf	___lodiv@divisor+1,w
  7157  2C50  0422               	iorwf	___lodiv@divisor+2,w
  7158  2C51  0423               	iorwf	___lodiv@divisor+3,w
  7159  2C52  0424               	iorwf	___lodiv@divisor+4,w
  7160  2C53  0425               	iorwf	___lodiv@divisor+5,w
  7161  2C54  0426               	iorwf	___lodiv@divisor+6,w
  7162  2C55  0427               	iorwf	___lodiv@divisor+7,w
  7163  2C56  1903               	skipnz
  7164  2C57  2CAE               	goto	l1074
  7165  2C58  01FA               	clrf	___lodiv@counter
  7166  2C59  0AFA               	incf	___lodiv@counter,f
  7167  2C5A                     l4761:	
  7168  2C5A  1BA7               	btfsc	___lodiv@divisor+7,7
  7169  2C5B  2C69               	goto	l4763
  7170  2C5C  35A0               	lslf	___lodiv@divisor,f
  7171  2C5D  0DA1               	rlf	___lodiv@divisor+1,f
  7172  2C5E  0DA2               	rlf	___lodiv@divisor+2,f
  7173  2C5F  0DA3               	rlf	___lodiv@divisor+3,f
  7174  2C60  0DA4               	rlf	___lodiv@divisor+4,f
  7175  2C61  0DA5               	rlf	___lodiv@divisor+5,f
  7176  2C62  0DA6               	rlf	___lodiv@divisor+6,f
  7177  2C63  0DA7               	rlf	___lodiv@divisor+7,f
  7178  2C64  3001               	movlw	1
  7179  2C65  00F1               	movwf	??___lodiv
  7180  2C66  0871               	movf	??___lodiv,w
  7181  2C67  07FA               	addwf	___lodiv@counter,f
  7182  2C68  2C5A               	goto	l4761
  7183  2C69                     l4763:	
  7184  2C69  35F2               	lslf	___lodiv@quotient,f
  7185  2C6A  0DF3               	rlf	___lodiv@quotient+1,f
  7186  2C6B  0DF4               	rlf	___lodiv@quotient+2,f
  7187  2C6C  0DF5               	rlf	___lodiv@quotient+3,f
  7188  2C6D  0DF6               	rlf	___lodiv@quotient+4,f
  7189  2C6E  0DF7               	rlf	___lodiv@quotient+5,f
  7190  2C6F  0DF8               	rlf	___lodiv@quotient+6,f
  7191  2C70  0DF9               	rlf	___lodiv@quotient+7,f
  7192  2C71  0827               	movf	___lodiv@divisor+7,w
  7193  2C72  022F               	subwf	___lodiv@dividend+7,w
  7194  2C73  1D03               	skipz
  7195  2C74  2C8F               	goto	u6305
  7196  2C75  0826               	movf	___lodiv@divisor+6,w
  7197  2C76  022E               	subwf	___lodiv@dividend+6,w
  7198  2C77  1D03               	skipz
  7199  2C78  2C8F               	goto	u6305
  7200  2C79  0825               	movf	___lodiv@divisor+5,w
  7201  2C7A  022D               	subwf	___lodiv@dividend+5,w
  7202  2C7B  1D03               	skipz
  7203  2C7C  2C8F               	goto	u6305
  7204  2C7D  0824               	movf	___lodiv@divisor+4,w
  7205  2C7E  022C               	subwf	___lodiv@dividend+4,w
  7206  2C7F  1D03               	skipz
  7207  2C80  2C8F               	goto	u6305
  7208  2C81  0823               	movf	___lodiv@divisor+3,w
  7209  2C82  022B               	subwf	___lodiv@dividend+3,w
  7210  2C83  1D03               	skipz
  7211  2C84  2C8F               	goto	u6305
  7212  2C85  0822               	movf	___lodiv@divisor+2,w
  7213  2C86  022A               	subwf	___lodiv@dividend+2,w
  7214  2C87  1D03               	skipz
  7215  2C88  2C8F               	goto	u6305
  7216  2C89  0821               	movf	___lodiv@divisor+1,w
  7217  2C8A  0229               	subwf	___lodiv@dividend+1,w
  7218  2C8B  1D03               	skipz
  7219  2C8C  2C8F               	goto	u6305
  7220  2C8D  0820               	movf	___lodiv@divisor,w
  7221  2C8E  0228               	subwf	___lodiv@dividend,w
  7222  2C8F                     u6305:	
  7223  2C8F  1C03               	skipc
  7224  2C90  2CA2               	goto	l4771
  7225  2C91  0820               	movf	___lodiv@divisor,w
  7226  2C92  02A8               	subwf	___lodiv@dividend,f
  7227  2C93  0821               	movf	___lodiv@divisor+1,w
  7228  2C94  3BA9               	subwfb	___lodiv@dividend+1,f
  7229  2C95  0822               	movf	___lodiv@divisor+2,w
  7230  2C96  3BAA               	subwfb	___lodiv@dividend+2,f
  7231  2C97  0823               	movf	___lodiv@divisor+3,w
  7232  2C98  3BAB               	subwfb	___lodiv@dividend+3,f
  7233  2C99  0824               	movf	___lodiv@divisor+4,w
  7234  2C9A  3BAC               	subwfb	___lodiv@dividend+4,f
  7235  2C9B  0825               	movf	___lodiv@divisor+5,w
  7236  2C9C  3BAD               	subwfb	___lodiv@dividend+5,f
  7237  2C9D  0826               	movf	___lodiv@divisor+6,w
  7238  2C9E  3BAE               	subwfb	___lodiv@dividend+6,f
  7239  2C9F  0827               	movf	___lodiv@divisor+7,w
  7240  2CA0  3BAF               	subwfb	___lodiv@dividend+7,f
  7241  2CA1  1472               	bsf	___lodiv@quotient,0
  7242  2CA2                     l4771:	
  7243  2CA2  36A7               	lsrf	___lodiv@divisor+7,f
  7244  2CA3  0CA6               	rrf	___lodiv@divisor+6,f
  7245  2CA4  0CA5               	rrf	___lodiv@divisor+5,f
  7246  2CA5  0CA4               	rrf	___lodiv@divisor+4,f
  7247  2CA6  0CA3               	rrf	___lodiv@divisor+3,f
  7248  2CA7  0CA2               	rrf	___lodiv@divisor+2,f
  7249  2CA8  0CA1               	rrf	___lodiv@divisor+1,f
  7250  2CA9  0CA0               	rrf	___lodiv@divisor,f
  7251  2CAA  3001               	movlw	1
  7252  2CAB  02FA               	subwf	___lodiv@counter,f
  7253  2CAC  1D03               	btfss	3,2
  7254  2CAD  2C69               	goto	l4763
  7255  2CAE                     l1074:	
  7256  2CAE  0872               	movf	___lodiv@quotient,w
  7257  2CAF  00A0               	movwf	?___lodiv
  7258  2CB0  0873               	movf	___lodiv@quotient+1,w
  7259  2CB1  00A1               	movwf	?___lodiv+1
  7260  2CB2  0874               	movf	___lodiv@quotient+2,w
  7261  2CB3  00A2               	movwf	?___lodiv+2
  7262  2CB4  0875               	movf	___lodiv@quotient+3,w
  7263  2CB5  00A3               	movwf	?___lodiv+3
  7264  2CB6  0876               	movf	___lodiv@quotient+4,w
  7265  2CB7  00A4               	movwf	?___lodiv+4
  7266  2CB8  0877               	movf	___lodiv@quotient+5,w
  7267  2CB9  00A5               	movwf	?___lodiv+5
  7268  2CBA  0878               	movf	___lodiv@quotient+6,w
  7269  2CBB  00A6               	movwf	?___lodiv+6
  7270  2CBC  0879               	movf	___lodiv@quotient+7,w
  7271  2CBD  00A7               	movwf	?___lodiv+7
  7272  2CBE  0008               	return
  7273  2CBF                     __end_of___lodiv:	
  7274                           
  7275                           	psect	text13
  7276  2A2E                     __ptext13:	
  7277 ;; *************** function _strncmp *****************
  7278 ;; Defined at:
  7279 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7282 ;;		 -> vfpfcnvrt@ct(3), STR_8(57), STR_7(44), STR_6(42), 
  7283 ;;		 -> STR_3(43), 
  7284 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7285 ;;		 -> STR_153(3), STR_149(3), STR_144(3), STR_140(3), 
  7286 ;;		 -> STR_135(3), STR_131(3), STR_126(4), STR_122(4), 
  7287 ;;		 -> STR_117(3), STR_112(3), STR_107(3), STR_102(4), 
  7288 ;;		 -> STR_97(3), STR_92(3), STR_87(3), STR_82(4), 
  7289 ;;		 -> STR_77(3), STR_72(3), STR_67(3), STR_62(4), 
  7290 ;;		 -> STR_57(3), STR_52(3), STR_48(3), STR_43(3), 
  7291 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7292 ;;		 -> STR_21(4), 
  7293 ;;  n               2    5[COMMON] unsigned int 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  r               2   10[COMMON] PTR const unsigned char 
  7296 ;;		 -> STR_153(3), STR_149(3), STR_144(3), STR_140(3), 
  7297 ;;		 -> STR_135(3), STR_131(3), STR_126(4), STR_122(4), 
  7298 ;;		 -> STR_117(3), STR_112(3), STR_107(3), STR_102(4), 
  7299 ;;		 -> STR_97(3), STR_92(3), STR_87(3), STR_82(4), 
  7300 ;;		 -> STR_77(3), STR_72(3), STR_67(3), STR_62(4), 
  7301 ;;		 -> STR_57(3), STR_52(3), STR_48(3), STR_43(3), 
  7302 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7303 ;;		 -> STR_21(4), 
  7304 ;;  l               2    8[COMMON] PTR const unsigned char 
  7305 ;;		 -> vfpfcnvrt@ct(3), STR_8(57), STR_7(44), STR_6(42), 
  7306 ;;		 -> STR_3(43), 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  2    1[COMMON] int 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7316 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7317 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7319 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7320 ;;Total ram usage:       11 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    1
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_vfpfcnvrt
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _strncmp
  7332  2A2E                     _strncmp:	
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7336  2A2E  0872               	movf	strncmp@_l+1,w
  7337  2A2F  00F9               	movwf	strncmp@l+1
  7338  2A30  0871               	movf	strncmp@_l,w
  7339  2A31  00F8               	movwf	strncmp@l
  7340  2A32  0874               	movf	strncmp@_r+1,w
  7341  2A33  00FB               	movwf	strncmp@r+1
  7342  2A34  0873               	movf	strncmp@_r,w
  7343  2A35  00FA               	movwf	strncmp@r
  7344  2A36  3001               	movlw	1
  7345  2A37  02F5               	subwf	strncmp@n,f
  7346  2A38  3000               	movlw	0
  7347  2A39  3BF6               	subwfb	strncmp@n+1,f
  7348  2A3A  0A75               	incf	strncmp@n,w
  7349  2A3B  1D03               	skipz
  7350  2A3C  2A68               	goto	l5701
  7351  2A3D  0A76               	incf	strncmp@n+1,w
  7352  2A3E  1D03               	btfss	3,2
  7353  2A3F  2A68               	goto	l5701
  7354  2A40  01F1               	clrf	?_strncmp
  7355  2A41  01F2               	clrf	?_strncmp+1
  7356  2A42  0008               	return
  7357  2A43                     l5703:	
  7358  2A43  087A               	movf	strncmp@r,w
  7359  2A44  0084               	movwf	4
  7360  2A45  087B               	movf	strncmp@r+1,w
  7361  2A46  0085               	movwf	5
  7362  2A47  0012               	moviw fsr0++
  7363  2A48  1903               	btfsc	3,2
  7364  2A49  2A6F               	goto	l5709
  7365  2A4A  0875               	movf	strncmp@n,w
  7366  2A4B  0476               	iorwf	strncmp@n+1,w
  7367  2A4C  1903               	btfsc	3,2
  7368  2A4D  2A6F               	goto	l5709
  7369  2A4E  087A               	movf	strncmp@r,w
  7370  2A4F  0084               	movwf	4
  7371  2A50  087B               	movf	strncmp@r+1,w
  7372  2A51  0085               	movwf	5
  7373  2A52  0800               	movf	0,w	;code access
  7374  2A53  00F7               	movwf	??_strncmp
  7375  2A54  0878               	movf	strncmp@l,w
  7376  2A55  0084               	movwf	4
  7377  2A56  0879               	movf	strncmp@l+1,w
  7378  2A57  0085               	movwf	5
  7379  2A58  0800               	movf	0,w	;code access
  7380  2A59  0677               	xorwf	??_strncmp,w
  7381  2A5A  1D03               	btfss	3,2
  7382  2A5B  2A6F               	goto	l5709
  7383  2A5C  3001               	movlw	1
  7384  2A5D  07F8               	addwf	strncmp@l,f
  7385  2A5E  3000               	movlw	0
  7386  2A5F  3DF9               	addwfc	strncmp@l+1,f
  7387  2A60  3001               	movlw	1
  7388  2A61  07FA               	addwf	strncmp@r,f
  7389  2A62  3000               	movlw	0
  7390  2A63  3DFB               	addwfc	strncmp@r+1,f
  7391  2A64  3001               	movlw	1
  7392  2A65  02F5               	subwf	strncmp@n,f
  7393  2A66  3000               	movlw	0
  7394  2A67  3BF6               	subwfb	strncmp@n+1,f
  7395  2A68                     l5701:	
  7396  2A68  0878               	movf	strncmp@l,w
  7397  2A69  0084               	movwf	4
  7398  2A6A  0879               	movf	strncmp@l+1,w
  7399  2A6B  0085               	movwf	5
  7400  2A6C  0012               	moviw fsr0++
  7401  2A6D  1D03               	btfss	3,2
  7402  2A6E  2A43               	goto	l5703
  7403  2A6F                     l5709:	
  7404  2A6F  0878               	movf	strncmp@l,w
  7405  2A70  0084               	movwf	4
  7406  2A71  0879               	movf	strncmp@l+1,w
  7407  2A72  0085               	movwf	5
  7408  2A73  0800               	movf	0,w	;code access
  7409  2A74  00F7               	movwf	??_strncmp
  7410  2A75  087A               	movf	strncmp@r,w
  7411  2A76  0084               	movwf	4
  7412  2A77  087B               	movf	strncmp@r+1,w
  7413  2A78  0085               	movwf	5
  7414  2A79  0800               	movf	0,w	;code access
  7415  2A7A  0277               	subwf	??_strncmp,w
  7416  2A7B  00F1               	movwf	?_strncmp
  7417  2A7C  01F2               	clrf	?_strncmp+1
  7418  2A7D  1C03               	skipc
  7419  2A7E  03F2               	decf	?_strncmp+1,f
  7420  2A7F  0008               	return
  7421  2A80                     __end_of_strncmp:	
  7422                           
  7423                           	psect	text14
  7424  2219                     __ptext14:	
  7425 ;; *************** function _stoa *****************
  7426 ;; Defined at:
  7427 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7430 ;;		 -> vsnprintf@f(6), 
  7431 ;;  s               1    2[BANK0 ] PTR unsigned char 
  7432 ;;		 -> ?_snprintf(2), 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  7435 ;;  l               2   18[BANK0 ] int 
  7436 ;;  p               2   16[BANK0 ] int 
  7437 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  7438 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7439 ;;  w               2   12[BANK0 ] int 
  7440 ;;  i               2   10[BANK0 ] int 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  2    0[BANK0 ] int 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7450 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7451 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7453 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7454 ;;Total ram usage:       22 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    3
  7457 ;; This function calls:
  7458 ;;		_fputc
  7459 ;;		_strlen
  7460 ;; This function is called by:
  7461 ;;		_vfpfcnvrt
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function _stoa
  7467  2219                     _stoa:	
  7468                           
  7469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7473  2219  30D7               	movlw	low stoa@F1174
  7474  221A  0086               	movwf	6
  7475  221B  3001               	movlw	high stoa@F1174
  7476  221C  0087               	movwf	7
  7477  221D  3023               	movlw	low stoa@nuls
  7478  221E  0084               	movwf	4
  7479  221F  3000               	movlw	high stoa@nuls
  7480  2220  0085               	movwf	5
  7481  2221  3007               	movlw	7
  7482  2222  00FA               	movwf	??_stoa
  7483  2223                     u10800:	
  7484  2223  0016               	moviw fsr1++
  7485  2224  001A               	movwi fsr0++
  7486  2225  0BFA               	decfsz	??_stoa,f
  7487  2226  2A23               	goto	u10800
  7488                           
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7490  2227  0020               	movlb	0	; select bank0
  7491  2228  0822               	movf	stoa@s,w
  7492  2229  00AE               	movwf	stoa@cp
  7493  222A  3001               	movlw	1
  7494  222B  00AF               	movwf	stoa@cp+1
  7495                           
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7497  222C  082E               	movf	stoa@cp,w
  7498  222D  042F               	iorwf	stoa@cp+1,w
  7499  222E  1D03               	btfss	3,2
  7500  222F  2A34               	goto	l7417
  7501                           
  7502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7503  2230  3023               	movlw	low stoa@nuls
  7504  2231  00AE               	movwf	stoa@cp
  7505  2232  3000               	movlw	high stoa@nuls
  7506  2233  00AF               	movwf	stoa@cp+1
  7507  2234                     l7417:	
  7508                           
  7509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7510  2234  082F               	movf	stoa@cp+1,w
  7511  2235  00F2               	movwf	strlen@s+1
  7512  2236  082E               	movf	stoa@cp,w
  7513  2237  00F1               	movwf	strlen@s
  7514  2238  31B5  2564  31A2   	fcall	_strlen
  7515  223B  0872               	movf	?_strlen+1,w
  7516  223C  0020               	movlb	0	; select bank0
  7517  223D  00B3               	movwf	stoa@l+1
  7518  223E  0871               	movf	?_strlen,w
  7519  223F  00B2               	movwf	stoa@l
  7520                           
  7521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7522  2240  0023               	movlb	3	; select bank3
  7523  2241  0841               	movf	(_prec+1)^(0+384),w
  7524  2242  0020               	movlb	0	; select bank0
  7525  2243  00B1               	movwf	stoa@p+1
  7526  2244  0023               	movlb	3	; select bank3
  7527  2245  0840               	movf	_prec^(0+384),w
  7528  2246  0020               	movlb	0	; select bank0
  7529  2247  00B0               	movwf	stoa@p
  7530                           
  7531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7532  2248  1BB1               	btfsc	stoa@p+1,7
  7533  2249  2A5B               	goto	l677
  7534  224A  0831               	movf	stoa@p+1,w
  7535  224B  3A80               	xorlw	128
  7536  224C  00FA               	movwf	??_stoa
  7537  224D  0833               	movf	stoa@l+1,w
  7538  224E  3A80               	xorlw	128
  7539  224F  027A               	subwf	??_stoa,w
  7540  2250  1D03               	skipz
  7541  2251  2A54               	goto	u10835
  7542  2252  0832               	movf	stoa@l,w
  7543  2253  0230               	subwf	stoa@p,w
  7544  2254                     u10835:	
  7545  2254  1803               	btfsc	3,0
  7546  2255  2A5B               	goto	l677
  7547  2256  0020               	movlb	0	; select bank0
  7548  2257  0831               	movf	stoa@p+1,w
  7549  2258  00B3               	movwf	stoa@l+1
  7550  2259  0830               	movf	stoa@p,w
  7551  225A  00B2               	movwf	stoa@l
  7552  225B                     l677:	
  7553                           
  7554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7555  225B  0020               	movlb	0	; select bank0
  7556  225C  0833               	movf	stoa@l+1,w
  7557  225D  00B1               	movwf	stoa@p+1
  7558  225E  0832               	movf	stoa@l,w
  7559  225F  00B0               	movwf	stoa@p
  7560                           
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7562  2260  0023               	movlb	3	; select bank3
  7563  2261  083F               	movf	(_width+1)^(0+384),w
  7564  2262  0020               	movlb	0	; select bank0
  7565  2263  00AD               	movwf	stoa@w+1
  7566  2264  0023               	movlb	3	; select bank3
  7567  2265  083E               	movf	_width^(0+384),w
  7568  2266  0020               	movlb	0	; select bank0
  7569  2267  00AC               	movwf	stoa@w
  7570                           
  7571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7572  2268  0023               	movlb	3	; select bank3
  7573  2269  1C42               	btfss	_flags^(0+384),0
  7574  226A  2A7D               	goto	l7435
  7575  226B  2A8A               	goto	l7437
  7576  226C                     l7431:	
  7577                           
  7578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7579  226C  3020               	movlw	32
  7580  226D  00F1               	movwf	fputc@c
  7581  226E  3000               	movlw	0
  7582  226F  00F2               	movwf	fputc@c+1
  7583  2270  0020               	movlb	0	; select bank0
  7584  2271  0821               	movf	stoa@fp+1,w
  7585  2272  00F4               	movwf	fputc@fp+1
  7586  2273  0820               	movf	stoa@fp,w
  7587  2274  00F3               	movwf	fputc@fp
  7588  2275  3190  200D  31A2   	fcall	_fputc
  7589                           
  7590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7591  2278  3001               	movlw	1
  7592  2279  0020               	movlb	0	; select bank0
  7593  227A  07B2               	addwf	stoa@l,f
  7594  227B  3000               	movlw	0
  7595  227C  3DB3               	addwfc	stoa@l+1,f
  7596  227D                     l7435:	
  7597                           
  7598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7599  227D  0020               	movlb	0	; select bank0
  7600  227E  0833               	movf	stoa@l+1,w
  7601  227F  3A80               	xorlw	128
  7602  2280  00FA               	movwf	??_stoa
  7603  2281  082D               	movf	stoa@w+1,w
  7604  2282  3A80               	xorlw	128
  7605  2283  027A               	subwf	??_stoa,w
  7606  2284  1D03               	skipz
  7607  2285  2A88               	goto	u10855
  7608  2286  082C               	movf	stoa@w,w
  7609  2287  0232               	subwf	stoa@l,w
  7610  2288                     u10855:	
  7611  2288  1C03               	skipc
  7612  2289  2A6C               	goto	l7431
  7613  228A                     l7437:	
  7614                           
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7616  228A  0020               	movlb	0	; select bank0
  7617  228B  01AA               	clrf	stoa@i
  7618  228C  01AB               	clrf	stoa@i+1
  7619  228D                     l7445:	
  7620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7621                           
  7622                           
  7623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7624  228D  082B               	movf	stoa@i+1,w
  7625  228E  3A80               	xorlw	128
  7626  228F  00FA               	movwf	??_stoa
  7627  2290  0831               	movf	stoa@p+1,w
  7628  2291  3A80               	xorlw	128
  7629  2292  027A               	subwf	??_stoa,w
  7630  2293  1D03               	skipz
  7631  2294  2A97               	goto	u10865
  7632  2295  0830               	movf	stoa@p,w
  7633  2296  022A               	subwf	stoa@i,w
  7634  2297                     u10865:	
  7635  2297  1803               	btfsc	3,0
  7636  2298  2AB6               	goto	l686
  7637                           
  7638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7639  2299  0020               	movlb	0	; select bank0
  7640  229A  082E               	movf	stoa@cp,w
  7641  229B  0086               	movwf	6
  7642  229C  082F               	movf	stoa@cp+1,w
  7643  229D  0087               	movwf	7
  7644  229E  0801               	movf	1,w
  7645  229F  00FA               	movwf	??_stoa
  7646  22A0  01FB               	clrf	??_stoa+1
  7647  22A1  087A               	movf	??_stoa,w
  7648  22A2  00F1               	movwf	fputc@c
  7649  22A3  087B               	movf	??_stoa+1,w
  7650  22A4  00F2               	movwf	fputc@c+1
  7651  22A5  0821               	movf	stoa@fp+1,w
  7652  22A6  00F4               	movwf	fputc@fp+1
  7653  22A7  0820               	movf	stoa@fp,w
  7654  22A8  00F3               	movwf	fputc@fp
  7655  22A9  3190  200D  31A2   	fcall	_fputc
  7656                           
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7658  22AC  3001               	movlw	1
  7659  22AD  0020               	movlb	0	; select bank0
  7660  22AE  07AE               	addwf	stoa@cp,f
  7661  22AF  3000               	movlw	0
  7662  22B0  3DAF               	addwfc	stoa@cp+1,f
  7663                           
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7665  22B1  3001               	movlw	1
  7666  22B2  07AA               	addwf	stoa@i,f
  7667  22B3  3000               	movlw	0
  7668  22B4  3DAB               	addwfc	stoa@i+1,f
  7669  22B5  2A8D               	goto	l7445
  7670  22B6                     l686:	
  7671                           
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7673  22B6  0023               	movlb	3	; select bank3
  7674  22B7  1842               	btfsc	_flags^(0+384),0
  7675  22B8  2ACB               	goto	l7453
  7676  22B9  2AD8               	goto	l7455
  7677  22BA                     l7449:	
  7678                           
  7679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7680  22BA  3020               	movlw	32
  7681  22BB  00F1               	movwf	fputc@c
  7682  22BC  3000               	movlw	0
  7683  22BD  00F2               	movwf	fputc@c+1
  7684  22BE  0020               	movlb	0	; select bank0
  7685  22BF  0821               	movf	stoa@fp+1,w
  7686  22C0  00F4               	movwf	fputc@fp+1
  7687  22C1  0820               	movf	stoa@fp,w
  7688  22C2  00F3               	movwf	fputc@fp
  7689  22C3  3190  200D  31A2   	fcall	_fputc
  7690                           
  7691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7692  22C6  3001               	movlw	1
  7693  22C7  0020               	movlb	0	; select bank0
  7694  22C8  07B2               	addwf	stoa@l,f
  7695  22C9  3000               	movlw	0
  7696  22CA  3DB3               	addwfc	stoa@l+1,f
  7697  22CB                     l7453:	
  7698                           
  7699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7700  22CB  0020               	movlb	0	; select bank0
  7701  22CC  0833               	movf	stoa@l+1,w
  7702  22CD  3A80               	xorlw	128
  7703  22CE  00FA               	movwf	??_stoa
  7704  22CF  082D               	movf	stoa@w+1,w
  7705  22D0  3A80               	xorlw	128
  7706  22D1  027A               	subwf	??_stoa,w
  7707  22D2  1D03               	skipz
  7708  22D3  2AD6               	goto	u10885
  7709  22D4  082C               	movf	stoa@w,w
  7710  22D5  0232               	subwf	stoa@l,w
  7711  22D6                     u10885:	
  7712  22D6  1C03               	skipc
  7713  22D7  2ABA               	goto	l7449
  7714  22D8                     l7455:	
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7717  22D8  0020               	movlb	0	; select bank0
  7718  22D9  0833               	movf	stoa@l+1,w
  7719  22DA  00A1               	movwf	?_stoa+1
  7720  22DB  0832               	movf	stoa@l,w
  7721  22DC  00A0               	movwf	?_stoa
  7722  22DD  0008               	return
  7723  22DE                     __end_of_stoa:	
  7724                           
  7725                           	psect	text15
  7726  183C                     __ptext15:	
  7727 ;; *************** function _otoa *****************
  7728 ;; Defined at:
  7729 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7732 ;;		 -> vsnprintf@f(6), 
  7733 ;;  d               8   18[BANK0 ] unsigned long long 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  n               8   40[BANK0 ] unsigned long long 
  7736 ;;  i               2   48[BANK0 ] int 
  7737 ;;  w               2   38[BANK0 ] int 
  7738 ;;  t               2   36[BANK0 ] int 
  7739 ;;  p               2   34[BANK0 ] int 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2   16[BANK0 ] int 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7749 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7750 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7751 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7752 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7753 ;;Total ram usage:       34 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    5
  7756 ;; This function calls:
  7757 ;;		_pad
  7758 ;; This function is called by:
  7759 ;;		_vfpfcnvrt
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function _otoa
  7765  183C                     _otoa:	
  7766                           
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7768                           
  7769                           ;incstack = 0
  7770                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7771  183C  0023               	movlb	3	; select bank3
  7772  183D  1BC1               	btfsc	(_prec+1)^(0+384),7
  7773  183E  2843               	goto	l655
  7774                           
  7775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7776  183F  30FD               	movlw	253
  7777  1840  05C2               	andwf	_flags^(0+384),f
  7778  1841  30FF               	movlw	255
  7779  1842  05C3               	andwf	(_flags+1)^(0+384),f
  7780  1843                     l655:	
  7781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  7782                           
  7783                           
  7784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7785  1843  0841               	movf	(_prec+1)^(0+384),w
  7786  1844  3A80               	xorlw	128
  7787  1845  0020               	movlb	0	; select bank0
  7788  1846  00BA               	movwf	??_otoa
  7789  1847  3080               	movlw	128
  7790  1848  023A               	subwf	??_otoa,w
  7791  1849  1D03               	skipz
  7792  184A  284E               	goto	u10715
  7793  184B  3001               	movlw	1
  7794  184C  0023               	movlb	3	; select bank3
  7795  184D  0240               	subwf	_prec^(0+384),w
  7796  184E                     u10715:	
  7797  184E  1803               	skipnc
  7798  184F  2856               	goto	l7371
  7799  1850  3001               	movlw	1
  7800  1851  0020               	movlb	0	; select bank0
  7801  1852  00C2               	movwf	otoa@p
  7802  1853  3000               	movlw	0
  7803  1854  00C3               	movwf	otoa@p+1
  7804  1855  285E               	goto	l659
  7805  1856                     l7371:	
  7806  1856  0023               	movlb	3	; select bank3
  7807  1857  0841               	movf	(_prec+1)^(0+384),w
  7808  1858  0020               	movlb	0	; select bank0
  7809  1859  00C3               	movwf	otoa@p+1
  7810  185A  0023               	movlb	3	; select bank3
  7811  185B  0840               	movf	_prec^(0+384),w
  7812  185C  0020               	movlb	0	; select bank0
  7813  185D  00C2               	movwf	otoa@p
  7814  185E                     l659:	
  7815                           
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7817  185E  0023               	movlb	3	; select bank3
  7818  185F  083F               	movf	(_width+1)^(0+384),w
  7819  1860  0020               	movlb	0	; select bank0
  7820  1861  00C7               	movwf	otoa@w+1
  7821  1862  0023               	movlb	3	; select bank3
  7822  1863  083E               	movf	_width^(0+384),w
  7823  1864  0020               	movlb	0	; select bank0
  7824  1865  00C6               	movwf	otoa@w
  7825                           
  7826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7827  1866  0832               	movf	otoa@d,w
  7828  1867  00C8               	movwf	otoa@n
  7829  1868  0833               	movf	otoa@d+1,w
  7830  1869  00C9               	movwf	otoa@n+1
  7831  186A  0834               	movf	otoa@d+2,w
  7832  186B  00CA               	movwf	otoa@n+2
  7833  186C  0835               	movf	otoa@d+3,w
  7834  186D  00CB               	movwf	otoa@n+3
  7835  186E  0836               	movf	otoa@d+4,w
  7836  186F  00CC               	movwf	otoa@n+4
  7837  1870  0837               	movf	otoa@d+5,w
  7838  1871  00CD               	movwf	otoa@n+5
  7839  1872  0838               	movf	otoa@d+6,w
  7840  1873  00CE               	movwf	otoa@n+6
  7841  1874  0839               	movf	otoa@d+7,w
  7842  1875  00CF               	movwf	otoa@n+7
  7843                           
  7844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7845  1876  304F               	movlw	79
  7846  1877  00D0               	movwf	otoa@i
  7847  1878  3000               	movlw	0
  7848  1879  00D1               	movwf	otoa@i+1
  7849                           
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7851  187A  0024               	movlb	4	; select bank4
  7852  187B  01EF               	clrf	(_dbuf^(0+512)+79)
  7853                           
  7854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7855  187C  0020               	movlb	0	; select bank0
  7856  187D  01C4               	clrf	otoa@t
  7857  187E  01C5               	clrf	otoa@t+1
  7858                           
  7859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7860  187F  28F3               	goto	l660
  7861  1880                     l7389:	
  7862  1880  0020               	movlb	0	; select bank0
  7863  1881  0848               	movf	otoa@n,w
  7864  1882  0449               	iorwf	otoa@n+1,w
  7865  1883  044A               	iorwf	otoa@n+2,w
  7866  1884  044B               	iorwf	otoa@n+3,w
  7867  1885  044C               	iorwf	otoa@n+4,w
  7868  1886  044D               	iorwf	otoa@n+5,w
  7869  1887  044E               	iorwf	otoa@n+6,w
  7870  1888  044F               	iorwf	otoa@n+7,w
  7871  1889  1D03               	skipz
  7872  188A  28A5               	goto	l7379
  7873  188B  0843               	movf	otoa@p+1,w
  7874  188C  3A80               	xorlw	128
  7875  188D  00BA               	movwf	??_otoa
  7876  188E  3080               	movlw	128
  7877  188F  023A               	subwf	??_otoa,w
  7878  1890  1D03               	skipz
  7879  1891  2894               	goto	u10755
  7880  1892  3001               	movlw	1
  7881  1893  0242               	subwf	otoa@p,w
  7882  1894                     u10755:	
  7883  1894  1803               	skipnc
  7884  1895  28A5               	goto	l7379
  7885  1896  0020               	movlb	0	; select bank0
  7886  1897  0847               	movf	otoa@w+1,w
  7887  1898  3A80               	xorlw	128
  7888  1899  00BA               	movwf	??_otoa
  7889  189A  3080               	movlw	128
  7890  189B  023A               	subwf	??_otoa,w
  7891  189C  1D03               	skipz
  7892  189D  28A0               	goto	u10765
  7893  189E  3001               	movlw	1
  7894  189F  0246               	subwf	otoa@w,w
  7895  18A0                     u10765:	
  7896  18A0  1C03               	skipc
  7897  18A1  28FE               	goto	l666
  7898  18A2  0023               	movlb	3	; select bank3
  7899  18A3  1CC2               	btfss	_flags^(0+384),1
  7900  18A4  28FE               	goto	l666
  7901  18A5                     l7379:	
  7902                           
  7903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7904  18A5  30FF               	movlw	255
  7905  18A6  0020               	movlb	0	; select bank0
  7906  18A7  07D0               	addwf	otoa@i,f
  7907  18A8  30FF               	movlw	255
  7908  18A9  3DD1               	addwfc	otoa@i+1,f
  7909                           
  7910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7911  18AA  3007               	movlw	7
  7912  18AB  0548               	andwf	otoa@n,w
  7913  18AC  00C4               	movwf	otoa@t
  7914  18AD  3000               	movlw	0
  7915  18AE  0549               	andwf	otoa@n+1,w
  7916  18AF  00C5               	movwf	otoa@t+1
  7917                           
  7918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7919  18B0  0844               	movf	otoa@t,w
  7920  18B1  3E30               	addlw	48
  7921  18B2  00BA               	movwf	??_otoa
  7922  18B3  0850               	movf	otoa@i,w
  7923  18B4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7924  18B5  0086               	movwf	6
  7925  18B6  3002               	movlw	2	; select bank4/5
  7926  18B7  0087               	movwf	7
  7927  18B8  083A               	movf	??_otoa,w
  7928  18B9  0081               	movwf	1
  7929                           
  7930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7931  18BA  30FF               	movlw	255
  7932  18BB  07C2               	addwf	otoa@p,f
  7933  18BC  30FF               	movlw	255
  7934  18BD  3DC3               	addwfc	otoa@p+1,f
  7935                           
  7936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7937  18BE  30FF               	movlw	255
  7938  18BF  07C6               	addwf	otoa@w,f
  7939  18C0  30FF               	movlw	255
  7940  18C1  3DC7               	addwfc	otoa@w+1,f
  7941                           
  7942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7943  18C2  3048               	movlw	low otoa@n
  7944  18C3  0086               	movwf	6
  7945  18C4  3000               	movlw	high otoa@n
  7946  18C5  0087               	movwf	7
  7947  18C6  3F40               	moviw [0]fsr1
  7948  18C7  00BA               	movwf	??_otoa
  7949  18C8  3F41               	moviw [1]fsr1
  7950  18C9  00BB               	movwf	??_otoa+1
  7951  18CA  3F42               	moviw [2]fsr1
  7952  18CB  00BC               	movwf	??_otoa+2
  7953  18CC  3F43               	moviw [3]fsr1
  7954  18CD  00BD               	movwf	??_otoa+3
  7955  18CE  3F44               	moviw [4]fsr1
  7956  18CF  00BE               	movwf	??_otoa+4
  7957  18D0  3F45               	moviw [5]fsr1
  7958  18D1  00BF               	movwf	??_otoa+5
  7959  18D2  3F46               	moviw [6]fsr1
  7960  18D3  00C0               	movwf	??_otoa+6
  7961  18D4  3F47               	moviw [7]fsr1
  7962  18D5  00C1               	movwf	??_otoa+7
  7963  18D6  3003               	movlw	3
  7964  18D7                     u10725:	
  7965  18D7  0020               	movlb	0	; select bank0
  7966  18D8  36C1               	lsrf	??_otoa+7,f
  7967  18D9  0CC0               	rrf	??_otoa+6,f
  7968  18DA  0CBF               	rrf	??_otoa+5,f
  7969  18DB  0CBE               	rrf	??_otoa+4,f
  7970  18DC  0CBD               	rrf	??_otoa+3,f
  7971  18DD  0CBC               	rrf	??_otoa+2,f
  7972  18DE  0CBB               	rrf	??_otoa+1,f
  7973  18DF  0CBA               	rrf	??_otoa,f
  7974  18E0  0B89               	decfsz	9,f
  7975  18E1  28D7               	goto	u10725
  7976  18E2  0020               	movlb	0	; select bank0
  7977  18E3  0841               	movf	??_otoa+7,w
  7978  18E4  00CF               	movwf	otoa@n+7
  7979  18E5  0840               	movf	??_otoa+6,w
  7980  18E6  00CE               	movwf	otoa@n+6
  7981  18E7  083F               	movf	??_otoa+5,w
  7982  18E8  00CD               	movwf	otoa@n+5
  7983  18E9  083E               	movf	??_otoa+4,w
  7984  18EA  00CC               	movwf	otoa@n+4
  7985  18EB  083D               	movf	??_otoa+3,w
  7986  18EC  00CB               	movwf	otoa@n+3
  7987  18ED  083C               	movf	??_otoa+2,w
  7988  18EE  00CA               	movwf	otoa@n+2
  7989  18EF  083B               	movf	??_otoa+1,w
  7990  18F0  00C9               	movwf	otoa@n+1
  7991  18F1  083A               	movf	??_otoa,w
  7992  18F2  00C8               	movwf	otoa@n
  7993  18F3                     l660:	
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  7995                           
  7996                           
  7997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7998  18F3  0851               	movf	otoa@i+1,w
  7999  18F4  3A80               	xorlw	128
  8000  18F5  00BA               	movwf	??_otoa
  8001  18F6  3080               	movlw	128
  8002  18F7  023A               	subwf	??_otoa,w
  8003  18F8  1D03               	skipz
  8004  18F9  28FC               	goto	u10735
  8005  18FA  3001               	movlw	1
  8006  18FB  0250               	subwf	otoa@i,w
  8007  18FC                     u10735:	
  8008  18FC  1803               	btfsc	3,0
  8009  18FD  2880               	goto	l7389
  8010  18FE                     l666:	
  8011                           
  8012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8013  18FE  0023               	movlb	3	; select bank3
  8014  18FF  1E42               	btfss	_flags^(0+384),4
  8015  1900  2917               	goto	l7405
  8016  1901  0020               	movlb	0	; select bank0
  8017  1902  0844               	movf	otoa@t,w
  8018  1903  0445               	iorwf	otoa@t+1,w
  8019  1904  1903               	btfsc	3,2
  8020  1905  2917               	goto	l7405
  8021                           
  8022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8023  1906  30FF               	movlw	255
  8024  1907  07D0               	addwf	otoa@i,f
  8025  1908  30FF               	movlw	255
  8026  1909  3DD1               	addwfc	otoa@i+1,f
  8027                           
  8028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8029  190A  3030               	movlw	48
  8030  190B  00BA               	movwf	??_otoa
  8031  190C  0850               	movf	otoa@i,w
  8032  190D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8033  190E  0086               	movwf	6
  8034  190F  3002               	movlw	2	; select bank4/5
  8035  1910  0087               	movwf	7
  8036  1911  083A               	movf	??_otoa,w
  8037  1912  0081               	movwf	1
  8038                           
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8040  1913  30FF               	movlw	255
  8041  1914  07C6               	addwf	otoa@w,f
  8042  1915  30FF               	movlw	255
  8043  1916  3DC7               	addwfc	otoa@w+1,f
  8044  1917                     l7405:	
  8045                           
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8047  1917  0020               	movlb	0	; select bank0
  8048  1918  0831               	movf	otoa@fp+1,w
  8049  1919  00A7               	movwf	pad@fp+1
  8050  191A  0830               	movf	otoa@fp,w
  8051  191B  00A6               	movwf	pad@fp
  8052  191C  0850               	movf	otoa@i,w
  8053  191D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8054  191E  00BA               	movwf	??_otoa
  8055  191F  083A               	movf	??_otoa,w
  8056  1920  00A8               	movwf	pad@buf
  8057  1921  0847               	movf	otoa@w+1,w
  8058  1922  00AA               	movwf	pad@p+1
  8059  1923  0846               	movf	otoa@w,w
  8060  1924  00A9               	movwf	pad@p
  8061  1925  31A9  218C         	fcall	_pad
  8062  1927  0020               	movlb	0	; select bank0
  8063  1928  0827               	movf	?_pad+1,w
  8064  1929  00B1               	movwf	?_otoa+1
  8065  192A  0826               	movf	?_pad,w
  8066  192B  00B0               	movwf	?_otoa
  8067  192C  0008               	return
  8068  192D                     __end_of_otoa:	
  8069                           
  8070                           	psect	text16
  8071  0058                     __ptext16:	
  8072 ;; *************** function _efgtoa *****************
  8073 ;; Defined at:
  8074 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  8077 ;;		 -> vsnprintf@f(6), 
  8078 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  8079 ;;  c               1    6[BANK1 ] unsigned char 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  u               4   63[BANK1 ] unsigned char 
  8082 ;;  g               4   55[BANK1 ] unsigned char 
  8083 ;;  l               4   49[BANK1 ] unsigned char 
  8084 ;;  h               4   45[BANK1 ] unsigned char 
  8085 ;;  ou              4   11[BANK1 ] unsigned char 
  8086 ;;  n               2   61[BANK1 ] int 
  8087 ;;  e               2   59[BANK1 ] int 
  8088 ;;  i               2   53[BANK1 ] int 
  8089 ;;  w               2   42[BANK1 ] int 
  8090 ;;  p               2   39[BANK1 ] int 
  8091 ;;  sign            2   37[BANK1 ] int 
  8092 ;;  d               2   35[BANK1 ] int 
  8093 ;;  ne              2   33[BANK1 ] int 
  8094 ;;  m               2   31[BANK1 ] int 
  8095 ;;  pp              2   29[BANK1 ] int 
  8096 ;;  t               2   27[BANK1 ] int 
  8097 ;;  mode            1   44[BANK1 ] unsigned char 
  8098 ;;  nmode           1   41[BANK1 ] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  2    0[BANK1 ] int 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8108 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8112 ;;Total ram usage:       67 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    5
  8115 ;; This function calls:
  8116 ;;		___awdiv
  8117 ;;		___awmod
  8118 ;;		___fladd
  8119 ;;		___fldiv
  8120 ;;		___fleq
  8121 ;;		___flge
  8122 ;;		___flmul
  8123 ;;		___flneg
  8124 ;;		___flsub
  8125 ;;		___fltol
  8126 ;;		___fpclassifyf
  8127 ;;		_floorf
  8128 ;;		_isupper
  8129 ;;		_pad
  8130 ;;		_strcpy
  8131 ;;		_tolower
  8132 ;; This function is called by:
  8133 ;;		_vfpfcnvrt
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           
  8138                           ;psect for function _efgtoa
  8139  0058                     _efgtoa:	
  8140                           
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8145  0058  0021               	movlb	1	; select bank1
  8146  0059  01C5               	clrf	efgtoa@sign^(0+128)
  8147  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  8148                           
  8149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8150  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  8151  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8152  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  8153  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8154  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  8155  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8156  0061  0822               	movf	efgtoa@f^(0+128),w
  8157  0062  00D7               	movwf	efgtoa@g^(0+128)
  8158                           
  8159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8160  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  8161  0064  0020               	movlb	0	; select bank0
  8162  0065  00DD               	movwf	___flge@ff1+3
  8163  0066  0021               	movlb	1	; select bank1
  8164  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  8165  0068  0020               	movlb	0	; select bank0
  8166  0069  00DC               	movwf	___flge@ff1+2
  8167  006A  0021               	movlb	1	; select bank1
  8168  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  8169  006C  0020               	movlb	0	; select bank0
  8170  006D  00DB               	movwf	___flge@ff1+1
  8171  006E  0021               	movlb	1	; select bank1
  8172  006F  0857               	movf	efgtoa@g^(0+128),w
  8173  0070  0020               	movlb	0	; select bank0
  8174  0071  00DA               	movwf	___flge@ff1
  8175  0072  3000               	movlw	0
  8176  0073  00E1               	movwf	___flge@ff2+3
  8177  0074  3000               	movlw	0
  8178  0075  00E0               	movwf	___flge@ff2+2
  8179  0076  3000               	movlw	0
  8180  0077  00DF               	movwf	___flge@ff2+1
  8181  0078  3000               	movlw	0
  8182  0079  00DE               	movwf	___flge@ff2
  8183  007A  31AB  23C7  3180   	fcall	___flge
  8184  007D  1803               	btfsc	3,0
  8185  007E  2898               	goto	l7083
  8186                           
  8187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8188  007F  3001               	movlw	1
  8189  0080  0021               	movlb	1	; select bank1
  8190  0081  00C5               	movwf	efgtoa@sign^(0+128)
  8191  0082  3000               	movlw	0
  8192  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  8193                           
  8194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8195  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  8196  0085  00F4               	movwf	___flneg@f1+3
  8197  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  8198  0087  00F3               	movwf	___flneg@f1+2
  8199  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  8200  0089  00F2               	movwf	___flneg@f1+1
  8201  008A  0857               	movf	efgtoa@g^(0+128),w
  8202  008B  00F1               	movwf	___flneg@f1
  8203  008C  31B4  24FB  3180   	fcall	___flneg
  8204  008F  0874               	movf	?___flneg+3,w
  8205  0090  0021               	movlb	1	; select bank1
  8206  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8207  0092  0873               	movf	?___flneg+2,w
  8208  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8209  0094  0872               	movf	?___flneg+1,w
  8210  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8211  0096  0871               	movf	?___flneg,w
  8212  0097  00D7               	movwf	efgtoa@g^(0+128)
  8213  0098                     l7083:	
  8214                           
  8215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8216  0098  0021               	movlb	1	; select bank1
  8217  0099  01DD               	clrf	efgtoa@n^(0+128)
  8218  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  8219                           
  8220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8221  009B  0023               	movlb	3	; select bank3
  8222  009C  083F               	movf	(_width+1)^(0+384),w
  8223  009D  0021               	movlb	1	; select bank1
  8224  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  8225  009F  0023               	movlb	3	; select bank3
  8226  00A0  083E               	movf	_width^(0+384),w
  8227  00A1  0021               	movlb	1	; select bank1
  8228  00A2  00CA               	movwf	efgtoa@w^(0+128)
  8229                           
  8230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8231  00A3  0845               	movf	efgtoa@sign^(0+128),w
  8232  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8233  00A5  1D03               	btfss	3,2
  8234  00A6  28AA               	goto	l7091
  8235  00A7  0023               	movlb	3	; select bank3
  8236  00A8  1D42               	btfss	_flags^(0+384),2
  8237  00A9  28C3               	goto	l7103
  8238  00AA                     l7091:	
  8239                           
  8240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8241  00AA  0021               	movlb	1	; select bank1
  8242  00AB  0845               	movf	efgtoa@sign^(0+128),w
  8243  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8244  00AD  1D03               	btfss	3,2
  8245  00AE  28B1               	goto	l7095
  8246  00AF  302B               	movlw	43
  8247  00B0  28B2               	goto	L3
  8248  00B1                     l7095:	
  8249  00B1  302D               	movlw	45
  8250  00B2                     L3:	
  8251  00B2  00AF               	movwf	_efgtoa$1016^(0+128)
  8252  00B3  3000               	movlw	0
  8253  00B4  00B0               	movwf	(_efgtoa$1016^(0+128)+1)
  8254  00B5  082F               	movf	_efgtoa$1016^(0+128),w
  8255  00B6  00A7               	movwf	??_efgtoa^(0+128)
  8256  00B7  0827               	movf	??_efgtoa^(0+128),w
  8257  00B8  0024               	movlb	4	; select bank4
  8258  00B9  00A0               	movwf	_dbuf^(0+512)
  8259                           
  8260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8261  00BA  3001               	movlw	1
  8262  00BB  0021               	movlb	1	; select bank1
  8263  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  8264  00BD  3000               	movlw	0
  8265  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  8266                           
  8267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8268  00BF  30FF               	movlw	255
  8269  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  8270  00C1  30FF               	movlw	255
  8271  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8272  00C3                     l7103:	
  8273                           
  8274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8275  00C3  0021               	movlb	1	; select bank1
  8276  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  8277  00C5  00F4               	movwf	___fpclassifyf@x+3
  8278  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  8279  00C7  00F3               	movwf	___fpclassifyf@x+2
  8280  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  8281  00C9  00F2               	movwf	___fpclassifyf@x+1
  8282  00CA  0857               	movf	efgtoa@g^(0+128),w
  8283  00CB  00F1               	movwf	___fpclassifyf@x
  8284  00CC  31AB  234F  3180   	fcall	___fpclassifyf
  8285  00CF  0371               	decf	?___fpclassifyf,w
  8286  00D0  0472               	iorwf	?___fpclassifyf+1,w
  8287  00D1  1D03               	btfss	3,2
  8288  00D2  2921               	goto	l7121
  8289  00D3  0021               	movlb	1	; select bank1
  8290  00D4  0826               	movf	efgtoa@c^(0+128),w
  8291  00D5  3EBF               	addlw	191
  8292  00D6  00A7               	movwf	??_efgtoa^(0+128)
  8293  00D7  30FF               	movlw	255
  8294  00D8  1803               	skipnc
  8295  00D9  3000               	movlw	0
  8296  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8297  00DB  3000               	movlw	0
  8298  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8299  00DD  301A               	movlw	26
  8300  00DE  1903               	skipnz
  8301  00DF  0227               	subwf	??_efgtoa^(0+128),w
  8302  00E0  1803               	btfsc	3,0
  8303  00E1  28E4               	goto	u10230
  8304  00E2  3001               	movlw	1
  8305  00E3  28E5               	goto	u10240
  8306  00E4                     u10230:	
  8307  00E4  3000               	movlw	0
  8308  00E5                     u10240:	
  8309  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8310  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8311  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  8312  00E8  00B1               	movwf	_efgtoa$1017^(0+128)
  8313  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  8314  00EA  00B2               	movwf	(_efgtoa$1017+1)^(0+128)
  8315  00EB  0831               	movf	_efgtoa$1017^(0+128),w
  8316  00EC  0432               	iorwf	(_efgtoa$1017+1)^(0+128),w
  8317  00ED  1903               	btfsc	3,2
  8318  00EE  28F3               	goto	l7113
  8319                           
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8321  00EF  30BB               	movlw	low (STR_11| (0+32768))
  8322  00F0  00F1               	movwf	strcpy@src
  8323  00F1  30B9               	movlw	high (STR_11| (0+32768))
  8324  00F2  28F6               	goto	L4
  8325  00F3                     l7113:	
  8326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8327                           
  8328                           
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8330  00F3  30CB               	movlw	low (STR_12| (0+32768))
  8331  00F4  00F1               	movwf	strcpy@src
  8332  00F5  30B9               	movlw	high (STR_12| (0+32768))
  8333  00F6                     L4:	
  8334  00F6  00F2               	movwf	strcpy@src+1
  8335  00F7  085D               	movf	efgtoa@n^(0+128),w
  8336  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8337  00F9  31B6  2670  3180   	fcall	_strcpy
  8338                           
  8339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8340  00FC  30FD               	movlw	253
  8341  00FD  0021               	movlb	1	; select bank1
  8342  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  8343  00FF  30FF               	movlw	255
  8344  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8345                           
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8347  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8348  0102  0020               	movlb	0	; select bank0
  8349  0103  00A7               	movwf	pad@fp+1
  8350  0104  0021               	movlb	1	; select bank1
  8351  0105  0820               	movf	efgtoa@fp^(0+128),w
  8352  0106  0020               	movlb	0	; select bank0
  8353  0107  00A6               	movwf	pad@fp
  8354  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8355  0109  0021               	movlb	1	; select bank1
  8356  010A  00A7               	movwf	??_efgtoa^(0+128)
  8357  010B  0827               	movf	??_efgtoa^(0+128),w
  8358  010C  0020               	movlb	0	; select bank0
  8359  010D  00A8               	movwf	pad@buf
  8360  010E  0021               	movlb	1	; select bank1
  8361  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  8362  0110  0020               	movlb	0	; select bank0
  8363  0111  00AA               	movwf	pad@p+1
  8364  0112  0021               	movlb	1	; select bank1
  8365  0113  084A               	movf	efgtoa@w^(0+128),w
  8366  0114  0020               	movlb	0	; select bank0
  8367  0115  00A9               	movwf	pad@p
  8368  0116  31A9  218C         	fcall	_pad
  8369  0118  0020               	movlb	0	; select bank0
  8370  0119  0827               	movf	?_pad+1,w
  8371  011A  0021               	movlb	1	; select bank1
  8372  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8373  011C  0020               	movlb	0	; select bank0
  8374  011D  0826               	movf	?_pad,w
  8375  011E  0021               	movlb	1	; select bank1
  8376  011F  00A0               	movwf	?_efgtoa^(0+128)
  8377  0120  0008               	return
  8378  0121                     l7121:	
  8379                           
  8380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8381  0121  0021               	movlb	1	; select bank1
  8382  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  8383  0123  00F4               	movwf	___fpclassifyf@x+3
  8384  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  8385  0125  00F3               	movwf	___fpclassifyf@x+2
  8386  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  8387  0127  00F2               	movwf	___fpclassifyf@x+1
  8388  0128  0857               	movf	efgtoa@g^(0+128),w
  8389  0129  00F1               	movwf	___fpclassifyf@x
  8390  012A  31AB  234F  3180   	fcall	___fpclassifyf
  8391  012D  0871               	movf	?___fpclassifyf,w
  8392  012E  0472               	iorwf	?___fpclassifyf+1,w
  8393  012F  1D03               	btfss	3,2
  8394  0130  297F               	goto	l7139
  8395  0131  0021               	movlb	1	; select bank1
  8396  0132  0826               	movf	efgtoa@c^(0+128),w
  8397  0133  3EBF               	addlw	191
  8398  0134  00A7               	movwf	??_efgtoa^(0+128)
  8399  0135  30FF               	movlw	255
  8400  0136  1803               	skipnc
  8401  0137  3000               	movlw	0
  8402  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8403  0139  3000               	movlw	0
  8404  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8405  013B  301A               	movlw	26
  8406  013C  1903               	skipnz
  8407  013D  0227               	subwf	??_efgtoa^(0+128),w
  8408  013E  1803               	btfsc	3,0
  8409  013F  2942               	goto	u10270
  8410  0140  3001               	movlw	1
  8411  0141  2943               	goto	u10280
  8412  0142                     u10270:	
  8413  0142  3000               	movlw	0
  8414  0143                     u10280:	
  8415  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8416  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8417  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  8418  0146  00B3               	movwf	_efgtoa$1021^(0+128)
  8419  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  8420  0148  00B4               	movwf	(_efgtoa$1021+1)^(0+128)
  8421  0149  0833               	movf	_efgtoa$1021^(0+128),w
  8422  014A  0434               	iorwf	(_efgtoa$1021+1)^(0+128),w
  8423  014B  1903               	btfsc	3,2
  8424  014C  2951               	goto	l7131
  8425                           
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8427  014D  30BF               	movlw	low (STR_15| (0+32768))
  8428  014E  00F1               	movwf	strcpy@src
  8429  014F  30B9               	movlw	high (STR_15| (0+32768))
  8430  0150  2954               	goto	L5
  8431  0151                     l7131:	
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8433                           
  8434                           
  8435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8436  0151  30D3               	movlw	low (STR_16| (0+32768))
  8437  0152  00F1               	movwf	strcpy@src
  8438  0153  30B9               	movlw	high (STR_16| (0+32768))
  8439  0154                     L5:	
  8440  0154  00F2               	movwf	strcpy@src+1
  8441  0155  085D               	movf	efgtoa@n^(0+128),w
  8442  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8443  0157  31B6  2670  3180   	fcall	_strcpy
  8444                           
  8445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8446  015A  30FD               	movlw	253
  8447  015B  0021               	movlb	1	; select bank1
  8448  015C  07CA               	addwf	efgtoa@w^(0+128),f
  8449  015D  30FF               	movlw	255
  8450  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8451                           
  8452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  8453  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8454  0160  0020               	movlb	0	; select bank0
  8455  0161  00A7               	movwf	pad@fp+1
  8456  0162  0021               	movlb	1	; select bank1
  8457  0163  0820               	movf	efgtoa@fp^(0+128),w
  8458  0164  0020               	movlb	0	; select bank0
  8459  0165  00A6               	movwf	pad@fp
  8460  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8461  0167  0021               	movlb	1	; select bank1
  8462  0168  00A7               	movwf	??_efgtoa^(0+128)
  8463  0169  0827               	movf	??_efgtoa^(0+128),w
  8464  016A  0020               	movlb	0	; select bank0
  8465  016B  00A8               	movwf	pad@buf
  8466  016C  0021               	movlb	1	; select bank1
  8467  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  8468  016E  0020               	movlb	0	; select bank0
  8469  016F  00AA               	movwf	pad@p+1
  8470  0170  0021               	movlb	1	; select bank1
  8471  0171  084A               	movf	efgtoa@w^(0+128),w
  8472  0172  0020               	movlb	0	; select bank0
  8473  0173  00A9               	movwf	pad@p
  8474  0174  31A9  218C         	fcall	_pad
  8475  0176  0020               	movlb	0	; select bank0
  8476  0177  0827               	movf	?_pad+1,w
  8477  0178  0021               	movlb	1	; select bank1
  8478  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8479  017A  0020               	movlb	0	; select bank0
  8480  017B  0826               	movf	?_pad,w
  8481  017C  0021               	movlb	1	; select bank1
  8482  017D  00A0               	movwf	?_efgtoa^(0+128)
  8483  017E  0008               	return
  8484  017F                     l7139:	
  8485                           
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8487  017F  303F               	movlw	63
  8488  0180  0021               	movlb	1	; select bank1
  8489  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8490  0182  3080               	movlw	128
  8491  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8492  0184  3000               	movlw	0
  8493  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8494  0186  3000               	movlw	0
  8495  0187  00DF               	movwf	efgtoa@u^(0+128)
  8496                           
  8497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8498  0188  01DB               	clrf	efgtoa@e^(0+128)
  8499  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8500                           
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8502  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  8503  018B  00F4               	movwf	___fleq@ff1+3
  8504  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  8505  018D  00F3               	movwf	___fleq@ff1+2
  8506  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  8507  018F  00F2               	movwf	___fleq@ff1+1
  8508  0190  0857               	movf	efgtoa@g^(0+128),w
  8509  0191  00F1               	movwf	___fleq@ff1
  8510  0192  3000               	movlw	0
  8511  0193  00F8               	movwf	___fleq@ff2+3
  8512  0194  3000               	movlw	0
  8513  0195  00F7               	movwf	___fleq@ff2+2
  8514  0196  3000               	movlw	0
  8515  0197  00F6               	movwf	___fleq@ff2+1
  8516  0198  3000               	movlw	0
  8517  0199  00F5               	movwf	___fleq@ff2
  8518  019A  31A8  20A3  3180   	fcall	___fleq
  8519  019D  1C03               	btfss	3,0
  8520  019E  29D0               	goto	l7151
  8521  019F  2A5F               	goto	l7159
  8522  01A0                     l7147:	
  8523                           
  8524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8525  01A0  3041               	movlw	65
  8526  01A1  0020               	movlb	0	; select bank0
  8527  01A2  00A9               	movwf	___flmul@b+3
  8528  01A3  3020               	movlw	32
  8529  01A4  00A8               	movwf	___flmul@b+2
  8530  01A5  3000               	movlw	0
  8531  01A6  00A7               	movwf	___flmul@b+1
  8532  01A7  3000               	movlw	0
  8533  01A8  00A6               	movwf	___flmul@b
  8534  01A9  0021               	movlb	1	; select bank1
  8535  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8536  01AB  0020               	movlb	0	; select bank0
  8537  01AC  00AD               	movwf	___flmul@a+3
  8538  01AD  0021               	movlb	1	; select bank1
  8539  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  8540  01AF  0020               	movlb	0	; select bank0
  8541  01B0  00AC               	movwf	___flmul@a+2
  8542  01B1  0021               	movlb	1	; select bank1
  8543  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  8544  01B3  0020               	movlb	0	; select bank0
  8545  01B4  00AB               	movwf	___flmul@a+1
  8546  01B5  0021               	movlb	1	; select bank1
  8547  01B6  085F               	movf	efgtoa@u^(0+128),w
  8548  01B7  0020               	movlb	0	; select bank0
  8549  01B8  00AA               	movwf	___flmul@a
  8550  01B9  3195  25D4  3180   	fcall	___flmul
  8551  01BC  0020               	movlb	0	; select bank0
  8552  01BD  0829               	movf	?___flmul+3,w
  8553  01BE  0021               	movlb	1	; select bank1
  8554  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8555  01C0  0020               	movlb	0	; select bank0
  8556  01C1  0828               	movf	?___flmul+2,w
  8557  01C2  0021               	movlb	1	; select bank1
  8558  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8559  01C4  0020               	movlb	0	; select bank0
  8560  01C5  0827               	movf	?___flmul+1,w
  8561  01C6  0021               	movlb	1	; select bank1
  8562  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8563  01C8  0020               	movlb	0	; select bank0
  8564  01C9  0826               	movf	?___flmul,w
  8565  01CA  0021               	movlb	1	; select bank1
  8566  01CB  00DF               	movwf	efgtoa@u^(0+128)
  8567                           
  8568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8569  01CC  3001               	movlw	1
  8570  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  8571  01CE  3000               	movlw	0
  8572  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8573  01D0                     l7151:	
  8574                           
  8575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8576  01D0  0021               	movlb	1	; select bank1
  8577  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  8578  01D2  0020               	movlb	0	; select bank0
  8579  01D3  00DD               	movwf	___flge@ff1+3
  8580  01D4  0021               	movlb	1	; select bank1
  8581  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  8582  01D6  0020               	movlb	0	; select bank0
  8583  01D7  00DC               	movwf	___flge@ff1+2
  8584  01D8  0021               	movlb	1	; select bank1
  8585  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  8586  01DA  0020               	movlb	0	; select bank0
  8587  01DB  00DB               	movwf	___flge@ff1+1
  8588  01DC  0021               	movlb	1	; select bank1
  8589  01DD  0857               	movf	efgtoa@g^(0+128),w
  8590  01DE  0020               	movlb	0	; select bank0
  8591  01DF  00DA               	movwf	___flge@ff1
  8592  01E0  3041               	movlw	65
  8593  01E1  00A9               	movwf	___flmul@b+3
  8594  01E2  3020               	movlw	32
  8595  01E3  00A8               	movwf	___flmul@b+2
  8596  01E4  3000               	movlw	0
  8597  01E5  00A7               	movwf	___flmul@b+1
  8598  01E6  3000               	movlw	0
  8599  01E7  00A6               	movwf	___flmul@b
  8600  01E8  0021               	movlb	1	; select bank1
  8601  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  8602  01EA  0020               	movlb	0	; select bank0
  8603  01EB  00AD               	movwf	___flmul@a+3
  8604  01EC  0021               	movlb	1	; select bank1
  8605  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  8606  01EE  0020               	movlb	0	; select bank0
  8607  01EF  00AC               	movwf	___flmul@a+2
  8608  01F0  0021               	movlb	1	; select bank1
  8609  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  8610  01F2  0020               	movlb	0	; select bank0
  8611  01F3  00AB               	movwf	___flmul@a+1
  8612  01F4  0021               	movlb	1	; select bank1
  8613  01F5  085F               	movf	efgtoa@u^(0+128),w
  8614  01F6  0020               	movlb	0	; select bank0
  8615  01F7  00AA               	movwf	___flmul@a
  8616  01F8  3195  25D4  3180   	fcall	___flmul
  8617  01FB  0020               	movlb	0	; select bank0
  8618  01FC  0829               	movf	?___flmul+3,w
  8619  01FD  00E1               	movwf	___flge@ff2+3
  8620  01FE  0828               	movf	?___flmul+2,w
  8621  01FF  00E0               	movwf	___flge@ff2+2
  8622  0200  0827               	movf	?___flmul+1,w
  8623  0201  00DF               	movwf	___flge@ff2+1
  8624  0202  0826               	movf	?___flmul,w
  8625  0203  00DE               	movwf	___flge@ff2
  8626  0204  31AB  23C7  3180   	fcall	___flge
  8627  0207  1C03               	btfss	3,0
  8628  0208  2A3A               	goto	l7157
  8629  0209  29A0               	goto	l7147
  8630  020A                     l7153:	
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8633  020A  3041               	movlw	65
  8634  020B  0020               	movlb	0	; select bank0
  8635  020C  00C3               	movwf	___fldiv@a+3
  8636  020D  3020               	movlw	32
  8637  020E  00C2               	movwf	___fldiv@a+2
  8638  020F  3000               	movlw	0
  8639  0210  00C1               	movwf	___fldiv@a+1
  8640  0211  3000               	movlw	0
  8641  0212  00C0               	movwf	___fldiv@a
  8642  0213  0021               	movlb	1	; select bank1
  8643  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  8644  0215  0020               	movlb	0	; select bank0
  8645  0216  00C7               	movwf	___fldiv@b+3
  8646  0217  0021               	movlb	1	; select bank1
  8647  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  8648  0219  0020               	movlb	0	; select bank0
  8649  021A  00C6               	movwf	___fldiv@b+2
  8650  021B  0021               	movlb	1	; select bank1
  8651  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  8652  021D  0020               	movlb	0	; select bank0
  8653  021E  00C5               	movwf	___fldiv@b+1
  8654  021F  0021               	movlb	1	; select bank1
  8655  0220  085F               	movf	efgtoa@u^(0+128),w
  8656  0221  0020               	movlb	0	; select bank0
  8657  0222  00C4               	movwf	___fldiv@b
  8658  0223  3190  2061  3180   	fcall	___fldiv
  8659  0226  0020               	movlb	0	; select bank0
  8660  0227  0843               	movf	?___fldiv+3,w
  8661  0228  0021               	movlb	1	; select bank1
  8662  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8663  022A  0020               	movlb	0	; select bank0
  8664  022B  0842               	movf	?___fldiv+2,w
  8665  022C  0021               	movlb	1	; select bank1
  8666  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8667  022E  0020               	movlb	0	; select bank0
  8668  022F  0841               	movf	?___fldiv+1,w
  8669  0230  0021               	movlb	1	; select bank1
  8670  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8671  0232  0020               	movlb	0	; select bank0
  8672  0233  0840               	movf	?___fldiv,w
  8673  0234  0021               	movlb	1	; select bank1
  8674  0235  00DF               	movwf	efgtoa@u^(0+128)
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8677  0236  30FF               	movlw	255
  8678  0237  07DB               	addwf	efgtoa@e^(0+128),f
  8679  0238  30FF               	movlw	255
  8680  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8681  023A                     l7157:	
  8682                           
  8683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8684  023A  0021               	movlb	1	; select bank1
  8685  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  8686  023C  0020               	movlb	0	; select bank0
  8687  023D  00DD               	movwf	___flge@ff1+3
  8688  023E  0021               	movlb	1	; select bank1
  8689  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  8690  0240  0020               	movlb	0	; select bank0
  8691  0241  00DC               	movwf	___flge@ff1+2
  8692  0242  0021               	movlb	1	; select bank1
  8693  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  8694  0244  0020               	movlb	0	; select bank0
  8695  0245  00DB               	movwf	___flge@ff1+1
  8696  0246  0021               	movlb	1	; select bank1
  8697  0247  0857               	movf	efgtoa@g^(0+128),w
  8698  0248  0020               	movlb	0	; select bank0
  8699  0249  00DA               	movwf	___flge@ff1
  8700  024A  0021               	movlb	1	; select bank1
  8701  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  8702  024C  0020               	movlb	0	; select bank0
  8703  024D  00E1               	movwf	___flge@ff2+3
  8704  024E  0021               	movlb	1	; select bank1
  8705  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  8706  0250  0020               	movlb	0	; select bank0
  8707  0251  00E0               	movwf	___flge@ff2+2
  8708  0252  0021               	movlb	1	; select bank1
  8709  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  8710  0254  0020               	movlb	0	; select bank0
  8711  0255  00DF               	movwf	___flge@ff2+1
  8712  0256  0021               	movlb	1	; select bank1
  8713  0257  085F               	movf	efgtoa@u^(0+128),w
  8714  0258  0020               	movlb	0	; select bank0
  8715  0259  00DE               	movwf	___flge@ff2
  8716  025A  31AB  23C7  3180   	fcall	___flge
  8717  025D  1C03               	btfss	3,0
  8718  025E  2A0A               	goto	l7153
  8719  025F                     l7159:	
  8720                           
  8721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8722  025F  0021               	movlb	1	; select bank1
  8723  0260  0826               	movf	efgtoa@c^(0+128),w
  8724  0261  00A7               	movwf	??_efgtoa^(0+128)
  8725  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  8726  0263  0827               	movf	??_efgtoa^(0+128),w
  8727  0264  00F7               	movwf	tolower@c
  8728  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  8729  0266  00F8               	movwf	tolower@c+1
  8730  0267  31B6  26D2  3180   	fcall	_tolower
  8731  026A  0877               	movf	?_tolower,w
  8732  026B  0021               	movlb	1	; select bank1
  8733  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8734  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  8735  026E  00CC               	movwf	efgtoa@mode^(0+128)
  8736                           
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8738  026F  084C               	movf	efgtoa@mode^(0+128),w
  8739  0270  00A7               	movwf	??_efgtoa^(0+128)
  8740  0271  0827               	movf	??_efgtoa^(0+128),w
  8741  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  8742                           
  8743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8744  0273  3067               	movlw	103
  8745  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  8746  0275  1D03               	btfss	3,2
  8747  0276  2A93               	goto	l594
  8748                           
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8750  0277  0023               	movlb	3	; select bank3
  8751  0278  0840               	movf	_prec^(0+384),w
  8752  0279  0441               	iorwf	(_prec+1)^(0+384),w
  8753  027A  1D03               	btfss	3,2
  8754  027B  2A80               	goto	l595
  8755                           
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8757  027C  3001               	movlw	1
  8758  027D  00C0               	movwf	_prec^(0+384)
  8759  027E  3000               	movlw	0
  8760  027F  00C1               	movwf	(_prec^(0+384)+1)
  8761  0280                     l595:	
  8762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  8763                           
  8764                           
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8766  0280  0841               	movf	(_prec+1)^(0+384),w
  8767  0281  3A80               	xorlw	128
  8768  0282  0021               	movlb	1	; select bank1
  8769  0283  00A7               	movwf	??_efgtoa^(0+128)
  8770  0284  3080               	movlw	128
  8771  0285  0227               	subwf	??_efgtoa^(0+128),w
  8772  0286  1D03               	skipz
  8773  0287  2A8B               	goto	u10355
  8774  0288  3001               	movlw	1
  8775  0289  0023               	movlb	3	; select bank3
  8776  028A  0240               	subwf	_prec^(0+384),w
  8777  028B                     u10355:	
  8778  028B  1803               	skipnc
  8779  028C  2A96               	goto	l7171
  8780  028D                     l7169:	
  8781  028D  3006               	movlw	6
  8782  028E  0021               	movlb	1	; select bank1
  8783  028F  00C7               	movwf	efgtoa@p^(0+128)
  8784  0290  3000               	movlw	0
  8785  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  8786  0292  2A9E               	goto	l7177
  8787  0293                     l594:	
  8788                           
  8789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8790  0293  0023               	movlb	3	; select bank3
  8791  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  8792  0295  2A8D               	goto	l7169
  8793  0296                     l7171:	
  8794  0296  0023               	movlb	3	; select bank3
  8795  0297  0841               	movf	(_prec+1)^(0+384),w
  8796  0298  0021               	movlb	1	; select bank1
  8797  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  8798  029A  0023               	movlb	3	; select bank3
  8799  029B  0840               	movf	_prec^(0+384),w
  8800  029C  0021               	movlb	1	; select bank1
  8801  029D  00C7               	movwf	efgtoa@p^(0+128)
  8802  029E                     l7177:	
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8805  029E  3067               	movlw	103
  8806  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  8807  02A0  1D03               	btfss	3,2
  8808  02A1  2AC7               	goto	l605
  8809                           
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8811  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  8812  02A3  3A80               	xorlw	128
  8813  02A4  00A7               	movwf	??_efgtoa^(0+128)
  8814  02A5  307F               	movlw	127
  8815  02A6  0227               	subwf	??_efgtoa^(0+128),w
  8816  02A7  1D03               	skipz
  8817  02A8  2AAB               	goto	u10385
  8818  02A9  30FC               	movlw	252
  8819  02AA  025B               	subwf	efgtoa@e^(0+128),w
  8820  02AB                     u10385:	
  8821  02AB  1C03               	skipc
  8822  02AC  2AC2               	goto	l7185
  8823  02AD  0021               	movlb	1	; select bank1
  8824  02AE  0847               	movf	efgtoa@p^(0+128),w
  8825  02AF  3EFF               	addlw	255
  8826  02B0  00A7               	movwf	??_efgtoa^(0+128)
  8827  02B1  30FF               	movlw	255
  8828  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  8829  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  8830  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  8831  02B5  3A80               	xorlw	128
  8832  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8833  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  8834  02B8  3A80               	xorlw	128
  8835  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  8836  02BA  1D03               	skipz
  8837  02BB  2ABE               	goto	u10395
  8838  02BC  085B               	movf	efgtoa@e^(0+128),w
  8839  02BD  0227               	subwf	??_efgtoa^(0+128),w
  8840  02BE                     u10395:	
  8841  02BE  1C03               	skipc
  8842  02BF  2AC2               	goto	l7185
  8843                           
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8845  02C0  3066               	movlw	102
  8846  02C1  2AC3               	goto	L6
  8847  02C2                     l7185:	
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8849                           
  8850                           
  8851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  8852  02C2  3065               	movlw	101
  8853  02C3                     L6:	
  8854  02C3  0021               	movlb	1	; select bank1
  8855  02C4  00A7               	movwf	??_efgtoa^(0+128)
  8856  02C5  0827               	movf	??_efgtoa^(0+128),w
  8857  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  8858  02C7                     l605:	
  8859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  8860                           
  8861                           
  8862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  8863  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  8864  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  8865  02C9  0847               	movf	efgtoa@p^(0+128),w
  8866  02CA  00BF               	movwf	efgtoa@m^(0+128)
  8867                           
  8868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8869  02CB  3067               	movlw	103
  8870  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  8871  02CD  1D03               	btfss	3,2
  8872  02CE  2AD4               	goto	l7193
  8873  02CF  3066               	movlw	102
  8874  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  8875  02D1  1903               	btfsc	3,2
  8876  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8877  02D3  2AD8               	goto	l7195
  8878  02D4                     l7193:	
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  8881  02D4  3001               	movlw	1
  8882  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  8883  02D6  3000               	movlw	0
  8884  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8885  02D8                     l7195:	
  8886                           
  8887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  8888  02D8  3066               	movlw	102
  8889  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  8890  02DA  1D03               	btfss	3,2
  8891  02DB  2AF0               	goto	l7207
  8892                           
  8893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  8894  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8895  02DD  2AE8               	goto	l7203
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  8898  02DE  303F               	movlw	63
  8899  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8900  02E0  3080               	movlw	128
  8901  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8902  02E2  3000               	movlw	0
  8903  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8904  02E4  3000               	movlw	0
  8905  02E5  00DF               	movwf	efgtoa@u^(0+128)
  8906                           
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  8908  02E6  01DB               	clrf	efgtoa@e^(0+128)
  8909  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8910  02E8                     l7203:	
  8911                           
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  8913  02E8  3067               	movlw	103
  8914  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  8915  02EA  1903               	btfsc	3,2
  8916  02EB  2AF0               	goto	l7207
  8917                           
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  8919  02EC  085B               	movf	efgtoa@e^(0+128),w
  8920  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  8921  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  8922  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8923  02F0                     l7207:	
  8924                           
  8925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  8926  02F0  01D5               	clrf	efgtoa@i^(0+128)
  8927  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  8928                           
  8929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  8930  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  8931  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  8932  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  8933  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  8934  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  8935  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  8936  02F8  0857               	movf	efgtoa@g^(0+128),w
  8937  02F9  00CD               	movwf	efgtoa@h^(0+128)
  8938                           
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  8940  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8941  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  8942  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  8943  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  8944  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  8945  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  8946  0300  085F               	movf	efgtoa@u^(0+128),w
  8947  0301  00AB               	movwf	efgtoa@ou^(0+128)
  8948  0302                     l7217:	
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8950                           
  8951                           
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8953  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  8954  0303  3A80               	xorlw	128
  8955  0304  00A7               	movwf	??_efgtoa^(0+128)
  8956  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  8957  0306  3A80               	xorlw	128
  8958  0307  0227               	subwf	??_efgtoa^(0+128),w
  8959  0308  1D03               	skipz
  8960  0309  2B0C               	goto	u10465
  8961  030A  083F               	movf	efgtoa@m^(0+128),w
  8962  030B  0255               	subwf	efgtoa@i^(0+128),w
  8963  030C                     u10465:	
  8964  030C  1803               	btfsc	3,0
  8965  030D  2BE6               	goto	l7219
  8966                           
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  8968  030E  0021               	movlb	1	; select bank1
  8969  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  8970  0310  0020               	movlb	0	; select bank0
  8971  0311  00C3               	movwf	___fldiv@a+3
  8972  0312  0021               	movlb	1	; select bank1
  8973  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  8974  0314  0020               	movlb	0	; select bank0
  8975  0315  00C2               	movwf	___fldiv@a+2
  8976  0316  0021               	movlb	1	; select bank1
  8977  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  8978  0318  0020               	movlb	0	; select bank0
  8979  0319  00C1               	movwf	___fldiv@a+1
  8980  031A  0021               	movlb	1	; select bank1
  8981  031B  085F               	movf	efgtoa@u^(0+128),w
  8982  031C  0020               	movlb	0	; select bank0
  8983  031D  00C0               	movwf	___fldiv@a
  8984  031E  0021               	movlb	1	; select bank1
  8985  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  8986  0320  0020               	movlb	0	; select bank0
  8987  0321  00C7               	movwf	___fldiv@b+3
  8988  0322  0021               	movlb	1	; select bank1
  8989  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  8990  0324  0020               	movlb	0	; select bank0
  8991  0325  00C6               	movwf	___fldiv@b+2
  8992  0326  0021               	movlb	1	; select bank1
  8993  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  8994  0328  0020               	movlb	0	; select bank0
  8995  0329  00C5               	movwf	___fldiv@b+1
  8996  032A  0021               	movlb	1	; select bank1
  8997  032B  084D               	movf	efgtoa@h^(0+128),w
  8998  032C  0020               	movlb	0	; select bank0
  8999  032D  00C4               	movwf	___fldiv@b
  9000  032E  3190  2061  3180   	fcall	___fldiv
  9001  0331  0020               	movlb	0	; select bank0
  9002  0332  0843               	movf	?___fldiv+3,w
  9003  0333  00DD               	movwf	floorf@x+3
  9004  0334  0842               	movf	?___fldiv+2,w
  9005  0335  00DC               	movwf	floorf@x+2
  9006  0336  0841               	movf	?___fldiv+1,w
  9007  0337  00DB               	movwf	floorf@x+1
  9008  0338  0840               	movf	?___fldiv,w
  9009  0339  00DA               	movwf	floorf@x
  9010  033A  31A4  2485  3180   	fcall	_floorf
  9011  033D  0020               	movlb	0	; select bank0
  9012  033E  085D               	movf	?_floorf+3,w
  9013  033F  0021               	movlb	1	; select bank1
  9014  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9015  0341  0020               	movlb	0	; select bank0
  9016  0342  085C               	movf	?_floorf+2,w
  9017  0343  0021               	movlb	1	; select bank1
  9018  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9019  0345  0020               	movlb	0	; select bank0
  9020  0346  085B               	movf	?_floorf+1,w
  9021  0347  0021               	movlb	1	; select bank1
  9022  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9023  0349  0020               	movlb	0	; select bank0
  9024  034A  085A               	movf	?_floorf,w
  9025  034B  0021               	movlb	1	; select bank1
  9026  034C  00D1               	movwf	efgtoa@l^(0+128)
  9027                           
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9029  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
  9030  034E  0020               	movlb	0	; select bank0
  9031  034F  00DD               	movwf	___fltol@f1+3
  9032  0350  0021               	movlb	1	; select bank1
  9033  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
  9034  0352  0020               	movlb	0	; select bank0
  9035  0353  00DC               	movwf	___fltol@f1+2
  9036  0354  0021               	movlb	1	; select bank1
  9037  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
  9038  0356  0020               	movlb	0	; select bank0
  9039  0357  00DB               	movwf	___fltol@f1+1
  9040  0358  0021               	movlb	1	; select bank1
  9041  0359  0851               	movf	efgtoa@l^(0+128),w
  9042  035A  0020               	movlb	0	; select bank0
  9043  035B  00DA               	movwf	___fltol@f1
  9044  035C  31AA  2280  3180   	fcall	___fltol
  9045  035F  0020               	movlb	0	; select bank0
  9046  0360  085B               	movf	?___fltol+1,w
  9047  0361  0021               	movlb	1	; select bank1
  9048  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9049  0363  0020               	movlb	0	; select bank0
  9050  0364  085A               	movf	?___fltol,w
  9051  0365  0021               	movlb	1	; select bank1
  9052  0366  00C3               	movwf	efgtoa@d^(0+128)
  9053                           
  9054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9055  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
  9056  0368  0020               	movlb	0	; select bank0
  9057  0369  00AD               	movwf	___flmul@a+3
  9058  036A  0021               	movlb	1	; select bank1
  9059  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
  9060  036C  0020               	movlb	0	; select bank0
  9061  036D  00AC               	movwf	___flmul@a+2
  9062  036E  0021               	movlb	1	; select bank1
  9063  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9064  0370  0020               	movlb	0	; select bank0
  9065  0371  00AB               	movwf	___flmul@a+1
  9066  0372  0021               	movlb	1	; select bank1
  9067  0373  0851               	movf	efgtoa@l^(0+128),w
  9068  0374  0020               	movlb	0	; select bank0
  9069  0375  00AA               	movwf	___flmul@a
  9070  0376  0021               	movlb	1	; select bank1
  9071  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
  9072  0378  0020               	movlb	0	; select bank0
  9073  0379  00A9               	movwf	___flmul@b+3
  9074  037A  0021               	movlb	1	; select bank1
  9075  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
  9076  037C  0020               	movlb	0	; select bank0
  9077  037D  00A8               	movwf	___flmul@b+2
  9078  037E  0021               	movlb	1	; select bank1
  9079  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
  9080  0380  0020               	movlb	0	; select bank0
  9081  0381  00A7               	movwf	___flmul@b+1
  9082  0382  0021               	movlb	1	; select bank1
  9083  0383  085F               	movf	efgtoa@u^(0+128),w
  9084  0384  0020               	movlb	0	; select bank0
  9085  0385  00A6               	movwf	___flmul@b
  9086  0386  3195  25D4  3180   	fcall	___flmul
  9087  0389  0020               	movlb	0	; select bank0
  9088  038A  0829               	movf	?___flmul+3,w
  9089  038B  00C3               	movwf	___flsub@a+3
  9090  038C  0828               	movf	?___flmul+2,w
  9091  038D  00C2               	movwf	___flsub@a+2
  9092  038E  0827               	movf	?___flmul+1,w
  9093  038F  00C1               	movwf	___flsub@a+1
  9094  0390  0826               	movf	?___flmul,w
  9095  0391  00C0               	movwf	___flsub@a
  9096  0392  0021               	movlb	1	; select bank1
  9097  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
  9098  0394  0020               	movlb	0	; select bank0
  9099  0395  00C7               	movwf	___flsub@b+3
  9100  0396  0021               	movlb	1	; select bank1
  9101  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
  9102  0398  0020               	movlb	0	; select bank0
  9103  0399  00C6               	movwf	___flsub@b+2
  9104  039A  0021               	movlb	1	; select bank1
  9105  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
  9106  039C  0020               	movlb	0	; select bank0
  9107  039D  00C5               	movwf	___flsub@b+1
  9108  039E  0021               	movlb	1	; select bank1
  9109  039F  084D               	movf	efgtoa@h^(0+128),w
  9110  03A0  0020               	movlb	0	; select bank0
  9111  03A1  00C4               	movwf	___flsub@b
  9112  03A2  31B6  2651  3180   	fcall	___flsub
  9113  03A5  0020               	movlb	0	; select bank0
  9114  03A6  0843               	movf	?___flsub+3,w
  9115  03A7  0021               	movlb	1	; select bank1
  9116  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9117  03A9  0020               	movlb	0	; select bank0
  9118  03AA  0842               	movf	?___flsub+2,w
  9119  03AB  0021               	movlb	1	; select bank1
  9120  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9121  03AD  0020               	movlb	0	; select bank0
  9122  03AE  0841               	movf	?___flsub+1,w
  9123  03AF  0021               	movlb	1	; select bank1
  9124  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9125  03B1  0020               	movlb	0	; select bank0
  9126  03B2  0840               	movf	?___flsub,w
  9127  03B3  0021               	movlb	1	; select bank1
  9128  03B4  00CD               	movwf	efgtoa@h^(0+128)
  9129                           
  9130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9131  03B5  3041               	movlw	65
  9132  03B6  0020               	movlb	0	; select bank0
  9133  03B7  00C3               	movwf	___fldiv@a+3
  9134  03B8  3020               	movlw	32
  9135  03B9  00C2               	movwf	___fldiv@a+2
  9136  03BA  3000               	movlw	0
  9137  03BB  00C1               	movwf	___fldiv@a+1
  9138  03BC  3000               	movlw	0
  9139  03BD  00C0               	movwf	___fldiv@a
  9140  03BE  0021               	movlb	1	; select bank1
  9141  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
  9142  03C0  0020               	movlb	0	; select bank0
  9143  03C1  00C7               	movwf	___fldiv@b+3
  9144  03C2  0021               	movlb	1	; select bank1
  9145  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
  9146  03C4  0020               	movlb	0	; select bank0
  9147  03C5  00C6               	movwf	___fldiv@b+2
  9148  03C6  0021               	movlb	1	; select bank1
  9149  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
  9150  03C8  0020               	movlb	0	; select bank0
  9151  03C9  00C5               	movwf	___fldiv@b+1
  9152  03CA  0021               	movlb	1	; select bank1
  9153  03CB  085F               	movf	efgtoa@u^(0+128),w
  9154  03CC  0020               	movlb	0	; select bank0
  9155  03CD  00C4               	movwf	___fldiv@b
  9156  03CE  3190  2061  3180   	fcall	___fldiv
  9157  03D1  0020               	movlb	0	; select bank0
  9158  03D2  0843               	movf	?___fldiv+3,w
  9159  03D3  0021               	movlb	1	; select bank1
  9160  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9161  03D5  0020               	movlb	0	; select bank0
  9162  03D6  0842               	movf	?___fldiv+2,w
  9163  03D7  0021               	movlb	1	; select bank1
  9164  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9165  03D9  0020               	movlb	0	; select bank0
  9166  03DA  0841               	movf	?___fldiv+1,w
  9167  03DB  0021               	movlb	1	; select bank1
  9168  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9169  03DD  0020               	movlb	0	; select bank0
  9170  03DE  0840               	movf	?___fldiv,w
  9171  03DF  0021               	movlb	1	; select bank1
  9172  03E0  00DF               	movwf	efgtoa@u^(0+128)
  9173                           
  9174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9175  03E1  3001               	movlw	1
  9176  03E2  07D5               	addwf	efgtoa@i^(0+128),f
  9177  03E3  3000               	movlw	0
  9178  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9179  03E5  2B02               	goto	l7217
  9180  03E6                     l7219:	
  9181                           
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9183  03E6  3040               	movlw	64
  9184  03E7  0020               	movlb	0	; select bank0
  9185  03E8  00A9               	movwf	___flmul@b+3
  9186  03E9  30A0               	movlw	160
  9187  03EA  00A8               	movwf	___flmul@b+2
  9188  03EB  3000               	movlw	0
  9189  03EC  00A7               	movwf	___flmul@b+1
  9190  03ED  3000               	movlw	0
  9191  03EE  00A6               	movwf	___flmul@b
  9192  03EF  0021               	movlb	1	; select bank1
  9193  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
  9194  03F1  0020               	movlb	0	; select bank0
  9195  03F2  00AD               	movwf	___flmul@a+3
  9196  03F3  0021               	movlb	1	; select bank1
  9197  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
  9198  03F5  0020               	movlb	0	; select bank0
  9199  03F6  00AC               	movwf	___flmul@a+2
  9200  03F7  0021               	movlb	1	; select bank1
  9201  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
  9202  03F9  0020               	movlb	0	; select bank0
  9203  03FA  00AB               	movwf	___flmul@a+1
  9204  03FB  0021               	movlb	1	; select bank1
  9205  03FC  085F               	movf	efgtoa@u^(0+128),w
  9206  03FD  0020               	movlb	0	; select bank0
  9207  03FE  00AA               	movwf	___flmul@a
  9208  03FF  3195  25D4  3180   	fcall	___flmul
  9209  0402  0020               	movlb	0	; select bank0
  9210  0403  0829               	movf	?___flmul+3,w
  9211  0404  0021               	movlb	1	; select bank1
  9212  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9213  0406  0020               	movlb	0	; select bank0
  9214  0407  0828               	movf	?___flmul+2,w
  9215  0408  0021               	movlb	1	; select bank1
  9216  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9217  040A  0020               	movlb	0	; select bank0
  9218  040B  0827               	movf	?___flmul+1,w
  9219  040C  0021               	movlb	1	; select bank1
  9220  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9221  040E  0020               	movlb	0	; select bank0
  9222  040F  0826               	movf	?___flmul,w
  9223  0410  0021               	movlb	1	; select bank1
  9224  0411  00D1               	movwf	efgtoa@l^(0+128)
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9227  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
  9228  0413  0020               	movlb	0	; select bank0
  9229  0414  00DD               	movwf	___flge@ff1+3
  9230  0415  0021               	movlb	1	; select bank1
  9231  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
  9232  0417  0020               	movlb	0	; select bank0
  9233  0418  00DC               	movwf	___flge@ff1+2
  9234  0419  0021               	movlb	1	; select bank1
  9235  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
  9236  041B  0020               	movlb	0	; select bank0
  9237  041C  00DB               	movwf	___flge@ff1+1
  9238  041D  0021               	movlb	1	; select bank1
  9239  041E  084D               	movf	efgtoa@h^(0+128),w
  9240  041F  0020               	movlb	0	; select bank0
  9241  0420  00DA               	movwf	___flge@ff1
  9242  0421  0021               	movlb	1	; select bank1
  9243  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
  9244  0423  0020               	movlb	0	; select bank0
  9245  0424  00E1               	movwf	___flge@ff2+3
  9246  0425  0021               	movlb	1	; select bank1
  9247  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
  9248  0427  0020               	movlb	0	; select bank0
  9249  0428  00E0               	movwf	___flge@ff2+2
  9250  0429  0021               	movlb	1	; select bank1
  9251  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
  9252  042B  0020               	movlb	0	; select bank0
  9253  042C  00DF               	movwf	___flge@ff2+1
  9254  042D  0021               	movlb	1	; select bank1
  9255  042E  0851               	movf	efgtoa@l^(0+128),w
  9256  042F  0020               	movlb	0	; select bank0
  9257  0430  00DE               	movwf	___flge@ff2
  9258  0431  31AB  23C7  3180   	fcall	___flge
  9259  0434  1803               	btfsc	3,0
  9260  0435  2C39               	goto	l7223
  9261                           
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9263  0436  3000               	movlw	0
  9264  0437  0021               	movlb	1	; select bank1
  9265  0438  2C53               	goto	L7
  9266  0439                     l7223:	
  9267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9268                           
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9271  0439  0021               	movlb	1	; select bank1
  9272  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
  9273  043B  00F4               	movwf	___fleq@ff1+3
  9274  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
  9275  043D  00F3               	movwf	___fleq@ff1+2
  9276  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
  9277  043F  00F2               	movwf	___fleq@ff1+1
  9278  0440  084D               	movf	efgtoa@h^(0+128),w
  9279  0441  00F1               	movwf	___fleq@ff1
  9280  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
  9281  0443  00F8               	movwf	___fleq@ff2+3
  9282  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
  9283  0445  00F7               	movwf	___fleq@ff2+2
  9284  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
  9285  0447  00F6               	movwf	___fleq@ff2+1
  9286  0448  0851               	movf	efgtoa@l^(0+128),w
  9287  0449  00F5               	movwf	___fleq@ff2
  9288  044A  31A8  20A3  3180   	fcall	___fleq
  9289  044D  1C03               	btfss	3,0
  9290  044E  2C5A               	goto	l7229
  9291  044F  0021               	movlb	1	; select bank1
  9292  0450  1843               	btfsc	efgtoa@d^(0+128),0
  9293  0451  2C5A               	goto	l7229
  9294                           
  9295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9296  0452  3000               	movlw	0
  9297  0453                     L7:	
  9298  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9299  0454  3000               	movlw	0
  9300  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9301  0456  3000               	movlw	0
  9302  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9303  0458  3000               	movlw	0
  9304  0459  00D1               	movwf	efgtoa@l^(0+128)
  9305  045A                     l7229:	
  9306                           
  9307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9308  045A  0021               	movlb	1	; select bank1
  9309  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
  9310  045C  00F4               	movwf	___fladd@b+3
  9311  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
  9312  045E  00F3               	movwf	___fladd@b+2
  9313  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9314  0460  00F2               	movwf	___fladd@b+1
  9315  0461  0851               	movf	efgtoa@l^(0+128),w
  9316  0462  00F1               	movwf	___fladd@b
  9317  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
  9318  0464  00F8               	movwf	___fladd@a+3
  9319  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
  9320  0466  00F7               	movwf	___fladd@a+2
  9321  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
  9322  0468  00F6               	movwf	___fladd@a+1
  9323  0469  0857               	movf	efgtoa@g^(0+128),w
  9324  046A  00F5               	movwf	___fladd@a
  9325  046B  3191  21DB  3180   	fcall	___fladd
  9326  046E  0874               	movf	?___fladd+3,w
  9327  046F  0021               	movlb	1	; select bank1
  9328  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9329  0471  0873               	movf	?___fladd+2,w
  9330  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9331  0473  0872               	movf	?___fladd+1,w
  9332  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9333  0475  0871               	movf	?___fladd,w
  9334  0476  00CD               	movwf	efgtoa@h^(0+128)
  9335                           
  9336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9337  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
  9338  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9339  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
  9340  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9341  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
  9342  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9343  047D  082B               	movf	efgtoa@ou^(0+128),w
  9344  047E  00DF               	movwf	efgtoa@u^(0+128)
  9345                           
  9346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9347  047F  3065               	movlw	101
  9348  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
  9349  0481  1903               	btfsc	3,2
  9350  0482  2C88               	goto	l7237
  9351  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
  9352  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
  9353  0485  085B               	movf	efgtoa@e^(0+128),w
  9354  0486  00C1               	movwf	efgtoa@ne^(0+128)
  9355  0487  2C8A               	goto	l623
  9356  0488                     l7237:	
  9357  0488  01C1               	clrf	efgtoa@ne^(0+128)
  9358  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
  9359  048A                     l623:	
  9360                           
  9361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9362  048A  01BD               	clrf	efgtoa@pp^(0+128)
  9363  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
  9364                           
  9365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9366  048C  01BB               	clrf	efgtoa@t^(0+128)
  9367  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
  9368                           
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9370  048E  01D5               	clrf	efgtoa@i^(0+128)
  9371  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9372                           
  9373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9374  0490  2DC5               	goto	l7287
  9375  0491                     l7239:	
  9376                           
  9377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9378  0491  0021               	movlb	1	; select bank1
  9379  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
  9380  0493  0020               	movlb	0	; select bank0
  9381  0494  00C3               	movwf	___fldiv@a+3
  9382  0495  0021               	movlb	1	; select bank1
  9383  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
  9384  0497  0020               	movlb	0	; select bank0
  9385  0498  00C2               	movwf	___fldiv@a+2
  9386  0499  0021               	movlb	1	; select bank1
  9387  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
  9388  049B  0020               	movlb	0	; select bank0
  9389  049C  00C1               	movwf	___fldiv@a+1
  9390  049D  0021               	movlb	1	; select bank1
  9391  049E  085F               	movf	efgtoa@u^(0+128),w
  9392  049F  0020               	movlb	0	; select bank0
  9393  04A0  00C0               	movwf	___fldiv@a
  9394  04A1  0021               	movlb	1	; select bank1
  9395  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
  9396  04A3  0020               	movlb	0	; select bank0
  9397  04A4  00C7               	movwf	___fldiv@b+3
  9398  04A5  0021               	movlb	1	; select bank1
  9399  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
  9400  04A7  0020               	movlb	0	; select bank0
  9401  04A8  00C6               	movwf	___fldiv@b+2
  9402  04A9  0021               	movlb	1	; select bank1
  9403  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
  9404  04AB  0020               	movlb	0	; select bank0
  9405  04AC  00C5               	movwf	___fldiv@b+1
  9406  04AD  0021               	movlb	1	; select bank1
  9407  04AE  084D               	movf	efgtoa@h^(0+128),w
  9408  04AF  0020               	movlb	0	; select bank0
  9409  04B0  00C4               	movwf	___fldiv@b
  9410  04B1  3190  2061  3180   	fcall	___fldiv
  9411  04B4  0020               	movlb	0	; select bank0
  9412  04B5  0843               	movf	?___fldiv+3,w
  9413  04B6  00DD               	movwf	floorf@x+3
  9414  04B7  0842               	movf	?___fldiv+2,w
  9415  04B8  00DC               	movwf	floorf@x+2
  9416  04B9  0841               	movf	?___fldiv+1,w
  9417  04BA  00DB               	movwf	floorf@x+1
  9418  04BB  0840               	movf	?___fldiv,w
  9419  04BC  00DA               	movwf	floorf@x
  9420  04BD  31A4  2485  3180   	fcall	_floorf
  9421  04C0  0020               	movlb	0	; select bank0
  9422  04C1  085D               	movf	?_floorf+3,w
  9423  04C2  0021               	movlb	1	; select bank1
  9424  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9425  04C4  0020               	movlb	0	; select bank0
  9426  04C5  085C               	movf	?_floorf+2,w
  9427  04C6  0021               	movlb	1	; select bank1
  9428  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9429  04C8  0020               	movlb	0	; select bank0
  9430  04C9  085B               	movf	?_floorf+1,w
  9431  04CA  0021               	movlb	1	; select bank1
  9432  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9433  04CC  0020               	movlb	0	; select bank0
  9434  04CD  085A               	movf	?_floorf,w
  9435  04CE  0021               	movlb	1	; select bank1
  9436  04CF  00D1               	movwf	efgtoa@l^(0+128)
  9437                           
  9438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9439  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
  9440  04D1  0020               	movlb	0	; select bank0
  9441  04D2  00DD               	movwf	___fltol@f1+3
  9442  04D3  0021               	movlb	1	; select bank1
  9443  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
  9444  04D5  0020               	movlb	0	; select bank0
  9445  04D6  00DC               	movwf	___fltol@f1+2
  9446  04D7  0021               	movlb	1	; select bank1
  9447  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
  9448  04D9  0020               	movlb	0	; select bank0
  9449  04DA  00DB               	movwf	___fltol@f1+1
  9450  04DB  0021               	movlb	1	; select bank1
  9451  04DC  0851               	movf	efgtoa@l^(0+128),w
  9452  04DD  0020               	movlb	0	; select bank0
  9453  04DE  00DA               	movwf	___fltol@f1
  9454  04DF  31AA  2280  3180   	fcall	___fltol
  9455  04E2  0020               	movlb	0	; select bank0
  9456  04E3  085B               	movf	?___fltol+1,w
  9457  04E4  0021               	movlb	1	; select bank1
  9458  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9459  04E6  0020               	movlb	0	; select bank0
  9460  04E7  085A               	movf	?___fltol,w
  9461  04E8  0021               	movlb	1	; select bank1
  9462  04E9  00C3               	movwf	efgtoa@d^(0+128)
  9463                           
  9464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9465  04EA  0023               	movlb	3	; select bank3
  9466  04EB  1A42               	btfsc	_flags^(0+384),4
  9467  04EC  2CFC               	goto	l7251
  9468  04ED  0021               	movlb	1	; select bank1
  9469  04EE  0843               	movf	efgtoa@d^(0+128),w
  9470  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
  9471  04F0  1D03               	btfss	3,2
  9472  04F1  2CFC               	goto	l7251
  9473  04F2  3067               	movlw	103
  9474  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
  9475  04F4  1903               	btfsc	3,2
  9476  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9477  04F6  2CFC               	goto	l7251
  9478                           
  9479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9480  04F7  3001               	movlw	1
  9481  04F8  07BB               	addwf	efgtoa@t^(0+128),f
  9482  04F9  3000               	movlw	0
  9483  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9484                           
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9486  04FB  2D43               	goto	l7279
  9487  04FC                     l7251:	
  9488                           
  9489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9490  04FC  0021               	movlb	1	; select bank1
  9491  04FD  083D               	movf	efgtoa@pp^(0+128),w
  9492  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9493  04FF  1903               	btfsc	3,2
  9494  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9495  0501  2D17               	goto	l7271
  9496                           
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9498  0502  302E               	movlw	46
  9499  0503  00A7               	movwf	??_efgtoa^(0+128)
  9500  0504  085D               	movf	efgtoa@n^(0+128),w
  9501  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9502  0506  0086               	movwf	6
  9503  0507  3002               	movlw	2	; select bank4/5
  9504  0508  0087               	movwf	7
  9505  0509  0827               	movf	??_efgtoa^(0+128),w
  9506  050A  0081               	movwf	1
  9507  050B  3001               	movlw	1
  9508  050C  07DD               	addwf	efgtoa@n^(0+128),f
  9509  050D  3000               	movlw	0
  9510  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9511                           
  9512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9513  050F  30FF               	movlw	255
  9514  0510  07CA               	addwf	efgtoa@w^(0+128),f
  9515  0511  30FF               	movlw	255
  9516  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9517                           
  9518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9519  0513  3001               	movlw	1
  9520  0514  00BD               	movwf	efgtoa@pp^(0+128)
  9521  0515  3000               	movlw	0
  9522  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
  9523  0517                     l7271:	
  9524                           
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9526  0517  083B               	movf	efgtoa@t^(0+128),w
  9527  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
  9528  0519  1903               	btfsc	3,2
  9529  051A  2D31               	goto	l7273
  9530                           
  9531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9532  051B  3030               	movlw	48
  9533  051C  00A7               	movwf	??_efgtoa^(0+128)
  9534  051D  085D               	movf	efgtoa@n^(0+128),w
  9535  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9536  051F  0086               	movwf	6
  9537  0520  3002               	movlw	2	; select bank4/5
  9538  0521  0087               	movwf	7
  9539  0522  0827               	movf	??_efgtoa^(0+128),w
  9540  0523  0081               	movwf	1
  9541  0524  3001               	movlw	1
  9542  0525  07DD               	addwf	efgtoa@n^(0+128),f
  9543  0526  3000               	movlw	0
  9544  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9545                           
  9546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9547  0528  30FF               	movlw	255
  9548  0529  07CA               	addwf	efgtoa@w^(0+128),f
  9549  052A  30FF               	movlw	255
  9550  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9551                           
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9553  052C  30FF               	movlw	255
  9554  052D  07BB               	addwf	efgtoa@t^(0+128),f
  9555  052E  30FF               	movlw	255
  9556  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9557  0530  2D17               	goto	l7271
  9558  0531                     l7273:	
  9559                           
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9561  0531  0843               	movf	efgtoa@d^(0+128),w
  9562  0532  3E30               	addlw	48
  9563  0533  00A7               	movwf	??_efgtoa^(0+128)
  9564  0534  085D               	movf	efgtoa@n^(0+128),w
  9565  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9566  0536  0086               	movwf	6
  9567  0537  3002               	movlw	2	; select bank4/5
  9568  0538  0087               	movwf	7
  9569  0539  0827               	movf	??_efgtoa^(0+128),w
  9570  053A  0081               	movwf	1
  9571  053B  3001               	movlw	1
  9572  053C  07DD               	addwf	efgtoa@n^(0+128),f
  9573  053D  3000               	movlw	0
  9574  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9575                           
  9576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9577  053F  30FF               	movlw	255
  9578  0540  07CA               	addwf	efgtoa@w^(0+128),f
  9579  0541  30FF               	movlw	255
  9580  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9581  0543                     l7279:	
  9582                           
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9584  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
  9585  0544  0020               	movlb	0	; select bank0
  9586  0545  00AD               	movwf	___flmul@a+3
  9587  0546  0021               	movlb	1	; select bank1
  9588  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
  9589  0548  0020               	movlb	0	; select bank0
  9590  0549  00AC               	movwf	___flmul@a+2
  9591  054A  0021               	movlb	1	; select bank1
  9592  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
  9593  054C  0020               	movlb	0	; select bank0
  9594  054D  00AB               	movwf	___flmul@a+1
  9595  054E  0021               	movlb	1	; select bank1
  9596  054F  0851               	movf	efgtoa@l^(0+128),w
  9597  0550  0020               	movlb	0	; select bank0
  9598  0551  00AA               	movwf	___flmul@a
  9599  0552  0021               	movlb	1	; select bank1
  9600  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
  9601  0554  0020               	movlb	0	; select bank0
  9602  0555  00A9               	movwf	___flmul@b+3
  9603  0556  0021               	movlb	1	; select bank1
  9604  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
  9605  0558  0020               	movlb	0	; select bank0
  9606  0559  00A8               	movwf	___flmul@b+2
  9607  055A  0021               	movlb	1	; select bank1
  9608  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
  9609  055C  0020               	movlb	0	; select bank0
  9610  055D  00A7               	movwf	___flmul@b+1
  9611  055E  0021               	movlb	1	; select bank1
  9612  055F  085F               	movf	efgtoa@u^(0+128),w
  9613  0560  0020               	movlb	0	; select bank0
  9614  0561  00A6               	movwf	___flmul@b
  9615  0562  3195  25D4  3180   	fcall	___flmul
  9616  0565  0020               	movlb	0	; select bank0
  9617  0566  0829               	movf	?___flmul+3,w
  9618  0567  00C3               	movwf	___flsub@a+3
  9619  0568  0828               	movf	?___flmul+2,w
  9620  0569  00C2               	movwf	___flsub@a+2
  9621  056A  0827               	movf	?___flmul+1,w
  9622  056B  00C1               	movwf	___flsub@a+1
  9623  056C  0826               	movf	?___flmul,w
  9624  056D  00C0               	movwf	___flsub@a
  9625  056E  0021               	movlb	1	; select bank1
  9626  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9627  0570  0020               	movlb	0	; select bank0
  9628  0571  00C7               	movwf	___flsub@b+3
  9629  0572  0021               	movlb	1	; select bank1
  9630  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
  9631  0574  0020               	movlb	0	; select bank0
  9632  0575  00C6               	movwf	___flsub@b+2
  9633  0576  0021               	movlb	1	; select bank1
  9634  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
  9635  0578  0020               	movlb	0	; select bank0
  9636  0579  00C5               	movwf	___flsub@b+1
  9637  057A  0021               	movlb	1	; select bank1
  9638  057B  084D               	movf	efgtoa@h^(0+128),w
  9639  057C  0020               	movlb	0	; select bank0
  9640  057D  00C4               	movwf	___flsub@b
  9641  057E  31B6  2651  3180   	fcall	___flsub
  9642  0581  0020               	movlb	0	; select bank0
  9643  0582  0843               	movf	?___flsub+3,w
  9644  0583  0021               	movlb	1	; select bank1
  9645  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9646  0585  0020               	movlb	0	; select bank0
  9647  0586  0842               	movf	?___flsub+2,w
  9648  0587  0021               	movlb	1	; select bank1
  9649  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9650  0589  0020               	movlb	0	; select bank0
  9651  058A  0841               	movf	?___flsub+1,w
  9652  058B  0021               	movlb	1	; select bank1
  9653  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9654  058D  0020               	movlb	0	; select bank0
  9655  058E  0840               	movf	?___flsub,w
  9656  058F  0021               	movlb	1	; select bank1
  9657  0590  00CD               	movwf	efgtoa@h^(0+128)
  9658                           
  9659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9660  0591  3041               	movlw	65
  9661  0592  0020               	movlb	0	; select bank0
  9662  0593  00C3               	movwf	___fldiv@a+3
  9663  0594  3020               	movlw	32
  9664  0595  00C2               	movwf	___fldiv@a+2
  9665  0596  3000               	movlw	0
  9666  0597  00C1               	movwf	___fldiv@a+1
  9667  0598  3000               	movlw	0
  9668  0599  00C0               	movwf	___fldiv@a
  9669  059A  0021               	movlb	1	; select bank1
  9670  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9671  059C  0020               	movlb	0	; select bank0
  9672  059D  00C7               	movwf	___fldiv@b+3
  9673  059E  0021               	movlb	1	; select bank1
  9674  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9675  05A0  0020               	movlb	0	; select bank0
  9676  05A1  00C6               	movwf	___fldiv@b+2
  9677  05A2  0021               	movlb	1	; select bank1
  9678  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
  9679  05A4  0020               	movlb	0	; select bank0
  9680  05A5  00C5               	movwf	___fldiv@b+1
  9681  05A6  0021               	movlb	1	; select bank1
  9682  05A7  085F               	movf	efgtoa@u^(0+128),w
  9683  05A8  0020               	movlb	0	; select bank0
  9684  05A9  00C4               	movwf	___fldiv@b
  9685  05AA  3190  2061  3180   	fcall	___fldiv
  9686  05AD  0020               	movlb	0	; select bank0
  9687  05AE  0843               	movf	?___fldiv+3,w
  9688  05AF  0021               	movlb	1	; select bank1
  9689  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9690  05B1  0020               	movlb	0	; select bank0
  9691  05B2  0842               	movf	?___fldiv+2,w
  9692  05B3  0021               	movlb	1	; select bank1
  9693  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9694  05B5  0020               	movlb	0	; select bank0
  9695  05B6  0841               	movf	?___fldiv+1,w
  9696  05B7  0021               	movlb	1	; select bank1
  9697  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9698  05B9  0020               	movlb	0	; select bank0
  9699  05BA  0840               	movf	?___fldiv,w
  9700  05BB  0021               	movlb	1	; select bank1
  9701  05BC  00DF               	movwf	efgtoa@u^(0+128)
  9702                           
  9703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9704  05BD  30FF               	movlw	255
  9705  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
  9706  05BF  30FF               	movlw	255
  9707  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
  9708                           
  9709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9710  05C1  3001               	movlw	1
  9711  05C2  07D5               	addwf	efgtoa@i^(0+128),f
  9712  05C3  3000               	movlw	0
  9713  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9714  05C5                     l7287:	
  9715                           
  9716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9717  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
  9718  05C6  3A80               	xorlw	128
  9719  05C7  00A7               	movwf	??_efgtoa^(0+128)
  9720  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
  9721  05C9  3A80               	xorlw	128
  9722  05CA  0227               	subwf	??_efgtoa^(0+128),w
  9723  05CB  1D03               	skipz
  9724  05CC  2DCF               	goto	u10585
  9725  05CD  083F               	movf	efgtoa@m^(0+128),w
  9726  05CE  0255               	subwf	efgtoa@i^(0+128),w
  9727  05CF                     u10585:	
  9728  05CF  1803               	skipnc
  9729  05D0  2DDD               	goto	l7291
  9730  05D1  0021               	movlb	1	; select bank1
  9731  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
  9732  05D3  3A80               	xorlw	128
  9733  05D4  00A7               	movwf	??_efgtoa^(0+128)
  9734  05D5  3080               	movlw	128
  9735  05D6  0227               	subwf	??_efgtoa^(0+128),w
  9736  05D7  1D03               	skipz
  9737  05D8  2DDB               	goto	u10595
  9738  05D9  304B               	movlw	75
  9739  05DA  025D               	subwf	efgtoa@n^(0+128),w
  9740  05DB                     u10595:	
  9741  05DB  1C03               	skipc
  9742  05DC  2C91               	goto	l7239
  9743  05DD                     l7291:	
  9744                           
  9745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9746  05DD  0021               	movlb	1	; select bank1
  9747  05DE  083D               	movf	efgtoa@pp^(0+128),w
  9748  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9749  05E0  1D03               	btfss	3,2
  9750  05E1  2DF3               	goto	l7299
  9751  05E2  0023               	movlb	3	; select bank3
  9752  05E3  1E42               	btfss	_flags^(0+384),4
  9753  05E4  2DF3               	goto	l7299
  9754                           
  9755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9756  05E5  302E               	movlw	46
  9757  05E6  0021               	movlb	1	; select bank1
  9758  05E7  00A7               	movwf	??_efgtoa^(0+128)
  9759  05E8  085D               	movf	efgtoa@n^(0+128),w
  9760  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9761  05EA  0086               	movwf	6
  9762  05EB  3002               	movlw	2	; select bank4/5
  9763  05EC  0087               	movwf	7
  9764  05ED  0827               	movf	??_efgtoa^(0+128),w
  9765  05EE  0081               	movwf	1
  9766  05EF  3001               	movlw	1
  9767  05F0  07DD               	addwf	efgtoa@n^(0+128),f
  9768  05F1  3000               	movlw	0
  9769  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9770  05F3                     l7299:	
  9771                           
  9772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9773  05F3  0021               	movlb	1	; select bank1
  9774  05F4  085D               	movf	efgtoa@n^(0+128),w
  9775  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9776  05F6  0086               	movwf	6
  9777  05F7  3002               	movlw	2	; select bank4/5
  9778  05F8  0087               	movwf	7
  9779  05F9  0181               	clrf	1
  9780                           
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9782  05FA  3065               	movlw	101
  9783  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
  9784  05FC  1D03               	btfss	3,2
  9785  05FD  2EB4               	goto	l7361
  9786                           
  9787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9788  05FE  304F               	movlw	79
  9789  05FF  00D5               	movwf	efgtoa@i^(0+128)
  9790  0600  3000               	movlw	0
  9791  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
  9792                           
  9793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9794  0602  0855               	movf	efgtoa@i^(0+128),w
  9795  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9796  0604  0086               	movwf	6
  9797  0605  3002               	movlw	2	; select bank4/5
  9798  0606  0087               	movwf	7
  9799  0607  0181               	clrf	1
  9800                           
  9801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9802  0608  01C5               	clrf	efgtoa@sign^(0+128)
  9803  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9804                           
  9805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9806  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9807  060B  2E15               	goto	l7315
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9810  060C  3001               	movlw	1
  9811  060D  00C5               	movwf	efgtoa@sign^(0+128)
  9812  060E  3000               	movlw	0
  9813  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9814                           
  9815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9816  0610  09DB               	comf	efgtoa@e^(0+128),f
  9817  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
  9818  0612  0ADB               	incf	efgtoa@e^(0+128),f
  9819  0613  1903               	skipnz
  9820  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
  9821  0615                     l7315:	
  9822                           
  9823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9824  0615  3002               	movlw	2
  9825  0616  00C7               	movwf	efgtoa@p^(0+128)
  9826  0617  3000               	movlw	0
  9827  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9828  0619                     l7327:	
  9829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9830                           
  9831                           
  9832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9833  0619  085B               	movf	efgtoa@e^(0+128),w
  9834  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
  9835  061B  1903               	btfsc	3,2
  9836  061C  2E51               	goto	l7329
  9837  061D                     l7317:	
  9838                           
  9839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9840  061D  30FF               	movlw	255
  9841  061E  0021               	movlb	1	; select bank1
  9842  061F  07D5               	addwf	efgtoa@i^(0+128),f
  9843  0620  30FF               	movlw	255
  9844  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9845                           
  9846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9847  0622  300A               	movlw	10
  9848  0623  00F1               	movwf	___awmod@divisor
  9849  0624  3000               	movlw	0
  9850  0625  00F2               	movwf	___awmod@divisor+1
  9851  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
  9852  0627  00F4               	movwf	___awmod@dividend+1
  9853  0628  085B               	movf	efgtoa@e^(0+128),w
  9854  0629  00F3               	movwf	___awmod@dividend
  9855  062A  31A8  205E  3180   	fcall	___awmod
  9856  062D  0871               	movf	?___awmod,w
  9857  062E  3E30               	addlw	48
  9858  062F  0021               	movlb	1	; select bank1
  9859  0630  00A7               	movwf	??_efgtoa^(0+128)
  9860  0631  0855               	movf	efgtoa@i^(0+128),w
  9861  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9862  0633  0086               	movwf	6
  9863  0634  3002               	movlw	2	; select bank4/5
  9864  0635  0087               	movwf	7
  9865  0636  0827               	movf	??_efgtoa^(0+128),w
  9866  0637  0081               	movwf	1
  9867                           
  9868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9869  0638  300A               	movlw	10
  9870  0639  00F1               	movwf	___awdiv@divisor
  9871  063A  3000               	movlw	0
  9872  063B  00F2               	movwf	___awdiv@divisor+1
  9873  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
  9874  063D  00F4               	movwf	___awdiv@dividend+1
  9875  063E  085B               	movf	efgtoa@e^(0+128),w
  9876  063F  00F3               	movwf	___awdiv@dividend
  9877  0640  31A9  21DD  3180   	fcall	___awdiv
  9878  0643  0872               	movf	?___awdiv+1,w
  9879  0644  0021               	movlb	1	; select bank1
  9880  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
  9881  0646  0871               	movf	?___awdiv,w
  9882  0647  00DB               	movwf	efgtoa@e^(0+128)
  9883                           
  9884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9885  0648  30FF               	movlw	255
  9886  0649  07C7               	addwf	efgtoa@p^(0+128),f
  9887  064A  30FF               	movlw	255
  9888  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
  9889                           
  9890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9891  064C  30FF               	movlw	255
  9892  064D  07CA               	addwf	efgtoa@w^(0+128),f
  9893  064E  30FF               	movlw	255
  9894  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9895  0650  2E19               	goto	l7327
  9896  0651                     l7329:	
  9897  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
  9898  0652  3A80               	xorlw	128
  9899  0653  00A7               	movwf	??_efgtoa^(0+128)
  9900  0654  3080               	movlw	128
  9901  0655  0227               	subwf	??_efgtoa^(0+128),w
  9902  0656  1D03               	skipz
  9903  0657  2E5A               	goto	u10655
  9904  0658  3001               	movlw	1
  9905  0659  0247               	subwf	efgtoa@p^(0+128),w
  9906  065A                     u10655:	
  9907  065A  1803               	skipnc
  9908  065B  2E1D               	goto	l7317
  9909                           
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9911  065C  30FF               	movlw	255
  9912  065D  0021               	movlb	1	; select bank1
  9913  065E  07D5               	addwf	efgtoa@i^(0+128),f
  9914  065F  30FF               	movlw	255
  9915  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9916                           
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9918  0661  0845               	movf	efgtoa@sign^(0+128),w
  9919  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9920  0663  1D03               	btfss	3,2
  9921  0664  2E67               	goto	l7337
  9922  0665  302B               	movlw	43
  9923  0666  2E68               	goto	L8
  9924  0667                     l7337:	
  9925  0667  302D               	movlw	45
  9926  0668                     L8:	
  9927  0668  00B5               	movwf	_efgtoa$1025^(0+128)
  9928  0669  3000               	movlw	0
  9929  066A  00B6               	movwf	(_efgtoa$1025^(0+128)+1)
  9930  066B  0835               	movf	_efgtoa$1025^(0+128),w
  9931  066C  00A7               	movwf	??_efgtoa^(0+128)
  9932  066D  0855               	movf	efgtoa@i^(0+128),w
  9933  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9934  066F  0086               	movwf	6
  9935  0670  3002               	movlw	2	; select bank4/5
  9936  0671  0087               	movwf	7
  9937  0672  0827               	movf	??_efgtoa^(0+128),w
  9938  0673  0081               	movwf	1
  9939                           
  9940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9941  0674  30FF               	movlw	255
  9942  0675  07CA               	addwf	efgtoa@w^(0+128),f
  9943  0676  30FF               	movlw	255
  9944  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9945                           
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9947  0678  30FF               	movlw	255
  9948  0679  07D5               	addwf	efgtoa@i^(0+128),f
  9949  067A  30FF               	movlw	255
  9950  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9951  067C  0826               	movf	efgtoa@c^(0+128),w
  9952  067D  3EBF               	addlw	191
  9953  067E  00A7               	movwf	??_efgtoa^(0+128)
  9954  067F  30FF               	movlw	255
  9955  0680  1803               	skipnc
  9956  0681  3000               	movlw	0
  9957  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9958  0683  3000               	movlw	0
  9959  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9960  0685  301A               	movlw	26
  9961  0686  1903               	skipnz
  9962  0687  0227               	subwf	??_efgtoa^(0+128),w
  9963  0688  1803               	btfsc	3,0
  9964  0689  2E8C               	goto	u10670
  9965  068A  3001               	movlw	1
  9966  068B  2E8D               	goto	u10680
  9967  068C                     u10670:	
  9968  068C  3000               	movlw	0
  9969  068D                     u10680:	
  9970  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9971  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9972  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
  9973  0690  00B9               	movwf	_efgtoa$1027^(0+128)
  9974  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
  9975  0692  00BA               	movwf	(_efgtoa$1027+1)^(0+128)
  9976  0693  0839               	movf	_efgtoa$1027^(0+128),w
  9977  0694  043A               	iorwf	(_efgtoa$1027+1)^(0+128),w
  9978  0695  1D03               	btfss	3,2
  9979  0696  2E99               	goto	l7353
  9980  0697  3065               	movlw	101
  9981  0698  2E9A               	goto	L9
  9982  0699                     l7353:	
  9983  0699  3045               	movlw	69
  9984  069A                     L9:	
  9985  069A  00B7               	movwf	_efgtoa$1026^(0+128)
  9986  069B  3000               	movlw	0
  9987  069C  00B8               	movwf	(_efgtoa$1026^(0+128)+1)
  9988  069D  0837               	movf	_efgtoa$1026^(0+128),w
  9989  069E  00A7               	movwf	??_efgtoa^(0+128)
  9990  069F  0855               	movf	efgtoa@i^(0+128),w
  9991  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9992  06A1  0086               	movwf	6
  9993  06A2  3002               	movlw	2	; select bank4/5
  9994  06A3  0087               	movwf	7
  9995  06A4  0827               	movf	??_efgtoa^(0+128),w
  9996  06A5  0081               	movwf	1
  9997                           
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9999  06A6  30FF               	movlw	255
 10000  06A7  07CA               	addwf	efgtoa@w^(0+128),f
 10001  06A8  30FF               	movlw	255
 10002  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10003                           
 10004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10005  06AA  0855               	movf	efgtoa@i^(0+128),w
 10006  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10007  06AC  00F1               	movwf	strcpy@src
 10008  06AD  3002               	movlw	2
 10009  06AE  00F2               	movwf	strcpy@src+1
 10010  06AF  085D               	movf	efgtoa@n^(0+128),w
 10011  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10012  06B1  31B6  2670  3180   	fcall	_strcpy
 10013  06B4                     l7361:	
 10014                           
 10015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 10016  06B4  0021               	movlb	1	; select bank1
 10017  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
 10018  06B6  0020               	movlb	0	; select bank0
 10019  06B7  00A7               	movwf	pad@fp+1
 10020  06B8  0021               	movlb	1	; select bank1
 10021  06B9  0820               	movf	efgtoa@fp^(0+128),w
 10022  06BA  0020               	movlb	0	; select bank0
 10023  06BB  00A6               	movwf	pad@fp
 10024  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10025  06BD  0021               	movlb	1	; select bank1
 10026  06BE  00A7               	movwf	??_efgtoa^(0+128)
 10027  06BF  0827               	movf	??_efgtoa^(0+128),w
 10028  06C0  0020               	movlb	0	; select bank0
 10029  06C1  00A8               	movwf	pad@buf
 10030  06C2  0021               	movlb	1	; select bank1
 10031  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
 10032  06C4  0020               	movlb	0	; select bank0
 10033  06C5  00AA               	movwf	pad@p+1
 10034  06C6  0021               	movlb	1	; select bank1
 10035  06C7  084A               	movf	efgtoa@w^(0+128),w
 10036  06C8  0020               	movlb	0	; select bank0
 10037  06C9  00A9               	movwf	pad@p
 10038  06CA  31A9  218C         	fcall	_pad
 10039  06CC  0020               	movlb	0	; select bank0
 10040  06CD  0827               	movf	?_pad+1,w
 10041  06CE  0021               	movlb	1	; select bank1
 10042  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
 10043  06D0  0020               	movlb	0	; select bank0
 10044  06D1  0826               	movf	?_pad,w
 10045  06D2  0021               	movlb	1	; select bank1
 10046  06D3  00A0               	movwf	?_efgtoa^(0+128)
 10047  06D4  0008               	return
 10048  06D5                     __end_of_efgtoa:	
 10049                           
 10050                           	psect	text17
 10051  36D2                     __ptext17:	
 10052 ;; *************** function _tolower *****************
 10053 ;; Defined at:
 10054 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 10055 ;; Parameters:    Size  Location     Type
 10056 ;;  c               2    7[COMMON] int 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;		None
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  2    7[COMMON] int 
 10061 ;; Registers used:
 10062 ;;		wreg, status,2, status,0
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10071 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10072 ;;Total ram usage:        8 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    2
 10075 ;; This function calls:
 10076 ;;		_isupper
 10077 ;; This function is called by:
 10078 ;;		_efgtoa
 10079 ;;		_vfpfcnvrt
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _tolower
 10085  36D2                     _tolower:	
 10086                           
 10087                           ;incstack = 0
 10088                           ; Regs used in _tolower: [wreg+status,2+status,0]
 10089  36D2  0877               	movf	tolower@c,w
 10090  36D3  3EBF               	addlw	191
 10091  36D4  0020               	movlb	0	; select bank0
 10092  36D5  00A0               	movwf	??_tolower
 10093  36D6  30FF               	movlw	255
 10094  36D7  3D78               	addwfc	tolower@c+1,w
 10095  36D8  00A1               	movwf	??_tolower+1
 10096  36D9  3000               	movlw	0
 10097  36DA  0221               	subwf	??_tolower+1,w
 10098  36DB  301A               	movlw	26
 10099  36DC  1903               	skipnz
 10100  36DD  0220               	subwf	??_tolower,w
 10101  36DE  1803               	btfsc	3,0
 10102  36DF  2EE2               	goto	u9920
 10103  36E0  3001               	movlw	1
 10104  36E1  2EE3               	goto	u9930
 10105  36E2                     u9920:	
 10106  36E2  3000               	movlw	0
 10107  36E3                     u9930:	
 10108  36E3  00A2               	movwf	??_tolower+2
 10109  36E4  01A3               	clrf	??_tolower+3
 10110  36E5  0822               	movf	??_tolower+2,w
 10111  36E6  00F9               	movwf	_tolower$1655
 10112  36E7  0823               	movf	??_tolower+3,w
 10113  36E8  00FA               	movwf	_tolower$1655+1
 10114  36E9  0879               	movf	_tolower$1655,w
 10115  36EA  047A               	iorwf	_tolower$1655+1,w
 10116  36EB  1903               	btfsc	3,2
 10117  36EC  0008               	return
 10118  36ED  3020               	movlw	32
 10119  36EE  0477               	iorwf	tolower@c,w
 10120  36EF  00F7               	movwf	?_tolower
 10121  36F0  3000               	movlw	0
 10122  36F1  0478               	iorwf	tolower@c+1,w
 10123  36F2  00F8               	movwf	?_tolower+1
 10124  36F3  0008               	return
 10125  36F4                     __end_of_tolower:	
 10126                           
 10127                           	psect	text18
 10128  3592                     __ptext18:	
 10129 ;; *************** function _isupper *****************
 10130 ;; Defined at:
 10131 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  c               2    1[COMMON] int 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;		None
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  2    1[COMMON] int 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10149 ;;Total ram usage:        6 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    1
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_efgtoa
 10156 ;;		_xtoa
 10157 ;;		_vfpfcnvrt
 10158 ;;		_tolower
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           
 10163                           ;psect for function _isupper
 10164  3592                     _isupper:	
 10165                           
 10166                           ;incstack = 0
 10167                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10168  3592  0871               	movf	isupper@c,w
 10169  3593  3EBF               	addlw	191
 10170  3594  00F3               	movwf	??_isupper
 10171  3595  30FF               	movlw	255
 10172  3596  3D72               	addwfc	isupper@c+1,w
 10173  3597  00F4               	movwf	??_isupper+1
 10174  3598  3000               	movlw	0
 10175  3599  0274               	subwf	??_isupper+1,w
 10176  359A  301A               	movlw	26
 10177  359B  1903               	skipnz
 10178  359C  0273               	subwf	??_isupper,w
 10179  359D  1803               	btfsc	3,0
 10180  359E  2DA1               	goto	u9410
 10181  359F  3001               	movlw	1
 10182  35A0  2DA2               	goto	u9420
 10183  35A1                     u9410:	
 10184  35A1  3000               	movlw	0
 10185  35A2                     u9420:	
 10186  35A2  00F5               	movwf	??_isupper+2
 10187  35A3  01F6               	clrf	??_isupper+3
 10188  35A4  0875               	movf	??_isupper+2,w
 10189  35A5  00F1               	movwf	?_isupper
 10190  35A6  0876               	movf	??_isupper+3,w
 10191  35A7  00F2               	movwf	?_isupper+1
 10192  35A8  0008               	return
 10193  35A9                     __end_of_isupper:	
 10194                           
 10195                           	psect	text19
 10196  3670                     __ptext19:	
 10197 ;; *************** function _strcpy *****************
 10198 ;; Defined at:
 10199 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  dest            1    wreg     PTR unsigned char 
 10202 ;;		 -> dbuf(80), 
 10203 ;;  src             2    1[COMMON] PTR const unsigned char 
 10204 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
 10205 ;;		 -> dbuf(80), 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  dest            1    8[COMMON] PTR unsigned char 
 10208 ;;		 -> dbuf(80), 
 10209 ;;  s               2    5[COMMON] PTR const unsigned char 
 10210 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
 10211 ;;		 -> dbuf(80), 
 10212 ;;  d               1    7[COMMON] PTR unsigned char 
 10213 ;;		 -> dbuf(80), 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      PTR unsigned char 
 10216 ;; Registers used:
 10217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10227 ;;Total ram usage:        8 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    1
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_efgtoa
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           
 10238                           ;psect for function _strcpy
 10239  3670                     _strcpy:	
 10240                           
 10241                           ;incstack = 0
 10242                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10243                           ;strcpy@dest stored from wreg
 10244  3670  00F8               	movwf	strcpy@dest
 10245  3671  0872               	movf	strcpy@src+1,w
 10246  3672  00F6               	movwf	strcpy@s+1
 10247  3673  0871               	movf	strcpy@src,w
 10248  3674  00F5               	movwf	strcpy@s
 10249  3675  0878               	movf	strcpy@dest,w
 10250  3676  00F3               	movwf	??_strcpy
 10251  3677  0873               	movf	??_strcpy,w
 10252  3678  00F7               	movwf	strcpy@d
 10253  3679                     l4451:	
 10254  3679  0877               	movf	strcpy@d,w
 10255  367A  0086               	movwf	6
 10256  367B  3002               	movlw	2	; select bank4/5
 10257  367C  0087               	movwf	7
 10258  367D  0AF7               	incf	strcpy@d,f
 10259  367E  0876               	movf	strcpy@s+1,w
 10260  367F  00F4               	movwf	??_strcpy+1
 10261  3680  0875               	movf	strcpy@s,w
 10262  3681  00F3               	movwf	??_strcpy
 10263  3682  0AF5               	incf	strcpy@s,f
 10264  3683  1903               	skipnz
 10265  3684  0AF6               	incf	strcpy@s+1,f
 10266  3685  0873               	movf	??_strcpy,w
 10267  3686  0084               	movwf	4
 10268  3687  0874               	movf	??_strcpy+1,w
 10269  3688  0085               	movwf	5
 10270  3689  0800               	movf	0,w	;code access
 10271  368A  3FC0               	movwi [0]fsr1
 10272  368B  0889               	movf	9,f
 10273  368C  1903               	btfsc	3,2
 10274  368D  0008               	return
 10275  368E  2E79               	goto	l4451
 10276  368F                     __end_of_strcpy:	
 10277                           
 10278                           	psect	text20
 10279  2485                     __ptext20:	
 10280 ;; *************** function _floorf *****************
 10281 ;; Defined at:
 10282 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;  x               4   58[BANK0 ] float 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;  u               4   74[BANK0 ] struct .
 10287 ;;  m               4   68[BANK0 ] unsigned long 
 10288 ;;  e               2   72[BANK0 ] int 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  4   58[BANK0 ] float 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10298 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10299 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10300 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10301 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10302 ;;Total ram usage:       20 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; Hardware stack levels required when called:    1
 10305 ;; This function calls:
 10306 ;;		Nothing
 10307 ;; This function is called by:
 10308 ;;		_efgtoa
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           
 10313                           ;psect for function _floorf
 10314  2485                     _floorf:	
 10315                           
 10316                           ;incstack = 0
 10317                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10318  2485  0023               	movlb	3	; select bank3
 10319  2486  082D               	movf	(floorf@F524+3)^(0+384),w
 10320  2487  0020               	movlb	0	; select bank0
 10321  2488  00ED               	movwf	floorf@u+3
 10322  2489  0023               	movlb	3	; select bank3
 10323  248A  082C               	movf	(floorf@F524+2)^(0+384),w
 10324  248B  0020               	movlb	0	; select bank0
 10325  248C  00EC               	movwf	floorf@u+2
 10326  248D  0023               	movlb	3	; select bank3
 10327  248E  082B               	movf	(floorf@F524+1)^(0+384),w
 10328  248F  0020               	movlb	0	; select bank0
 10329  2490  00EB               	movwf	floorf@u+1
 10330  2491  0023               	movlb	3	; select bank3
 10331  2492  082A               	movf	floorf@F524^(0+384),w
 10332  2493  0020               	movlb	0	; select bank0
 10333  2494  00EA               	movwf	floorf@u
 10334  2495  085D               	movf	floorf@x+3,w
 10335  2496  00ED               	movwf	floorf@u+3
 10336  2497  085C               	movf	floorf@x+2,w
 10337  2498  00EC               	movwf	floorf@u+2
 10338  2499  085B               	movf	floorf@x+1,w
 10339  249A  00EB               	movwf	floorf@u+1
 10340  249B  085A               	movf	floorf@x,w
 10341  249C  00EA               	movwf	floorf@u
 10342  249D  086A               	movf	floorf@u,w
 10343  249E  00DE               	movwf	??_floorf
 10344  249F  086B               	movf	floorf@u+1,w
 10345  24A0  00DF               	movwf	??_floorf+1
 10346  24A1  086C               	movf	floorf@u+2,w
 10347  24A2  00E0               	movwf	??_floorf+2
 10348  24A3  086D               	movf	floorf@u+3,w
 10349  24A4  00E1               	movwf	??_floorf+3
 10350  24A5  3017               	movlw	23
 10351  24A6                     u5465:	
 10352  24A6  36E1               	lsrf	??_floorf+3,f
 10353  24A7  0CE0               	rrf	??_floorf+2,f
 10354  24A8  0CDF               	rrf	??_floorf+1,f
 10355  24A9  0CDE               	rrf	??_floorf,f
 10356  24AA  0B89               	decfsz	9,f
 10357  24AB  2CA6               	goto	u5465
 10358  24AC  30FF               	movlw	255
 10359  24AD  055E               	andwf	??_floorf,w
 10360  24AE  00E2               	movwf	??_floorf+4
 10361  24AF  3000               	movlw	0
 10362  24B0  055F               	andwf	??_floorf+1,w
 10363  24B1  00E3               	movwf	??_floorf+5
 10364  24B2  0862               	movf	??_floorf+4,w
 10365  24B3  3E81               	addlw	129
 10366  24B4  00E8               	movwf	floorf@e
 10367  24B5  30FF               	movlw	255
 10368  24B6  3D63               	addwfc	??_floorf+5,w
 10369  24B7  00E9               	movwf	floorf@e+1
 10370  24B8  0869               	movf	floorf@e+1,w
 10371  24B9  3A80               	xorlw	128
 10372  24BA  00DE               	movwf	??_floorf
 10373  24BB  3080               	movlw	128
 10374  24BC  025E               	subwf	??_floorf,w
 10375  24BD  1D03               	skipz
 10376  24BE  2CC1               	goto	u5475
 10377  24BF  3017               	movlw	23
 10378  24C0  0268               	subwf	floorf@e,w
 10379  24C1                     u5475:	
 10380  24C1  1803               	btfsc	3,0
 10381  24C2  0008               	return
 10382  24C3  0020               	movlb	0	; select bank0
 10383  24C4  1BE9               	btfsc	floorf@e+1,7
 10384  24C5  2D1E               	goto	l4483
 10385  24C6  30FF               	movlw	255
 10386  24C7  00DE               	movwf	??_floorf
 10387  24C8  30FF               	movlw	255
 10388  24C9  00DF               	movwf	??_floorf+1
 10389  24CA  307F               	movlw	127
 10390  24CB  00E0               	movwf	??_floorf+2
 10391  24CC  3000               	movlw	0
 10392  24CD  00E1               	movwf	??_floorf+3
 10393  24CE  0A68               	incf	floorf@e,w
 10394  24CF  2CD4               	goto	u5490
 10395  24D0                     u5495:	
 10396  24D0  37E1               	asrf	??_floorf+3,f
 10397  24D1  0CE0               	rrf	??_floorf+2,f
 10398  24D2  0CDF               	rrf	??_floorf+1,f
 10399  24D3  0CDE               	rrf	??_floorf,f
 10400  24D4                     u5490:	
 10401  24D4  0B89               	decfsz	9,f
 10402  24D5  2CD0               	goto	u5495
 10403  24D6  0861               	movf	??_floorf+3,w
 10404  24D7  00E7               	movwf	floorf@m+3
 10405  24D8  0860               	movf	??_floorf+2,w
 10406  24D9  00E6               	movwf	floorf@m+2
 10407  24DA  085F               	movf	??_floorf+1,w
 10408  24DB  00E5               	movwf	floorf@m+1
 10409  24DC  085E               	movf	??_floorf,w
 10410  24DD  00E4               	movwf	floorf@m
 10411  24DE  086A               	movf	floorf@u,w
 10412  24DF  0564               	andwf	floorf@m,w
 10413  24E0  00DE               	movwf	??_floorf
 10414  24E1  086B               	movf	floorf@u+1,w
 10415  24E2  0565               	andwf	floorf@m+1,w
 10416  24E3  00DF               	movwf	??_floorf+1
 10417  24E4  086C               	movf	floorf@u+2,w
 10418  24E5  0566               	andwf	floorf@m+2,w
 10419  24E6  00E0               	movwf	??_floorf+2
 10420  24E7  086D               	movf	floorf@u+3,w
 10421  24E8  0567               	andwf	floorf@m+3,w
 10422  24E9  00E1               	movwf	??_floorf+3
 10423  24EA  0861               	movf	??_floorf+3,w
 10424  24EB  0460               	iorwf	??_floorf+2,w
 10425  24EC  045F               	iorwf	??_floorf+1,w
 10426  24ED  045E               	iorwf	??_floorf,w
 10427  24EE  1903               	btfsc	3,2
 10428  24EF  0008               	return
 10429  24F0  086A               	movf	floorf@u,w
 10430  24F1  00DE               	movwf	??_floorf
 10431  24F2  086B               	movf	floorf@u+1,w
 10432  24F3  00DF               	movwf	??_floorf+1
 10433  24F4  086C               	movf	floorf@u+2,w
 10434  24F5  00E0               	movwf	??_floorf+2
 10435  24F6  086D               	movf	floorf@u+3,w
 10436  24F7  00E1               	movwf	??_floorf+3
 10437  24F8  301F               	movlw	31
 10438  24F9                     u5515:	
 10439  24F9  36E1               	lsrf	??_floorf+3,f
 10440  24FA  0CE0               	rrf	??_floorf+2,f
 10441  24FB  0CDF               	rrf	??_floorf+1,f
 10442  24FC  0CDE               	rrf	??_floorf,f
 10443  24FD  0B89               	decfsz	9,f
 10444  24FE  2CF9               	goto	u5515
 10445  24FF  0861               	movf	??_floorf+3,w
 10446  2500  0460               	iorwf	??_floorf+2,w
 10447  2501  045F               	iorwf	??_floorf+1,w
 10448  2502  045E               	iorwf	??_floorf,w
 10449  2503  1903               	skipnz
 10450  2504  2D0D               	goto	l4481
 10451  2505  0864               	movf	floorf@m,w
 10452  2506  07EA               	addwf	floorf@u,f
 10453  2507  0865               	movf	floorf@m+1,w
 10454  2508  3DEB               	addwfc	floorf@u+1,f
 10455  2509  0866               	movf	floorf@m+2,w
 10456  250A  3DEC               	addwfc	floorf@u+2,f
 10457  250B  0867               	movf	floorf@m+3,w
 10458  250C  3DED               	addwfc	floorf@u+3,f
 10459  250D                     l4481:	
 10460  250D  0964               	comf	floorf@m,w
 10461  250E  00DE               	movwf	??_floorf
 10462  250F  0965               	comf	floorf@m+1,w
 10463  2510  00DF               	movwf	??_floorf+1
 10464  2511  0966               	comf	floorf@m+2,w
 10465  2512  00E0               	movwf	??_floorf+2
 10466  2513  0967               	comf	floorf@m+3,w
 10467  2514  00E1               	movwf	??_floorf+3
 10468  2515  085E               	movf	??_floorf,w
 10469  2516  05EA               	andwf	floorf@u,f
 10470  2517  085F               	movf	??_floorf+1,w
 10471  2518  05EB               	andwf	floorf@u+1,f
 10472  2519  0860               	movf	??_floorf+2,w
 10473  251A  05EC               	andwf	floorf@u+2,f
 10474  251B  0861               	movf	??_floorf+3,w
 10475  251C  05ED               	andwf	floorf@u+3,f
 10476  251D  2D54               	goto	l1350
 10477  251E                     l4483:	
 10478  251E  086A               	movf	floorf@u,w
 10479  251F  00DE               	movwf	??_floorf
 10480  2520  086B               	movf	floorf@u+1,w
 10481  2521  00DF               	movwf	??_floorf+1
 10482  2522  086C               	movf	floorf@u+2,w
 10483  2523  00E0               	movwf	??_floorf+2
 10484  2524  086D               	movf	floorf@u+3,w
 10485  2525  00E1               	movwf	??_floorf+3
 10486  2526  301F               	movlw	31
 10487  2527                     u5535:	
 10488  2527  36E1               	lsrf	??_floorf+3,f
 10489  2528  0CE0               	rrf	??_floorf+2,f
 10490  2529  0CDF               	rrf	??_floorf+1,f
 10491  252A  0CDE               	rrf	??_floorf,f
 10492  252B  0B89               	decfsz	9,f
 10493  252C  2D27               	goto	u5535
 10494  252D  0861               	movf	??_floorf+3,w
 10495  252E  0460               	iorwf	??_floorf+2,w
 10496  252F  045F               	iorwf	??_floorf+1,w
 10497  2530  045E               	iorwf	??_floorf,w
 10498  2531  1D03               	skipz
 10499  2532  2D37               	goto	l4487
 10500  2533  3000               	movlw	0
 10501  2534  00ED               	movwf	floorf@u+3
 10502  2535  3000               	movlw	0
 10503  2536  2D4F               	goto	L10
 10504  2537                     l4487:	
 10505  2537  086A               	movf	floorf@u,w
 10506  2538  00DE               	movwf	??_floorf
 10507  2539  086B               	movf	floorf@u+1,w
 10508  253A  00DF               	movwf	??_floorf+1
 10509  253B  086C               	movf	floorf@u+2,w
 10510  253C  00E0               	movwf	??_floorf+2
 10511  253D  086D               	movf	floorf@u+3,w
 10512  253E  00E1               	movwf	??_floorf+3
 10513  253F  3001               	movlw	1
 10514  2540                     u5555:	
 10515  2540  35DE               	lslf	??_floorf,f
 10516  2541  0DDF               	rlf	??_floorf+1,f
 10517  2542  0DE0               	rlf	??_floorf+2,f
 10518  2543  0DE1               	rlf	??_floorf+3,f
 10519  2544  0B89               	decfsz	9,f
 10520  2545  2D40               	goto	u5555
 10521  2546  0861               	movf	??_floorf+3,w
 10522  2547  0460               	iorwf	??_floorf+2,w
 10523  2548  045F               	iorwf	??_floorf+1,w
 10524  2549  045E               	iorwf	??_floorf,w
 10525  254A  1903               	skipnz
 10526  254B  2D54               	goto	l1350
 10527  254C  30BF               	movlw	191
 10528  254D  00ED               	movwf	floorf@u+3
 10529  254E  3080               	movlw	128
 10530  254F                     L10:	
 10531  254F  00EC               	movwf	floorf@u+2
 10532  2550  3000               	movlw	0
 10533  2551  00EB               	movwf	floorf@u+1
 10534  2552  3000               	movlw	0
 10535  2553  00EA               	movwf	floorf@u
 10536  2554                     l1350:	
 10537  2554  086D               	movf	floorf@u+3,w
 10538  2555  00DD               	movwf	?_floorf+3
 10539  2556  086C               	movf	floorf@u+2,w
 10540  2557  00DC               	movwf	?_floorf+2
 10541  2558  086B               	movf	floorf@u+1,w
 10542  2559  00DB               	movwf	?_floorf+1
 10543  255A  086A               	movf	floorf@u,w
 10544  255B  00DA               	movwf	?_floorf
 10545  255C  0008               	return
 10546  255D                     __end_of_floorf:	
 10547                           
 10548                           	psect	text21
 10549  2B4F                     __ptext21:	
 10550 ;; *************** function ___fpclassifyf *****************
 10551 ;; Defined at:
 10552 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;  x               4    1[COMMON] float 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  u               4    2[BANK0 ] struct .
 10557 ;;  e               2    0[BANK0 ] int 
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  2    1[COMMON] int 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10568 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10569 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10570 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10571 ;;Total ram usage:       16 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    1
 10574 ;; This function calls:
 10575 ;;		Nothing
 10576 ;; This function is called by:
 10577 ;;		_efgtoa
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           
 10582                           ;psect for function ___fpclassifyf
 10583  2B4F                     ___fpclassifyf:	
 10584                           
 10585                           ;incstack = 0
 10586                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10587  2B4F  0023               	movlb	3	; select bank3
 10588  2B50  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 10589  2B51  0020               	movlb	0	; select bank0
 10590  2B52  00A5               	movwf	___fpclassifyf@u+3
 10591  2B53  0023               	movlb	3	; select bank3
 10592  2B54  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 10593  2B55  0020               	movlb	0	; select bank0
 10594  2B56  00A4               	movwf	___fpclassifyf@u+2
 10595  2B57  0023               	movlb	3	; select bank3
 10596  2B58  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 10597  2B59  0020               	movlb	0	; select bank0
 10598  2B5A  00A3               	movwf	___fpclassifyf@u+1
 10599  2B5B  0023               	movlb	3	; select bank3
 10600  2B5C  082E               	movf	___fpclassifyf@F463^(0+384),w
 10601  2B5D  0020               	movlb	0	; select bank0
 10602  2B5E  00A2               	movwf	___fpclassifyf@u
 10603  2B5F  0874               	movf	___fpclassifyf@x+3,w
 10604  2B60  00A5               	movwf	___fpclassifyf@u+3
 10605  2B61  0873               	movf	___fpclassifyf@x+2,w
 10606  2B62  00A4               	movwf	___fpclassifyf@u+2
 10607  2B63  0872               	movf	___fpclassifyf@x+1,w
 10608  2B64  00A3               	movwf	___fpclassifyf@u+1
 10609  2B65  0871               	movf	___fpclassifyf@x,w
 10610  2B66  00A2               	movwf	___fpclassifyf@u
 10611  2B67  0822               	movf	___fpclassifyf@u,w
 10612  2B68  00F5               	movwf	??___fpclassifyf
 10613  2B69  0823               	movf	___fpclassifyf@u+1,w
 10614  2B6A  00F6               	movwf	??___fpclassifyf+1
 10615  2B6B  0824               	movf	___fpclassifyf@u+2,w
 10616  2B6C  00F7               	movwf	??___fpclassifyf+2
 10617  2B6D  0825               	movf	___fpclassifyf@u+3,w
 10618  2B6E  00F8               	movwf	??___fpclassifyf+3
 10619  2B6F  3017               	movlw	23
 10620  2B70                     u5345:	
 10621  2B70  36F8               	lsrf	??___fpclassifyf+3,f
 10622  2B71  0CF7               	rrf	??___fpclassifyf+2,f
 10623  2B72  0CF6               	rrf	??___fpclassifyf+1,f
 10624  2B73  0CF5               	rrf	??___fpclassifyf,f
 10625  2B74  0B89               	decfsz	9,f
 10626  2B75  2B70               	goto	u5345
 10627  2B76  30FF               	movlw	255
 10628  2B77  0575               	andwf	??___fpclassifyf,w
 10629  2B78  00A0               	movwf	___fpclassifyf@e
 10630  2B79  3000               	movlw	0
 10631  2B7A  0576               	andwf	??___fpclassifyf+1,w
 10632  2B7B  00A1               	movwf	___fpclassifyf@e+1
 10633  2B7C  0820               	movf	___fpclassifyf@e,w
 10634  2B7D  0421               	iorwf	___fpclassifyf@e+1,w
 10635  2B7E  1D03               	btfss	3,2
 10636  2B7F  2B9F               	goto	l4439
 10637  2B80  0822               	movf	___fpclassifyf@u,w
 10638  2B81  00F5               	movwf	??___fpclassifyf
 10639  2B82  0823               	movf	___fpclassifyf@u+1,w
 10640  2B83  00F6               	movwf	??___fpclassifyf+1
 10641  2B84  0824               	movf	___fpclassifyf@u+2,w
 10642  2B85  00F7               	movwf	??___fpclassifyf+2
 10643  2B86  0825               	movf	___fpclassifyf@u+3,w
 10644  2B87  00F8               	movwf	??___fpclassifyf+3
 10645  2B88  3001               	movlw	1
 10646  2B89                     u5365:	
 10647  2B89  35F5               	lslf	??___fpclassifyf,f
 10648  2B8A  0DF6               	rlf	??___fpclassifyf+1,f
 10649  2B8B  0DF7               	rlf	??___fpclassifyf+2,f
 10650  2B8C  0DF8               	rlf	??___fpclassifyf+3,f
 10651  2B8D  0B89               	decfsz	9,f
 10652  2B8E  2B89               	goto	u5365
 10653  2B8F  0878               	movf	??___fpclassifyf+3,w
 10654  2B90  0477               	iorwf	??___fpclassifyf+2,w
 10655  2B91  0476               	iorwf	??___fpclassifyf+1,w
 10656  2B92  0475               	iorwf	??___fpclassifyf,w
 10657  2B93  1D03               	skipz
 10658  2B94  2B9A               	goto	l4435
 10659  2B95  3002               	movlw	2
 10660  2B96  00F1               	movwf	?___fpclassifyf
 10661  2B97  3000               	movlw	0
 10662  2B98  00F2               	movwf	?___fpclassifyf+1
 10663  2B99  0008               	return
 10664  2B9A                     l4435:	
 10665  2B9A  3003               	movlw	3
 10666  2B9B  00F1               	movwf	?___fpclassifyf
 10667  2B9C  3000               	movlw	0
 10668  2B9D  00F2               	movwf	?___fpclassifyf+1
 10669  2B9E  0008               	return
 10670  2B9F                     l4439:	
 10671  2B9F  0A20               	incf	___fpclassifyf@e,w
 10672  2BA0  0421               	iorwf	___fpclassifyf@e+1,w
 10673  2BA1  1D03               	btfss	3,2
 10674  2BA2  2BC2               	goto	l4445
 10675  2BA3  0822               	movf	___fpclassifyf@u,w
 10676  2BA4  00F5               	movwf	??___fpclassifyf
 10677  2BA5  0823               	movf	___fpclassifyf@u+1,w
 10678  2BA6  00F6               	movwf	??___fpclassifyf+1
 10679  2BA7  0824               	movf	___fpclassifyf@u+2,w
 10680  2BA8  00F7               	movwf	??___fpclassifyf+2
 10681  2BA9  0825               	movf	___fpclassifyf@u+3,w
 10682  2BAA  00F8               	movwf	??___fpclassifyf+3
 10683  2BAB  3009               	movlw	9
 10684  2BAC                     u5395:	
 10685  2BAC  35F5               	lslf	??___fpclassifyf,f
 10686  2BAD  0DF6               	rlf	??___fpclassifyf+1,f
 10687  2BAE  0DF7               	rlf	??___fpclassifyf+2,f
 10688  2BAF  0DF8               	rlf	??___fpclassifyf+3,f
 10689  2BB0  0B89               	decfsz	9,f
 10690  2BB1  2BAC               	goto	u5395
 10691  2BB2  0878               	movf	??___fpclassifyf+3,w
 10692  2BB3  0477               	iorwf	??___fpclassifyf+2,w
 10693  2BB4  0476               	iorwf	??___fpclassifyf+1,w
 10694  2BB5  0475               	iorwf	??___fpclassifyf,w
 10695  2BB6  1D03               	btfss	3,2
 10696  2BB7  2BBA               	goto	u5400
 10697  2BB8  3001               	movlw	1
 10698  2BB9  2BBB               	goto	u5410
 10699  2BBA                     u5400:	
 10700  2BBA  3000               	movlw	0
 10701  2BBB                     u5410:	
 10702  2BBB  00F9               	movwf	??___fpclassifyf+4
 10703  2BBC  01FA               	clrf	??___fpclassifyf+5
 10704  2BBD  0879               	movf	??___fpclassifyf+4,w
 10705  2BBE  00F1               	movwf	?___fpclassifyf
 10706  2BBF  087A               	movf	??___fpclassifyf+5,w
 10707  2BC0  00F2               	movwf	?___fpclassifyf+1
 10708  2BC1  0008               	return
 10709  2BC2                     l4445:	
 10710  2BC2  3004               	movlw	4
 10711  2BC3  00F1               	movwf	?___fpclassifyf
 10712  2BC4  3000               	movlw	0
 10713  2BC5  00F2               	movwf	?___fpclassifyf+1
 10714  2BC6  0008               	return
 10715  2BC7                     __end_of___fpclassifyf:	
 10716                           
 10717                           	psect	text22
 10718  3651                     __ptext22:	
 10719 ;; *************** function ___flsub *****************
 10720 ;; Defined at:
 10721 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;  a               4   32[BANK0 ] int 
 10724 ;;  b               4   36[BANK0 ] int 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  4   32[BANK0 ] int 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0, pclath, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10736 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10739 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10740 ;;Total ram usage:        8 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    2
 10743 ;; This function calls:
 10744 ;;		___fladd
 10745 ;; This function is called by:
 10746 ;;		_efgtoa
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           
 10751                           ;psect for function ___flsub
 10752  3651                     ___flsub:	
 10753                           
 10754                           ;incstack = 0
 10755                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10756  3651  3080               	movlw	128
 10757  3652  0020               	movlb	0	; select bank0
 10758  3653  06C3               	xorwf	___flsub@a+3,f
 10759  3654  0847               	movf	___flsub@b+3,w
 10760  3655  00F4               	movwf	___fladd@b+3
 10761  3656  0846               	movf	___flsub@b+2,w
 10762  3657  00F3               	movwf	___fladd@b+2
 10763  3658  0845               	movf	___flsub@b+1,w
 10764  3659  00F2               	movwf	___fladd@b+1
 10765  365A  0844               	movf	___flsub@b,w
 10766  365B  00F1               	movwf	___fladd@b
 10767  365C  0843               	movf	___flsub@a+3,w
 10768  365D  00F8               	movwf	___fladd@a+3
 10769  365E  0842               	movf	___flsub@a+2,w
 10770  365F  00F7               	movwf	___fladd@a+2
 10771  3660  0841               	movf	___flsub@a+1,w
 10772  3661  00F6               	movwf	___fladd@a+1
 10773  3662  0840               	movf	___flsub@a,w
 10774  3663  00F5               	movwf	___fladd@a
 10775  3664  3191  21DB         	fcall	___fladd
 10776  3666  0874               	movf	?___fladd+3,w
 10777  3667  0020               	movlb	0	; select bank0
 10778  3668  00C3               	movwf	?___flsub+3
 10779  3669  0873               	movf	?___fladd+2,w
 10780  366A  00C2               	movwf	?___flsub+2
 10781  366B  0872               	movf	?___fladd+1,w
 10782  366C  00C1               	movwf	?___flsub+1
 10783  366D  0871               	movf	?___fladd,w
 10784  366E  00C0               	movwf	?___flsub
 10785  366F  0008               	return
 10786  3670                     __end_of___flsub:	
 10787                           
 10788                           	psect	text23
 10789  11DB                     __ptext23:	
 10790 ;; *************** function ___fladd *****************
 10791 ;; Defined at:
 10792 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;  b               4    1[COMMON] int 
 10795 ;;  a               4    5[COMMON] int 
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;  grs             1   11[BANK0 ] unsigned char 
 10798 ;;  bexp            1   10[BANK0 ] unsigned char 
 10799 ;;  aexp            1    9[BANK0 ] unsigned char 
 10800 ;;  signs           1    8[BANK0 ] unsigned char 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  4    1[COMMON] unsigned char 
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10810 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10811 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10812 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10813 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10814 ;;Total ram usage:       20 bytes
 10815 ;; Hardware stack levels used:    1
 10816 ;; Hardware stack levels required when called:    1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_efgtoa
 10821 ;;		___flsub
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           
 10826                           ;psect for function ___fladd
 10827  11DB                     ___fladd:	
 10828                           
 10829                           ;incstack = 0
 10830                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10831  11DB  0874               	movf	___fladd@b+3,w
 10832  11DC  3980               	andlw	128
 10833  11DD  0020               	movlb	0	; select bank0
 10834  11DE  00A0               	movwf	??___fladd
 10835  11DF  0820               	movf	??___fladd,w
 10836  11E0  00A8               	movwf	___fladd@signs
 10837  11E1  3574               	lslf	___fladd@b+3,w
 10838  11E2  00A0               	movwf	??___fladd
 10839  11E3  0820               	movf	??___fladd,w
 10840  11E4  00AA               	movwf	___fladd@bexp
 10841  11E5  1BF3               	btfsc	___fladd@b+2,7
 10842  11E6  142A               	bsf	___fladd@bexp,0
 10843  11E7  082A               	movf	___fladd@bexp,w
 10844  11E8  1903               	btfsc	3,2
 10845  11E9  29F8               	goto	l6761
 10846  11EA  0A2A               	incf	___fladd@bexp,w
 10847  11EB  1D03               	btfss	3,2
 10848  11EC  29F5               	goto	l6757
 10849  11ED  3000               	movlw	0
 10850  11EE  00F4               	movwf	___fladd@b+3
 10851  11EF  3000               	movlw	0
 10852  11F0  00F3               	movwf	___fladd@b+2
 10853  11F1  3000               	movlw	0
 10854  11F2  00F2               	movwf	___fladd@b+1
 10855  11F3  3000               	movlw	0
 10856  11F4  00F1               	movwf	___fladd@b
 10857  11F5                     l6757:	
 10858  11F5  17F3               	bsf	___fladd@b+2,7
 10859  11F6  01F4               	clrf	___fladd@b+3
 10860  11F7  2A00               	goto	l6763
 10861  11F8                     l6761:	
 10862  11F8  3000               	movlw	0
 10863  11F9  00F4               	movwf	___fladd@b+3
 10864  11FA  3000               	movlw	0
 10865  11FB  00F3               	movwf	___fladd@b+2
 10866  11FC  3000               	movlw	0
 10867  11FD  00F2               	movwf	___fladd@b+1
 10868  11FE  3000               	movlw	0
 10869  11FF  00F1               	movwf	___fladd@b
 10870  1200                     l6763:	
 10871  1200  0878               	movf	___fladd@a+3,w
 10872  1201  3980               	andlw	128
 10873  1202  00A0               	movwf	??___fladd
 10874  1203  0820               	movf	??___fladd,w
 10875  1204  00A9               	movwf	___fladd@aexp
 10876  1205  0829               	movf	___fladd@aexp,w
 10877  1206  0628               	xorwf	___fladd@signs,w
 10878  1207  1D03               	btfss	3,2
 10879  1208  1728               	bsf	___fladd@signs,6
 10880  1209  3578               	lslf	___fladd@a+3,w
 10881  120A  00A0               	movwf	??___fladd
 10882  120B  0820               	movf	??___fladd,w
 10883  120C  00A9               	movwf	___fladd@aexp
 10884  120D  1BF7               	btfsc	___fladd@a+2,7
 10885  120E  1429               	bsf	___fladd@aexp,0
 10886  120F  0829               	movf	___fladd@aexp,w
 10887  1210  1903               	btfsc	3,2
 10888  1211  2A20               	goto	l6785
 10889  1212  0A29               	incf	___fladd@aexp,w
 10890  1213  1D03               	btfss	3,2
 10891  1214  2A1D               	goto	l6781
 10892  1215  3000               	movlw	0
 10893  1216  00F8               	movwf	___fladd@a+3
 10894  1217  3000               	movlw	0
 10895  1218  00F7               	movwf	___fladd@a+2
 10896  1219  3000               	movlw	0
 10897  121A  00F6               	movwf	___fladd@a+1
 10898  121B  3000               	movlw	0
 10899  121C  00F5               	movwf	___fladd@a
 10900  121D                     l6781:	
 10901  121D  17F7               	bsf	___fladd@a+2,7
 10902  121E  01F8               	clrf	___fladd@a+3
 10903  121F  2A28               	goto	l1142
 10904  1220                     l6785:	
 10905  1220  3000               	movlw	0
 10906  1221  00F8               	movwf	___fladd@a+3
 10907  1222  3000               	movlw	0
 10908  1223  00F7               	movwf	___fladd@a+2
 10909  1224  3000               	movlw	0
 10910  1225  00F6               	movwf	___fladd@a+1
 10911  1226  3000               	movlw	0
 10912  1227  00F5               	movwf	___fladd@a
 10913  1228                     l1142:	
 10914  1228  082A               	movf	___fladd@bexp,w
 10915  1229  0229               	subwf	___fladd@aexp,w
 10916  122A  1803               	skipnc
 10917  122B  2A6E               	goto	l6821
 10918  122C  1F28               	btfss	___fladd@signs,6
 10919  122D  2A32               	goto	l6791
 10920  122E  3080               	movlw	128
 10921  122F  00A0               	movwf	??___fladd
 10922  1230  0820               	movf	??___fladd,w
 10923  1231  06A8               	xorwf	___fladd@signs,f
 10924  1232                     l6791:	
 10925  1232  082A               	movf	___fladd@bexp,w
 10926  1233  00A0               	movwf	??___fladd
 10927  1234  0820               	movf	??___fladd,w
 10928  1235  00AB               	movwf	___fladd@grs
 10929  1236  0829               	movf	___fladd@aexp,w
 10930  1237  00A0               	movwf	??___fladd
 10931  1238  0820               	movf	??___fladd,w
 10932  1239  00AA               	movwf	___fladd@bexp
 10933  123A  082B               	movf	___fladd@grs,w
 10934  123B  00A0               	movwf	??___fladd
 10935  123C  0820               	movf	??___fladd,w
 10936  123D  00A9               	movwf	___fladd@aexp
 10937  123E  0871               	movf	___fladd@b,w
 10938  123F  00A0               	movwf	??___fladd
 10939  1240  0820               	movf	??___fladd,w
 10940  1241  00AB               	movwf	___fladd@grs
 10941  1242  0875               	movf	___fladd@a,w
 10942  1243  00A0               	movwf	??___fladd
 10943  1244  0820               	movf	??___fladd,w
 10944  1245  00F1               	movwf	___fladd@b
 10945  1246  082B               	movf	___fladd@grs,w
 10946  1247  00A0               	movwf	??___fladd
 10947  1248  0820               	movf	??___fladd,w
 10948  1249  00F5               	movwf	___fladd@a
 10949  124A  0872               	movf	___fladd@b+1,w
 10950  124B  00A0               	movwf	??___fladd
 10951  124C  0820               	movf	??___fladd,w
 10952  124D  00AB               	movwf	___fladd@grs
 10953  124E  0876               	movf	___fladd@a+1,w
 10954  124F  00A0               	movwf	??___fladd
 10955  1250  0820               	movf	??___fladd,w
 10956  1251  00F2               	movwf	___fladd@b+1
 10957  1252  082B               	movf	___fladd@grs,w
 10958  1253  00A0               	movwf	??___fladd
 10959  1254  0820               	movf	??___fladd,w
 10960  1255  00F6               	movwf	___fladd@a+1
 10961  1256  0873               	movf	___fladd@b+2,w
 10962  1257  00A0               	movwf	??___fladd
 10963  1258  0820               	movf	??___fladd,w
 10964  1259  00AB               	movwf	___fladd@grs
 10965  125A  0877               	movf	___fladd@a+2,w
 10966  125B  00A0               	movwf	??___fladd
 10967  125C  0820               	movf	??___fladd,w
 10968  125D  00F3               	movwf	___fladd@b+2
 10969  125E  082B               	movf	___fladd@grs,w
 10970  125F  00A0               	movwf	??___fladd
 10971  1260  0820               	movf	??___fladd,w
 10972  1261  00F7               	movwf	___fladd@a+2
 10973  1262  0874               	movf	___fladd@b+3,w
 10974  1263  00A0               	movwf	??___fladd
 10975  1264  0820               	movf	??___fladd,w
 10976  1265  00AB               	movwf	___fladd@grs
 10977  1266  0878               	movf	___fladd@a+3,w
 10978  1267  00A0               	movwf	??___fladd
 10979  1268  0820               	movf	??___fladd,w
 10980  1269  00F4               	movwf	___fladd@b+3
 10981  126A  082B               	movf	___fladd@grs,w
 10982  126B  00A0               	movwf	??___fladd
 10983  126C  0820               	movf	??___fladd,w
 10984  126D  00F8               	movwf	___fladd@a+3
 10985  126E                     l6821:	
 10986  126E  01AB               	clrf	___fladd@grs
 10987  126F  0829               	movf	___fladd@aexp,w
 10988  1270  00A0               	movwf	??___fladd
 10989  1271  01A1               	clrf	??___fladd+1
 10990  1272  0821               	movf	??___fladd+1,w
 10991  1273  00A3               	movwf	??___fladd+3
 10992  1274  082A               	movf	___fladd@bexp,w
 10993  1275  0220               	subwf	??___fladd,w
 10994  1276  00A2               	movwf	??___fladd+2
 10995  1277  1C03               	skipc
 10996  1278  03A3               	decf	??___fladd+3,f
 10997  1279  0823               	movf	??___fladd+3,w
 10998  127A  3A80               	xorlw	128
 10999  127B  00A4               	movwf	??___fladd+4
 11000  127C  3080               	movlw	128
 11001  127D  0224               	subwf	??___fladd+4,w
 11002  127E  1D03               	skipz
 11003  127F  2A82               	goto	u9525
 11004  1280  301A               	movlw	26
 11005  1281  0222               	subwf	??___fladd+2,w
 11006  1282                     u9525:	
 11007  1282  1C03               	skipc
 11008  1283  2AB6               	goto	l6839
 11009  1284  0874               	movf	___fladd@b+3,w
 11010  1285  0473               	iorwf	___fladd@b+2,w
 11011  1286  0472               	iorwf	___fladd@b+1,w
 11012  1287  0471               	iorwf	___fladd@b,w
 11013  1288  1903               	btfsc	3,2
 11014  1289  2A8C               	goto	u9530
 11015  128A  3001               	movlw	1
 11016  128B  2A8D               	goto	u9540
 11017  128C                     u9530:	
 11018  128C  3000               	movlw	0
 11019  128D                     u9540:	
 11020  128D  0020               	movlb	0	; select bank0
 11021  128E  00A0               	movwf	??___fladd
 11022  128F  0820               	movf	??___fladd,w
 11023  1290  00AB               	movwf	___fladd@grs
 11024  1291  3000               	movlw	0
 11025  1292  00F4               	movwf	___fladd@b+3
 11026  1293  3000               	movlw	0
 11027  1294  00F3               	movwf	___fladd@b+2
 11028  1295  3000               	movlw	0
 11029  1296  00F2               	movwf	___fladd@b+1
 11030  1297  3000               	movlw	0
 11031  1298  00F1               	movwf	___fladd@b
 11032  1299  0829               	movf	___fladd@aexp,w
 11033  129A  00A0               	movwf	??___fladd
 11034  129B  0820               	movf	??___fladd,w
 11035  129C  00AA               	movwf	___fladd@bexp
 11036  129D  2ABB               	goto	l1146
 11037  129E                     l1148:	
 11038  129E  1C2B               	btfss	___fladd@grs,0
 11039  129F  2AA6               	goto	l6829
 11040  12A0  362B               	lsrf	___fladd@grs,w
 11041  12A1  3801               	iorlw	1
 11042  12A2  00A0               	movwf	??___fladd
 11043  12A3  0820               	movf	??___fladd,w
 11044  12A4  00AB               	movwf	___fladd@grs
 11045  12A5  2AA8               	goto	l6831
 11046  12A6                     l6829:	
 11047  12A6  1003               	clrc
 11048  12A7  0CAB               	rrf	___fladd@grs,f
 11049  12A8                     l6831:	
 11050  12A8  1871               	btfsc	___fladd@b,0
 11051  12A9  17AB               	bsf	___fladd@grs,7
 11052  12AA  3001               	movlw	1
 11053  12AB  00A0               	movwf	??___fladd
 11054  12AC                     u9575:	
 11055  12AC  37F4               	asrf	___fladd@b+3,f
 11056  12AD  0CF3               	rrf	___fladd@b+2,f
 11057  12AE  0CF2               	rrf	___fladd@b+1,f
 11058  12AF  0CF1               	rrf	___fladd@b,f
 11059  12B0  0BA0               	decfsz	??___fladd& (0+127),f
 11060  12B1  2AAC               	goto	u9575
 11061  12B2  3001               	movlw	1
 11062  12B3  00A0               	movwf	??___fladd
 11063  12B4  0820               	movf	??___fladd,w
 11064  12B5  07AA               	addwf	___fladd@bexp,f
 11065  12B6                     l6839:	
 11066  12B6  0020               	movlb	0	; select bank0
 11067  12B7  0829               	movf	___fladd@aexp,w
 11068  12B8  022A               	subwf	___fladd@bexp,w
 11069  12B9  1C03               	skipc
 11070  12BA  2A9E               	goto	l1148
 11071  12BB                     l1146:	
 11072  12BB  1B28               	btfsc	___fladd@signs,6
 11073  12BC  2AEC               	goto	l6865
 11074  12BD  082A               	movf	___fladd@bexp,w
 11075  12BE  1D03               	btfss	3,2
 11076  12BF  2AC9               	goto	l6847
 11077  12C0  3000               	movlw	0
 11078  12C1  00F4               	movwf	?___fladd+3
 11079  12C2  3000               	movlw	0
 11080  12C3  00F3               	movwf	?___fladd+2
 11081  12C4  3000               	movlw	0
 11082  12C5  00F2               	movwf	?___fladd+1
 11083  12C6  3000               	movlw	0
 11084  12C7  00F1               	movwf	?___fladd
 11085  12C8  0008               	return
 11086  12C9                     l6847:	
 11087  12C9  0875               	movf	___fladd@a,w
 11088  12CA  07F1               	addwf	___fladd@b,f
 11089  12CB  0876               	movf	___fladd@a+1,w
 11090  12CC  3DF2               	addwfc	___fladd@b+1,f
 11091  12CD  0877               	movf	___fladd@a+2,w
 11092  12CE  3DF3               	addwfc	___fladd@b+2,f
 11093  12CF  0878               	movf	___fladd@a+3,w
 11094  12D0  3DF4               	addwfc	___fladd@b+3,f
 11095  12D1  1C74               	btfss	___fladd@b+3,0
 11096  12D2  2B66               	goto	l6899
 11097  12D3  1C2B               	btfss	___fladd@grs,0
 11098  12D4  2ADB               	goto	l6855
 11099  12D5  362B               	lsrf	___fladd@grs,w
 11100  12D6  3801               	iorlw	1
 11101  12D7  00A0               	movwf	??___fladd
 11102  12D8  0820               	movf	??___fladd,w
 11103  12D9  00AB               	movwf	___fladd@grs
 11104  12DA  2ADD               	goto	l6857
 11105  12DB                     l6855:	
 11106  12DB  1003               	clrc
 11107  12DC  0CAB               	rrf	___fladd@grs,f
 11108  12DD                     l6857:	
 11109  12DD  1871               	btfsc	___fladd@b,0
 11110  12DE  17AB               	bsf	___fladd@grs,7
 11111  12DF  3001               	movlw	1
 11112  12E0  00A0               	movwf	??___fladd
 11113  12E1                     u9645:	
 11114  12E1  37F4               	asrf	___fladd@b+3,f
 11115  12E2  0CF3               	rrf	___fladd@b+2,f
 11116  12E3  0CF2               	rrf	___fladd@b+1,f
 11117  12E4  0CF1               	rrf	___fladd@b,f
 11118  12E5  0BA0               	decfsz	??___fladd& (0+127),f
 11119  12E6  2AE1               	goto	u9645
 11120  12E7  3001               	movlw	1
 11121  12E8  00A0               	movwf	??___fladd
 11122  12E9  0820               	movf	??___fladd,w
 11123  12EA  07AA               	addwf	___fladd@bexp,f
 11124  12EB  2B66               	goto	l6899
 11125  12EC                     l6865:	
 11126  12EC  0874               	movf	___fladd@b+3,w
 11127  12ED  3A80               	xorlw	128
 11128  12EE  00A0               	movwf	??___fladd
 11129  12EF  0878               	movf	___fladd@a+3,w
 11130  12F0  3A80               	xorlw	128
 11131  12F1  0220               	subwf	??___fladd,w
 11132  12F2  1D03               	skipz
 11133  12F3  2AFE               	goto	u9653
 11134  12F4  0877               	movf	___fladd@a+2,w
 11135  12F5  0273               	subwf	___fladd@b+2,w
 11136  12F6  1D03               	skipz
 11137  12F7  2AFE               	goto	u9653
 11138  12F8  0876               	movf	___fladd@a+1,w
 11139  12F9  0272               	subwf	___fladd@b+1,w
 11140  12FA  1D03               	skipz
 11141  12FB  2AFE               	goto	u9653
 11142  12FC  0875               	movf	___fladd@a,w
 11143  12FD  0271               	subwf	___fladd@b,w
 11144  12FE                     u9653:	
 11145  12FE  1803               	skipnc
 11146  12FF  2B36               	goto	l6875
 11147  1300  30FF               	movlw	255
 11148  1301  00A0               	movwf	??___fladd
 11149  1302  30FF               	movlw	255
 11150  1303  00A1               	movwf	??___fladd+1
 11151  1304  30FF               	movlw	255
 11152  1305  00A2               	movwf	??___fladd+2
 11153  1306  30FF               	movlw	255
 11154  1307  00A3               	movwf	??___fladd+3
 11155  1308  0871               	movf	___fladd@b,w
 11156  1309  0275               	subwf	___fladd@a,w
 11157  130A  00A4               	movwf	??___fladd+4
 11158  130B  0872               	movf	___fladd@b+1,w
 11159  130C  3B76               	subwfb	___fladd@a+1,w
 11160  130D  00A5               	movwf	??___fladd+5
 11161  130E  0873               	movf	___fladd@b+2,w
 11162  130F  3B77               	subwfb	___fladd@a+2,w
 11163  1310  00A6               	movwf	??___fladd+6
 11164  1311  0874               	movf	___fladd@b+3,w
 11165  1312  3B78               	subwfb	___fladd@a+3,w
 11166  1313  00A7               	movwf	??___fladd+7
 11167  1314  0824               	movf	??___fladd+4,w
 11168  1315  07A0               	addwf	??___fladd,f
 11169  1316  0825               	movf	??___fladd+5,w
 11170  1317  3DA1               	addwfc	??___fladd+1,f
 11171  1318  0826               	movf	??___fladd+6,w
 11172  1319  3DA2               	addwfc	??___fladd+2,f
 11173  131A  0827               	movf	??___fladd+7,w
 11174  131B  3DA3               	addwfc	??___fladd+3,f
 11175  131C  0823               	movf	??___fladd+3,w
 11176  131D  00F4               	movwf	___fladd@b+3
 11177  131E  0822               	movf	??___fladd+2,w
 11178  131F  00F3               	movwf	___fladd@b+2
 11179  1320  0821               	movf	??___fladd+1,w
 11180  1321  00F2               	movwf	___fladd@b+1
 11181  1322  0820               	movf	??___fladd,w
 11182  1323  00F1               	movwf	___fladd@b
 11183  1324  3080               	movlw	128
 11184  1325  00A0               	movwf	??___fladd
 11185  1326  0820               	movf	??___fladd,w
 11186  1327  06A8               	xorwf	___fladd@signs,f
 11187  1328  09AB               	comf	___fladd@grs,f
 11188  1329  0AAB               	incf	___fladd@grs,f
 11189  132A  082B               	movf	___fladd@grs,w
 11190  132B  1D03               	btfss	3,2
 11191  132C  2B3E               	goto	l1163
 11192  132D  3001               	movlw	1
 11193  132E  07F1               	addwf	___fladd@b,f
 11194  132F  3000               	movlw	0
 11195  1330  3DF2               	addwfc	___fladd@b+1,f
 11196  1331  3000               	movlw	0
 11197  1332  3DF3               	addwfc	___fladd@b+2,f
 11198  1333  3000               	movlw	0
 11199  1334  3DF4               	addwfc	___fladd@b+3,f
 11200  1335  2B3E               	goto	l1163
 11201  1336                     l6875:	
 11202  1336  0875               	movf	___fladd@a,w
 11203  1337  02F1               	subwf	___fladd@b,f
 11204  1338  0876               	movf	___fladd@a+1,w
 11205  1339  3BF2               	subwfb	___fladd@b+1,f
 11206  133A  0877               	movf	___fladd@a+2,w
 11207  133B  3BF3               	subwfb	___fladd@b+2,f
 11208  133C  0878               	movf	___fladd@a+3,w
 11209  133D  3BF4               	subwfb	___fladd@b+3,f
 11210  133E                     l1163:	
 11211  133E  0874               	movf	___fladd@b+3,w
 11212  133F  0473               	iorwf	___fladd@b+2,w
 11213  1340  0472               	iorwf	___fladd@b+1,w
 11214  1341  0471               	iorwf	___fladd@b,w
 11215  1342  1D03               	skipz
 11216  1343  2B64               	goto	l6897
 11217  1344  082B               	movf	___fladd@grs,w
 11218  1345  1D03               	btfss	3,2
 11219  1346  2B64               	goto	l6897
 11220  1347  3000               	movlw	0
 11221  1348  00F4               	movwf	?___fladd+3
 11222  1349  3000               	movlw	0
 11223  134A  00F3               	movwf	?___fladd+2
 11224  134B  3000               	movlw	0
 11225  134C  00F2               	movwf	?___fladd+1
 11226  134D  3000               	movlw	0
 11227  134E  00F1               	movwf	?___fladd
 11228  134F  0008               	return
 11229  1350                     l6883:	
 11230  1350  3001               	movlw	1
 11231  1351                     u9695:	
 11232  1351  35F1               	lslf	___fladd@b,f
 11233  1352  0DF2               	rlf	___fladd@b+1,f
 11234  1353  0DF3               	rlf	___fladd@b+2,f
 11235  1354  0DF4               	rlf	___fladd@b+3,f
 11236  1355  0B89               	decfsz	9,f
 11237  1356  2B51               	goto	u9695
 11238  1357  1BAB               	btfsc	___fladd@grs,7
 11239  1358  1471               	bsf	___fladd@b,0
 11240  1359  1C2B               	btfss	___fladd@grs,0
 11241  135A  2B5D               	goto	l6891
 11242  135B  1403               	setc
 11243  135C  2B5E               	goto	L11
 11244  135D                     l6891:	
 11245  135D  1003               	clrc
 11246  135E                     L11:	
 11247  135E  0DAB               	rlf	___fladd@grs,f
 11248  135F  082A               	movf	___fladd@bexp,w
 11249  1360  1903               	btfsc	3,2
 11250  1361  2B64               	goto	l6897
 11251  1362  3001               	movlw	1
 11252  1363  02AA               	subwf	___fladd@bexp,f
 11253  1364                     l6897:	
 11254  1364  1FF3               	btfss	___fladd@b+2,7
 11255  1365  2B50               	goto	l6883
 11256  1366                     l6899:	
 11257  1366  01A9               	clrf	___fladd@aexp
 11258  1367  1FAB               	btfss	___fladd@grs,7
 11259  1368  2B71               	goto	l6909
 11260  1369  082B               	movf	___fladd@grs,w
 11261  136A  397F               	andlw	127
 11262  136B  1903               	btfsc	3,2
 11263  136C  1871               	btfsc	___fladd@b,0
 11264  136D  2B6F               	goto	l6905
 11265  136E  2B71               	goto	l6909
 11266  136F                     l6905:	
 11267  136F  01A9               	clrf	___fladd@aexp
 11268  1370  0AA9               	incf	___fladd@aexp,f
 11269  1371                     l6909:	
 11270  1371  0829               	movf	___fladd@aexp,w
 11271  1372  1903               	btfsc	3,2
 11272  1373  2B9D               	goto	l1176
 11273  1374  3001               	movlw	1
 11274  1375  07F1               	addwf	___fladd@b,f
 11275  1376  3000               	movlw	0
 11276  1377  3DF2               	addwfc	___fladd@b+1,f
 11277  1378  3000               	movlw	0
 11278  1379  3DF3               	addwfc	___fladd@b+2,f
 11279  137A  3000               	movlw	0
 11280  137B  3DF4               	addwfc	___fladd@b+3,f
 11281  137C  1C74               	btfss	___fladd@b+3,0
 11282  137D  2B9D               	goto	l1176
 11283  137E  0871               	movf	___fladd@b,w
 11284  137F  00A0               	movwf	??___fladd
 11285  1380  0872               	movf	___fladd@b+1,w
 11286  1381  00A1               	movwf	??___fladd+1
 11287  1382  0873               	movf	___fladd@b+2,w
 11288  1383  00A2               	movwf	??___fladd+2
 11289  1384  0874               	movf	___fladd@b+3,w
 11290  1385  00A3               	movwf	??___fladd+3
 11291  1386  3001               	movlw	1
 11292  1387  00A4               	movwf	??___fladd+4
 11293  1388                     u9795:	
 11294  1388  37A3               	asrf	??___fladd+3,f
 11295  1389  0CA2               	rrf	??___fladd+2,f
 11296  138A  0CA1               	rrf	??___fladd+1,f
 11297  138B  0CA0               	rrf	??___fladd,f
 11298  138C  0BA4               	decfsz	??___fladd+4,f
 11299  138D  2B88               	goto	u9795
 11300  138E  0823               	movf	??___fladd+3,w
 11301  138F  00F4               	movwf	___fladd@b+3
 11302  1390  0822               	movf	??___fladd+2,w
 11303  1391  00F3               	movwf	___fladd@b+2
 11304  1392  0821               	movf	??___fladd+1,w
 11305  1393  00F2               	movwf	___fladd@b+1
 11306  1394  0820               	movf	??___fladd,w
 11307  1395  00F1               	movwf	___fladd@b
 11308  1396  0A2A               	incf	___fladd@bexp,w
 11309  1397  1903               	btfsc	3,2
 11310  1398  2B9D               	goto	l1176
 11311  1399  3001               	movlw	1
 11312  139A  00A0               	movwf	??___fladd
 11313  139B  0820               	movf	??___fladd,w
 11314  139C  07AA               	addwf	___fladd@bexp,f
 11315  139D                     l1176:	
 11316  139D  0A2A               	incf	___fladd@bexp,w
 11317  139E  1D03               	btfss	3,2
 11318  139F  082A               	movf	___fladd@bexp,w
 11319  13A0  1D03               	btfss	3,2
 11320  13A1  2BAD               	goto	l6927
 11321  13A2  3000               	movlw	0
 11322  13A3  00F4               	movwf	___fladd@b+3
 11323  13A4  3000               	movlw	0
 11324  13A5  00F3               	movwf	___fladd@b+2
 11325  13A6  3000               	movlw	0
 11326  13A7  00F2               	movwf	___fladd@b+1
 11327  13A8  3000               	movlw	0
 11328  13A9  00F1               	movwf	___fladd@b
 11329  13AA  082A               	movf	___fladd@bexp,w
 11330  13AB  1903               	btfsc	3,2
 11331  13AC  01A8               	clrf	___fladd@signs
 11332  13AD                     l6927:	
 11333  13AD  1C2A               	btfss	___fladd@bexp,0
 11334  13AE  2BB1               	goto	l6931
 11335  13AF  17F3               	bsf	___fladd@b+2,7
 11336  13B0  2BB5               	goto	l1184
 11337  13B1                     l6931:	
 11338  13B1  307F               	movlw	127
 11339  13B2  00A0               	movwf	??___fladd
 11340  13B3  0820               	movf	??___fladd,w
 11341  13B4  05F3               	andwf	___fladd@b+2,f
 11342  13B5                     l1184:	
 11343  13B5  362A               	lsrf	___fladd@bexp,w
 11344  13B6  00A0               	movwf	??___fladd
 11345  13B7  0820               	movf	??___fladd,w
 11346  13B8  00F4               	movwf	___fladd@b+3
 11347  13B9  1FA8               	btfss	___fladd@signs,7
 11348  13BA  0008               	return
 11349  13BB  17F4               	bsf	___fladd@b+3,7
 11350  13BC  0008               	return
 11351  13BD                     __end_of___fladd:	
 11352                           
 11353                           	psect	text24
 11354  34FB                     __ptext24:	
 11355 ;; *************** function ___flneg *****************
 11356 ;; Defined at:
 11357 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  f1              4    1[COMMON] unsigned char 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  4    1[COMMON] unsigned char 
 11364 ;; Registers used:
 11365 ;;		wreg
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11375 ;;Total ram usage:        4 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    1
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_efgtoa
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           
 11386                           ;psect for function ___flneg
 11387  34FB                     ___flneg:	
 11388                           
 11389                           ;incstack = 0
 11390                           ; Regs used in ___flneg: [wreg]
 11391  34FB  0874               	movf	___flneg@f1+3,w
 11392  34FC  0473               	iorwf	___flneg@f1+2,w
 11393  34FD  0472               	iorwf	___flneg@f1+1,w
 11394  34FE  0471               	iorwf	___flneg@f1,w
 11395  34FF  1903               	skipnz
 11396  3500  0008               	return
 11397  3501  3080               	movlw	128
 11398  3502  06F4               	xorwf	___flneg@f1+3,f
 11399  3503  0008               	return
 11400  3504                     __end_of___flneg:	
 11401                           
 11402                           	psect	text25
 11403  28A3                     __ptext25:	
 11404 ;; *************** function ___fleq *****************
 11405 ;; Defined at:
 11406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  ff1             4    1[COMMON] unsigned char 
 11409 ;;  ff2             4    5[COMMON] unsigned char 
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;		None               void
 11414 ;; Registers used:
 11415 ;;		wreg, status,2, status,0
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11424 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11425 ;;Total ram usage:       12 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    1
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_efgtoa
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           
 11436                           ;psect for function ___fleq
 11437  28A3                     ___fleq:	
 11438                           
 11439                           ;incstack = 0
 11440                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11441  28A3  3000               	movlw	0
 11442  28A4  0571               	andwf	___fleq@ff1,w
 11443  28A5  0020               	movlb	0	; select bank0
 11444  28A6  00A0               	movwf	??___fleq
 11445  28A7  3000               	movlw	0
 11446  28A8  0572               	andwf	___fleq@ff1+1,w
 11447  28A9  00A1               	movwf	??___fleq+1
 11448  28AA  3080               	movlw	128
 11449  28AB  0573               	andwf	___fleq@ff1+2,w
 11450  28AC  00A2               	movwf	??___fleq+2
 11451  28AD  307F               	movlw	127
 11452  28AE  0574               	andwf	___fleq@ff1+3,w
 11453  28AF  00A3               	movwf	??___fleq+3
 11454  28B0  0823               	movf	??___fleq+3,w
 11455  28B1  0422               	iorwf	??___fleq+2,w
 11456  28B2  0421               	iorwf	??___fleq+1,w
 11457  28B3  0420               	iorwf	??___fleq,w
 11458  28B4  1D03               	skipz
 11459  28B5  28BE               	goto	l1010
 11460  28B6  3000               	movlw	0
 11461  28B7  00F4               	movwf	___fleq@ff1+3
 11462  28B8  3000               	movlw	0
 11463  28B9  00F3               	movwf	___fleq@ff1+2
 11464  28BA  3000               	movlw	0
 11465  28BB  00F2               	movwf	___fleq@ff1+1
 11466  28BC  3000               	movlw	0
 11467  28BD  00F1               	movwf	___fleq@ff1
 11468  28BE                     l1010:	
 11469  28BE  3000               	movlw	0
 11470  28BF  0575               	andwf	___fleq@ff2,w
 11471  28C0  00A0               	movwf	??___fleq
 11472  28C1  3000               	movlw	0
 11473  28C2  0576               	andwf	___fleq@ff2+1,w
 11474  28C3  00A1               	movwf	??___fleq+1
 11475  28C4  3080               	movlw	128
 11476  28C5  0577               	andwf	___fleq@ff2+2,w
 11477  28C6  00A2               	movwf	??___fleq+2
 11478  28C7  307F               	movlw	127
 11479  28C8  0578               	andwf	___fleq@ff2+3,w
 11480  28C9  00A3               	movwf	??___fleq+3
 11481  28CA  0823               	movf	??___fleq+3,w
 11482  28CB  0422               	iorwf	??___fleq+2,w
 11483  28CC  0421               	iorwf	??___fleq+1,w
 11484  28CD  0420               	iorwf	??___fleq,w
 11485  28CE  1D03               	skipz
 11486  28CF  28D8               	goto	l1011
 11487  28D0  3000               	movlw	0
 11488  28D1  00F8               	movwf	___fleq@ff2+3
 11489  28D2  3000               	movlw	0
 11490  28D3  00F7               	movwf	___fleq@ff2+2
 11491  28D4  3000               	movlw	0
 11492  28D5  00F6               	movwf	___fleq@ff2+1
 11493  28D6  3000               	movlw	0
 11494  28D7  00F5               	movwf	___fleq@ff2
 11495  28D8                     l1011:	
 11496  28D8  0878               	movf	___fleq@ff2+3,w
 11497  28D9  0674               	xorwf	___fleq@ff1+3,w
 11498  28DA  1D03               	skipz
 11499  28DB  28E6               	goto	u10005
 11500  28DC  0877               	movf	___fleq@ff2+2,w
 11501  28DD  0673               	xorwf	___fleq@ff1+2,w
 11502  28DE  1D03               	skipz
 11503  28DF  28E6               	goto	u10005
 11504  28E0  0876               	movf	___fleq@ff2+1,w
 11505  28E1  0672               	xorwf	___fleq@ff1+1,w
 11506  28E2  1D03               	skipz
 11507  28E3  28E6               	goto	u10005
 11508  28E4  0875               	movf	___fleq@ff2,w
 11509  28E5  0671               	xorwf	___fleq@ff1,w
 11510  28E6                     u10005:	
 11511  28E6  1903               	skipnz
 11512  28E7  28EA               	goto	l6991
 11513  28E8  1003               	clrc
 11514  28E9  0008               	return
 11515  28EA                     l6991:	
 11516  28EA  1403               	setc
 11517  28EB  0008               	return
 11518  28EC                     __end_of___fleq:	
 11519                           
 11520                           	psect	text26
 11521  285E                     __ptext26:	
 11522 ;; *************** function ___awmod *****************
 11523 ;; Defined at:
 11524 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  divisor         2    1[COMMON] int 
 11527 ;;  dividend        2    3[COMMON] int 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  sign            1    7[COMMON] unsigned char 
 11530 ;;  counter         1    6[COMMON] unsigned char 
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  2    1[COMMON] int 
 11533 ;; Registers used:
 11534 ;;		wreg, status,2, status,0
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;Total ram usage:        7 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    1
 11547 ;; This function calls:
 11548 ;;		Nothing
 11549 ;; This function is called by:
 11550 ;;		_efgtoa
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           
 11555                           ;psect for function ___awmod
 11556  285E                     ___awmod:	
 11557                           
 11558                           ;incstack = 0
 11559                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11560  285E  01F7               	clrf	___awmod@sign
 11561  285F  1FF4               	btfss	___awmod@dividend+1,7
 11562  2860  2868               	goto	l4645
 11563  2861  09F3               	comf	___awmod@dividend,f
 11564  2862  09F4               	comf	___awmod@dividend+1,f
 11565  2863  0AF3               	incf	___awmod@dividend,f
 11566  2864  1903               	skipnz
 11567  2865  0AF4               	incf	___awmod@dividend+1,f
 11568  2866  01F7               	clrf	___awmod@sign
 11569  2867  0AF7               	incf	___awmod@sign,f
 11570  2868                     l4645:	
 11571  2868  1FF2               	btfss	___awmod@divisor+1,7
 11572  2869  286F               	goto	l4649
 11573  286A  09F1               	comf	___awmod@divisor,f
 11574  286B  09F2               	comf	___awmod@divisor+1,f
 11575  286C  0AF1               	incf	___awmod@divisor,f
 11576  286D  1903               	skipnz
 11577  286E  0AF2               	incf	___awmod@divisor+1,f
 11578  286F                     l4649:	
 11579  286F  0871               	movf	___awmod@divisor,w
 11580  2870  0472               	iorwf	___awmod@divisor+1,w
 11581  2871  1903               	btfsc	3,2
 11582  2872  2896               	goto	l4667
 11583  2873  01F6               	clrf	___awmod@counter
 11584  2874  0AF6               	incf	___awmod@counter,f
 11585  2875                     l4657:	
 11586  2875  1BF2               	btfsc	___awmod@divisor+1,7
 11587  2876  2881               	goto	l4659
 11588  2877  3001               	movlw	1
 11589  2878                     u6025:	
 11590  2878  35F1               	lslf	___awmod@divisor,f
 11591  2879  0DF2               	rlf	___awmod@divisor+1,f
 11592  287A  0B89               	decfsz	9,f
 11593  287B  2878               	goto	u6025
 11594  287C  3001               	movlw	1
 11595  287D  00F5               	movwf	??___awmod
 11596  287E  0875               	movf	??___awmod,w
 11597  287F  07F6               	addwf	___awmod@counter,f
 11598  2880  2875               	goto	l4657
 11599  2881                     l4659:	
 11600  2881  0872               	movf	___awmod@divisor+1,w
 11601  2882  0274               	subwf	___awmod@dividend+1,w
 11602  2883  1D03               	skipz
 11603  2884  2887               	goto	u6045
 11604  2885  0871               	movf	___awmod@divisor,w
 11605  2886  0273               	subwf	___awmod@dividend,w
 11606  2887                     u6045:	
 11607  2887  1C03               	skipc
 11608  2888  288D               	goto	l4663
 11609  2889  0871               	movf	___awmod@divisor,w
 11610  288A  02F3               	subwf	___awmod@dividend,f
 11611  288B  0872               	movf	___awmod@divisor+1,w
 11612  288C  3BF4               	subwfb	___awmod@dividend+1,f
 11613  288D                     l4663:	
 11614  288D  3001               	movlw	1
 11615  288E                     u6055:	
 11616  288E  36F2               	lsrf	___awmod@divisor+1,f
 11617  288F  0CF1               	rrf	___awmod@divisor,f
 11618  2890  0B89               	decfsz	9,f
 11619  2891  288E               	goto	u6055
 11620  2892  3001               	movlw	1
 11621  2893  02F6               	subwf	___awmod@counter,f
 11622  2894  1D03               	btfss	3,2
 11623  2895  2881               	goto	l4659
 11624  2896                     l4667:	
 11625  2896  0877               	movf	___awmod@sign,w
 11626  2897  1903               	btfsc	3,2
 11627  2898  289E               	goto	l4671
 11628  2899  09F3               	comf	___awmod@dividend,f
 11629  289A  09F4               	comf	___awmod@dividend+1,f
 11630  289B  0AF3               	incf	___awmod@dividend,f
 11631  289C  1903               	skipnz
 11632  289D  0AF4               	incf	___awmod@dividend+1,f
 11633  289E                     l4671:	
 11634  289E  0874               	movf	___awmod@dividend+1,w
 11635  289F  00F2               	movwf	?___awmod+1
 11636  28A0  0873               	movf	___awmod@dividend,w
 11637  28A1  00F1               	movwf	?___awmod
 11638  28A2  0008               	return
 11639  28A3                     __end_of___awmod:	
 11640                           
 11641                           	psect	text27
 11642  29DD                     __ptext27:	
 11643 ;; *************** function ___awdiv *****************
 11644 ;; Defined at:
 11645 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  divisor         2    1[COMMON] int 
 11648 ;;  dividend        2    3[COMMON] int 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;  quotient        2    8[COMMON] int 
 11651 ;;  sign            1    7[COMMON] unsigned char 
 11652 ;;  counter         1    6[COMMON] unsigned char 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  2    1[COMMON] int 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11665 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11666 ;;Total ram usage:        9 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    1
 11669 ;; This function calls:
 11670 ;;		Nothing
 11671 ;; This function is called by:
 11672 ;;		_efgtoa
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           
 11677                           ;psect for function ___awdiv
 11678  29DD                     ___awdiv:	
 11679                           
 11680                           ;incstack = 0
 11681                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11682  29DD  01F7               	clrf	___awdiv@sign
 11683  29DE  1FF2               	btfss	___awdiv@divisor+1,7
 11684  29DF  29E7               	goto	l4601
 11685  29E0  09F1               	comf	___awdiv@divisor,f
 11686  29E1  09F2               	comf	___awdiv@divisor+1,f
 11687  29E2  0AF1               	incf	___awdiv@divisor,f
 11688  29E3  1903               	skipnz
 11689  29E4  0AF2               	incf	___awdiv@divisor+1,f
 11690  29E5  01F7               	clrf	___awdiv@sign
 11691  29E6  0AF7               	incf	___awdiv@sign,f
 11692  29E7                     l4601:	
 11693  29E7  1FF4               	btfss	___awdiv@dividend+1,7
 11694  29E8  29F2               	goto	l4607
 11695  29E9  09F3               	comf	___awdiv@dividend,f
 11696  29EA  09F4               	comf	___awdiv@dividend+1,f
 11697  29EB  0AF3               	incf	___awdiv@dividend,f
 11698  29EC  1903               	skipnz
 11699  29ED  0AF4               	incf	___awdiv@dividend+1,f
 11700  29EE  3001               	movlw	1
 11701  29EF  00F5               	movwf	??___awdiv
 11702  29F0  0875               	movf	??___awdiv,w
 11703  29F1  06F7               	xorwf	___awdiv@sign,f
 11704  29F2                     l4607:	
 11705  29F2  01F8               	clrf	___awdiv@quotient
 11706  29F3  01F9               	clrf	___awdiv@quotient+1
 11707  29F4  0871               	movf	___awdiv@divisor,w
 11708  29F5  0472               	iorwf	___awdiv@divisor+1,w
 11709  29F6  1903               	btfsc	3,2
 11710  29F7  2A21               	goto	l4629
 11711  29F8  01F6               	clrf	___awdiv@counter
 11712  29F9  0AF6               	incf	___awdiv@counter,f
 11713  29FA                     l4617:	
 11714  29FA  1BF2               	btfsc	___awdiv@divisor+1,7
 11715  29FB  2A06               	goto	l4619
 11716  29FC  3001               	movlw	1
 11717  29FD                     u5925:	
 11718  29FD  35F1               	lslf	___awdiv@divisor,f
 11719  29FE  0DF2               	rlf	___awdiv@divisor+1,f
 11720  29FF  0B89               	decfsz	9,f
 11721  2A00  29FD               	goto	u5925
 11722  2A01  3001               	movlw	1
 11723  2A02  00F5               	movwf	??___awdiv
 11724  2A03  0875               	movf	??___awdiv,w
 11725  2A04  07F6               	addwf	___awdiv@counter,f
 11726  2A05  29FA               	goto	l4617
 11727  2A06                     l4619:	
 11728  2A06  3001               	movlw	1
 11729  2A07                     u5945:	
 11730  2A07  35F8               	lslf	___awdiv@quotient,f
 11731  2A08  0DF9               	rlf	___awdiv@quotient+1,f
 11732  2A09  0B89               	decfsz	9,f
 11733  2A0A  2A07               	goto	u5945
 11734  2A0B  0872               	movf	___awdiv@divisor+1,w
 11735  2A0C  0274               	subwf	___awdiv@dividend+1,w
 11736  2A0D  1D03               	skipz
 11737  2A0E  2A11               	goto	u5955
 11738  2A0F  0871               	movf	___awdiv@divisor,w
 11739  2A10  0273               	subwf	___awdiv@dividend,w
 11740  2A11                     u5955:	
 11741  2A11  1C03               	skipc
 11742  2A12  2A18               	goto	l4625
 11743  2A13  0871               	movf	___awdiv@divisor,w
 11744  2A14  02F3               	subwf	___awdiv@dividend,f
 11745  2A15  0872               	movf	___awdiv@divisor+1,w
 11746  2A16  3BF4               	subwfb	___awdiv@dividend+1,f
 11747  2A17  1478               	bsf	___awdiv@quotient,0
 11748  2A18                     l4625:	
 11749  2A18  3001               	movlw	1
 11750  2A19                     u5965:	
 11751  2A19  36F2               	lsrf	___awdiv@divisor+1,f
 11752  2A1A  0CF1               	rrf	___awdiv@divisor,f
 11753  2A1B  0B89               	decfsz	9,f
 11754  2A1C  2A19               	goto	u5965
 11755  2A1D  3001               	movlw	1
 11756  2A1E  02F6               	subwf	___awdiv@counter,f
 11757  2A1F  1D03               	btfss	3,2
 11758  2A20  2A06               	goto	l4619
 11759  2A21                     l4629:	
 11760  2A21  0877               	movf	___awdiv@sign,w
 11761  2A22  1903               	btfsc	3,2
 11762  2A23  2A29               	goto	l4633
 11763  2A24  09F8               	comf	___awdiv@quotient,f
 11764  2A25  09F9               	comf	___awdiv@quotient+1,f
 11765  2A26  0AF8               	incf	___awdiv@quotient,f
 11766  2A27  1903               	skipnz
 11767  2A28  0AF9               	incf	___awdiv@quotient+1,f
 11768  2A29                     l4633:	
 11769  2A29  0879               	movf	___awdiv@quotient+1,w
 11770  2A2A  00F2               	movwf	?___awdiv+1
 11771  2A2B  0878               	movf	___awdiv@quotient,w
 11772  2A2C  00F1               	movwf	?___awdiv
 11773  2A2D  0008               	return
 11774  2A2E                     __end_of___awdiv:	
 11775                           
 11776                           	psect	text28
 11777  1D54                     __ptext28:	
 11778 ;; *************** function _dtoa *****************
 11779 ;; Defined at:
 11780 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 11783 ;;		 -> vsnprintf@f(6), 
 11784 ;;  d               8   18[BANK0 ] long long 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  n               8   37[BANK0 ] long long 
 11787 ;;  i               2   45[BANK0 ] int 
 11788 ;;  s               2   35[BANK0 ] int 
 11789 ;;  w               2   33[BANK0 ] int 
 11790 ;;  p               2   31[BANK0 ] int 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  2   16[BANK0 ] int 
 11793 ;; Registers used:
 11794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11800 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11801 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11802 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11803 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11804 ;;Total ram usage:       31 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:    5
 11807 ;; This function calls:
 11808 ;;		___aodiv
 11809 ;;		___aomod
 11810 ;;		_abs
 11811 ;;		_pad
 11812 ;; This function is called by:
 11813 ;;		_vfpfcnvrt
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           
 11818                           ;psect for function _dtoa
 11819  1D54                     _dtoa:	
 11820                           
 11821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11822                           
 11823                           ;incstack = 0
 11824                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11825  1D54  0020               	movlb	0	; select bank0
 11826  1D55  0832               	movf	dtoa@d,w
 11827  1D56  00C5               	movwf	dtoa@n
 11828  1D57  0833               	movf	dtoa@d+1,w
 11829  1D58  00C6               	movwf	dtoa@n+1
 11830  1D59  0834               	movf	dtoa@d+2,w
 11831  1D5A  00C7               	movwf	dtoa@n+2
 11832  1D5B  0835               	movf	dtoa@d+3,w
 11833  1D5C  00C8               	movwf	dtoa@n+3
 11834  1D5D  0836               	movf	dtoa@d+4,w
 11835  1D5E  00C9               	movwf	dtoa@n+4
 11836  1D5F  0837               	movf	dtoa@d+5,w
 11837  1D60  00CA               	movwf	dtoa@n+5
 11838  1D61  0838               	movf	dtoa@d+6,w
 11839  1D62  00CB               	movwf	dtoa@n+6
 11840  1D63  0839               	movf	dtoa@d+7,w
 11841  1D64  00CC               	movwf	dtoa@n+7
 11842                           
 11843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11844  1D65  3045               	movlw	low dtoa@n
 11845  1D66  0086               	movwf	6
 11846  1D67  3000               	movlw	high dtoa@n
 11847  1D68  0087               	movwf	7
 11848  1D69  3F47               	moviw [7]fsr1
 11849  1D6A  00BA               	movwf	??_dtoa
 11850  1D6B  1FBA               	btfss	??_dtoa,7
 11851  1D6C  2D6F               	goto	u10020
 11852  1D6D  3001               	movlw	1
 11853  1D6E  2D70               	goto	u10030
 11854  1D6F                     u10020:	
 11855  1D6F  3000               	movlw	0
 11856  1D70                     u10030:	
 11857  1D70  0020               	movlb	0	; select bank0
 11858  1D71  00BB               	movwf	??_dtoa+1
 11859  1D72  01BC               	clrf	??_dtoa+2
 11860  1D73  083B               	movf	??_dtoa+1,w
 11861  1D74  00C3               	movwf	dtoa@s
 11862  1D75  083C               	movf	??_dtoa+2,w
 11863  1D76  00C4               	movwf	dtoa@s+1
 11864                           
 11865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11866  1D77  0843               	movf	dtoa@s,w
 11867  1D78  0444               	iorwf	dtoa@s+1,w
 11868  1D79  1903               	btfsc	3,2
 11869  1D7A  2D99               	goto	l538
 11870                           
 11871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11872  1D7B  09C5               	comf	dtoa@n,f
 11873  1D7C  09C6               	comf	dtoa@n+1,f
 11874  1D7D  09C7               	comf	dtoa@n+2,f
 11875  1D7E  09C8               	comf	dtoa@n+3,f
 11876  1D7F  09C9               	comf	dtoa@n+4,f
 11877  1D80  09CA               	comf	dtoa@n+5,f
 11878  1D81  09CB               	comf	dtoa@n+6,f
 11879  1D82  09CC               	comf	dtoa@n+7,f
 11880  1D83  0AC5               	incf	dtoa@n,f
 11881  1D84  1D03               	skipz
 11882  1D85  2D99               	goto	l538
 11883  1D86  0AC6               	incf	dtoa@n+1,f
 11884  1D87  1D03               	skipz
 11885  1D88  2D99               	goto	l538
 11886  1D89  0AC7               	incf	dtoa@n+2,f
 11887  1D8A  1D03               	skipz
 11888  1D8B  2D99               	goto	l538
 11889  1D8C  0AC8               	incf	dtoa@n+3,f
 11890  1D8D  1D03               	skipz
 11891  1D8E  2D99               	goto	l538
 11892  1D8F  0AC9               	incf	dtoa@n+4,f
 11893  1D90  1D03               	skipz
 11894  1D91  2D99               	goto	l538
 11895  1D92  0ACA               	incf	dtoa@n+5,f
 11896  1D93  1D03               	skipz
 11897  1D94  2D99               	goto	l538
 11898  1D95  0ACB               	incf	dtoa@n+6,f
 11899  1D96  1D03               	skipz
 11900  1D97  2D99               	goto	l538
 11901  1D98  0ACC               	incf	dtoa@n+7,f
 11902  1D99                     l538:	
 11903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 11904                           
 11905                           
 11906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11907  1D99  0023               	movlb	3	; select bank3
 11908  1D9A  1BC1               	btfsc	(_prec+1)^(0+384),7
 11909  1D9B  2DA0               	goto	l539
 11910                           
 11911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11912  1D9C  30FD               	movlw	253
 11913  1D9D  05C2               	andwf	_flags^(0+384),f
 11914  1D9E  30FF               	movlw	255
 11915  1D9F  05C3               	andwf	(_flags+1)^(0+384),f
 11916  1DA0                     l539:	
 11917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 11918                           
 11919                           
 11920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11921  1DA0  0841               	movf	(_prec+1)^(0+384),w
 11922  1DA1  3A80               	xorlw	128
 11923  1DA2  0020               	movlb	0	; select bank0
 11924  1DA3  00BA               	movwf	??_dtoa
 11925  1DA4  3080               	movlw	128
 11926  1DA5  023A               	subwf	??_dtoa,w
 11927  1DA6  1D03               	skipz
 11928  1DA7  2DAB               	goto	u10075
 11929  1DA8  3001               	movlw	1
 11930  1DA9  0023               	movlb	3	; select bank3
 11931  1DAA  0240               	subwf	_prec^(0+384),w
 11932  1DAB                     u10075:	
 11933  1DAB  1803               	skipnc
 11934  1DAC  2DB3               	goto	l7027
 11935  1DAD  3001               	movlw	1
 11936  1DAE  0020               	movlb	0	; select bank0
 11937  1DAF  00BF               	movwf	dtoa@p
 11938  1DB0  3000               	movlw	0
 11939  1DB1  00C0               	movwf	dtoa@p+1
 11940  1DB2  2DBB               	goto	l543
 11941  1DB3                     l7027:	
 11942  1DB3  0023               	movlb	3	; select bank3
 11943  1DB4  0841               	movf	(_prec+1)^(0+384),w
 11944  1DB5  0020               	movlb	0	; select bank0
 11945  1DB6  00C0               	movwf	dtoa@p+1
 11946  1DB7  0023               	movlb	3	; select bank3
 11947  1DB8  0840               	movf	_prec^(0+384),w
 11948  1DB9  0020               	movlb	0	; select bank0
 11949  1DBA  00BF               	movwf	dtoa@p
 11950  1DBB                     l543:	
 11951                           
 11952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11953  1DBB  0023               	movlb	3	; select bank3
 11954  1DBC  083F               	movf	(_width+1)^(0+384),w
 11955  1DBD  0020               	movlb	0	; select bank0
 11956  1DBE  00C2               	movwf	dtoa@w+1
 11957  1DBF  0023               	movlb	3	; select bank3
 11958  1DC0  083E               	movf	_width^(0+384),w
 11959  1DC1  0020               	movlb	0	; select bank0
 11960  1DC2  00C1               	movwf	dtoa@w
 11961                           
 11962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11963  1DC3  0843               	movf	dtoa@s,w
 11964  1DC4  0444               	iorwf	dtoa@s+1,w
 11965  1DC5  1D03               	btfss	3,2
 11966  1DC6  2DCA               	goto	l7033
 11967  1DC7  0023               	movlb	3	; select bank3
 11968  1DC8  1D42               	btfss	_flags^(0+384),2
 11969  1DC9  2DCF               	goto	l544
 11970  1DCA                     l7033:	
 11971                           
 11972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11973  1DCA  30FF               	movlw	255
 11974  1DCB  0020               	movlb	0	; select bank0
 11975  1DCC  07C1               	addwf	dtoa@w,f
 11976  1DCD  30FF               	movlw	255
 11977  1DCE  3DC2               	addwfc	dtoa@w+1,f
 11978  1DCF                     l544:	
 11979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 11980                           
 11981                           
 11982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 11983  1DCF  304F               	movlw	79
 11984  1DD0  0020               	movlb	0	; select bank0
 11985  1DD1  00CD               	movwf	dtoa@i
 11986  1DD2  3000               	movlw	0
 11987  1DD3  00CE               	movwf	dtoa@i+1
 11988                           
 11989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 11990  1DD4  0024               	movlb	4	; select bank4
 11991  1DD5  01EF               	clrf	(_dbuf^(0+512)+79)
 11992                           
 11993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11994  1DD6  2E65               	goto	l547
 11995  1DD7                     l7047:	
 11996  1DD7  0020               	movlb	0	; select bank0
 11997  1DD8  0845               	movf	dtoa@n,w
 11998  1DD9  0446               	iorwf	dtoa@n+1,w
 11999  1DDA  0447               	iorwf	dtoa@n+2,w
 12000  1DDB  0448               	iorwf	dtoa@n+3,w
 12001  1DDC  0449               	iorwf	dtoa@n+4,w
 12002  1DDD  044A               	iorwf	dtoa@n+5,w
 12003  1DDE  044B               	iorwf	dtoa@n+6,w
 12004  1DDF  044C               	iorwf	dtoa@n+7,w
 12005  1DE0  1D03               	skipz
 12006  1DE1  2DFC               	goto	l7037
 12007  1DE2  0840               	movf	dtoa@p+1,w
 12008  1DE3  3A80               	xorlw	128
 12009  1DE4  00BA               	movwf	??_dtoa
 12010  1DE5  3080               	movlw	128
 12011  1DE6  023A               	subwf	??_dtoa,w
 12012  1DE7  1D03               	skipz
 12013  1DE8  2DEB               	goto	u10125
 12014  1DE9  3001               	movlw	1
 12015  1DEA  023F               	subwf	dtoa@p,w
 12016  1DEB                     u10125:	
 12017  1DEB  1803               	skipnc
 12018  1DEC  2DFC               	goto	l7037
 12019  1DED  0020               	movlb	0	; select bank0
 12020  1DEE  0842               	movf	dtoa@w+1,w
 12021  1DEF  3A80               	xorlw	128
 12022  1DF0  00BA               	movwf	??_dtoa
 12023  1DF1  3080               	movlw	128
 12024  1DF2  023A               	subwf	??_dtoa,w
 12025  1DF3  1D03               	skipz
 12026  1DF4  2DF7               	goto	u10135
 12027  1DF5  3001               	movlw	1
 12028  1DF6  0241               	subwf	dtoa@w,w
 12029  1DF7                     u10135:	
 12030  1DF7  1C03               	skipc
 12031  1DF8  2E71               	goto	l7055
 12032  1DF9  0023               	movlb	3	; select bank3
 12033  1DFA  1CC2               	btfss	_flags^(0+384),1
 12034  1DFB  2E71               	goto	l7055
 12035  1DFC                     l7037:	
 12036                           
 12037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12038  1DFC  30FF               	movlw	255
 12039  1DFD  0020               	movlb	0	; select bank0
 12040  1DFE  07CD               	addwf	dtoa@i,f
 12041  1DFF  30FF               	movlw	255
 12042  1E00  3DCE               	addwfc	dtoa@i+1,f
 12043                           
 12044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12045  1E01  300A               	movlw	10
 12046  1E02  00A0               	movwf	___aomod@divisor
 12047  1E03  01A1               	clrf	___aomod@divisor+1
 12048  1E04  01A2               	clrf	___aomod@divisor+2
 12049  1E05  01A3               	clrf	___aomod@divisor+3
 12050  1E06  01A4               	clrf	___aomod@divisor+4
 12051  1E07  01A5               	clrf	___aomod@divisor+5
 12052  1E08  01A6               	clrf	___aomod@divisor+6
 12053  1E09  01A7               	clrf	___aomod@divisor+7
 12054  1E0A  0845               	movf	dtoa@n,w
 12055  1E0B  00A8               	movwf	___aomod@dividend
 12056  1E0C  0846               	movf	dtoa@n+1,w
 12057  1E0D  00A9               	movwf	___aomod@dividend+1
 12058  1E0E  0847               	movf	dtoa@n+2,w
 12059  1E0F  00AA               	movwf	___aomod@dividend+2
 12060  1E10  0848               	movf	dtoa@n+3,w
 12061  1E11  00AB               	movwf	___aomod@dividend+3
 12062  1E12  0849               	movf	dtoa@n+4,w
 12063  1E13  00AC               	movwf	___aomod@dividend+4
 12064  1E14  084A               	movf	dtoa@n+5,w
 12065  1E15  00AD               	movwf	___aomod@dividend+5
 12066  1E16  084B               	movf	dtoa@n+6,w
 12067  1E17  00AE               	movwf	___aomod@dividend+6
 12068  1E18  084C               	movf	dtoa@n+7,w
 12069  1E19  00AF               	movwf	___aomod@dividend+7
 12070  1E1A  31A5  255D  319D   	fcall	___aomod
 12071  1E1D  0020               	movlb	0	; select bank0
 12072  1E1E  0821               	movf	?___aomod+1,w
 12073  1E1F  00F5               	movwf	abs@a+1
 12074  1E20  0820               	movf	?___aomod,w
 12075  1E21  00F4               	movwf	abs@a
 12076  1E22  31B5  257B  319D   	fcall	_abs
 12077  1E25  0874               	movf	?_abs,w
 12078  1E26  3E30               	addlw	48
 12079  1E27  0020               	movlb	0	; select bank0
 12080  1E28  00BA               	movwf	??_dtoa
 12081  1E29  084D               	movf	dtoa@i,w
 12082  1E2A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12083  1E2B  0086               	movwf	6
 12084  1E2C  3002               	movlw	2	; select bank4/5
 12085  1E2D  0087               	movwf	7
 12086  1E2E  083A               	movf	??_dtoa,w
 12087  1E2F  0081               	movwf	1
 12088                           
 12089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12090  1E30  30FF               	movlw	255
 12091  1E31  07BF               	addwf	dtoa@p,f
 12092  1E32  30FF               	movlw	255
 12093  1E33  3DC0               	addwfc	dtoa@p+1,f
 12094                           
 12095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12096  1E34  30FF               	movlw	255
 12097  1E35  07C1               	addwf	dtoa@w,f
 12098  1E36  30FF               	movlw	255
 12099  1E37  3DC2               	addwfc	dtoa@w+1,f
 12100                           
 12101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12102  1E38  300A               	movlw	10
 12103  1E39  00A0               	movwf	___aodiv@divisor
 12104  1E3A  01A1               	clrf	___aodiv@divisor+1
 12105  1E3B  01A2               	clrf	___aodiv@divisor+2
 12106  1E3C  01A3               	clrf	___aodiv@divisor+3
 12107  1E3D  01A4               	clrf	___aodiv@divisor+4
 12108  1E3E  01A5               	clrf	___aodiv@divisor+5
 12109  1E3F  01A6               	clrf	___aodiv@divisor+6
 12110  1E40  01A7               	clrf	___aodiv@divisor+7
 12111  1E41  0845               	movf	dtoa@n,w
 12112  1E42  00A8               	movwf	___aodiv@dividend
 12113  1E43  0846               	movf	dtoa@n+1,w
 12114  1E44  00A9               	movwf	___aodiv@dividend+1
 12115  1E45  0847               	movf	dtoa@n+2,w
 12116  1E46  00AA               	movwf	___aodiv@dividend+2
 12117  1E47  0848               	movf	dtoa@n+3,w
 12118  1E48  00AB               	movwf	___aodiv@dividend+3
 12119  1E49  0849               	movf	dtoa@n+4,w
 12120  1E4A  00AC               	movwf	___aodiv@dividend+4
 12121  1E4B  084A               	movf	dtoa@n+5,w
 12122  1E4C  00AD               	movwf	___aodiv@dividend+5
 12123  1E4D  084B               	movf	dtoa@n+6,w
 12124  1E4E  00AE               	movwf	___aodiv@dividend+6
 12125  1E4F  084C               	movf	dtoa@n+7,w
 12126  1E50  00AF               	movwf	___aodiv@dividend+7
 12127  1E51  3199  212D  319D   	fcall	___aodiv
 12128  1E54  0020               	movlb	0	; select bank0
 12129  1E55  0820               	movf	?___aodiv,w
 12130  1E56  00C5               	movwf	dtoa@n
 12131  1E57  0821               	movf	?___aodiv+1,w
 12132  1E58  00C6               	movwf	dtoa@n+1
 12133  1E59  0822               	movf	?___aodiv+2,w
 12134  1E5A  00C7               	movwf	dtoa@n+2
 12135  1E5B  0823               	movf	?___aodiv+3,w
 12136  1E5C  00C8               	movwf	dtoa@n+3
 12137  1E5D  0824               	movf	?___aodiv+4,w
 12138  1E5E  00C9               	movwf	dtoa@n+4
 12139  1E5F  0825               	movf	?___aodiv+5,w
 12140  1E60  00CA               	movwf	dtoa@n+5
 12141  1E61  0826               	movf	?___aodiv+6,w
 12142  1E62  00CB               	movwf	dtoa@n+6
 12143  1E63  0827               	movf	?___aodiv+7,w
 12144  1E64  00CC               	movwf	dtoa@n+7
 12145  1E65                     l547:	
 12146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 12147                           
 12148                           
 12149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12150  1E65  0020               	movlb	0	; select bank0
 12151  1E66  084E               	movf	dtoa@i+1,w
 12152  1E67  3A80               	xorlw	128
 12153  1E68  00BA               	movwf	??_dtoa
 12154  1E69  3080               	movlw	128
 12155  1E6A  023A               	subwf	??_dtoa,w
 12156  1E6B  1D03               	skipz
 12157  1E6C  2E6F               	goto	u10105
 12158  1E6D  3001               	movlw	1
 12159  1E6E  024D               	subwf	dtoa@i,w
 12160  1E6F                     u10105:	
 12161  1E6F  1803               	btfsc	3,0
 12162  1E70  2DD7               	goto	l7047
 12163  1E71                     l7055:	
 12164                           
 12165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12166  1E71  0020               	movlb	0	; select bank0
 12167  1E72  0843               	movf	dtoa@s,w
 12168  1E73  0444               	iorwf	dtoa@s+1,w
 12169  1E74  1D03               	btfss	3,2
 12170  1E75  2E79               	goto	l7059
 12171  1E76  0023               	movlb	3	; select bank3
 12172  1E77  1D42               	btfss	_flags^(0+384),2
 12173  1E78  2E91               	goto	l7069
 12174  1E79                     l7059:	
 12175                           
 12176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12177  1E79  30FF               	movlw	255
 12178  1E7A  0020               	movlb	0	; select bank0
 12179  1E7B  07CD               	addwf	dtoa@i,f
 12180  1E7C  30FF               	movlw	255
 12181  1E7D  3DCE               	addwfc	dtoa@i+1,f
 12182                           
 12183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12184  1E7E  0843               	movf	dtoa@s,w
 12185  1E7F  0444               	iorwf	dtoa@s+1,w
 12186  1E80  1D03               	btfss	3,2
 12187  1E81  2E84               	goto	l7065
 12188  1E82  302B               	movlw	43
 12189  1E83  2E85               	goto	L12
 12190  1E84                     l7065:	
 12191  1E84  302D               	movlw	45
 12192  1E85                     L12:	
 12193  1E85  00BD               	movwf	_dtoa$993
 12194  1E86  3000               	movlw	0
 12195  1E87  00BE               	movwf	_dtoa$993+1
 12196  1E88  083D               	movf	_dtoa$993,w
 12197  1E89  00BA               	movwf	??_dtoa
 12198  1E8A  084D               	movf	dtoa@i,w
 12199  1E8B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12200  1E8C  0086               	movwf	6
 12201  1E8D  3002               	movlw	2	; select bank4/5
 12202  1E8E  0087               	movwf	7
 12203  1E8F  083A               	movf	??_dtoa,w
 12204  1E90  0081               	movwf	1
 12205  1E91                     l7069:	
 12206                           
 12207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12208  1E91  0020               	movlb	0	; select bank0
 12209  1E92  0831               	movf	dtoa@fp+1,w
 12210  1E93  00A7               	movwf	pad@fp+1
 12211  1E94  0830               	movf	dtoa@fp,w
 12212  1E95  00A6               	movwf	pad@fp
 12213  1E96  084D               	movf	dtoa@i,w
 12214  1E97  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12215  1E98  00BA               	movwf	??_dtoa
 12216  1E99  083A               	movf	??_dtoa,w
 12217  1E9A  00A8               	movwf	pad@buf
 12218  1E9B  0842               	movf	dtoa@w+1,w
 12219  1E9C  00AA               	movwf	pad@p+1
 12220  1E9D  0841               	movf	dtoa@w,w
 12221  1E9E  00A9               	movwf	pad@p
 12222  1E9F  31A9  218C         	fcall	_pad
 12223  1EA1  0020               	movlb	0	; select bank0
 12224  1EA2  0827               	movf	?_pad+1,w
 12225  1EA3  00B1               	movwf	?_dtoa+1
 12226  1EA4  0826               	movf	?_pad,w
 12227  1EA5  00B0               	movwf	?_dtoa
 12228  1EA6  0008               	return
 12229  1EA7                     __end_of_dtoa:	
 12230                           
 12231                           	psect	text29
 12232  357B                     __ptext29:	
 12233 ;; *************** function _abs *****************
 12234 ;; Defined at:
 12235 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  a               2    4[COMMON] int 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  2    4[COMMON] int 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:        4 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    1
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		_dtoa
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _abs
 12265  357B                     _abs:	
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _abs: [wreg+status,2+status,0]
 12269  357B  0875               	movf	abs@a+1,w
 12270  357C  3A80               	xorlw	128
 12271  357D  00F6               	movwf	??_abs
 12272  357E  3080               	movlw	128
 12273  357F  0276               	subwf	??_abs,w
 12274  3580  1D03               	skipz
 12275  3581  2D84               	goto	u5335
 12276  3582  3001               	movlw	1
 12277  3583  0274               	subwf	abs@a,w
 12278  3584                     u5335:	
 12279  3584  1803               	skipnc
 12280  3585  0008               	return
 12281  3586  0974               	comf	abs@a,w
 12282  3587  00F6               	movwf	??_abs
 12283  3588  0975               	comf	abs@a+1,w
 12284  3589  00F7               	movwf	??_abs+1
 12285  358A  0AF6               	incf	??_abs,f
 12286  358B  1903               	skipnz
 12287  358C  0AF7               	incf	??_abs+1,f
 12288  358D  0876               	movf	??_abs,w
 12289  358E  00F4               	movwf	?_abs
 12290  358F  0877               	movf	??_abs+1,w
 12291  3590  00F5               	movwf	?_abs+1
 12292  3591  0008               	return
 12293  3592                     __end_of_abs:	
 12294                           
 12295                           	psect	text30
 12296  255D                     __ptext30:	
 12297 ;; *************** function ___aomod *****************
 12298 ;; Defined at:
 12299 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  divisor         8    0[BANK0 ] long long 
 12302 ;;  dividend        8    8[BANK0 ] long long 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  sign            1    3[COMMON] unsigned char 
 12305 ;;  counter         1    2[COMMON] unsigned char 
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  8    0[BANK0 ] long long 
 12308 ;; Registers used:
 12309 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12315 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12318 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;Total ram usage:       19 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    1
 12322 ;; This function calls:
 12323 ;;		Nothing
 12324 ;; This function is called by:
 12325 ;;		_dtoa
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           
 12330                           ;psect for function ___aomod
 12331  255D                     ___aomod:	
 12332                           
 12333                           ;incstack = 0
 12334                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12335  255D  01F3               	clrf	___aomod@sign
 12336  255E  3028               	movlw	low ___aomod@dividend
 12337  255F  0086               	movwf	6
 12338  2560  3000               	movlw	high ___aomod@dividend
 12339  2561  0087               	movwf	7
 12340  2562  3F47               	moviw [7]fsr1
 12341  2563  00F1               	movwf	??___aomod
 12342  2564  1FF1               	btfss	??___aomod,7
 12343  2565  2D87               	goto	l4569
 12344  2566  0020               	movlb	0	; select bank0
 12345  2567  09A8               	comf	___aomod@dividend,f
 12346  2568  09A9               	comf	___aomod@dividend+1,f
 12347  2569  09AA               	comf	___aomod@dividend+2,f
 12348  256A  09AB               	comf	___aomod@dividend+3,f
 12349  256B  09AC               	comf	___aomod@dividend+4,f
 12350  256C  09AD               	comf	___aomod@dividend+5,f
 12351  256D  09AE               	comf	___aomod@dividend+6,f
 12352  256E  09AF               	comf	___aomod@dividend+7,f
 12353  256F  0AA8               	incf	___aomod@dividend,f
 12354  2570  1D03               	skipz
 12355  2571  2D85               	goto	u580lld
 12356  2572  0AA9               	incf	___aomod@dividend+1,f
 12357  2573  1D03               	skipz
 12358  2574  2D85               	goto	u580lld
 12359  2575  0AAA               	incf	___aomod@dividend+2,f
 12360  2576  1D03               	skipz
 12361  2577  2D85               	goto	u580lld
 12362  2578  0AAB               	incf	___aomod@dividend+3,f
 12363  2579  1D03               	skipz
 12364  257A  2D85               	goto	u580lld
 12365  257B  0AAC               	incf	___aomod@dividend+4,f
 12366  257C  1D03               	skipz
 12367  257D  2D85               	goto	u580lld
 12368  257E  0AAD               	incf	___aomod@dividend+5,f
 12369  257F  1D03               	skipz
 12370  2580  2D85               	goto	u580lld
 12371  2581  0AAE               	incf	___aomod@dividend+6,f
 12372  2582  1D03               	skipz
 12373  2583  2D85               	goto	u580lld
 12374  2584  0AAF               	incf	___aomod@dividend+7,f
 12375  2585                     u580lld:	
 12376  2585  01F3               	clrf	___aomod@sign
 12377  2586  0AF3               	incf	___aomod@sign,f
 12378  2587                     l4569:	
 12379  2587  3020               	movlw	low ___aomod@divisor
 12380  2588  0086               	movwf	6
 12381  2589  3000               	movlw	high ___aomod@divisor
 12382  258A  0087               	movwf	7
 12383  258B  3F47               	moviw [7]fsr1
 12384  258C  00F1               	movwf	??___aomod
 12385  258D  1FF1               	btfss	??___aomod,7
 12386  258E  2DAE               	goto	l4573
 12387  258F  0020               	movlb	0	; select bank0
 12388  2590  09A0               	comf	___aomod@divisor,f
 12389  2591  09A1               	comf	___aomod@divisor+1,f
 12390  2592  09A2               	comf	___aomod@divisor+2,f
 12391  2593  09A3               	comf	___aomod@divisor+3,f
 12392  2594  09A4               	comf	___aomod@divisor+4,f
 12393  2595  09A5               	comf	___aomod@divisor+5,f
 12394  2596  09A6               	comf	___aomod@divisor+6,f
 12395  2597  09A7               	comf	___aomod@divisor+7,f
 12396  2598  0AA0               	incf	___aomod@divisor,f
 12397  2599  1D03               	skipz
 12398  259A  2DAE               	goto	l4573
 12399  259B  0AA1               	incf	___aomod@divisor+1,f
 12400  259C  1D03               	skipz
 12401  259D  2DAE               	goto	l4573
 12402  259E  0AA2               	incf	___aomod@divisor+2,f
 12403  259F  1D03               	skipz
 12404  25A0  2DAE               	goto	l4573
 12405  25A1  0AA3               	incf	___aomod@divisor+3,f
 12406  25A2  1D03               	skipz
 12407  25A3  2DAE               	goto	l4573
 12408  25A4  0AA4               	incf	___aomod@divisor+4,f
 12409  25A5  1D03               	skipz
 12410  25A6  2DAE               	goto	l4573
 12411  25A7  0AA5               	incf	___aomod@divisor+5,f
 12412  25A8  1D03               	skipz
 12413  25A9  2DAE               	goto	l4573
 12414  25AA  0AA6               	incf	___aomod@divisor+6,f
 12415  25AB  1D03               	skipz
 12416  25AC  2DAE               	goto	l4573
 12417  25AD  0AA7               	incf	___aomod@divisor+7,f
 12418  25AE                     l4573:	
 12419  25AE  0020               	movlb	0	; select bank0
 12420  25AF  0820               	movf	___aomod@divisor,w
 12421  25B0  0421               	iorwf	___aomod@divisor+1,w
 12422  25B1  0422               	iorwf	___aomod@divisor+2,w
 12423  25B2  0423               	iorwf	___aomod@divisor+3,w
 12424  25B3  0424               	iorwf	___aomod@divisor+4,w
 12425  25B4  0425               	iorwf	___aomod@divisor+5,w
 12426  25B5  0426               	iorwf	___aomod@divisor+6,w
 12427  25B6  0427               	iorwf	___aomod@divisor+7,w
 12428  25B7  1903               	skipnz
 12429  25B8  2E06               	goto	l4589
 12430  25B9  01F2               	clrf	___aomod@counter
 12431  25BA  0AF2               	incf	___aomod@counter,f
 12432  25BB                     l4581:	
 12433  25BB  1BA7               	btfsc	___aomod@divisor+7,7
 12434  25BC  2DCA               	goto	l4583
 12435  25BD  35A0               	lslf	___aomod@divisor,f
 12436  25BE  0DA1               	rlf	___aomod@divisor+1,f
 12437  25BF  0DA2               	rlf	___aomod@divisor+2,f
 12438  25C0  0DA3               	rlf	___aomod@divisor+3,f
 12439  25C1  0DA4               	rlf	___aomod@divisor+4,f
 12440  25C2  0DA5               	rlf	___aomod@divisor+5,f
 12441  25C3  0DA6               	rlf	___aomod@divisor+6,f
 12442  25C4  0DA7               	rlf	___aomod@divisor+7,f
 12443  25C5  3001               	movlw	1
 12444  25C6  00F1               	movwf	??___aomod
 12445  25C7  0871               	movf	??___aomod,w
 12446  25C8  07F2               	addwf	___aomod@counter,f
 12447  25C9  2DBB               	goto	l4581
 12448  25CA                     l4583:	
 12449  25CA  0827               	movf	___aomod@divisor+7,w
 12450  25CB  022F               	subwf	___aomod@dividend+7,w
 12451  25CC  1D03               	skipz
 12452  25CD  2DE8               	goto	u5855
 12453  25CE  0826               	movf	___aomod@divisor+6,w
 12454  25CF  022E               	subwf	___aomod@dividend+6,w
 12455  25D0  1D03               	skipz
 12456  25D1  2DE8               	goto	u5855
 12457  25D2  0825               	movf	___aomod@divisor+5,w
 12458  25D3  022D               	subwf	___aomod@dividend+5,w
 12459  25D4  1D03               	skipz
 12460  25D5  2DE8               	goto	u5855
 12461  25D6  0824               	movf	___aomod@divisor+4,w
 12462  25D7  022C               	subwf	___aomod@dividend+4,w
 12463  25D8  1D03               	skipz
 12464  25D9  2DE8               	goto	u5855
 12465  25DA  0823               	movf	___aomod@divisor+3,w
 12466  25DB  022B               	subwf	___aomod@dividend+3,w
 12467  25DC  1D03               	skipz
 12468  25DD  2DE8               	goto	u5855
 12469  25DE  0822               	movf	___aomod@divisor+2,w
 12470  25DF  022A               	subwf	___aomod@dividend+2,w
 12471  25E0  1D03               	skipz
 12472  25E1  2DE8               	goto	u5855
 12473  25E2  0821               	movf	___aomod@divisor+1,w
 12474  25E3  0229               	subwf	___aomod@dividend+1,w
 12475  25E4  1D03               	skipz
 12476  25E5  2DE8               	goto	u5855
 12477  25E6  0820               	movf	___aomod@divisor,w
 12478  25E7  0228               	subwf	___aomod@dividend,w
 12479  25E8                     u5855:	
 12480  25E8  1C03               	skipc
 12481  25E9  2DFA               	goto	l4587
 12482  25EA  0820               	movf	___aomod@divisor,w
 12483  25EB  02A8               	subwf	___aomod@dividend,f
 12484  25EC  0821               	movf	___aomod@divisor+1,w
 12485  25ED  3BA9               	subwfb	___aomod@dividend+1,f
 12486  25EE  0822               	movf	___aomod@divisor+2,w
 12487  25EF  3BAA               	subwfb	___aomod@dividend+2,f
 12488  25F0  0823               	movf	___aomod@divisor+3,w
 12489  25F1  3BAB               	subwfb	___aomod@dividend+3,f
 12490  25F2  0824               	movf	___aomod@divisor+4,w
 12491  25F3  3BAC               	subwfb	___aomod@dividend+4,f
 12492  25F4  0825               	movf	___aomod@divisor+5,w
 12493  25F5  3BAD               	subwfb	___aomod@dividend+5,f
 12494  25F6  0826               	movf	___aomod@divisor+6,w
 12495  25F7  3BAE               	subwfb	___aomod@dividend+6,f
 12496  25F8  0827               	movf	___aomod@divisor+7,w
 12497  25F9  3BAF               	subwfb	___aomod@dividend+7,f
 12498  25FA                     l4587:	
 12499  25FA  36A7               	lsrf	___aomod@divisor+7,f
 12500  25FB  0CA6               	rrf	___aomod@divisor+6,f
 12501  25FC  0CA5               	rrf	___aomod@divisor+5,f
 12502  25FD  0CA4               	rrf	___aomod@divisor+4,f
 12503  25FE  0CA3               	rrf	___aomod@divisor+3,f
 12504  25FF  0CA2               	rrf	___aomod@divisor+2,f
 12505  2600  0CA1               	rrf	___aomod@divisor+1,f
 12506  2601  0CA0               	rrf	___aomod@divisor,f
 12507  2602  3001               	movlw	1
 12508  2603  02F2               	subwf	___aomod@counter,f
 12509  2604  1D03               	btfss	3,2
 12510  2605  2DCA               	goto	l4583
 12511  2606                     l4589:	
 12512  2606  0873               	movf	___aomod@sign,w
 12513  2607  1903               	btfsc	3,2
 12514  2608  2E27               	goto	l954
 12515  2609  09A8               	comf	___aomod@dividend,f
 12516  260A  09A9               	comf	___aomod@dividend+1,f
 12517  260B  09AA               	comf	___aomod@dividend+2,f
 12518  260C  09AB               	comf	___aomod@dividend+3,f
 12519  260D  09AC               	comf	___aomod@dividend+4,f
 12520  260E  09AD               	comf	___aomod@dividend+5,f
 12521  260F  09AE               	comf	___aomod@dividend+6,f
 12522  2610  09AF               	comf	___aomod@dividend+7,f
 12523  2611  0AA8               	incf	___aomod@dividend,f
 12524  2612  1D03               	skipz
 12525  2613  2E27               	goto	l954
 12526  2614  0AA9               	incf	___aomod@dividend+1,f
 12527  2615  1D03               	skipz
 12528  2616  2E27               	goto	l954
 12529  2617  0AAA               	incf	___aomod@dividend+2,f
 12530  2618  1D03               	skipz
 12531  2619  2E27               	goto	l954
 12532  261A  0AAB               	incf	___aomod@dividend+3,f
 12533  261B  1D03               	skipz
 12534  261C  2E27               	goto	l954
 12535  261D  0AAC               	incf	___aomod@dividend+4,f
 12536  261E  1D03               	skipz
 12537  261F  2E27               	goto	l954
 12538  2620  0AAD               	incf	___aomod@dividend+5,f
 12539  2621  1D03               	skipz
 12540  2622  2E27               	goto	l954
 12541  2623  0AAE               	incf	___aomod@dividend+6,f
 12542  2624  1D03               	skipz
 12543  2625  2E27               	goto	l954
 12544  2626  0AAF               	incf	___aomod@dividend+7,f
 12545  2627                     l954:	
 12546  2627  0020               	movlb	0	; select bank0
 12547  2628  0828               	movf	___aomod@dividend,w
 12548  2629  00A0               	movwf	?___aomod
 12549  262A  0829               	movf	___aomod@dividend+1,w
 12550  262B  00A1               	movwf	?___aomod+1
 12551  262C  082A               	movf	___aomod@dividend+2,w
 12552  262D  00A2               	movwf	?___aomod+2
 12553  262E  082B               	movf	___aomod@dividend+3,w
 12554  262F  00A3               	movwf	?___aomod+3
 12555  2630  082C               	movf	___aomod@dividend+4,w
 12556  2631  00A4               	movwf	?___aomod+4
 12557  2632  082D               	movf	___aomod@dividend+5,w
 12558  2633  00A5               	movwf	?___aomod+5
 12559  2634  082E               	movf	___aomod@dividend+6,w
 12560  2635  00A6               	movwf	?___aomod+6
 12561  2636  082F               	movf	___aomod@dividend+7,w
 12562  2637  00A7               	movwf	?___aomod+7
 12563  2638  0008               	return
 12564  2639                     __end_of___aomod:	
 12565                           
 12566                           	psect	text31
 12567  192D                     __ptext31:	
 12568 ;; *************** function ___aodiv *****************
 12569 ;; Defined at:
 12570 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  divisor         8    0[BANK0 ] long long 
 12573 ;;  dividend        8    8[BANK0 ] long long 
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;  quotient        8    4[COMMON] long long 
 12576 ;;  sign            1    3[COMMON] unsigned char 
 12577 ;;  counter         1    2[COMMON] unsigned char 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  8    0[BANK0 ] long long 
 12580 ;; Registers used:
 12581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12587 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;Total ram usage:       27 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    1
 12594 ;; This function calls:
 12595 ;;		Nothing
 12596 ;; This function is called by:
 12597 ;;		_dtoa
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function ___aodiv
 12603  192D                     ___aodiv:	
 12604                           
 12605                           ;incstack = 0
 12606                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12607  192D  01F3               	clrf	___aodiv@sign
 12608  192E  3020               	movlw	low ___aodiv@divisor
 12609  192F  0086               	movwf	6
 12610  1930  3000               	movlw	high ___aodiv@divisor
 12611  1931  0087               	movwf	7
 12612  1932  3F47               	moviw [7]fsr1
 12613  1933  00F1               	movwf	??___aodiv
 12614  1934  1FF1               	btfss	??___aodiv,7
 12615  1935  2957               	goto	l4531
 12616  1936  0020               	movlb	0	; select bank0
 12617  1937  09A0               	comf	___aodiv@divisor,f
 12618  1938  09A1               	comf	___aodiv@divisor+1,f
 12619  1939  09A2               	comf	___aodiv@divisor+2,f
 12620  193A  09A3               	comf	___aodiv@divisor+3,f
 12621  193B  09A4               	comf	___aodiv@divisor+4,f
 12622  193C  09A5               	comf	___aodiv@divisor+5,f
 12623  193D  09A6               	comf	___aodiv@divisor+6,f
 12624  193E  09A7               	comf	___aodiv@divisor+7,f
 12625  193F  0AA0               	incf	___aodiv@divisor,f
 12626  1940  1D03               	skipz
 12627  1941  2955               	goto	u569lld
 12628  1942  0AA1               	incf	___aodiv@divisor+1,f
 12629  1943  1D03               	skipz
 12630  1944  2955               	goto	u569lld
 12631  1945  0AA2               	incf	___aodiv@divisor+2,f
 12632  1946  1D03               	skipz
 12633  1947  2955               	goto	u569lld
 12634  1948  0AA3               	incf	___aodiv@divisor+3,f
 12635  1949  1D03               	skipz
 12636  194A  2955               	goto	u569lld
 12637  194B  0AA4               	incf	___aodiv@divisor+4,f
 12638  194C  1D03               	skipz
 12639  194D  2955               	goto	u569lld
 12640  194E  0AA5               	incf	___aodiv@divisor+5,f
 12641  194F  1D03               	skipz
 12642  1950  2955               	goto	u569lld
 12643  1951  0AA6               	incf	___aodiv@divisor+6,f
 12644  1952  1D03               	skipz
 12645  1953  2955               	goto	u569lld
 12646  1954  0AA7               	incf	___aodiv@divisor+7,f
 12647  1955                     u569lld:	
 12648  1955  01F3               	clrf	___aodiv@sign
 12649  1956  0AF3               	incf	___aodiv@sign,f
 12650  1957                     l4531:	
 12651  1957  3028               	movlw	low ___aodiv@dividend
 12652  1958  0086               	movwf	6
 12653  1959  3000               	movlw	high ___aodiv@dividend
 12654  195A  0087               	movwf	7
 12655  195B  3F47               	moviw [7]fsr1
 12656  195C  00F1               	movwf	??___aodiv
 12657  195D  1FF1               	btfss	??___aodiv,7
 12658  195E  2982               	goto	l4537
 12659  195F  0020               	movlb	0	; select bank0
 12660  1960  09A8               	comf	___aodiv@dividend,f
 12661  1961  09A9               	comf	___aodiv@dividend+1,f
 12662  1962  09AA               	comf	___aodiv@dividend+2,f
 12663  1963  09AB               	comf	___aodiv@dividend+3,f
 12664  1964  09AC               	comf	___aodiv@dividend+4,f
 12665  1965  09AD               	comf	___aodiv@dividend+5,f
 12666  1966  09AE               	comf	___aodiv@dividend+6,f
 12667  1967  09AF               	comf	___aodiv@dividend+7,f
 12668  1968  0AA8               	incf	___aodiv@dividend,f
 12669  1969  1D03               	skipz
 12670  196A  297E               	goto	l4535
 12671  196B  0AA9               	incf	___aodiv@dividend+1,f
 12672  196C  1D03               	skipz
 12673  196D  297E               	goto	l4535
 12674  196E  0AAA               	incf	___aodiv@dividend+2,f
 12675  196F  1D03               	skipz
 12676  1970  297E               	goto	l4535
 12677  1971  0AAB               	incf	___aodiv@dividend+3,f
 12678  1972  1D03               	skipz
 12679  1973  297E               	goto	l4535
 12680  1974  0AAC               	incf	___aodiv@dividend+4,f
 12681  1975  1D03               	skipz
 12682  1976  297E               	goto	l4535
 12683  1977  0AAD               	incf	___aodiv@dividend+5,f
 12684  1978  1D03               	skipz
 12685  1979  297E               	goto	l4535
 12686  197A  0AAE               	incf	___aodiv@dividend+6,f
 12687  197B  1D03               	skipz
 12688  197C  297E               	goto	l4535
 12689  197D  0AAF               	incf	___aodiv@dividend+7,f
 12690  197E                     l4535:	
 12691  197E  3001               	movlw	1
 12692  197F  00F1               	movwf	??___aodiv
 12693  1980  0871               	movf	??___aodiv,w
 12694  1981  06F3               	xorwf	___aodiv@sign,f
 12695  1982                     l4537:	
 12696  1982  3074               	movlw	low ___aodiv@quotient
 12697  1983  0086               	movwf	6
 12698  1984  3000               	movlw	high ___aodiv@quotient
 12699  1985  0087               	movwf	7
 12700  1986  3008               	movlw	8
 12701  1987  00F1               	movwf	??___aodiv
 12702  1988  3000               	movlw	0
 12703  1989                     u5720:	
 12704  1989  001E               	movwi fsr1++
 12705  198A  0BF1               	decfsz	??___aodiv,f
 12706  198B  2989               	goto	u5720
 12707  198C  0020               	movlb	0	; select bank0
 12708  198D  0820               	movf	___aodiv@divisor,w
 12709  198E  0421               	iorwf	___aodiv@divisor+1,w
 12710  198F  0422               	iorwf	___aodiv@divisor+2,w
 12711  1990  0423               	iorwf	___aodiv@divisor+3,w
 12712  1991  0424               	iorwf	___aodiv@divisor+4,w
 12713  1992  0425               	iorwf	___aodiv@divisor+5,w
 12714  1993  0426               	iorwf	___aodiv@divisor+6,w
 12715  1994  0427               	iorwf	___aodiv@divisor+7,w
 12716  1995  1903               	skipnz
 12717  1996  29ED               	goto	l4559
 12718  1997  01F2               	clrf	___aodiv@counter
 12719  1998  0AF2               	incf	___aodiv@counter,f
 12720  1999                     l4547:	
 12721  1999  1BA7               	btfsc	___aodiv@divisor+7,7
 12722  199A  29A8               	goto	l4549
 12723  199B  35A0               	lslf	___aodiv@divisor,f
 12724  199C  0DA1               	rlf	___aodiv@divisor+1,f
 12725  199D  0DA2               	rlf	___aodiv@divisor+2,f
 12726  199E  0DA3               	rlf	___aodiv@divisor+3,f
 12727  199F  0DA4               	rlf	___aodiv@divisor+4,f
 12728  19A0  0DA5               	rlf	___aodiv@divisor+5,f
 12729  19A1  0DA6               	rlf	___aodiv@divisor+6,f
 12730  19A2  0DA7               	rlf	___aodiv@divisor+7,f
 12731  19A3  3001               	movlw	1
 12732  19A4  00F1               	movwf	??___aodiv
 12733  19A5  0871               	movf	??___aodiv,w
 12734  19A6  07F2               	addwf	___aodiv@counter,f
 12735  19A7  2999               	goto	l4547
 12736  19A8                     l4549:	
 12737  19A8  35F4               	lslf	___aodiv@quotient,f
 12738  19A9  0DF5               	rlf	___aodiv@quotient+1,f
 12739  19AA  0DF6               	rlf	___aodiv@quotient+2,f
 12740  19AB  0DF7               	rlf	___aodiv@quotient+3,f
 12741  19AC  0DF8               	rlf	___aodiv@quotient+4,f
 12742  19AD  0DF9               	rlf	___aodiv@quotient+5,f
 12743  19AE  0DFA               	rlf	___aodiv@quotient+6,f
 12744  19AF  0DFB               	rlf	___aodiv@quotient+7,f
 12745  19B0  0827               	movf	___aodiv@divisor+7,w
 12746  19B1  022F               	subwf	___aodiv@dividend+7,w
 12747  19B2  1D03               	skipz
 12748  19B3  29CE               	goto	u5755
 12749  19B4  0826               	movf	___aodiv@divisor+6,w
 12750  19B5  022E               	subwf	___aodiv@dividend+6,w
 12751  19B6  1D03               	skipz
 12752  19B7  29CE               	goto	u5755
 12753  19B8  0825               	movf	___aodiv@divisor+5,w
 12754  19B9  022D               	subwf	___aodiv@dividend+5,w
 12755  19BA  1D03               	skipz
 12756  19BB  29CE               	goto	u5755
 12757  19BC  0824               	movf	___aodiv@divisor+4,w
 12758  19BD  022C               	subwf	___aodiv@dividend+4,w
 12759  19BE  1D03               	skipz
 12760  19BF  29CE               	goto	u5755
 12761  19C0  0823               	movf	___aodiv@divisor+3,w
 12762  19C1  022B               	subwf	___aodiv@dividend+3,w
 12763  19C2  1D03               	skipz
 12764  19C3  29CE               	goto	u5755
 12765  19C4  0822               	movf	___aodiv@divisor+2,w
 12766  19C5  022A               	subwf	___aodiv@dividend+2,w
 12767  19C6  1D03               	skipz
 12768  19C7  29CE               	goto	u5755
 12769  19C8  0821               	movf	___aodiv@divisor+1,w
 12770  19C9  0229               	subwf	___aodiv@dividend+1,w
 12771  19CA  1D03               	skipz
 12772  19CB  29CE               	goto	u5755
 12773  19CC  0820               	movf	___aodiv@divisor,w
 12774  19CD  0228               	subwf	___aodiv@dividend,w
 12775  19CE                     u5755:	
 12776  19CE  1C03               	skipc
 12777  19CF  29E1               	goto	l4557
 12778  19D0  0820               	movf	___aodiv@divisor,w
 12779  19D1  02A8               	subwf	___aodiv@dividend,f
 12780  19D2  0821               	movf	___aodiv@divisor+1,w
 12781  19D3  3BA9               	subwfb	___aodiv@dividend+1,f
 12782  19D4  0822               	movf	___aodiv@divisor+2,w
 12783  19D5  3BAA               	subwfb	___aodiv@dividend+2,f
 12784  19D6  0823               	movf	___aodiv@divisor+3,w
 12785  19D7  3BAB               	subwfb	___aodiv@dividend+3,f
 12786  19D8  0824               	movf	___aodiv@divisor+4,w
 12787  19D9  3BAC               	subwfb	___aodiv@dividend+4,f
 12788  19DA  0825               	movf	___aodiv@divisor+5,w
 12789  19DB  3BAD               	subwfb	___aodiv@dividend+5,f
 12790  19DC  0826               	movf	___aodiv@divisor+6,w
 12791  19DD  3BAE               	subwfb	___aodiv@dividend+6,f
 12792  19DE  0827               	movf	___aodiv@divisor+7,w
 12793  19DF  3BAF               	subwfb	___aodiv@dividend+7,f
 12794  19E0  1474               	bsf	___aodiv@quotient,0
 12795  19E1                     l4557:	
 12796  19E1  36A7               	lsrf	___aodiv@divisor+7,f
 12797  19E2  0CA6               	rrf	___aodiv@divisor+6,f
 12798  19E3  0CA5               	rrf	___aodiv@divisor+5,f
 12799  19E4  0CA4               	rrf	___aodiv@divisor+4,f
 12800  19E5  0CA3               	rrf	___aodiv@divisor+3,f
 12801  19E6  0CA2               	rrf	___aodiv@divisor+2,f
 12802  19E7  0CA1               	rrf	___aodiv@divisor+1,f
 12803  19E8  0CA0               	rrf	___aodiv@divisor,f
 12804  19E9  3001               	movlw	1
 12805  19EA  02F2               	subwf	___aodiv@counter,f
 12806  19EB  1D03               	btfss	3,2
 12807  19EC  29A8               	goto	l4549
 12808  19ED                     l4559:	
 12809  19ED  0873               	movf	___aodiv@sign,w
 12810  19EE  1903               	btfsc	3,2
 12811  19EF  2A0E               	goto	l941
 12812  19F0  09F4               	comf	___aodiv@quotient,f
 12813  19F1  09F5               	comf	___aodiv@quotient+1,f
 12814  19F2  09F6               	comf	___aodiv@quotient+2,f
 12815  19F3  09F7               	comf	___aodiv@quotient+3,f
 12816  19F4  09F8               	comf	___aodiv@quotient+4,f
 12817  19F5  09F9               	comf	___aodiv@quotient+5,f
 12818  19F6  09FA               	comf	___aodiv@quotient+6,f
 12819  19F7  09FB               	comf	___aodiv@quotient+7,f
 12820  19F8  0AF4               	incf	___aodiv@quotient,f
 12821  19F9  1D03               	skipz
 12822  19FA  2A0E               	goto	l941
 12823  19FB  0AF5               	incf	___aodiv@quotient+1,f
 12824  19FC  1D03               	skipz
 12825  19FD  2A0E               	goto	l941
 12826  19FE  0AF6               	incf	___aodiv@quotient+2,f
 12827  19FF  1D03               	skipz
 12828  1A00  2A0E               	goto	l941
 12829  1A01  0AF7               	incf	___aodiv@quotient+3,f
 12830  1A02  1D03               	skipz
 12831  1A03  2A0E               	goto	l941
 12832  1A04  0AF8               	incf	___aodiv@quotient+4,f
 12833  1A05  1D03               	skipz
 12834  1A06  2A0E               	goto	l941
 12835  1A07  0AF9               	incf	___aodiv@quotient+5,f
 12836  1A08  1D03               	skipz
 12837  1A09  2A0E               	goto	l941
 12838  1A0A  0AFA               	incf	___aodiv@quotient+6,f
 12839  1A0B  1D03               	skipz
 12840  1A0C  2A0E               	goto	l941
 12841  1A0D  0AFB               	incf	___aodiv@quotient+7,f
 12842  1A0E                     l941:	
 12843  1A0E  0874               	movf	___aodiv@quotient,w
 12844  1A0F  0020               	movlb	0	; select bank0
 12845  1A10  00A0               	movwf	?___aodiv
 12846  1A11  0875               	movf	___aodiv@quotient+1,w
 12847  1A12  00A1               	movwf	?___aodiv+1
 12848  1A13  0876               	movf	___aodiv@quotient+2,w
 12849  1A14  00A2               	movwf	?___aodiv+2
 12850  1A15  0877               	movf	___aodiv@quotient+3,w
 12851  1A16  00A3               	movwf	?___aodiv+3
 12852  1A17  0878               	movf	___aodiv@quotient+4,w
 12853  1A18  00A4               	movwf	?___aodiv+4
 12854  1A19  0879               	movf	___aodiv@quotient+5,w
 12855  1A1A  00A5               	movwf	?___aodiv+5
 12856  1A1B  087A               	movf	___aodiv@quotient+6,w
 12857  1A1C  00A6               	movwf	?___aodiv+6
 12858  1A1D  087B               	movf	___aodiv@quotient+7,w
 12859  1A1E  00A7               	movwf	?___aodiv+7
 12860  1A1F  0008               	return
 12861  1A20                     __end_of___aodiv:	
 12862                           
 12863                           	psect	text32
 12864  3764                     __ptext32:	
 12865 ;; *************** function _ctoa *****************
 12866 ;; Defined at:
 12867 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12870 ;;		 -> vsnprintf@f(6), 
 12871 ;;  c               1   18[BANK0 ] unsigned char 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;  w               2   20[BANK0 ] int 
 12874 ;;  l               2    0        int 
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  2   16[BANK0 ] int 
 12877 ;; Registers used:
 12878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12884 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12888 ;;Total ram usage:        6 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:    5
 12891 ;; This function calls:
 12892 ;;		_pad
 12893 ;; This function is called by:
 12894 ;;		_vfpfcnvrt
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           
 12899                           ;psect for function _ctoa
 12900  3764                     _ctoa:	
 12901                           
 12902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12903                           
 12904                           ;incstack = 0
 12905                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12906  3764  0023               	movlb	3	; select bank3
 12907  3765  083E               	movf	_width^(0+384),w
 12908  3766  043F               	iorwf	(_width+1)^(0+384),w
 12909  3767  1D03               	btfss	3,2
 12910  3768  2F71               	goto	l7005
 12911  3769  083F               	movf	(_width+1)^(0+384),w
 12912  376A  0020               	movlb	0	; select bank0
 12913  376B  00B5               	movwf	ctoa@w+1
 12914  376C  0023               	movlb	3	; select bank3
 12915  376D  083E               	movf	_width^(0+384),w
 12916  376E  0020               	movlb	0	; select bank0
 12917  376F  00B4               	movwf	ctoa@w
 12918  3770  2F7A               	goto	l7007
 12919  3771                     l7005:	
 12920  3771  083E               	movf	_width^(0+384),w
 12921  3772  3EFF               	addlw	255
 12922  3773  0020               	movlb	0	; select bank0
 12923  3774  00B4               	movwf	ctoa@w
 12924  3775  30FF               	movlw	255
 12925  3776  0023               	movlb	3	; select bank3
 12926  3777  3D3F               	addwfc	(_width+1)^(0+384),w
 12927  3778  0020               	movlb	0	; select bank0
 12928  3779  00B5               	movwf	ctoa@w+1
 12929  377A                     l7007:	
 12930                           
 12931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12932  377A  0832               	movf	ctoa@c,w
 12933  377B  00B3               	movwf	??_ctoa
 12934  377C  0833               	movf	??_ctoa,w
 12935  377D  0024               	movlb	4	; select bank4
 12936  377E  00A0               	movwf	_dbuf^(0+512)
 12937                           
 12938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12939  377F  01A1               	clrf	(_dbuf^(0+512)+1)
 12940                           
 12941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 12942  3780  0020               	movlb	0	; select bank0
 12943  3781  0831               	movf	ctoa@fp+1,w
 12944  3782  00A7               	movwf	pad@fp+1
 12945  3783  0830               	movf	ctoa@fp,w
 12946  3784  00A6               	movwf	pad@fp
 12947  3785  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 12948  3786  00B3               	movwf	??_ctoa
 12949  3787  0833               	movf	??_ctoa,w
 12950  3788  00A8               	movwf	pad@buf
 12951  3789  0835               	movf	ctoa@w+1,w
 12952  378A  00AA               	movwf	pad@p+1
 12953  378B  0834               	movf	ctoa@w,w
 12954  378C  00A9               	movwf	pad@p
 12955  378D  31A9  218C         	fcall	_pad
 12956  378F  0020               	movlb	0	; select bank0
 12957  3790  0827               	movf	?_pad+1,w
 12958  3791  00B1               	movwf	?_ctoa+1
 12959  3792  0826               	movf	?_pad,w
 12960  3793  00B0               	movwf	?_ctoa
 12961  3794  0008               	return
 12962  3795                     __end_of_ctoa:	
 12963                           
 12964                           	psect	text33
 12965  298C                     __ptext33:	
 12966 ;; *************** function _pad *****************
 12967 ;; Defined at:
 12968 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 12971 ;;		 -> vsnprintf@f(6), 
 12972 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 12973 ;;		 -> dbuf(80), 
 12974 ;;  p               2    9[BANK0 ] int 
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;  w               2   14[BANK0 ] int 
 12977 ;;  i               2   12[BANK0 ] int 
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  2    6[BANK0 ] int 
 12980 ;; Registers used:
 12981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12987 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12988 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12991 ;;Total ram usage:       10 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:    4
 12994 ;; This function calls:
 12995 ;;		_fputc
 12996 ;;		_fputs
 12997 ;;		_strlen
 12998 ;; This function is called by:
 12999 ;;		_ctoa
 13000 ;;		_dtoa
 13001 ;;		_efgtoa
 13002 ;;		_otoa
 13003 ;;		_utoa
 13004 ;;		_xtoa
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           
 13009                           ;psect for function _pad
 13010  298C                     _pad:	
 13011                           
 13012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13013                           
 13014                           ;incstack = 0
 13015                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13016  298C  0023               	movlb	3	; select bank3
 13017  298D  1C42               	btfss	_flags^(0+384),0
 13018  298E  2998               	goto	l6945
 13019                           
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13021  298F  0020               	movlb	0	; select bank0
 13022  2990  0827               	movf	pad@fp+1,w
 13023  2991  00FB               	movwf	fputs@fp+1
 13024  2992  0826               	movf	pad@fp,w
 13025  2993  00FA               	movwf	fputs@fp
 13026  2994  0828               	movf	pad@buf,w
 13027  2995  31B7  2716  31A9   	fcall	_fputs
 13028  2998                     l6945:	
 13029                           
 13030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13031  2998  0020               	movlb	0	; select bank0
 13032  2999  1BAA               	btfsc	pad@p+1,7
 13033  299A  29A0               	goto	l6949
 13034  299B  082A               	movf	pad@p+1,w
 13035  299C  00AF               	movwf	pad@w+1
 13036  299D  0829               	movf	pad@p,w
 13037  299E  00AE               	movwf	pad@w
 13038  299F  29A2               	goto	l523
 13039  29A0                     l6949:	
 13040  29A0  01AE               	clrf	pad@w
 13041  29A1  01AF               	clrf	pad@w+1
 13042  29A2                     l523:	
 13043                           
 13044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13045  29A2  01AC               	clrf	pad@i
 13046  29A3  01AD               	clrf	pad@i+1
 13047  29A4                     l6955:	
 13048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13049                           
 13050                           
 13051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13052  29A4  082D               	movf	pad@i+1,w
 13053  29A5  3A80               	xorlw	128
 13054  29A6  00AB               	movwf	??_pad
 13055  29A7  082F               	movf	pad@w+1,w
 13056  29A8  3A80               	xorlw	128
 13057  29A9  022B               	subwf	??_pad,w
 13058  29AA  1D03               	skipz
 13059  29AB  29AE               	goto	u9905
 13060  29AC  082E               	movf	pad@w,w
 13061  29AD  022C               	subwf	pad@i,w
 13062  29AE                     u9905:	
 13063  29AE  1803               	btfsc	3,0
 13064  29AF  29C2               	goto	l526
 13065                           
 13066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13067  29B0  3020               	movlw	32
 13068  29B1  00F1               	movwf	fputc@c
 13069  29B2  3000               	movlw	0
 13070  29B3  00F2               	movwf	fputc@c+1
 13071  29B4  0020               	movlb	0	; select bank0
 13072  29B5  0827               	movf	pad@fp+1,w
 13073  29B6  00F4               	movwf	fputc@fp+1
 13074  29B7  0826               	movf	pad@fp,w
 13075  29B8  00F3               	movwf	fputc@fp
 13076  29B9  3190  200D  31A9   	fcall	_fputc
 13077                           
 13078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13079  29BC  3001               	movlw	1
 13080  29BD  0020               	movlb	0	; select bank0
 13081  29BE  07AC               	addwf	pad@i,f
 13082  29BF  3000               	movlw	0
 13083  29C0  3DAD               	addwfc	pad@i+1,f
 13084  29C1  29A4               	goto	l6955
 13085  29C2                     l526:	
 13086                           
 13087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13088  29C2  0023               	movlb	3	; select bank3
 13089  29C3  1842               	btfsc	_flags^(0+384),0
 13090  29C4  29CE               	goto	l6959
 13091                           
 13092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13093  29C5  0020               	movlb	0	; select bank0
 13094  29C6  0827               	movf	pad@fp+1,w
 13095  29C7  00FB               	movwf	fputs@fp+1
 13096  29C8  0826               	movf	pad@fp,w
 13097  29C9  00FA               	movwf	fputs@fp
 13098  29CA  0828               	movf	pad@buf,w
 13099  29CB  31B7  2716  31A9   	fcall	_fputs
 13100  29CE                     l6959:	
 13101                           
 13102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13103  29CE  0020               	movlb	0	; select bank0
 13104  29CF  0828               	movf	pad@buf,w
 13105  29D0  00F1               	movwf	strlen@s
 13106  29D1  3002               	movlw	2
 13107  29D2  00F2               	movwf	strlen@s+1
 13108  29D3  31B5  2564         	fcall	_strlen
 13109  29D5  0020               	movlb	0	; select bank0
 13110  29D6  082E               	movf	pad@w,w
 13111  29D7  0771               	addwf	?_strlen,w
 13112  29D8  00A6               	movwf	?_pad
 13113  29D9  082F               	movf	pad@w+1,w
 13114  29DA  3D72               	addwfc	?_strlen+1,w
 13115  29DB  00A7               	movwf	?_pad+1
 13116  29DC  0008               	return
 13117  29DD                     __end_of_pad:	
 13118                           
 13119                           	psect	text34
 13120  3564                     __ptext34:	
 13121 ;; *************** function _strlen *****************
 13122 ;; Defined at:
 13123 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;  s               2    1[COMMON] PTR const unsigned char 
 13126 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;  a               2    3[COMMON] PTR const unsigned char 
 13129 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  2    1[COMMON] unsigned int 
 13132 ;; Registers used:
 13133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;Total ram usage:        4 bytes
 13144 ;; Hardware stack levels used:    1
 13145 ;; Hardware stack levels required when called:    1
 13146 ;; This function calls:
 13147 ;;		Nothing
 13148 ;; This function is called by:
 13149 ;;		_pad
 13150 ;;		_stoa
 13151 ;; This function uses a non-reentrant model
 13152 ;;
 13153                           
 13154                           
 13155                           ;psect for function _strlen
 13156  3564                     _strlen:	
 13157                           
 13158                           ;incstack = 0
 13159                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13160  3564  0872               	movf	strlen@s+1,w
 13161  3565  00F4               	movwf	strlen@a+1
 13162  3566  0871               	movf	strlen@s,w
 13163  3567  00F3               	movwf	strlen@a
 13164  3568                     l4177:	
 13165  3568  0871               	movf	strlen@s,w
 13166  3569  0086               	movwf	6
 13167  356A  0872               	movf	strlen@s+1,w
 13168  356B  0087               	movwf	7
 13169  356C  0801               	movf	1,w
 13170  356D  1903               	btfsc	3,2
 13171  356E  2D74               	goto	l4179
 13172  356F  3001               	movlw	1
 13173  3570  07F1               	addwf	strlen@s,f
 13174  3571  3000               	movlw	0
 13175  3572  3DF2               	addwfc	strlen@s+1,f
 13176  3573  2D68               	goto	l4177
 13177  3574                     l4179:	
 13178  3574  0873               	movf	strlen@a,w
 13179  3575  0271               	subwf	strlen@s,w
 13180  3576  00F1               	movwf	?_strlen
 13181  3577  0874               	movf	strlen@a+1,w
 13182  3578  3B72               	subwfb	strlen@s+1,w
 13183  3579  00F2               	movwf	?_strlen+1
 13184  357A  0008               	return
 13185  357B                     __end_of_strlen:	
 13186                           
 13187                           	psect	text35
 13188  3716                     __ptext35:	
 13189 ;; *************** function _fputs *****************
 13190 ;; Defined at:
 13191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;  s               1    wreg     PTR const unsigned char 
 13194 ;;		 -> dbuf(80), 
 13195 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 13196 ;;		 -> vsnprintf@f(6), 
 13197 ;; Auto vars:     Size  Location     Type
 13198 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 13199 ;;		 -> dbuf(80), 
 13200 ;;  i               2    3[BANK0 ] int 
 13201 ;;  c               1    2[BANK0 ] unsigned char 
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  2   10[COMMON] int 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13214 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13215 ;;Total ram usage:        8 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:    3
 13218 ;; This function calls:
 13219 ;;		_fputc
 13220 ;; This function is called by:
 13221 ;;		_pad
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           
 13226                           ;psect for function _fputs
 13227  3716                     _fputs:	
 13228                           
 13229                           ;incstack = 0
 13230                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13231                           ;fputs@s stored from wreg
 13232  3716  0020               	movlb	0	; select bank0
 13233  3717  00A5               	movwf	fputs@s
 13234  3718  01A3               	clrf	fputs@i
 13235  3719  01A4               	clrf	fputs@i+1
 13236  371A                     l4171:	
 13237  371A  0823               	movf	fputs@i,w
 13238  371B  0725               	addwf	fputs@s,w
 13239  371C  00A0               	movwf	??_fputs
 13240  371D  0820               	movf	??_fputs,w
 13241  371E  0086               	movwf	6
 13242  371F  3002               	movlw	2	; select bank4/5
 13243  3720  0087               	movwf	7
 13244  3721  0801               	movf	1,w
 13245  3722  00A1               	movwf	??_fputs+1
 13246  3723  0821               	movf	??_fputs+1,w
 13247  3724  00A2               	movwf	fputs@c
 13248  3725  0822               	movf	fputs@c,w
 13249  3726  1903               	btfsc	3,2
 13250  3727  0008               	return
 13251  3728  0822               	movf	fputs@c,w
 13252  3729  00A0               	movwf	??_fputs
 13253  372A  01A1               	clrf	??_fputs+1
 13254  372B  0820               	movf	??_fputs,w
 13255  372C  00F1               	movwf	fputc@c
 13256  372D  0821               	movf	??_fputs+1,w
 13257  372E  00F2               	movwf	fputc@c+1
 13258  372F  087B               	movf	fputs@fp+1,w
 13259  3730  00F4               	movwf	fputc@fp+1
 13260  3731  087A               	movf	fputs@fp,w
 13261  3732  00F3               	movwf	fputc@fp
 13262  3733  3190  200D  31B7   	fcall	_fputc
 13263  3736  3001               	movlw	1
 13264  3737  0020               	movlb	0	; select bank0
 13265  3738  07A3               	addwf	fputs@i,f
 13266  3739  3000               	movlw	0
 13267  373A  3DA4               	addwfc	fputs@i+1,f
 13268  373B  2F1A               	goto	l4171
 13269  373C                     __end_of_fputs:	
 13270                           
 13271                           	psect	text36
 13272  100D                     __ptext36:	
 13273 ;; *************** function _fputc *****************
 13274 ;; Defined at:
 13275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  c               2    1[COMMON] int 
 13278 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 13279 ;;		 -> vsnprintf@f(6), 
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;		None
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  2    1[COMMON] int 
 13284 ;; Registers used:
 13285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;Total ram usage:        9 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    2
 13298 ;; This function calls:
 13299 ;;		_putch
 13300 ;; This function is called by:
 13301 ;;		_pad
 13302 ;;		_stoa
 13303 ;;		_vfpfcnvrt
 13304 ;;		_fputs
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           
 13309                           ;psect for function _fputc
 13310  100D                     _fputc:	
 13311                           
 13312                           ;incstack = 0
 13313                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13314  100D  0873               	movf	fputc@fp,w
 13315  100E  0474               	iorwf	fputc@fp+1,w
 13316  100F  1903               	btfsc	3,2
 13317  1010  2815               	goto	l4153
 13318  1011  0873               	movf	fputc@fp,w
 13319  1012  0474               	iorwf	fputc@fp+1,w
 13320  1013  1D03               	btfss	3,2
 13321  1014  2819               	goto	l4155
 13322  1015                     l4153:	
 13323  1015  0871               	movf	fputc@c,w
 13324  1016  3187  27FF         	fcall	_putch
 13325  1018  0008               	return
 13326  1019                     l4155:	
 13327  1019  0873               	movf	fputc@fp,w
 13328  101A  0086               	movwf	6
 13329  101B  0874               	movf	fputc@fp+1,w
 13330  101C  0087               	movwf	7
 13331  101D  3144               	addfsr 1,4
 13332  101E  0016               	moviw fsr1++
 13333  101F  0401               	iorwf	1,w
 13334  1020  1903               	btfsc	3,2
 13335  1021  2840               	goto	l4159
 13336  1022  0873               	movf	fputc@fp,w
 13337  1023  0086               	movwf	6
 13338  1024  0874               	movf	fputc@fp+1,w
 13339  1025  0087               	movwf	7
 13340  1026  3144               	addfsr 1,4
 13341  1027  3F40               	moviw [0]fsr1
 13342  1028  00F5               	movwf	??_fputc
 13343  1029  3F41               	moviw [1]fsr1
 13344  102A  00F6               	movwf	??_fputc+1
 13345  102B  0873               	movf	fputc@fp,w
 13346  102C  0086               	movwf	6
 13347  102D  0874               	movf	fputc@fp+1,w
 13348  102E  0087               	movwf	7
 13349  102F  3142               	addfsr 1,2
 13350  1030  3F40               	moviw [0]fsr1
 13351  1031  00F7               	movwf	??_fputc+2
 13352  1032  3F41               	moviw [1]fsr1
 13353  1033  00F8               	movwf	??_fputc+3
 13354  1034  0878               	movf	??_fputc+3,w
 13355  1035  3A80               	xorlw	128
 13356  1036  00F9               	movwf	??_fputc+4
 13357  1037  0876               	movf	??_fputc+1,w
 13358  1038  3A80               	xorlw	128
 13359  1039  0279               	subwf	??_fputc+4,w
 13360  103A  1D03               	skipz
 13361  103B  283E               	goto	u4765
 13362  103C  0875               	movf	??_fputc,w
 13363  103D  0277               	subwf	??_fputc+2,w
 13364  103E                     u4765:	
 13365  103E  1803               	skipnc
 13366  103F  0008               	return
 13367  1040                     l4159:	
 13368  1040  0873               	movf	fputc@fp,w
 13369  1041  0086               	movwf	6
 13370  1042  0874               	movf	fputc@fp+1,w
 13371  1043  0087               	movwf	7
 13372  1044  3142               	addfsr 1,2
 13373  1045  0873               	movf	fputc@fp,w
 13374  1046  0084               	movwf	4
 13375  1047  0874               	movf	fputc@fp+1,w
 13376  1048  0085               	movwf	5
 13377  1049  3F40               	moviw [0]fsr1
 13378  104A  0700               	addwf	0,w
 13379  104B  00F5               	movwf	??_fputc
 13380  104C  3101               	addfsr 0,1
 13381  104D  3F41               	moviw [1]fsr1
 13382  104E  3D00               	addwfc	0,w
 13383  104F  00F6               	movwf	??_fputc+1
 13384  1050  0875               	movf	??_fputc,w
 13385  1051  0086               	movwf	6
 13386  1052  0876               	movf	??_fputc+1,w
 13387  1053  0087               	movwf	7
 13388  1054  0871               	movf	fputc@c,w
 13389  1055  0081               	movwf	1
 13390  1056  0873               	movf	fputc@fp,w
 13391  1057  0086               	movwf	6
 13392  1058  0874               	movf	fputc@fp+1,w
 13393  1059  0087               	movwf	7
 13394  105A  3142               	addfsr 1,2
 13395  105B  3001               	movlw	1
 13396  105C  0781               	addwf	1,f
 13397  105D  3141               	addfsr 1,1
 13398  105E  1803               	skipnc
 13399  105F  0A81               	incf	1,f
 13400  1060  0008               	return
 13401  1061                     __end_of_fputc:	
 13402                           
 13403                           	psect	text37
 13404  07FF                     __ptext37:	
 13405 ;; *************** function _putch *****************
 13406 ;; Defined at:
 13407 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  c               1    wreg     unsigned char 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;  c               1    0[COMMON] unsigned char 
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    1
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_fputc
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           
 13436                           ;psect for function _putch
 13437  07FF                     _putch:	
 13438                           
 13439                           ;incstack = 0
 13440                           ; Regs used in _putch: [wreg]
 13441  07FF  0008               	return
 13442  0800                     __end_of_putch:	
 13443                           
 13444                           	psect	text38
 13445  2F5F                     __ptext38:	
 13446 ;; *************** function _atoi *****************
 13447 ;; Defined at:
 13448 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;  s               2    7[COMMON] PTR const unsigned char 
 13451 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;  n               2   11[BANK0 ] int 
 13454 ;;  neg             2    4[BANK0 ] int 
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  2    7[COMMON] int 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13465 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13466 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13467 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13468 ;;Total ram usage:       15 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    2
 13471 ;; This function calls:
 13472 ;;		___wmul
 13473 ;;		_isdigit
 13474 ;;		_isspace
 13475 ;; This function is called by:
 13476 ;;		_vfpfcnvrt
 13477 ;; This function uses a non-reentrant model
 13478 ;;
 13479                           
 13480                           
 13481                           ;psect for function _atoi
 13482  2F5F                     _atoi:	
 13483                           
 13484                           ;incstack = 0
 13485                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13486  2F5F  0020               	movlb	0	; select bank0
 13487  2F60  01AB               	clrf	atoi@n
 13488  2F61  01AC               	clrf	atoi@n+1
 13489  2F62  01A4               	clrf	atoi@neg
 13490  2F63  01A5               	clrf	atoi@neg+1
 13491  2F64                     l7563:	
 13492  2F64  01AA               	clrf	_atoi$1533
 13493  2F65  0AAA               	incf	_atoi$1533,f
 13494  2F66  0877               	movf	atoi@s,w
 13495  2F67  0084               	movwf	4
 13496  2F68  0878               	movf	atoi@s+1,w
 13497  2F69  0085               	movwf	5
 13498  2F6A  0012               	moviw fsr0++
 13499  2F6B  3A20               	xorlw	32
 13500  2F6C  1903               	btfsc	3,2
 13501  2F6D  2F80               	goto	l7571
 13502  2F6E  0877               	movf	atoi@s,w
 13503  2F6F  0084               	movwf	4
 13504  2F70  0878               	movf	atoi@s+1,w
 13505  2F71  0085               	movwf	5
 13506  2F72  0800               	movf	0,w	;code access
 13507  2F73  3EF7               	addlw	247
 13508  2F74  00A0               	movwf	??_atoi
 13509  2F75  30FF               	movlw	255
 13510  2F76  1803               	skipnc
 13511  2F77  3000               	movlw	0
 13512  2F78  00A1               	movwf	??_atoi+1
 13513  2F79  3000               	movlw	0
 13514  2F7A  0221               	subwf	??_atoi+1,w
 13515  2F7B  3005               	movlw	5
 13516  2F7C  1903               	skipnz
 13517  2F7D  0220               	subwf	??_atoi,w
 13518  2F7E  1803               	btfsc	3,0
 13519  2F7F  01AA               	clrf	_atoi$1533
 13520  2F80                     l7571:	
 13521  2F80  082A               	movf	_atoi$1533,w
 13522  2F81  00A0               	movwf	??_atoi
 13523  2F82  01A1               	clrf	??_atoi+1
 13524  2F83  0820               	movf	??_atoi,w
 13525  2F84  00A6               	movwf	_atoi$1532
 13526  2F85  0821               	movf	??_atoi+1,w
 13527  2F86  00A7               	movwf	_atoi$1532+1
 13528  2F87  0826               	movf	_atoi$1532,w
 13529  2F88  0427               	iorwf	_atoi$1532+1,w
 13530  2F89  1903               	btfsc	3,2
 13531  2F8A  2F95               	goto	l7579
 13532  2F8B  3001               	movlw	1
 13533  2F8C  07F7               	addwf	atoi@s,f
 13534  2F8D  3000               	movlw	0
 13535  2F8E  3DF8               	addwfc	atoi@s+1,f
 13536  2F8F  2F64               	goto	l7563
 13537  2F90                     l7577:	
 13538  2F90  3001               	movlw	1
 13539  2F91  00A4               	movwf	atoi@neg
 13540  2F92  3000               	movlw	0
 13541  2F93  00A5               	movwf	atoi@neg+1
 13542  2F94  2FC8               	goto	l1327
 13543  2F95                     l7579:	
 13544  2F95  0877               	movf	atoi@s,w
 13545  2F96  0084               	movwf	4
 13546  2F97  0878               	movf	atoi@s+1,w
 13547  2F98  0085               	movwf	5
 13548  2F99  0800               	movf	0,w	;code access
 13549  2F9A  00A0               	movwf	??_atoi
 13550  2F9B  01A1               	clrf	??_atoi+1
 13551                           
 13552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13553                           ; Switch size 1, requested type "simple"
 13554                           ; Number of cases is 1, Range of values is 0 to 0
 13555                           ; switch strategies available:
 13556                           ; Name         Instructions Cycles
 13557                           ; simple_byte            4     3 (average)
 13558                           ; direct_byte            8     6 (fixed)
 13559                           ; jumptable            260     6 (fixed)
 13560                           ;	Chosen strategy is simple_byte
 13561  2F9C  0821               	movf	??_atoi+1,w
 13562  2F9D  3A00               	xorlw	0	; case 0
 13563  2F9E  1903               	skipnz
 13564  2F9F  2FA1               	goto	l8329
 13565  2FA0  2FCC               	goto	l7585
 13566  2FA1                     l8329:	
 13567                           
 13568                           ; Switch size 1, requested type "simple"
 13569                           ; Number of cases is 2, Range of values is 43 to 45
 13570                           ; switch strategies available:
 13571                           ; Name         Instructions Cycles
 13572                           ; simple_byte            7     4 (average)
 13573                           ; direct_byte           15     9 (fixed)
 13574                           ; jumptable            263     9 (fixed)
 13575                           ;	Chosen strategy is simple_byte
 13576  2FA1  0820               	movf	??_atoi,w
 13577  2FA2  3A2B               	xorlw	43	; case 43
 13578  2FA3  1903               	skipnz
 13579  2FA4  2FC8               	goto	l1327
 13580  2FA5  3A06               	xorlw	6	; case 45
 13581  2FA6  1903               	skipnz
 13582  2FA7  2F90               	goto	l7577
 13583  2FA8  2FCC               	goto	l7585
 13584  2FA9                     l7581:	
 13585  2FA9  0877               	movf	atoi@s,w
 13586  2FAA  0084               	movwf	4
 13587  2FAB  0878               	movf	atoi@s+1,w
 13588  2FAC  0085               	movwf	5
 13589  2FAD  0800               	movf	0,w	;code access
 13590  2FAE  00A0               	movwf	??_atoi
 13591  2FAF  082C               	movf	atoi@n+1,w
 13592  2FB0  00F2               	movwf	___wmul@multiplier+1
 13593  2FB1  082B               	movf	atoi@n,w
 13594  2FB2  00F1               	movwf	___wmul@multiplier
 13595  2FB3  300A               	movlw	10
 13596  2FB4  00F3               	movwf	___wmul@multiplicand
 13597  2FB5  3000               	movlw	0
 13598  2FB6  00F4               	movwf	___wmul@multiplicand+1
 13599  2FB7  31B5  25C0  31AF   	fcall	___wmul
 13600  2FBA  0872               	movf	?___wmul+1,w
 13601  2FBB  0020               	movlb	0	; select bank0
 13602  2FBC  00A2               	movwf	??_atoi+2
 13603  2FBD  0820               	movf	??_atoi,w
 13604  2FBE  0271               	subwf	?___wmul,w
 13605  2FBF  00A1               	movwf	??_atoi+1
 13606  2FC0  1C03               	skipc
 13607  2FC1  03A2               	decf	??_atoi+2,f
 13608  2FC2  0821               	movf	??_atoi+1,w
 13609  2FC3  3E30               	addlw	48
 13610  2FC4  00AB               	movwf	atoi@n
 13611  2FC5  3000               	movlw	0
 13612  2FC6  3D22               	addwfc	??_atoi+2,w
 13613  2FC7  00AC               	movwf	atoi@n+1
 13614  2FC8                     l1327:	
 13615  2FC8  3001               	movlw	1
 13616  2FC9  07F7               	addwf	atoi@s,f
 13617  2FCA  3000               	movlw	0
 13618  2FCB  3DF8               	addwfc	atoi@s+1,f
 13619  2FCC                     l7585:	
 13620  2FCC  0877               	movf	atoi@s,w
 13621  2FCD  0084               	movwf	4
 13622  2FCE  0878               	movf	atoi@s+1,w
 13623  2FCF  0085               	movwf	5
 13624  2FD0  0800               	movf	0,w	;code access
 13625  2FD1  3ED0               	addlw	208
 13626  2FD2  00A0               	movwf	??_atoi
 13627  2FD3  30FF               	movlw	255
 13628  2FD4  1803               	skipnc
 13629  2FD5  3000               	movlw	0
 13630  2FD6  00A1               	movwf	??_atoi+1
 13631  2FD7  3000               	movlw	0
 13632  2FD8  0221               	subwf	??_atoi+1,w
 13633  2FD9  300A               	movlw	10
 13634  2FDA  1903               	skipnz
 13635  2FDB  0220               	subwf	??_atoi,w
 13636  2FDC  1803               	btfsc	3,0
 13637  2FDD  2FE0               	goto	u11160
 13638  2FDE  3001               	movlw	1
 13639  2FDF  2FE1               	goto	u11170
 13640  2FE0                     u11160:	
 13641  2FE0  3000               	movlw	0
 13642  2FE1                     u11170:	
 13643  2FE1  00A2               	movwf	??_atoi+2
 13644  2FE2  01A3               	clrf	??_atoi+3
 13645  2FE3  0822               	movf	??_atoi+2,w
 13646  2FE4  00A8               	movwf	_atoi$1534
 13647  2FE5  0823               	movf	??_atoi+3,w
 13648  2FE6  00A9               	movwf	_atoi$1534+1
 13649  2FE7  0828               	movf	_atoi$1534,w
 13650  2FE8  0429               	iorwf	_atoi$1534+1,w
 13651  2FE9  1D03               	btfss	3,2
 13652  2FEA  2FA9               	goto	l7581
 13653  2FEB  0824               	movf	atoi@neg,w
 13654  2FEC  0425               	iorwf	atoi@neg+1,w
 13655  2FED  1D03               	btfss	3,2
 13656  2FEE  2FFB               	goto	l7595
 13657  2FEF  092B               	comf	atoi@n,w
 13658  2FF0  00A0               	movwf	??_atoi
 13659  2FF1  092C               	comf	atoi@n+1,w
 13660  2FF2  00A1               	movwf	??_atoi+1
 13661  2FF3  0AA0               	incf	??_atoi,f
 13662  2FF4  1903               	skipnz
 13663  2FF5  0AA1               	incf	??_atoi+1,f
 13664  2FF6  0820               	movf	??_atoi,w
 13665  2FF7  00F7               	movwf	?_atoi
 13666  2FF8  0821               	movf	??_atoi+1,w
 13667  2FF9  00F8               	movwf	?_atoi+1
 13668  2FFA  0008               	return
 13669  2FFB                     l7595:	
 13670  2FFB  082C               	movf	atoi@n+1,w
 13671  2FFC  00F8               	movwf	?_atoi+1
 13672  2FFD  082B               	movf	atoi@n,w
 13673  2FFE  00F7               	movwf	?_atoi
 13674  2FFF  0008               	return
 13675  3000                     __end_of_atoi:	
 13676                           
 13677                           	psect	text39
 13678  35DB                     __ptext39:	
 13679 ;; *************** function _isspace *****************
 13680 ;; Defined at:
 13681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;  c               2    1[COMMON] int 
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  2    1[COMMON] int 
 13688 ;; Registers used:
 13689 ;;		wreg, status,2, status,0
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13698 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13699 ;;Total ram usage:        5 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    1
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_atoi
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function _isspace
 13711  35DB                     _isspace:	
 13712                           
 13713                           ;incstack = 0
 13714                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13715  35DB  01F5               	clrf	_isspace$1572
 13716  35DC  0AF5               	incf	_isspace$1572,f
 13717  35DD  3020               	movlw	32
 13718  35DE  0671               	xorwf	isspace@c,w
 13719  35DF  0472               	iorwf	isspace@c+1,w
 13720  35E0  1903               	btfsc	3,2
 13721  35E1  2DEF               	goto	l5083
 13722  35E2  0871               	movf	isspace@c,w
 13723  35E3  3EF7               	addlw	247
 13724  35E4  00F3               	movwf	??_isspace
 13725  35E5  30FF               	movlw	255
 13726  35E6  3D72               	addwfc	isspace@c+1,w
 13727  35E7  00F4               	movwf	??_isspace+1
 13728  35E8  3000               	movlw	0
 13729  35E9  0274               	subwf	??_isspace+1,w
 13730  35EA  3005               	movlw	5
 13731  35EB  1903               	skipnz
 13732  35EC  0273               	subwf	??_isspace,w
 13733  35ED  1803               	btfsc	3,0
 13734  35EE  01F5               	clrf	_isspace$1572
 13735  35EF                     l5083:	
 13736  35EF  0875               	movf	_isspace$1572,w
 13737  35F0  00F3               	movwf	??_isspace
 13738  35F1  01F4               	clrf	??_isspace+1
 13739  35F2  0873               	movf	??_isspace,w
 13740  35F3  00F1               	movwf	?_isspace
 13741  35F4  0874               	movf	??_isspace+1,w
 13742  35F5  00F2               	movwf	?_isspace+1
 13743  35F6  0008               	return
 13744  35F7                     __end_of_isspace:	
 13745                           
 13746                           	psect	text40
 13747  354D                     __ptext40:	
 13748 ;; *************** function _isdigit *****************
 13749 ;; Defined at:
 13750 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  c               2    1[COMMON] int 
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;		None
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  2    1[COMMON] int 
 13757 ;; Registers used:
 13758 ;;		wreg, status,2, status,0
 13759 ;; Tracked objects:
 13760 ;;		On entry : 0/0
 13761 ;;		On exit  : 0/0
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13768 ;;Total ram usage:        6 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:    1
 13771 ;; This function calls:
 13772 ;;		Nothing
 13773 ;; This function is called by:
 13774 ;;		_vfpfcnvrt
 13775 ;;		_atoi
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           
 13780                           ;psect for function _isdigit
 13781  354D                     _isdigit:	
 13782                           
 13783                           ;incstack = 0
 13784                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13785  354D  0871               	movf	isdigit@c,w
 13786  354E  3ED0               	addlw	208
 13787  354F  00F3               	movwf	??_isdigit
 13788  3550  30FF               	movlw	255
 13789  3551  3D72               	addwfc	isdigit@c+1,w
 13790  3552  00F4               	movwf	??_isdigit+1
 13791  3553  3000               	movlw	0
 13792  3554  0274               	subwf	??_isdigit+1,w
 13793  3555  300A               	movlw	10
 13794  3556  1903               	skipnz
 13795  3557  0273               	subwf	??_isdigit,w
 13796  3558  1803               	btfsc	3,0
 13797  3559  2D5C               	goto	u5620
 13798  355A  3001               	movlw	1
 13799  355B  2D5D               	goto	u5630
 13800  355C                     u5620:	
 13801  355C  3000               	movlw	0
 13802  355D                     u5630:	
 13803  355D  00F5               	movwf	??_isdigit+2
 13804  355E  01F6               	clrf	??_isdigit+3
 13805  355F  0875               	movf	??_isdigit+2,w
 13806  3560  00F1               	movwf	?_isdigit
 13807  3561  0876               	movf	??_isdigit+3,w
 13808  3562  00F2               	movwf	?_isdigit+1
 13809  3563  0008               	return
 13810  3564                     __end_of_isdigit:	
 13811                           
 13812                           	psect	text41
 13813  0801                     __ptext41:	
 13814 ;; *************** function _init_AFE *****************
 13815 ;; Defined at:
 13816 ;;		line 3 in file "BQ76920.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  1    wreg      void 
 13823 ;; Registers used:
 13824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13834 ;;Total ram usage:        0 bytes
 13835 ;; Hardware stack levels used:    1
 13836 ;; Hardware stack levels required when called:    4
 13837 ;; This function calls:
 13838 ;;		_setOverCurrentDischargeProtection
 13839 ;;		_setShortCircuitProtection
 13840 ;;		_setShuntResistorValue
 13841 ;;		_setTemperatureLimitsint
 13842 ;; This function is called by:
 13843 ;;		_statemachine
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           
 13848                           ;psect for function _init_AFE
 13849  0801                     _init_AFE:	
 13850                           
 13851                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 13852                           
 13853                           ;incstack = 0
 13854                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13855  0801  30EC               	movlw	236
 13856  0802  0020               	movlb	0	; select bank0
 13857  0803  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 13858  0804  30FF               	movlw	255
 13859  0805  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 13860  0806  302D               	movlw	45
 13861  0807  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 13862  0808  3000               	movlw	0
 13863  0809  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 13864  080A  3000               	movlw	0
 13865  080B  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 13866  080C  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 13867  080D  302D               	movlw	45
 13868  080E  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 13869  080F  3000               	movlw	0
 13870  0810  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 13871  0811  31A8  201A  3188   	fcall	_setTemperatureLimitsint
 13872                           
 13873                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 13874  0814  303C               	movlw	60
 13875  0815  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 13876  0816  30A3               	movlw	163
 13877  0817  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 13878  0818  30D7               	movlw	215
 13879  0819  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 13880  081A  300A               	movlw	10
 13881  081B  00F1               	movwf	setShuntResistorValue@res_mOhm
 13882  081C  31B5  2518  3188   	fcall	_setShuntResistorValue
 13883                           
 13884                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 13885  081F  3000               	movlw	0
 13886  0820  0020               	movlb	0	; select bank0
 13887  0821  00E9               	movwf	setShortCircuitProtection@current_mA+3
 13888  0822  3000               	movlw	0
 13889  0823  00E8               	movwf	setShortCircuitProtection@current_mA+2
 13890  0824  3009               	movlw	9
 13891  0825  00E7               	movwf	setShortCircuitProtection@current_mA+1
 13892  0826  30C4               	movlw	196
 13893  0827  00E6               	movwf	setShortCircuitProtection@current_mA
 13894  0828  30C8               	movlw	200
 13895  0829  00EA               	movwf	setShortCircuitProtection@delay_us
 13896  082A  3000               	movlw	0
 13897  082B  00EB               	movwf	setShortCircuitProtection@delay_us+1
 13898  082C  319C  243D  3188   	fcall	_setShortCircuitProtection
 13899                           
 13900                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 13901  082F  3000               	movlw	0
 13902  0830  0020               	movlb	0	; select bank0
 13903  0831  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 13904  0832  3000               	movlw	0
 13905  0833  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 13906  0834  304E               	movlw	78
 13907  0835  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 13908  0836  3020               	movlw	32
 13909  0837  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 13910  0838  3040               	movlw	64
 13911  0839  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 13912  083A  3001               	movlw	1
 13913  083B  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 13914  083C  319B  2328         	fcall	_setOverCurrentDischargeProtection
 13915  083E  0008               	return
 13916  083F                     __end_of_init_AFE:	
 13917                           
 13918                           	psect	text42
 13919  281A                     __ptext42:	
 13920 ;; *************** function _setTemperatureLimitsint *****************
 13921 ;; Defined at:
 13922 ;;		line 58 in file "BQ76920.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  minDischarge    2    0[BANK0 ] int 
 13925 ;;  maxDischarge    2    2[BANK0 ] int 
 13926 ;;  minCharge_de    2    4[BANK0 ] int 
 13927 ;;  maxCharge_de    2    6[BANK0 ] int 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg, status,2, status,0, pclath, cstack
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13939 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13942 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13943 ;;Total ram usage:        8 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:    2
 13946 ;; This function calls:
 13947 ;;		___wmul
 13948 ;; This function is called by:
 13949 ;;		_init_AFE
 13950 ;; This function uses a non-reentrant model
 13951 ;;
 13952                           
 13953                           
 13954                           ;psect for function _setTemperatureLimitsint
 13955  281A                     _setTemperatureLimitsint:	
 13956                           
 13957                           ;BQ76920.c: 60:     minCellTempDischarge = minDischarge_degC * 10;
 13958                           
 13959                           ;incstack = 0
 13960                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 13961  281A  0020               	movlb	0	; select bank0
 13962  281B  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 13963  281C  00F2               	movwf	___wmul@multiplier+1
 13964  281D  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 13965  281E  00F1               	movwf	___wmul@multiplier
 13966  281F  300A               	movlw	10
 13967  2820  00F3               	movwf	___wmul@multiplicand
 13968  2821  3000               	movlw	0
 13969  2822  00F4               	movwf	___wmul@multiplicand+1
 13970  2823  31B5  25C0  31A8   	fcall	___wmul
 13971  2826  0872               	movf	?___wmul+1,w
 13972  2827  0023               	movlb	3	; select bank3
 13973  2828  00C9               	movwf	(_minCellTempDischarge+1)^(0+384)
 13974  2829  0871               	movf	?___wmul,w
 13975  282A  00C8               	movwf	_minCellTempDischarge^(0+384)
 13976                           
 13977                           ;BQ76920.c: 61:     maxCellTempDischarge = maxDischarge_degC * 10;
 13978  282B  0020               	movlb	0	; select bank0
 13979  282C  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 13980  282D  00F2               	movwf	___wmul@multiplier+1
 13981  282E  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 13982  282F  00F1               	movwf	___wmul@multiplier
 13983  2830  300A               	movlw	10
 13984  2831  00F3               	movwf	___wmul@multiplicand
 13985  2832  3000               	movlw	0
 13986  2833  00F4               	movwf	___wmul@multiplicand+1
 13987  2834  31B5  25C0  31A8   	fcall	___wmul
 13988  2837  0872               	movf	?___wmul+1,w
 13989  2838  0023               	movlb	3	; select bank3
 13990  2839  00C5               	movwf	(_maxCellTempDischarge+1)^(0+384)
 13991  283A  0871               	movf	?___wmul,w
 13992  283B  00C4               	movwf	_maxCellTempDischarge^(0+384)
 13993                           
 13994                           ;BQ76920.c: 62:     minCellTempCharge = minCharge_degC * 10;
 13995  283C  0020               	movlb	0	; select bank0
 13996  283D  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 13997  283E  00F2               	movwf	___wmul@multiplier+1
 13998  283F  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 13999  2840  00F1               	movwf	___wmul@multiplier
 14000  2841  300A               	movlw	10
 14001  2842  00F3               	movwf	___wmul@multiplicand
 14002  2843  3000               	movlw	0
 14003  2844  00F4               	movwf	___wmul@multiplicand+1
 14004  2845  31B5  25C0  31A8   	fcall	___wmul
 14005  2848  0872               	movf	?___wmul+1,w
 14006  2849  0023               	movlb	3	; select bank3
 14007  284A  00CB               	movwf	(_minCellTempCharge+1)^(0+384)
 14008  284B  0871               	movf	?___wmul,w
 14009  284C  00CA               	movwf	_minCellTempCharge^(0+384)
 14010                           
 14011                           ;BQ76920.c: 63:     maxCellTempCharge = maxCharge_degC * 10;
 14012  284D  0020               	movlb	0	; select bank0
 14013  284E  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 14014  284F  00F2               	movwf	___wmul@multiplier+1
 14015  2850  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 14016  2851  00F1               	movwf	___wmul@multiplier
 14017  2852  300A               	movlw	10
 14018  2853  00F3               	movwf	___wmul@multiplicand
 14019  2854  3000               	movlw	0
 14020  2855  00F4               	movwf	___wmul@multiplicand+1
 14021  2856  31B5  25C0         	fcall	___wmul
 14022  2858  0872               	movf	?___wmul+1,w
 14023  2859  0023               	movlb	3	; select bank3
 14024  285A  00C7               	movwf	(_maxCellTempCharge+1)^(0+384)
 14025  285B  0871               	movf	?___wmul,w
 14026  285C  00C6               	movwf	_maxCellTempCharge^(0+384)
 14027  285D  0008               	return
 14028  285E                     __end_of_setTemperatureLimitsint:	
 14029                           
 14030                           	psect	text43
 14031  35C0                     __ptext43:	
 14032 ;; *************** function ___wmul *****************
 14033 ;; Defined at:
 14034 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;  multiplier      2    1[COMMON] unsigned int 
 14037 ;;  multiplicand    2    3[COMMON] unsigned int 
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;  product         2    5[COMMON] unsigned int 
 14040 ;; Return value:  Size  Location     Type
 14041 ;;                  2    1[COMMON] unsigned int 
 14042 ;; Registers used:
 14043 ;;		wreg, status,2, status,0
 14044 ;; Tracked objects:
 14045 ;;		On entry : 0/0
 14046 ;;		On exit  : 0/0
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14053 ;;Total ram usage:        6 bytes
 14054 ;; Hardware stack levels used:    1
 14055 ;; Hardware stack levels required when called:    1
 14056 ;; This function calls:
 14057 ;;		Nothing
 14058 ;; This function is called by:
 14059 ;;		_setTemperatureLimitsint
 14060 ;;		_atoi
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           
 14065                           ;psect for function ___wmul
 14066  35C0                     ___wmul:	
 14067                           
 14068                           ;incstack = 0
 14069                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14070  35C0  01F5               	clrf	___wmul@product
 14071  35C1  01F6               	clrf	___wmul@product+1
 14072  35C2                     l4513:	
 14073  35C2  1C71               	btfss	___wmul@multiplier,0
 14074  35C3  2DC8               	goto	l841
 14075  35C4  0873               	movf	___wmul@multiplicand,w
 14076  35C5  07F5               	addwf	___wmul@product,f
 14077  35C6  0874               	movf	___wmul@multiplicand+1,w
 14078  35C7  3DF6               	addwfc	___wmul@product+1,f
 14079  35C8                     l841:	
 14080  35C8  3001               	movlw	1
 14081  35C9                     u5655:	
 14082  35C9  35F3               	lslf	___wmul@multiplicand,f
 14083  35CA  0DF4               	rlf	___wmul@multiplicand+1,f
 14084  35CB  0B89               	decfsz	9,f
 14085  35CC  2DC9               	goto	u5655
 14086  35CD  3001               	movlw	1
 14087  35CE                     u5665:	
 14088  35CE  36F2               	lsrf	___wmul@multiplier+1,f
 14089  35CF  0CF1               	rrf	___wmul@multiplier,f
 14090  35D0  0B89               	decfsz	9,f
 14091  35D1  2DCE               	goto	u5665
 14092  35D2  0871               	movf	___wmul@multiplier,w
 14093  35D3  0472               	iorwf	___wmul@multiplier+1,w
 14094  35D4  1D03               	btfss	3,2
 14095  35D5  2DC2               	goto	l4513
 14096  35D6  0876               	movf	___wmul@product+1,w
 14097  35D7  00F2               	movwf	?___wmul+1
 14098  35D8  0875               	movf	___wmul@product,w
 14099  35D9  00F1               	movwf	?___wmul
 14100  35DA  0008               	return
 14101  35DB                     __end_of___wmul:	
 14102                           
 14103                           	psect	text44
 14104  3518                     __ptext44:	
 14105 ;; *************** function _setShuntResistorValue *****************
 14106 ;; Defined at:
 14107 ;;		line 70 in file "BQ76920.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;  res_mOhm        4    1[COMMON] float 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14125 ;;Total ram usage:        4 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    1
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_init_AFE
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           
 14136                           ;psect for function _setShuntResistorValue
 14137  3518                     _setShuntResistorValue:	
 14138                           
 14139                           ;BQ76920.c: 71:     shuntResistorValue_mOhm = res_mOhm;
 14140                           
 14141                           ;incstack = 0
 14142                           ; Regs used in _setShuntResistorValue: [wreg]
 14143  3518  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 14144  3519  0023               	movlb	3	; select bank3
 14145  351A  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 14146  351B  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 14147  351C  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 14148  351D  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 14149  351E  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 14150  351F  0871               	movf	setShuntResistorValue@res_mOhm,w
 14151  3520  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 14152  3521  0008               	return
 14153  3522                     __end_of_setShuntResistorValue:	
 14154                           
 14155                           	psect	text45
 14156  1C3D                     __ptext45:	
 14157 ;; *************** function _setShortCircuitProtection *****************
 14158 ;; Defined at:
 14159 ;;		line 78 in file "BQ76920.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  current_mA      4   70[BANK0 ] long 
 14162 ;;  delay_us        2   74[BANK0 ] int 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;  i               2   10[BANK1 ] int 
 14165 ;;  i               2    8[BANK1 ] int 
 14166 ;;  scaler          4    0[BANK1 ] float 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      void 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14177 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14178 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14179 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14180 ;;Total ram usage:       21 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    3
 14183 ;; This function calls:
 14184 ;;		_I2C_writeRegister
 14185 ;;		___fldiv
 14186 ;;		___flge
 14187 ;;		___flmul
 14188 ;;		___xxtofl
 14189 ;; This function is called by:
 14190 ;;		_init_AFE
 14191 ;; This function uses a non-reentrant model
 14192 ;;
 14193                           
 14194                           
 14195                           ;psect for function _setShortCircuitProtection
 14196  1C3D                     _setShortCircuitProtection:	
 14197                           
 14198                           ;BQ76920.c: 83:     float scaler = 1000.0;
 14199                           
 14200                           ;incstack = 0
 14201                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14202  1C3D  3044               	movlw	68
 14203  1C3E  0021               	movlb	1	; select bank1
 14204  1C3F  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 14205  1C40  307A               	movlw	122
 14206  1C41  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 14207  1C42  3000               	movlw	0
 14208  1C43  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 14209  1C44  3000               	movlw	0
 14210  1C45  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 14211                           
 14212                           ;BQ76920.c: 84:     protect1.bits.SCD_THRESH = 0;
 14213  1C46  30F8               	movlw	-8
 14214  1C47  0023               	movlb	3	; select bank3
 14215  1C48  05D1               	andwf	BQ76920@protect1^(0+384),f
 14216                           
 14217                           ;BQ76920.c: 85:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 14218  1C49  0021               	movlb	1	; select bank1
 14219  1C4A  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 14220  1C4B  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 14221  1C4C                     l6307:	
 14222                           
 14223                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 14224  1C4C  0023               	movlb	3	; select bank3
 14225  1C4D  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 14226  1C4E  0020               	movlb	0	; select bank0
 14227  1C4F  00A9               	movwf	___flmul@b+3
 14228  1C50  0023               	movlb	3	; select bank3
 14229  1C51  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 14230  1C52  0020               	movlb	0	; select bank0
 14231  1C53  00A8               	movwf	___flmul@b+2
 14232  1C54  0023               	movlb	3	; select bank3
 14233  1C55  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 14234  1C56  0020               	movlb	0	; select bank0
 14235  1C57  00A7               	movwf	___flmul@b+1
 14236  1C58  0023               	movlb	3	; select bank3
 14237  1C59  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 14238  1C5A  0020               	movlb	0	; select bank0
 14239  1C5B  00A6               	movwf	___flmul@b
 14240  1C5C  0869               	movf	setShortCircuitProtection@current_mA+3,w
 14241  1C5D  00F4               	movwf	___xxtofl@val+3
 14242  1C5E  0868               	movf	setShortCircuitProtection@current_mA+2,w
 14243  1C5F  00F3               	movwf	___xxtofl@val+2
 14244  1C60  0867               	movf	setShortCircuitProtection@current_mA+1,w
 14245  1C61  00F2               	movwf	___xxtofl@val+1
 14246  1C62  0866               	movf	setShortCircuitProtection@current_mA,w
 14247  1C63  00F1               	movwf	___xxtofl@val
 14248  1C64  3001               	movlw	1
 14249  1C65  31AE  26C9  319C   	fcall	___xxtofl
 14250  1C68  0874               	movf	?___xxtofl+3,w
 14251  1C69  0020               	movlb	0	; select bank0
 14252  1C6A  00AD               	movwf	___flmul@a+3
 14253  1C6B  0873               	movf	?___xxtofl+2,w
 14254  1C6C  00AC               	movwf	___flmul@a+2
 14255  1C6D  0872               	movf	?___xxtofl+1,w
 14256  1C6E  00AB               	movwf	___flmul@a+1
 14257  1C6F  0871               	movf	?___xxtofl,w
 14258  1C70  00AA               	movwf	___flmul@a
 14259  1C71  3195  25D4  319C   	fcall	___flmul
 14260  1C74  0020               	movlb	0	; select bank0
 14261  1C75  0829               	movf	?___flmul+3,w
 14262  1C76  0021               	movlb	1	; select bank1
 14263  1C77  00A7               	movwf	(_setShortCircuitProtection$1904+3)^(0+128)
 14264  1C78  0020               	movlb	0	; select bank0
 14265  1C79  0828               	movf	?___flmul+2,w
 14266  1C7A  0021               	movlb	1	; select bank1
 14267  1C7B  00A6               	movwf	(_setShortCircuitProtection$1904+2)^(0+128)
 14268  1C7C  0020               	movlb	0	; select bank0
 14269  1C7D  0827               	movf	?___flmul+1,w
 14270  1C7E  0021               	movlb	1	; select bank1
 14271  1C7F  00A5               	movwf	(_setShortCircuitProtection$1904+1)^(0+128)
 14272  1C80  0020               	movlb	0	; select bank0
 14273  1C81  0826               	movf	?___flmul,w
 14274  1C82  0021               	movlb	1	; select bank1
 14275  1C83  00A4               	movwf	_setShortCircuitProtection$1904^(0+128)
 14276                           
 14277                           ;BQ76920.c: 86:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 14278  1C84  3044               	movlw	68
 14279  1C85  0020               	movlb	0	; select bank0
 14280  1C86  00C3               	movwf	___fldiv@a+3
 14281  1C87  307A               	movlw	122
 14282  1C88  00C2               	movwf	___fldiv@a+2
 14283  1C89  3000               	movlw	0
 14284  1C8A  00C1               	movwf	___fldiv@a+1
 14285  1C8B  3000               	movlw	0
 14286  1C8C  00C0               	movwf	___fldiv@a
 14287  1C8D  0021               	movlb	1	; select bank1
 14288  1C8E  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 14289  1C8F  0020               	movlb	0	; select bank0
 14290  1C90  00A9               	movwf	___flmul@b+3
 14291  1C91  0021               	movlb	1	; select bank1
 14292  1C92  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 14293  1C93  0020               	movlb	0	; select bank0
 14294  1C94  00A8               	movwf	___flmul@b+2
 14295  1C95  0021               	movlb	1	; select bank1
 14296  1C96  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 14297  1C97  0020               	movlb	0	; select bank0
 14298  1C98  00A7               	movwf	___flmul@b+1
 14299  1C99  0021               	movlb	1	; select bank1
 14300  1C9A  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 14301  1C9B  0020               	movlb	0	; select bank0
 14302  1C9C  00A6               	movwf	___flmul@b
 14303  1C9D  0021               	movlb	1	; select bank1
 14304  1C9E  0827               	movf	(_setShortCircuitProtection$1904+3)^(0+128),w
 14305  1C9F  0020               	movlb	0	; select bank0
 14306  1CA0  00AD               	movwf	___flmul@a+3
 14307  1CA1  0021               	movlb	1	; select bank1
 14308  1CA2  0826               	movf	(_setShortCircuitProtection$1904+2)^(0+128),w
 14309  1CA3  0020               	movlb	0	; select bank0
 14310  1CA4  00AC               	movwf	___flmul@a+2
 14311  1CA5  0021               	movlb	1	; select bank1
 14312  1CA6  0825               	movf	(_setShortCircuitProtection$1904+1)^(0+128),w
 14313  1CA7  0020               	movlb	0	; select bank0
 14314  1CA8  00AB               	movwf	___flmul@a+1
 14315  1CA9  0021               	movlb	1	; select bank1
 14316  1CAA  0824               	movf	_setShortCircuitProtection$1904^(0+128),w
 14317  1CAB  0020               	movlb	0	; select bank0
 14318  1CAC  00AA               	movwf	___flmul@a
 14319  1CAD  3195  25D4  319C   	fcall	___flmul
 14320  1CB0  0020               	movlb	0	; select bank0
 14321  1CB1  0829               	movf	?___flmul+3,w
 14322  1CB2  00C7               	movwf	___fldiv@b+3
 14323  1CB3  0828               	movf	?___flmul+2,w
 14324  1CB4  00C6               	movwf	___fldiv@b+2
 14325  1CB5  0827               	movf	?___flmul+1,w
 14326  1CB6  00C5               	movwf	___fldiv@b+1
 14327  1CB7  0826               	movf	?___flmul,w
 14328  1CB8  00C4               	movwf	___fldiv@b
 14329  1CB9  3190  2061  319C   	fcall	___fldiv
 14330  1CBC  0020               	movlb	0	; select bank0
 14331  1CBD  0843               	movf	?___fldiv+3,w
 14332  1CBE  00DD               	movwf	___flge@ff1+3
 14333  1CBF  0842               	movf	?___fldiv+2,w
 14334  1CC0  00DC               	movwf	___flge@ff1+2
 14335  1CC1  0841               	movf	?___fldiv+1,w
 14336  1CC2  00DB               	movwf	___flge@ff1+1
 14337  1CC3  0840               	movf	?___fldiv,w
 14338  1CC4  00DA               	movwf	___flge@ff1
 14339  1CC5  0021               	movlb	1	; select bank1
 14340  1CC6  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 14341  1CC7  0085               	movwf	5
 14342  1CC8  0828               	movf	setShortCircuitProtection@i^(0+128),w
 14343  1CC9  0084               	movwf	4
 14344  1CCA  3584               	lslf	4,f
 14345  1CCB  0D85               	rlf	5,f
 14346  1CCC  3093               	movlw	low (_SCD_threshold_setting| (0+32768))
 14347  1CCD  0784               	addwf	4,f
 14348  1CCE  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 14349  1CCF  3D85               	addwfc	5,f
 14350  1CD0  3F00               	moviw [0]fsr0
 14351  1CD1  0020               	movlb	0	; select bank0
 14352  1CD2  00EC               	movwf	??_setShortCircuitProtection
 14353  1CD3  3F01               	moviw [1]fsr0
 14354  1CD4  00ED               	movwf	??_setShortCircuitProtection+1
 14355  1CD5  086C               	movf	??_setShortCircuitProtection,w
 14356  1CD6  00F1               	movwf	___xxtofl@val
 14357  1CD7  086D               	movf	??_setShortCircuitProtection+1,w
 14358  1CD8  00F2               	movwf	___xxtofl@val+1
 14359  1CD9  0D89               	rlf	9,f
 14360  1CDA  3B89               	subwfb	9,f
 14361  1CDB  0989               	comf	9,f
 14362  1CDC  00F3               	movwf	___xxtofl@val+2
 14363  1CDD  00F4               	movwf	___xxtofl@val+3
 14364  1CDE  3001               	movlw	1
 14365  1CDF  31AE  26C9  319C   	fcall	___xxtofl
 14366  1CE2  0874               	movf	?___xxtofl+3,w
 14367  1CE3  0020               	movlb	0	; select bank0
 14368  1CE4  00E1               	movwf	___flge@ff2+3
 14369  1CE5  0873               	movf	?___xxtofl+2,w
 14370  1CE6  00E0               	movwf	___flge@ff2+2
 14371  1CE7  0872               	movf	?___xxtofl+1,w
 14372  1CE8  00DF               	movwf	___flge@ff2+1
 14373  1CE9  0871               	movf	?___xxtofl,w
 14374  1CEA  00DE               	movwf	___flge@ff2
 14375  1CEB  31AB  23C7  319C   	fcall	___flge
 14376  1CEE  1C03               	btfss	3,0
 14377  1CEF  2CF8               	goto	l6313
 14378                           
 14379                           ;BQ76920.c: 87:             protect1.bits.SCD_THRESH = i;
 14380  1CF0  0023               	movlb	3	; select bank3
 14381  1CF1  0851               	movf	BQ76920@protect1^(0+384),w
 14382  1CF2  0021               	movlb	1	; select bank1
 14383  1CF3  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 14384  1CF4  39F8               	andlw	-8
 14385  1CF5  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 14386  1CF6  0023               	movlb	3	; select bank3
 14387  1CF7  00D1               	movwf	BQ76920@protect1^(0+384)
 14388  1CF8                     l6313:	
 14389                           
 14390                           ;BQ76920.c: 89:     }
 14391  1CF8  3001               	movlw	1
 14392  1CF9  0021               	movlb	1	; select bank1
 14393  1CFA  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 14394  1CFB  3000               	movlw	0
 14395  1CFC  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 14396  1CFD  3000               	movlw	0
 14397  1CFE  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 14398  1CFF  3007               	movlw	7
 14399  1D00  1903               	skipnz
 14400  1D01  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 14401  1D02  1C03               	skipc
 14402  1D03  2C4C               	goto	l6307
 14403                           
 14404                           ;BQ76920.c: 91:     protect1.bits.SCD_DELAY = 0;
 14405  1D04  30E7               	movlw	-25
 14406  1D05  0023               	movlb	3	; select bank3
 14407  1D06  05D1               	andwf	BQ76920@protect1^(0+384),f
 14408                           
 14409                           ;BQ76920.c: 92:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 14410  1D07  0021               	movlb	1	; select bank1
 14411  1D08  01AA               	clrf	setShortCircuitProtection@i_842^(0+128)
 14412  1D09  01AB               	clrf	(setShortCircuitProtection@i_842+1)^(0+128)
 14413  1D0A                     l6325:	
 14414                           
 14415                           ;BQ76920.c: 93:         if (delay_us >= SCD_delay_setting[i]) {
 14416  1D0A  082B               	movf	(setShortCircuitProtection@i_842+1)^(0+128),w
 14417  1D0B  0085               	movwf	5
 14418  1D0C  082A               	movf	setShortCircuitProtection@i_842^(0+128),w
 14419  1D0D  0084               	movwf	4
 14420  1D0E  3584               	lslf	4,f
 14421  1D0F  0D85               	rlf	5,f
 14422  1D10  30B3               	movlw	low (_SCD_delay_setting| (0+32768))
 14423  1D11  0784               	addwf	4,f
 14424  1D12  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 14425  1D13  3D85               	addwfc	5,f
 14426  1D14  3F00               	moviw [0]fsr0
 14427  1D15  0020               	movlb	0	; select bank0
 14428  1D16  00EC               	movwf	??_setShortCircuitProtection
 14429  1D17  3F01               	moviw [1]fsr0
 14430  1D18  00ED               	movwf	??_setShortCircuitProtection+1
 14431  1D19  086B               	movf	setShortCircuitProtection@delay_us+1,w
 14432  1D1A  3A80               	xorlw	128
 14433  1D1B  00EE               	movwf	??_setShortCircuitProtection+2
 14434  1D1C  086D               	movf	??_setShortCircuitProtection+1,w
 14435  1D1D  3A80               	xorlw	128
 14436  1D1E  026E               	subwf	??_setShortCircuitProtection+2,w
 14437  1D1F  1D03               	skipz
 14438  1D20  2D23               	goto	u9005
 14439  1D21  086C               	movf	??_setShortCircuitProtection,w
 14440  1D22  026A               	subwf	setShortCircuitProtection@delay_us,w
 14441  1D23                     u9005:	
 14442  1D23  1C03               	skipc
 14443  1D24  2D34               	goto	l6329
 14444                           
 14445                           ;BQ76920.c: 94:             protect1.bits.SCD_DELAY = i;
 14446  1D25  0021               	movlb	1	; select bank1
 14447  1D26  082A               	movf	setShortCircuitProtection@i_842^(0+128),w
 14448  1D27  0020               	movlb	0	; select bank0
 14449  1D28  00EC               	movwf	??_setShortCircuitProtection
 14450  1D29  0DEC               	rlf	??_setShortCircuitProtection,f
 14451  1D2A  0DEC               	rlf	??_setShortCircuitProtection,f
 14452  1D2B  0DEC               	rlf	??_setShortCircuitProtection,f
 14453  1D2C  0023               	movlb	3	; select bank3
 14454  1D2D  0851               	movf	BQ76920@protect1^(0+384),w
 14455  1D2E  0020               	movlb	0	; select bank0
 14456  1D2F  066C               	xorwf	??_setShortCircuitProtection,w
 14457  1D30  39E7               	andlw	-25
 14458  1D31  066C               	xorwf	??_setShortCircuitProtection,w
 14459  1D32  0023               	movlb	3	; select bank3
 14460  1D33  00D1               	movwf	BQ76920@protect1^(0+384)
 14461  1D34                     l6329:	
 14462                           
 14463                           ;BQ76920.c: 96:     }
 14464  1D34  3001               	movlw	1
 14465  1D35  0021               	movlb	1	; select bank1
 14466  1D36  07AA               	addwf	setShortCircuitProtection@i_842^(0+128),f
 14467  1D37  3000               	movlw	0
 14468  1D38  3DAB               	addwfc	(setShortCircuitProtection@i_842+1)^(0+128),f
 14469  1D39  3000               	movlw	0
 14470  1D3A  022B               	subwf	(setShortCircuitProtection@i_842+1)^(0+128),w
 14471  1D3B  3007               	movlw	7
 14472  1D3C  1903               	skipnz
 14473  1D3D  022A               	subwf	setShortCircuitProtection@i_842^(0+128),w
 14474  1D3E  1C03               	skipc
 14475  1D3F  2D0A               	goto	l6325
 14476                           
 14477                           ;BQ76920.c: 98:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 14478  1D40  3018               	movlw	24
 14479  1D41  00F5               	movwf	I2C_writeRegister@slaveAddress
 14480  1D42  3000               	movlw	0
 14481  1D43  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 14482  1D44  3006               	movlw	6
 14483  1D45  00F7               	movwf	I2C_writeRegister@regAddress
 14484  1D46  3000               	movlw	0
 14485  1D47  00F8               	movwf	I2C_writeRegister@regAddress+1
 14486  1D48  0023               	movlb	3	; select bank3
 14487  1D49  0851               	movf	BQ76920@protect1^(0+384),w
 14488  1D4A  0020               	movlb	0	; select bank0
 14489  1D4B  00EC               	movwf	??_setShortCircuitProtection
 14490  1D4C  01ED               	clrf	??_setShortCircuitProtection+1
 14491  1D4D  086C               	movf	??_setShortCircuitProtection,w
 14492  1D4E  00F9               	movwf	I2C_writeRegister@data
 14493  1D4F  086D               	movf	??_setShortCircuitProtection+1,w
 14494  1D50  00FA               	movwf	I2C_writeRegister@data+1
 14495  1D51  31B6  2614         	fcall	_I2C_writeRegister
 14496  1D53  0008               	return
 14497  1D54                     __end_of_setShortCircuitProtection:	
 14498                           
 14499                           	psect	text46
 14500  1B28                     __ptext46:	
 14501 ;; *************** function _setOverCurrentDischargeProtection *****************
 14502 ;; Defined at:
 14503 ;;		line 105 in file "BQ76920.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  current_mA      4   70[BANK0 ] long 
 14506 ;;  delay_ms        2   74[BANK0 ] int 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  i               2   10[BANK1 ] int 
 14509 ;;  i               2    8[BANK1 ] int 
 14510 ;;  scaler          4    0[BANK1 ] float 
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  1    wreg      void 
 14513 ;; Registers used:
 14514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14515 ;; Tracked objects:
 14516 ;;		On entry : 0/0
 14517 ;;		On exit  : 0/0
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14520 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14521 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14522 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14523 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14524 ;;Total ram usage:       21 bytes
 14525 ;; Hardware stack levels used:    1
 14526 ;; Hardware stack levels required when called:    3
 14527 ;; This function calls:
 14528 ;;		_I2C_writeRegister
 14529 ;;		___fldiv
 14530 ;;		___flge
 14531 ;;		___flmul
 14532 ;;		___xxtofl
 14533 ;; This function is called by:
 14534 ;;		_init_AFE
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           
 14539                           ;psect for function _setOverCurrentDischargeProtection
 14540  1B28                     _setOverCurrentDischargeProtection:	
 14541                           
 14542                           ;BQ76920.c: 108:     float scaler = 1000.0;
 14543                           
 14544                           ;incstack = 0
 14545                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 14546  1B28  3044               	movlw	68
 14547  1B29  0021               	movlb	1	; select bank1
 14548  1B2A  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 14549  1B2B  307A               	movlw	122
 14550  1B2C  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 14551  1B2D  3000               	movlw	0
 14552  1B2E  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 14553  1B2F  3000               	movlw	0
 14554  1B30  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 14555                           
 14556                           ;BQ76920.c: 109:     protect2.bits.OCD_THRESH = 0;
 14557  1B31  30F0               	movlw	-16
 14558  1B32  0023               	movlb	3	; select bank3
 14559  1B33  05D0               	andwf	BQ76920@protect2^(0+384),f
 14560                           
 14561                           ;BQ76920.c: 110:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 14562  1B34  0021               	movlb	1	; select bank1
 14563  1B35  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 14564  1B36  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 14565  1B37                     l6345:	
 14566                           
 14567                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= SCD_threshold_setting[i]) {
 14568  1B37  0023               	movlb	3	; select bank3
 14569  1B38  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 14570  1B39  0020               	movlb	0	; select bank0
 14571  1B3A  00A9               	movwf	___flmul@b+3
 14572  1B3B  0023               	movlb	3	; select bank3
 14573  1B3C  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 14574  1B3D  0020               	movlb	0	; select bank0
 14575  1B3E  00A8               	movwf	___flmul@b+2
 14576  1B3F  0023               	movlb	3	; select bank3
 14577  1B40  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 14578  1B41  0020               	movlb	0	; select bank0
 14579  1B42  00A7               	movwf	___flmul@b+1
 14580  1B43  0023               	movlb	3	; select bank3
 14581  1B44  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 14582  1B45  0020               	movlb	0	; select bank0
 14583  1B46  00A6               	movwf	___flmul@b
 14584  1B47  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 14585  1B48  00F4               	movwf	___xxtofl@val+3
 14586  1B49  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 14587  1B4A  00F3               	movwf	___xxtofl@val+2
 14588  1B4B  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 14589  1B4C  00F2               	movwf	___xxtofl@val+1
 14590  1B4D  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 14591  1B4E  00F1               	movwf	___xxtofl@val
 14592  1B4F  3001               	movlw	1
 14593  1B50  31AE  26C9  319B   	fcall	___xxtofl
 14594  1B53  0874               	movf	?___xxtofl+3,w
 14595  1B54  0020               	movlb	0	; select bank0
 14596  1B55  00AD               	movwf	___flmul@a+3
 14597  1B56  0873               	movf	?___xxtofl+2,w
 14598  1B57  00AC               	movwf	___flmul@a+2
 14599  1B58  0872               	movf	?___xxtofl+1,w
 14600  1B59  00AB               	movwf	___flmul@a+1
 14601  1B5A  0871               	movf	?___xxtofl,w
 14602  1B5B  00AA               	movwf	___flmul@a
 14603  1B5C  3195  25D4  319B   	fcall	___flmul
 14604  1B5F  0020               	movlb	0	; select bank0
 14605  1B60  0829               	movf	?___flmul+3,w
 14606  1B61  0021               	movlb	1	; select bank1
 14607  1B62  00A7               	movwf	(_setOverCurrentDischargeProtection$1905+3)^(0+128)
 14608  1B63  0020               	movlb	0	; select bank0
 14609  1B64  0828               	movf	?___flmul+2,w
 14610  1B65  0021               	movlb	1	; select bank1
 14611  1B66  00A6               	movwf	(_setOverCurrentDischargeProtection$1905+2)^(0+128)
 14612  1B67  0020               	movlb	0	; select bank0
 14613  1B68  0827               	movf	?___flmul+1,w
 14614  1B69  0021               	movlb	1	; select bank1
 14615  1B6A  00A5               	movwf	(_setOverCurrentDischargeProtection$1905+1)^(0+128)
 14616  1B6B  0020               	movlb	0	; select bank0
 14617  1B6C  0826               	movf	?___flmul,w
 14618  1B6D  0021               	movlb	1	; select bank1
 14619  1B6E  00A4               	movwf	_setOverCurrentDischargeProtection$1905^(0+128)
 14620                           
 14621                           ;BQ76920.c: 111:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= SCD_threshold_setting[i]) {
 14622  1B6F  3044               	movlw	68
 14623  1B70  0020               	movlb	0	; select bank0
 14624  1B71  00C3               	movwf	___fldiv@a+3
 14625  1B72  307A               	movlw	122
 14626  1B73  00C2               	movwf	___fldiv@a+2
 14627  1B74  3000               	movlw	0
 14628  1B75  00C1               	movwf	___fldiv@a+1
 14629  1B76  3000               	movlw	0
 14630  1B77  00C0               	movwf	___fldiv@a
 14631  1B78  0021               	movlb	1	; select bank1
 14632  1B79  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 14633  1B7A  0020               	movlb	0	; select bank0
 14634  1B7B  00A9               	movwf	___flmul@b+3
 14635  1B7C  0021               	movlb	1	; select bank1
 14636  1B7D  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 14637  1B7E  0020               	movlb	0	; select bank0
 14638  1B7F  00A8               	movwf	___flmul@b+2
 14639  1B80  0021               	movlb	1	; select bank1
 14640  1B81  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 14641  1B82  0020               	movlb	0	; select bank0
 14642  1B83  00A7               	movwf	___flmul@b+1
 14643  1B84  0021               	movlb	1	; select bank1
 14644  1B85  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 14645  1B86  0020               	movlb	0	; select bank0
 14646  1B87  00A6               	movwf	___flmul@b
 14647  1B88  0021               	movlb	1	; select bank1
 14648  1B89  0827               	movf	(_setOverCurrentDischargeProtection$1905+3)^(0+128),w
 14649  1B8A  0020               	movlb	0	; select bank0
 14650  1B8B  00AD               	movwf	___flmul@a+3
 14651  1B8C  0021               	movlb	1	; select bank1
 14652  1B8D  0826               	movf	(_setOverCurrentDischargeProtection$1905+2)^(0+128),w
 14653  1B8E  0020               	movlb	0	; select bank0
 14654  1B8F  00AC               	movwf	___flmul@a+2
 14655  1B90  0021               	movlb	1	; select bank1
 14656  1B91  0825               	movf	(_setOverCurrentDischargeProtection$1905+1)^(0+128),w
 14657  1B92  0020               	movlb	0	; select bank0
 14658  1B93  00AB               	movwf	___flmul@a+1
 14659  1B94  0021               	movlb	1	; select bank1
 14660  1B95  0824               	movf	_setOverCurrentDischargeProtection$1905^(0+128),w
 14661  1B96  0020               	movlb	0	; select bank0
 14662  1B97  00AA               	movwf	___flmul@a
 14663  1B98  3195  25D4  319B   	fcall	___flmul
 14664  1B9B  0020               	movlb	0	; select bank0
 14665  1B9C  0829               	movf	?___flmul+3,w
 14666  1B9D  00C7               	movwf	___fldiv@b+3
 14667  1B9E  0828               	movf	?___flmul+2,w
 14668  1B9F  00C6               	movwf	___fldiv@b+2
 14669  1BA0  0827               	movf	?___flmul+1,w
 14670  1BA1  00C5               	movwf	___fldiv@b+1
 14671  1BA2  0826               	movf	?___flmul,w
 14672  1BA3  00C4               	movwf	___fldiv@b
 14673  1BA4  3190  2061  319B   	fcall	___fldiv
 14674  1BA7  0020               	movlb	0	; select bank0
 14675  1BA8  0843               	movf	?___fldiv+3,w
 14676  1BA9  00DD               	movwf	___flge@ff1+3
 14677  1BAA  0842               	movf	?___fldiv+2,w
 14678  1BAB  00DC               	movwf	___flge@ff1+2
 14679  1BAC  0841               	movf	?___fldiv+1,w
 14680  1BAD  00DB               	movwf	___flge@ff1+1
 14681  1BAE  0840               	movf	?___fldiv,w
 14682  1BAF  00DA               	movwf	___flge@ff1
 14683  1BB0  0021               	movlb	1	; select bank1
 14684  1BB1  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 14685  1BB2  0085               	movwf	5
 14686  1BB3  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 14687  1BB4  0084               	movwf	4
 14688  1BB5  3584               	lslf	4,f
 14689  1BB6  0D85               	rlf	5,f
 14690  1BB7  3093               	movlw	low (_SCD_threshold_setting| (0+32768))
 14691  1BB8  0784               	addwf	4,f
 14692  1BB9  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 14693  1BBA  3D85               	addwfc	5,f
 14694  1BBB  3F00               	moviw [0]fsr0
 14695  1BBC  0020               	movlb	0	; select bank0
 14696  1BBD  00EC               	movwf	??_setOverCurrentDischargeProtection
 14697  1BBE  3F01               	moviw [1]fsr0
 14698  1BBF  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 14699  1BC0  086C               	movf	??_setOverCurrentDischargeProtection,w
 14700  1BC1  00F1               	movwf	___xxtofl@val
 14701  1BC2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 14702  1BC3  00F2               	movwf	___xxtofl@val+1
 14703  1BC4  0D89               	rlf	9,f
 14704  1BC5  3B89               	subwfb	9,f
 14705  1BC6  0989               	comf	9,f
 14706  1BC7  00F3               	movwf	___xxtofl@val+2
 14707  1BC8  00F4               	movwf	___xxtofl@val+3
 14708  1BC9  3001               	movlw	1
 14709  1BCA  31AE  26C9  319B   	fcall	___xxtofl
 14710  1BCD  0874               	movf	?___xxtofl+3,w
 14711  1BCE  0020               	movlb	0	; select bank0
 14712  1BCF  00E1               	movwf	___flge@ff2+3
 14713  1BD0  0873               	movf	?___xxtofl+2,w
 14714  1BD1  00E0               	movwf	___flge@ff2+2
 14715  1BD2  0872               	movf	?___xxtofl+1,w
 14716  1BD3  00DF               	movwf	___flge@ff2+1
 14717  1BD4  0871               	movf	?___xxtofl,w
 14718  1BD5  00DE               	movwf	___flge@ff2
 14719  1BD6  31AB  23C7  319B   	fcall	___flge
 14720  1BD9  1C03               	btfss	3,0
 14721  1BDA  2BE3               	goto	l6351
 14722                           
 14723                           ;BQ76920.c: 112:             protect2.bits.OCD_THRESH = i;
 14724  1BDB  0023               	movlb	3	; select bank3
 14725  1BDC  0850               	movf	BQ76920@protect2^(0+384),w
 14726  1BDD  0021               	movlb	1	; select bank1
 14727  1BDE  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 14728  1BDF  39F0               	andlw	-16
 14729  1BE0  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 14730  1BE1  0023               	movlb	3	; select bank3
 14731  1BE2  00D0               	movwf	BQ76920@protect2^(0+384)
 14732  1BE3                     l6351:	
 14733                           
 14734                           ;BQ76920.c: 114:     }
 14735  1BE3  3001               	movlw	1
 14736  1BE4  0021               	movlb	1	; select bank1
 14737  1BE5  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 14738  1BE6  3000               	movlw	0
 14739  1BE7  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 14740  1BE8  3000               	movlw	0
 14741  1BE9  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 14742  1BEA  300F               	movlw	15
 14743  1BEB  1903               	skipnz
 14744  1BEC  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 14745  1BED  1C03               	skipc
 14746  1BEE  2B37               	goto	l6345
 14747                           
 14748                           ;BQ76920.c: 116:     protect2.bits.OCD_DELAY = 0;
 14749  1BEF  308F               	movlw	-113
 14750  1BF0  0023               	movlb	3	; select bank3
 14751  1BF1  05D0               	andwf	BQ76920@protect2^(0+384),f
 14752                           
 14753                           ;BQ76920.c: 117:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 14754  1BF2  0021               	movlb	1	; select bank1
 14755  1BF3  01AA               	clrf	setOverCurrentDischargeProtection@i_851^(0+128)
 14756  1BF4  01AB               	clrf	(setOverCurrentDischargeProtection@i_851+1)^(0+128)
 14757  1BF5                     l6363:	
 14758                           
 14759                           ;BQ76920.c: 118:         if (delay_ms >= SCD_delay_setting[i]) {
 14760  1BF5  082B               	movf	(setOverCurrentDischargeProtection@i_851+1)^(0+128),w
 14761  1BF6  0085               	movwf	5
 14762  1BF7  082A               	movf	setOverCurrentDischargeProtection@i_851^(0+128),w
 14763  1BF8  0084               	movwf	4
 14764  1BF9  3584               	lslf	4,f
 14765  1BFA  0D85               	rlf	5,f
 14766  1BFB  30B3               	movlw	low (_SCD_delay_setting| (0+32768))
 14767  1BFC  0784               	addwf	4,f
 14768  1BFD  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 14769  1BFE  3D85               	addwfc	5,f
 14770  1BFF  3F00               	moviw [0]fsr0
 14771  1C00  0020               	movlb	0	; select bank0
 14772  1C01  00EC               	movwf	??_setOverCurrentDischargeProtection
 14773  1C02  3F01               	moviw [1]fsr0
 14774  1C03  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 14775  1C04  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 14776  1C05  3A80               	xorlw	128
 14777  1C06  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 14778  1C07  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 14779  1C08  3A80               	xorlw	128
 14780  1C09  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 14781  1C0A  1D03               	skipz
 14782  1C0B  2C0E               	goto	u9045
 14783  1C0C  086C               	movf	??_setOverCurrentDischargeProtection,w
 14784  1C0D  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 14785  1C0E                     u9045:	
 14786  1C0E  1C03               	skipc
 14787  1C0F  2C1D               	goto	l6367
 14788                           
 14789                           ;BQ76920.c: 119:             protect2.bits.OCD_DELAY = i;
 14790  1C10  0021               	movlb	1	; select bank1
 14791  1C11  082A               	movf	setOverCurrentDischargeProtection@i_851^(0+128),w
 14792  1C12  0020               	movlb	0	; select bank0
 14793  1C13  00EC               	movwf	??_setOverCurrentDischargeProtection
 14794  1C14  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 14795  1C15  0023               	movlb	3	; select bank3
 14796  1C16  0850               	movf	BQ76920@protect2^(0+384),w
 14797  1C17  0020               	movlb	0	; select bank0
 14798  1C18  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 14799  1C19  398F               	andlw	-113
 14800  1C1A  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 14801  1C1B  0023               	movlb	3	; select bank3
 14802  1C1C  00D0               	movwf	BQ76920@protect2^(0+384)
 14803  1C1D                     l6367:	
 14804                           
 14805                           ;BQ76920.c: 121:     }
 14806  1C1D  3001               	movlw	1
 14807  1C1E  0021               	movlb	1	; select bank1
 14808  1C1F  07AA               	addwf	setOverCurrentDischargeProtection@i_851^(0+128),f
 14809  1C20  3000               	movlw	0
 14810  1C21  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_851+1)^(0+128),f
 14811  1C22  3000               	movlw	0
 14812  1C23  022B               	subwf	(setOverCurrentDischargeProtection@i_851+1)^(0+128),w
 14813  1C24  3007               	movlw	7
 14814  1C25  1903               	skipnz
 14815  1C26  022A               	subwf	setOverCurrentDischargeProtection@i_851^(0+128),w
 14816  1C27  1C03               	skipc
 14817  1C28  2BF5               	goto	l6363
 14818                           
 14819                           ;BQ76920.c: 123:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 14820  1C29  3018               	movlw	24
 14821  1C2A  00F5               	movwf	I2C_writeRegister@slaveAddress
 14822  1C2B  3000               	movlw	0
 14823  1C2C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 14824  1C2D  3007               	movlw	7
 14825  1C2E  00F7               	movwf	I2C_writeRegister@regAddress
 14826  1C2F  3000               	movlw	0
 14827  1C30  00F8               	movwf	I2C_writeRegister@regAddress+1
 14828  1C31  0023               	movlb	3	; select bank3
 14829  1C32  0850               	movf	BQ76920@protect2^(0+384),w
 14830  1C33  0020               	movlb	0	; select bank0
 14831  1C34  00EC               	movwf	??_setOverCurrentDischargeProtection
 14832  1C35  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 14833  1C36  086C               	movf	??_setOverCurrentDischargeProtection,w
 14834  1C37  00F9               	movwf	I2C_writeRegister@data
 14835  1C38  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 14836  1C39  00FA               	movwf	I2C_writeRegister@data+1
 14837  1C3A  31B6  2614         	fcall	_I2C_writeRegister
 14838  1C3C  0008               	return
 14839  1C3D                     __end_of_setOverCurrentDischargeProtection:	
 14840                           
 14841                           	psect	text47
 14842  15D4                     __ptext47:	
 14843 ;; *************** function ___flmul *****************
 14844 ;; Defined at:
 14845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14846 ;; Parameters:    Size  Location     Type
 14847 ;;  b               4    6[BANK0 ] void 
 14848 ;;  a               4   10[BANK0 ] void 
 14849 ;; Auto vars:     Size  Location     Type
 14850 ;;  prod            4   26[BANK0 ] struct .
 14851 ;;  grs             4   20[BANK0 ] unsigned long 
 14852 ;;  temp            2   30[BANK0 ] struct .
 14853 ;;  bexp            1   25[BANK0 ] unsigned char 
 14854 ;;  aexp            1   24[BANK0 ] unsigned char 
 14855 ;;  sign            1   19[BANK0 ] unsigned char 
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  4    6[BANK0 ] unsigned char 
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, status,0, pclath, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14866 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14867 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14868 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14869 ;;Total ram usage:       26 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    2
 14872 ;; This function calls:
 14873 ;;		__Umul8_16
 14874 ;; This function is called by:
 14875 ;;		_setShortCircuitProtection
 14876 ;;		_setOverCurrentDischargeProtection
 14877 ;;		_efgtoa
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           
 14882                           ;psect for function ___flmul
 14883  15D4                     ___flmul:	
 14884                           
 14885                           ;incstack = 0
 14886                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14887  15D4  0020               	movlb	0	; select bank0
 14888  15D5  0829               	movf	___flmul@b+3,w
 14889  15D6  3980               	andlw	128
 14890  15D7  00AE               	movwf	??___flmul
 14891  15D8  082E               	movf	??___flmul,w
 14892  15D9  00B3               	movwf	___flmul@sign
 14893  15DA  3529               	lslf	___flmul@b+3,w
 14894  15DB  00AE               	movwf	??___flmul
 14895  15DC  082E               	movf	??___flmul,w
 14896  15DD  00B9               	movwf	___flmul@bexp
 14897  15DE  1BA8               	btfsc	___flmul@b+2,7
 14898  15DF  1439               	bsf	___flmul@bexp,0
 14899  15E0  0839               	movf	___flmul@bexp,w
 14900  15E1  1903               	btfsc	3,2
 14901  15E2  2DF0               	goto	l4951
 14902  15E3  0A39               	incf	___flmul@bexp,w
 14903  15E4  1D03               	btfss	3,2
 14904  15E5  2DEE               	goto	l4949
 14905  15E6  3000               	movlw	0
 14906  15E7  00A9               	movwf	___flmul@b+3
 14907  15E8  3000               	movlw	0
 14908  15E9  00A8               	movwf	___flmul@b+2
 14909  15EA  3000               	movlw	0
 14910  15EB  00A7               	movwf	___flmul@b+1
 14911  15EC  3000               	movlw	0
 14912  15ED  00A6               	movwf	___flmul@b
 14913  15EE                     l4949:	
 14914  15EE  17A8               	bsf	___flmul@b+2,7
 14915  15EF  2DF8               	goto	l4953
 14916  15F0                     l4951:	
 14917  15F0  3000               	movlw	0
 14918  15F1  00A9               	movwf	___flmul@b+3
 14919  15F2  3000               	movlw	0
 14920  15F3  00A8               	movwf	___flmul@b+2
 14921  15F4  3000               	movlw	0
 14922  15F5  00A7               	movwf	___flmul@b+1
 14923  15F6  3000               	movlw	0
 14924  15F7  00A6               	movwf	___flmul@b
 14925  15F8                     l4953:	
 14926  15F8  082D               	movf	___flmul@a+3,w
 14927  15F9  3980               	andlw	128
 14928  15FA  00AE               	movwf	??___flmul
 14929  15FB  082E               	movf	??___flmul,w
 14930  15FC  06B3               	xorwf	___flmul@sign,f
 14931  15FD  352D               	lslf	___flmul@a+3,w
 14932  15FE  00AE               	movwf	??___flmul
 14933  15FF  082E               	movf	??___flmul,w
 14934  1600  00B8               	movwf	___flmul@aexp
 14935  1601  1BAC               	btfsc	___flmul@a+2,7
 14936  1602  1438               	bsf	___flmul@aexp,0
 14937  1603  0838               	movf	___flmul@aexp,w
 14938  1604  1903               	btfsc	3,2
 14939  1605  2E13               	goto	l4969
 14940  1606  0A38               	incf	___flmul@aexp,w
 14941  1607  1D03               	btfss	3,2
 14942  1608  2E11               	goto	l4967
 14943  1609  3000               	movlw	0
 14944  160A  00AD               	movwf	___flmul@a+3
 14945  160B  3000               	movlw	0
 14946  160C  00AC               	movwf	___flmul@a+2
 14947  160D  3000               	movlw	0
 14948  160E  00AB               	movwf	___flmul@a+1
 14949  160F  3000               	movlw	0
 14950  1610  00AA               	movwf	___flmul@a
 14951  1611                     l4967:	
 14952  1611  17AC               	bsf	___flmul@a+2,7
 14953  1612  2E1B               	goto	l4971
 14954  1613                     l4969:	
 14955  1613  3000               	movlw	0
 14956  1614  00AD               	movwf	___flmul@a+3
 14957  1615  3000               	movlw	0
 14958  1616  00AC               	movwf	___flmul@a+2
 14959  1617  3000               	movlw	0
 14960  1618  00AB               	movwf	___flmul@a+1
 14961  1619  3000               	movlw	0
 14962  161A  00AA               	movwf	___flmul@a
 14963  161B                     l4971:	
 14964  161B  0838               	movf	___flmul@aexp,w
 14965  161C  1D03               	btfss	3,2
 14966  161D  0839               	movf	___flmul@bexp,w
 14967  161E  1D03               	btfss	3,2
 14968  161F  2E29               	goto	l4979
 14969  1620  3000               	movlw	0
 14970  1621  00A9               	movwf	?___flmul+3
 14971  1622  3000               	movlw	0
 14972  1623  00A8               	movwf	?___flmul+2
 14973  1624  3000               	movlw	0
 14974  1625  00A7               	movwf	?___flmul+1
 14975  1626  3000               	movlw	0
 14976  1627  00A6               	movwf	?___flmul
 14977  1628  0008               	return
 14978  1629                     l4979:	
 14979  1629  0826               	movf	___flmul@b,w
 14980  162A  00AE               	movwf	??___flmul
 14981  162B  082E               	movf	??___flmul,w
 14982  162C  00F1               	movwf	__Umul8_16@multiplicand
 14983  162D  082C               	movf	___flmul@a+2,w
 14984  162E  31B6  2632  3195   	fcall	__Umul8_16
 14985  1631  0872               	movf	?__Umul8_16+1,w
 14986  1632  0020               	movlb	0	; select bank0
 14987  1633  00BF               	movwf	___flmul@temp+1
 14988  1634  0871               	movf	?__Umul8_16,w
 14989  1635  00BE               	movwf	___flmul@temp
 14990  1636  083E               	movf	___flmul@temp,w
 14991  1637  00AE               	movwf	??___flmul
 14992  1638  01AF               	clrf	??___flmul+1
 14993  1639  01B0               	clrf	??___flmul+2
 14994  163A  01B1               	clrf	??___flmul+3
 14995  163B  0831               	movf	??___flmul+3,w
 14996  163C  00B7               	movwf	___flmul@grs+3
 14997  163D  0830               	movf	??___flmul+2,w
 14998  163E  00B6               	movwf	___flmul@grs+2
 14999  163F  082F               	movf	??___flmul+1,w
 15000  1640  00B5               	movwf	___flmul@grs+1
 15001  1641  082E               	movf	??___flmul,w
 15002  1642  00B4               	movwf	___flmul@grs
 15003  1643  083F               	movf	___flmul@temp+1,w
 15004  1644  00AE               	movwf	??___flmul
 15005  1645  01AF               	clrf	??___flmul+1
 15006  1646  01B0               	clrf	??___flmul+2
 15007  1647  01B1               	clrf	??___flmul+3
 15008  1648  0831               	movf	??___flmul+3,w
 15009  1649  00BD               	movwf	___flmul@prod+3
 15010  164A  0830               	movf	??___flmul+2,w
 15011  164B  00BC               	movwf	___flmul@prod+2
 15012  164C  082F               	movf	??___flmul+1,w
 15013  164D  00BB               	movwf	___flmul@prod+1
 15014  164E  082E               	movf	??___flmul,w
 15015  164F  00BA               	movwf	___flmul@prod
 15016  1650  0827               	movf	___flmul@b+1,w
 15017  1651  00AE               	movwf	??___flmul
 15018  1652  082E               	movf	??___flmul,w
 15019  1653  00F1               	movwf	__Umul8_16@multiplicand
 15020  1654  082B               	movf	___flmul@a+1,w
 15021  1655  31B6  2632  3195   	fcall	__Umul8_16
 15022  1658  0872               	movf	?__Umul8_16+1,w
 15023  1659  0020               	movlb	0	; select bank0
 15024  165A  00BF               	movwf	___flmul@temp+1
 15025  165B  0871               	movf	?__Umul8_16,w
 15026  165C  00BE               	movwf	___flmul@temp
 15027  165D  083E               	movf	___flmul@temp,w
 15028  165E  00AE               	movwf	??___flmul
 15029  165F  01AF               	clrf	??___flmul+1
 15030  1660  01B0               	clrf	??___flmul+2
 15031  1661  01B1               	clrf	??___flmul+3
 15032  1662  082E               	movf	??___flmul,w
 15033  1663  07B4               	addwf	___flmul@grs,f
 15034  1664  082F               	movf	??___flmul+1,w
 15035  1665  3DB5               	addwfc	___flmul@grs+1,f
 15036  1666  0830               	movf	??___flmul+2,w
 15037  1667  3DB6               	addwfc	___flmul@grs+2,f
 15038  1668  0831               	movf	??___flmul+3,w
 15039  1669  3DB7               	addwfc	___flmul@grs+3,f
 15040  166A  083F               	movf	___flmul@temp+1,w
 15041  166B  00AE               	movwf	??___flmul
 15042  166C  01AF               	clrf	??___flmul+1
 15043  166D  01B0               	clrf	??___flmul+2
 15044  166E  01B1               	clrf	??___flmul+3
 15045  166F  082E               	movf	??___flmul,w
 15046  1670  07BA               	addwf	___flmul@prod,f
 15047  1671  082F               	movf	??___flmul+1,w
 15048  1672  3DBB               	addwfc	___flmul@prod+1,f
 15049  1673  0830               	movf	??___flmul+2,w
 15050  1674  3DBC               	addwfc	___flmul@prod+2,f
 15051  1675  0831               	movf	??___flmul+3,w
 15052  1676  3DBD               	addwfc	___flmul@prod+3,f
 15053  1677  0828               	movf	___flmul@b+2,w
 15054  1678  00AE               	movwf	??___flmul
 15055  1679  082E               	movf	??___flmul,w
 15056  167A  00F1               	movwf	__Umul8_16@multiplicand
 15057  167B  082A               	movf	___flmul@a,w
 15058  167C  31B6  2632  3195   	fcall	__Umul8_16
 15059  167F  0872               	movf	?__Umul8_16+1,w
 15060  1680  0020               	movlb	0	; select bank0
 15061  1681  00BF               	movwf	___flmul@temp+1
 15062  1682  0871               	movf	?__Umul8_16,w
 15063  1683  00BE               	movwf	___flmul@temp
 15064  1684  083E               	movf	___flmul@temp,w
 15065  1685  00AE               	movwf	??___flmul
 15066  1686  01AF               	clrf	??___flmul+1
 15067  1687  01B0               	clrf	??___flmul+2
 15068  1688  01B1               	clrf	??___flmul+3
 15069  1689  082E               	movf	??___flmul,w
 15070  168A  07B4               	addwf	___flmul@grs,f
 15071  168B  082F               	movf	??___flmul+1,w
 15072  168C  3DB5               	addwfc	___flmul@grs+1,f
 15073  168D  0830               	movf	??___flmul+2,w
 15074  168E  3DB6               	addwfc	___flmul@grs+2,f
 15075  168F  0831               	movf	??___flmul+3,w
 15076  1690  3DB7               	addwfc	___flmul@grs+3,f
 15077  1691  083F               	movf	___flmul@temp+1,w
 15078  1692  00AE               	movwf	??___flmul
 15079  1693  01AF               	clrf	??___flmul+1
 15080  1694  01B0               	clrf	??___flmul+2
 15081  1695  01B1               	clrf	??___flmul+3
 15082  1696  082E               	movf	??___flmul,w
 15083  1697  07BA               	addwf	___flmul@prod,f
 15084  1698  082F               	movf	??___flmul+1,w
 15085  1699  3DBB               	addwfc	___flmul@prod+1,f
 15086  169A  0830               	movf	??___flmul+2,w
 15087  169B  3DBC               	addwfc	___flmul@prod+2,f
 15088  169C  0831               	movf	??___flmul+3,w
 15089  169D  3DBD               	addwfc	___flmul@prod+3,f
 15090  169E  3008               	movlw	8
 15091  169F                     u6735:	
 15092  169F  35B4               	lslf	___flmul@grs,f
 15093  16A0  0DB5               	rlf	___flmul@grs+1,f
 15094  16A1  0DB6               	rlf	___flmul@grs+2,f
 15095  16A2  0DB7               	rlf	___flmul@grs+3,f
 15096  16A3  0B89               	decfsz	9,f
 15097  16A4  2E9F               	goto	u6735
 15098  16A5  0827               	movf	___flmul@b+1,w
 15099  16A6  00AE               	movwf	??___flmul
 15100  16A7  082E               	movf	??___flmul,w
 15101  16A8  00F1               	movwf	__Umul8_16@multiplicand
 15102  16A9  082A               	movf	___flmul@a,w
 15103  16AA  31B6  2632  3195   	fcall	__Umul8_16
 15104  16AD  0872               	movf	?__Umul8_16+1,w
 15105  16AE  0020               	movlb	0	; select bank0
 15106  16AF  00BF               	movwf	___flmul@temp+1
 15107  16B0  0871               	movf	?__Umul8_16,w
 15108  16B1  00BE               	movwf	___flmul@temp
 15109  16B2  083E               	movf	___flmul@temp,w
 15110  16B3  07B4               	addwf	___flmul@grs,f
 15111  16B4  083F               	movf	___flmul@temp+1,w
 15112  16B5  3DB5               	addwfc	___flmul@grs+1,f
 15113  16B6  3000               	movlw	0
 15114  16B7  3DB6               	addwfc	___flmul@grs+2,f
 15115  16B8  3DB7               	addwfc	___flmul@grs+3,f
 15116  16B9  0826               	movf	___flmul@b,w
 15117  16BA  00AE               	movwf	??___flmul
 15118  16BB  082E               	movf	??___flmul,w
 15119  16BC  00F1               	movwf	__Umul8_16@multiplicand
 15120  16BD  082B               	movf	___flmul@a+1,w
 15121  16BE  31B6  2632  3195   	fcall	__Umul8_16
 15122  16C1  0872               	movf	?__Umul8_16+1,w
 15123  16C2  0020               	movlb	0	; select bank0
 15124  16C3  00BF               	movwf	___flmul@temp+1
 15125  16C4  0871               	movf	?__Umul8_16,w
 15126  16C5  00BE               	movwf	___flmul@temp
 15127  16C6  083E               	movf	___flmul@temp,w
 15128  16C7  07B4               	addwf	___flmul@grs,f
 15129  16C8  083F               	movf	___flmul@temp+1,w
 15130  16C9  3DB5               	addwfc	___flmul@grs+1,f
 15131  16CA  3000               	movlw	0
 15132  16CB  3DB6               	addwfc	___flmul@grs+2,f
 15133  16CC  3DB7               	addwfc	___flmul@grs+3,f
 15134  16CD  3008               	movlw	8
 15135  16CE                     u6745:	
 15136  16CE  35B4               	lslf	___flmul@grs,f
 15137  16CF  0DB5               	rlf	___flmul@grs+1,f
 15138  16D0  0DB6               	rlf	___flmul@grs+2,f
 15139  16D1  0DB7               	rlf	___flmul@grs+3,f
 15140  16D2  0B89               	decfsz	9,f
 15141  16D3  2ECE               	goto	u6745
 15142  16D4  0826               	movf	___flmul@b,w
 15143  16D5  00AE               	movwf	??___flmul
 15144  16D6  082E               	movf	??___flmul,w
 15145  16D7  00F1               	movwf	__Umul8_16@multiplicand
 15146  16D8  082A               	movf	___flmul@a,w
 15147  16D9  31B6  2632  3195   	fcall	__Umul8_16
 15148  16DC  0872               	movf	?__Umul8_16+1,w
 15149  16DD  0020               	movlb	0	; select bank0
 15150  16DE  00BF               	movwf	___flmul@temp+1
 15151  16DF  0871               	movf	?__Umul8_16,w
 15152  16E0  00BE               	movwf	___flmul@temp
 15153  16E1  083E               	movf	___flmul@temp,w
 15154  16E2  07B4               	addwf	___flmul@grs,f
 15155  16E3  083F               	movf	___flmul@temp+1,w
 15156  16E4  3DB5               	addwfc	___flmul@grs+1,f
 15157  16E5  3000               	movlw	0
 15158  16E6  3DB6               	addwfc	___flmul@grs+2,f
 15159  16E7  3DB7               	addwfc	___flmul@grs+3,f
 15160  16E8  0827               	movf	___flmul@b+1,w
 15161  16E9  00AE               	movwf	??___flmul
 15162  16EA  082E               	movf	??___flmul,w
 15163  16EB  00F1               	movwf	__Umul8_16@multiplicand
 15164  16EC  082C               	movf	___flmul@a+2,w
 15165  16ED  31B6  2632  3195   	fcall	__Umul8_16
 15166  16F0  0872               	movf	?__Umul8_16+1,w
 15167  16F1  0020               	movlb	0	; select bank0
 15168  16F2  00BF               	movwf	___flmul@temp+1
 15169  16F3  0871               	movf	?__Umul8_16,w
 15170  16F4  00BE               	movwf	___flmul@temp
 15171  16F5  083E               	movf	___flmul@temp,w
 15172  16F6  07BA               	addwf	___flmul@prod,f
 15173  16F7  083F               	movf	___flmul@temp+1,w
 15174  16F8  3DBB               	addwfc	___flmul@prod+1,f
 15175  16F9  3000               	movlw	0
 15176  16FA  3DBC               	addwfc	___flmul@prod+2,f
 15177  16FB  3DBD               	addwfc	___flmul@prod+3,f
 15178  16FC  0828               	movf	___flmul@b+2,w
 15179  16FD  00AE               	movwf	??___flmul
 15180  16FE  082E               	movf	??___flmul,w
 15181  16FF  00F1               	movwf	__Umul8_16@multiplicand
 15182  1700  082B               	movf	___flmul@a+1,w
 15183  1701  31B6  2632  3195   	fcall	__Umul8_16
 15184  1704  0872               	movf	?__Umul8_16+1,w
 15185  1705  0020               	movlb	0	; select bank0
 15186  1706  00BF               	movwf	___flmul@temp+1
 15187  1707  0871               	movf	?__Umul8_16,w
 15188  1708  00BE               	movwf	___flmul@temp
 15189  1709  083E               	movf	___flmul@temp,w
 15190  170A  07BA               	addwf	___flmul@prod,f
 15191  170B  083F               	movf	___flmul@temp+1,w
 15192  170C  3DBB               	addwfc	___flmul@prod+1,f
 15193  170D  3000               	movlw	0
 15194  170E  3DBC               	addwfc	___flmul@prod+2,f
 15195  170F  3DBD               	addwfc	___flmul@prod+3,f
 15196  1710  0828               	movf	___flmul@b+2,w
 15197  1711  00AE               	movwf	??___flmul
 15198  1712  082E               	movf	??___flmul,w
 15199  1713  00F1               	movwf	__Umul8_16@multiplicand
 15200  1714  082C               	movf	___flmul@a+2,w
 15201  1715  31B6  2632  3195   	fcall	__Umul8_16
 15202  1718  0872               	movf	?__Umul8_16+1,w
 15203  1719  0020               	movlb	0	; select bank0
 15204  171A  00BF               	movwf	___flmul@temp+1
 15205  171B  0871               	movf	?__Umul8_16,w
 15206  171C  00BE               	movwf	___flmul@temp
 15207  171D  083E               	movf	___flmul@temp,w
 15208  171E  00AE               	movwf	??___flmul
 15209  171F  083F               	movf	___flmul@temp+1,w
 15210  1720  00AF               	movwf	??___flmul+1
 15211  1721  01B0               	clrf	??___flmul+2
 15212  1722  01B1               	clrf	??___flmul+3
 15213  1723  3008               	movlw	8
 15214  1724                     u6755:	
 15215  1724  35AE               	lslf	??___flmul,f
 15216  1725  0DAF               	rlf	??___flmul+1,f
 15217  1726  0DB0               	rlf	??___flmul+2,f
 15218  1727  0DB1               	rlf	??___flmul+3,f
 15219  1728  0B89               	decfsz	9,f
 15220  1729  2F24               	goto	u6755
 15221  172A  082E               	movf	??___flmul,w
 15222  172B  07BA               	addwf	___flmul@prod,f
 15223  172C  082F               	movf	??___flmul+1,w
 15224  172D  3DBB               	addwfc	___flmul@prod+1,f
 15225  172E  0830               	movf	??___flmul+2,w
 15226  172F  3DBC               	addwfc	___flmul@prod+2,f
 15227  1730  0831               	movf	??___flmul+3,w
 15228  1731  3DBD               	addwfc	___flmul@prod+3,f
 15229  1732  0834               	movf	___flmul@grs,w
 15230  1733  00AE               	movwf	??___flmul
 15231  1734  0835               	movf	___flmul@grs+1,w
 15232  1735  00AF               	movwf	??___flmul+1
 15233  1736  0836               	movf	___flmul@grs+2,w
 15234  1737  00B0               	movwf	??___flmul+2
 15235  1738  0837               	movf	___flmul@grs+3,w
 15236  1739  00B1               	movwf	??___flmul+3
 15237  173A  3018               	movlw	24
 15238  173B                     u6765:	
 15239  173B  36B1               	lsrf	??___flmul+3,f
 15240  173C  0CB0               	rrf	??___flmul+2,f
 15241  173D  0CAF               	rrf	??___flmul+1,f
 15242  173E  0CAE               	rrf	??___flmul,f
 15243  173F  0B89               	decfsz	9,f
 15244  1740  2F3B               	goto	u6765
 15245  1741  082E               	movf	??___flmul,w
 15246  1742  07BA               	addwf	___flmul@prod,f
 15247  1743  082F               	movf	??___flmul+1,w
 15248  1744  3DBB               	addwfc	___flmul@prod+1,f
 15249  1745  0830               	movf	??___flmul+2,w
 15250  1746  3DBC               	addwfc	___flmul@prod+2,f
 15251  1747  0831               	movf	??___flmul+3,w
 15252  1748  3DBD               	addwfc	___flmul@prod+3,f
 15253  1749  3008               	movlw	8
 15254  174A                     u6775:	
 15255  174A  35B4               	lslf	___flmul@grs,f
 15256  174B  0DB5               	rlf	___flmul@grs+1,f
 15257  174C  0DB6               	rlf	___flmul@grs+2,f
 15258  174D  0DB7               	rlf	___flmul@grs+3,f
 15259  174E  0B89               	decfsz	9,f
 15260  174F  2F4A               	goto	u6775
 15261  1750  0839               	movf	___flmul@bexp,w
 15262  1751  0738               	addwf	___flmul@aexp,w
 15263  1752  00AE               	movwf	??___flmul
 15264  1753  01AF               	clrf	??___flmul+1
 15265  1754  0DAF               	rlf	??___flmul+1,f
 15266  1755  082E               	movf	??___flmul,w
 15267  1756  3E82               	addlw	130
 15268  1757  00BE               	movwf	___flmul@temp
 15269  1758  30FF               	movlw	255
 15270  1759  3D2F               	addwfc	??___flmul+1,w
 15271  175A  00BF               	movwf	___flmul@temp+1
 15272  175B                     l5031:	
 15273  175B  1BBC               	btfsc	___flmul@prod+2,7
 15274  175C  2F72               	goto	l5033
 15275  175D  3001               	movlw	1
 15276  175E                     u6785:	
 15277  175E  35BA               	lslf	___flmul@prod,f
 15278  175F  0DBB               	rlf	___flmul@prod+1,f
 15279  1760  0DBC               	rlf	___flmul@prod+2,f
 15280  1761  0DBD               	rlf	___flmul@prod+3,f
 15281  1762  0B89               	decfsz	9,f
 15282  1763  2F5E               	goto	u6785
 15283  1764  1BB7               	btfsc	___flmul@grs+3,7
 15284  1765  143A               	bsf	___flmul@prod,0
 15285  1766  3001               	movlw	1
 15286  1767                     u6805:	
 15287  1767  35B4               	lslf	___flmul@grs,f
 15288  1768  0DB5               	rlf	___flmul@grs+1,f
 15289  1769  0DB6               	rlf	___flmul@grs+2,f
 15290  176A  0DB7               	rlf	___flmul@grs+3,f
 15291  176B  0B89               	decfsz	9,f
 15292  176C  2F67               	goto	u6805
 15293  176D  30FF               	movlw	255
 15294  176E  07BE               	addwf	___flmul@temp,f
 15295  176F  30FF               	movlw	255
 15296  1770  3DBF               	addwfc	___flmul@temp+1,f
 15297  1771  2F5B               	goto	l5031
 15298  1772                     l5033:	
 15299  1772  01B8               	clrf	___flmul@aexp
 15300  1773  1FB7               	btfss	___flmul@grs+3,7
 15301  1774  2F8B               	goto	l5043
 15302  1775  30FF               	movlw	255
 15303  1776  0534               	andwf	___flmul@grs,w
 15304  1777  00AE               	movwf	??___flmul
 15305  1778  30FF               	movlw	255
 15306  1779  0535               	andwf	___flmul@grs+1,w
 15307  177A  00AF               	movwf	??___flmul+1
 15308  177B  30FF               	movlw	255
 15309  177C  0536               	andwf	___flmul@grs+2,w
 15310  177D  00B0               	movwf	??___flmul+2
 15311  177E  307F               	movlw	127
 15312  177F  0537               	andwf	___flmul@grs+3,w
 15313  1780  00B1               	movwf	??___flmul+3
 15314  1781  0831               	movf	??___flmul+3,w
 15315  1782  0430               	iorwf	??___flmul+2,w
 15316  1783  042F               	iorwf	??___flmul+1,w
 15317  1784  042E               	iorwf	??___flmul,w
 15318  1785  1903               	skipnz
 15319  1786  183A               	btfsc	___flmul@prod,0
 15320  1787  2F89               	goto	l5039
 15321  1788  2F8B               	goto	l5043
 15322  1789                     l5039:	
 15323  1789  01B8               	clrf	___flmul@aexp
 15324  178A  0AB8               	incf	___flmul@aexp,f
 15325  178B                     l5043:	
 15326  178B  0838               	movf	___flmul@aexp,w
 15327  178C  1903               	btfsc	3,2
 15328  178D  2FB4               	goto	l5053
 15329  178E  3001               	movlw	1
 15330  178F  07BA               	addwf	___flmul@prod,f
 15331  1790  3000               	movlw	0
 15332  1791  3DBB               	addwfc	___flmul@prod+1,f
 15333  1792  3000               	movlw	0
 15334  1793  3DBC               	addwfc	___flmul@prod+2,f
 15335  1794  3000               	movlw	0
 15336  1795  3DBD               	addwfc	___flmul@prod+3,f
 15337  1796  1C3D               	btfss	___flmul@prod+3,0
 15338  1797  2FB4               	goto	l5053
 15339  1798  083A               	movf	___flmul@prod,w
 15340  1799  00AE               	movwf	??___flmul
 15341  179A  083B               	movf	___flmul@prod+1,w
 15342  179B  00AF               	movwf	??___flmul+1
 15343  179C  083C               	movf	___flmul@prod+2,w
 15344  179D  00B0               	movwf	??___flmul+2
 15345  179E  083D               	movf	___flmul@prod+3,w
 15346  179F  00B1               	movwf	??___flmul+3
 15347  17A0  3001               	movlw	1
 15348  17A1  00B2               	movwf	??___flmul+4
 15349  17A2                     u6875:	
 15350  17A2  37B1               	asrf	??___flmul+3,f
 15351  17A3  0CB0               	rrf	??___flmul+2,f
 15352  17A4  0CAF               	rrf	??___flmul+1,f
 15353  17A5  0CAE               	rrf	??___flmul,f
 15354  17A6  0BB2               	decfsz	??___flmul+4,f
 15355  17A7  2FA2               	goto	u6875
 15356  17A8  0831               	movf	??___flmul+3,w
 15357  17A9  00BD               	movwf	___flmul@prod+3
 15358  17AA  0830               	movf	??___flmul+2,w
 15359  17AB  00BC               	movwf	___flmul@prod+2
 15360  17AC  082F               	movf	??___flmul+1,w
 15361  17AD  00BB               	movwf	___flmul@prod+1
 15362  17AE  082E               	movf	??___flmul,w
 15363  17AF  00BA               	movwf	___flmul@prod
 15364  17B0  3001               	movlw	1
 15365  17B1  07BE               	addwf	___flmul@temp,f
 15366  17B2  3000               	movlw	0
 15367  17B3  3DBF               	addwfc	___flmul@temp+1,f
 15368  17B4                     l5053:	
 15369  17B4  083F               	movf	___flmul@temp+1,w
 15370  17B5  3A80               	xorlw	128
 15371  17B6  00AE               	movwf	??___flmul
 15372  17B7  3080               	movlw	128
 15373  17B8  022E               	subwf	??___flmul,w
 15374  17B9  1D03               	skipz
 15375  17BA  2FBD               	goto	u6885
 15376  17BB  30FF               	movlw	255
 15377  17BC  023E               	subwf	___flmul@temp,w
 15378  17BD                     u6885:	
 15379  17BD  1C03               	skipc
 15380  17BE  2FC9               	goto	l5057
 15381  17BF  307F               	movlw	127
 15382  17C0  0020               	movlb	0	; select bank0
 15383  17C1  00BD               	movwf	___flmul@prod+3
 15384  17C2  3080               	movlw	128
 15385  17C3  00BC               	movwf	___flmul@prod+2
 15386  17C4  3000               	movlw	0
 15387  17C5  00BB               	movwf	___flmul@prod+1
 15388  17C6  3000               	movlw	0
 15389  17C7  00BA               	movwf	___flmul@prod
 15390  17C8  2FF3               	goto	l1250
 15391  17C9                     l5057:	
 15392  17C9  0020               	movlb	0	; select bank0
 15393  17CA  083F               	movf	___flmul@temp+1,w
 15394  17CB  3A80               	xorlw	128
 15395  17CC  00AE               	movwf	??___flmul
 15396  17CD  3080               	movlw	128
 15397  17CE  022E               	subwf	??___flmul,w
 15398  17CF  1D03               	skipz
 15399  17D0  2FD3               	goto	u6895
 15400  17D1  3001               	movlw	1
 15401  17D2  023E               	subwf	___flmul@temp,w
 15402  17D3                     u6895:	
 15403  17D3  1803               	skipnc
 15404  17D4  2FE0               	goto	l5063
 15405  17D5  3000               	movlw	0
 15406  17D6  0020               	movlb	0	; select bank0
 15407  17D7  00BD               	movwf	___flmul@prod+3
 15408  17D8  3000               	movlw	0
 15409  17D9  00BC               	movwf	___flmul@prod+2
 15410  17DA  3000               	movlw	0
 15411  17DB  00BB               	movwf	___flmul@prod+1
 15412  17DC  3000               	movlw	0
 15413  17DD  00BA               	movwf	___flmul@prod
 15414  17DE  01B3               	clrf	___flmul@sign
 15415  17DF  2FF3               	goto	l1250
 15416  17E0                     l5063:	
 15417  17E0  0020               	movlb	0	; select bank0
 15418  17E1  083E               	movf	___flmul@temp,w
 15419  17E2  00AE               	movwf	??___flmul
 15420  17E3  082E               	movf	??___flmul,w
 15421  17E4  00B9               	movwf	___flmul@bexp
 15422  17E5  30FF               	movlw	255
 15423  17E6  05BA               	andwf	___flmul@prod,f
 15424  17E7  30FF               	movlw	255
 15425  17E8  05BB               	andwf	___flmul@prod+1,f
 15426  17E9  307F               	movlw	127
 15427  17EA  05BC               	andwf	___flmul@prod+2,f
 15428  17EB  3000               	movlw	0
 15429  17EC  05BD               	andwf	___flmul@prod+3,f
 15430  17ED  1839               	btfsc	___flmul@bexp,0
 15431  17EE  17BC               	bsf	___flmul@prod+2,7
 15432  17EF  3639               	lsrf	___flmul@bexp,w
 15433  17F0  00AE               	movwf	??___flmul
 15434  17F1  082E               	movf	??___flmul,w
 15435  17F2  00BD               	movwf	___flmul@prod+3
 15436  17F3                     l1250:	
 15437  17F3  0833               	movf	___flmul@sign,w
 15438  17F4  00AE               	movwf	??___flmul
 15439  17F5  082E               	movf	??___flmul,w
 15440  17F6  04BD               	iorwf	___flmul@prod+3,f
 15441  17F7  083D               	movf	___flmul@prod+3,w
 15442  17F8  00A9               	movwf	?___flmul+3
 15443  17F9  083C               	movf	___flmul@prod+2,w
 15444  17FA  00A8               	movwf	?___flmul+2
 15445  17FB  083B               	movf	___flmul@prod+1,w
 15446  17FC  00A7               	movwf	?___flmul+1
 15447  17FD  083A               	movf	___flmul@prod,w
 15448  17FE  00A6               	movwf	?___flmul
 15449  17FF  0008               	return
 15450  1800                     __end_of___flmul:	
 15451                           
 15452                           	psect	text48
 15453  3632                     __ptext48:	
 15454 ;; *************** function __Umul8_16 *****************
 15455 ;; Defined at:
 15456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  multiplier      1    wreg     unsigned char 
 15459 ;;  multiplicand    1    1[COMMON] unsigned char 
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;  multiplier      1    9[COMMON] unsigned char 
 15462 ;;  word_mpld       2    7[COMMON] unsigned int 
 15463 ;;  product         2    5[COMMON] unsigned int 
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  2    1[COMMON] unsigned int 
 15466 ;; Registers used:
 15467 ;;		wreg, status,2, status,0
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15474 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15476 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15477 ;;Total ram usage:        9 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:    1
 15480 ;; This function calls:
 15481 ;;		Nothing
 15482 ;; This function is called by:
 15483 ;;		___flmul
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           
 15488                           ;psect for function __Umul8_16
 15489  3632                     __Umul8_16:	
 15490                           
 15491                           ;incstack = 0
 15492                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15493                           ;__Umul8_16@multiplier stored from wreg
 15494  3632  00F9               	movwf	__Umul8_16@multiplier
 15495  3633  01F5               	clrf	__Umul8_16@product
 15496  3634  01F6               	clrf	__Umul8_16@product+1
 15497  3635  0871               	movf	__Umul8_16@multiplicand,w
 15498  3636  00F3               	movwf	??__Umul8_16
 15499  3637  01F4               	clrf	??__Umul8_16+1
 15500  3638  0873               	movf	??__Umul8_16,w
 15501  3639  00F7               	movwf	__Umul8_16@word_mpld
 15502  363A  0874               	movf	??__Umul8_16+1,w
 15503  363B  00F8               	movwf	__Umul8_16@word_mpld+1
 15504  363C                     l4385:	
 15505  363C  1C79               	btfss	__Umul8_16@multiplier,0
 15506  363D  2E42               	goto	l1460
 15507  363E  0877               	movf	__Umul8_16@word_mpld,w
 15508  363F  07F5               	addwf	__Umul8_16@product,f
 15509  3640  0878               	movf	__Umul8_16@word_mpld+1,w
 15510  3641  3DF6               	addwfc	__Umul8_16@product+1,f
 15511  3642                     l1460:	
 15512  3642  3001               	movlw	1
 15513  3643                     u5255:	
 15514  3643  35F7               	lslf	__Umul8_16@word_mpld,f
 15515  3644  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 15516  3645  0B89               	decfsz	9,f
 15517  3646  2E43               	goto	u5255
 15518  3647  1003               	clrc
 15519  3648  0CF9               	rrf	__Umul8_16@multiplier,f
 15520  3649  0879               	movf	__Umul8_16@multiplier,w
 15521  364A  1D03               	btfss	3,2
 15522  364B  2E3C               	goto	l4385
 15523  364C  0876               	movf	__Umul8_16@product+1,w
 15524  364D  00F2               	movwf	?__Umul8_16+1
 15525  364E  0875               	movf	__Umul8_16@product,w
 15526  364F  00F1               	movwf	?__Umul8_16
 15527  3650  0008               	return
 15528  3651                     __end_of__Umul8_16:	
 15529                           
 15530                           	psect	text49
 15531  2BC7                     __ptext49:	
 15532 ;; *************** function ___flge *****************
 15533 ;; Defined at:
 15534 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  ff1             4   58[BANK0 ] unsigned int 
 15537 ;;  ff2             4   62[BANK0 ] unsigned int 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;		None               void
 15542 ;; Registers used:
 15543 ;;		wreg, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15549 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15552 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15553 ;;Total ram usage:       12 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; Hardware stack levels required when called:    1
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		_setShortCircuitProtection
 15560 ;;		_setOverCurrentDischargeProtection
 15561 ;;		_efgtoa
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           
 15566                           ;psect for function ___flge
 15567  2BC7                     ___flge:	
 15568                           
 15569                           ;incstack = 0
 15570                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15571  2BC7  3000               	movlw	0
 15572  2BC8  0020               	movlb	0	; select bank0
 15573  2BC9  055A               	andwf	___flge@ff1,w
 15574  2BCA  00E2               	movwf	??___flge
 15575  2BCB  3000               	movlw	0
 15576  2BCC  055B               	andwf	___flge@ff1+1,w
 15577  2BCD  00E3               	movwf	??___flge+1
 15578  2BCE  3080               	movlw	128
 15579  2BCF  055C               	andwf	___flge@ff1+2,w
 15580  2BD0  00E4               	movwf	??___flge+2
 15581  2BD1  307F               	movlw	127
 15582  2BD2  055D               	andwf	___flge@ff1+3,w
 15583  2BD3  00E5               	movwf	??___flge+3
 15584  2BD4  0865               	movf	??___flge+3,w
 15585  2BD5  0464               	iorwf	??___flge+2,w
 15586  2BD6  0463               	iorwf	??___flge+1,w
 15587  2BD7  0462               	iorwf	??___flge,w
 15588  2BD8  1D03               	skipz
 15589  2BD9  2BE2               	goto	l1019
 15590  2BDA  3000               	movlw	0
 15591  2BDB  00DD               	movwf	___flge@ff1+3
 15592  2BDC  3000               	movlw	0
 15593  2BDD  00DC               	movwf	___flge@ff1+2
 15594  2BDE  3000               	movlw	0
 15595  2BDF  00DB               	movwf	___flge@ff1+1
 15596  2BE0  3000               	movlw	0
 15597  2BE1  00DA               	movwf	___flge@ff1
 15598  2BE2                     l1019:	
 15599  2BE2  3000               	movlw	0
 15600  2BE3  055E               	andwf	___flge@ff2,w
 15601  2BE4  00E2               	movwf	??___flge
 15602  2BE5  3000               	movlw	0
 15603  2BE6  055F               	andwf	___flge@ff2+1,w
 15604  2BE7  00E3               	movwf	??___flge+1
 15605  2BE8  3080               	movlw	128
 15606  2BE9  0560               	andwf	___flge@ff2+2,w
 15607  2BEA  00E4               	movwf	??___flge+2
 15608  2BEB  307F               	movlw	127
 15609  2BEC  0561               	andwf	___flge@ff2+3,w
 15610  2BED  00E5               	movwf	??___flge+3
 15611  2BEE  0865               	movf	??___flge+3,w
 15612  2BEF  0464               	iorwf	??___flge+2,w
 15613  2BF0  0463               	iorwf	??___flge+1,w
 15614  2BF1  0462               	iorwf	??___flge,w
 15615  2BF2  1D03               	skipz
 15616  2BF3  2BFC               	goto	l4693
 15617  2BF4  3000               	movlw	0
 15618  2BF5  00E1               	movwf	___flge@ff2+3
 15619  2BF6  3000               	movlw	0
 15620  2BF7  00E0               	movwf	___flge@ff2+2
 15621  2BF8  3000               	movlw	0
 15622  2BF9  00DF               	movwf	___flge@ff2+1
 15623  2BFA  3000               	movlw	0
 15624  2BFB  00DE               	movwf	___flge@ff2
 15625  2BFC                     l4693:	
 15626  2BFC  1FDD               	btfss	___flge@ff1+3,7
 15627  2BFD  2C16               	goto	l4697
 15628  2BFE  3000               	movlw	0
 15629  2BFF  00E2               	movwf	??___flge
 15630  2C00  3000               	movlw	0
 15631  2C01  00E3               	movwf	??___flge+1
 15632  2C02  3000               	movlw	0
 15633  2C03  00E4               	movwf	??___flge+2
 15634  2C04  3080               	movlw	128
 15635  2C05  00E5               	movwf	??___flge+3
 15636  2C06  085A               	movf	___flge@ff1,w
 15637  2C07  02E2               	subwf	??___flge,f
 15638  2C08  085B               	movf	___flge@ff1+1,w
 15639  2C09  3BE3               	subwfb	??___flge+1,f
 15640  2C0A  085C               	movf	___flge@ff1+2,w
 15641  2C0B  3BE4               	subwfb	??___flge+2,f
 15642  2C0C  085D               	movf	___flge@ff1+3,w
 15643  2C0D  3BE5               	subwfb	??___flge+3,f
 15644  2C0E  0865               	movf	??___flge+3,w
 15645  2C0F  00DD               	movwf	___flge@ff1+3
 15646  2C10  0864               	movf	??___flge+2,w
 15647  2C11  00DC               	movwf	___flge@ff1+2
 15648  2C12  0863               	movf	??___flge+1,w
 15649  2C13  00DB               	movwf	___flge@ff1+1
 15650  2C14  0862               	movf	??___flge,w
 15651  2C15  00DA               	movwf	___flge@ff1
 15652  2C16                     l4697:	
 15653  2C16  1FE1               	btfss	___flge@ff2+3,7
 15654  2C17  2C30               	goto	l1022
 15655  2C18  3000               	movlw	0
 15656  2C19  00E2               	movwf	??___flge
 15657  2C1A  3000               	movlw	0
 15658  2C1B  00E3               	movwf	??___flge+1
 15659  2C1C  3000               	movlw	0
 15660  2C1D  00E4               	movwf	??___flge+2
 15661  2C1E  3080               	movlw	128
 15662  2C1F  00E5               	movwf	??___flge+3
 15663  2C20  085E               	movf	___flge@ff2,w
 15664  2C21  02E2               	subwf	??___flge,f
 15665  2C22  085F               	movf	___flge@ff2+1,w
 15666  2C23  3BE3               	subwfb	??___flge+1,f
 15667  2C24  0860               	movf	___flge@ff2+2,w
 15668  2C25  3BE4               	subwfb	??___flge+2,f
 15669  2C26  0861               	movf	___flge@ff2+3,w
 15670  2C27  3BE5               	subwfb	??___flge+3,f
 15671  2C28  0865               	movf	??___flge+3,w
 15672  2C29  00E1               	movwf	___flge@ff2+3
 15673  2C2A  0864               	movf	??___flge+2,w
 15674  2C2B  00E0               	movwf	___flge@ff2+2
 15675  2C2C  0863               	movf	??___flge+1,w
 15676  2C2D  00DF               	movwf	___flge@ff2+1
 15677  2C2E  0862               	movf	??___flge,w
 15678  2C2F  00DE               	movwf	___flge@ff2
 15679  2C30                     l1022:	
 15680  2C30  3080               	movlw	128
 15681  2C31  06DD               	xorwf	___flge@ff1+3,f
 15682  2C32  3080               	movlw	128
 15683  2C33  06E1               	xorwf	___flge@ff2+3,f
 15684  2C34  0861               	movf	___flge@ff2+3,w
 15685  2C35  025D               	subwf	___flge@ff1+3,w
 15686  2C36  1D03               	skipz
 15687  2C37  0008               	return
 15688  2C38  0860               	movf	___flge@ff2+2,w
 15689  2C39  025C               	subwf	___flge@ff1+2,w
 15690  2C3A  1D03               	skipz
 15691  2C3B  0008               	return
 15692  2C3C  085F               	movf	___flge@ff2+1,w
 15693  2C3D  025B               	subwf	___flge@ff1+1,w
 15694  2C3E  1D03               	skipz
 15695  2C3F  0008               	return
 15696  2C40  085E               	movf	___flge@ff2,w
 15697  2C41  025A               	subwf	___flge@ff1,w
 15698  2C42  0008               	return
 15699  2C43                     __end_of___flge:	
 15700                           
 15701                           	psect	text50
 15702  2165                     __ptext50:	
 15703 ;; *************** function _beginAFEcommunication *****************
 15704 ;; Defined at:
 15705 ;;		line 22 in file "BQ76920.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;		None
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  i               2   13[BANK0 ] int 
 15710 ;;  commSuccess     2   11[BANK0 ] int 
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  2    0[BANK0 ] int 
 15713 ;; Registers used:
 15714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15722 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15723 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15724 ;;Total ram usage:       15 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    3
 15727 ;; This function calls:
 15728 ;;		_I2C_writeRegister
 15729 ;;		_readRegister
 15730 ;; This function is called by:
 15731 ;;		_statemachine
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           
 15736                           ;psect for function _beginAFEcommunication
 15737  2165                     _beginAFEcommunication:	
 15738                           
 15739                           ;BQ76920.c: 24:     int commSuccess = 0;
 15740                           
 15741                           ;incstack = 0
 15742                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15743  2165  0020               	movlb	0	; select bank0
 15744  2166  01AB               	clrf	beginAFEcommunication@commSuccess
 15745  2167  01AC               	clrf	beginAFEcommunication@commSuccess+1
 15746                           
 15747                           ;BQ76920.c: 27:     for (int i = 0; i < 4; i++) {
 15748  2168  01AD               	clrf	beginAFEcommunication@i
 15749  2169  01AE               	clrf	beginAFEcommunication@i+1
 15750  216A                     l8117:	
 15751                           
 15752                           ;BQ76920.c: 28:         cellVoltages[i] = 0;
 15753  216A  0020               	movlb	0	; select bank0
 15754  216B  352D               	lslf	beginAFEcommunication@i,w
 15755  216C  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 15756  216D  0086               	movwf	6
 15757  216E  3001               	movlw	1	; select bank3/4
 15758  216F  0087               	movwf	7
 15759  2170  3000               	movlw	0
 15760  2171  3FC0               	movwi [0]fsr1
 15761  2172  3FC1               	movwi [1]fsr1
 15762                           
 15763                           ;BQ76920.c: 29:     }
 15764  2173  3001               	movlw	1
 15765  2174  07AD               	addwf	beginAFEcommunication@i,f
 15766  2175  3000               	movlw	0
 15767  2176  3DAE               	addwfc	beginAFEcommunication@i+1,f
 15768  2177  082E               	movf	beginAFEcommunication@i+1,w
 15769  2178  3A80               	xorlw	128
 15770  2179  00A2               	movwf	??_beginAFEcommunication
 15771  217A  3080               	movlw	128
 15772  217B  0222               	subwf	??_beginAFEcommunication,w
 15773  217C  1D03               	skipz
 15774  217D  2980               	goto	u11855
 15775  217E  3004               	movlw	4
 15776  217F  022D               	subwf	beginAFEcommunication@i,w
 15777  2180                     u11855:	
 15778  2180  1C03               	skipc
 15779  2181  296A               	goto	l8117
 15780                           
 15781                           ;BQ76920.c: 32:     I2C_writeRegister(0x18, 0x0B, 0x19);
 15782  2182  3018               	movlw	24
 15783  2183  00F5               	movwf	I2C_writeRegister@slaveAddress
 15784  2184  3000               	movlw	0
 15785  2185  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15786  2186  300B               	movlw	11
 15787  2187  00F7               	movwf	I2C_writeRegister@regAddress
 15788  2188  3000               	movlw	0
 15789  2189  00F8               	movwf	I2C_writeRegister@regAddress+1
 15790  218A  3019               	movlw	25
 15791  218B  00F9               	movwf	I2C_writeRegister@data
 15792  218C  3000               	movlw	0
 15793  218D  00FA               	movwf	I2C_writeRegister@data+1
 15794  218E  31B6  2614  31A1   	fcall	_I2C_writeRegister
 15795                           
 15796                           ;BQ76920.c: 34:     if (readRegister(0x18, 0x0B) == 0x19) {
 15797  2191  3018               	movlw	24
 15798  2192  00F5               	movwf	readRegister@slaveAddress
 15799  2193  3000               	movlw	0
 15800  2194  00F6               	movwf	readRegister@slaveAddress+1
 15801  2195  300B               	movlw	11
 15802  2196  00F7               	movwf	readRegister@regAddress
 15803  2197  3000               	movlw	0
 15804  2198  00F8               	movwf	readRegister@regAddress+1
 15805  2199  31B7  27CA  31A1   	fcall	_readRegister
 15806  219C  3019               	movlw	25
 15807  219D  0675               	xorwf	?_readRegister,w
 15808  219E  0476               	iorwf	?_readRegister+1,w
 15809  219F  1D03               	btfss	3,2
 15810  21A0  2A13               	goto	l378
 15811                           
 15812                           ;BQ76920.c: 35:         commSuccess = 1;
 15813  21A1  3001               	movlw	1
 15814  21A2  0020               	movlb	0	; select bank0
 15815  21A3  00AB               	movwf	beginAFEcommunication@commSuccess
 15816  21A4  3000               	movlw	0
 15817  21A5  00AC               	movwf	beginAFEcommunication@commSuccess+1
 15818                           
 15819                           ;BQ76920.c: 39:         I2C_writeRegister(0x18, 0x04, 0x18);
 15820  21A6  3018               	movlw	24
 15821  21A7  00F5               	movwf	I2C_writeRegister@slaveAddress
 15822  21A8  3000               	movlw	0
 15823  21A9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15824  21AA  3004               	movlw	4
 15825  21AB  00F7               	movwf	I2C_writeRegister@regAddress
 15826  21AC  3000               	movlw	0
 15827  21AD  00F8               	movwf	I2C_writeRegister@regAddress+1
 15828  21AE  3018               	movlw	24
 15829  21AF  00F9               	movwf	I2C_writeRegister@data
 15830  21B0  3000               	movlw	0
 15831  21B1  00FA               	movwf	I2C_writeRegister@data+1
 15832  21B2  31B6  2614  31A1   	fcall	_I2C_writeRegister
 15833                           
 15834                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x05, 0x40);
 15835  21B5  3018               	movlw	24
 15836  21B6  00F5               	movwf	I2C_writeRegister@slaveAddress
 15837  21B7  3000               	movlw	0
 15838  21B8  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15839  21B9  3005               	movlw	5
 15840  21BA  00F7               	movwf	I2C_writeRegister@regAddress
 15841  21BB  3000               	movlw	0
 15842  21BC  00F8               	movwf	I2C_writeRegister@regAddress+1
 15843  21BD  3040               	movlw	64
 15844  21BE  00F9               	movwf	I2C_writeRegister@data
 15845  21BF  3000               	movlw	0
 15846  21C0  00FA               	movwf	I2C_writeRegister@data+1
 15847  21C1  31B6  2614  31A1   	fcall	_I2C_writeRegister
 15848                           
 15849                           ;BQ76920.c: 43:         adcOffset = (signed int) readRegister(0x18, 0x51);
 15850  21C4  3018               	movlw	24
 15851  21C5  00F5               	movwf	readRegister@slaveAddress
 15852  21C6  3000               	movlw	0
 15853  21C7  00F6               	movwf	readRegister@slaveAddress+1
 15854  21C8  3051               	movlw	81
 15855  21C9  00F7               	movwf	readRegister@regAddress
 15856  21CA  3000               	movlw	0
 15857  21CB  00F8               	movwf	readRegister@regAddress+1
 15858  21CC  31B7  27CA  31A1   	fcall	_readRegister
 15859  21CF  0876               	movf	?_readRegister+1,w
 15860  21D0  0023               	movlb	3	; select bank3
 15861  21D1  00CD               	movwf	(_adcOffset+1)^(0+384)
 15862  21D2  0875               	movf	?_readRegister,w
 15863  21D3  00CC               	movwf	_adcOffset^(0+384)
 15864                           
 15865                           ;BQ76920.c: 44:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 15866  21D4  3018               	movlw	24
 15867  21D5  00F5               	movwf	readRegister@slaveAddress
 15868  21D6  3000               	movlw	0
 15869  21D7  00F6               	movwf	readRegister@slaveAddress+1
 15870  21D8  3059               	movlw	89
 15871  21D9  00F7               	movwf	readRegister@regAddress
 15872  21DA  3000               	movlw	0
 15873  21DB  00F8               	movwf	readRegister@regAddress+1
 15874  21DC  31B7  27CA  31A1   	fcall	_readRegister
 15875  21DF  0875               	movf	?_readRegister,w
 15876  21E0  0020               	movlb	0	; select bank0
 15877  21E1  00A2               	movwf	??_beginAFEcommunication
 15878  21E2  0876               	movf	?_readRegister+1,w
 15879  21E3  00A3               	movwf	??_beginAFEcommunication+1
 15880  21E4  3005               	movlw	5
 15881  21E5  00A4               	movwf	??_beginAFEcommunication+2
 15882  21E6                     u11875:	
 15883  21E6  0D23               	rlf	??_beginAFEcommunication+1,w
 15884  21E7  0CA3               	rrf	??_beginAFEcommunication+1,f
 15885  21E8  0CA2               	rrf	??_beginAFEcommunication,f
 15886  21E9  0BA4               	decfsz	??_beginAFEcommunication+2,f
 15887  21EA  29E6               	goto	u11875
 15888  21EB  3007               	movlw	7
 15889  21EC  0522               	andwf	??_beginAFEcommunication,w
 15890  21ED  00A5               	movwf	??_beginAFEcommunication+3
 15891  21EE  3000               	movlw	0
 15892  21EF  0523               	andwf	??_beginAFEcommunication+1,w
 15893  21F0  00A6               	movwf	??_beginAFEcommunication+4
 15894  21F1  3018               	movlw	24
 15895  21F2  00F5               	movwf	readRegister@slaveAddress
 15896  21F3  3000               	movlw	0
 15897  21F4  00F6               	movwf	readRegister@slaveAddress+1
 15898  21F5  3050               	movlw	80
 15899  21F6  00F7               	movwf	readRegister@regAddress
 15900  21F7  3000               	movlw	0
 15901  21F8  00F8               	movwf	readRegister@regAddress+1
 15902  21F9  31B7  27CA         	fcall	_readRegister
 15903  21FB  300C               	movlw	12
 15904  21FC  0575               	andwf	?_readRegister,w
 15905  21FD  0020               	movlb	0	; select bank0
 15906  21FE  00A7               	movwf	??_beginAFEcommunication+5
 15907  21FF  3000               	movlw	0
 15908  2200  0576               	andwf	?_readRegister+1,w
 15909  2201  00A8               	movwf	??_beginAFEcommunication+6
 15910  2202  35A7               	lslf	??_beginAFEcommunication+5,f
 15911  2203  0DA8               	rlf	??_beginAFEcommunication+6,f
 15912  2204  0825               	movf	??_beginAFEcommunication+3,w
 15913  2205  0427               	iorwf	??_beginAFEcommunication+5,w
 15914  2206  00A9               	movwf	??_beginAFEcommunication+7
 15915  2207  0826               	movf	??_beginAFEcommunication+4,w
 15916  2208  0428               	iorwf	??_beginAFEcommunication+6,w
 15917  2209  00AA               	movwf	??_beginAFEcommunication+8
 15918  220A  0829               	movf	??_beginAFEcommunication+7,w
 15919  220B  3E6D               	addlw	109
 15920  220C  0023               	movlb	3	; select bank3
 15921  220D  00CE               	movwf	_adcGain^(0+384)
 15922  220E  3001               	movlw	1
 15923  220F  0020               	movlb	0	; select bank0
 15924  2210  3D2A               	addwfc	??_beginAFEcommunication+8,w
 15925  2211  0023               	movlb	3	; select bank3
 15926  2212  00CF               	movwf	(_adcGain+1)^(0+384)
 15927  2213                     l378:	
 15928                           ;BQ76920.c: 47:     }
 15929                           
 15930                           
 15931                           ;BQ76920.c: 51:     return commSuccess;
 15932  2213  0020               	movlb	0	; select bank0
 15933  2214  082C               	movf	beginAFEcommunication@commSuccess+1,w
 15934  2215  00A1               	movwf	?_beginAFEcommunication+1
 15935  2216  082B               	movf	beginAFEcommunication@commSuccess,w
 15936  2217  00A0               	movwf	?_beginAFEcommunication
 15937  2218  0008               	return
 15938  2219                     __end_of_beginAFEcommunication:	
 15939                           
 15940                           	psect	text51
 15941  37CA                     __ptext51:	
 15942 ;; *************** function _readRegister *****************
 15943 ;; Defined at:
 15944 ;;		line 129 in file "I2C.c"
 15945 ;; Parameters:    Size  Location     Type
 15946 ;;  slaveAddress    2    5[COMMON] int 
 15947 ;;  regAddress      2    7[COMMON] int 
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;  recievedData    2    9[COMMON] int 
 15950 ;; Return value:  Size  Location     Type
 15951 ;;                  2    5[COMMON] int 
 15952 ;; Registers used:
 15953 ;;		wreg, status,2, status,0, pclath, cstack
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15962 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15963 ;;Total ram usage:        6 bytes
 15964 ;; Hardware stack levels used:    1
 15965 ;; Hardware stack levels required when called:    2
 15966 ;; This function calls:
 15967 ;;		_read_I2C_data
 15968 ;;		_send_I2C_NACK
 15969 ;;		_send_I2C_controlByte
 15970 ;;		_send_I2C_data
 15971 ;;		_send_I2C_startBit
 15972 ;;		_send_I2C_stopBit
 15973 ;; This function is called by:
 15974 ;;		_beginAFEcommunication
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           
 15979                           ;psect for function _readRegister
 15980  37CA                     _readRegister:	
 15981                           
 15982                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 15983                           
 15984                           ;incstack = 0
 15985                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 15986  37CA  31B4  24D0  31B7   	fcall	_send_I2C_startBit
 15987                           
 15988                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 15989  37CD  0876               	movf	readRegister@slaveAddress+1,w
 15990  37CE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15991  37CF  0875               	movf	readRegister@slaveAddress,w
 15992  37D0  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15993  37D1  3000               	movlw	0
 15994  37D2  00F3               	movwf	send_I2C_controlByte@RW_bit
 15995  37D3  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15996  37D4  31B5  250E  31B7   	fcall	_send_I2C_controlByte
 15997                           
 15998                           ;I2C.c: 133:     send_I2C_data(regAddress);
 15999  37D7  0878               	movf	readRegister@regAddress+1,w
 16000  37D8  00F2               	movwf	send_I2C_data@databyte+1
 16001  37D9  0877               	movf	readRegister@regAddress,w
 16002  37DA  00F1               	movwf	send_I2C_data@databyte
 16003  37DB  31B4  24E9  31B7   	fcall	_send_I2C_data
 16004                           
 16005                           ;I2C.c: 134:     send_I2C_stopBit();
 16006  37DE  31B4  24D8  31B7   	fcall	_send_I2C_stopBit
 16007                           
 16008                           ;I2C.c: 135:     send_I2C_startBit();
 16009  37E1  31B4  24D0  31B7   	fcall	_send_I2C_startBit
 16010                           
 16011                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 16012  37E4  0876               	movf	readRegister@slaveAddress+1,w
 16013  37E5  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16014  37E6  0875               	movf	readRegister@slaveAddress,w
 16015  37E7  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16016  37E8  3001               	movlw	1
 16017  37E9  00F3               	movwf	send_I2C_controlByte@RW_bit
 16018  37EA  3000               	movlw	0
 16019  37EB  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16020  37EC  31B5  250E  31B7   	fcall	_send_I2C_controlByte
 16021                           
 16022                           ;I2C.c: 137:     recievedData = read_I2C_data();
 16023  37EF  31B5  253D  31B7   	fcall	_read_I2C_data
 16024  37F2  0872               	movf	?_read_I2C_data+1,w
 16025  37F3  00FA               	movwf	readRegister@recievedData+1
 16026  37F4  0871               	movf	?_read_I2C_data,w
 16027  37F5  00F9               	movwf	readRegister@recievedData
 16028                           
 16029                           ;I2C.c: 138:     send_I2C_NACK();
 16030  37F6  31B4  24F2  31B7   	fcall	_send_I2C_NACK
 16031                           
 16032                           ;I2C.c: 139:     send_I2C_stopBit();
 16033  37F9  31B4  24D8         	fcall	_send_I2C_stopBit
 16034                           
 16035                           ;I2C.c: 140:     return recievedData;
 16036  37FB  087A               	movf	readRegister@recievedData+1,w
 16037  37FC  00F6               	movwf	?_readRegister+1
 16038  37FD  0879               	movf	readRegister@recievedData,w
 16039  37FE  00F5               	movwf	?_readRegister
 16040  37FF  0008               	return
 16041  3800                     __end_of_readRegister:	
 16042                           
 16043                           	psect	text52
 16044  34F2                     __ptext52:	
 16045 ;; *************** function _send_I2C_NACK *****************
 16046 ;; Defined at:
 16047 ;;		line 83 in file "I2C.c"
 16048 ;; Parameters:    Size  Location     Type
 16049 ;;		None
 16050 ;; Auto vars:     Size  Location     Type
 16051 ;;		None
 16052 ;; Return value:  Size  Location     Type
 16053 ;;                  1    wreg      void 
 16054 ;; Registers used:
 16055 ;;		None
 16056 ;; Tracked objects:
 16057 ;;		On entry : 0/0
 16058 ;;		On exit  : 0/0
 16059 ;;		Unchanged: 0/0
 16060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16065 ;;Total ram usage:        0 bytes
 16066 ;; Hardware stack levels used:    1
 16067 ;; Hardware stack levels required when called:    1
 16068 ;; This function calls:
 16069 ;;		Nothing
 16070 ;; This function is called by:
 16071 ;;		_readRegister
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           
 16076                           ;psect for function _send_I2C_NACK
 16077  34F2                     _send_I2C_NACK:	
 16078                           
 16079                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 16080                           
 16081                           ;incstack = 0
 16082                           ; Regs used in _send_I2C_NACK: []
 16083  34F2  0020               	movlb	0	; select bank0
 16084  34F3  1191               	bcf	17,3	;volatile
 16085                           
 16086                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 16087  34F4  0024               	movlb	4	; select bank4
 16088  34F5  1696               	bsf	22,5	;volatile
 16089                           
 16090                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 16091  34F6  1616               	bsf	22,4	;volatile
 16092  34F7                     l290:	
 16093                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 16094                           
 16095  34F7  0020               	movlb	0	; select bank0
 16096  34F8  1991               	btfsc	17,3	;volatile
 16097  34F9  0008               	return
 16098  34FA  2CF7               	goto	l290
 16099  34FB                     __end_of_send_I2C_NACK:	
 16100                           
 16101                           	psect	text53
 16102  353D                     __ptext53:	
 16103 ;; *************** function _read_I2C_data *****************
 16104 ;; Defined at:
 16105 ;;		line 42 in file "I2C.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;		None
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;		None
 16110 ;; Return value:  Size  Location     Type
 16111 ;;                  2    1[COMMON] unsigned int 
 16112 ;; Registers used:
 16113 ;;		wreg
 16114 ;; Tracked objects:
 16115 ;;		On entry : 0/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16123 ;;Total ram usage:        4 bytes
 16124 ;; Hardware stack levels used:    1
 16125 ;; Hardware stack levels required when called:    1
 16126 ;; This function calls:
 16127 ;;		Nothing
 16128 ;; This function is called by:
 16129 ;;		_readRegister
 16130 ;; This function uses a non-reentrant model
 16131 ;;
 16132                           
 16133                           
 16134                           ;psect for function _read_I2C_data
 16135  353D                     _read_I2C_data:	
 16136                           
 16137                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 16138                           
 16139                           ;incstack = 0
 16140                           ; Regs used in _read_I2C_data: [wreg]
 16141  353D  0020               	movlb	0	; select bank0
 16142  353E  1191               	bcf	17,3	;volatile
 16143                           
 16144                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 16145  353F  0024               	movlb	4	; select bank4
 16146  3540  1596               	bsf	22,3	;volatile
 16147  3541                     l260:	
 16148                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 16149                           
 16150  3541  0020               	movlb	0	; select bank0
 16151  3542  1D91               	btfss	17,3	;volatile
 16152  3543  2D41               	goto	l260
 16153                           
 16154                           ;I2C.c: 46:     return (SSPBUF);
 16155  3544  0024               	movlb	4	; select bank4
 16156  3545  0811               	movf	17,w	;volatile
 16157  3546  00F3               	movwf	??_read_I2C_data
 16158  3547  01F4               	clrf	??_read_I2C_data+1
 16159  3548  0873               	movf	??_read_I2C_data,w
 16160  3549  00F1               	movwf	?_read_I2C_data
 16161  354A  0874               	movf	??_read_I2C_data+1,w
 16162  354B  00F2               	movwf	?_read_I2C_data+1
 16163  354C  0008               	return
 16164  354D                     __end_of_read_I2C_data:	
 16165                           
 16166                           	psect	text54
 16167  3614                     __ptext54:	
 16168 ;; *************** function _I2C_writeRegister *****************
 16169 ;; Defined at:
 16170 ;;		line 118 in file "I2C.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;  slaveAddress    2    5[COMMON] int 
 16173 ;;  regAddress      2    7[COMMON] int 
 16174 ;;  data            2    9[COMMON] int 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  1    wreg      void 
 16179 ;; Registers used:
 16180 ;;		wreg, status,2, status,0, pclath, cstack
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16186 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16190 ;;Total ram usage:        6 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; Hardware stack levels required when called:    2
 16193 ;; This function calls:
 16194 ;;		_send_I2C_controlByte
 16195 ;;		_send_I2C_data
 16196 ;;		_send_I2C_startBit
 16197 ;;		_send_I2C_stopBit
 16198 ;; This function is called by:
 16199 ;;		_beginAFEcommunication
 16200 ;;		_setShortCircuitProtection
 16201 ;;		_setOverCurrentDischargeProtection
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           
 16206                           ;psect for function _I2C_writeRegister
 16207  3614                     _I2C_writeRegister:	
 16208                           
 16209                           ;I2C.c: 119:     send_I2C_startBit();
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16213  3614  31B4  24D0  31B6   	fcall	_send_I2C_startBit
 16214                           
 16215                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 16216  3617  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16217  3618  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16218  3619  0875               	movf	I2C_writeRegister@slaveAddress,w
 16219  361A  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16220  361B  3000               	movlw	0
 16221  361C  00F3               	movwf	send_I2C_controlByte@RW_bit
 16222  361D  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16223  361E  31B5  250E  31B6   	fcall	_send_I2C_controlByte
 16224                           
 16225                           ;I2C.c: 121:     send_I2C_data(regAddress);
 16226  3621  0878               	movf	I2C_writeRegister@regAddress+1,w
 16227  3622  00F2               	movwf	send_I2C_data@databyte+1
 16228  3623  0877               	movf	I2C_writeRegister@regAddress,w
 16229  3624  00F1               	movwf	send_I2C_data@databyte
 16230  3625  31B4  24E9  31B6   	fcall	_send_I2C_data
 16231                           
 16232                           ;I2C.c: 122:     send_I2C_data(data);
 16233  3628  087A               	movf	I2C_writeRegister@data+1,w
 16234  3629  00F2               	movwf	send_I2C_data@databyte+1
 16235  362A  0879               	movf	I2C_writeRegister@data,w
 16236  362B  00F1               	movwf	send_I2C_data@databyte
 16237  362C  31B4  24E9  31B6   	fcall	_send_I2C_data
 16238                           
 16239                           ;I2C.c: 123:     send_I2C_stopBit();
 16240  362F  31B4  24D8         	fcall	_send_I2C_stopBit
 16241  3631  0008               	return
 16242  3632                     __end_of_I2C_writeRegister:	
 16243                           
 16244                           	psect	text55
 16245  34D8                     __ptext55:	
 16246 ;; *************** function _send_I2C_stopBit *****************
 16247 ;; Defined at:
 16248 ;;		line 70 in file "I2C.c"
 16249 ;; Parameters:    Size  Location     Type
 16250 ;;		None
 16251 ;; Auto vars:     Size  Location     Type
 16252 ;;		None
 16253 ;; Return value:  Size  Location     Type
 16254 ;;                  1    wreg      void 
 16255 ;; Registers used:
 16256 ;;		None
 16257 ;; Tracked objects:
 16258 ;;		On entry : 0/0
 16259 ;;		On exit  : 0/0
 16260 ;;		Unchanged: 0/0
 16261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16266 ;;Total ram usage:        0 bytes
 16267 ;; Hardware stack levels used:    1
 16268 ;; Hardware stack levels required when called:    1
 16269 ;; This function calls:
 16270 ;;		Nothing
 16271 ;; This function is called by:
 16272 ;;		_I2C_writeRegister
 16273 ;;		_readRegister
 16274 ;;		_retrieve_data_ATmega328
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           
 16279                           ;psect for function _send_I2C_stopBit
 16280  34D8                     _send_I2C_stopBit:	
 16281                           
 16282                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 16283                           
 16284                           ;incstack = 0
 16285                           ; Regs used in _send_I2C_stopBit: []
 16286  34D8  0020               	movlb	0	; select bank0
 16287  34D9  1191               	bcf	17,3	;volatile
 16288                           
 16289                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 16290  34DA  0024               	movlb	4	; select bank4
 16291  34DB  1516               	bsf	22,2	;volatile
 16292  34DC                     l278:	
 16293                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 16294                           
 16295  34DC  0020               	movlb	0	; select bank0
 16296  34DD  1991               	btfsc	17,3	;volatile
 16297  34DE  0008               	return
 16298  34DF  2CDC               	goto	l278
 16299  34E0                     __end_of_send_I2C_stopBit:	
 16300                           
 16301                           	psect	text56
 16302  34D0                     __ptext56:	
 16303 ;; *************** function _send_I2C_startBit *****************
 16304 ;; Defined at:
 16305 ;;		line 64 in file "I2C.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;		None
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;		None
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		None
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16323 ;;Total ram usage:        0 bytes
 16324 ;; Hardware stack levels used:    1
 16325 ;; Hardware stack levels required when called:    1
 16326 ;; This function calls:
 16327 ;;		Nothing
 16328 ;; This function is called by:
 16329 ;;		_I2C_writeRegister
 16330 ;;		_readRegister
 16331 ;;		_retrieve_data_ATmega328
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           
 16336                           ;psect for function _send_I2C_startBit
 16337  34D0                     _send_I2C_startBit:	
 16338                           
 16339                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 16340                           
 16341                           ;incstack = 0
 16342                           ; Regs used in _send_I2C_startBit: []
 16343  34D0  0020               	movlb	0	; select bank0
 16344  34D1  1191               	bcf	17,3	;volatile
 16345                           
 16346                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 16347  34D2  0024               	movlb	4	; select bank4
 16348  34D3  1416               	bsf	22,0	;volatile
 16349  34D4                     l272:	
 16350                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 16351                           
 16352  34D4  0020               	movlb	0	; select bank0
 16353  34D5  1991               	btfsc	17,3	;volatile
 16354  34D6  0008               	return
 16355  34D7  2CD4               	goto	l272
 16356  34D8                     __end_of_send_I2C_startBit:	
 16357                           
 16358                           	psect	text57
 16359  34E9                     __ptext57:	
 16360 ;; *************** function _send_I2C_data *****************
 16361 ;; Defined at:
 16362 ;;		line 33 in file "I2C.c"
 16363 ;; Parameters:    Size  Location     Type
 16364 ;;  databyte        2    1[COMMON] unsigned int 
 16365 ;; Auto vars:     Size  Location     Type
 16366 ;;		None
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16380 ;;Total ram usage:        2 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:    1
 16383 ;; This function calls:
 16384 ;;		Nothing
 16385 ;; This function is called by:
 16386 ;;		_I2C_writeRegister
 16387 ;;		_readRegister
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           
 16392                           ;psect for function _send_I2C_data
 16393  34E9                     _send_I2C_data:	
 16394                           
 16395                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 16396                           
 16397                           ;incstack = 0
 16398                           ; Regs used in _send_I2C_data: [wreg]
 16399  34E9  0020               	movlb	0	; select bank0
 16400  34EA  1191               	bcf	17,3	;volatile
 16401                           
 16402                           ;I2C.c: 35:     SSPBUF = databyte;
 16403  34EB  0871               	movf	send_I2C_data@databyte,w
 16404  34EC  0024               	movlb	4	; select bank4
 16405  34ED  0091               	movwf	17	;volatile
 16406  34EE                     l254:	
 16407                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 16408                           
 16409  34EE  0020               	movlb	0	; select bank0
 16410  34EF  1991               	btfsc	17,3	;volatile
 16411  34F0  0008               	return
 16412  34F1  2CEE               	goto	l254
 16413  34F2                     __end_of_send_I2C_data:	
 16414                           
 16415                           	psect	text58
 16416  350E                     __ptext58:	
 16417 ;; *************** function _send_I2C_controlByte *****************
 16418 ;; Defined at:
 16419 ;;		line 52 in file "I2C.c"
 16420 ;; Parameters:    Size  Location     Type
 16421 ;;  BlockAddress    2    1[COMMON] unsigned int 
 16422 ;;  RW_bit          2    3[COMMON] unsigned int 
 16423 ;; Auto vars:     Size  Location     Type
 16424 ;;		None
 16425 ;; Return value:  Size  Location     Type
 16426 ;;                  1    wreg      void 
 16427 ;; Registers used:
 16428 ;;		wreg, status,2, status,0
 16429 ;; Tracked objects:
 16430 ;;		On entry : 0/0
 16431 ;;		On exit  : 0/0
 16432 ;;		Unchanged: 0/0
 16433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16438 ;;Total ram usage:        4 bytes
 16439 ;; Hardware stack levels used:    1
 16440 ;; Hardware stack levels required when called:    1
 16441 ;; This function calls:
 16442 ;;		Nothing
 16443 ;; This function is called by:
 16444 ;;		_I2C_writeRegister
 16445 ;;		_readRegister
 16446 ;;		_retrieve_data_ATmega328
 16447 ;; This function uses a non-reentrant model
 16448 ;;
 16449                           
 16450                           
 16451                           ;psect for function _send_I2C_controlByte
 16452  350E                     _send_I2C_controlByte:	
 16453                           
 16454                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 16455                           
 16456                           ;incstack = 0
 16457                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 16458  350E  0020               	movlb	0	; select bank0
 16459  350F  1191               	bcf	17,3	;volatile
 16460                           
 16461                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 16462  3510  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 16463  3511  0773               	addwf	send_I2C_controlByte@RW_bit,w
 16464  3512  0024               	movlb	4	; select bank4
 16465  3513  0091               	movwf	17	;volatile
 16466  3514                     l266:	
 16467                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 16468                           
 16469  3514  0020               	movlb	0	; select bank0
 16470  3515  1991               	btfsc	17,3	;volatile
 16471  3516  0008               	return
 16472  3517  2D14               	goto	l266
 16473  3518                     __end_of_send_I2C_controlByte:	
 16474                           
 16475                           	psect	text59
 16476  36B0                     __ptext59:	
 16477 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 16478 ;; Defined at:
 16479 ;;		line 43 in file "RGB.c"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;		None
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;		None
 16484 ;; Return value:  Size  Location     Type
 16485 ;;                  1    wreg      void 
 16486 ;; Registers used:
 16487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16497 ;;Total ram usage:        1 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:    2
 16500 ;; This function calls:
 16501 ;;		_RGB_color
 16502 ;; This function is called by:
 16503 ;;		_statemachine
 16504 ;; This function uses a non-reentrant model
 16505 ;;
 16506                           
 16507                           
 16508                           ;psect for function _RGB_AWAIT_AFE_CONN
 16509  36B0                     _RGB_AWAIT_AFE_CONN:	
 16510                           
 16511                           ;RGB.c: 45:     if (toggleColor) {
 16512                           
 16513                           ;incstack = 0
 16514                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16515  36B0  087C               	movf	_toggleColor,w
 16516  36B1  1903               	btfsc	3,2
 16517  36B2  2EC2               	goto	l6411
 16518                           
 16519                           ;RGB.c: 46:         toggleColor = !toggleColor;
 16520  36B3  087C               	movf	_toggleColor,w
 16521  36B4  1D03               	btfss	3,2
 16522  36B5  2EB8               	goto	u9120
 16523  36B6  3001               	movlw	1
 16524  36B7  2EB9               	goto	u9130
 16525  36B8                     u9120:	
 16526  36B8  3000               	movlw	0
 16527  36B9                     u9130:	
 16528  36B9  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16529  36BA  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16530  36BB  00FC               	movwf	_toggleColor
 16531                           
 16532                           ;RGB.c: 47:         RGB_color(0);
 16533  36BC  3000               	movlw	0
 16534  36BD  00F1               	movwf	RGB_color@color
 16535  36BE  00F2               	movwf	RGB_color@color+1
 16536  36BF  31B6  268F         	fcall	_RGB_color
 16537                           
 16538                           ;RGB.c: 48:     } else {
 16539  36C1  0008               	return
 16540  36C2                     l6411:	
 16541                           
 16542                           ;RGB.c: 49:         toggleColor = !toggleColor;
 16543  36C2  087C               	movf	_toggleColor,w
 16544  36C3  1D03               	btfss	3,2
 16545  36C4  2EC7               	goto	u9140
 16546  36C5  3001               	movlw	1
 16547  36C6  2EC8               	goto	u9150
 16548  36C7                     u9140:	
 16549  36C7  3000               	movlw	0
 16550  36C8                     u9150:	
 16551  36C8  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16552  36C9  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16553  36CA  00FC               	movwf	_toggleColor
 16554                           
 16555                           ;RGB.c: 50:         RGB_color(1);
 16556  36CB  3001               	movlw	1
 16557  36CC  00F1               	movwf	RGB_color@color
 16558  36CD  3000               	movlw	0
 16559  36CE  00F2               	movwf	RGB_color@color+1
 16560  36CF  31B6  268F         	fcall	_RGB_color
 16561  36D1  0008               	return
 16562  36D2                     __end_of_RGB_AWAIT_AFE_CONN:	
 16563                           
 16564                           	psect	text60
 16565  368F                     __ptext60:	
 16566 ;; *************** function _RGB_color *****************
 16567 ;; Defined at:
 16568 ;;		line 17 in file "RGB.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  color           2    1[COMMON] int 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;		None
 16573 ;; Return value:  Size  Location     Type
 16574 ;;                  1    wreg      void 
 16575 ;; Registers used:
 16576 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16577 ;; Tracked objects:
 16578 ;;		On entry : 0/0
 16579 ;;		On exit  : 0/0
 16580 ;;		Unchanged: 0/0
 16581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16586 ;;Total ram usage:        2 bytes
 16587 ;; Hardware stack levels used:    1
 16588 ;; Hardware stack levels required when called:    1
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_statemachine
 16593 ;;		_RGB_AWAIT_AFE_CONN
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           
 16598                           ;psect for function _RGB_color
 16599  368F                     _RGB_color:	
 16600                           
 16601                           ;RGB.c: 19:     switch (color) {
 16602                           
 16603                           ;incstack = 0
 16604                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 16605  368F  2E9F               	goto	l6265
 16606  3690                     l315:	
 16607                           ;RGB.c: 20:         case 0:
 16608                           
 16609                           
 16610                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 16611  3690  0022               	movlb	2	; select bank2
 16612  3691  120C               	bcf	12,4	;volatile
 16613                           
 16614                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 16615  3692  168C               	bsf	12,5	;volatile
 16616                           
 16617                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 16618  3693  1410               	bsf	16,0	;volatile
 16619                           
 16620                           ;RGB.c: 24:             break;
 16621  3694  0008               	return
 16622  3695                     l317:	
 16623                           ;RGB.c: 25:         case 1:
 16624                           
 16625                           
 16626                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 16627  3695  0022               	movlb	2	; select bank2
 16628  3696  160C               	bsf	12,4	;volatile
 16629                           
 16630                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 16631  3697  128C               	bcf	12,5	;volatile
 16632                           
 16633                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 16634  3698  1410               	bsf	16,0	;volatile
 16635                           
 16636                           ;RGB.c: 29:             break;
 16637  3699  0008               	return
 16638  369A                     l318:	
 16639                           ;RGB.c: 30:         case 2:
 16640                           
 16641                           
 16642                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 16643  369A  0022               	movlb	2	; select bank2
 16644  369B  160C               	bsf	12,4	;volatile
 16645                           
 16646                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 16647  369C  168C               	bsf	12,5	;volatile
 16648                           
 16649                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 16650  369D  1010               	bcf	16,0	;volatile
 16651                           
 16652                           ;RGB.c: 34:             break;
 16653  369E  0008               	return
 16654  369F                     l6265:	
 16655                           
 16656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16657                           ; Switch size 1, requested type "simple"
 16658                           ; Number of cases is 1, Range of values is 0 to 0
 16659                           ; switch strategies available:
 16660                           ; Name         Instructions Cycles
 16661                           ; simple_byte            4     3 (average)
 16662                           ; direct_byte            8     6 (fixed)
 16663                           ; jumptable            260     6 (fixed)
 16664                           ;	Chosen strategy is simple_byte
 16665  369F  0872               	movf	RGB_color@color+1,w
 16666  36A0  3A00               	xorlw	0	; case 0
 16667  36A1  1903               	skipnz
 16668  36A2  2EA4               	goto	l8331
 16669  36A3  2EAF               	goto	l319
 16670  36A4                     l8331:	
 16671                           
 16672                           ; Switch size 1, requested type "simple"
 16673                           ; Number of cases is 3, Range of values is 0 to 2
 16674                           ; switch strategies available:
 16675                           ; Name         Instructions Cycles
 16676                           ; simple_byte           10     6 (average)
 16677                           ; direct_byte           12     6 (fixed)
 16678                           ; jumptable            260     6 (fixed)
 16679                           ;	Chosen strategy is simple_byte
 16680  36A4  0871               	movf	RGB_color@color,w
 16681  36A5  3A00               	xorlw	0	; case 0
 16682  36A6  1903               	skipnz
 16683  36A7  2E90               	goto	l315
 16684  36A8  3A01               	xorlw	1	; case 1
 16685  36A9  1903               	skipnz
 16686  36AA  2E95               	goto	l317
 16687  36AB  3A03               	xorlw	3	; case 2
 16688  36AC  1903               	skipnz
 16689  36AD  2E9A               	goto	l318
 16690  36AE  2EAF               	goto	l319
 16691  36AF                     l319:	
 16692  36AF  0008               	return
 16693  36B0                     __end_of_RGB_color:	
 16694                           
 16695                           	psect	text61
 16696  2800                     __ptext61:	
 16697 ;; *************** function _EUSART_Write_Text *****************
 16698 ;; Defined at:
 16699 ;;		line 75 in file "EUSART.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;  text            2    2[COMMON] PTR unsigned char 
 16702 ;;		 -> STR_10(45), STR_9(42), STR_5(3), STR_4(53), 
 16703 ;;		 -> messageBuffer(127), STR_2(46), STR_1(40), 
 16704 ;; Auto vars:     Size  Location     Type
 16705 ;;  i               2    5[COMMON] int 
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  1    wreg      void 
 16708 ;; Registers used:
 16709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;Total ram usage:        5 bytes
 16720 ;; Hardware stack levels used:    1
 16721 ;; Hardware stack levels required when called:    2
 16722 ;; This function calls:
 16723 ;;		_EUSART_Write
 16724 ;; This function is called by:
 16725 ;;		_statemachine
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729                           
 16730                           ;psect for function _EUSART_Write_Text
 16731  2800                     _EUSART_Write_Text:	
 16732                           
 16733                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 16734                           
 16735                           ;incstack = 0
 16736                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16737  2800  01F5               	clrf	EUSART_Write_Text@i
 16738  2801  01F6               	clrf	EUSART_Write_Text@i+1
 16739  2802                     l6447:	
 16740  2802  0872               	movf	EUSART_Write_Text@text,w
 16741  2803  0775               	addwf	EUSART_Write_Text@i,w
 16742  2804  0084               	movwf	4
 16743  2805  0873               	movf	EUSART_Write_Text@text+1,w
 16744  2806  3D76               	addwfc	EUSART_Write_Text@i+1,w
 16745  2807  0085               	movwf	5
 16746  2808  0012               	moviw fsr0++
 16747  2809  1903               	btfsc	3,2
 16748  280A  0008               	return
 16749                           
 16750                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 16751  280B  0872               	movf	EUSART_Write_Text@text,w
 16752  280C  0775               	addwf	EUSART_Write_Text@i,w
 16753  280D  0084               	movwf	4
 16754  280E  0873               	movf	EUSART_Write_Text@text+1,w
 16755  280F  3D76               	addwfc	EUSART_Write_Text@i+1,w
 16756  2810  0085               	movwf	5
 16757  2811  0800               	movf	0,w	;code access
 16758  2812  31B4  24C8  31A8   	fcall	_EUSART_Write
 16759  2815  3001               	movlw	1
 16760  2816  07F5               	addwf	EUSART_Write_Text@i,f
 16761  2817  3000               	movlw	0
 16762  2818  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 16763  2819  2802               	goto	l6447
 16764  281A                     __end_of_EUSART_Write_Text:	
 16765                           
 16766                           	psect	text62
 16767  34C8                     __ptext62:	
 16768 ;; *************** function _EUSART_Write *****************
 16769 ;; Defined at:
 16770 ;;		line 56 in file "EUSART.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  txData          1    wreg     unsigned char 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  txData          1    1[COMMON] unsigned char 
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  1    wreg      void 
 16777 ;; Registers used:
 16778 ;;		wreg
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16788 ;;Total ram usage:        1 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:    1
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_EUSART_Write_Text
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           
 16799                           ;psect for function _EUSART_Write
 16800  34C8                     _EUSART_Write:	
 16801                           
 16802                           ;incstack = 0
 16803                           ; Regs used in _EUSART_Write: [wreg]
 16804                           ;EUSART_Write@txData stored from wreg
 16805  34C8  00F1               	movwf	EUSART_Write@txData
 16806  34C9                     l219:	
 16807                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 16808                           
 16809                           
 16810                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 16811  34C9  0020               	movlb	0	; select bank0
 16812  34CA  1E11               	btfss	17,4	;volatile
 16813  34CB  2CC9               	goto	l219
 16814                           
 16815                           ;EUSART.c: 62:     TX1REG = txData;
 16816  34CC  0871               	movf	EUSART_Write@txData,w
 16817  34CD  0023               	movlb	3	; select bank3
 16818  34CE  009A               	movwf	26	;volatile
 16819  34CF  0008               	return
 16820  34D0                     __end_of_EUSART_Write:	
 16821                           
 16822                           	psect	text63
 16823  293C                     __ptext63:	
 16824 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 16825 ;; Defined at:
 16826 ;;		line 135 in file "BQ76920.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  4   67[BANK0 ] long 
 16833 ;; Registers used:
 16834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16844 ;;Total ram usage:        8 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; Hardware stack levels required when called:    2
 16847 ;; This function calls:
 16848 ;;		___fldiv
 16849 ;;		___fltol
 16850 ;;		___xxtofl
 16851 ;; This function is called by:
 16852 ;;		_statemachine
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           
 16857                           ;psect for function _AFE_getSetShortCircuitCurrent
 16858  293C                     _AFE_getSetShortCircuitCurrent:	
 16859                           
 16860                           ;BQ76920.c: 136:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 16861                           
 16862                           ;incstack = 0
 16863                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16864  293C  0023               	movlb	3	; select bank3
 16865  293D  0851               	movf	BQ76920@protect1^(0+384),w
 16866  293E  3907               	andlw	7
 16867  293F  0020               	movlb	0	; select bank0
 16868  2940  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 16869  2941  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 16870  2942  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 16871  2943  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 16872  2944  3093               	movlw	low (_SCD_threshold_setting| (0+32768))
 16873  2945  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 16874  2946  0084               	movwf	4
 16875  2947  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 16876  2948  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 16877  2949  0085               	movwf	5
 16878  294A  3F00               	moviw [0]fsr0
 16879  294B  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 16880  294C  3F01               	moviw [1]fsr0
 16881  294D  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 16882  294E  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 16883  294F  00F1               	movwf	___xxtofl@val
 16884  2950  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 16885  2951  00F2               	movwf	___xxtofl@val+1
 16886  2952  0D89               	rlf	9,f
 16887  2953  3B89               	subwfb	9,f
 16888  2954  0989               	comf	9,f
 16889  2955  00F3               	movwf	___xxtofl@val+2
 16890  2956  00F4               	movwf	___xxtofl@val+3
 16891  2957  3001               	movlw	1
 16892  2958  31AE  26C9  31A9   	fcall	___xxtofl
 16893  295B  0874               	movf	?___xxtofl+3,w
 16894  295C  0020               	movlb	0	; select bank0
 16895  295D  00C7               	movwf	___fldiv@b+3
 16896  295E  0873               	movf	?___xxtofl+2,w
 16897  295F  00C6               	movwf	___fldiv@b+2
 16898  2960  0872               	movf	?___xxtofl+1,w
 16899  2961  00C5               	movwf	___fldiv@b+1
 16900  2962  0871               	movf	?___xxtofl,w
 16901  2963  00C4               	movwf	___fldiv@b
 16902  2964  0023               	movlb	3	; select bank3
 16903  2965  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 16904  2966  0020               	movlb	0	; select bank0
 16905  2967  00C3               	movwf	___fldiv@a+3
 16906  2968  0023               	movlb	3	; select bank3
 16907  2969  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 16908  296A  0020               	movlb	0	; select bank0
 16909  296B  00C2               	movwf	___fldiv@a+2
 16910  296C  0023               	movlb	3	; select bank3
 16911  296D  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 16912  296E  0020               	movlb	0	; select bank0
 16913  296F  00C1               	movwf	___fldiv@a+1
 16914  2970  0023               	movlb	3	; select bank3
 16915  2971  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 16916  2972  0020               	movlb	0	; select bank0
 16917  2973  00C0               	movwf	___fldiv@a
 16918  2974  3190  2061  31A9   	fcall	___fldiv
 16919  2977  0020               	movlb	0	; select bank0
 16920  2978  0843               	movf	?___fldiv+3,w
 16921  2979  00DD               	movwf	___fltol@f1+3
 16922  297A  0842               	movf	?___fldiv+2,w
 16923  297B  00DC               	movwf	___fltol@f1+2
 16924  297C  0841               	movf	?___fldiv+1,w
 16925  297D  00DB               	movwf	___fltol@f1+1
 16926  297E  0840               	movf	?___fldiv,w
 16927  297F  00DA               	movwf	___fltol@f1
 16928  2980  31AA  2280         	fcall	___fltol
 16929  2982  0020               	movlb	0	; select bank0
 16930  2983  085D               	movf	?___fltol+3,w
 16931  2984  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 16932  2985  085C               	movf	?___fltol+2,w
 16933  2986  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 16934  2987  085B               	movf	?___fltol+1,w
 16935  2988  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 16936  2989  085A               	movf	?___fltol,w
 16937  298A  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 16938  298B  0008               	return
 16939  298C                     __end_of_AFE_getSetShortCircuitCurrent:	
 16940                           
 16941                           	psect	text64
 16942  3504                     __ptext64:	
 16943 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 16944 ;; Defined at:
 16945 ;;		line 131 in file "BQ76920.c"
 16946 ;; Parameters:    Size  Location     Type
 16947 ;;		None
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;		None
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  4    1[COMMON] float 
 16952 ;; Registers used:
 16953 ;;		wreg
 16954 ;; Tracked objects:
 16955 ;;		On entry : 0/0
 16956 ;;		On exit  : 0/0
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16963 ;;Total ram usage:        4 bytes
 16964 ;; Hardware stack levels used:    1
 16965 ;; Hardware stack levels required when called:    1
 16966 ;; This function calls:
 16967 ;;		Nothing
 16968 ;; This function is called by:
 16969 ;;		_statemachine
 16970 ;; This function uses a non-reentrant model
 16971 ;;
 16972                           
 16973                           
 16974                           ;psect for function _AFE_getSetCurrentSenseRes
 16975  3504                     _AFE_getSetCurrentSenseRes:	
 16976                           
 16977                           ;BQ76920.c: 132:     return (float) shuntResistorValue_mOhm;
 16978                           
 16979                           ;incstack = 0
 16980                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 16981  3504  0023               	movlb	3	; select bank3
 16982  3505  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 16983  3506  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 16984  3507  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 16985  3508  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 16986  3509  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 16987  350A  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 16988  350B  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 16989  350C  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 16990  350D  0008               	return
 16991  350E                     __end_of_AFE_getSetCurrentSenseRes:	
 16992                           
 16993                           	psect	text65
 16994  28EC                     __ptext65:	
 16995 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 16996 ;; Defined at:
 16997 ;;		line 139 in file "BQ76920.c"
 16998 ;; Parameters:    Size  Location     Type
 16999 ;;		None
 17000 ;; Auto vars:     Size  Location     Type
 17001 ;;		None
 17002 ;; Return value:  Size  Location     Type
 17003 ;;                  4   67[BANK0 ] long 
 17004 ;; Registers used:
 17005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17006 ;; Tracked objects:
 17007 ;;		On entry : 0/0
 17008 ;;		On exit  : 0/0
 17009 ;;		Unchanged: 0/0
 17010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17015 ;;Total ram usage:        8 bytes
 17016 ;; Hardware stack levels used:    1
 17017 ;; Hardware stack levels required when called:    2
 17018 ;; This function calls:
 17019 ;;		___fldiv
 17020 ;;		___fltol
 17021 ;;		___xxtofl
 17022 ;; This function is called by:
 17023 ;;		_statemachine
 17024 ;; This function uses a non-reentrant model
 17025 ;;
 17026                           
 17027                           
 17028                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17029  28EC                     _AFE_getOverCurrentDischargeCurrent:	
 17030                           
 17031                           ;BQ76920.c: 140:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17032                           
 17033                           ;incstack = 0
 17034                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17035  28EC  0023               	movlb	3	; select bank3
 17036  28ED  0850               	movf	BQ76920@protect2^(0+384),w
 17037  28EE  390F               	andlw	15
 17038  28EF  0020               	movlb	0	; select bank0
 17039  28F0  00E7               	movwf	??_AFE_getOverCurrentDischargeCurrent
 17040  28F1  01E8               	clrf	??_AFE_getOverCurrentDischargeCurrent+1
 17041  28F2  35E7               	lslf	??_AFE_getOverCurrentDischargeCurrent,f
 17042  28F3  0DE8               	rlf	??_AFE_getOverCurrentDischargeCurrent+1,f
 17043  28F4  3063               	movlw	low (_OCD_threshold_setting| (0+32768))
 17044  28F5  0767               	addwf	??_AFE_getOverCurrentDischargeCurrent,w
 17045  28F6  0084               	movwf	4
 17046  28F7  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17047  28F8  3D68               	addwfc	??_AFE_getOverCurrentDischargeCurrent+1,w
 17048  28F9  0085               	movwf	5
 17049  28FA  3F00               	moviw [0]fsr0
 17050  28FB  00E9               	movwf	??_AFE_getOverCurrentDischargeCurrent+2
 17051  28FC  3F01               	moviw [1]fsr0
 17052  28FD  00EA               	movwf	??_AFE_getOverCurrentDischargeCurrent+3
 17053  28FE  0869               	movf	??_AFE_getOverCurrentDischargeCurrent+2,w
 17054  28FF  00F1               	movwf	___xxtofl@val
 17055  2900  086A               	movf	??_AFE_getOverCurrentDischargeCurrent+3,w
 17056  2901  00F2               	movwf	___xxtofl@val+1
 17057  2902  0D89               	rlf	9,f
 17058  2903  3B89               	subwfb	9,f
 17059  2904  0989               	comf	9,f
 17060  2905  00F3               	movwf	___xxtofl@val+2
 17061  2906  00F4               	movwf	___xxtofl@val+3
 17062  2907  3001               	movlw	1
 17063  2908  31AE  26C9  31A8   	fcall	___xxtofl
 17064  290B  0874               	movf	?___xxtofl+3,w
 17065  290C  0020               	movlb	0	; select bank0
 17066  290D  00C7               	movwf	___fldiv@b+3
 17067  290E  0873               	movf	?___xxtofl+2,w
 17068  290F  00C6               	movwf	___fldiv@b+2
 17069  2910  0872               	movf	?___xxtofl+1,w
 17070  2911  00C5               	movwf	___fldiv@b+1
 17071  2912  0871               	movf	?___xxtofl,w
 17072  2913  00C4               	movwf	___fldiv@b
 17073  2914  0023               	movlb	3	; select bank3
 17074  2915  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17075  2916  0020               	movlb	0	; select bank0
 17076  2917  00C3               	movwf	___fldiv@a+3
 17077  2918  0023               	movlb	3	; select bank3
 17078  2919  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17079  291A  0020               	movlb	0	; select bank0
 17080  291B  00C2               	movwf	___fldiv@a+2
 17081  291C  0023               	movlb	3	; select bank3
 17082  291D  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17083  291E  0020               	movlb	0	; select bank0
 17084  291F  00C1               	movwf	___fldiv@a+1
 17085  2920  0023               	movlb	3	; select bank3
 17086  2921  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17087  2922  0020               	movlb	0	; select bank0
 17088  2923  00C0               	movwf	___fldiv@a
 17089  2924  3190  2061  31A8   	fcall	___fldiv
 17090  2927  0020               	movlb	0	; select bank0
 17091  2928  0843               	movf	?___fldiv+3,w
 17092  2929  00DD               	movwf	___fltol@f1+3
 17093  292A  0842               	movf	?___fldiv+2,w
 17094  292B  00DC               	movwf	___fltol@f1+2
 17095  292C  0841               	movf	?___fldiv+1,w
 17096  292D  00DB               	movwf	___fltol@f1+1
 17097  292E  0840               	movf	?___fldiv,w
 17098  292F  00DA               	movwf	___fltol@f1
 17099  2930  31AA  2280         	fcall	___fltol
 17100  2932  0020               	movlb	0	; select bank0
 17101  2933  085D               	movf	?___fltol+3,w
 17102  2934  00E6               	movwf	?_AFE_getOverCurrentDischargeCurrent+3
 17103  2935  085C               	movf	?___fltol+2,w
 17104  2936  00E5               	movwf	?_AFE_getOverCurrentDischargeCurrent+2
 17105  2937  085B               	movf	?___fltol+1,w
 17106  2938  00E4               	movwf	?_AFE_getOverCurrentDischargeCurrent+1
 17107  2939  085A               	movf	?___fltol,w
 17108  293A  00E3               	movwf	?_AFE_getOverCurrentDischargeCurrent
 17109  293B  0008               	return
 17110  293C                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 17111                           
 17112                           	psect	text66
 17113  2EC9                     __ptext66:	
 17114 ;; *************** function ___xxtofl *****************
 17115 ;; Defined at:
 17116 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;  sign            1    wreg     unsigned char 
 17119 ;;  val             4    1[COMMON] long 
 17120 ;; Auto vars:     Size  Location     Type
 17121 ;;  sign            1    0[BANK0 ] unsigned char 
 17122 ;;  arg             4    2[BANK0 ] unsigned long 
 17123 ;;  exp             1    1[BANK0 ] unsigned char 
 17124 ;; Return value:  Size  Location     Type
 17125 ;;                  4    1[COMMON] unsigned char 
 17126 ;; Registers used:
 17127 ;;		wreg, status,2, status,0
 17128 ;; Tracked objects:
 17129 ;;		On entry : 0/0
 17130 ;;		On exit  : 0/0
 17131 ;;		Unchanged: 0/0
 17132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17134 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17136 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17137 ;;Total ram usage:       14 bytes
 17138 ;; Hardware stack levels used:    1
 17139 ;; Hardware stack levels required when called:    1
 17140 ;; This function calls:
 17141 ;;		Nothing
 17142 ;; This function is called by:
 17143 ;;		_setShortCircuitProtection
 17144 ;;		_setOverCurrentDischargeProtection
 17145 ;;		_AFE_getSetShortCircuitCurrent
 17146 ;;		_AFE_getOverCurrentDischargeCurrent
 17147 ;; This function uses a non-reentrant model
 17148 ;;
 17149                           
 17150                           
 17151                           ;psect for function ___xxtofl
 17152  2EC9                     ___xxtofl:	
 17153                           
 17154                           ;incstack = 0
 17155                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17156                           ;___xxtofl@sign stored from wreg
 17157  2EC9  0020               	movlb	0	; select bank0
 17158  2ECA  00A0               	movwf	___xxtofl@sign
 17159  2ECB  0820               	movf	___xxtofl@sign,w
 17160  2ECC  1D03               	btfss	3,2
 17161  2ECD  1FF4               	btfss	___xxtofl@val+3,7
 17162  2ECE  2EDF               	goto	l6223
 17163  2ECF  0971               	comf	___xxtofl@val,w
 17164  2ED0  00A2               	movwf	___xxtofl@arg
 17165  2ED1  0972               	comf	___xxtofl@val+1,w
 17166  2ED2  00A3               	movwf	___xxtofl@arg+1
 17167  2ED3  0973               	comf	___xxtofl@val+2,w
 17168  2ED4  00A4               	movwf	___xxtofl@arg+2
 17169  2ED5  0974               	comf	___xxtofl@val+3,w
 17170  2ED6  00A5               	movwf	___xxtofl@arg+3
 17171  2ED7  0AA2               	incf	___xxtofl@arg,f
 17172  2ED8  1903               	skipnz
 17173  2ED9  0AA3               	incf	___xxtofl@arg+1,f
 17174  2EDA  1903               	skipnz
 17175  2EDB  0AA4               	incf	___xxtofl@arg+2,f
 17176  2EDC  1903               	skipnz
 17177  2EDD  0AA5               	incf	___xxtofl@arg+3,f
 17178  2EDE  2EE7               	goto	l1276
 17179  2EDF                     l6223:	
 17180  2EDF  0874               	movf	___xxtofl@val+3,w
 17181  2EE0  00A5               	movwf	___xxtofl@arg+3
 17182  2EE1  0873               	movf	___xxtofl@val+2,w
 17183  2EE2  00A4               	movwf	___xxtofl@arg+2
 17184  2EE3  0872               	movf	___xxtofl@val+1,w
 17185  2EE4  00A3               	movwf	___xxtofl@arg+1
 17186  2EE5  0871               	movf	___xxtofl@val,w
 17187  2EE6  00A2               	movwf	___xxtofl@arg
 17188  2EE7                     l1276:	
 17189  2EE7  0874               	movf	___xxtofl@val+3,w
 17190  2EE8  0473               	iorwf	___xxtofl@val+2,w
 17191  2EE9  0472               	iorwf	___xxtofl@val+1,w
 17192  2EEA  0471               	iorwf	___xxtofl@val,w
 17193  2EEB  1D03               	skipz
 17194  2EEC  2EF6               	goto	l6229
 17195  2EED  3000               	movlw	0
 17196  2EEE  00F4               	movwf	?___xxtofl+3
 17197  2EEF  3000               	movlw	0
 17198  2EF0  00F3               	movwf	?___xxtofl+2
 17199  2EF1  3000               	movlw	0
 17200  2EF2  00F2               	movwf	?___xxtofl+1
 17201  2EF3  3000               	movlw	0
 17202  2EF4  00F1               	movwf	?___xxtofl
 17203  2EF5  0008               	return
 17204  2EF6                     l6229:	
 17205  2EF6  3096               	movlw	150
 17206  2EF7  00F5               	movwf	??___xxtofl
 17207  2EF8  0875               	movf	??___xxtofl,w
 17208  2EF9  00A1               	movwf	___xxtofl@exp
 17209  2EFA                     l6233:	
 17210  2EFA  30FE               	movlw	254
 17211  2EFB  0525               	andwf	___xxtofl@arg+3,w
 17212  2EFC  1903               	btfsc	3,2
 17213  2EFD  2F1D               	goto	l1282
 17214  2EFE  3001               	movlw	1
 17215  2EFF  00F5               	movwf	??___xxtofl
 17216  2F00  0875               	movf	??___xxtofl,w
 17217  2F01  07A1               	addwf	___xxtofl@exp,f
 17218  2F02  3001               	movlw	1
 17219  2F03                     u8865:	
 17220  2F03  36A5               	lsrf	___xxtofl@arg+3,f
 17221  2F04  0CA4               	rrf	___xxtofl@arg+2,f
 17222  2F05  0CA3               	rrf	___xxtofl@arg+1,f
 17223  2F06  0CA2               	rrf	___xxtofl@arg,f
 17224  2F07  0B89               	decfsz	9,f
 17225  2F08  2F03               	goto	u8865
 17226  2F09  2EFA               	goto	l6233
 17227  2F0A                     l6235:	
 17228  2F0A  3001               	movlw	1
 17229  2F0B  00F5               	movwf	??___xxtofl
 17230  2F0C  0875               	movf	??___xxtofl,w
 17231  2F0D  07A1               	addwf	___xxtofl@exp,f
 17232  2F0E  3001               	movlw	1
 17233  2F0F  07A2               	addwf	___xxtofl@arg,f
 17234  2F10  3000               	movlw	0
 17235  2F11  3DA3               	addwfc	___xxtofl@arg+1,f
 17236  2F12  3000               	movlw	0
 17237  2F13  3DA4               	addwfc	___xxtofl@arg+2,f
 17238  2F14  3000               	movlw	0
 17239  2F15  3DA5               	addwfc	___xxtofl@arg+3,f
 17240  2F16  3001               	movlw	1
 17241  2F17                     u8885:	
 17242  2F17  36A5               	lsrf	___xxtofl@arg+3,f
 17243  2F18  0CA4               	rrf	___xxtofl@arg+2,f
 17244  2F19  0CA3               	rrf	___xxtofl@arg+1,f
 17245  2F1A  0CA2               	rrf	___xxtofl@arg,f
 17246  2F1B  0B89               	decfsz	9,f
 17247  2F1C  2F17               	goto	u8885
 17248  2F1D                     l1282:	
 17249  2F1D  30FF               	movlw	255
 17250  2F1E  0525               	andwf	___xxtofl@arg+3,w
 17251  2F1F  1903               	btfsc	3,2
 17252  2F20  2F2F               	goto	l6243
 17253  2F21  2F0A               	goto	l6235
 17254  2F22                     l6245:	
 17255  2F22  3002               	movlw	2
 17256  2F23  0221               	subwf	___xxtofl@exp,w
 17257  2F24  1C03               	btfss	3,0
 17258  2F25  2F31               	goto	l1289
 17259  2F26  3001               	movlw	1
 17260  2F27  02A1               	subwf	___xxtofl@exp,f
 17261  2F28  3001               	movlw	1
 17262  2F29                     u8905:	
 17263  2F29  35A2               	lslf	___xxtofl@arg,f
 17264  2F2A  0DA3               	rlf	___xxtofl@arg+1,f
 17265  2F2B  0DA4               	rlf	___xxtofl@arg+2,f
 17266  2F2C  0DA5               	rlf	___xxtofl@arg+3,f
 17267  2F2D  0B89               	decfsz	9,f
 17268  2F2E  2F29               	goto	u8905
 17269  2F2F                     l6243:	
 17270  2F2F  1FA4               	btfss	___xxtofl@arg+2,7
 17271  2F30  2F22               	goto	l6245
 17272  2F31                     l1289:	
 17273  2F31  1821               	btfsc	___xxtofl@exp,0
 17274  2F32  2F3B               	goto	l1290
 17275  2F33  30FF               	movlw	255
 17276  2F34  05A2               	andwf	___xxtofl@arg,f
 17277  2F35  30FF               	movlw	255
 17278  2F36  05A3               	andwf	___xxtofl@arg+1,f
 17279  2F37  307F               	movlw	127
 17280  2F38  05A4               	andwf	___xxtofl@arg+2,f
 17281  2F39  30FF               	movlw	255
 17282  2F3A  05A5               	andwf	___xxtofl@arg+3,f
 17283  2F3B                     l1290:	
 17284  2F3B  1003               	clrc
 17285  2F3C  0CA1               	rrf	___xxtofl@exp,f
 17286  2F3D  0821               	movf	___xxtofl@exp,w
 17287  2F3E  00F5               	movwf	??___xxtofl
 17288  2F3F  01F6               	clrf	??___xxtofl+1
 17289  2F40  01F7               	clrf	??___xxtofl+2
 17290  2F41  01F8               	clrf	??___xxtofl+3
 17291  2F42  3018               	movlw	24
 17292  2F43                     u8945:	
 17293  2F43  35F5               	lslf	??___xxtofl,f
 17294  2F44  0DF6               	rlf	??___xxtofl+1,f
 17295  2F45  0DF7               	rlf	??___xxtofl+2,f
 17296  2F46  0DF8               	rlf	??___xxtofl+3,f
 17297  2F47  0B89               	decfsz	9,f
 17298  2F48  2F43               	goto	u8945
 17299  2F49  0875               	movf	??___xxtofl,w
 17300  2F4A  04A2               	iorwf	___xxtofl@arg,f
 17301  2F4B  0876               	movf	??___xxtofl+1,w
 17302  2F4C  04A3               	iorwf	___xxtofl@arg+1,f
 17303  2F4D  0877               	movf	??___xxtofl+2,w
 17304  2F4E  04A4               	iorwf	___xxtofl@arg+2,f
 17305  2F4F  0878               	movf	??___xxtofl+3,w
 17306  2F50  04A5               	iorwf	___xxtofl@arg+3,f
 17307  2F51  0820               	movf	___xxtofl@sign,w
 17308  2F52  1D03               	btfss	3,2
 17309  2F53  1FF4               	btfss	___xxtofl@val+3,7
 17310  2F54  2F56               	goto	l6257
 17311  2F55  17A5               	bsf	___xxtofl@arg+3,7
 17312  2F56                     l6257:	
 17313  2F56  0825               	movf	___xxtofl@arg+3,w
 17314  2F57  00F4               	movwf	?___xxtofl+3
 17315  2F58  0824               	movf	___xxtofl@arg+2,w
 17316  2F59  00F3               	movwf	?___xxtofl+2
 17317  2F5A  0823               	movf	___xxtofl@arg+1,w
 17318  2F5B  00F2               	movwf	?___xxtofl+1
 17319  2F5C  0822               	movf	___xxtofl@arg,w
 17320  2F5D  00F1               	movwf	?___xxtofl
 17321  2F5E  0008               	return
 17322  2F5F                     __end_of___xxtofl:	
 17323                           
 17324                           	psect	text67
 17325  2A80                     __ptext67:	
 17326 ;; *************** function ___fltol *****************
 17327 ;; Defined at:
 17328 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17329 ;; Parameters:    Size  Location     Type
 17330 ;;  f1              4   58[BANK0 ] unsigned char 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;  exp1            1   11[COMMON] unsigned char 
 17333 ;;  sign1           1   10[COMMON] unsigned char 
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  4   58[BANK0 ] long 
 17336 ;; Registers used:
 17337 ;;		wreg, status,2, status,0
 17338 ;; Tracked objects:
 17339 ;;		On entry : 0/0
 17340 ;;		On exit  : 0/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17346 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17347 ;;Total ram usage:       11 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:    1
 17350 ;; This function calls:
 17351 ;;		Nothing
 17352 ;; This function is called by:
 17353 ;;		_AFE_getSetShortCircuitCurrent
 17354 ;;		_AFE_getOverCurrentDischargeCurrent
 17355 ;;		_efgtoa
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           
 17360                           ;psect for function ___fltol
 17361  2A80                     ___fltol:	
 17362                           
 17363                           ;incstack = 0
 17364                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17365  2A80  1003               	clrc
 17366  2A81  0020               	movlb	0	; select bank0
 17367  2A82  0D5C               	rlf	___fltol@f1+2,w
 17368  2A83  0D5D               	rlf	___fltol@f1+3,w
 17369  2A84  00DE               	movwf	??___fltol
 17370  2A85  085E               	movf	??___fltol,w
 17371  2A86  00FB               	movwf	___fltol@exp1
 17372  2A87  087B               	movf	___fltol@exp1,w
 17373  2A88  1D03               	btfss	3,2
 17374  2A89  2A93               	goto	l4721
 17375  2A8A                     l4717:	
 17376  2A8A  3000               	movlw	0
 17377  2A8B  00DD               	movwf	?___fltol+3
 17378  2A8C  3000               	movlw	0
 17379  2A8D  00DC               	movwf	?___fltol+2
 17380  2A8E  3000               	movlw	0
 17381  2A8F  00DB               	movwf	?___fltol+1
 17382  2A90  3000               	movlw	0
 17383  2A91  00DA               	movwf	?___fltol
 17384  2A92  0008               	return
 17385  2A93                     l4721:	
 17386  2A93  085A               	movf	___fltol@f1,w
 17387  2A94  00DE               	movwf	??___fltol
 17388  2A95  085B               	movf	___fltol@f1+1,w
 17389  2A96  00DF               	movwf	??___fltol+1
 17390  2A97  085C               	movf	___fltol@f1+2,w
 17391  2A98  00E0               	movwf	??___fltol+2
 17392  2A99  085D               	movf	___fltol@f1+3,w
 17393  2A9A  00E1               	movwf	??___fltol+3
 17394  2A9B  301F               	movlw	31
 17395  2A9C                     u6185:	
 17396  2A9C  36E1               	lsrf	??___fltol+3,f
 17397  2A9D  0CE0               	rrf	??___fltol+2,f
 17398  2A9E  0CDF               	rrf	??___fltol+1,f
 17399  2A9F  0CDE               	rrf	??___fltol,f
 17400  2AA0  0B89               	decfsz	9,f
 17401  2AA1  2A9C               	goto	u6185
 17402  2AA2  085E               	movf	??___fltol,w
 17403  2AA3  00E2               	movwf	??___fltol+4
 17404  2AA4  0862               	movf	??___fltol+4,w
 17405  2AA5  00FA               	movwf	___fltol@sign1
 17406  2AA6  17DC               	bsf	___fltol@f1+2,7
 17407  2AA7  30FF               	movlw	255
 17408  2AA8  05DA               	andwf	___fltol@f1,f
 17409  2AA9  30FF               	movlw	255
 17410  2AAA  05DB               	andwf	___fltol@f1+1,f
 17411  2AAB  30FF               	movlw	255
 17412  2AAC  05DC               	andwf	___fltol@f1+2,f
 17413  2AAD  3000               	movlw	0
 17414  2AAE  05DD               	andwf	___fltol@f1+3,f
 17415  2AAF  3096               	movlw	150
 17416  2AB0  02FB               	subwf	___fltol@exp1,f
 17417  2AB1  1FFB               	btfss	___fltol@exp1,7
 17418  2AB2  2AC6               	goto	l4739
 17419  2AB3  087B               	movf	___fltol@exp1,w
 17420  2AB4  3A80               	xorlw	128
 17421  2AB5  3E97               	addlw	151
 17422  2AB6  1C03               	btfss	3,0
 17423  2AB7  2A8A               	goto	l4717
 17424  2AB8                     l4737:	
 17425  2AB8  3001               	movlw	1
 17426  2AB9                     u6215:	
 17427  2AB9  36DD               	lsrf	___fltol@f1+3,f
 17428  2ABA  0CDC               	rrf	___fltol@f1+2,f
 17429  2ABB  0CDB               	rrf	___fltol@f1+1,f
 17430  2ABC  0CDA               	rrf	___fltol@f1,f
 17431  2ABD  0B89               	decfsz	9,f
 17432  2ABE  2AB9               	goto	u6215
 17433  2ABF  3001               	movlw	1
 17434  2AC0  00DE               	movwf	??___fltol
 17435  2AC1  085E               	movf	??___fltol,w
 17436  2AC2  07FB               	addwf	___fltol@exp1,f
 17437  2AC3  1903               	btfsc	3,2
 17438  2AC4  2AD7               	goto	l4747
 17439  2AC5  2AB8               	goto	l4737
 17440  2AC6                     l4739:	
 17441  2AC6  3020               	movlw	32
 17442  2AC7  027B               	subwf	___fltol@exp1,w
 17443  2AC8  1803               	btfsc	3,0
 17444  2AC9  2A8A               	goto	l4717
 17445  2ACA                     l1042:	
 17446  2ACA  087B               	movf	___fltol@exp1,w
 17447  2ACB  1903               	btfsc	3,2
 17448  2ACC  2AD7               	goto	l4747
 17449  2ACD  3001               	movlw	1
 17450  2ACE                     u6245:	
 17451  2ACE  35DA               	lslf	___fltol@f1,f
 17452  2ACF  0DDB               	rlf	___fltol@f1+1,f
 17453  2AD0  0DDC               	rlf	___fltol@f1+2,f
 17454  2AD1  0DDD               	rlf	___fltol@f1+3,f
 17455  2AD2  0B89               	decfsz	9,f
 17456  2AD3  2ACE               	goto	u6245
 17457  2AD4  3001               	movlw	1
 17458  2AD5  02FB               	subwf	___fltol@exp1,f
 17459  2AD6  2ACA               	goto	l1042
 17460  2AD7                     l4747:	
 17461  2AD7  087A               	movf	___fltol@sign1,w
 17462  2AD8  1903               	btfsc	3,2
 17463  2AD9  0008               	return
 17464  2ADA  09DA               	comf	___fltol@f1,f
 17465  2ADB  09DB               	comf	___fltol@f1+1,f
 17466  2ADC  09DC               	comf	___fltol@f1+2,f
 17467  2ADD  09DD               	comf	___fltol@f1+3,f
 17468  2ADE  0ADA               	incf	___fltol@f1,f
 17469  2ADF  1903               	skipnz
 17470  2AE0  0ADB               	incf	___fltol@f1+1,f
 17471  2AE1  1903               	skipnz
 17472  2AE2  0ADC               	incf	___fltol@f1+2,f
 17473  2AE3  1903               	skipnz
 17474  2AE4  0ADD               	incf	___fltol@f1+3,f
 17475  2AE5  0008               	return
 17476  2AE6                     __end_of___fltol:	
 17477                           
 17478                           	psect	text68
 17479  1061                     __ptext68:	
 17480 ;; *************** function ___fldiv *****************
 17481 ;; Defined at:
 17482 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  a               4   32[BANK0 ] long 
 17485 ;;  b               4   36[BANK0 ] long 
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;  grs             4   52[BANK0 ] unsigned long 
 17488 ;;  rem             4   45[BANK0 ] unsigned long 
 17489 ;;  new_exp         2   50[BANK0 ] int 
 17490 ;;  aexp            1   57[BANK0 ] unsigned char 
 17491 ;;  bexp            1   56[BANK0 ] unsigned char 
 17492 ;;  sign            1   49[BANK0 ] unsigned char 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  4   32[BANK0 ] unsigned char 
 17495 ;; Registers used:
 17496 ;;		wreg, status,2, status,0
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17502 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17505 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17506 ;;Total ram usage:       26 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:    1
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_setShortCircuitProtection
 17513 ;;		_setOverCurrentDischargeProtection
 17514 ;;		_AFE_getSetShortCircuitCurrent
 17515 ;;		_AFE_getOverCurrentDischargeCurrent
 17516 ;;		_efgtoa
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           
 17521                           ;psect for function ___fldiv
 17522  1061                     ___fldiv:	
 17523                           
 17524                           ;incstack = 0
 17525                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17526  1061  0020               	movlb	0	; select bank0
 17527  1062  0847               	movf	___fldiv@b+3,w
 17528  1063  3980               	andlw	128
 17529  1064  00C8               	movwf	??___fldiv
 17530  1065  0848               	movf	??___fldiv,w
 17531  1066  00D1               	movwf	___fldiv@sign
 17532  1067  3547               	lslf	___fldiv@b+3,w
 17533  1068  00C8               	movwf	??___fldiv
 17534  1069  0848               	movf	??___fldiv,w
 17535  106A  00D8               	movwf	___fldiv@bexp
 17536  106B  1BC6               	btfsc	___fldiv@b+2,7
 17537  106C  1458               	bsf	___fldiv@bexp,0
 17538  106D  0858               	movf	___fldiv@bexp,w
 17539  106E  1903               	btfsc	3,2
 17540  106F  287E               	goto	l4813
 17541  1070  0A58               	incf	___fldiv@bexp,w
 17542  1071  1D03               	btfss	3,2
 17543  1072  287B               	goto	l4809
 17544  1073  3000               	movlw	0
 17545  1074  00C7               	movwf	___fldiv@b+3
 17546  1075  3000               	movlw	0
 17547  1076  00C6               	movwf	___fldiv@b+2
 17548  1077  3000               	movlw	0
 17549  1078  00C5               	movwf	___fldiv@b+1
 17550  1079  3000               	movlw	0
 17551  107A  00C4               	movwf	___fldiv@b
 17552  107B                     l4809:	
 17553  107B  17C6               	bsf	___fldiv@b+2,7
 17554  107C  01C7               	clrf	___fldiv@b+3
 17555  107D  2886               	goto	l4815
 17556  107E                     l4813:	
 17557  107E  3000               	movlw	0
 17558  107F  00C7               	movwf	___fldiv@b+3
 17559  1080  3000               	movlw	0
 17560  1081  00C6               	movwf	___fldiv@b+2
 17561  1082  3000               	movlw	0
 17562  1083  00C5               	movwf	___fldiv@b+1
 17563  1084  3000               	movlw	0
 17564  1085  00C4               	movwf	___fldiv@b
 17565  1086                     l4815:	
 17566  1086  0843               	movf	___fldiv@a+3,w
 17567  1087  3980               	andlw	128
 17568  1088  00C8               	movwf	??___fldiv
 17569  1089  0848               	movf	??___fldiv,w
 17570  108A  06D1               	xorwf	___fldiv@sign,f
 17571  108B  3543               	lslf	___fldiv@a+3,w
 17572  108C  00C8               	movwf	??___fldiv
 17573  108D  0848               	movf	??___fldiv,w
 17574  108E  00D9               	movwf	___fldiv@aexp
 17575  108F  1BC2               	btfsc	___fldiv@a+2,7
 17576  1090  1459               	bsf	___fldiv@aexp,0
 17577  1091  0859               	movf	___fldiv@aexp,w
 17578  1092  1903               	btfsc	3,2
 17579  1093  28A2               	goto	l4833
 17580  1094  0A59               	incf	___fldiv@aexp,w
 17581  1095  1D03               	btfss	3,2
 17582  1096  289F               	goto	l4829
 17583  1097  3000               	movlw	0
 17584  1098  00C3               	movwf	___fldiv@a+3
 17585  1099  3000               	movlw	0
 17586  109A  00C2               	movwf	___fldiv@a+2
 17587  109B  3000               	movlw	0
 17588  109C  00C1               	movwf	___fldiv@a+1
 17589  109D  3000               	movlw	0
 17590  109E  00C0               	movwf	___fldiv@a
 17591  109F                     l4829:	
 17592  109F  17C2               	bsf	___fldiv@a+2,7
 17593  10A0  01C3               	clrf	___fldiv@a+3
 17594  10A1  28AA               	goto	l1198
 17595  10A2                     l4833:	
 17596  10A2  3000               	movlw	0
 17597  10A3  00C3               	movwf	___fldiv@a+3
 17598  10A4  3000               	movlw	0
 17599  10A5  00C2               	movwf	___fldiv@a+2
 17600  10A6  3000               	movlw	0
 17601  10A7  00C1               	movwf	___fldiv@a+1
 17602  10A8  3000               	movlw	0
 17603  10A9  00C0               	movwf	___fldiv@a
 17604  10AA                     l1198:	
 17605  10AA  0843               	movf	___fldiv@a+3,w
 17606  10AB  0442               	iorwf	___fldiv@a+2,w
 17607  10AC  0441               	iorwf	___fldiv@a+1,w
 17608  10AD  0440               	iorwf	___fldiv@a,w
 17609  10AE  1D03               	skipz
 17610  10AF  28C9               	goto	l4843
 17611  10B0  3000               	movlw	0
 17612  10B1  00C7               	movwf	___fldiv@b+3
 17613  10B2  3000               	movlw	0
 17614  10B3  00C6               	movwf	___fldiv@b+2
 17615  10B4  3000               	movlw	0
 17616  10B5  00C5               	movwf	___fldiv@b+1
 17617  10B6  3000               	movlw	0
 17618  10B7  00C4               	movwf	___fldiv@b
 17619  10B8  3080               	movlw	128
 17620  10B9  04C6               	iorwf	___fldiv@b+2,f
 17621  10BA  307F               	movlw	127
 17622  10BB  04C7               	iorwf	___fldiv@b+3,f
 17623  10BC                     L14:	
 17624  10BC  0851               	movf	___fldiv@sign,w
 17625  10BD  00C8               	movwf	??___fldiv
 17626  10BE  0848               	movf	??___fldiv,w
 17627  10BF  04C7               	iorwf	___fldiv@b+3,f
 17628  10C0  0847               	movf	___fldiv@b+3,w
 17629  10C1  00C3               	movwf	?___fldiv+3
 17630  10C2  0846               	movf	___fldiv@b+2,w
 17631  10C3  00C2               	movwf	?___fldiv+2
 17632  10C4  0845               	movf	___fldiv@b+1,w
 17633  10C5  00C1               	movwf	?___fldiv+1
 17634  10C6  0844               	movf	___fldiv@b,w
 17635  10C7  00C0               	movwf	?___fldiv
 17636  10C8  0008               	return
 17637  10C9                     l4843:	
 17638  10C9  0858               	movf	___fldiv@bexp,w
 17639  10CA  1D03               	btfss	3,2
 17640  10CB  28D5               	goto	l4849
 17641  10CC  3000               	movlw	0
 17642  10CD  00C3               	movwf	?___fldiv+3
 17643  10CE  3000               	movlw	0
 17644  10CF  00C2               	movwf	?___fldiv+2
 17645  10D0  3000               	movlw	0
 17646  10D1  00C1               	movwf	?___fldiv+1
 17647  10D2  3000               	movlw	0
 17648  10D3  00C0               	movwf	?___fldiv
 17649  10D4  0008               	return
 17650  10D5                     l4849:	
 17651  10D5  0858               	movf	___fldiv@bexp,w
 17652  10D6  00C8               	movwf	??___fldiv
 17653  10D7  01C9               	clrf	??___fldiv+1
 17654  10D8  0849               	movf	??___fldiv+1,w
 17655  10D9  00CB               	movwf	??___fldiv+3
 17656  10DA  0859               	movf	___fldiv@aexp,w
 17657  10DB  0248               	subwf	??___fldiv,w
 17658  10DC  00CA               	movwf	??___fldiv+2
 17659  10DD  1C03               	skipc
 17660  10DE  03CB               	decf	??___fldiv+3,f
 17661  10DF  084A               	movf	??___fldiv+2,w
 17662  10E0  3E7F               	addlw	127
 17663  10E1  00D2               	movwf	___fldiv@new_exp
 17664  10E2  3000               	movlw	0
 17665  10E3  3D4B               	addwfc	??___fldiv+3,w
 17666  10E4  00D3               	movwf	___fldiv@new_exp+1
 17667  10E5  0847               	movf	___fldiv@b+3,w
 17668  10E6  00D0               	movwf	___fldiv@rem+3
 17669  10E7  0846               	movf	___fldiv@b+2,w
 17670  10E8  00CF               	movwf	___fldiv@rem+2
 17671  10E9  0845               	movf	___fldiv@b+1,w
 17672  10EA  00CE               	movwf	___fldiv@rem+1
 17673  10EB  0844               	movf	___fldiv@b,w
 17674  10EC  00CD               	movwf	___fldiv@rem
 17675  10ED  3000               	movlw	0
 17676  10EE  00C7               	movwf	___fldiv@b+3
 17677  10EF  3000               	movlw	0
 17678  10F0  00C6               	movwf	___fldiv@b+2
 17679  10F1  3000               	movlw	0
 17680  10F2  00C5               	movwf	___fldiv@b+1
 17681  10F3  3000               	movlw	0
 17682  10F4  00C4               	movwf	___fldiv@b
 17683  10F5  3000               	movlw	0
 17684  10F6  00D7               	movwf	___fldiv@grs+3
 17685  10F7  3000               	movlw	0
 17686  10F8  00D6               	movwf	___fldiv@grs+2
 17687  10F9  3000               	movlw	0
 17688  10FA  00D5               	movwf	___fldiv@grs+1
 17689  10FB  3000               	movlw	0
 17690  10FC  00D4               	movwf	___fldiv@grs
 17691  10FD  01D9               	clrf	___fldiv@aexp
 17692  10FE                     l4877:	
 17693  10FE  301A               	movlw	26
 17694  10FF  0259               	subwf	___fldiv@aexp,w
 17695  1100  1803               	btfsc	3,0
 17696  1101  293A               	goto	l4879
 17697  1102  0859               	movf	___fldiv@aexp,w
 17698  1103  1903               	btfsc	3,2
 17699  1104  291C               	goto	l4869
 17700  1105  3001               	movlw	1
 17701  1106                     u6455:	
 17702  1106  35CD               	lslf	___fldiv@rem,f
 17703  1107  0DCE               	rlf	___fldiv@rem+1,f
 17704  1108  0DCF               	rlf	___fldiv@rem+2,f
 17705  1109  0DD0               	rlf	___fldiv@rem+3,f
 17706  110A  0B89               	decfsz	9,f
 17707  110B  2906               	goto	u6455
 17708  110C  3001               	movlw	1
 17709  110D                     u6465:	
 17710  110D  35C4               	lslf	___fldiv@b,f
 17711  110E  0DC5               	rlf	___fldiv@b+1,f
 17712  110F  0DC6               	rlf	___fldiv@b+2,f
 17713  1110  0DC7               	rlf	___fldiv@b+3,f
 17714  1111  0B89               	decfsz	9,f
 17715  1112  290D               	goto	u6465
 17716  1113  1BD7               	btfsc	___fldiv@grs+3,7
 17717  1114  1444               	bsf	___fldiv@b,0
 17718  1115  3001               	movlw	1
 17719  1116                     u6485:	
 17720  1116  35D4               	lslf	___fldiv@grs,f
 17721  1117  0DD5               	rlf	___fldiv@grs+1,f
 17722  1118  0DD6               	rlf	___fldiv@grs+2,f
 17723  1119  0DD7               	rlf	___fldiv@grs+3,f
 17724  111A  0B89               	decfsz	9,f
 17725  111B  2916               	goto	u6485
 17726  111C                     l4869:	
 17727  111C  0843               	movf	___fldiv@a+3,w
 17728  111D  0250               	subwf	___fldiv@rem+3,w
 17729  111E  1D03               	skipz
 17730  111F  292A               	goto	u6495
 17731  1120  0842               	movf	___fldiv@a+2,w
 17732  1121  024F               	subwf	___fldiv@rem+2,w
 17733  1122  1D03               	skipz
 17734  1123  292A               	goto	u6495
 17735  1124  0841               	movf	___fldiv@a+1,w
 17736  1125  024E               	subwf	___fldiv@rem+1,w
 17737  1126  1D03               	skipz
 17738  1127  292A               	goto	u6495
 17739  1128  0840               	movf	___fldiv@a,w
 17740  1129  024D               	subwf	___fldiv@rem,w
 17741  112A                     u6495:	
 17742  112A  1C03               	skipc
 17743  112B  2935               	goto	l4875
 17744  112C  1757               	bsf	___fldiv@grs+3,6
 17745  112D  0840               	movf	___fldiv@a,w
 17746  112E  02CD               	subwf	___fldiv@rem,f
 17747  112F  0841               	movf	___fldiv@a+1,w
 17748  1130  3BCE               	subwfb	___fldiv@rem+1,f
 17749  1131  0842               	movf	___fldiv@a+2,w
 17750  1132  3BCF               	subwfb	___fldiv@rem+2,f
 17751  1133  0843               	movf	___fldiv@a+3,w
 17752  1134  3BD0               	subwfb	___fldiv@rem+3,f
 17753  1135                     l4875:	
 17754  1135  3001               	movlw	1
 17755  1136  00C8               	movwf	??___fldiv
 17756  1137  0848               	movf	??___fldiv,w
 17757  1138  07D9               	addwf	___fldiv@aexp,f
 17758  1139  28FE               	goto	l4877
 17759  113A                     l4879:	
 17760  113A  0850               	movf	___fldiv@rem+3,w
 17761  113B  044F               	iorwf	___fldiv@rem+2,w
 17762  113C  044E               	iorwf	___fldiv@rem+1,w
 17763  113D  044D               	iorwf	___fldiv@rem,w
 17764  113E  1D03               	btfss	3,2
 17765  113F  1454               	bsf	___fldiv@grs,0
 17766  1140                     l4893:	
 17767  1140  1BC6               	btfsc	___fldiv@b+2,7
 17768  1141  2957               	goto	l4895
 17769  1142  3001               	movlw	1
 17770  1143                     u6525:	
 17771  1143  35C4               	lslf	___fldiv@b,f
 17772  1144  0DC5               	rlf	___fldiv@b+1,f
 17773  1145  0DC6               	rlf	___fldiv@b+2,f
 17774  1146  0DC7               	rlf	___fldiv@b+3,f
 17775  1147  0B89               	decfsz	9,f
 17776  1148  2943               	goto	u6525
 17777  1149  1BD7               	btfsc	___fldiv@grs+3,7
 17778  114A  1444               	bsf	___fldiv@b,0
 17779  114B  3001               	movlw	1
 17780  114C                     u6545:	
 17781  114C  35D4               	lslf	___fldiv@grs,f
 17782  114D  0DD5               	rlf	___fldiv@grs+1,f
 17783  114E  0DD6               	rlf	___fldiv@grs+2,f
 17784  114F  0DD7               	rlf	___fldiv@grs+3,f
 17785  1150  0B89               	decfsz	9,f
 17786  1151  294C               	goto	u6545
 17787  1152  30FF               	movlw	255
 17788  1153  07D2               	addwf	___fldiv@new_exp,f
 17789  1154  30FF               	movlw	255
 17790  1155  3DD3               	addwfc	___fldiv@new_exp+1,f
 17791  1156  2940               	goto	l4893
 17792  1157                     l4895:	
 17793  1157  01D9               	clrf	___fldiv@aexp
 17794  1158  1FD7               	btfss	___fldiv@grs+3,7
 17795  1159  2970               	goto	l4905
 17796  115A  30FF               	movlw	255
 17797  115B  0554               	andwf	___fldiv@grs,w
 17798  115C  00C8               	movwf	??___fldiv
 17799  115D  30FF               	movlw	255
 17800  115E  0555               	andwf	___fldiv@grs+1,w
 17801  115F  00C9               	movwf	??___fldiv+1
 17802  1160  30FF               	movlw	255
 17803  1161  0556               	andwf	___fldiv@grs+2,w
 17804  1162  00CA               	movwf	??___fldiv+2
 17805  1163  307F               	movlw	127
 17806  1164  0557               	andwf	___fldiv@grs+3,w
 17807  1165  00CB               	movwf	??___fldiv+3
 17808  1166  084B               	movf	??___fldiv+3,w
 17809  1167  044A               	iorwf	??___fldiv+2,w
 17810  1168  0449               	iorwf	??___fldiv+1,w
 17811  1169  0448               	iorwf	??___fldiv,w
 17812  116A  1903               	skipnz
 17813  116B  1844               	btfsc	___fldiv@b,0
 17814  116C  296E               	goto	l4901
 17815  116D  2970               	goto	l4905
 17816  116E                     l4901:	
 17817  116E  01D9               	clrf	___fldiv@aexp
 17818  116F  0AD9               	incf	___fldiv@aexp,f
 17819  1170                     l4905:	
 17820  1170  0859               	movf	___fldiv@aexp,w
 17821  1171  1903               	btfsc	3,2
 17822  1172  2999               	goto	l4915
 17823  1173  3001               	movlw	1
 17824  1174  07C4               	addwf	___fldiv@b,f
 17825  1175  3000               	movlw	0
 17826  1176  3DC5               	addwfc	___fldiv@b+1,f
 17827  1177  3000               	movlw	0
 17828  1178  3DC6               	addwfc	___fldiv@b+2,f
 17829  1179  3000               	movlw	0
 17830  117A  3DC7               	addwfc	___fldiv@b+3,f
 17831  117B  1C47               	btfss	___fldiv@b+3,0
 17832  117C  2999               	goto	l4915
 17833  117D  0844               	movf	___fldiv@b,w
 17834  117E  00C8               	movwf	??___fldiv
 17835  117F  0845               	movf	___fldiv@b+1,w
 17836  1180  00C9               	movwf	??___fldiv+1
 17837  1181  0846               	movf	___fldiv@b+2,w
 17838  1182  00CA               	movwf	??___fldiv+2
 17839  1183  0847               	movf	___fldiv@b+3,w
 17840  1184  00CB               	movwf	??___fldiv+3
 17841  1185  3001               	movlw	1
 17842  1186  00CC               	movwf	??___fldiv+4
 17843  1187                     u6615:	
 17844  1187  37CB               	asrf	??___fldiv+3,f
 17845  1188  0CCA               	rrf	??___fldiv+2,f
 17846  1189  0CC9               	rrf	??___fldiv+1,f
 17847  118A  0CC8               	rrf	??___fldiv,f
 17848  118B  0BCC               	decfsz	??___fldiv+4,f
 17849  118C  2987               	goto	u6615
 17850  118D  084B               	movf	??___fldiv+3,w
 17851  118E  00C7               	movwf	___fldiv@b+3
 17852  118F  084A               	movf	??___fldiv+2,w
 17853  1190  00C6               	movwf	___fldiv@b+2
 17854  1191  0849               	movf	??___fldiv+1,w
 17855  1192  00C5               	movwf	___fldiv@b+1
 17856  1193  0848               	movf	??___fldiv,w
 17857  1194  00C4               	movwf	___fldiv@b
 17858  1195  3001               	movlw	1
 17859  1196  07D2               	addwf	___fldiv@new_exp,f
 17860  1197  3000               	movlw	0
 17861  1198  3DD3               	addwfc	___fldiv@new_exp+1,f
 17862  1199                     l4915:	
 17863  1199  0853               	movf	___fldiv@new_exp+1,w
 17864  119A  3A80               	xorlw	128
 17865  119B  00C8               	movwf	??___fldiv
 17866  119C  3080               	movlw	128
 17867  119D  0248               	subwf	??___fldiv,w
 17868  119E  1D03               	skipz
 17869  119F  29A2               	goto	u6625
 17870  11A0  30FF               	movlw	255
 17871  11A1  0252               	subwf	___fldiv@new_exp,w
 17872  11A2                     u6625:	
 17873  11A2  1C03               	skipc
 17874  11A3  29B1               	goto	l1219
 17875  11A4  30FF               	movlw	255
 17876  11A5  0020               	movlb	0	; select bank0
 17877  11A6  00D2               	movwf	___fldiv@new_exp
 17878  11A7  3000               	movlw	0
 17879  11A8  00D3               	movwf	___fldiv@new_exp+1
 17880  11A9  3000               	movlw	0
 17881  11AA  00C7               	movwf	___fldiv@b+3
 17882  11AB  3000               	movlw	0
 17883  11AC  00C6               	movwf	___fldiv@b+2
 17884  11AD  3000               	movlw	0
 17885  11AE  00C5               	movwf	___fldiv@b+1
 17886  11AF  3000               	movlw	0
 17887  11B0  00C4               	movwf	___fldiv@b
 17888  11B1                     l1219:	
 17889  11B1  0020               	movlb	0	; select bank0
 17890  11B2  0853               	movf	___fldiv@new_exp+1,w
 17891  11B3  3A80               	xorlw	128
 17892  11B4  00C8               	movwf	??___fldiv
 17893  11B5  3080               	movlw	128
 17894  11B6  0248               	subwf	??___fldiv,w
 17895  11B7  1D03               	skipz
 17896  11B8  29BB               	goto	u6635
 17897  11B9  3001               	movlw	1
 17898  11BA  0252               	subwf	___fldiv@new_exp,w
 17899  11BB                     u6635:	
 17900  11BB  1803               	skipnc
 17901  11BC  29C9               	goto	l1220
 17902  11BD  0020               	movlb	0	; select bank0
 17903  11BE  01D2               	clrf	___fldiv@new_exp
 17904  11BF  01D3               	clrf	___fldiv@new_exp+1
 17905  11C0  3000               	movlw	0
 17906  11C1  00C7               	movwf	___fldiv@b+3
 17907  11C2  3000               	movlw	0
 17908  11C3  00C6               	movwf	___fldiv@b+2
 17909  11C4  3000               	movlw	0
 17910  11C5  00C5               	movwf	___fldiv@b+1
 17911  11C6  3000               	movlw	0
 17912  11C7  00C4               	movwf	___fldiv@b
 17913  11C8  01D1               	clrf	___fldiv@sign
 17914  11C9                     l1220:	
 17915  11C9  0020               	movlb	0	; select bank0
 17916  11CA  0852               	movf	___fldiv@new_exp,w
 17917  11CB  00C8               	movwf	??___fldiv
 17918  11CC  0848               	movf	??___fldiv,w
 17919  11CD  00D8               	movwf	___fldiv@bexp
 17920  11CE  1C58               	btfss	___fldiv@bexp,0
 17921  11CF  29D2               	goto	l4929
 17922  11D0  17C6               	bsf	___fldiv@b+2,7
 17923  11D1  29D6               	goto	l1222
 17924  11D2                     l4929:	
 17925  11D2  307F               	movlw	127
 17926  11D3  00C8               	movwf	??___fldiv
 17927  11D4  0848               	movf	??___fldiv,w
 17928  11D5  05C6               	andwf	___fldiv@b+2,f
 17929  11D6                     l1222:	
 17930  11D6  3658               	lsrf	___fldiv@bexp,w
 17931  11D7  00C8               	movwf	??___fldiv
 17932  11D8  0848               	movf	??___fldiv,w
 17933  11D9  00C7               	movwf	___fldiv@b+3
 17934  11DA  28BC               	goto	L14
 17935  11DB                     __end_of___fldiv:	
 17936                           
 17937                           	psect	text69
 17938  3522                     __ptext69:	
 17939 ;; *************** function _init_TMR1 *****************
 17940 ;; Defined at:
 17941 ;;		line 167 in file "main.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2, status,0
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    1
 17962 ;; This function calls:
 17963 ;;		Nothing
 17964 ;; This function is called by:
 17965 ;;		_main
 17966 ;; This function uses a non-reentrant model
 17967 ;;
 17968                           
 17969                           
 17970                           ;psect for function _init_TMR1
 17971  3522                     _init_TMR1:	
 17972                           
 17973                           ;main.c: 170:     T1CONbits.T1CKPS = 0b00;
 17974                           
 17975                           ;incstack = 0
 17976                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 17977  3522  30CF               	movlw	-49
 17978  3523  0020               	movlb	0	; select bank0
 17979  3524  0598               	andwf	24,f	;volatile
 17980                           
 17981                           ;main.c: 172:     TMR1 = 0;
 17982  3525  0196               	clrf	22	;volatile
 17983  3526  0197               	clrf	23	;volatile
 17984                           
 17985                           ;main.c: 174:     T1CONbits.TMR1ON = 1;
 17986  3527  1418               	bsf	24,0	;volatile
 17987                           
 17988                           ;main.c: 176:     PIE1bits.TMR1IE = 1;
 17989  3528  0021               	movlb	1	; select bank1
 17990  3529  1411               	bsf	17,0	;volatile
 17991                           
 17992                           ;main.c: 178:     INTCONbits.PEIE = 1;
 17993  352A  170B               	bsf	11,6	;volatile
 17994                           
 17995                           ;main.c: 180:     (INTCONbits.GIE = 1);
 17996  352B  178B               	bsf	11,7	;volatile
 17997  352C  0008               	return
 17998  352D                     __end_of_init_TMR1:	
 17999                           
 18000                           	psect	text70
 18001  07FA                     __ptext70:	
 18002 ;; *************** function _init_RGB *****************
 18003 ;; Defined at:
 18004 ;;		line 6 in file "RGB.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;		None
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1    wreg      void 
 18011 ;; Registers used:
 18012 ;;		None
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18022 ;;Total ram usage:        0 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; Hardware stack levels required when called:    1
 18025 ;; This function calls:
 18026 ;;		Nothing
 18027 ;; This function is called by:
 18028 ;;		_main
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032                           
 18033                           ;psect for function _init_RGB
 18034  07FA                     _init_RGB:	
 18035                           
 18036                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 18037                           
 18038                           ;incstack = 0
 18039                           ; Regs used in _init_RGB: []
 18040  07FA  0022               	movlb	2	; select bank2
 18041  07FB  160C               	bsf	12,4	;volatile
 18042                           
 18043                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 18044  07FC  168C               	bsf	12,5	;volatile
 18045                           
 18046                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 18047  07FD  1410               	bsf	16,0	;volatile
 18048  07FE  0008               	return
 18049  07FF                     __end_of_init_RGB:	
 18050                           
 18051                           	psect	text71
 18052  352D                     __ptext71:	
 18053 ;; *************** function _init_I2C *****************
 18054 ;; Defined at:
 18055 ;;		line 10 in file "I2C.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;		None
 18058 ;; Auto vars:     Size  Location     Type
 18059 ;;		None
 18060 ;; Return value:  Size  Location     Type
 18061 ;;                  1    wreg      void 
 18062 ;; Registers used:
 18063 ;;		wreg, status,2, status,0
 18064 ;; Tracked objects:
 18065 ;;		On entry : 0/0
 18066 ;;		On exit  : 0/0
 18067 ;;		Unchanged: 0/0
 18068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18073 ;;Total ram usage:        1 bytes
 18074 ;; Hardware stack levels used:    1
 18075 ;; Hardware stack levels required when called:    1
 18076 ;; This function calls:
 18077 ;;		Nothing
 18078 ;; This function is called by:
 18079 ;;		_main
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           
 18084                           ;psect for function _init_I2C
 18085  352D                     _init_I2C:	
 18086                           
 18087                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 18088                           
 18089                           ;incstack = 0
 18090                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 18091  352D  0024               	movlb	4	; select bank4
 18092  352E  0815               	movf	21,w	;volatile
 18093  352F  39F0               	andlw	-16
 18094  3530  3808               	iorlw	8
 18095  3531  0095               	movwf	21	;volatile
 18096                           
 18097                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 18098  3532  1695               	bsf	21,5	;volatile
 18099                           
 18100                           ;I2C.c: 24:     SSPADD = 39;
 18101  3533  3027               	movlw	39
 18102  3534  0092               	movwf	18	;volatile
 18103                           
 18104                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 18105  3535  3034               	movlw	52
 18106  3536  00F1               	movwf	??_init_I2C
 18107  3537  30F2               	movlw	242
 18108  3538                     u11937:	
 18109  3538  0B89               	decfsz	9,f
 18110  3539  2D38               	goto	u11937
 18111  353A  0BF1               	decfsz	??_init_I2C,f
 18112  353B  2D38               	goto	u11937
 18113  353C  0008               	return
 18114  353D                     __end_of_init_I2C:	
 18115                           
 18116                           	psect	text72
 18117  1804                     __ptext72:	
 18118 ;; *************** function _init_GPIO *****************
 18119 ;; Defined at:
 18120 ;;		line 184 in file "main.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;		None
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;		None
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1    wreg      void 
 18127 ;; Registers used:
 18128 ;;		wreg, status,2, status,0
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;Total ram usage:        0 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    1
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_main
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           
 18149                           ;psect for function _init_GPIO
 18150  1804                     _init_GPIO:	
 18151                           
 18152                           ;main.c: 190:     TRISBbits.TRISB2 = 0;
 18153                           
 18154                           ;incstack = 0
 18155                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 18156  1804  0021               	movlb	1	; select bank1
 18157  1805  110D               	bcf	13,2	;volatile
 18158                           
 18159                           ;main.c: 191:     ANSELBbits.ANSB2 = 0;
 18160  1806  0023               	movlb	3	; select bank3
 18161  1807  110D               	bcf	13,2	;volatile
 18162                           
 18163                           ;main.c: 192:     TRISBbits.TRISB3 = 1;
 18164  1808  0021               	movlb	1	; select bank1
 18165  1809  158D               	bsf	13,3	;volatile
 18166                           
 18167                           ;main.c: 193:     ANSELBbits.ANSB3 = 0;
 18168  180A  0023               	movlb	3	; select bank3
 18169  180B  118D               	bcf	13,3	;volatile
 18170                           
 18171                           ;main.c: 198:     ANSELCbits.ANSC4 = 0;
 18172  180C  120E               	bcf	14,4	;volatile
 18173                           
 18174                           ;main.c: 199:     ANSELCbits.ANSC5 = 0;
 18175  180D  128E               	bcf	14,5	;volatile
 18176                           
 18177                           ;main.c: 200:     TRISCbits.TRISC4 = 1;
 18178  180E  0021               	movlb	1	; select bank1
 18179  180F  160E               	bsf	14,4	;volatile
 18180                           
 18181                           ;main.c: 201:     TRISCbits.TRISC5 = 1;
 18182  1810  168E               	bsf	14,5	;volatile
 18183                           
 18184                           ;main.c: 210:     TRISAbits.TRISA4 = 0;
 18185  1811  120C               	bcf	12,4	;volatile
 18186                           
 18187                           ;main.c: 211:     TRISAbits.TRISA5 = 0;
 18188  1812  128C               	bcf	12,5	;volatile
 18189                           
 18190                           ;main.c: 212:     TRISEbits.TRISE0 = 0;
 18191  1813  1010               	bcf	16,0	;volatile
 18192                           
 18193                           ;main.c: 218:     PPSLOCK = 0x55;
 18194  1814  3055               	movlw	85
 18195  1815  003C               	movlb	28	; select bank28
 18196  1816  008F               	movwf	15	;volsfr
 18197                           
 18198                           ;main.c: 219:     PPSLOCK = 0xAA;
 18199  1817  30AA               	movlw	170
 18200  1818  008F               	movwf	15	;volsfr
 18201                           
 18202                           ;main.c: 220:     PPSLOCKbits.PPSLOCKED = 0x00;
 18203  1819  100F               	bcf	15,0	;volsfr
 18204                           
 18205                           ;main.c: 224:     RC4PPSbits.RC4PPS = 0x0011;
 18206  181A  003D               	movlb	29	; select bank29
 18207  181B  0824               	movf	36,w	;volatile
 18208  181C  39E0               	andlw	-32
 18209  181D  3811               	iorlw	17
 18210  181E  00A4               	movwf	36	;volatile
 18211                           
 18212                           ;main.c: 225:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 18213  181F  003C               	movlb	28	; select bank28
 18214  1820  0821               	movf	33,w	;volatile
 18215  1821  39E0               	andlw	-32
 18216  1822  3814               	iorlw	20
 18217  1823  00A1               	movwf	33	;volatile
 18218                           
 18219                           ;main.c: 226:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 18220  1824  0820               	movf	32,w	;volatile
 18221  1825  39E0               	andlw	-32
 18222  1826  3815               	iorlw	21
 18223  1827  00A0               	movwf	32	;volatile
 18224                           
 18225                           ;main.c: 227:     RC5PPSbits.RC5PPS = 0x0010;
 18226  1828  003D               	movlb	29	; select bank29
 18227  1829  0825               	movf	37,w	;volatile
 18228  182A  39E0               	andlw	-32
 18229  182B  3810               	iorlw	16
 18230  182C  00A5               	movwf	37	;volatile
 18231                           
 18232                           ;main.c: 230:     RB2PPSbits.RB2PPS = 0x14;
 18233  182D  081A               	movf	26,w	;volatile
 18234  182E  39E0               	andlw	-32
 18235  182F  3814               	iorlw	20
 18236  1830  009A               	movwf	26	;volatile
 18237                           
 18238                           ;main.c: 231:     RXPPSbits.RXPPS = 0x0B;
 18239  1831  003C               	movlb	28	; select bank28
 18240  1832  0824               	movf	36,w	;volatile
 18241  1833  39E0               	andlw	-32
 18242  1834  380B               	iorlw	11
 18243  1835  00A4               	movwf	36	;volatile
 18244                           
 18245                           ;main.c: 233:     PPSLOCK = 0x55;
 18246  1836  3055               	movlw	85
 18247  1837  008F               	movwf	15	;volsfr
 18248                           
 18249                           ;main.c: 234:     PPSLOCK = 0xAA;
 18250  1838  30AA               	movlw	170
 18251  1839  008F               	movwf	15	;volsfr
 18252                           
 18253                           ;main.c: 235:     PPSLOCKbits.PPSLOCKED = 0x01;
 18254  183A  140F               	bsf	15,0	;volsfr
 18255  183B  0008               	return
 18256  183C                     __end_of_init_GPIO:	
 18257                           
 18258                           	psect	text73
 18259  1801                     __ptext73:	
 18260 ;; *************** function _initClock *****************
 18261 ;; Defined at:
 18262 ;;		line 158 in file "main.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;		None
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;		None
 18267 ;; Return value:  Size  Location     Type
 18268 ;;                  1    wreg      void 
 18269 ;; Registers used:
 18270 ;;		status,2, status,0, pclath, cstack
 18271 ;; Tracked objects:
 18272 ;;		On entry : 0/0
 18273 ;;		On exit  : 0/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18280 ;;Total ram usage:        0 bytes
 18281 ;; Hardware stack levels used:    1
 18282 ;; Hardware stack levels required when called:    2
 18283 ;; This function calls:
 18284 ;;		_internal_16
 18285 ;; This function is called by:
 18286 ;;		_main
 18287 ;; This function uses a non-reentrant model
 18288 ;;
 18289                           
 18290                           
 18291                           ;psect for function _initClock
 18292  1801                     _initClock:	
 18293                           
 18294                           ;main.c: 160:     internal_16();
 18295                           
 18296                           ;incstack = 0
 18297                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 18298  1801  31B4  24E0         	fcall	_internal_16
 18299  1803  0008               	return
 18300  1804                     __end_of_initClock:	
 18301                           
 18302                           	psect	text74
 18303  34E0                     __ptext74:	
 18304 ;; *************** function _internal_16 *****************
 18305 ;; Defined at:
 18306 ;;		line 26 in file "pic16f1719_internals.c"
 18307 ;; Parameters:    Size  Location     Type
 18308 ;;		None
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;		None
 18311 ;; Return value:  Size  Location     Type
 18312 ;;                  1    wreg      void 
 18313 ;; Registers used:
 18314 ;;		None
 18315 ;; Tracked objects:
 18316 ;;		On entry : 0/0
 18317 ;;		On exit  : 0/0
 18318 ;;		Unchanged: 0/0
 18319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18324 ;;Total ram usage:        0 bytes
 18325 ;; Hardware stack levels used:    1
 18326 ;; Hardware stack levels required when called:    1
 18327 ;; This function calls:
 18328 ;;		Nothing
 18329 ;; This function is called by:
 18330 ;;		_initClock
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           
 18335                           ;psect for function _internal_16
 18336  34E0                     _internal_16:	
 18337                           
 18338                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 18339                           
 18340                           ;incstack = 0
 18341                           ; Regs used in _internal_16: []
 18342  34E0  0021               	movlb	1	; select bank1
 18343  34E1  1019               	bcf	25,0	;volatile
 18344                           
 18345                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 18346  34E2  1099               	bcf	25,1	;volatile
 18347                           
 18348                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 18349  34E3  1599               	bsf	25,3	;volatile
 18350                           
 18351                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 18352  34E4  1619               	bsf	25,4	;volatile
 18353                           
 18354                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 18355  34E5  1699               	bsf	25,5	;volatile
 18356                           
 18357                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 18358  34E6  1719               	bsf	25,6	;volatile
 18359                           
 18360                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 18361  34E7  1399               	bcf	25,7	;volatile
 18362  34E8  0008               	return
 18363  34E9                     __end_of_internal_16:	
 18364                           
 18365                           	psect	text75
 18366  20BD                     __ptext75:	
 18367 ;; *************** function _EUSART_Initialize *****************
 18368 ;; Defined at:
 18369 ;;		line 6 in file "EUSART.c"
 18370 ;; Parameters:    Size  Location     Type
 18371 ;;  baudrate        4    6[BANK0 ] const long 
 18372 ;; Auto vars:     Size  Location     Type
 18373 ;;  x               2   10[COMMON] unsigned int 
 18374 ;; Return value:  Size  Location     Type
 18375 ;;                  1    wreg      unsigned char 
 18376 ;; Registers used:
 18377 ;;		wreg, status,2, status,0, pclath, cstack
 18378 ;; Tracked objects:
 18379 ;;		On entry : 0/0
 18380 ;;		On exit  : 0/0
 18381 ;;		Unchanged: 0/0
 18382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18385 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18386 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18387 ;;Total ram usage:       18 bytes
 18388 ;; Hardware stack levels used:    1
 18389 ;; Hardware stack levels required when called:    2
 18390 ;; This function calls:
 18391 ;;		___aldiv
 18392 ;; This function is called by:
 18393 ;;		_main
 18394 ;; This function uses a non-reentrant model
 18395 ;;
 18396                           
 18397                           
 18398                           ;psect for function _EUSART_Initialize
 18399  20BD                     _EUSART_Initialize:	
 18400                           
 18401                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 18402                           
 18403                           ;incstack = 0
 18404                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18405  20BD  0020               	movlb	0	; select bank0
 18406  20BE  0826               	movf	EUSART_Initialize@baudrate,w
 18407  20BF  00AA               	movwf	??_EUSART_Initialize
 18408  20C0  0827               	movf	EUSART_Initialize@baudrate+1,w
 18409  20C1  00AB               	movwf	??_EUSART_Initialize+1
 18410  20C2  0828               	movf	EUSART_Initialize@baudrate+2,w
 18411  20C3  00AC               	movwf	??_EUSART_Initialize+2
 18412  20C4  0829               	movf	EUSART_Initialize@baudrate+3,w
 18413  20C5  00AD               	movwf	??_EUSART_Initialize+3
 18414  20C6  3006               	movlw	6
 18415  20C7                     u9305:	
 18416  20C7  35AA               	lslf	??_EUSART_Initialize,f
 18417  20C8  0DAB               	rlf	??_EUSART_Initialize+1,f
 18418  20C9  0DAC               	rlf	??_EUSART_Initialize+2,f
 18419  20CA  0DAD               	rlf	??_EUSART_Initialize+3,f
 18420  20CB  0B89               	decfsz	9,f
 18421  20CC  28C7               	goto	u9305
 18422  20CD  082D               	movf	??_EUSART_Initialize+3,w
 18423  20CE  00F4               	movwf	___aldiv@divisor+3
 18424  20CF  082C               	movf	??_EUSART_Initialize+2,w
 18425  20D0  00F3               	movwf	___aldiv@divisor+2
 18426  20D1  082B               	movf	??_EUSART_Initialize+1,w
 18427  20D2  00F2               	movwf	___aldiv@divisor+1
 18428  20D3  082A               	movf	??_EUSART_Initialize,w
 18429  20D4  00F1               	movwf	___aldiv@divisor
 18430  20D5  0826               	movf	EUSART_Initialize@baudrate,w
 18431  20D6  00AE               	movwf	??_EUSART_Initialize+4
 18432  20D7  0827               	movf	EUSART_Initialize@baudrate+1,w
 18433  20D8  00AF               	movwf	??_EUSART_Initialize+5
 18434  20D9  0828               	movf	EUSART_Initialize@baudrate+2,w
 18435  20DA  00B0               	movwf	??_EUSART_Initialize+6
 18436  20DB  0829               	movf	EUSART_Initialize@baudrate+3,w
 18437  20DC  00B1               	movwf	??_EUSART_Initialize+7
 18438  20DD  3006               	movlw	6
 18439  20DE                     u9315:	
 18440  20DE  35AE               	lslf	??_EUSART_Initialize+4,f
 18441  20DF  0DAF               	rlf	??_EUSART_Initialize+5,f
 18442  20E0  0DB0               	rlf	??_EUSART_Initialize+6,f
 18443  20E1  0DB1               	rlf	??_EUSART_Initialize+7,f
 18444  20E2  0B89               	decfsz	9,f
 18445  20E3  28DE               	goto	u9315
 18446  20E4  3000               	movlw	0
 18447  20E5  00B2               	movwf	??_EUSART_Initialize+8
 18448  20E6  3024               	movlw	36
 18449  20E7  00B3               	movwf	??_EUSART_Initialize+9
 18450  20E8  30F4               	movlw	244
 18451  20E9  00B4               	movwf	??_EUSART_Initialize+10
 18452  20EA  3000               	movlw	0
 18453  20EB  00B5               	movwf	??_EUSART_Initialize+11
 18454  20EC  082E               	movf	??_EUSART_Initialize+4,w
 18455  20ED  02B2               	subwf	??_EUSART_Initialize+8,f
 18456  20EE  082F               	movf	??_EUSART_Initialize+5,w
 18457  20EF  3BB3               	subwfb	??_EUSART_Initialize+9,f
 18458  20F0  0830               	movf	??_EUSART_Initialize+6,w
 18459  20F1  3BB4               	subwfb	??_EUSART_Initialize+10,f
 18460  20F2  0831               	movf	??_EUSART_Initialize+7,w
 18461  20F3  3BB5               	subwfb	??_EUSART_Initialize+11,f
 18462  20F4  0835               	movf	??_EUSART_Initialize+11,w
 18463  20F5  00F8               	movwf	___aldiv@dividend+3
 18464  20F6  0834               	movf	??_EUSART_Initialize+10,w
 18465  20F7  00F7               	movwf	___aldiv@dividend+2
 18466  20F8  0833               	movf	??_EUSART_Initialize+9,w
 18467  20F9  00F6               	movwf	___aldiv@dividend+1
 18468  20FA  0832               	movf	??_EUSART_Initialize+8,w
 18469  20FB  00F5               	movwf	___aldiv@dividend
 18470  20FC  31AD  253C  31A0   	fcall	___aldiv
 18471  20FF  0872               	movf	?___aldiv+1,w
 18472  2100  00FB               	movwf	EUSART_Initialize@x+1
 18473  2101  0871               	movf	?___aldiv,w
 18474  2102  00FA               	movwf	EUSART_Initialize@x
 18475                           
 18476                           ;EUSART.c: 10:  if(x>255)
 18477  2103  3001               	movlw	1
 18478  2104  027B               	subwf	EUSART_Initialize@x+1,w
 18479  2105  3000               	movlw	0
 18480  2106  1903               	skipnz
 18481  2107  027A               	subwf	EUSART_Initialize@x,w
 18482  2108  1C03               	skipc
 18483  2109  2952               	goto	l6521
 18484                           
 18485                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 18486  210A  0020               	movlb	0	; select bank0
 18487  210B  0826               	movf	EUSART_Initialize@baudrate,w
 18488  210C  00AA               	movwf	??_EUSART_Initialize
 18489  210D  0827               	movf	EUSART_Initialize@baudrate+1,w
 18490  210E  00AB               	movwf	??_EUSART_Initialize+1
 18491  210F  0828               	movf	EUSART_Initialize@baudrate+2,w
 18492  2110  00AC               	movwf	??_EUSART_Initialize+2
 18493  2111  0829               	movf	EUSART_Initialize@baudrate+3,w
 18494  2112  00AD               	movwf	??_EUSART_Initialize+3
 18495  2113  3004               	movlw	4
 18496  2114                     u9335:	
 18497  2114  35AA               	lslf	??_EUSART_Initialize,f
 18498  2115  0DAB               	rlf	??_EUSART_Initialize+1,f
 18499  2116  0DAC               	rlf	??_EUSART_Initialize+2,f
 18500  2117  0DAD               	rlf	??_EUSART_Initialize+3,f
 18501  2118  0B89               	decfsz	9,f
 18502  2119  2914               	goto	u9335
 18503  211A  082D               	movf	??_EUSART_Initialize+3,w
 18504  211B  00F4               	movwf	___aldiv@divisor+3
 18505  211C  082C               	movf	??_EUSART_Initialize+2,w
 18506  211D  00F3               	movwf	___aldiv@divisor+2
 18507  211E  082B               	movf	??_EUSART_Initialize+1,w
 18508  211F  00F2               	movwf	___aldiv@divisor+1
 18509  2120  082A               	movf	??_EUSART_Initialize,w
 18510  2121  00F1               	movwf	___aldiv@divisor
 18511  2122  0826               	movf	EUSART_Initialize@baudrate,w
 18512  2123  00AE               	movwf	??_EUSART_Initialize+4
 18513  2124  0827               	movf	EUSART_Initialize@baudrate+1,w
 18514  2125  00AF               	movwf	??_EUSART_Initialize+5
 18515  2126  0828               	movf	EUSART_Initialize@baudrate+2,w
 18516  2127  00B0               	movwf	??_EUSART_Initialize+6
 18517  2128  0829               	movf	EUSART_Initialize@baudrate+3,w
 18518  2129  00B1               	movwf	??_EUSART_Initialize+7
 18519  212A  3004               	movlw	4
 18520  212B                     u9345:	
 18521  212B  35AE               	lslf	??_EUSART_Initialize+4,f
 18522  212C  0DAF               	rlf	??_EUSART_Initialize+5,f
 18523  212D  0DB0               	rlf	??_EUSART_Initialize+6,f
 18524  212E  0DB1               	rlf	??_EUSART_Initialize+7,f
 18525  212F  0B89               	decfsz	9,f
 18526  2130  292B               	goto	u9345
 18527  2131  3000               	movlw	0
 18528  2132  00B2               	movwf	??_EUSART_Initialize+8
 18529  2133  3024               	movlw	36
 18530  2134  00B3               	movwf	??_EUSART_Initialize+9
 18531  2135  30F4               	movlw	244
 18532  2136  00B4               	movwf	??_EUSART_Initialize+10
 18533  2137  3000               	movlw	0
 18534  2138  00B5               	movwf	??_EUSART_Initialize+11
 18535  2139  082E               	movf	??_EUSART_Initialize+4,w
 18536  213A  02B2               	subwf	??_EUSART_Initialize+8,f
 18537  213B  082F               	movf	??_EUSART_Initialize+5,w
 18538  213C  3BB3               	subwfb	??_EUSART_Initialize+9,f
 18539  213D  0830               	movf	??_EUSART_Initialize+6,w
 18540  213E  3BB4               	subwfb	??_EUSART_Initialize+10,f
 18541  213F  0831               	movf	??_EUSART_Initialize+7,w
 18542  2140  3BB5               	subwfb	??_EUSART_Initialize+11,f
 18543  2141  0835               	movf	??_EUSART_Initialize+11,w
 18544  2142  00F8               	movwf	___aldiv@dividend+3
 18545  2143  0834               	movf	??_EUSART_Initialize+10,w
 18546  2144  00F7               	movwf	___aldiv@dividend+2
 18547  2145  0833               	movf	??_EUSART_Initialize+9,w
 18548  2146  00F6               	movwf	___aldiv@dividend+1
 18549  2147  0832               	movf	??_EUSART_Initialize+8,w
 18550  2148  00F5               	movwf	___aldiv@dividend
 18551  2149  31AD  253C  31A0   	fcall	___aldiv
 18552  214C  0872               	movf	?___aldiv+1,w
 18553  214D  00FB               	movwf	EUSART_Initialize@x+1
 18554  214E  0871               	movf	?___aldiv,w
 18555  214F  00FA               	movwf	EUSART_Initialize@x
 18556                           
 18557                           ;EUSART.c: 13:   BRGH = 1;
 18558  2150  0023               	movlb	3	; select bank3
 18559  2151  151E               	bsf	30,2	;volatile
 18560  2152                     l6521:	
 18561                           
 18562                           ;EUSART.c: 15:  if(x<256)
 18563  2152  3001               	movlw	1
 18564  2153  027B               	subwf	EUSART_Initialize@x+1,w
 18565  2154  3000               	movlw	0
 18566  2155  1903               	skipnz
 18567  2156  027A               	subwf	EUSART_Initialize@x,w
 18568  2157  1803               	skipnc
 18569  2158  0008               	return
 18570                           
 18571                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 18572  2159  087A               	movf	EUSART_Initialize@x,w
 18573  215A  0023               	movlb	3	; select bank3
 18574  215B  009B               	movwf	27	;volatile
 18575                           
 18576                           ;EUSART.c: 18:    SYNC = 0;
 18577  215C  121E               	bcf	30,4	;volatile
 18578                           
 18579                           ;EUSART.c: 19:    SPEN = 1;
 18580  215D  179D               	bsf	29,7	;volatile
 18581                           
 18582                           ;EUSART.c: 20:           TRISC7 = 1;
 18583  215E  0021               	movlb	1	; select bank1
 18584  215F  178E               	bsf	14,7	;volatile
 18585                           
 18586                           ;EUSART.c: 21:           TRISC6 = 1;
 18587  2160  170E               	bsf	14,6	;volatile
 18588                           
 18589                           ;EUSART.c: 22:           CREN = 1;
 18590  2161  0023               	movlb	3	; select bank3
 18591  2162  161D               	bsf	29,4	;volatile
 18592                           
 18593                           ;EUSART.c: 23:           TXEN = 1;
 18594  2163  169E               	bsf	30,5	;volatile
 18595  2164  0008               	return
 18596  2165                     __end_of_EUSART_Initialize:	
 18597                           
 18598                           	psect	text76
 18599  2D3C                     __ptext76:	
 18600 ;; *************** function ___aldiv *****************
 18601 ;; Defined at:
 18602 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 18603 ;; Parameters:    Size  Location     Type
 18604 ;;  divisor         4    1[COMMON] long 
 18605 ;;  dividend        4    5[COMMON] long 
 18606 ;; Auto vars:     Size  Location     Type
 18607 ;;  quotient        4    2[BANK0 ] long 
 18608 ;;  sign            1    1[BANK0 ] unsigned char 
 18609 ;;  counter         1    0[BANK0 ] unsigned char 
 18610 ;; Return value:  Size  Location     Type
 18611 ;;                  4    1[COMMON] long 
 18612 ;; Registers used:
 18613 ;;		wreg, status,2, status,0
 18614 ;; Tracked objects:
 18615 ;;		On entry : 0/0
 18616 ;;		On exit  : 0/0
 18617 ;;		Unchanged: 0/0
 18618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18620 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18622 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18623 ;;Total ram usage:       15 bytes
 18624 ;; Hardware stack levels used:    1
 18625 ;; Hardware stack levels required when called:    1
 18626 ;; This function calls:
 18627 ;;		Nothing
 18628 ;; This function is called by:
 18629 ;;		_EUSART_Initialize
 18630 ;; This function uses a non-reentrant model
 18631 ;;
 18632                           
 18633                           
 18634                           ;psect for function ___aldiv
 18635  2D3C                     ___aldiv:	
 18636                           
 18637                           ;incstack = 0
 18638                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 18639  2D3C  0020               	movlb	0	; select bank0
 18640  2D3D  01A1               	clrf	___aldiv@sign
 18641  2D3E  1FF4               	btfss	___aldiv@divisor+3,7
 18642  2D3F  2D4D               	goto	l906
 18643  2D40  09F1               	comf	___aldiv@divisor,f
 18644  2D41  09F2               	comf	___aldiv@divisor+1,f
 18645  2D42  09F3               	comf	___aldiv@divisor+2,f
 18646  2D43  09F4               	comf	___aldiv@divisor+3,f
 18647  2D44  0AF1               	incf	___aldiv@divisor,f
 18648  2D45  1903               	skipnz
 18649  2D46  0AF2               	incf	___aldiv@divisor+1,f
 18650  2D47  1903               	skipnz
 18651  2D48  0AF3               	incf	___aldiv@divisor+2,f
 18652  2D49  1903               	skipnz
 18653  2D4A  0AF4               	incf	___aldiv@divisor+3,f
 18654  2D4B  01A1               	clrf	___aldiv@sign
 18655  2D4C  0AA1               	incf	___aldiv@sign,f
 18656  2D4D                     l906:	
 18657  2D4D  1FF8               	btfss	___aldiv@dividend+3,7
 18658  2D4E  2D5E               	goto	l6483
 18659  2D4F  09F5               	comf	___aldiv@dividend,f
 18660  2D50  09F6               	comf	___aldiv@dividend+1,f
 18661  2D51  09F7               	comf	___aldiv@dividend+2,f
 18662  2D52  09F8               	comf	___aldiv@dividend+3,f
 18663  2D53  0AF5               	incf	___aldiv@dividend,f
 18664  2D54  1903               	skipnz
 18665  2D55  0AF6               	incf	___aldiv@dividend+1,f
 18666  2D56  1903               	skipnz
 18667  2D57  0AF7               	incf	___aldiv@dividend+2,f
 18668  2D58  1903               	skipnz
 18669  2D59  0AF8               	incf	___aldiv@dividend+3,f
 18670  2D5A  3001               	movlw	1
 18671  2D5B  00F9               	movwf	??___aldiv
 18672  2D5C  0879               	movf	??___aldiv,w
 18673  2D5D  06A1               	xorwf	___aldiv@sign,f
 18674  2D5E                     l6483:	
 18675  2D5E  3000               	movlw	0
 18676  2D5F  00A5               	movwf	___aldiv@quotient+3
 18677  2D60  3000               	movlw	0
 18678  2D61  00A4               	movwf	___aldiv@quotient+2
 18679  2D62  3000               	movlw	0
 18680  2D63  00A3               	movwf	___aldiv@quotient+1
 18681  2D64  3000               	movlw	0
 18682  2D65  00A2               	movwf	___aldiv@quotient
 18683  2D66  0874               	movf	___aldiv@divisor+3,w
 18684  2D67  0473               	iorwf	___aldiv@divisor+2,w
 18685  2D68  0472               	iorwf	___aldiv@divisor+1,w
 18686  2D69  0471               	iorwf	___aldiv@divisor,w
 18687  2D6A  1903               	skipnz
 18688  2D6B  2DA7               	goto	l6505
 18689  2D6C  01A0               	clrf	___aldiv@counter
 18690  2D6D  0AA0               	incf	___aldiv@counter,f
 18691  2D6E                     l6491:	
 18692  2D6E  1BF4               	btfsc	___aldiv@divisor+3,7
 18693  2D6F  2D7C               	goto	l6493
 18694  2D70  3001               	movlw	1
 18695  2D71                     u9235:	
 18696  2D71  35F1               	lslf	___aldiv@divisor,f
 18697  2D72  0DF2               	rlf	___aldiv@divisor+1,f
 18698  2D73  0DF3               	rlf	___aldiv@divisor+2,f
 18699  2D74  0DF4               	rlf	___aldiv@divisor+3,f
 18700  2D75  0B89               	decfsz	9,f
 18701  2D76  2D71               	goto	u9235
 18702  2D77  3001               	movlw	1
 18703  2D78  00F9               	movwf	??___aldiv
 18704  2D79  0879               	movf	??___aldiv,w
 18705  2D7A  07A0               	addwf	___aldiv@counter,f
 18706  2D7B  2D6E               	goto	l6491
 18707  2D7C                     l6493:	
 18708  2D7C  3001               	movlw	1
 18709  2D7D                     u9255:	
 18710  2D7D  35A2               	lslf	___aldiv@quotient,f
 18711  2D7E  0DA3               	rlf	___aldiv@quotient+1,f
 18712  2D7F  0DA4               	rlf	___aldiv@quotient+2,f
 18713  2D80  0DA5               	rlf	___aldiv@quotient+3,f
 18714  2D81  0B89               	decfsz	9,f
 18715  2D82  2D7D               	goto	u9255
 18716  2D83  0874               	movf	___aldiv@divisor+3,w
 18717  2D84  0278               	subwf	___aldiv@dividend+3,w
 18718  2D85  1D03               	skipz
 18719  2D86  2D91               	goto	u9265
 18720  2D87  0873               	movf	___aldiv@divisor+2,w
 18721  2D88  0277               	subwf	___aldiv@dividend+2,w
 18722  2D89  1D03               	skipz
 18723  2D8A  2D91               	goto	u9265
 18724  2D8B  0872               	movf	___aldiv@divisor+1,w
 18725  2D8C  0276               	subwf	___aldiv@dividend+1,w
 18726  2D8D  1D03               	skipz
 18727  2D8E  2D91               	goto	u9265
 18728  2D8F  0871               	movf	___aldiv@divisor,w
 18729  2D90  0275               	subwf	___aldiv@dividend,w
 18730  2D91                     u9265:	
 18731  2D91  1C03               	skipc
 18732  2D92  2D9C               	goto	l6501
 18733  2D93  0871               	movf	___aldiv@divisor,w
 18734  2D94  02F5               	subwf	___aldiv@dividend,f
 18735  2D95  0872               	movf	___aldiv@divisor+1,w
 18736  2D96  3BF6               	subwfb	___aldiv@dividend+1,f
 18737  2D97  0873               	movf	___aldiv@divisor+2,w
 18738  2D98  3BF7               	subwfb	___aldiv@dividend+2,f
 18739  2D99  0874               	movf	___aldiv@divisor+3,w
 18740  2D9A  3BF8               	subwfb	___aldiv@dividend+3,f
 18741  2D9B  1422               	bsf	___aldiv@quotient,0
 18742  2D9C                     l6501:	
 18743  2D9C  3001               	movlw	1
 18744  2D9D                     u9275:	
 18745  2D9D  36F4               	lsrf	___aldiv@divisor+3,f
 18746  2D9E  0CF3               	rrf	___aldiv@divisor+2,f
 18747  2D9F  0CF2               	rrf	___aldiv@divisor+1,f
 18748  2DA0  0CF1               	rrf	___aldiv@divisor,f
 18749  2DA1  0B89               	decfsz	9,f
 18750  2DA2  2D9D               	goto	u9275
 18751  2DA3  3001               	movlw	1
 18752  2DA4  02A0               	subwf	___aldiv@counter,f
 18753  2DA5  1D03               	btfss	3,2
 18754  2DA6  2D7C               	goto	l6493
 18755  2DA7                     l6505:	
 18756  2DA7  0821               	movf	___aldiv@sign,w
 18757  2DA8  1903               	btfsc	3,2
 18758  2DA9  2DB5               	goto	l6509
 18759  2DAA  09A2               	comf	___aldiv@quotient,f
 18760  2DAB  09A3               	comf	___aldiv@quotient+1,f
 18761  2DAC  09A4               	comf	___aldiv@quotient+2,f
 18762  2DAD  09A5               	comf	___aldiv@quotient+3,f
 18763  2DAE  0AA2               	incf	___aldiv@quotient,f
 18764  2DAF  1903               	skipnz
 18765  2DB0  0AA3               	incf	___aldiv@quotient+1,f
 18766  2DB1  1903               	skipnz
 18767  2DB2  0AA4               	incf	___aldiv@quotient+2,f
 18768  2DB3  1903               	skipnz
 18769  2DB4  0AA5               	incf	___aldiv@quotient+3,f
 18770  2DB5                     l6509:	
 18771  2DB5  0825               	movf	___aldiv@quotient+3,w
 18772  2DB6  00F4               	movwf	?___aldiv+3
 18773  2DB7  0824               	movf	___aldiv@quotient+2,w
 18774  2DB8  00F3               	movwf	?___aldiv+2
 18775  2DB9  0823               	movf	___aldiv@quotient+1,w
 18776  2DBA  00F2               	movwf	?___aldiv+1
 18777  2DBB  0822               	movf	___aldiv@quotient,w
 18778  2DBC  00F1               	movwf	?___aldiv
 18779  2DBD  0008               	return
 18780  2DBE                     __end_of___aldiv:	
 18781                           
 18782                           	psect	intentry
 18783  0004                     __pintentry:	
 18784 ;; *************** function _myIsr *****************
 18785 ;; Defined at:
 18786 ;;		line 57 in file "main.c"
 18787 ;; Parameters:    Size  Location     Type
 18788 ;;		None
 18789 ;; Auto vars:     Size  Location     Type
 18790 ;;		None
 18791 ;; Return value:  Size  Location     Type
 18792 ;;                  1    wreg      void 
 18793 ;; Registers used:
 18794 ;;		wreg, status,2, status,0
 18795 ;; Tracked objects:
 18796 ;;		On entry : 0/0
 18797 ;;		On exit  : 0/0
 18798 ;;		Unchanged: 0/0
 18799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18804 ;;Total ram usage:        1 bytes
 18805 ;; Hardware stack levels used:    1
 18806 ;; This function calls:
 18807 ;;		Nothing
 18808 ;; This function is called by:
 18809 ;;		Interrupt level 1
 18810 ;; This function uses a non-reentrant model
 18811 ;;
 18812                           
 18813  0004                     _myIsr:	
 18814                           
 18815                           ;incstack = 0
 18816  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18817                           
 18818                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 18819  0005  3180               	pagesel	$
 18820                           
 18821                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 18822  0006  0020               	movlb	0	; select bank0
 18823  0007  1C11               	btfss	17,0	;volatile
 18824  0008  281C               	goto	i1l125
 18825  0009  0021               	movlb	1	; select bank1
 18826  000A  1C11               	btfss	17,0	;volatile
 18827  000B  281C               	goto	i1l125
 18828                           
 18829                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 18830  000C  0020               	movlb	0	; select bank0
 18831  000D  1011               	bcf	17,0	;volatile
 18832                           
 18833                           ;main.c: 63:         count++;
 18834  000E  3001               	movlw	1
 18835  000F  00F0               	movwf	??_myIsr
 18836  0010  0870               	movf	??_myIsr,w
 18837  0011  0023               	movlb	3	; select bank3
 18838  0012  07D2               	addwf	myIsr@count^(0+384),f
 18839                           
 18840                           ;main.c: 66:         if (count == 61) {
 18841  0013  303D               	movlw	61
 18842  0014  0652               	xorwf	myIsr@count^(0+384),w
 18843  0015  1D03               	btfss	3,2
 18844  0016  281C               	goto	i1l125
 18845                           
 18846                           ;main.c: 67:             tmr1_flag = 1;
 18847  0017  3001               	movlw	1
 18848  0018  00F0               	movwf	??_myIsr
 18849  0019  0870               	movf	??_myIsr,w
 18850  001A  00D3               	movwf	_tmr1_flag^(0+384)	;volatile
 18851                           
 18852                           ;main.c: 68:             count = 0;
 18853  001B  01D2               	clrf	myIsr@count^(0+384)
 18854  001C                     i1l125:	
 18855  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18856  001D  0009               	retfie
 18857  001E                     __end_of_myIsr:	
 18858  007E                     btemp	set	126	;btemp
 18859  007E                     int$flags	set	126
 18860  007E                     wtemp0	set	126
 18861  2771                     
 18862                           	psect	text5_split_1
 18863  2DBE                     l7699:	
 18864                           
 18865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 18866  2DBE  0021               	movlb	1	; select bank1
 18867  2DBF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18868  2DC0  0086               	movwf	6
 18869  2DC1  0187               	clrf	7
 18870  2DC2  3F40               	moviw [0]fsr1
 18871  2DC3  00F1               	movwf	strncmp@_l
 18872  2DC4  3F41               	moviw [1]fsr1
 18873  2DC5  00F2               	movwf	strncmp@_l+1
 18874  2DC6  30C7               	movlw	low (STR_19| (0+32768))
 18875  2DC7  00F3               	movwf	strncmp@_r
 18876  2DC8  30B9               	movlw	high (STR_19| (0+32768))
 18877  2DC9  00F4               	movwf	strncmp@_r+1
 18878  2DCA  3003               	movlw	3
 18879  2DCB  00F5               	movwf	strncmp@n
 18880  2DCC  3000               	movlw	0
 18881  2DCD  00F6               	movwf	strncmp@n+1
 18882  2DCE  31AA  222E  31AD   	fcall	_strncmp
 18883  2DD1  0871               	movf	?_strncmp,w
 18884  2DD2  0472               	iorwf	?_strncmp+1,w
 18885  2DD3  1903               	btfsc	3,2
 18886  2DD4  2DEC               	goto	l7703
 18887  2DD5  0021               	movlb	1	; select bank1
 18888  2DD6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18889  2DD7  0086               	movwf	6
 18890  2DD8  0187               	clrf	7
 18891  2DD9  3F40               	moviw [0]fsr1
 18892  2DDA  00F1               	movwf	strncmp@_l
 18893  2DDB  3F41               	moviw [1]fsr1
 18894  2DDC  00F2               	movwf	strncmp@_l+1
 18895  2DDD  30CF               	movlw	low (STR_23| (0+32768))
 18896  2DDE  00F3               	movwf	strncmp@_r
 18897  2DDF  30B9               	movlw	high (STR_23| (0+32768))
 18898  2DE0  00F4               	movwf	strncmp@_r+1
 18899  2DE1  3003               	movlw	3
 18900  2DE2  00F5               	movwf	strncmp@n
 18901  2DE3  3000               	movlw	0
 18902  2DE4  00F6               	movwf	strncmp@n+1
 18903  2DE5  31AA  222E  31AD   	fcall	_strncmp
 18904  2DE8  0871               	movf	?_strncmp,w
 18905  2DE9  0472               	iorwf	?_strncmp+1,w
 18906  2DEA  1D03               	btfss	3,2
 18907  2DEB  2E3F               	goto	L18
 18908  2DEC                     l7703:	
 18909                           
 18910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 18911  2DEC  0021               	movlb	1	; select bank1
 18912  2DED  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18913  2DEE  0086               	movwf	6
 18914  2DEF  0187               	clrf	7
 18915  2DF0  3003               	movlw	3
 18916  2DF1  0781               	addwf	1,f
 18917  2DF2  3141               	addfsr 1,1
 18918  2DF3  1803               	skipnc
 18919  2DF4  0A81               	incf	1,f
 18920                           
 18921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18922  2DF5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18923  2DF6  0086               	movwf	6
 18924  2DF7  3001               	movlw	1	; select bank2/3
 18925  2DF8  0087               	movwf	7
 18926  2DF9  0801               	movf	1,w
 18927  2DFA  0084               	movwf	4
 18928  2DFB  3001               	movlw	1	; select bank2/3
 18929  2DFC  0085               	movwf	5
 18930  2DFD  3002               	movlw	2
 18931  2DFE  0781               	addwf	1,f
 18932  2DFF  0800               	movf	0,w
 18933  2E00  0022               	movlb	2	; select bank2
 18934  2E01  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18935  2E02  3980               	andlw	128
 18936  2E03  1D03               	skipz
 18937  2E04  30FF               	movlw	255
 18938  2E05  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18939  2E06  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18940  2E07  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18941  2E08  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18942  2E09  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18943  2E0A  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18944  2E0B  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18945                           
 18946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 18947  2E0C  0021               	movlb	1	; select bank1
 18948  2E0D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18949  2E0E  0020               	movlb	0	; select bank0
 18950  2E0F  00B1               	movwf	dtoa@fp+1
 18951  2E10  0021               	movlb	1	; select bank1
 18952  2E11  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18953  2E12  0020               	movlb	0	; select bank0
 18954  2E13  00B0               	movwf	dtoa@fp
 18955  2E14  0022               	movlb	2	; select bank2
 18956  2E15  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18957  2E16  0020               	movlb	0	; select bank0
 18958  2E17  00B2               	movwf	dtoa@d
 18959  2E18  0022               	movlb	2	; select bank2
 18960  2E19  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18961  2E1A  0020               	movlb	0	; select bank0
 18962  2E1B  00B3               	movwf	dtoa@d+1
 18963  2E1C  0022               	movlb	2	; select bank2
 18964  2E1D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18965  2E1E  0020               	movlb	0	; select bank0
 18966  2E1F  00B4               	movwf	dtoa@d+2
 18967  2E20  0022               	movlb	2	; select bank2
 18968  2E21  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18969  2E22  0020               	movlb	0	; select bank0
 18970  2E23  00B5               	movwf	dtoa@d+3
 18971  2E24  0022               	movlb	2	; select bank2
 18972  2E25  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18973  2E26  0020               	movlb	0	; select bank0
 18974  2E27  00B6               	movwf	dtoa@d+4
 18975  2E28  0022               	movlb	2	; select bank2
 18976  2E29  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18977  2E2A  0020               	movlb	0	; select bank0
 18978  2E2B  00B7               	movwf	dtoa@d+5
 18979  2E2C  0022               	movlb	2	; select bank2
 18980  2E2D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18981  2E2E  0020               	movlb	0	; select bank0
 18982  2E2F  00B8               	movwf	dtoa@d+6
 18983  2E30  0022               	movlb	2	; select bank2
 18984  2E31  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18985  2E32  0020               	movlb	0	; select bank0
 18986  2E33  00B9               	movwf	dtoa@d+7
 18987  2E34  319D  2554         	fcall	_dtoa
 18988  2E36  0020               	movlb	0	; select bank0
 18989  2E37  0831               	movf	?_dtoa+1,w
 18990  2E38  0021               	movlb	1	; select bank1
 18991  2E39  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18992  2E3A  0020               	movlb	0	; select bank0
 18993  2E3B  0830               	movf	?_dtoa,w
 18994  2E3C  0021               	movlb	1	; select bank1
 18995  2E3D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18996  2E3E  0008               	return
 18997  2E3F                     L18:	
 18998  2E3F                     L17:	
 18999  2E3F  31AE  2E41         	ljmp	l7711
 19000                           
 19001                           	psect	text5_split_2
 19002  2E41                     l7711:	
 19003                           
 19004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 19005  2E41  0021               	movlb	1	; select bank1
 19006  2E42  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19007  2E43  0086               	movwf	6
 19008  2E44  0187               	clrf	7
 19009  2E45  3F40               	moviw [0]fsr1
 19010  2E46  00F1               	movwf	strncmp@_l
 19011  2E47  3F41               	moviw [1]fsr1
 19012  2E48  00F2               	movwf	strncmp@_l+1
 19013  2E49  30C8               	movlw	low ((STR_19+1)| (0+32768))
 19014  2E4A  00F3               	movwf	strncmp@_r
 19015  2E4B  30B9               	movlw	high ((STR_19+1)| (0+32768))
 19016  2E4C  00F4               	movwf	strncmp@_r+1
 19017  2E4D  3002               	movlw	2
 19018  2E4E  00F5               	movwf	strncmp@n
 19019  2E4F  3000               	movlw	0
 19020  2E50  00F6               	movwf	strncmp@n+1
 19021  2E51  31AA  222E  31AE   	fcall	_strncmp
 19022  2E54  0871               	movf	?_strncmp,w
 19023  2E55  0472               	iorwf	?_strncmp+1,w
 19024  2E56  1903               	btfsc	3,2
 19025  2E57  2E6F               	goto	l7715
 19026  2E58  0021               	movlb	1	; select bank1
 19027  2E59  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19028  2E5A  0086               	movwf	6
 19029  2E5B  0187               	clrf	7
 19030  2E5C  3F40               	moviw [0]fsr1
 19031  2E5D  00F1               	movwf	strncmp@_l
 19032  2E5E  3F41               	moviw [1]fsr1
 19033  2E5F  00F2               	movwf	strncmp@_l+1
 19034  2E60  30D0               	movlw	low ((STR_23+1)| (0+32768))
 19035  2E61  00F3               	movwf	strncmp@_r
 19036  2E62  30B9               	movlw	high ((STR_23+1)| (0+32768))
 19037  2E63  00F4               	movwf	strncmp@_r+1
 19038  2E64  3002               	movlw	2
 19039  2E65  00F5               	movwf	strncmp@n
 19040  2E66  3000               	movlw	0
 19041  2E67  00F6               	movwf	strncmp@n+1
 19042  2E68  31AA  222E  31AE   	fcall	_strncmp
 19043  2E6B  0871               	movf	?_strncmp,w
 19044  2E6C  0472               	iorwf	?_strncmp+1,w
 19045  2E6D  1D03               	btfss	3,2
 19046  2E6E  2EC7               	goto	L20
 19047  2E6F                     l7715:	
 19048                           
 19049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 19050  2E6F  0021               	movlb	1	; select bank1
 19051  2E70  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19052  2E71  0086               	movwf	6
 19053  2E72  0187               	clrf	7
 19054  2E73  3002               	movlw	2
 19055  2E74  0781               	addwf	1,f
 19056  2E75  3141               	addfsr 1,1
 19057  2E76  1803               	skipnc
 19058  2E77  0A81               	incf	1,f
 19059                           
 19060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19061  2E78  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19062  2E79  0086               	movwf	6
 19063  2E7A  3001               	movlw	1	; select bank2/3
 19064  2E7B  0087               	movwf	7
 19065  2E7C  0801               	movf	1,w
 19066  2E7D  0084               	movwf	4
 19067  2E7E  3001               	movlw	1	; select bank2/3
 19068  2E7F  0085               	movwf	5
 19069  2E80  3002               	movlw	2
 19070  2E81  0781               	addwf	1,f
 19071  2E82  3F00               	moviw [0]fsr0
 19072  2E83  0022               	movlb	2	; select bank2
 19073  2E84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19074  2E85  3F01               	moviw [1]fsr0
 19075  2E86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19076  2E87  0820               	movf	??_vfpfcnvrt^(0+256),w
 19077  2E88  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19078  2E89  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19079  2E8A  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19080  2E8B  0D89               	rlf	9,f
 19081  2E8C  3B89               	subwfb	9,f
 19082  2E8D  0989               	comf	9,f
 19083  2E8E  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19084  2E8F  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19085  2E90  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19086  2E91  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19087  2E92  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19088  2E93  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19089                           
 19090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 19091  2E94  0021               	movlb	1	; select bank1
 19092  2E95  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19093  2E96  0020               	movlb	0	; select bank0
 19094  2E97  00B1               	movwf	dtoa@fp+1
 19095  2E98  0021               	movlb	1	; select bank1
 19096  2E99  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19097  2E9A  0020               	movlb	0	; select bank0
 19098  2E9B  00B0               	movwf	dtoa@fp
 19099  2E9C  0022               	movlb	2	; select bank2
 19100  2E9D  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19101  2E9E  0020               	movlb	0	; select bank0
 19102  2E9F  00B2               	movwf	dtoa@d
 19103  2EA0  0022               	movlb	2	; select bank2
 19104  2EA1  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19105  2EA2  0020               	movlb	0	; select bank0
 19106  2EA3  00B3               	movwf	dtoa@d+1
 19107  2EA4  0022               	movlb	2	; select bank2
 19108  2EA5  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19109  2EA6  0020               	movlb	0	; select bank0
 19110  2EA7  00B4               	movwf	dtoa@d+2
 19111  2EA8  0022               	movlb	2	; select bank2
 19112  2EA9  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19113  2EAA  0020               	movlb	0	; select bank0
 19114  2EAB  00B5               	movwf	dtoa@d+3
 19115  2EAC  0022               	movlb	2	; select bank2
 19116  2EAD  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19117  2EAE  0020               	movlb	0	; select bank0
 19118  2EAF  00B6               	movwf	dtoa@d+4
 19119  2EB0  0022               	movlb	2	; select bank2
 19120  2EB1  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19121  2EB2  0020               	movlb	0	; select bank0
 19122  2EB3  00B7               	movwf	dtoa@d+5
 19123  2EB4  0022               	movlb	2	; select bank2
 19124  2EB5  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19125  2EB6  0020               	movlb	0	; select bank0
 19126  2EB7  00B8               	movwf	dtoa@d+6
 19127  2EB8  0022               	movlb	2	; select bank2
 19128  2EB9  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19129  2EBA  0020               	movlb	0	; select bank0
 19130  2EBB  00B9               	movwf	dtoa@d+7
 19131  2EBC  319D  2554         	fcall	_dtoa
 19132  2EBE  0020               	movlb	0	; select bank0
 19133  2EBF  0831               	movf	?_dtoa+1,w
 19134  2EC0  0021               	movlb	1	; select bank1
 19135  2EC1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19136  2EC2  0020               	movlb	0	; select bank0
 19137  2EC3  0830               	movf	?_dtoa,w
 19138  2EC4  0021               	movlb	1	; select bank1
 19139  2EC5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19140  2EC6  0008               	return
 19141  2EC7                     L20:	
 19142  2EC7                     L19:	
 19143  2EC7  319A  2A20         	ljmp	l7723
 19144                           
 19145                           	psect	text5_split_3
 19146  1A20                     l7723:	
 19147                           
 19148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 19149  1A20  0021               	movlb	1	; select bank1
 19150  1A21  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19151  1A22  0086               	movwf	6
 19152  1A23  0187               	clrf	7
 19153  1A24  3F40               	moviw [0]fsr1
 19154  1A25  0022               	movlb	2	; select bank2
 19155  1A26  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19156  1A27  3F41               	moviw [1]fsr1
 19157  1A28  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19158  1A29  0820               	movf	??_vfpfcnvrt^(0+256),w
 19159  1A2A  0084               	movwf	4
 19160  1A2B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19161  1A2C  0085               	movwf	5
 19162  1A2D  0012               	moviw fsr0++
 19163  1A2E  3A64               	xorlw	100
 19164  1A2F  1903               	btfsc	3,2
 19165  1A30  2A42               	goto	l7727
 19166  1A31  0021               	movlb	1	; select bank1
 19167  1A32  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19168  1A33  0086               	movwf	6
 19169  1A34  0187               	clrf	7
 19170  1A35  3F40               	moviw [0]fsr1
 19171  1A36  0022               	movlb	2	; select bank2
 19172  1A37  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19173  1A38  3F41               	moviw [1]fsr1
 19174  1A39  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19175  1A3A  0820               	movf	??_vfpfcnvrt^(0+256),w
 19176  1A3B  0084               	movwf	4
 19177  1A3C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19178  1A3D  0085               	movwf	5
 19179  1A3E  0012               	moviw fsr0++
 19180  1A3F  3A69               	xorlw	105
 19181  1A40  1D03               	btfss	3,2
 19182  1A41  2A9A               	goto	l7735
 19183  1A42                     l7727:	
 19184                           
 19185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 19186  1A42  0021               	movlb	1	; select bank1
 19187  1A43  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19188  1A44  0086               	movwf	6
 19189  1A45  0187               	clrf	7
 19190  1A46  3001               	movlw	1
 19191  1A47  0781               	addwf	1,f
 19192  1A48  3141               	addfsr 1,1
 19193  1A49  1803               	skipnc
 19194  1A4A  0A81               	incf	1,f
 19195                           
 19196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 19197  1A4B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19198  1A4C  0086               	movwf	6
 19199  1A4D  3001               	movlw	1	; select bank2/3
 19200  1A4E  0087               	movwf	7
 19201  1A4F  0801               	movf	1,w
 19202  1A50  0084               	movwf	4
 19203  1A51  3001               	movlw	1	; select bank2/3
 19204  1A52  0085               	movwf	5
 19205  1A53  3002               	movlw	2
 19206  1A54  0781               	addwf	1,f
 19207  1A55  3F00               	moviw [0]fsr0
 19208  1A56  0022               	movlb	2	; select bank2
 19209  1A57  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19210  1A58  3F01               	moviw [1]fsr0
 19211  1A59  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19212  1A5A  0820               	movf	??_vfpfcnvrt^(0+256),w
 19213  1A5B  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19214  1A5C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19215  1A5D  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19216  1A5E  0D89               	rlf	9,f
 19217  1A5F  3B89               	subwfb	9,f
 19218  1A60  0989               	comf	9,f
 19219  1A61  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19220  1A62  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19221  1A63  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19222  1A64  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19223  1A65  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19224  1A66  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19225                           
 19226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 19227  1A67  0021               	movlb	1	; select bank1
 19228  1A68  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19229  1A69  0020               	movlb	0	; select bank0
 19230  1A6A  00B1               	movwf	dtoa@fp+1
 19231  1A6B  0021               	movlb	1	; select bank1
 19232  1A6C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19233  1A6D  0020               	movlb	0	; select bank0
 19234  1A6E  00B0               	movwf	dtoa@fp
 19235  1A6F  0022               	movlb	2	; select bank2
 19236  1A70  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19237  1A71  0020               	movlb	0	; select bank0
 19238  1A72  00B2               	movwf	dtoa@d
 19239  1A73  0022               	movlb	2	; select bank2
 19240  1A74  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19241  1A75  0020               	movlb	0	; select bank0
 19242  1A76  00B3               	movwf	dtoa@d+1
 19243  1A77  0022               	movlb	2	; select bank2
 19244  1A78  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19245  1A79  0020               	movlb	0	; select bank0
 19246  1A7A  00B4               	movwf	dtoa@d+2
 19247  1A7B  0022               	movlb	2	; select bank2
 19248  1A7C  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19249  1A7D  0020               	movlb	0	; select bank0
 19250  1A7E  00B5               	movwf	dtoa@d+3
 19251  1A7F  0022               	movlb	2	; select bank2
 19252  1A80  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19253  1A81  0020               	movlb	0	; select bank0
 19254  1A82  00B6               	movwf	dtoa@d+4
 19255  1A83  0022               	movlb	2	; select bank2
 19256  1A84  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19257  1A85  0020               	movlb	0	; select bank0
 19258  1A86  00B7               	movwf	dtoa@d+5
 19259  1A87  0022               	movlb	2	; select bank2
 19260  1A88  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19261  1A89  0020               	movlb	0	; select bank0
 19262  1A8A  00B8               	movwf	dtoa@d+6
 19263  1A8B  0022               	movlb	2	; select bank2
 19264  1A8C  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19265  1A8D  0020               	movlb	0	; select bank0
 19266  1A8E  00B9               	movwf	dtoa@d+7
 19267  1A8F  319D  2554         	fcall	_dtoa
 19268  1A91  0020               	movlb	0	; select bank0
 19269  1A92  0831               	movf	?_dtoa+1,w
 19270  1A93  0021               	movlb	1	; select bank1
 19271  1A94  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19272  1A95  0020               	movlb	0	; select bank0
 19273  1A96  0830               	movf	?_dtoa,w
 19274  1A97  0021               	movlb	1	; select bank1
 19275  1A98  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19276  1A99  0008               	return
 19277  1A9A                     l7735:	
 19278                           
 19279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 19280  1A9A  0021               	movlb	1	; select bank1
 19281  1A9B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19282  1A9C  0086               	movwf	6
 19283  1A9D  0187               	clrf	7
 19284  1A9E  3F40               	moviw [0]fsr1
 19285  1A9F  00F1               	movwf	strncmp@_l
 19286  1AA0  3F41               	moviw [1]fsr1
 19287  1AA1  00F2               	movwf	strncmp@_l+1
 19288  1AA2  30ED               	movlw	low (STR_37| (0+32768))
 19289  1AA3  00F3               	movwf	strncmp@_r
 19290  1AA4  30B9               	movlw	high (STR_37| (0+32768))
 19291  1AA5  00F4               	movwf	strncmp@_r+1
 19292  1AA6  3002               	movlw	2
 19293  1AA7  00F5               	movwf	strncmp@n
 19294  1AA8  3000               	movlw	0
 19295  1AA9  00F6               	movwf	strncmp@n+1
 19296  1AAA  31AA  222E  319A   	fcall	_strncmp
 19297  1AAD  0871               	movf	?_strncmp,w
 19298  1AAE  0472               	iorwf	?_strncmp+1,w
 19299  1AAF  1903               	btfsc	3,2
 19300  1AB0  2AC8               	goto	l7739
 19301  1AB1  0021               	movlb	1	; select bank1
 19302  1AB2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19303  1AB3  0086               	movwf	6
 19304  1AB4  0187               	clrf	7
 19305  1AB5  3F40               	moviw [0]fsr1
 19306  1AB6  00F1               	movwf	strncmp@_l
 19307  1AB7  3F41               	moviw [1]fsr1
 19308  1AB8  00F2               	movwf	strncmp@_l+1
 19309  1AB9  30F6               	movlw	low (STR_41| (0+32768))
 19310  1ABA  00F3               	movwf	strncmp@_r
 19311  1ABB  30B9               	movlw	high (STR_41| (0+32768))
 19312  1ABC  00F4               	movwf	strncmp@_r+1
 19313  1ABD  3002               	movlw	2
 19314  1ABE  00F5               	movwf	strncmp@n
 19315  1ABF  3000               	movlw	0
 19316  1AC0  00F6               	movwf	strncmp@n+1
 19317  1AC1  31AA  222E  319A   	fcall	_strncmp
 19318  1AC4  0871               	movf	?_strncmp,w
 19319  1AC5  0472               	iorwf	?_strncmp+1,w
 19320  1AC6  1D03               	btfss	3,2
 19321  1AC7  2B26               	goto	L22
 19322  1AC8                     l7739:	
 19323                           
 19324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 19325  1AC8  0021               	movlb	1	; select bank1
 19326  1AC9  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19327  1ACA  0086               	movwf	6
 19328  1ACB  0187               	clrf	7
 19329  1ACC  3002               	movlw	2
 19330  1ACD  0781               	addwf	1,f
 19331  1ACE  3141               	addfsr 1,1
 19332  1ACF  1803               	skipnc
 19333  1AD0  0A81               	incf	1,f
 19334                           
 19335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 19336  1AD1  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19337  1AD2  0086               	movwf	6
 19338  1AD3  3001               	movlw	1	; select bank2/3
 19339  1AD4  0087               	movwf	7
 19340  1AD5  0801               	movf	1,w
 19341  1AD6  0084               	movwf	4
 19342  1AD7  3001               	movlw	1	; select bank2/3
 19343  1AD8  0085               	movwf	5
 19344  1AD9  3004               	movlw	4
 19345  1ADA  0781               	addwf	1,f
 19346  1ADB  3F00               	moviw [0]fsr0
 19347  1ADC  0022               	movlb	2	; select bank2
 19348  1ADD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19349  1ADE  3F01               	moviw [1]fsr0
 19350  1ADF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19351  1AE0  3F02               	moviw [2]fsr0
 19352  1AE1  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 19353  1AE2  3F03               	moviw [3]fsr0
 19354  1AE3  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 19355  1AE4  0820               	movf	??_vfpfcnvrt^(0+256),w
 19356  1AE5  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19357  1AE6  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19358  1AE7  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19359  1AE8  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19360  1AE9  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 19361  1AEA  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 19362  1AEB  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 19363  1AEC  3000               	movlw	0
 19364  1AED  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 19365  1AEE  30FF               	movlw	255
 19366  1AEF  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 19367  1AF0  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 19368  1AF1  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 19369  1AF2  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 19370                           
 19371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 19372  1AF3  0021               	movlb	1	; select bank1
 19373  1AF4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19374  1AF5  0020               	movlb	0	; select bank0
 19375  1AF6  00B1               	movwf	dtoa@fp+1
 19376  1AF7  0021               	movlb	1	; select bank1
 19377  1AF8  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19378  1AF9  0020               	movlb	0	; select bank0
 19379  1AFA  00B0               	movwf	dtoa@fp
 19380  1AFB  0022               	movlb	2	; select bank2
 19381  1AFC  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19382  1AFD  0020               	movlb	0	; select bank0
 19383  1AFE  00B2               	movwf	dtoa@d
 19384  1AFF  0022               	movlb	2	; select bank2
 19385  1B00  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19386  1B01  0020               	movlb	0	; select bank0
 19387  1B02  00B3               	movwf	dtoa@d+1
 19388  1B03  0022               	movlb	2	; select bank2
 19389  1B04  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19390  1B05  0020               	movlb	0	; select bank0
 19391  1B06  00B4               	movwf	dtoa@d+2
 19392  1B07  0022               	movlb	2	; select bank2
 19393  1B08  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19394  1B09  0020               	movlb	0	; select bank0
 19395  1B0A  00B5               	movwf	dtoa@d+3
 19396  1B0B  0022               	movlb	2	; select bank2
 19397  1B0C  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19398  1B0D  0020               	movlb	0	; select bank0
 19399  1B0E  00B6               	movwf	dtoa@d+4
 19400  1B0F  0022               	movlb	2	; select bank2
 19401  1B10  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19402  1B11  0020               	movlb	0	; select bank0
 19403  1B12  00B7               	movwf	dtoa@d+5
 19404  1B13  0022               	movlb	2	; select bank2
 19405  1B14  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19406  1B15  0020               	movlb	0	; select bank0
 19407  1B16  00B8               	movwf	dtoa@d+6
 19408  1B17  0022               	movlb	2	; select bank2
 19409  1B18  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19410  1B19  0020               	movlb	0	; select bank0
 19411  1B1A  00B9               	movwf	dtoa@d+7
 19412  1B1B  319D  2554         	fcall	_dtoa
 19413  1B1D  0020               	movlb	0	; select bank0
 19414  1B1E  0831               	movf	?_dtoa+1,w
 19415  1B1F  0021               	movlb	1	; select bank1
 19416  1B20  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19417  1B21  0020               	movlb	0	; select bank0
 19418  1B22  0830               	movf	?_dtoa,w
 19419  1B23  0021               	movlb	1	; select bank1
 19420  1B24  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19421  1B25  0008               	return
 19422  1B26                     L22:	
 19423  1B26                     L21:	
 19424  1B26  31A3  2BAF         	ljmp	l7747
 19425                           
 19426                           	psect	text5_split_4
 19427  23AF                     l7747:	
 19428                           
 19429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 19430  23AF  0021               	movlb	1	; select bank1
 19431  23B0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19432  23B1  0086               	movwf	6
 19433  23B2  0187               	clrf	7
 19434  23B3  3F40               	moviw [0]fsr1
 19435  23B4  00F1               	movwf	strncmp@_l
 19436  23B5  3F41               	moviw [1]fsr1
 19437  23B6  00F2               	movwf	strncmp@_l+1
 19438  23B7  30F0               	movlw	low (STR_46| (0+32768))
 19439  23B8  00F3               	movwf	strncmp@_r
 19440  23B9  30B9               	movlw	high (STR_46| (0+32768))
 19441  23BA  00F4               	movwf	strncmp@_r+1
 19442  23BB  3002               	movlw	2
 19443  23BC  00F5               	movwf	strncmp@n
 19444  23BD  3000               	movlw	0
 19445  23BE  00F6               	movwf	strncmp@n+1
 19446  23BF  31AA  222E  31A3   	fcall	_strncmp
 19447  23C2  0871               	movf	?_strncmp,w
 19448  23C3  0472               	iorwf	?_strncmp+1,w
 19449  23C4  1903               	btfsc	3,2
 19450  23C5  2BDD               	goto	l7751
 19451  23C6  0021               	movlb	1	; select bank1
 19452  23C7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19453  23C8  0086               	movwf	6
 19454  23C9  0187               	clrf	7
 19455  23CA  3F40               	moviw [0]fsr1
 19456  23CB  00F1               	movwf	strncmp@_l
 19457  23CC  3F41               	moviw [1]fsr1
 19458  23CD  00F2               	movwf	strncmp@_l+1
 19459  23CE  30F9               	movlw	low (STR_50| (0+32768))
 19460  23CF  00F3               	movwf	strncmp@_r
 19461  23D0  30B9               	movlw	high (STR_50| (0+32768))
 19462  23D1  00F4               	movwf	strncmp@_r+1
 19463  23D2  3002               	movlw	2
 19464  23D3  00F5               	movwf	strncmp@n
 19465  23D4  3000               	movlw	0
 19466  23D5  00F6               	movwf	strncmp@n+1
 19467  23D6  31AA  222E  31A3   	fcall	_strncmp
 19468  23D9  0871               	movf	?_strncmp,w
 19469  23DA  0472               	iorwf	?_strncmp+1,w
 19470  23DB  1D03               	btfss	3,2
 19471  23DC  2C2E               	goto	l7759
 19472  23DD                     l7751:	
 19473                           
 19474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 19475  23DD  0021               	movlb	1	; select bank1
 19476  23DE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19477  23DF  0086               	movwf	6
 19478  23E0  0187               	clrf	7
 19479  23E1  3002               	movlw	2
 19480  23E2  0781               	addwf	1,f
 19481  23E3  3141               	addfsr 1,1
 19482  23E4  1803               	skipnc
 19483  23E5  0A81               	incf	1,f
 19484                           
 19485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19486  23E6  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19487  23E7  0086               	movwf	6
 19488  23E8  3001               	movlw	1	; select bank2/3
 19489  23E9  0087               	movwf	7
 19490  23EA  0801               	movf	1,w
 19491  23EB  0084               	movwf	4
 19492  23EC  3001               	movlw	1	; select bank2/3
 19493  23ED  0085               	movwf	5
 19494  23EE  3002               	movlw	2
 19495  23EF  0781               	addwf	1,f
 19496  23F0  3F00               	moviw [0]fsr0
 19497  23F1  0022               	movlb	2	; select bank2
 19498  23F2  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 19499  23F3  3F01               	moviw [1]fsr0
 19500  23F4  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 19501  23F5  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 19502  23F6  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 19503  23F7  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 19504  23F8  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 19505  23F9  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 19506  23FA  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 19507                           
 19508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 19509  23FB  0021               	movlb	1	; select bank1
 19510  23FC  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19511  23FD  0020               	movlb	0	; select bank0
 19512  23FE  00B1               	movwf	dtoa@fp+1
 19513  23FF  0021               	movlb	1	; select bank1
 19514  2400  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19515  2401  0020               	movlb	0	; select bank0
 19516  2402  00B0               	movwf	dtoa@fp
 19517  2403  0022               	movlb	2	; select bank2
 19518  2404  083C               	movf	vfpfcnvrt@ll^(0+256),w
 19519  2405  0020               	movlb	0	; select bank0
 19520  2406  00B2               	movwf	dtoa@d
 19521  2407  0022               	movlb	2	; select bank2
 19522  2408  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 19523  2409  0020               	movlb	0	; select bank0
 19524  240A  00B3               	movwf	dtoa@d+1
 19525  240B  0022               	movlb	2	; select bank2
 19526  240C  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 19527  240D  0020               	movlb	0	; select bank0
 19528  240E  00B4               	movwf	dtoa@d+2
 19529  240F  0022               	movlb	2	; select bank2
 19530  2410  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 19531  2411  0020               	movlb	0	; select bank0
 19532  2412  00B5               	movwf	dtoa@d+3
 19533  2413  0022               	movlb	2	; select bank2
 19534  2414  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 19535  2415  0020               	movlb	0	; select bank0
 19536  2416  00B6               	movwf	dtoa@d+4
 19537  2417  0022               	movlb	2	; select bank2
 19538  2418  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 19539  2419  0020               	movlb	0	; select bank0
 19540  241A  00B7               	movwf	dtoa@d+5
 19541  241B  0022               	movlb	2	; select bank2
 19542  241C  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 19543  241D  0020               	movlb	0	; select bank0
 19544  241E  00B8               	movwf	dtoa@d+6
 19545  241F  0022               	movlb	2	; select bank2
 19546  2420  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 19547  2421  0020               	movlb	0	; select bank0
 19548  2422  00B9               	movwf	dtoa@d+7
 19549  2423  319D  2554         	fcall	_dtoa
 19550  2425  0020               	movlb	0	; select bank0
 19551  2426  0831               	movf	?_dtoa+1,w
 19552  2427  0021               	movlb	1	; select bank1
 19553  2428  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19554  2429  0020               	movlb	0	; select bank0
 19555  242A  0830               	movf	?_dtoa,w
 19556  242B  0021               	movlb	1	; select bank1
 19557  242C  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19558  242D  0008               	return
 19559  242E                     l7759:	
 19560                           
 19561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 19562  242E  3066               	movlw	102
 19563  242F  0022               	movlb	2	; select bank2
 19564  2430  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 19565  2431  1D03               	btfss	3,2
 19566  2432  2C83               	goto	L24
 19567                           
 19568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 19569  2433  0021               	movlb	1	; select bank1
 19570  2434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19571  2435  0086               	movwf	6
 19572  2436  0187               	clrf	7
 19573  2437  3F40               	moviw [0]fsr1
 19574  2438  0022               	movlb	2	; select bank2
 19575  2439  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19576  243A  3F41               	moviw [1]fsr1
 19577  243B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19578  243C  0820               	movf	??_vfpfcnvrt^(0+256),w
 19579  243D  0084               	movwf	4
 19580  243E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19581  243F  0085               	movwf	5
 19582  2440  0800               	movf	0,w	;code access
 19583  2441  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19584  2442  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19585  2443  00C5               	movwf	vfpfcnvrt@c^(0+256)
 19586                           
 19587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 19588  2444  0021               	movlb	1	; select bank1
 19589  2445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19590  2446  0086               	movwf	6
 19591  2447  0187               	clrf	7
 19592  2448  3001               	movlw	1
 19593  2449  0781               	addwf	1,f
 19594  244A  3141               	addfsr 1,1
 19595  244B  1803               	skipnc
 19596  244C  0A81               	incf	1,f
 19597                           
 19598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 19599  244D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19600  244E  0086               	movwf	6
 19601  244F  3001               	movlw	1	; select bank2/3
 19602  2450  0087               	movwf	7
 19603  2451  0801               	movf	1,w
 19604  2452  0084               	movwf	4
 19605  2453  3001               	movlw	1	; select bank2/3
 19606  2454  0085               	movwf	5
 19607  2455  3004               	movlw	4
 19608  2456  0781               	addwf	1,f
 19609  2457  3F00               	moviw [0]fsr0
 19610  2458  0022               	movlb	2	; select bank2
 19611  2459  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19612  245A  3F01               	moviw [1]fsr0
 19613  245B  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19614  245C  3F02               	moviw [2]fsr0
 19615  245D  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19616  245E  3F03               	moviw [3]fsr0
 19617  245F  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 19618                           
 19619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 19620  2460  0021               	movlb	1	; select bank1
 19621  2461  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19622  2462  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 19623  2463  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19624  2464  00A0               	movwf	efgtoa@fp^(0+128)
 19625  2465  0022               	movlb	2	; select bank2
 19626  2466  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 19627  2467  0021               	movlb	1	; select bank1
 19628  2468  00A5               	movwf	(efgtoa@f+3)^(0+128)
 19629  2469  0022               	movlb	2	; select bank2
 19630  246A  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 19631  246B  0021               	movlb	1	; select bank1
 19632  246C  00A4               	movwf	(efgtoa@f+2)^(0+128)
 19633  246D  0022               	movlb	2	; select bank2
 19634  246E  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 19635  246F  0021               	movlb	1	; select bank1
 19636  2470  00A3               	movwf	(efgtoa@f+1)^(0+128)
 19637  2471  0022               	movlb	2	; select bank2
 19638  2472  0838               	movf	vfpfcnvrt@f^(0+256),w
 19639  2473  0021               	movlb	1	; select bank1
 19640  2474  00A2               	movwf	efgtoa@f^(0+128)
 19641  2475  0022               	movlb	2	; select bank2
 19642  2476  0845               	movf	vfpfcnvrt@c^(0+256),w
 19643  2477  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19644  2478  0820               	movf	??_vfpfcnvrt^(0+256),w
 19645  2479  0021               	movlb	1	; select bank1
 19646  247A  00A6               	movwf	efgtoa@c^(0+128)
 19647  247B  3180  2058         	fcall	_efgtoa
 19648  247D  0021               	movlb	1	; select bank1
 19649  247E  0821               	movf	(?_efgtoa+1)^(0+128),w
 19650  247F  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19651  2480  0820               	movf	?_efgtoa^(0+128),w
 19652  2481  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19653  2482  0008               	return
 19654  2483                     L24:	
 19655  2483                     L23:	
 19656  2483  31A0  2819         	ljmp	l7771
 19657                           
 19658                           	psect	text5_split_5
 19659  2019                     l7771:	
 19660                           
 19661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 19662  2019  3035               	movlw	low vfpfcnvrt@ct
 19663  201A  00F1               	movwf	strncmp@_l
 19664  201B  3001               	movlw	high vfpfcnvrt@ct
 19665  201C  00F2               	movwf	strncmp@_l+1
 19666  201D  30F3               	movlw	low (STR_55| (0+32768))
 19667  201E  00F3               	movwf	strncmp@_r
 19668  201F  30B9               	movlw	high (STR_55| (0+32768))
 19669  2020  00F4               	movwf	strncmp@_r+1
 19670  2021  3002               	movlw	2
 19671  2022  00F5               	movwf	strncmp@n
 19672  2023  3000               	movlw	0
 19673  2024  00F6               	movwf	strncmp@n+1
 19674  2025  31AA  222E  31A0   	fcall	_strncmp
 19675  2028  0871               	movf	?_strncmp,w
 19676  2029  0472               	iorwf	?_strncmp+1,w
 19677  202A  1D03               	btfss	3,2
 19678  202B  28BB               	goto	L26
 19679                           
 19680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 19681  202C  0021               	movlb	1	; select bank1
 19682  202D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19683  202E  0086               	movwf	6
 19684  202F  0187               	clrf	7
 19685  2030  3F40               	moviw [0]fsr1
 19686  2031  0022               	movlb	2	; select bank2
 19687  2032  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19688  2033  3F41               	moviw [1]fsr1
 19689  2034  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19690  2035  3001               	movlw	1
 19691  2036  0720               	addwf	??_vfpfcnvrt^(0+256),w
 19692  2037  0084               	movwf	4
 19693  2038  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 19694  2039  1803               	skipnc
 19695  203A  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 19696  203B  0085               	movwf	5
 19697  203C  0800               	movf	0,w	;code access
 19698  203D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19699  203E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19700  203F  00C5               	movwf	vfpfcnvrt@c^(0+256)
 19701  2040  0021               	movlb	1	; select bank1
 19702  2041  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19703  2042  0086               	movwf	6
 19704  2043  0187               	clrf	7
 19705  2044  3F40               	moviw [0]fsr1
 19706  2045  0022               	movlb	2	; select bank2
 19707  2046  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19708  2047  3F41               	moviw [1]fsr1
 19709  2048  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19710  2049  0820               	movf	??_vfpfcnvrt^(0+256),w
 19711  204A  0084               	movwf	4
 19712  204B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19713  204C  0085               	movwf	5
 19714  204D  0800               	movf	0,w	;code access
 19715  204E  3EBF               	addlw	191
 19716  204F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19717  2050  30FF               	movlw	255
 19718  2051  1803               	skipnc
 19719  2052  3000               	movlw	0
 19720  2053  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 19721  2054  3000               	movlw	0
 19722  2055  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 19723  2056  301A               	movlw	26
 19724  2057  1903               	skipnz
 19725  2058  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 19726  2059  1803               	btfsc	3,0
 19727  205A  285D               	goto	u11480
 19728  205B  3001               	movlw	1
 19729  205C  285E               	goto	u11490
 19730  205D                     u11480:	
 19731  205D  3000               	movlw	0
 19732  205E                     u11490:	
 19733  205E  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 19734  205F  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 19735  2060  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 19736  2061  00B3               	movwf	_vfpfcnvrt$1105^(0+256)
 19737  2062  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 19738  2063  00B4               	movwf	(_vfpfcnvrt$1105+1)^(0+256)
 19739  2064  0833               	movf	_vfpfcnvrt$1105^(0+256),w
 19740  2065  0434               	iorwf	(_vfpfcnvrt$1105+1)^(0+256),w
 19741  2066  1903               	btfsc	3,2
 19742  2067  287C               	goto	l7781
 19743                           
 19744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 19745  2068  0021               	movlb	1	; select bank1
 19746  2069  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19747  206A  0086               	movwf	6
 19748  206B  3001               	movlw	1	; select bank2/3
 19749  206C  0087               	movwf	7
 19750  206D  0801               	movf	1,w
 19751  206E  0084               	movwf	4
 19752  206F  3001               	movlw	1	; select bank2/3
 19753  2070  0085               	movwf	5
 19754  2071  3004               	movlw	4
 19755  2072  0781               	addwf	1,f
 19756  2073  3F00               	moviw [0]fsr0
 19757  2074  0022               	movlb	2	; select bank2
 19758  2075  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19759  2076  3F01               	moviw [1]fsr0
 19760  2077  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19761  2078  3F02               	moviw [2]fsr0
 19762  2079  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19763  207A  3F03               	moviw [3]fsr0
 19764  207B  288F               	goto	L1
 19765  207C                     l7781:	
 19766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 19767                           
 19768                           
 19769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 19770  207C  0021               	movlb	1	; select bank1
 19771  207D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19772  207E  0086               	movwf	6
 19773  207F  3001               	movlw	1	; select bank2/3
 19774  2080  0087               	movwf	7
 19775  2081  0801               	movf	1,w
 19776  2082  0084               	movwf	4
 19777  2083  3001               	movlw	1	; select bank2/3
 19778  2084  0085               	movwf	5
 19779  2085  3004               	movlw	4
 19780  2086  0781               	addwf	1,f
 19781  2087  3F00               	moviw [0]fsr0
 19782  2088  0022               	movlb	2	; select bank2
 19783  2089  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19784  208A  3F01               	moviw [1]fsr0
 19785  208B  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19786  208C  3F02               	moviw [2]fsr0
 19787  208D  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19788  208E  3F03               	moviw [3]fsr0
 19789  208F                     L1:	
 19790  208F  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 19791                           
 19792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 19793  2090  0021               	movlb	1	; select bank1
 19794  2091  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19795  2092  0086               	movwf	6
 19796  2093  0187               	clrf	7
 19797  2094  3002               	movlw	2
 19798  2095  0781               	addwf	1,f
 19799  2096  3141               	addfsr 1,1
 19800  2097  1803               	skipnc
 19801  2098  0A81               	incf	1,f
 19802                           
 19803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 19804  2099  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19805  209A  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 19806  209B  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19807  209C  00A0               	movwf	efgtoa@fp^(0+128)
 19808  209D  0022               	movlb	2	; select bank2
 19809  209E  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 19810  209F  0021               	movlb	1	; select bank1
 19811  20A0  00A5               	movwf	(efgtoa@f+3)^(0+128)
 19812  20A1  0022               	movlb	2	; select bank2
 19813  20A2  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 19814  20A3  0021               	movlb	1	; select bank1
 19815  20A4  00A4               	movwf	(efgtoa@f+2)^(0+128)
 19816  20A5  0022               	movlb	2	; select bank2
 19817  20A6  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 19818  20A7  0021               	movlb	1	; select bank1
 19819  20A8  00A3               	movwf	(efgtoa@f+1)^(0+128)
 19820  20A9  0022               	movlb	2	; select bank2
 19821  20AA  0838               	movf	vfpfcnvrt@f^(0+256),w
 19822  20AB  0021               	movlb	1	; select bank1
 19823  20AC  00A2               	movwf	efgtoa@f^(0+128)
 19824  20AD  0022               	movlb	2	; select bank2
 19825  20AE  0845               	movf	vfpfcnvrt@c^(0+256),w
 19826  20AF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19827  20B0  0820               	movf	??_vfpfcnvrt^(0+256),w
 19828  20B1  0021               	movlb	1	; select bank1
 19829  20B2  00A6               	movwf	efgtoa@c^(0+128)
 19830  20B3  3180  2058         	fcall	_efgtoa
 19831  20B5  0021               	movlb	1	; select bank1
 19832  20B6  0821               	movf	(?_efgtoa+1)^(0+128),w
 19833  20B7  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19834  20B8  0820               	movf	?_efgtoa^(0+128),w
 19835  20B9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19836  20BA  0008               	return
 19837  20BB                     L26:	
 19838  20BB                     L25:	
 19839  20BB  31A2  2ADE         	ljmp	l7789
 19840                           
 19841                           	psect	text5_split_6
 19842  22DE                     l7789:	
 19843                           
 19844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 19845  22DE  0021               	movlb	1	; select bank1
 19846  22DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19847  22E0  0086               	movwf	6
 19848  22E1  0187               	clrf	7
 19849  22E2  3F40               	moviw [0]fsr1
 19850  22E3  00F1               	movwf	strncmp@_l
 19851  22E4  3F41               	moviw [1]fsr1
 19852  22E5  00F2               	movwf	strncmp@_l+1
 19853  22E6  30DB               	movlw	low (STR_60| (0+32768))
 19854  22E7  00F3               	movwf	strncmp@_r
 19855  22E8  30B9               	movlw	high (STR_60| (0+32768))
 19856  22E9  00F4               	movwf	strncmp@_r+1
 19857  22EA  3003               	movlw	3
 19858  22EB  00F5               	movwf	strncmp@n
 19859  22EC  3000               	movlw	0
 19860  22ED  00F6               	movwf	strncmp@n+1
 19861  22EE  31AA  222E  31A2   	fcall	_strncmp
 19862  22F1  0871               	movf	?_strncmp,w
 19863  22F2  0472               	iorwf	?_strncmp+1,w
 19864  22F3  1D03               	btfss	3,2
 19865  22F4  2B45               	goto	l7799
 19866                           
 19867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 19868  22F5  0021               	movlb	1	; select bank1
 19869  22F6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19870  22F7  0086               	movwf	6
 19871  22F8  0187               	clrf	7
 19872  22F9  3003               	movlw	3
 19873  22FA  0781               	addwf	1,f
 19874  22FB  3141               	addfsr 1,1
 19875  22FC  1803               	skipnc
 19876  22FD  0A81               	incf	1,f
 19877                           
 19878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19879  22FE  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19880  22FF  0086               	movwf	6
 19881  2300  3001               	movlw	1	; select bank2/3
 19882  2301  0087               	movwf	7
 19883  2302  0801               	movf	1,w
 19884  2303  0084               	movwf	4
 19885  2304  3001               	movlw	1	; select bank2/3
 19886  2305  0085               	movwf	5
 19887  2306  3002               	movlw	2
 19888  2307  0781               	addwf	1,f
 19889  2308  0800               	movf	0,w
 19890  2309  0022               	movlb	2	; select bank2
 19891  230A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19892  230B  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 19893  230C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19894  230D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19895  230E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19896  230F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19897  2310  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19898  2311  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19899                           
 19900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 19901  2312  0021               	movlb	1	; select bank1
 19902  2313  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19903  2314  0020               	movlb	0	; select bank0
 19904  2315  00B1               	movwf	otoa@fp+1
 19905  2316  0021               	movlb	1	; select bank1
 19906  2317  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19907  2318  0020               	movlb	0	; select bank0
 19908  2319  00B0               	movwf	otoa@fp
 19909  231A  0022               	movlb	2	; select bank2
 19910  231B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19911  231C  0020               	movlb	0	; select bank0
 19912  231D  00B2               	movwf	otoa@d
 19913  231E  0022               	movlb	2	; select bank2
 19914  231F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19915  2320  0020               	movlb	0	; select bank0
 19916  2321  00B3               	movwf	otoa@d+1
 19917  2322  0022               	movlb	2	; select bank2
 19918  2323  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19919  2324  0020               	movlb	0	; select bank0
 19920  2325  00B4               	movwf	otoa@d+2
 19921  2326  0022               	movlb	2	; select bank2
 19922  2327  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19923  2328  0020               	movlb	0	; select bank0
 19924  2329  00B5               	movwf	otoa@d+3
 19925  232A  0022               	movlb	2	; select bank2
 19926  232B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19927  232C  0020               	movlb	0	; select bank0
 19928  232D  00B6               	movwf	otoa@d+4
 19929  232E  0022               	movlb	2	; select bank2
 19930  232F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19931  2330  0020               	movlb	0	; select bank0
 19932  2331  00B7               	movwf	otoa@d+5
 19933  2332  0022               	movlb	2	; select bank2
 19934  2333  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19935  2334  0020               	movlb	0	; select bank0
 19936  2335  00B8               	movwf	otoa@d+6
 19937  2336  0022               	movlb	2	; select bank2
 19938  2337  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19939  2338  0020               	movlb	0	; select bank0
 19940  2339  00B9               	movwf	otoa@d+7
 19941  233A  3198  203C         	fcall	_otoa
 19942  233C  0020               	movlb	0	; select bank0
 19943  233D  0831               	movf	?_otoa+1,w
 19944  233E  0021               	movlb	1	; select bank1
 19945  233F  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19946  2340  0020               	movlb	0	; select bank0
 19947  2341  0830               	movf	?_otoa,w
 19948  2342  0021               	movlb	1	; select bank1
 19949  2343  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19950  2344  0008               	return
 19951  2345                     l7799:	
 19952                           
 19953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 19954  2345  0021               	movlb	1	; select bank1
 19955  2346  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19956  2347  0086               	movwf	6
 19957  2348  0187               	clrf	7
 19958  2349  3F40               	moviw [0]fsr1
 19959  234A  00F1               	movwf	strncmp@_l
 19960  234B  3F41               	moviw [1]fsr1
 19961  234C  00F2               	movwf	strncmp@_l+1
 19962  234D  30DC               	movlw	low ((STR_60+1)| (0+32768))
 19963  234E  00F3               	movwf	strncmp@_r
 19964  234F  30B9               	movlw	high ((STR_60+1)| (0+32768))
 19965  2350  00F4               	movwf	strncmp@_r+1
 19966  2351  3002               	movlw	2
 19967  2352  00F5               	movwf	strncmp@n
 19968  2353  3000               	movlw	0
 19969  2354  00F6               	movwf	strncmp@n+1
 19970  2355  31AA  222E  31A2   	fcall	_strncmp
 19971  2358  0871               	movf	?_strncmp,w
 19972  2359  0472               	iorwf	?_strncmp+1,w
 19973  235A  1D03               	btfss	3,2
 19974  235B  2BAD               	goto	L28
 19975                           
 19976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 19977  235C  0021               	movlb	1	; select bank1
 19978  235D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19979  235E  0086               	movwf	6
 19980  235F  0187               	clrf	7
 19981  2360  3002               	movlw	2
 19982  2361  0781               	addwf	1,f
 19983  2362  3141               	addfsr 1,1
 19984  2363  1803               	skipnc
 19985  2364  0A81               	incf	1,f
 19986                           
 19987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19988  2365  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19989  2366  0086               	movwf	6
 19990  2367  3001               	movlw	1	; select bank2/3
 19991  2368  0087               	movwf	7
 19992  2369  0801               	movf	1,w
 19993  236A  0084               	movwf	4
 19994  236B  3001               	movlw	1	; select bank2/3
 19995  236C  0085               	movwf	5
 19996  236D  3002               	movlw	2
 19997  236E  0781               	addwf	1,f
 19998  236F  3F00               	moviw [0]fsr0
 19999  2370  0022               	movlb	2	; select bank2
 20000  2371  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20001  2372  3F01               	moviw [1]fsr0
 20002  2373  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20003  2374  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20004  2375  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20005  2376  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20006  2377  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20007  2378  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20008  2379  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20009                           
 20010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 20011  237A  0021               	movlb	1	; select bank1
 20012  237B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20013  237C  0020               	movlb	0	; select bank0
 20014  237D  00B1               	movwf	otoa@fp+1
 20015  237E  0021               	movlb	1	; select bank1
 20016  237F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20017  2380  0020               	movlb	0	; select bank0
 20018  2381  00B0               	movwf	otoa@fp
 20019  2382  0022               	movlb	2	; select bank2
 20020  2383  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20021  2384  0020               	movlb	0	; select bank0
 20022  2385  00B2               	movwf	otoa@d
 20023  2386  0022               	movlb	2	; select bank2
 20024  2387  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20025  2388  0020               	movlb	0	; select bank0
 20026  2389  00B3               	movwf	otoa@d+1
 20027  238A  0022               	movlb	2	; select bank2
 20028  238B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20029  238C  0020               	movlb	0	; select bank0
 20030  238D  00B4               	movwf	otoa@d+2
 20031  238E  0022               	movlb	2	; select bank2
 20032  238F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20033  2390  0020               	movlb	0	; select bank0
 20034  2391  00B5               	movwf	otoa@d+3
 20035  2392  0022               	movlb	2	; select bank2
 20036  2393  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20037  2394  0020               	movlb	0	; select bank0
 20038  2395  00B6               	movwf	otoa@d+4
 20039  2396  0022               	movlb	2	; select bank2
 20040  2397  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20041  2398  0020               	movlb	0	; select bank0
 20042  2399  00B7               	movwf	otoa@d+5
 20043  239A  0022               	movlb	2	; select bank2
 20044  239B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20045  239C  0020               	movlb	0	; select bank0
 20046  239D  00B8               	movwf	otoa@d+6
 20047  239E  0022               	movlb	2	; select bank2
 20048  239F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20049  23A0  0020               	movlb	0	; select bank0
 20050  23A1  00B9               	movwf	otoa@d+7
 20051  23A2  3198  203C         	fcall	_otoa
 20052  23A4  0020               	movlb	0	; select bank0
 20053  23A5  0831               	movf	?_otoa+1,w
 20054  23A6  0021               	movlb	1	; select bank1
 20055  23A7  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20056  23A8  0020               	movlb	0	; select bank0
 20057  23A9  0830               	movf	?_otoa,w
 20058  23AA  0021               	movlb	1	; select bank1
 20059  23AB  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20060  23AC  0008               	return
 20061  23AD                     L28:	
 20062  23AD                     L27:	
 20063  23AD  31A7  2F1A         	ljmp	l7809
 20064                           
 20065                           	psect	text5_split_7
 20066  271A                     l7809:	
 20067                           
 20068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 20069  271A  0021               	movlb	1	; select bank1
 20070  271B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20071  271C  0086               	movwf	6
 20072  271D  0187               	clrf	7
 20073  271E  3F40               	moviw [0]fsr1
 20074  271F  0022               	movlb	2	; select bank2
 20075  2720  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20076  2721  3F41               	moviw [1]fsr1
 20077  2722  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20078  2723  0820               	movf	??_vfpfcnvrt^(0+256),w
 20079  2724  0084               	movwf	4
 20080  2725  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20081  2726  0085               	movwf	5
 20082  2727  0012               	moviw fsr0++
 20083  2728  3A6F               	xorlw	111
 20084  2729  1D03               	btfss	3,2
 20085  272A  2F7C               	goto	l7819
 20086                           
 20087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 20088  272B  0021               	movlb	1	; select bank1
 20089  272C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20090  272D  0086               	movwf	6
 20091  272E  0187               	clrf	7
 20092  272F  3001               	movlw	1
 20093  2730  0781               	addwf	1,f
 20094  2731  3141               	addfsr 1,1
 20095  2732  1803               	skipnc
 20096  2733  0A81               	incf	1,f
 20097                           
 20098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 20099  2734  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20100  2735  0086               	movwf	6
 20101  2736  3001               	movlw	1	; select bank2/3
 20102  2737  0087               	movwf	7
 20103  2738  0801               	movf	1,w
 20104  2739  0084               	movwf	4
 20105  273A  3001               	movlw	1	; select bank2/3
 20106  273B  0085               	movwf	5
 20107  273C  3002               	movlw	2
 20108  273D  0781               	addwf	1,f
 20109  273E  3F00               	moviw [0]fsr0
 20110  273F  0022               	movlb	2	; select bank2
 20111  2740  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20112  2741  3F01               	moviw [1]fsr0
 20113  2742  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20114  2743  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20115  2744  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20116  2745  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20117  2746  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20118  2747  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20119  2748  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20120                           
 20121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 20122  2749  0021               	movlb	1	; select bank1
 20123  274A  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20124  274B  0020               	movlb	0	; select bank0
 20125  274C  00B1               	movwf	otoa@fp+1
 20126  274D  0021               	movlb	1	; select bank1
 20127  274E  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20128  274F  0020               	movlb	0	; select bank0
 20129  2750  00B0               	movwf	otoa@fp
 20130  2751  0022               	movlb	2	; select bank2
 20131  2752  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20132  2753  0020               	movlb	0	; select bank0
 20133  2754  00B2               	movwf	otoa@d
 20134  2755  0022               	movlb	2	; select bank2
 20135  2756  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20136  2757  0020               	movlb	0	; select bank0
 20137  2758  00B3               	movwf	otoa@d+1
 20138  2759  0022               	movlb	2	; select bank2
 20139  275A  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20140  275B  0020               	movlb	0	; select bank0
 20141  275C  00B4               	movwf	otoa@d+2
 20142  275D  0022               	movlb	2	; select bank2
 20143  275E  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20144  275F  0020               	movlb	0	; select bank0
 20145  2760  00B5               	movwf	otoa@d+3
 20146  2761  0022               	movlb	2	; select bank2
 20147  2762  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20148  2763  0020               	movlb	0	; select bank0
 20149  2764  00B6               	movwf	otoa@d+4
 20150  2765  0022               	movlb	2	; select bank2
 20151  2766  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20152  2767  0020               	movlb	0	; select bank0
 20153  2768  00B7               	movwf	otoa@d+5
 20154  2769  0022               	movlb	2	; select bank2
 20155  276A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20156  276B  0020               	movlb	0	; select bank0
 20157  276C  00B8               	movwf	otoa@d+6
 20158  276D  0022               	movlb	2	; select bank2
 20159  276E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20160  276F  0020               	movlb	0	; select bank0
 20161  2770  00B9               	movwf	otoa@d+7
 20162  2771  3198  203C         	fcall	_otoa
 20163  2773  0020               	movlb	0	; select bank0
 20164  2774  0831               	movf	?_otoa+1,w
 20165  2775  0021               	movlb	1	; select bank1
 20166  2776  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20167  2777  0020               	movlb	0	; select bank0
 20168  2778  0830               	movf	?_otoa,w
 20169  2779  0021               	movlb	1	; select bank1
 20170  277A  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20171  277B  0008               	return
 20172  277C                     l7819:	
 20173                           
 20174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 20175  277C  0021               	movlb	1	; select bank1
 20176  277D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20177  277E  0086               	movwf	6
 20178  277F  0187               	clrf	7
 20179  2780  3F40               	moviw [0]fsr1
 20180  2781  00F1               	movwf	strncmp@_l
 20181  2782  3F41               	moviw [1]fsr1
 20182  2783  00F2               	movwf	strncmp@_l+1
 20183  2784  3002               	movlw	low (STR_70| (0+32768))
 20184  2785  00F3               	movwf	strncmp@_r
 20185  2786  30BA               	movlw	high (STR_70| (0+32768))
 20186  2787  00F4               	movwf	strncmp@_r+1
 20187  2788  3002               	movlw	2
 20188  2789  00F5               	movwf	strncmp@n
 20189  278A  3000               	movlw	0
 20190  278B  00F6               	movwf	strncmp@n+1
 20191  278C  31AA  222E  31A7   	fcall	_strncmp
 20192  278F  0871               	movf	?_strncmp,w
 20193  2790  0472               	iorwf	?_strncmp+1,w
 20194  2791  1D03               	btfss	3,2
 20195  2792  2FFE               	goto	L30
 20196                           
 20197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 20198  2793  0021               	movlb	1	; select bank1
 20199  2794  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20200  2795  0086               	movwf	6
 20201  2796  0187               	clrf	7
 20202  2797  3002               	movlw	2
 20203  2798  0781               	addwf	1,f
 20204  2799  3141               	addfsr 1,1
 20205  279A  1803               	skipnc
 20206  279B  0A81               	incf	1,f
 20207                           
 20208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 20209  279C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20210  279D  0086               	movwf	6
 20211  279E  3001               	movlw	1	; select bank2/3
 20212  279F  0087               	movwf	7
 20213  27A0  0801               	movf	1,w
 20214  27A1  0084               	movwf	4
 20215  27A2  3001               	movlw	1	; select bank2/3
 20216  27A3  0085               	movwf	5
 20217  27A4  3004               	movlw	4
 20218  27A5  0781               	addwf	1,f
 20219  27A6  3F00               	moviw [0]fsr0
 20220  27A7  0022               	movlb	2	; select bank2
 20221  27A8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20222  27A9  3F01               	moviw [1]fsr0
 20223  27AA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20224  27AB  3F02               	moviw [2]fsr0
 20225  27AC  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20226  27AD  3F03               	moviw [3]fsr0
 20227  27AE  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20228  27AF  0820               	movf	??_vfpfcnvrt^(0+256),w
 20229  27B0  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 20230  27B1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20231  27B2  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 20232  27B3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20233  27B4  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 20234  27B5  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20235  27B6  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 20236  27B7  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 20237  27B8  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 20238  27B9  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 20239  27BA  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 20240  27BB  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 20241  27BC  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20242  27BD  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 20243  27BE  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20244  27BF  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 20245  27C0  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20246  27C1  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 20247  27C2  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20248  27C3  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 20249  27C4  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20250  27C5  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 20251  27C6  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20252  27C7  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 20253  27C8  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20254  27C9  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 20255  27CA  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20256                           
 20257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 20258  27CB  0021               	movlb	1	; select bank1
 20259  27CC  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20260  27CD  0020               	movlb	0	; select bank0
 20261  27CE  00B1               	movwf	otoa@fp+1
 20262  27CF  0021               	movlb	1	; select bank1
 20263  27D0  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20264  27D1  0020               	movlb	0	; select bank0
 20265  27D2  00B0               	movwf	otoa@fp
 20266  27D3  0022               	movlb	2	; select bank2
 20267  27D4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20268  27D5  0020               	movlb	0	; select bank0
 20269  27D6  00B2               	movwf	otoa@d
 20270  27D7  0022               	movlb	2	; select bank2
 20271  27D8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20272  27D9  0020               	movlb	0	; select bank0
 20273  27DA  00B3               	movwf	otoa@d+1
 20274  27DB  0022               	movlb	2	; select bank2
 20275  27DC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20276  27DD  0020               	movlb	0	; select bank0
 20277  27DE  00B4               	movwf	otoa@d+2
 20278  27DF  0022               	movlb	2	; select bank2
 20279  27E0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20280  27E1  0020               	movlb	0	; select bank0
 20281  27E2  00B5               	movwf	otoa@d+3
 20282  27E3  0022               	movlb	2	; select bank2
 20283  27E4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20284  27E5  0020               	movlb	0	; select bank0
 20285  27E6  00B6               	movwf	otoa@d+4
 20286  27E7  0022               	movlb	2	; select bank2
 20287  27E8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20288  27E9  0020               	movlb	0	; select bank0
 20289  27EA  00B7               	movwf	otoa@d+5
 20290  27EB  0022               	movlb	2	; select bank2
 20291  27EC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20292  27ED  0020               	movlb	0	; select bank0
 20293  27EE  00B8               	movwf	otoa@d+6
 20294  27EF  0022               	movlb	2	; select bank2
 20295  27F0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20296  27F1  0020               	movlb	0	; select bank0
 20297  27F2  00B9               	movwf	otoa@d+7
 20298  27F3  3198  203C         	fcall	_otoa
 20299  27F5  0020               	movlb	0	; select bank0
 20300  27F6  0831               	movf	?_otoa+1,w
 20301  27F7  0021               	movlb	1	; select bank1
 20302  27F8  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20303  27F9  0020               	movlb	0	; select bank0
 20304  27FA  0830               	movf	?_otoa,w
 20305  27FB  0021               	movlb	1	; select bank1
 20306  27FC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20307  27FD  0008               	return
 20308  27FE                     L30:	
 20309  27FE                     L29:	
 20310  27FE  3188  283F         	ljmp	l7829
 20311                           
 20312                           	psect	text5_split_8
 20313  083F                     l7829:	
 20314                           
 20315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 20316  083F  0021               	movlb	1	; select bank1
 20317  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20318  0841  0086               	movwf	6
 20319  0842  0187               	clrf	7
 20320  0843  3F40               	moviw [0]fsr1
 20321  0844  00F1               	movwf	strncmp@_l
 20322  0845  3F41               	moviw [1]fsr1
 20323  0846  00F2               	movwf	strncmp@_l+1
 20324  0847  3005               	movlw	low (STR_75| (0+32768))
 20325  0848  00F3               	movwf	strncmp@_r
 20326  0849  30BA               	movlw	high (STR_75| (0+32768))
 20327  084A  00F4               	movwf	strncmp@_r+1
 20328  084B  3002               	movlw	2
 20329  084C  00F5               	movwf	strncmp@n
 20330  084D  3000               	movlw	0
 20331  084E  00F6               	movwf	strncmp@n+1
 20332  084F  31AA  222E  3188   	fcall	_strncmp
 20333  0852  0871               	movf	?_strncmp,w
 20334  0853  0472               	iorwf	?_strncmp+1,w
 20335  0854  1D03               	btfss	3,2
 20336  0855  28A7               	goto	l7839
 20337                           
 20338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 20339  0856  0021               	movlb	1	; select bank1
 20340  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20341  0858  0086               	movwf	6
 20342  0859  0187               	clrf	7
 20343  085A  3002               	movlw	2
 20344  085B  0781               	addwf	1,f
 20345  085C  3141               	addfsr 1,1
 20346  085D  1803               	skipnc
 20347  085E  0A81               	incf	1,f
 20348                           
 20349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20350  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20351  0860  0086               	movwf	6
 20352  0861  3001               	movlw	1	; select bank2/3
 20353  0862  0087               	movwf	7
 20354  0863  0801               	movf	1,w
 20355  0864  0084               	movwf	4
 20356  0865  3001               	movlw	1	; select bank2/3
 20357  0866  0085               	movwf	5
 20358  0867  3002               	movlw	2
 20359  0868  0781               	addwf	1,f
 20360  0869  3F00               	moviw [0]fsr0
 20361  086A  0022               	movlb	2	; select bank2
 20362  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20363  086C  3F01               	moviw [1]fsr0
 20364  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20365  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20366  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20367  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20368  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20369  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20370  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20371                           
 20372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 20373  0874  0021               	movlb	1	; select bank1
 20374  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20375  0876  0020               	movlb	0	; select bank0
 20376  0877  00B1               	movwf	otoa@fp+1
 20377  0878  0021               	movlb	1	; select bank1
 20378  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20379  087A  0020               	movlb	0	; select bank0
 20380  087B  00B0               	movwf	otoa@fp
 20381  087C  0022               	movlb	2	; select bank2
 20382  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20383  087E  0020               	movlb	0	; select bank0
 20384  087F  00B2               	movwf	otoa@d
 20385  0880  0022               	movlb	2	; select bank2
 20386  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20387  0882  0020               	movlb	0	; select bank0
 20388  0883  00B3               	movwf	otoa@d+1
 20389  0884  0022               	movlb	2	; select bank2
 20390  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20391  0886  0020               	movlb	0	; select bank0
 20392  0887  00B4               	movwf	otoa@d+2
 20393  0888  0022               	movlb	2	; select bank2
 20394  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20395  088A  0020               	movlb	0	; select bank0
 20396  088B  00B5               	movwf	otoa@d+3
 20397  088C  0022               	movlb	2	; select bank2
 20398  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20399  088E  0020               	movlb	0	; select bank0
 20400  088F  00B6               	movwf	otoa@d+4
 20401  0890  0022               	movlb	2	; select bank2
 20402  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20403  0892  0020               	movlb	0	; select bank0
 20404  0893  00B7               	movwf	otoa@d+5
 20405  0894  0022               	movlb	2	; select bank2
 20406  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20407  0896  0020               	movlb	0	; select bank0
 20408  0897  00B8               	movwf	otoa@d+6
 20409  0898  0022               	movlb	2	; select bank2
 20410  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20411  089A  0020               	movlb	0	; select bank0
 20412  089B  00B9               	movwf	otoa@d+7
 20413  089C  3198  203C         	fcall	_otoa
 20414  089E  0020               	movlb	0	; select bank0
 20415  089F  0831               	movf	?_otoa+1,w
 20416  08A0  0021               	movlb	1	; select bank1
 20417  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20418  08A2  0020               	movlb	0	; select bank0
 20419  08A3  0830               	movf	?_otoa,w
 20420  08A4  0021               	movlb	1	; select bank1
 20421  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20422  08A6  0008               	return
 20423  08A7                     l7839:	
 20424                           
 20425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 20426  08A7  0021               	movlb	1	; select bank1
 20427  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20428  08A9  0086               	movwf	6
 20429  08AA  0187               	clrf	7
 20430  08AB  3F40               	moviw [0]fsr1
 20431  08AC  00F1               	movwf	strncmp@_l
 20432  08AD  3F41               	moviw [1]fsr1
 20433  08AE  00F2               	movwf	strncmp@_l+1
 20434  08AF  30D7               	movlw	low (STR_80| (0+32768))
 20435  08B0  00F3               	movwf	strncmp@_r
 20436  08B1  30B9               	movlw	high (STR_80| (0+32768))
 20437  08B2  00F4               	movwf	strncmp@_r+1
 20438  08B3  3003               	movlw	3
 20439  08B4  00F5               	movwf	strncmp@n
 20440  08B5  3000               	movlw	0
 20441  08B6  00F6               	movwf	strncmp@n+1
 20442  08B7  31AA  222E  3188   	fcall	_strncmp
 20443  08BA  0871               	movf	?_strncmp,w
 20444  08BB  0472               	iorwf	?_strncmp+1,w
 20445  08BC  1D03               	btfss	3,2
 20446  08BD  2977               	goto	l7851
 20447                           
 20448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 20449  08BE  0021               	movlb	1	; select bank1
 20450  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20451  08C0  0086               	movwf	6
 20452  08C1  0187               	clrf	7
 20453  08C2  3003               	movlw	3
 20454  08C3  0781               	addwf	1,f
 20455  08C4  3141               	addfsr 1,1
 20456  08C5  1803               	skipnc
 20457  08C6  0A81               	incf	1,f
 20458                           
 20459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20460  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20461  08C8  0086               	movwf	6
 20462  08C9  3001               	movlw	1	; select bank2/3
 20463  08CA  0087               	movwf	7
 20464  08CB  3F40               	moviw [0]fsr1
 20465  08CC  0084               	movwf	4
 20466  08CD  3001               	movlw	1	; select bank2/3
 20467  08CE  0085               	movwf	5
 20468  08CF  0A81               	incf	1,f
 20469  08D0  0800               	movf	0,w
 20470  08D1  0022               	movlb	2	; select bank2
 20471  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20472  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 20473  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20474                           
 20475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 20476  08D5  0023               	movlb	3	; select bank3
 20477  08D6  083C               	movf	_nout^(0+384),w
 20478  08D7  0022               	movlb	2	; select bank2
 20479  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20480  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20481  08DA  0086               	movwf	6
 20482  08DB  3001               	movlw	1	; select bank2/3
 20483  08DC  0087               	movwf	7
 20484  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 20485  08DE  0081               	movwf	1
 20486  08DF  2973               	goto	l7847
 20487  08E0                     l7853:	
 20488                           
 20489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 20490  08E0  0021               	movlb	1	; select bank1
 20491  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20492  08E2  0086               	movwf	6
 20493  08E3  0187               	clrf	7
 20494  08E4  3002               	movlw	2
 20495  08E5  0781               	addwf	1,f
 20496  08E6  3141               	addfsr 1,1
 20497  08E7  1803               	skipnc
 20498  08E8  0A81               	incf	1,f
 20499                           
 20500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 20501  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20502  08EA  0086               	movwf	6
 20503  08EB  3001               	movlw	1	; select bank2/3
 20504  08EC  0087               	movwf	7
 20505  08ED  3F40               	moviw [0]fsr1
 20506  08EE  0084               	movwf	4
 20507  08EF  3001               	movlw	1	; select bank2/3
 20508  08F0  0085               	movwf	5
 20509  08F1  0A81               	incf	1,f
 20510  08F2  0800               	movf	0,w
 20511  08F3  0022               	movlb	2	; select bank2
 20512  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20513  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 20514  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20515                           
 20516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 20517  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20518  08F8  0086               	movwf	6
 20519  08F9  3001               	movlw	1	; select bank2/3
 20520  08FA  0087               	movwf	7
 20521  08FB  0023               	movlb	3	; select bank3
 20522  08FC  083C               	movf	_nout^(0+384),w
 20523  08FD  3FC0               	movwi [0]fsr1
 20524  08FE  083D               	movf	(_nout+1)^(0+384),w
 20525  08FF  3FC1               	movwi [1]fsr1
 20526  0900  2973               	goto	l7847
 20527  0901                     l7865:	
 20528                           
 20529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 20530  0901  0021               	movlb	1	; select bank1
 20531  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20532  0903  0086               	movwf	6
 20533  0904  0187               	clrf	7
 20534  0905  3001               	movlw	1
 20535  0906  0781               	addwf	1,f
 20536  0907  3141               	addfsr 1,1
 20537  0908  1803               	skipnc
 20538  0909  0A81               	incf	1,f
 20539                           
 20540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 20541  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20542  090B  0086               	movwf	6
 20543  090C  3001               	movlw	1	; select bank2/3
 20544  090D  0087               	movwf	7
 20545  090E  3F40               	moviw [0]fsr1
 20546  090F  0084               	movwf	4
 20547  0910  3001               	movlw	1	; select bank2/3
 20548  0911  0085               	movwf	5
 20549  0912  0A81               	incf	1,f
 20550  0913  0800               	movf	0,w
 20551  0914  0022               	movlb	2	; select bank2
 20552  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20553  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 20554  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20555                           
 20556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 20557  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20558  0919  0086               	movwf	6
 20559  091A  3001               	movlw	1	; select bank2/3
 20560  091B  0087               	movwf	7
 20561  091C  0023               	movlb	3	; select bank3
 20562  091D  083C               	movf	_nout^(0+384),w
 20563  091E  3FC0               	movwi [0]fsr1
 20564  091F  083D               	movf	(_nout+1)^(0+384),w
 20565  0920  3FC1               	movwi [1]fsr1
 20566  0921  2973               	goto	l7847
 20567  0922                     l7877:	
 20568                           
 20569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 20570  0922  0021               	movlb	1	; select bank1
 20571  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20572  0924  0086               	movwf	6
 20573  0925  0187               	clrf	7
 20574  0926  3002               	movlw	2
 20575  0927  0781               	addwf	1,f
 20576  0928  3141               	addfsr 1,1
 20577  0929  1803               	skipnc
 20578  092A  0A81               	incf	1,f
 20579                           
 20580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 20581  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20582  092C  0086               	movwf	6
 20583  092D  3001               	movlw	1	; select bank2/3
 20584  092E  0087               	movwf	7
 20585  092F  3F40               	moviw [0]fsr1
 20586  0930  0084               	movwf	4
 20587  0931  3001               	movlw	1	; select bank2/3
 20588  0932  0085               	movwf	5
 20589  0933  0A81               	incf	1,f
 20590  0934  0800               	movf	0,w
 20591  0935  0022               	movlb	2	; select bank2
 20592  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20593  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 20594  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20595                           
 20596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 20597  0939  0023               	movlb	3	; select bank3
 20598  093A  083C               	movf	_nout^(0+384),w
 20599  093B  0022               	movlb	2	; select bank2
 20600  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20601  093D  0023               	movlb	3	; select bank3
 20602  093E  083D               	movf	(_nout+1)^(0+384),w
 20603  093F  0022               	movlb	2	; select bank2
 20604  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20605  0941  3000               	movlw	0
 20606  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 20607  0943  30FF               	movlw	255
 20608  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20609  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20610  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20611  0947  0086               	movwf	6
 20612  0948  3001               	movlw	1	; select bank2/3
 20613  0949  0087               	movwf	7
 20614  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 20615  094B  3FC0               	movwi [0]fsr1
 20616  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20617  094D  3FC1               	movwi [1]fsr1
 20618  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20619  094F  3FC2               	movwi [2]fsr1
 20620  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20621  0951  3FC3               	movwi [3]fsr1
 20622  0952  2973               	goto	l7847
 20623  0953                     l7889:	
 20624                           
 20625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 20626  0953  0021               	movlb	1	; select bank1
 20627  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20628  0955  0086               	movwf	6
 20629  0956  0187               	clrf	7
 20630  0957  3002               	movlw	2
 20631  0958  0781               	addwf	1,f
 20632  0959  3141               	addfsr 1,1
 20633  095A  1803               	skipnc
 20634  095B  0A81               	incf	1,f
 20635                           
 20636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 20637  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20638  095D  0086               	movwf	6
 20639  095E  3001               	movlw	1	; select bank2/3
 20640  095F  0087               	movwf	7
 20641  0960  3F40               	moviw [0]fsr1
 20642  0961  0084               	movwf	4
 20643  0962  3001               	movlw	1	; select bank2/3
 20644  0963  0085               	movwf	5
 20645  0964  0A81               	incf	1,f
 20646  0965  0800               	movf	0,w
 20647  0966  0022               	movlb	2	; select bank2
 20648  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20649  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 20650  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20651                           
 20652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 20653  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20654  096B  0086               	movwf	6
 20655  096C  3001               	movlw	1	; select bank2/3
 20656  096D  0087               	movwf	7
 20657  096E  0023               	movlb	3	; select bank3
 20658  096F  083C               	movf	_nout^(0+384),w
 20659  0970  3FC0               	movwi [0]fsr1
 20660  0971  083D               	movf	(_nout+1)^(0+384),w
 20661  0972  3FC1               	movwi [1]fsr1
 20662  0973                     l7847:	
 20663                           
 20664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 20665  0973  0021               	movlb	1	; select bank1
 20666  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 20667  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 20668  0976  0008               	return
 20669  0977                     l7851:	
 20670                           
 20671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 20672  0977  0021               	movlb	1	; select bank1
 20673  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20674  0979  0086               	movwf	6
 20675  097A  0187               	clrf	7
 20676  097B  3F40               	moviw [0]fsr1
 20677  097C  00F1               	movwf	strncmp@_l
 20678  097D  3F41               	moviw [1]fsr1
 20679  097E  00F2               	movwf	strncmp@_l+1
 20680  097F  30D8               	movlw	low ((STR_80+1)| (0+32768))
 20681  0980  00F3               	movwf	strncmp@_r
 20682  0981  30B9               	movlw	high ((STR_80+1)| (0+32768))
 20683  0982  00F4               	movwf	strncmp@_r+1
 20684  0983  3002               	movlw	2
 20685  0984  00F5               	movwf	strncmp@n
 20686  0985  3000               	movlw	0
 20687  0986  00F6               	movwf	strncmp@n+1
 20688  0987  31AA  222E  3188   	fcall	_strncmp
 20689  098A  0871               	movf	?_strncmp,w
 20690  098B  0472               	iorwf	?_strncmp+1,w
 20691  098C  1903               	btfsc	3,2
 20692  098D  28E0               	goto	l7853
 20693                           
 20694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 20695  098E  0021               	movlb	1	; select bank1
 20696  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20697  0990  0086               	movwf	6
 20698  0991  0187               	clrf	7
 20699  0992  3F40               	moviw [0]fsr1
 20700  0993  0022               	movlb	2	; select bank2
 20701  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20702  0995  3F41               	moviw [1]fsr1
 20703  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20704  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 20705  0998  0084               	movwf	4
 20706  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20707  099A  0085               	movwf	5
 20708  099B  0012               	moviw fsr0++
 20709  099C  3A6E               	xorlw	110
 20710  099D  1903               	btfsc	3,2
 20711  099E  2901               	goto	l7865
 20712                           
 20713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 20714  099F  0021               	movlb	1	; select bank1
 20715  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20716  09A1  0086               	movwf	6
 20717  09A2  0187               	clrf	7
 20718  09A3  3F40               	moviw [0]fsr1
 20719  09A4  00F1               	movwf	strncmp@_l
 20720  09A5  3F41               	moviw [1]fsr1
 20721  09A6  00F2               	movwf	strncmp@_l+1
 20722  09A7  30FC               	movlw	low (STR_90| (0+32768))
 20723  09A8  00F3               	movwf	strncmp@_r
 20724  09A9  30B9               	movlw	high (STR_90| (0+32768))
 20725  09AA  00F4               	movwf	strncmp@_r+1
 20726  09AB  3002               	movlw	2
 20727  09AC  00F5               	movwf	strncmp@n
 20728  09AD  3000               	movlw	0
 20729  09AE  00F6               	movwf	strncmp@n+1
 20730  09AF  31AA  222E  3188   	fcall	_strncmp
 20731  09B2  0871               	movf	?_strncmp,w
 20732  09B3  0472               	iorwf	?_strncmp+1,w
 20733  09B4  1903               	btfsc	3,2
 20734  09B5  2922               	goto	l7877
 20735                           
 20736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 20737  09B6  0021               	movlb	1	; select bank1
 20738  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20739  09B8  0086               	movwf	6
 20740  09B9  0187               	clrf	7
 20741  09BA  3F40               	moviw [0]fsr1
 20742  09BB  00F1               	movwf	strncmp@_l
 20743  09BC  3F41               	moviw [1]fsr1
 20744  09BD  00F2               	movwf	strncmp@_l+1
 20745  09BE  30FF               	movlw	low (STR_95| (0+32768))
 20746  09BF  00F3               	movwf	strncmp@_r
 20747  09C0  30B9               	movlw	high (STR_95| (0+32768))
 20748  09C1  00F4               	movwf	strncmp@_r+1
 20749  09C2  3002               	movlw	2
 20750  09C3  00F5               	movwf	strncmp@n
 20751  09C4  3000               	movlw	0
 20752  09C5  00F6               	movwf	strncmp@n+1
 20753  09C6  31AA  222E  3188   	fcall	_strncmp
 20754  09C9  0871               	movf	?_strncmp,w
 20755  09CA  0472               	iorwf	?_strncmp+1,w
 20756  09CB  1903               	btfsc	3,2
 20757  09CC  2953               	goto	l7889
 20758                           
 20759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 20760  09CD  0021               	movlb	1	; select bank1
 20761  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20762  09CF  0086               	movwf	6
 20763  09D0  0187               	clrf	7
 20764  09D1  3F40               	moviw [0]fsr1
 20765  09D2  0022               	movlb	2	; select bank2
 20766  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20767  09D4  3F41               	moviw [1]fsr1
 20768  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20769  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 20770  09D7  0084               	movwf	4
 20771  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20772  09D9  0085               	movwf	5
 20773  09DA  0012               	moviw fsr0++
 20774  09DB  3A70               	xorlw	112
 20775  09DC  1D03               	btfss	3,2
 20776  09DD  2A43               	goto	l7909
 20777                           
 20778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 20779  09DE  0021               	movlb	1	; select bank1
 20780  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20781  09E0  0086               	movwf	6
 20782  09E1  0187               	clrf	7
 20783  09E2  3001               	movlw	1
 20784  09E3  0781               	addwf	1,f
 20785  09E4  3141               	addfsr 1,1
 20786  09E5  1803               	skipnc
 20787  09E6  0A81               	incf	1,f
 20788                           
 20789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 20790  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20791  09E8  0086               	movwf	6
 20792  09E9  3001               	movlw	1	; select bank2/3
 20793  09EA  0087               	movwf	7
 20794  09EB  3F40               	moviw [0]fsr1
 20795  09EC  0084               	movwf	4
 20796  09ED  3001               	movlw	1	; select bank2/3
 20797  09EE  0085               	movwf	5
 20798  09EF  0A81               	incf	1,f
 20799  09F0  0800               	movf	0,w
 20800  09F1  0022               	movlb	2	; select bank2
 20801  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20802  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 20803  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 20804  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 20805  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 20806  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 20807  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 20808  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 20809  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 20810  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20811  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 20812  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20813  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 20814  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20815  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 20816  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20817  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 20818  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20819  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 20820  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20821  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20822  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20823  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 20824  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20825                           
 20826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 20827  0A0A  0021               	movlb	1	; select bank1
 20828  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20829  0A0C  0020               	movlb	0	; select bank0
 20830  0A0D  00B1               	movwf	xtoa@fp+1
 20831  0A0E  0021               	movlb	1	; select bank1
 20832  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20833  0A10  0020               	movlb	0	; select bank0
 20834  0A11  00B0               	movwf	xtoa@fp
 20835  0A12  0022               	movlb	2	; select bank2
 20836  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20837  0A14  0020               	movlb	0	; select bank0
 20838  0A15  00B2               	movwf	xtoa@d
 20839  0A16  0022               	movlb	2	; select bank2
 20840  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20841  0A18  0020               	movlb	0	; select bank0
 20842  0A19  00B3               	movwf	xtoa@d+1
 20843  0A1A  0022               	movlb	2	; select bank2
 20844  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20845  0A1C  0020               	movlb	0	; select bank0
 20846  0A1D  00B4               	movwf	xtoa@d+2
 20847  0A1E  0022               	movlb	2	; select bank2
 20848  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20849  0A20  0020               	movlb	0	; select bank0
 20850  0A21  00B5               	movwf	xtoa@d+3
 20851  0A22  0022               	movlb	2	; select bank2
 20852  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20853  0A24  0020               	movlb	0	; select bank0
 20854  0A25  00B6               	movwf	xtoa@d+4
 20855  0A26  0022               	movlb	2	; select bank2
 20856  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20857  0A28  0020               	movlb	0	; select bank0
 20858  0A29  00B7               	movwf	xtoa@d+5
 20859  0A2A  0022               	movlb	2	; select bank2
 20860  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20861  0A2C  0020               	movlb	0	; select bank0
 20862  0A2D  00B8               	movwf	xtoa@d+6
 20863  0A2E  0022               	movlb	2	; select bank2
 20864  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20865  0A30  0020               	movlb	0	; select bank0
 20866  0A31  00B9               	movwf	xtoa@d+7
 20867  0A32  3078               	movlw	120
 20868  0A33  0022               	movlb	2	; select bank2
 20869  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20870  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 20871  0A36  0020               	movlb	0	; select bank0
 20872  0A37  00BA               	movwf	xtoa@x
 20873  0A38  319E  26A7         	fcall	_xtoa
 20874  0A3A  0020               	movlb	0	; select bank0
 20875  0A3B  0831               	movf	?_xtoa+1,w
 20876  0A3C  0021               	movlb	1	; select bank1
 20877  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20878  0A3E  0020               	movlb	0	; select bank0
 20879  0A3F  0830               	movf	?_xtoa,w
 20880  0A40  0021               	movlb	1	; select bank1
 20881  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20882  0A42  0008               	return
 20883  0A43                     l7909:	
 20884                           
 20885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20886  0A43  0021               	movlb	1	; select bank1
 20887  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20888  0A45  0086               	movwf	6
 20889  0A46  0187               	clrf	7
 20890  0A47  3F40               	moviw [0]fsr1
 20891  0A48  0022               	movlb	2	; select bank2
 20892  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20893  0A4A  3F41               	moviw [1]fsr1
 20894  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20895  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 20896  0A4D  0084               	movwf	4
 20897  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20898  0A4F  0085               	movwf	5
 20899  0A50  0012               	moviw fsr0++
 20900  0A51  3A73               	xorlw	115
 20901  0A52  1D03               	btfss	3,2
 20902  0A53  2A84               	goto	l7919
 20903                           
 20904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20905  0A54  0021               	movlb	1	; select bank1
 20906  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20907  0A56  0086               	movwf	6
 20908  0A57  0187               	clrf	7
 20909  0A58  3001               	movlw	1
 20910  0A59  0781               	addwf	1,f
 20911  0A5A  3141               	addfsr 1,1
 20912  0A5B  1803               	skipnc
 20913  0A5C  0A81               	incf	1,f
 20914                           
 20915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20916  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20917  0A5E  0086               	movwf	6
 20918  0A5F  3001               	movlw	1	; select bank2/3
 20919  0A60  0087               	movwf	7
 20920  0A61  3F40               	moviw [0]fsr1
 20921  0A62  0084               	movwf	4
 20922  0A63  3001               	movlw	1	; select bank2/3
 20923  0A64  0085               	movwf	5
 20924  0A65  0A81               	incf	1,f
 20925  0A66  0800               	movf	0,w
 20926  0A67  0022               	movlb	2	; select bank2
 20927  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20928  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 20929  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 20930                           
 20931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20932  0A6B  0021               	movlb	1	; select bank1
 20933  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20934  0A6D  0020               	movlb	0	; select bank0
 20935  0A6E  00A1               	movwf	stoa@fp+1
 20936  0A6F  0021               	movlb	1	; select bank1
 20937  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20938  0A71  0020               	movlb	0	; select bank0
 20939  0A72  00A0               	movwf	stoa@fp
 20940  0A73  0022               	movlb	2	; select bank2
 20941  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 20942  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20943  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 20944  0A77  0020               	movlb	0	; select bank0
 20945  0A78  00A2               	movwf	stoa@s
 20946  0A79  31A2  2219         	fcall	_stoa
 20947  0A7B  0020               	movlb	0	; select bank0
 20948  0A7C  0821               	movf	?_stoa+1,w
 20949  0A7D  0021               	movlb	1	; select bank1
 20950  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20951  0A7F  0020               	movlb	0	; select bank0
 20952  0A80  0820               	movf	?_stoa,w
 20953  0A81  0021               	movlb	1	; select bank1
 20954  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20955  0A83  0008               	return
 20956  0A84                     l7919:	
 20957                           
 20958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 20959  0A84  0021               	movlb	1	; select bank1
 20960  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20961  0A86  0086               	movwf	6
 20962  0A87  0187               	clrf	7
 20963  0A88  3F40               	moviw [0]fsr1
 20964  0A89  00F1               	movwf	strncmp@_l
 20965  0A8A  3F41               	moviw [1]fsr1
 20966  0A8B  00F2               	movwf	strncmp@_l+1
 20967  0A8C  30DF               	movlw	low (STR_100| (0+32768))
 20968  0A8D  00F3               	movwf	strncmp@_r
 20969  0A8E  30B9               	movlw	high (STR_100| (0+32768))
 20970  0A8F  00F4               	movwf	strncmp@_r+1
 20971  0A90  3003               	movlw	3
 20972  0A91  00F5               	movwf	strncmp@n
 20973  0A92  3000               	movlw	0
 20974  0A93  00F6               	movwf	strncmp@n+1
 20975  0A94  31AA  222E  3188   	fcall	_strncmp
 20976  0A97  0871               	movf	?_strncmp,w
 20977  0A98  0472               	iorwf	?_strncmp+1,w
 20978  0A99  1D03               	btfss	3,2
 20979  0A9A  2AEB               	goto	l7929
 20980                           
 20981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 20982  0A9B  0021               	movlb	1	; select bank1
 20983  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20984  0A9D  0086               	movwf	6
 20985  0A9E  0187               	clrf	7
 20986  0A9F  3003               	movlw	3
 20987  0AA0  0781               	addwf	1,f
 20988  0AA1  3141               	addfsr 1,1
 20989  0AA2  1803               	skipnc
 20990  0AA3  0A81               	incf	1,f
 20991                           
 20992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20993  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20994  0AA5  0086               	movwf	6
 20995  0AA6  3001               	movlw	1	; select bank2/3
 20996  0AA7  0087               	movwf	7
 20997  0AA8  0801               	movf	1,w
 20998  0AA9  0084               	movwf	4
 20999  0AAA  3001               	movlw	1	; select bank2/3
 21000  0AAB  0085               	movwf	5
 21001  0AAC  3002               	movlw	2
 21002  0AAD  0781               	addwf	1,f
 21003  0AAE  0800               	movf	0,w
 21004  0AAF  0022               	movlb	2	; select bank2
 21005  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21006  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 21007  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21008  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21009  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21010  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21011  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21012  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21013                           
 21014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21015  0AB8  0021               	movlb	1	; select bank1
 21016  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21017  0ABA  0020               	movlb	0	; select bank0
 21018  0ABB  00B1               	movwf	utoa@fp+1
 21019  0ABC  0021               	movlb	1	; select bank1
 21020  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21021  0ABE  0020               	movlb	0	; select bank0
 21022  0ABF  00B0               	movwf	utoa@fp
 21023  0AC0  0022               	movlb	2	; select bank2
 21024  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21025  0AC2  0020               	movlb	0	; select bank0
 21026  0AC3  00B2               	movwf	utoa@d
 21027  0AC4  0022               	movlb	2	; select bank2
 21028  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21029  0AC6  0020               	movlb	0	; select bank0
 21030  0AC7  00B3               	movwf	utoa@d+1
 21031  0AC8  0022               	movlb	2	; select bank2
 21032  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21033  0ACA  0020               	movlb	0	; select bank0
 21034  0ACB  00B4               	movwf	utoa@d+2
 21035  0ACC  0022               	movlb	2	; select bank2
 21036  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21037  0ACE  0020               	movlb	0	; select bank0
 21038  0ACF  00B5               	movwf	utoa@d+3
 21039  0AD0  0022               	movlb	2	; select bank2
 21040  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21041  0AD2  0020               	movlb	0	; select bank0
 21042  0AD3  00B6               	movwf	utoa@d+4
 21043  0AD4  0022               	movlb	2	; select bank2
 21044  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21045  0AD6  0020               	movlb	0	; select bank0
 21046  0AD7  00B7               	movwf	utoa@d+5
 21047  0AD8  0022               	movlb	2	; select bank2
 21048  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21049  0ADA  0020               	movlb	0	; select bank0
 21050  0ADB  00B8               	movwf	utoa@d+6
 21051  0ADC  0022               	movlb	2	; select bank2
 21052  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21053  0ADE  0020               	movlb	0	; select bank0
 21054  0ADF  00B9               	movwf	utoa@d+7
 21055  0AE0  31A6  2639         	fcall	_utoa
 21056  0AE2  0020               	movlb	0	; select bank0
 21057  0AE3  0831               	movf	?_utoa+1,w
 21058  0AE4  0021               	movlb	1	; select bank1
 21059  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21060  0AE6  0020               	movlb	0	; select bank0
 21061  0AE7  0830               	movf	?_utoa,w
 21062  0AE8  0021               	movlb	1	; select bank1
 21063  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21064  0AEA  0008               	return
 21065  0AEB                     l7929:	
 21066                           
 21067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21068  0AEB  0021               	movlb	1	; select bank1
 21069  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21070  0AED  0086               	movwf	6
 21071  0AEE  0187               	clrf	7
 21072  0AEF  3F40               	moviw [0]fsr1
 21073  0AF0  00F1               	movwf	strncmp@_l
 21074  0AF1  3F41               	moviw [1]fsr1
 21075  0AF2  00F2               	movwf	strncmp@_l+1
 21076  0AF3  30E0               	movlw	low ((STR_100+1)| (0+32768))
 21077  0AF4  00F3               	movwf	strncmp@_r
 21078  0AF5  30B9               	movlw	high ((STR_100+1)| (0+32768))
 21079  0AF6  00F4               	movwf	strncmp@_r+1
 21080  0AF7  3002               	movlw	2
 21081  0AF8  00F5               	movwf	strncmp@n
 21082  0AF9  3000               	movlw	0
 21083  0AFA  00F6               	movwf	strncmp@n+1
 21084  0AFB  31AA  222E  3188   	fcall	_strncmp
 21085  0AFE  0871               	movf	?_strncmp,w
 21086  0AFF  0472               	iorwf	?_strncmp+1,w
 21087  0B00  1D03               	btfss	3,2
 21088  0B01  2B53               	goto	l7939
 21089                           
 21090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21091  0B02  0021               	movlb	1	; select bank1
 21092  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21093  0B04  0086               	movwf	6
 21094  0B05  0187               	clrf	7
 21095  0B06  3002               	movlw	2
 21096  0B07  0781               	addwf	1,f
 21097  0B08  3141               	addfsr 1,1
 21098  0B09  1803               	skipnc
 21099  0B0A  0A81               	incf	1,f
 21100                           
 21101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21102  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21103  0B0C  0086               	movwf	6
 21104  0B0D  3001               	movlw	1	; select bank2/3
 21105  0B0E  0087               	movwf	7
 21106  0B0F  0801               	movf	1,w
 21107  0B10  0084               	movwf	4
 21108  0B11  3001               	movlw	1	; select bank2/3
 21109  0B12  0085               	movwf	5
 21110  0B13  3002               	movlw	2
 21111  0B14  0781               	addwf	1,f
 21112  0B15  3F00               	moviw [0]fsr0
 21113  0B16  0022               	movlb	2	; select bank2
 21114  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21115  0B18  3F01               	moviw [1]fsr0
 21116  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21117  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21118  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21119  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21120  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21121  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21122  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21123                           
 21124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 21125  0B20  0021               	movlb	1	; select bank1
 21126  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21127  0B22  0020               	movlb	0	; select bank0
 21128  0B23  00B1               	movwf	utoa@fp+1
 21129  0B24  0021               	movlb	1	; select bank1
 21130  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21131  0B26  0020               	movlb	0	; select bank0
 21132  0B27  00B0               	movwf	utoa@fp
 21133  0B28  0022               	movlb	2	; select bank2
 21134  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21135  0B2A  0020               	movlb	0	; select bank0
 21136  0B2B  00B2               	movwf	utoa@d
 21137  0B2C  0022               	movlb	2	; select bank2
 21138  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21139  0B2E  0020               	movlb	0	; select bank0
 21140  0B2F  00B3               	movwf	utoa@d+1
 21141  0B30  0022               	movlb	2	; select bank2
 21142  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21143  0B32  0020               	movlb	0	; select bank0
 21144  0B33  00B4               	movwf	utoa@d+2
 21145  0B34  0022               	movlb	2	; select bank2
 21146  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21147  0B36  0020               	movlb	0	; select bank0
 21148  0B37  00B5               	movwf	utoa@d+3
 21149  0B38  0022               	movlb	2	; select bank2
 21150  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21151  0B3A  0020               	movlb	0	; select bank0
 21152  0B3B  00B6               	movwf	utoa@d+4
 21153  0B3C  0022               	movlb	2	; select bank2
 21154  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21155  0B3E  0020               	movlb	0	; select bank0
 21156  0B3F  00B7               	movwf	utoa@d+5
 21157  0B40  0022               	movlb	2	; select bank2
 21158  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21159  0B42  0020               	movlb	0	; select bank0
 21160  0B43  00B8               	movwf	utoa@d+6
 21161  0B44  0022               	movlb	2	; select bank2
 21162  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21163  0B46  0020               	movlb	0	; select bank0
 21164  0B47  00B9               	movwf	utoa@d+7
 21165  0B48  31A6  2639         	fcall	_utoa
 21166  0B4A  0020               	movlb	0	; select bank0
 21167  0B4B  0831               	movf	?_utoa+1,w
 21168  0B4C  0021               	movlb	1	; select bank1
 21169  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21170  0B4E  0020               	movlb	0	; select bank0
 21171  0B4F  0830               	movf	?_utoa,w
 21172  0B50  0021               	movlb	1	; select bank1
 21173  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21174  0B52  0008               	return
 21175  0B53                     l7939:	
 21176                           
 21177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 21178  0B53  0021               	movlb	1	; select bank1
 21179  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21180  0B55  0086               	movwf	6
 21181  0B56  0187               	clrf	7
 21182  0B57  3F40               	moviw [0]fsr1
 21183  0B58  0022               	movlb	2	; select bank2
 21184  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21185  0B5A  3F41               	moviw [1]fsr1
 21186  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21187  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21188  0B5D  0084               	movwf	4
 21189  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21190  0B5F  0085               	movwf	5
 21191  0B60  0012               	moviw fsr0++
 21192  0B61  3A75               	xorlw	117
 21193  0B62  1D03               	btfss	3,2
 21194  0B63  2BB5               	goto	l7949
 21195                           
 21196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 21197  0B64  0021               	movlb	1	; select bank1
 21198  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21199  0B66  0086               	movwf	6
 21200  0B67  0187               	clrf	7
 21201  0B68  3001               	movlw	1
 21202  0B69  0781               	addwf	1,f
 21203  0B6A  3141               	addfsr 1,1
 21204  0B6B  1803               	skipnc
 21205  0B6C  0A81               	incf	1,f
 21206                           
 21207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21208  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21209  0B6E  0086               	movwf	6
 21210  0B6F  3001               	movlw	1	; select bank2/3
 21211  0B70  0087               	movwf	7
 21212  0B71  0801               	movf	1,w
 21213  0B72  0084               	movwf	4
 21214  0B73  3001               	movlw	1	; select bank2/3
 21215  0B74  0085               	movwf	5
 21216  0B75  3002               	movlw	2
 21217  0B76  0781               	addwf	1,f
 21218  0B77  3F00               	moviw [0]fsr0
 21219  0B78  0022               	movlb	2	; select bank2
 21220  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21221  0B7A  3F01               	moviw [1]fsr0
 21222  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21223  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21224  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21225  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21226  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21227  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21228  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21229                           
 21230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 21231  0B82  0021               	movlb	1	; select bank1
 21232  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21233  0B84  0020               	movlb	0	; select bank0
 21234  0B85  00B1               	movwf	utoa@fp+1
 21235  0B86  0021               	movlb	1	; select bank1
 21236  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21237  0B88  0020               	movlb	0	; select bank0
 21238  0B89  00B0               	movwf	utoa@fp
 21239  0B8A  0022               	movlb	2	; select bank2
 21240  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21241  0B8C  0020               	movlb	0	; select bank0
 21242  0B8D  00B2               	movwf	utoa@d
 21243  0B8E  0022               	movlb	2	; select bank2
 21244  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21245  0B90  0020               	movlb	0	; select bank0
 21246  0B91  00B3               	movwf	utoa@d+1
 21247  0B92  0022               	movlb	2	; select bank2
 21248  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21249  0B94  0020               	movlb	0	; select bank0
 21250  0B95  00B4               	movwf	utoa@d+2
 21251  0B96  0022               	movlb	2	; select bank2
 21252  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21253  0B98  0020               	movlb	0	; select bank0
 21254  0B99  00B5               	movwf	utoa@d+3
 21255  0B9A  0022               	movlb	2	; select bank2
 21256  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21257  0B9C  0020               	movlb	0	; select bank0
 21258  0B9D  00B6               	movwf	utoa@d+4
 21259  0B9E  0022               	movlb	2	; select bank2
 21260  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21261  0BA0  0020               	movlb	0	; select bank0
 21262  0BA1  00B7               	movwf	utoa@d+5
 21263  0BA2  0022               	movlb	2	; select bank2
 21264  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21265  0BA4  0020               	movlb	0	; select bank0
 21266  0BA5  00B8               	movwf	utoa@d+6
 21267  0BA6  0022               	movlb	2	; select bank2
 21268  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21269  0BA8  0020               	movlb	0	; select bank0
 21270  0BA9  00B9               	movwf	utoa@d+7
 21271  0BAA  31A6  2639         	fcall	_utoa
 21272  0BAC  0020               	movlb	0	; select bank0
 21273  0BAD  0831               	movf	?_utoa+1,w
 21274  0BAE  0021               	movlb	1	; select bank1
 21275  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21276  0BB0  0020               	movlb	0	; select bank0
 21277  0BB1  0830               	movf	?_utoa,w
 21278  0BB2  0021               	movlb	1	; select bank1
 21279  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21280  0BB4  0008               	return
 21281  0BB5                     l7949:	
 21282                           
 21283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 21284  0BB5  0021               	movlb	1	; select bank1
 21285  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21286  0BB7  0086               	movwf	6
 21287  0BB8  0187               	clrf	7
 21288  0BB9  3F40               	moviw [0]fsr1
 21289  0BBA  00F1               	movwf	strncmp@_l
 21290  0BBB  3F41               	moviw [1]fsr1
 21291  0BBC  00F2               	movwf	strncmp@_l+1
 21292  0BBD  3008               	movlw	low (STR_110| (0+32768))
 21293  0BBE  00F3               	movwf	strncmp@_r
 21294  0BBF  30BA               	movlw	high (STR_110| (0+32768))
 21295  0BC0  00F4               	movwf	strncmp@_r+1
 21296  0BC1  3002               	movlw	2
 21297  0BC2  00F5               	movwf	strncmp@n
 21298  0BC3  3000               	movlw	0
 21299  0BC4  00F6               	movwf	strncmp@n+1
 21300  0BC5  31AA  222E  3188   	fcall	_strncmp
 21301  0BC8  0871               	movf	?_strncmp,w
 21302  0BC9  0472               	iorwf	?_strncmp+1,w
 21303  0BCA  1D03               	btfss	3,2
 21304  0BCB  2C37               	goto	l7959
 21305                           
 21306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 21307  0BCC  0021               	movlb	1	; select bank1
 21308  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21309  0BCE  0086               	movwf	6
 21310  0BCF  0187               	clrf	7
 21311  0BD0  3002               	movlw	2
 21312  0BD1  0781               	addwf	1,f
 21313  0BD2  3141               	addfsr 1,1
 21314  0BD3  1803               	skipnc
 21315  0BD4  0A81               	incf	1,f
 21316                           
 21317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21318  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21319  0BD6  0086               	movwf	6
 21320  0BD7  3001               	movlw	1	; select bank2/3
 21321  0BD8  0087               	movwf	7
 21322  0BD9  0801               	movf	1,w
 21323  0BDA  0084               	movwf	4
 21324  0BDB  3001               	movlw	1	; select bank2/3
 21325  0BDC  0085               	movwf	5
 21326  0BDD  3004               	movlw	4
 21327  0BDE  0781               	addwf	1,f
 21328  0BDF  3F00               	moviw [0]fsr0
 21329  0BE0  0022               	movlb	2	; select bank2
 21330  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21331  0BE2  3F01               	moviw [1]fsr0
 21332  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21333  0BE4  3F02               	moviw [2]fsr0
 21334  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21335  0BE6  3F03               	moviw [3]fsr0
 21336  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21337  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 21338  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21339  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21340  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21341  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21342  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21343  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21344  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21345  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21346  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21347  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21348  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21349  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21350  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21351  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21352  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21353  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21354  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21355  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21356  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21357  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21358  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21359  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21360  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21361  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21362  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21363  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21364  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21365                           
 21366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 21367  0C04  0021               	movlb	1	; select bank1
 21368  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21369  0C06  0020               	movlb	0	; select bank0
 21370  0C07  00B1               	movwf	utoa@fp+1
 21371  0C08  0021               	movlb	1	; select bank1
 21372  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21373  0C0A  0020               	movlb	0	; select bank0
 21374  0C0B  00B0               	movwf	utoa@fp
 21375  0C0C  0022               	movlb	2	; select bank2
 21376  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21377  0C0E  0020               	movlb	0	; select bank0
 21378  0C0F  00B2               	movwf	utoa@d
 21379  0C10  0022               	movlb	2	; select bank2
 21380  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21381  0C12  0020               	movlb	0	; select bank0
 21382  0C13  00B3               	movwf	utoa@d+1
 21383  0C14  0022               	movlb	2	; select bank2
 21384  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21385  0C16  0020               	movlb	0	; select bank0
 21386  0C17  00B4               	movwf	utoa@d+2
 21387  0C18  0022               	movlb	2	; select bank2
 21388  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21389  0C1A  0020               	movlb	0	; select bank0
 21390  0C1B  00B5               	movwf	utoa@d+3
 21391  0C1C  0022               	movlb	2	; select bank2
 21392  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21393  0C1E  0020               	movlb	0	; select bank0
 21394  0C1F  00B6               	movwf	utoa@d+4
 21395  0C20  0022               	movlb	2	; select bank2
 21396  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21397  0C22  0020               	movlb	0	; select bank0
 21398  0C23  00B7               	movwf	utoa@d+5
 21399  0C24  0022               	movlb	2	; select bank2
 21400  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21401  0C26  0020               	movlb	0	; select bank0
 21402  0C27  00B8               	movwf	utoa@d+6
 21403  0C28  0022               	movlb	2	; select bank2
 21404  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21405  0C2A  0020               	movlb	0	; select bank0
 21406  0C2B  00B9               	movwf	utoa@d+7
 21407  0C2C  31A6  2639         	fcall	_utoa
 21408  0C2E  0020               	movlb	0	; select bank0
 21409  0C2F  0831               	movf	?_utoa+1,w
 21410  0C30  0021               	movlb	1	; select bank1
 21411  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21412  0C32  0020               	movlb	0	; select bank0
 21413  0C33  0830               	movf	?_utoa,w
 21414  0C34  0021               	movlb	1	; select bank1
 21415  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21416  0C36  0008               	return
 21417  0C37                     l7959:	
 21418                           
 21419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 21420  0C37  0021               	movlb	1	; select bank1
 21421  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21422  0C39  0086               	movwf	6
 21423  0C3A  0187               	clrf	7
 21424  0C3B  3F40               	moviw [0]fsr1
 21425  0C3C  00F1               	movwf	strncmp@_l
 21426  0C3D  3F41               	moviw [1]fsr1
 21427  0C3E  00F2               	movwf	strncmp@_l+1
 21428  0C3F  300B               	movlw	low (STR_115| (0+32768))
 21429  0C40  00F3               	movwf	strncmp@_r
 21430  0C41  30BA               	movlw	high (STR_115| (0+32768))
 21431  0C42  00F4               	movwf	strncmp@_r+1
 21432  0C43  3002               	movlw	2
 21433  0C44  00F5               	movwf	strncmp@n
 21434  0C45  3000               	movlw	0
 21435  0C46  00F6               	movwf	strncmp@n+1
 21436  0C47  31AA  222E  3188   	fcall	_strncmp
 21437  0C4A  0871               	movf	?_strncmp,w
 21438  0C4B  0472               	iorwf	?_strncmp+1,w
 21439  0C4C  1D03               	btfss	3,2
 21440  0C4D  2C9F               	goto	l7969
 21441                           
 21442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 21443  0C4E  0021               	movlb	1	; select bank1
 21444  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21445  0C50  0086               	movwf	6
 21446  0C51  0187               	clrf	7
 21447  0C52  3002               	movlw	2
 21448  0C53  0781               	addwf	1,f
 21449  0C54  3141               	addfsr 1,1
 21450  0C55  1803               	skipnc
 21451  0C56  0A81               	incf	1,f
 21452                           
 21453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21454  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21455  0C58  0086               	movwf	6
 21456  0C59  3001               	movlw	1	; select bank2/3
 21457  0C5A  0087               	movwf	7
 21458  0C5B  0801               	movf	1,w
 21459  0C5C  0084               	movwf	4
 21460  0C5D  3001               	movlw	1	; select bank2/3
 21461  0C5E  0085               	movwf	5
 21462  0C5F  3002               	movlw	2
 21463  0C60  0781               	addwf	1,f
 21464  0C61  3F00               	moviw [0]fsr0
 21465  0C62  0022               	movlb	2	; select bank2
 21466  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21467  0C64  3F01               	moviw [1]fsr0
 21468  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21469  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21470  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21471  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21472  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21473  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21474  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21475                           
 21476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 21477  0C6C  0021               	movlb	1	; select bank1
 21478  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21479  0C6E  0020               	movlb	0	; select bank0
 21480  0C6F  00B1               	movwf	utoa@fp+1
 21481  0C70  0021               	movlb	1	; select bank1
 21482  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21483  0C72  0020               	movlb	0	; select bank0
 21484  0C73  00B0               	movwf	utoa@fp
 21485  0C74  0022               	movlb	2	; select bank2
 21486  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21487  0C76  0020               	movlb	0	; select bank0
 21488  0C77  00B2               	movwf	utoa@d
 21489  0C78  0022               	movlb	2	; select bank2
 21490  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21491  0C7A  0020               	movlb	0	; select bank0
 21492  0C7B  00B3               	movwf	utoa@d+1
 21493  0C7C  0022               	movlb	2	; select bank2
 21494  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21495  0C7E  0020               	movlb	0	; select bank0
 21496  0C7F  00B4               	movwf	utoa@d+2
 21497  0C80  0022               	movlb	2	; select bank2
 21498  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21499  0C82  0020               	movlb	0	; select bank0
 21500  0C83  00B5               	movwf	utoa@d+3
 21501  0C84  0022               	movlb	2	; select bank2
 21502  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21503  0C86  0020               	movlb	0	; select bank0
 21504  0C87  00B6               	movwf	utoa@d+4
 21505  0C88  0022               	movlb	2	; select bank2
 21506  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21507  0C8A  0020               	movlb	0	; select bank0
 21508  0C8B  00B7               	movwf	utoa@d+5
 21509  0C8C  0022               	movlb	2	; select bank2
 21510  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21511  0C8E  0020               	movlb	0	; select bank0
 21512  0C8F  00B8               	movwf	utoa@d+6
 21513  0C90  0022               	movlb	2	; select bank2
 21514  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21515  0C92  0020               	movlb	0	; select bank0
 21516  0C93  00B9               	movwf	utoa@d+7
 21517  0C94  31A6  2639         	fcall	_utoa
 21518  0C96  0020               	movlb	0	; select bank0
 21519  0C97  0831               	movf	?_utoa+1,w
 21520  0C98  0021               	movlb	1	; select bank1
 21521  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21522  0C9A  0020               	movlb	0	; select bank0
 21523  0C9B  0830               	movf	?_utoa,w
 21524  0C9C  0021               	movlb	1	; select bank1
 21525  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21526  0C9E  0008               	return
 21527  0C9F                     l7969:	
 21528                           
 21529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 21530  0C9F  0021               	movlb	1	; select bank1
 21531  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21532  0CA1  0086               	movwf	6
 21533  0CA2  0187               	clrf	7
 21534  0CA3  3F40               	moviw [0]fsr1
 21535  0CA4  00F1               	movwf	strncmp@_l
 21536  0CA5  3F41               	moviw [1]fsr1
 21537  0CA6  00F2               	movwf	strncmp@_l+1
 21538  0CA7  30E3               	movlw	low (STR_120| (0+32768))
 21539  0CA8  00F3               	movwf	strncmp@_r
 21540  0CA9  30B9               	movlw	high (STR_120| (0+32768))
 21541  0CAA  00F4               	movwf	strncmp@_r+1
 21542  0CAB  3003               	movlw	3
 21543  0CAC  00F5               	movwf	strncmp@n
 21544  0CAD  3000               	movlw	0
 21545  0CAE  00F6               	movwf	strncmp@n+1
 21546  0CAF  31AA  222E  3188   	fcall	_strncmp
 21547  0CB2  0871               	movf	?_strncmp,w
 21548  0CB3  0472               	iorwf	?_strncmp+1,w
 21549  0CB4  1903               	btfsc	3,2
 21550  0CB5  2CCD               	goto	l7973
 21551  0CB6  0021               	movlb	1	; select bank1
 21552  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21553  0CB8  0086               	movwf	6
 21554  0CB9  0187               	clrf	7
 21555  0CBA  3F40               	moviw [0]fsr1
 21556  0CBB  00F1               	movwf	strncmp@_l
 21557  0CBC  3F41               	moviw [1]fsr1
 21558  0CBD  00F2               	movwf	strncmp@_l+1
 21559  0CBE  30C3               	movlw	low (STR_124| (0+32768))
 21560  0CBF  00F3               	movwf	strncmp@_r
 21561  0CC0  30B9               	movlw	high (STR_124| (0+32768))
 21562  0CC1  00F4               	movwf	strncmp@_r+1
 21563  0CC2  3003               	movlw	3
 21564  0CC3  00F5               	movwf	strncmp@n
 21565  0CC4  3000               	movlw	0
 21566  0CC5  00F6               	movwf	strncmp@n+1
 21567  0CC6  31AA  222E  3188   	fcall	_strncmp
 21568  0CC9  0871               	movf	?_strncmp,w
 21569  0CCA  0472               	iorwf	?_strncmp+1,w
 21570  0CCB  1D03               	btfss	3,2
 21571  0CCC  2D37               	goto	l7983
 21572  0CCD                     l7973:	
 21573                           
 21574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 21575  0CCD  0021               	movlb	1	; select bank1
 21576  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21577  0CCF  0086               	movwf	6
 21578  0CD0  0187               	clrf	7
 21579  0CD1  3F40               	moviw [0]fsr1
 21580  0CD2  0022               	movlb	2	; select bank2
 21581  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21582  0CD4  3F41               	moviw [1]fsr1
 21583  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21584  0CD6  3002               	movlw	2
 21585  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21586  0CD8  0084               	movwf	4
 21587  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21588  0CDA  1803               	skipnc
 21589  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21590  0CDC  0085               	movwf	5
 21591  0CDD  0800               	movf	0,w	;code access
 21592  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21593  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21594  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21595                           
 21596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 21597  0CE1  0021               	movlb	1	; select bank1
 21598  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21599  0CE3  0086               	movwf	6
 21600  0CE4  0187               	clrf	7
 21601  0CE5  3003               	movlw	3
 21602  0CE6  0781               	addwf	1,f
 21603  0CE7  3141               	addfsr 1,1
 21604  0CE8  1803               	skipnc
 21605  0CE9  0A81               	incf	1,f
 21606                           
 21607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21608  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21609  0CEB  0086               	movwf	6
 21610  0CEC  3001               	movlw	1	; select bank2/3
 21611  0CED  0087               	movwf	7
 21612  0CEE  0801               	movf	1,w
 21613  0CEF  0084               	movwf	4
 21614  0CF0  3001               	movlw	1	; select bank2/3
 21615  0CF1  0085               	movwf	5
 21616  0CF2  3002               	movlw	2
 21617  0CF3  0781               	addwf	1,f
 21618  0CF4  0800               	movf	0,w
 21619  0CF5  0022               	movlb	2	; select bank2
 21620  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21621  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 21622  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21623  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21624  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21625  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21626  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21627  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21628                           
 21629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 21630  0CFE  0021               	movlb	1	; select bank1
 21631  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21632  0D00  0020               	movlb	0	; select bank0
 21633  0D01  00B1               	movwf	xtoa@fp+1
 21634  0D02  0021               	movlb	1	; select bank1
 21635  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21636  0D04  0020               	movlb	0	; select bank0
 21637  0D05  00B0               	movwf	xtoa@fp
 21638  0D06  0022               	movlb	2	; select bank2
 21639  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21640  0D08  0020               	movlb	0	; select bank0
 21641  0D09  00B2               	movwf	xtoa@d
 21642  0D0A  0022               	movlb	2	; select bank2
 21643  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21644  0D0C  0020               	movlb	0	; select bank0
 21645  0D0D  00B3               	movwf	xtoa@d+1
 21646  0D0E  0022               	movlb	2	; select bank2
 21647  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21648  0D10  0020               	movlb	0	; select bank0
 21649  0D11  00B4               	movwf	xtoa@d+2
 21650  0D12  0022               	movlb	2	; select bank2
 21651  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21652  0D14  0020               	movlb	0	; select bank0
 21653  0D15  00B5               	movwf	xtoa@d+3
 21654  0D16  0022               	movlb	2	; select bank2
 21655  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21656  0D18  0020               	movlb	0	; select bank0
 21657  0D19  00B6               	movwf	xtoa@d+4
 21658  0D1A  0022               	movlb	2	; select bank2
 21659  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21660  0D1C  0020               	movlb	0	; select bank0
 21661  0D1D  00B7               	movwf	xtoa@d+5
 21662  0D1E  0022               	movlb	2	; select bank2
 21663  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21664  0D20  0020               	movlb	0	; select bank0
 21665  0D21  00B8               	movwf	xtoa@d+6
 21666  0D22  0022               	movlb	2	; select bank2
 21667  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21668  0D24  0020               	movlb	0	; select bank0
 21669  0D25  00B9               	movwf	xtoa@d+7
 21670  0D26  0022               	movlb	2	; select bank2
 21671  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 21672  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21673  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 21674  0D2A  0020               	movlb	0	; select bank0
 21675  0D2B  00BA               	movwf	xtoa@x
 21676  0D2C  319E  26A7         	fcall	_xtoa
 21677  0D2E  0020               	movlb	0	; select bank0
 21678  0D2F  0831               	movf	?_xtoa+1,w
 21679  0D30  0021               	movlb	1	; select bank1
 21680  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21681  0D32  0020               	movlb	0	; select bank0
 21682  0D33  0830               	movf	?_xtoa,w
 21683  0D34  0021               	movlb	1	; select bank1
 21684  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21685  0D36  0008               	return
 21686  0D37                     l7983:	
 21687                           
 21688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 21689  0D37  0021               	movlb	1	; select bank1
 21690  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21691  0D39  0086               	movwf	6
 21692  0D3A  0187               	clrf	7
 21693  0D3B  3F40               	moviw [0]fsr1
 21694  0D3C  00F1               	movwf	strncmp@_l
 21695  0D3D  3F41               	moviw [1]fsr1
 21696  0D3E  00F2               	movwf	strncmp@_l+1
 21697  0D3F  30E4               	movlw	low ((STR_120+1)| (0+32768))
 21698  0D40  00F3               	movwf	strncmp@_r
 21699  0D41  30B9               	movlw	high ((STR_120+1)| (0+32768))
 21700  0D42  00F4               	movwf	strncmp@_r+1
 21701  0D43  3002               	movlw	2
 21702  0D44  00F5               	movwf	strncmp@n
 21703  0D45  3000               	movlw	0
 21704  0D46  00F6               	movwf	strncmp@n+1
 21705  0D47  31AA  222E  3188   	fcall	_strncmp
 21706  0D4A  0871               	movf	?_strncmp,w
 21707  0D4B  0472               	iorwf	?_strncmp+1,w
 21708  0D4C  1903               	btfsc	3,2
 21709  0D4D  2D65               	goto	l7987
 21710  0D4E  0021               	movlb	1	; select bank1
 21711  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21712  0D50  0086               	movwf	6
 21713  0D51  0187               	clrf	7
 21714  0D52  3F40               	moviw [0]fsr1
 21715  0D53  00F1               	movwf	strncmp@_l
 21716  0D54  3F41               	moviw [1]fsr1
 21717  0D55  00F2               	movwf	strncmp@_l+1
 21718  0D56  30C4               	movlw	low ((STR_124+1)| (0+32768))
 21719  0D57  00F3               	movwf	strncmp@_r
 21720  0D58  30B9               	movlw	high ((STR_124+1)| (0+32768))
 21721  0D59  00F4               	movwf	strncmp@_r+1
 21722  0D5A  3002               	movlw	2
 21723  0D5B  00F5               	movwf	strncmp@n
 21724  0D5C  3000               	movlw	0
 21725  0D5D  00F6               	movwf	strncmp@n+1
 21726  0D5E  31AA  222E  3188   	fcall	_strncmp
 21727  0D61  0871               	movf	?_strncmp,w
 21728  0D62  0472               	iorwf	?_strncmp+1,w
 21729  0D63  1D03               	btfss	3,2
 21730  0D64  2DD0               	goto	l7997
 21731  0D65                     l7987:	
 21732                           
 21733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 21734  0D65  0021               	movlb	1	; select bank1
 21735  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21736  0D67  0086               	movwf	6
 21737  0D68  0187               	clrf	7
 21738  0D69  3F40               	moviw [0]fsr1
 21739  0D6A  0022               	movlb	2	; select bank2
 21740  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21741  0D6C  3F41               	moviw [1]fsr1
 21742  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21743  0D6E  3001               	movlw	1
 21744  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21745  0D70  0084               	movwf	4
 21746  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21747  0D72  1803               	skipnc
 21748  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21749  0D74  0085               	movwf	5
 21750  0D75  0800               	movf	0,w	;code access
 21751  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21752  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21753  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21754                           
 21755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 21756  0D79  0021               	movlb	1	; select bank1
 21757  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21758  0D7B  0086               	movwf	6
 21759  0D7C  0187               	clrf	7
 21760  0D7D  3002               	movlw	2
 21761  0D7E  0781               	addwf	1,f
 21762  0D7F  3141               	addfsr 1,1
 21763  0D80  1803               	skipnc
 21764  0D81  0A81               	incf	1,f
 21765                           
 21766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21767  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21768  0D83  0086               	movwf	6
 21769  0D84  3001               	movlw	1	; select bank2/3
 21770  0D85  0087               	movwf	7
 21771  0D86  0801               	movf	1,w
 21772  0D87  0084               	movwf	4
 21773  0D88  3001               	movlw	1	; select bank2/3
 21774  0D89  0085               	movwf	5
 21775  0D8A  3002               	movlw	2
 21776  0D8B  0781               	addwf	1,f
 21777  0D8C  3F00               	moviw [0]fsr0
 21778  0D8D  0022               	movlb	2	; select bank2
 21779  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21780  0D8F  3F01               	moviw [1]fsr0
 21781  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21782  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21783  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21784  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21785  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21786  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21787  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21788                           
 21789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 21790  0D97  0021               	movlb	1	; select bank1
 21791  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21792  0D99  0020               	movlb	0	; select bank0
 21793  0D9A  00B1               	movwf	xtoa@fp+1
 21794  0D9B  0021               	movlb	1	; select bank1
 21795  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21796  0D9D  0020               	movlb	0	; select bank0
 21797  0D9E  00B0               	movwf	xtoa@fp
 21798  0D9F  0022               	movlb	2	; select bank2
 21799  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21800  0DA1  0020               	movlb	0	; select bank0
 21801  0DA2  00B2               	movwf	xtoa@d
 21802  0DA3  0022               	movlb	2	; select bank2
 21803  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21804  0DA5  0020               	movlb	0	; select bank0
 21805  0DA6  00B3               	movwf	xtoa@d+1
 21806  0DA7  0022               	movlb	2	; select bank2
 21807  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21808  0DA9  0020               	movlb	0	; select bank0
 21809  0DAA  00B4               	movwf	xtoa@d+2
 21810  0DAB  0022               	movlb	2	; select bank2
 21811  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21812  0DAD  0020               	movlb	0	; select bank0
 21813  0DAE  00B5               	movwf	xtoa@d+3
 21814  0DAF  0022               	movlb	2	; select bank2
 21815  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21816  0DB1  0020               	movlb	0	; select bank0
 21817  0DB2  00B6               	movwf	xtoa@d+4
 21818  0DB3  0022               	movlb	2	; select bank2
 21819  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21820  0DB5  0020               	movlb	0	; select bank0
 21821  0DB6  00B7               	movwf	xtoa@d+5
 21822  0DB7  0022               	movlb	2	; select bank2
 21823  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21824  0DB9  0020               	movlb	0	; select bank0
 21825  0DBA  00B8               	movwf	xtoa@d+6
 21826  0DBB  0022               	movlb	2	; select bank2
 21827  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21828  0DBD  0020               	movlb	0	; select bank0
 21829  0DBE  00B9               	movwf	xtoa@d+7
 21830  0DBF  0022               	movlb	2	; select bank2
 21831  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 21832  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21833  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 21834  0DC3  0020               	movlb	0	; select bank0
 21835  0DC4  00BA               	movwf	xtoa@x
 21836  0DC5  319E  26A7         	fcall	_xtoa
 21837  0DC7  0020               	movlb	0	; select bank0
 21838  0DC8  0831               	movf	?_xtoa+1,w
 21839  0DC9  0021               	movlb	1	; select bank1
 21840  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21841  0DCB  0020               	movlb	0	; select bank0
 21842  0DCC  0830               	movf	?_xtoa,w
 21843  0DCD  0021               	movlb	1	; select bank1
 21844  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21845  0DCF  0008               	return
 21846  0DD0                     l7997:	
 21847                           
 21848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21849  0DD0  0021               	movlb	1	; select bank1
 21850  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21851  0DD2  0086               	movwf	6
 21852  0DD3  0187               	clrf	7
 21853  0DD4  3F40               	moviw [0]fsr1
 21854  0DD5  0022               	movlb	2	; select bank2
 21855  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21856  0DD7  3F41               	moviw [1]fsr1
 21857  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21858  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 21859  0DDA  0084               	movwf	4
 21860  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21861  0DDC  0085               	movwf	5
 21862  0DDD  0012               	moviw fsr0++
 21863  0DDE  3A78               	xorlw	120
 21864  0DDF  1903               	btfsc	3,2
 21865  0DE0  2DF2               	goto	l8001
 21866  0DE1  0021               	movlb	1	; select bank1
 21867  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21868  0DE3  0086               	movwf	6
 21869  0DE4  0187               	clrf	7
 21870  0DE5  3F40               	moviw [0]fsr1
 21871  0DE6  0022               	movlb	2	; select bank2
 21872  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21873  0DE8  3F41               	moviw [1]fsr1
 21874  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21875  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 21876  0DEB  0084               	movwf	4
 21877  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21878  0DED  0085               	movwf	5
 21879  0DEE  0012               	moviw fsr0++
 21880  0DEF  3A58               	xorlw	88
 21881  0DF0  1D03               	btfss	3,2
 21882  0DF1  2E5A               	goto	l8011
 21883  0DF2                     l8001:	
 21884                           
 21885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 21886  0DF2  0021               	movlb	1	; select bank1
 21887  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21888  0DF4  0086               	movwf	6
 21889  0DF5  0187               	clrf	7
 21890  0DF6  3F40               	moviw [0]fsr1
 21891  0DF7  0022               	movlb	2	; select bank2
 21892  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21893  0DF9  3F41               	moviw [1]fsr1
 21894  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21895  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21896  0DFC  0084               	movwf	4
 21897  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21898  0DFE  0085               	movwf	5
 21899  0DFF  0800               	movf	0,w	;code access
 21900  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21901  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21902  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21903                           
 21904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 21905  0E03  0021               	movlb	1	; select bank1
 21906  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21907  0E05  0086               	movwf	6
 21908  0E06  0187               	clrf	7
 21909  0E07  3001               	movlw	1
 21910  0E08  0781               	addwf	1,f
 21911  0E09  3141               	addfsr 1,1
 21912  0E0A  1803               	skipnc
 21913  0E0B  0A81               	incf	1,f
 21914                           
 21915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21916  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21917  0E0D  0086               	movwf	6
 21918  0E0E  3001               	movlw	1	; select bank2/3
 21919  0E0F  0087               	movwf	7
 21920  0E10  0801               	movf	1,w
 21921  0E11  0084               	movwf	4
 21922  0E12  3001               	movlw	1	; select bank2/3
 21923  0E13  0085               	movwf	5
 21924  0E14  3002               	movlw	2
 21925  0E15  0781               	addwf	1,f
 21926  0E16  3F00               	moviw [0]fsr0
 21927  0E17  0022               	movlb	2	; select bank2
 21928  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21929  0E19  3F01               	moviw [1]fsr0
 21930  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21931  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21932  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21933  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21934  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21935  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21936  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21937                           
 21938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 21939  0E21  0021               	movlb	1	; select bank1
 21940  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21941  0E23  0020               	movlb	0	; select bank0
 21942  0E24  00B1               	movwf	xtoa@fp+1
 21943  0E25  0021               	movlb	1	; select bank1
 21944  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21945  0E27  0020               	movlb	0	; select bank0
 21946  0E28  00B0               	movwf	xtoa@fp
 21947  0E29  0022               	movlb	2	; select bank2
 21948  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21949  0E2B  0020               	movlb	0	; select bank0
 21950  0E2C  00B2               	movwf	xtoa@d
 21951  0E2D  0022               	movlb	2	; select bank2
 21952  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21953  0E2F  0020               	movlb	0	; select bank0
 21954  0E30  00B3               	movwf	xtoa@d+1
 21955  0E31  0022               	movlb	2	; select bank2
 21956  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21957  0E33  0020               	movlb	0	; select bank0
 21958  0E34  00B4               	movwf	xtoa@d+2
 21959  0E35  0022               	movlb	2	; select bank2
 21960  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21961  0E37  0020               	movlb	0	; select bank0
 21962  0E38  00B5               	movwf	xtoa@d+3
 21963  0E39  0022               	movlb	2	; select bank2
 21964  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21965  0E3B  0020               	movlb	0	; select bank0
 21966  0E3C  00B6               	movwf	xtoa@d+4
 21967  0E3D  0022               	movlb	2	; select bank2
 21968  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21969  0E3F  0020               	movlb	0	; select bank0
 21970  0E40  00B7               	movwf	xtoa@d+5
 21971  0E41  0022               	movlb	2	; select bank2
 21972  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21973  0E43  0020               	movlb	0	; select bank0
 21974  0E44  00B8               	movwf	xtoa@d+6
 21975  0E45  0022               	movlb	2	; select bank2
 21976  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21977  0E47  0020               	movlb	0	; select bank0
 21978  0E48  00B9               	movwf	xtoa@d+7
 21979  0E49  0022               	movlb	2	; select bank2
 21980  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 21981  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21982  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21983  0E4D  0020               	movlb	0	; select bank0
 21984  0E4E  00BA               	movwf	xtoa@x
 21985  0E4F  319E  26A7         	fcall	_xtoa
 21986  0E51  0020               	movlb	0	; select bank0
 21987  0E52  0831               	movf	?_xtoa+1,w
 21988  0E53  0021               	movlb	1	; select bank1
 21989  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21990  0E55  0020               	movlb	0	; select bank0
 21991  0E56  0830               	movf	?_xtoa,w
 21992  0E57  0021               	movlb	1	; select bank1
 21993  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21994  0E59  0008               	return
 21995  0E5A                     l8011:	
 21996                           
 21997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 21998  0E5A  0021               	movlb	1	; select bank1
 21999  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22000  0E5C  0086               	movwf	6
 22001  0E5D  0187               	clrf	7
 22002  0E5E  3F40               	moviw [0]fsr1
 22003  0E5F  00F1               	movwf	strncmp@_l
 22004  0E60  3F41               	moviw [1]fsr1
 22005  0E61  00F2               	movwf	strncmp@_l+1
 22006  0E62  300E               	movlw	low (STR_138| (0+32768))
 22007  0E63  00F3               	movwf	strncmp@_r
 22008  0E64  30BA               	movlw	high (STR_138| (0+32768))
 22009  0E65  00F4               	movwf	strncmp@_r+1
 22010  0E66  3002               	movlw	2
 22011  0E67  00F5               	movwf	strncmp@n
 22012  0E68  3000               	movlw	0
 22013  0E69  00F6               	movwf	strncmp@n+1
 22014  0E6A  31AA  222E  3188   	fcall	_strncmp
 22015  0E6D  0871               	movf	?_strncmp,w
 22016  0E6E  0472               	iorwf	?_strncmp+1,w
 22017  0E6F  1903               	btfsc	3,2
 22018  0E70  2E88               	goto	l8015
 22019  0E71  0021               	movlb	1	; select bank1
 22020  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22021  0E73  0086               	movwf	6
 22022  0E74  0187               	clrf	7
 22023  0E75  3F40               	moviw [0]fsr1
 22024  0E76  00F1               	movwf	strncmp@_l
 22025  0E77  3F41               	moviw [1]fsr1
 22026  0E78  00F2               	movwf	strncmp@_l+1
 22027  0E79  30E7               	movlw	low (STR_142| (0+32768))
 22028  0E7A  00F3               	movwf	strncmp@_r
 22029  0E7B  30B9               	movlw	high (STR_142| (0+32768))
 22030  0E7C  00F4               	movwf	strncmp@_r+1
 22031  0E7D  3002               	movlw	2
 22032  0E7E  00F5               	movwf	strncmp@n
 22033  0E7F  3000               	movlw	0
 22034  0E80  00F6               	movwf	strncmp@n+1
 22035  0E81  31AA  222E  3188   	fcall	_strncmp
 22036  0E84  0871               	movf	?_strncmp,w
 22037  0E85  0472               	iorwf	?_strncmp+1,w
 22038  0E86  1D03               	btfss	3,2
 22039  0E87  2F0D               	goto	l8025
 22040  0E88                     l8015:	
 22041                           
 22042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 22043  0E88  0021               	movlb	1	; select bank1
 22044  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22045  0E8A  0086               	movwf	6
 22046  0E8B  0187               	clrf	7
 22047  0E8C  3F40               	moviw [0]fsr1
 22048  0E8D  0022               	movlb	2	; select bank2
 22049  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22050  0E8F  3F41               	moviw [1]fsr1
 22051  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22052  0E91  3001               	movlw	1
 22053  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22054  0E93  0084               	movwf	4
 22055  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22056  0E95  1803               	skipnc
 22057  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22058  0E97  0085               	movwf	5
 22059  0E98  0800               	movf	0,w	;code access
 22060  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22061  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22062  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22063                           
 22064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 22065  0E9C  0021               	movlb	1	; select bank1
 22066  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22067  0E9E  0086               	movwf	6
 22068  0E9F  0187               	clrf	7
 22069  0EA0  3002               	movlw	2
 22070  0EA1  0781               	addwf	1,f
 22071  0EA2  3141               	addfsr 1,1
 22072  0EA3  1803               	skipnc
 22073  0EA4  0A81               	incf	1,f
 22074                           
 22075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22076  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22077  0EA6  0086               	movwf	6
 22078  0EA7  3001               	movlw	1	; select bank2/3
 22079  0EA8  0087               	movwf	7
 22080  0EA9  0801               	movf	1,w
 22081  0EAA  0084               	movwf	4
 22082  0EAB  3001               	movlw	1	; select bank2/3
 22083  0EAC  0085               	movwf	5
 22084  0EAD  3004               	movlw	4
 22085  0EAE  0781               	addwf	1,f
 22086  0EAF  3F00               	moviw [0]fsr0
 22087  0EB0  0022               	movlb	2	; select bank2
 22088  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22089  0EB2  3F01               	moviw [1]fsr0
 22090  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22091  0EB4  3F02               	moviw [2]fsr0
 22092  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22093  0EB6  3F03               	moviw [3]fsr0
 22094  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22095  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 22096  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22097  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22098  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 22099  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22100  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 22101  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22102  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 22103  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 22104  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 22105  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 22106  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 22107  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 22108  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22109  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 22110  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22111  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 22112  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22113  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 22114  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22115  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 22116  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22117  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 22118  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22119  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 22120  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22121  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22122  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22123                           
 22124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 22125  0ED4  0021               	movlb	1	; select bank1
 22126  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22127  0ED6  0020               	movlb	0	; select bank0
 22128  0ED7  00B1               	movwf	xtoa@fp+1
 22129  0ED8  0021               	movlb	1	; select bank1
 22130  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22131  0EDA  0020               	movlb	0	; select bank0
 22132  0EDB  00B0               	movwf	xtoa@fp
 22133  0EDC  0022               	movlb	2	; select bank2
 22134  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22135  0EDE  0020               	movlb	0	; select bank0
 22136  0EDF  00B2               	movwf	xtoa@d
 22137  0EE0  0022               	movlb	2	; select bank2
 22138  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22139  0EE2  0020               	movlb	0	; select bank0
 22140  0EE3  00B3               	movwf	xtoa@d+1
 22141  0EE4  0022               	movlb	2	; select bank2
 22142  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22143  0EE6  0020               	movlb	0	; select bank0
 22144  0EE7  00B4               	movwf	xtoa@d+2
 22145  0EE8  0022               	movlb	2	; select bank2
 22146  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22147  0EEA  0020               	movlb	0	; select bank0
 22148  0EEB  00B5               	movwf	xtoa@d+3
 22149  0EEC  0022               	movlb	2	; select bank2
 22150  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22151  0EEE  0020               	movlb	0	; select bank0
 22152  0EEF  00B6               	movwf	xtoa@d+4
 22153  0EF0  0022               	movlb	2	; select bank2
 22154  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22155  0EF2  0020               	movlb	0	; select bank0
 22156  0EF3  00B7               	movwf	xtoa@d+5
 22157  0EF4  0022               	movlb	2	; select bank2
 22158  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22159  0EF6  0020               	movlb	0	; select bank0
 22160  0EF7  00B8               	movwf	xtoa@d+6
 22161  0EF8  0022               	movlb	2	; select bank2
 22162  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22163  0EFA  0020               	movlb	0	; select bank0
 22164  0EFB  00B9               	movwf	xtoa@d+7
 22165  0EFC  0022               	movlb	2	; select bank2
 22166  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 22167  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22168  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 22169  0F00  0020               	movlb	0	; select bank0
 22170  0F01  00BA               	movwf	xtoa@x
 22171  0F02  319E  26A7         	fcall	_xtoa
 22172  0F04  0020               	movlb	0	; select bank0
 22173  0F05  0831               	movf	?_xtoa+1,w
 22174  0F06  0021               	movlb	1	; select bank1
 22175  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22176  0F08  0020               	movlb	0	; select bank0
 22177  0F09  0830               	movf	?_xtoa,w
 22178  0F0A  0021               	movlb	1	; select bank1
 22179  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22180  0F0C  0008               	return
 22181  0F0D                     l8025:	
 22182                           
 22183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22184  0F0D  0021               	movlb	1	; select bank1
 22185  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22186  0F0F  0086               	movwf	6
 22187  0F10  0187               	clrf	7
 22188  0F11  3F40               	moviw [0]fsr1
 22189  0F12  00F1               	movwf	strncmp@_l
 22190  0F13  3F41               	moviw [1]fsr1
 22191  0F14  00F2               	movwf	strncmp@_l+1
 22192  0F15  3011               	movlw	low (STR_147| (0+32768))
 22193  0F16  00F3               	movwf	strncmp@_r
 22194  0F17  30BA               	movlw	high (STR_147| (0+32768))
 22195  0F18  00F4               	movwf	strncmp@_r+1
 22196  0F19  3002               	movlw	2
 22197  0F1A  00F5               	movwf	strncmp@n
 22198  0F1B  3000               	movlw	0
 22199  0F1C  00F6               	movwf	strncmp@n+1
 22200  0F1D  31AA  222E  3188   	fcall	_strncmp
 22201  0F20  0871               	movf	?_strncmp,w
 22202  0F21  0472               	iorwf	?_strncmp+1,w
 22203  0F22  1903               	btfsc	3,2
 22204  0F23  2F3B               	goto	l8029
 22205  0F24  0021               	movlb	1	; select bank1
 22206  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22207  0F26  0086               	movwf	6
 22208  0F27  0187               	clrf	7
 22209  0F28  3F40               	moviw [0]fsr1
 22210  0F29  00F1               	movwf	strncmp@_l
 22211  0F2A  3F41               	moviw [1]fsr1
 22212  0F2B  00F2               	movwf	strncmp@_l+1
 22213  0F2C  30EA               	movlw	low (STR_151| (0+32768))
 22214  0F2D  00F3               	movwf	strncmp@_r
 22215  0F2E  30B9               	movlw	high (STR_151| (0+32768))
 22216  0F2F  00F4               	movwf	strncmp@_r+1
 22217  0F30  3002               	movlw	2
 22218  0F31  00F5               	movwf	strncmp@n
 22219  0F32  3000               	movlw	0
 22220  0F33  00F6               	movwf	strncmp@n+1
 22221  0F34  31AA  222E  3188   	fcall	_strncmp
 22222  0F37  0871               	movf	?_strncmp,w
 22223  0F38  0472               	iorwf	?_strncmp+1,w
 22224  0F39  1D03               	btfss	3,2
 22225  0F3A  2FA6               	goto	l8039
 22226  0F3B                     l8029:	
 22227                           
 22228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22229  0F3B  0021               	movlb	1	; select bank1
 22230  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22231  0F3D  0086               	movwf	6
 22232  0F3E  0187               	clrf	7
 22233  0F3F  3F40               	moviw [0]fsr1
 22234  0F40  0022               	movlb	2	; select bank2
 22235  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22236  0F42  3F41               	moviw [1]fsr1
 22237  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22238  0F44  3001               	movlw	1
 22239  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22240  0F46  0084               	movwf	4
 22241  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22242  0F48  1803               	skipnc
 22243  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22244  0F4A  0085               	movwf	5
 22245  0F4B  0800               	movf	0,w	;code access
 22246  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22247  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22248  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22249                           
 22250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22251  0F4F  0021               	movlb	1	; select bank1
 22252  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22253  0F51  0086               	movwf	6
 22254  0F52  0187               	clrf	7
 22255  0F53  3002               	movlw	2
 22256  0F54  0781               	addwf	1,f
 22257  0F55  3141               	addfsr 1,1
 22258  0F56  1803               	skipnc
 22259  0F57  0A81               	incf	1,f
 22260                           
 22261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22262  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22263  0F59  0086               	movwf	6
 22264  0F5A  3001               	movlw	1	; select bank2/3
 22265  0F5B  0087               	movwf	7
 22266  0F5C  0801               	movf	1,w
 22267  0F5D  0084               	movwf	4
 22268  0F5E  3001               	movlw	1	; select bank2/3
 22269  0F5F  0085               	movwf	5
 22270  0F60  3002               	movlw	2
 22271  0F61  0781               	addwf	1,f
 22272  0F62  3F00               	moviw [0]fsr0
 22273  0F63  0022               	movlb	2	; select bank2
 22274  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22275  0F65  3F01               	moviw [1]fsr0
 22276  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22277  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22278  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22279  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22280  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22281  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22282  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22283                           
 22284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22285  0F6D  0021               	movlb	1	; select bank1
 22286  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22287  0F6F  0020               	movlb	0	; select bank0
 22288  0F70  00B1               	movwf	xtoa@fp+1
 22289  0F71  0021               	movlb	1	; select bank1
 22290  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22291  0F73  0020               	movlb	0	; select bank0
 22292  0F74  00B0               	movwf	xtoa@fp
 22293  0F75  0022               	movlb	2	; select bank2
 22294  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22295  0F77  0020               	movlb	0	; select bank0
 22296  0F78  00B2               	movwf	xtoa@d
 22297  0F79  0022               	movlb	2	; select bank2
 22298  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22299  0F7B  0020               	movlb	0	; select bank0
 22300  0F7C  00B3               	movwf	xtoa@d+1
 22301  0F7D  0022               	movlb	2	; select bank2
 22302  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22303  0F7F  0020               	movlb	0	; select bank0
 22304  0F80  00B4               	movwf	xtoa@d+2
 22305  0F81  0022               	movlb	2	; select bank2
 22306  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22307  0F83  0020               	movlb	0	; select bank0
 22308  0F84  00B5               	movwf	xtoa@d+3
 22309  0F85  0022               	movlb	2	; select bank2
 22310  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22311  0F87  0020               	movlb	0	; select bank0
 22312  0F88  00B6               	movwf	xtoa@d+4
 22313  0F89  0022               	movlb	2	; select bank2
 22314  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22315  0F8B  0020               	movlb	0	; select bank0
 22316  0F8C  00B7               	movwf	xtoa@d+5
 22317  0F8D  0022               	movlb	2	; select bank2
 22318  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22319  0F8F  0020               	movlb	0	; select bank0
 22320  0F90  00B8               	movwf	xtoa@d+6
 22321  0F91  0022               	movlb	2	; select bank2
 22322  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22323  0F93  0020               	movlb	0	; select bank0
 22324  0F94  00B9               	movwf	xtoa@d+7
 22325  0F95  0022               	movlb	2	; select bank2
 22326  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 22327  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22328  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 22329  0F99  0020               	movlb	0	; select bank0
 22330  0F9A  00BA               	movwf	xtoa@x
 22331  0F9B  319E  26A7         	fcall	_xtoa
 22332  0F9D  0020               	movlb	0	; select bank0
 22333  0F9E  0831               	movf	?_xtoa+1,w
 22334  0F9F  0021               	movlb	1	; select bank1
 22335  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22336  0FA1  0020               	movlb	0	; select bank0
 22337  0FA2  0830               	movf	?_xtoa,w
 22338  0FA3  0021               	movlb	1	; select bank1
 22339  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22340  0FA5  0008               	return
 22341  0FA6                     l8039:	
 22342                           
 22343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 22344  0FA6  0021               	movlb	1	; select bank1
 22345  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22346  0FA8  0086               	movwf	6
 22347  0FA9  0187               	clrf	7
 22348  0FAA  3F40               	moviw [0]fsr1
 22349  0FAB  0022               	movlb	2	; select bank2
 22350  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22351  0FAD  3F41               	moviw [1]fsr1
 22352  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22353  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 22354  0FB0  0084               	movwf	4
 22355  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22356  0FB2  0085               	movwf	5
 22357  0FB3  0012               	moviw fsr0++
 22358  0FB4  3A25               	xorlw	37
 22359  0FB5  1D03               	btfss	3,2
 22360  0FB6  2FD0               	goto	l8049
 22361                           
 22362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 22363  0FB7  0021               	movlb	1	; select bank1
 22364  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22365  0FB9  0086               	movwf	6
 22366  0FBA  0187               	clrf	7
 22367  0FBB  3001               	movlw	1
 22368  0FBC  0781               	addwf	1,f
 22369  0FBD  3141               	addfsr 1,1
 22370  0FBE  1803               	skipnc
 22371  0FBF  0A81               	incf	1,f
 22372                           
 22373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 22374  0FC0  3025               	movlw	37
 22375  0FC1  00F1               	movwf	fputc@c
 22376  0FC2  3000               	movlw	0
 22377  0FC3  00F2               	movwf	fputc@c+1
 22378  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22379  0FC5  00F4               	movwf	fputc@fp+1
 22380  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22381  0FC7  00F3               	movwf	fputc@fp
 22382  0FC8  3190  200D         	fcall	_fputc
 22383  0FCA                     l8045:	
 22384                           
 22385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 22386  0FCA  3001               	movlw	1
 22387  0FCB  0021               	movlb	1	; select bank1
 22388  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22389  0FCD  3000               	movlw	0
 22390  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 22391  0FCF  0008               	return
 22392  0FD0                     l8049:	
 22393                           
 22394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 22395  0FD0  0021               	movlb	1	; select bank1
 22396  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22397  0FD2  0086               	movwf	6
 22398  0FD3  0187               	clrf	7
 22399  0FD4  3001               	movlw	1
 22400  0FD5  0781               	addwf	1,f
 22401  0FD6  3141               	addfsr 1,1
 22402  0FD7  1803               	skipnc
 22403  0FD8  0A81               	incf	1,f
 22404  0FD9  2973               	goto	l7847
 22405  0FDA                     l8055:	
 22406                           
 22407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 22408  0FDA  0021               	movlb	1	; select bank1
 22409  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22410  0FDC  0086               	movwf	6
 22411  0FDD  0187               	clrf	7
 22412  0FDE  3F40               	moviw [0]fsr1
 22413  0FDF  0022               	movlb	2	; select bank2
 22414  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22415  0FE1  3F41               	moviw [1]fsr1
 22416  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22417  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 22418  0FE4  0084               	movwf	4
 22419  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22420  0FE6  0085               	movwf	5
 22421  0FE7  0800               	movf	0,w	;code access
 22422  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22423  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 22424  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22425  0FEB  00F1               	movwf	fputc@c
 22426  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22427  0FED  00F2               	movwf	fputc@c+1
 22428  0FEE  0021               	movlb	1	; select bank1
 22429  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22430  0FF0  00F4               	movwf	fputc@fp+1
 22431  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22432  0FF2  00F3               	movwf	fputc@fp
 22433  0FF3  3190  200D  3188   	fcall	_fputc
 22434                           
 22435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 22436  0FF6  0021               	movlb	1	; select bank1
 22437  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22438  0FF8  0086               	movwf	6
 22439  0FF9  0187               	clrf	7
 22440  0FFA  3001               	movlw	1
 22441  0FFB  0781               	addwf	1,f
 22442  0FFC  3141               	addfsr 1,1
 22443  0FFD  1803               	skipnc
 22444  0FFE  0A81               	incf	1,f
 22445  0FFF  2FCA               	goto	l8045
 22446  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     501
    Constant    90
    Data        7
    BSS         136
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      1      63
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_153(CODE[3]), STR_149(CODE[3]), STR_144(CODE[3]), STR_140(CODE[3]), 
		 -> STR_135(CODE[3]), STR_131(CODE[3]), STR_126(CODE[4]), STR_122(CODE[4]), 
		 -> STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[4]), 
		 -> STR_97(CODE[3]), STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[4]), 
		 -> STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_153(CODE[3]), STR_149(CODE[3]), STR_144(CODE[3]), STR_140(CODE[3]), 
		 -> STR_135(CODE[3]), STR_131(CODE[3]), STR_126(CODE[4]), STR_122(CODE[4]), 
		 -> STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[4]), 
		 -> STR_97(CODE[3]), STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[4]), 
		 -> STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1585_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_10(CODE[45]), STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), 
		 -> messageBuffer(BIGRAM[127]), STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    ___flmul->__Umul8_16
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  127112
                                              0 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  126276
                                             77 BANK2      3     3      0
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   90885
                                             63 BANK2     14     4     10
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   89470
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   88433
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   87571
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   29207
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   22390
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   10524
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   10524
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3633
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    3843
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1599
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    2108
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     872
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     533
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      1      3F      11       78.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     18C      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     18C      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Dec 25 02:09:37 2019

          __end_of_setShortCircuitProtection 1D54                        __end_of_send_I2C_data 34F2  
                               ___fldiv@aexp 0059                                 ___fldiv@bexp 0058  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               ___awdiv@sign 0077                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3518                          __Umul8_16@word_mpld 0077  
                                        l143 07F9                                          l219 34C9  
                                        l315 3690                                          l260 3541  
                                        l317 3695                                          l318 369A  
                                        l254 34EE                                          l319 36AF  
                                        l272 34D4                                          l266 3514  
                                        l290 34F7                                          l523 29A2  
                                        l605 02C7                                          l278 34DC  
                                        l526 29C2                                          l543 1DBB  
                                        l623 048A                                          l544 1DCF  
                                        l713 1EC9                                          l378 2213  
                                        l538 1D99                                          l547 1E65  
                                        l539 1DA0                                          l660 18F3  
                                        l709 1EAE                                          l734 1FCC  
                                        l750 142C                                          l655 1843  
                                        l743 13E4                                          l841 35C8  
                                        l745 13F0                                          l906 2D4D  
                                        l594 0293                                          l666 18FE  
                                        l746 13F3                                          l595 0280  
                                        l659 185E                                          l747 13F6  
                                        l748 13F9                                          l941 1A0E  
                                        l677 225B                                          l686 22B6  
                                        l694 2640                                          l954 2627  
                                        l698 265B                                          _abs 357B  
                             RGB_color@color 0071                                          _pad 298C  
                               ___awmod@sign 0077                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 06D5  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1010 28BE                                         l1011 28D8  
                                       l1022 2C30                                         l1042 2ACA  
                                       l1019 2BE2                                         ?_abs 0074  
                                       l1220 11C9                                         l1222 11D6  
                                       l1142 1228                                         l1250 17F3  
                                       l1146 12BB                                         l1074 2CAE  
                                       l1219 11B1                                         l1163 133E  
                                       l1148 129E                                         l1084 2B3E  
                                       l1350 2554                                         l1327 2FC8  
                                       l1184 13B5                                         l1176 139D  
                                       l1290 2F3B                                         l1282 2F1D  
                                       l1276 2EE7                                         l1460 3642  
                                       l1198 10AA                                         l1289 2F31  
                                       l5031 175B                                         l5033 1772  
                                       l4153 1015                                         l5043 178B  
                                       l4155 1019                                         l4171 371A  
                                       l5053 17B4                                         l5063 17E0  
                                       l5039 1789                                         l4159 1040  
                                       l5057 17C9                                         l4513 35C2  
                                       l4177 3568                                         l4601 29E7  
                                       l5083 35EF                                         l4179 3574  
                                       l4531 1957                                         l4435 2B9A  
                                       l4451 3679                                         l7005 3771  
                                       l4445 2BC2                                         ?_pad 0026  
                                       l6223 2EDF                                         l7007 377A  
                                       l4535 197E                                         l4607 29F2  
                                       l4439 2B9F                                         l7103 00C3  
                                       l4721 2A93                                         l6233 2EFA  
                                       l4385 363C                                         l6313 1CF8  
                                       l4537 1982                                         l7033 1DCA  
                                       l4633 2A29                                         l4625 2A18  
                                       l4617 29FA                                         l4481 250D  
                                       l7113 00F3                                         l7121 0121  
                                       l8001 0DF2                                         l6243 2F2F  
                                       l6235 2F0A                                         l6411 36C2  
                                       l6307 1C4C                                         l4547 1999  
                                       l7027 1DB3                                         l4619 2A06  
                                       l4483 251E                                         l7203 02E8  
                                       l7131 0151                                         l8011 0E5A  
                                       l6501 2D9C                                         l4901 116E  
                                       l4813 107E                                         l4717 2A8A  
                                       l6245 2F22                                         l6229 2EF6  
                                       l6325 1D0A                                         l4557 19E1  
                                       l4549 19A8                                         l4581 25BB  
                                       l4573 25AE                                         l7037 1DFC  
                                       l4629 2A21                                         l4645 2868  
                                       l5701 2A68                                         l4815 1086  
                                       l6351 1BE3                                         l4559 19ED  
                                       l4583 25CA                                         l7047 1DD7  
                                       l7055 1E71                                         l4671 289E  
                                       l4663 288D                                         l4487 2537  
                                       l7223 0439                                         l7207 02F0  
                                       l7151 01D0                                         l5703 2A43  
                                       l8015 0E88                                         l8103 2D2C  
                                       l6505 2DA7                                         l6521 2152  
                                       l4905 1170                                         l4833 10A2  
                                       l4809 107B                                         l4737 2AB8  
                                       l6257 2F56                                         l6265 369F  
                                       l6345 1B37                                         l6329 1D34  
                                       l4569 2587                                         l7065 1E84  
                                       l4657 2875                                         l4649 286F  
                                       l7217 0302                                         l7153 020A  
                                       l4761 2C5A                                         l8025 0F0D  
                                       l8105 2D30                                         l4915 1199  
                                       l4843 10C9                                         l4747 2AD7  
                                       l4739 2AC6                                         l6363 1BF5  
                                       l4587 25FA                                         l7059 1E79  
                                       l4659 2881                                         l4667 2896  
                                       l7315 0615                                         l7251 04FC  
                                       l7219 03E6                                         l7171 0296  
                                       l7147 01A0                                         l7139 017F  
                                       l7091 00AA                                         l7083 0098  
                                       l4771 2CA2                                         l4763 2C69  
                                       l8107 2D37                                         l8203 07E4  
                                       l6509 2DB5                                         l4829 109F  
                                       l8117 216A                                         l4693 2BFC  
                                       l4589 2606                                         l7069 1E91  
                                       l7317 061D                                         l7237 0488  
                                       l7229 045A                                         l7157 023A  
                                       l7405 1917                                         l5709 2A6F  
                                       l4781 2AF3                                         l7501 1EC1  
                                       l8045 0FCA                                         l8029 0F3B  
                                       l8221 3757                                         l6447 2802  
                                       l4951 15F0                                         l6367 1C1D  
                                       l7327 0619                                         l7271 0517  
                                       l7239 0491                                         l7159 025F  
                                       l7095 00B1                                         l7431 226C  
                                       l4783 2B02                                         l7511 1EF1  
                                       l8039 0FA6                                         l8055 0FDA  
                                       l4929 11D2                                         l4849 10D5  
                                       l4697 2C16                                         l4953 15F8  
                                       l7353 0699                                         l7337 0667  
                                       l7329 0651                                         l7361 06B4  
                                       l7273 0531                                         l7193 02D4  
                                       l7185 02C2                                         l7177 029E  
                                       l7169 028D                                         l7417 2234  
                                       l8049 0FD0                                         l8073 379D  
                                       l8145 06D6                                         l6491 2D6E  
                                       l6483 2D5E                                         l4875 1135  
                                       l8331 36A4                                         l4971 161B  
                                       l7291 05DD                                         l7195 02D8  
                                       l7371 1856                                         l7435 227D  
                                       l4787 2B32                                         l7531 1F59  
                                       l7515 1F0B                                         l7507 1ED9  
                                       l8075 37C1                                         l8091 2CE6  
                                       l6493 2D7C                                         l4893 1140  
                                       l4869 111C                                         l4877 10FE  
                                       l4949 15EE                                         l6821 126E  
                                       l7453 22CB                                         l7445 228D  
                                       l7437 228A                                         l8093 2CEE  
                                       l8085 2CD2                                         l8325 07EE  
                                       l4895 1157                                         l4879 113A  
                                       l4967 1611                                         l6831 12A8  
                                       l7279 0543                                         l7287 05C5  
                                       l7455 22D8                                         l7471 269E  
                                       l7711 2E41                                         l7703 2DEC  
                                       l8327 141A                                         l7615 13E6  
                                       l7631 1400                                         l8175 073F  
                                       l4969 1613                                         l8329 2FA1  
                                       l6905 136F                                         l6761 11F8  
                                       l7449 22BA                                         l7481 26FF  
                                       l7465 2653                                         l7625 13FC  
                                       l4979 1629                                         l7571 2F80  
                                       l7563 2F64                                         l6931 13B1  
                                       l6763 1200                                         l7299 05F3  
                                       l7379 18A5                                         l7483 267A  
                                       l7491 2704                                         l7555 1FEA  
                                       l7539 1F9B                                         l7723 1A20  
                                       l7715 2E6F                                         l7651 147F  
                                       l7635 1433                                         l7581 2FA9  
                                       l6909 1371                                         l6829 12A6  
                                       l6781 121D                                         l6757 11F5  
                                       l7389 1880                                         l6927 13AD  
                                       l6855 12DB                                         l6847 12C9  
                                       l6839 12B6                                         l6791 1232  
                                       l7751 23DD                                         l7735 1A9A  
                                       l7727 1A42                                         l7671 14FE  
                                       l7647 1465                                         l7585 2FCC  
                                       l7577 2F90                                         l6945 2998  
                                       l6857 12DD                                         l6865 12EC  
                                       l6785 1220                                         l7809 271A  
                                       l7673 1507                                         l7649 1476  
                                       l7657 14A7                                         l7595 2FFB  
                                       l7579 2F95                                         l6955 29A4  
                                       l6891 135D                                         l6883 1350  
                                       l6875 1336                                         l7851 0977  
                                       l7819 277C                                         l7771 2019  
                                       l7747 23AF                                         l7739 1AC8  
                                       l6949 29A0                                         l7909 0A43  
                                       l7853 08E0                                         l7829 083F  
                                       l7781 207C                                         l7669 14ED  
                                       l6959 29CE                                         l6991 28EA  
                                       l7919 0A84                                         l7847 0973  
                                       l7839 08A7                                         l7759 242E  
                                       l7679 152F                                         l6897 1364  
                                       l7929 0AEB                                         l7865 0901  
                                       l7689 158F                                         l6899 1366  
                                       l7939 0B53                                         l7699 2DBE  
                                       l7973 0CCD                                         l7949 0BB5  
                                       l7877 0922                                         l7789 22DE  
                                       l7983 0D37                                         l7959 0C37  
                                       l7799 2345                                         l7969 0C9F  
                                       l7889 0953                                         l7987 0D65  
                                       l7997 0DD0                                         STR_1 393B  
                                       STR_2 3835                                         STR_3 38BC  
                                       STR_4 3800                                         STR_5 3860  
                                       STR_6 3911                                         STR_7 3890  
                                       STR_8 3002                                         STR_9 38E7  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u5400 2BBA                                         u6025 2878  
                                       u5410 2BBB                                         u6045 2887  
                                       u6215 2AB9                                         u5255 3643  
                                       u5335 3584                                         u6055 288E  
                                       u5345 2B70                                         u6305 2C8F  
                                       u5515 24F9                                         u5620 355C  
                                       u6245 2ACE                                         u5365 2B89  
                                       u5630 355D                                         u6270 2C4A  
                                       u5535 2527                                         u5720 1989  
                                       u6185 2A9C                                         u5465 24A6  
                                       u6345 2B20                                         u5490 24D4  
                                       u5570 360C                                         _SCS0 04C8  
                                       u5395 2BAC                                         u5555 2540  
                                       u5475 24C1                                         _SCS1 04C9  
                                       u5580 360D                                         u6525 1143  
                                       u9005 1D23                                         u4765 103E  
                                       u6615 1187                                         u6455 1106  
                                       u5655 35C9                                         u5495 24D0  
                                       u9120 36B8                                         u6625 11A2  
                                       u6545 114C                                         u6465 110D  
                                       u5665 35CE                                         u9130 36B9  
                                       u6635 11BB                                         u5755 19CE  
                                       u9140 36C7                                         u6485 1116  
                                       u6805 1767                                         u9045 1C0E  
                                       u5925 29FD                                         u9150 36C8  
                                       u6495 112A                                         u6735 169F  
                                       u5855 25E8                                         u9305 20C7  
                                       u6745 16CE                                         u5945 2A07  
                                       u9410 35A1                                         u9235 2D71  
                                       u9315 20DE                                         u6755 1724  
                                       u5955 2A11                                         u9420 35A2  
                                       u6765 173B                                         u5965 2A19  
                                       u9255 2D7D                                         u9335 2114  
                                       u6775 174A                                         u9265 2D91  
                                       u9345 212B                                         u6785 175E  
                                       u9530 128C                                         u9275 2D9D  
                                       u6875 17A2                                         u9540 128D  
                                       u6885 17BD                                         u9525 1282  
                                       u6895 17D3                                         u8905 2F29  
                                       u9653 12FE                                         u9645 12E1  
                                       u9575 12AC                                         u9920 36E2  
                                       u8945 2F43                                         u8865 2F03  
                                       u9905 29AE                                         u9930 36E3  
                                       u9860 35B8                                         u8885 2F17  
                                       u9870 35B9                                         u9950 3704  
                                       u9695 1351                                         u9960 3705  
                                       _TMR1 0016                                         u9795 1388  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 0220  
                                       _atoi 2F5F                                         _ctoa 3764  
                                       _main 373C                                         _dtoa 1D54  
                                       _prec 01C0                                         _otoa 183C  
                                       _nout 01BC                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2219                                         btemp 007E  
                                       _utoa 2639                                         _xtoa 1EA7  
                              ___fpclassifyf 2B4F                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1655 0079  
                   __end_of_send_I2C_stopBit 34E0                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 350E  
                              ?_EUSART_Write 0070                                ___fltol@sign1 007A  
                            __end_of___aldiv 2DBE                              __end_of___aodiv 1A20  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 13BD                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 2639  
              I2C_writeRegister@slaveAddress 0075                              __end_of___fldiv 11DB  
                            __end_of___awdiv 2A2E                              __end_of___flneg 3504  
                                      STR_10 3863                                        STR_11 39BB  
                                      STR_12 39CB                                        STR_21 39C7  
                                      STR_30 39C8                                        STR_23 39CF  
                                      STR_15 39BF                                        STR_16 39D3  
                                      STR_25 39CF                                        STR_41 39F6  
                              __CFG_WDTE$OFF 0000                                        STR_34 39D0  
                                      STR_50 39F9                                        STR_43 39F6  
                                      STR_19 39C7                                        STR_52 39F9  
                                      STR_60 39DB                              __end_of___awmod 28A3  
                                      STR_37 39ED                                        STR_62 39DB  
                                      STR_70 3A02                                        STR_46 39F0  
                                      STR_39 39ED                                        STR_55 39F3  
                                      STR_48 39F0                                        STR_72 3A02  
                                      STR_80 39D7                                        STR_57 39F3  
                                      STR_82 39D7                                        STR_90 39FC  
                                      STR_67 39DC                                        STR_75 3A05  
                                      STR_92 39FC                                        STR_77 3A05  
                                      STR_87 39D8                                        STR_95 39FF  
                            __end_of___flmul 1800                                        STR_97 39FF  
                                      ?_otoa 0030                              __end_of___flsub 3670  
                            __end_of___fltol 2AE6                                        ?_stoa 0020  
                                      u10020 1D6F                                        u10005 28E6  
                                      u10030 1D70                                        ?_utoa 0030  
                                      u11000 1F22                                        u10105 1E6F  
                                      u11010 1F23                                        u10125 1DEB  
                                      u10230 00E4                                        u11030 1F42  
                                      u10135 1DF7                                        u10240 00E5  
                                      u11040 1F43                                        u11105 1FC7  
                                      u10075 1DAB                                        u11300 1524  
                                      u10270 0142                                        u11310 1525  
                                      u11160 2FE0                                        u10280 0143  
                                      u11065 1F7F                                        u11170 2FE1  
                                      u11250 149C                                        u10355 028B  
                            __end_of___lodiv 2CBF                                        u11075 1FA5  
                                      u11260 149D                              ___awdiv@divisor 0071  
                                      u11095 1FBB                                        ?_xtoa 0030  
                                      u10800 2223                                        u10465 030C  
                                      u10385 02AB                                        u10395 02BE  
                                      u10715 184E                                        u10725 18D7  
                                      u10670 068C                                        u10655 065A  
                                      u10735 18FC                                        u10680 068D  
                                      u11480 205D                                        u10585 05CF  
                                      u10905 264B                                        u11490 205E  
                                      u10595 05DB                                        u10755 1894  
                                      u10835 2254                                        u10765 18A0  
                                      u10855 2288                                        u10935 268D  
                                      u10865 2297                                        u10945 2699  
                                      u11907 375E                                        u10885 22D6  
                                      u11845 2D23                                        u11917 0702  
                                      u11855 2180                                        u10975 1EB9  
                                      u11927 0746                                        u11937 3538  
                            __end_of___lomod 2B4F                                        u11875 21E6  
                                      u10995 1F05                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l125 001C                              ___awdiv@counter 0076  
                               vfpfcnvrt@fmt 00E5                                 vfpfcnvrt@llu 0146  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                             __CFG_FCMEN$OFF 0000                                        _flags 01C2  
                                      _errno 01BA                                        _fputc 100D  
                            __end_of_isalpha 3614                                        _fputs 3716  
                                      _myIsr 0004                              __end_of_isdigit 3564  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 01BE  
                                      ctoa@c 0032                                        _putch 07FF  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 35C0  
                            __end_of_isspace 35F7                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 35A9                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                                        stoa@i 002A  
                                      stoa@l 0032                                        stoa@p 0030  
                                      stoa@s 0022                                        stoa@w 002C  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                               ?___fpclassifyf 0071  
                            __end_of_tolower 36F4                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 39B3                              __end_of_strncmp 2A80  
                            __end_of_toupper 3716                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1670 0079  
                             __CFG_MCLRE$OFF 0000                              __initialization 0020  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 3000  
                               __end_of_ctoa 3795                                 __end_of_main 3764  
                               __end_of_dtoa 1EA7                                 __end_of_otoa 192D  
                               __end_of_stoa 22DE                                 __end_of_utoa 271A  
                               __end_of_xtoa 2000                     __end_of_UV_delay_setting 39B3  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3000  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 01DE                                       ??_dtoa 003A  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_100 39DF                                       STR_102 39DF  
                                     STR_110 3A08                                       ?_fputs 007A  
                                     STR_112 3A08                                       STR_120 39E3  
                                     STR_122 39E3                                       STR_107 39E0  
                                     STR_131 39E4                                       STR_115 3A0B  
                                     ?_myIsr 0070                                       STR_140 3A0E  
                                     STR_124 39C3                                       STR_117 3A0B  
                                     STR_126 39C3                                       STR_142 39E7  
                                     STR_135 39C4                                       STR_151 39EA  
                                     STR_144 39E7                                       STR_153 39EA  
                                     STR_138 3A0E                                       STR_147 3A11  
                                     STR_149 3A11                             ___awdiv@dividend 0073  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 3983                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 39BB                                vfpfcnvrt@done 012D  
                                     _TX1REG 019A       setOverCurrentDischargeProtection@i_851 00AA  
                                     _SPLLEN 04CF                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u580lld 2585  
                                     u569lld 1955                                _read_I2C_data 353D  
                           __end_of___xxtofl 2F5F                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 36B0                                 vfprintf@cfmt 00EC  
                                     ___flge 2BC7                                       ___fleq 28A3  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                                  ??___fladd 0020                                    ??___aomod 0071  
                                     ___wmul 35C0                                    ??___fldiv 0048  
                                  ??___awdiv 0075                                    ??___flneg 0075  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0075  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 005E                                    ??___lodiv 0071  
                           __end_of_init_I2C 353D                                    ??___lomod 0071  
                           __end_of_init_AFE 083F                                       _efgtoa 0058  
                           __end_of_init_RGB 07FF                    __end_of_ATmega328_address 3002  
                                     _floorf 2485                             ___awdiv@quotient 0078  
                      _beginAFEcommunication 2165                              ___awmod@divisor 0071  
                            ___awmod@counter 0076                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strcpy 3670                                       _strlen 3564  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __size_of__Umul8_16 001F                              ___fpclassifyf@e 0020  
                            ___fpclassifyf@u 0022                              ___fpclassifyf@x 0071  
                                  ??_islower 0073                                    ??_isspace 0073  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002E  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 37CA                                       utoa@fp 0030  
                           __end_of_snprintf 2019                                    ??_tolower 0020  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                              ??___fpclassifyf 0075  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                                   ___fleq@ff1 0071  
                                 ___fleq@ff2 0075                      __end_of__initialization 0054  
                             ?_read_I2C_data 0071                                   ___flneg@f1 0071  
                                 ___fltol@f1 005A                     ?_setTemperatureLimitsint 0020  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 34C1  
                              __end_of_fputc 1061                                __end_of_fputs 373C  
                              __end_of_myIsr 001E                                 _cellVoltages 01A0  
                              __end_of_putch 0800                           _RGB_AWAIT_AFE_CONN 36B0  
                        ?_RGB_AWAIT_AFE_CONN 0070                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 34D0                           __size_of_init_GPIO 0038  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 016F                            __end_of__Umul8_16 3651  
                                 __pmaintext 373C                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                                      ?___fleq 0071  
                          ?_send_I2C_stopBit 0070                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                                    ?_efgtoa 00A0                       ?_beginAFEcommunication 0020  
                                    ?_floorf 005A                           ??_send_I2C_stopBit 0071  
                                    ?_strcpy 0071                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B6                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_842 00AA                           __size_of_vfpfcnvrt FC43  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 3800  
                                    ___aldiv 2D3C                                      _adcGain 01CE  
                            __size_of___flge 007C                              __size_of___fleq 0049  
                                    ___aodiv 192D                                      ___fladd 11DB  
                                    ___aomod 255D                                      ___fldiv 1061  
                                    ___awdiv 29DD                                      ___flneg 34FB  
                                    ___awmod 285E                                      ___flmul 15D4  
                                    ___flsub 3651                                      ___fltol 2A80  
                            __size_of___wmul 001B                                      ___lodiv 2C43  
                                    ___lomod 2AE6                                    ?_vfprintf 00E7  
                            __size_of_efgtoa 067D                                    ?_snprintf 015F  
                              _messageBuffer 2771              ??_AFE_getSetShortCircuitCurrent 0067  
                            __size_of_floorf 00D8                                      __ptext1 06D5  
                                    __ptext2 2001                                      __ptext3 2CBF  
                                    __ptext4 3795                                      __ptext5 13BD  
                                    __ptext6 1EA7                                      __ptext7 36F4  
                                    __ptext8 35A9                                      __ptext9 35F7  
                          __end_of_init_GPIO 183C                            __end_of_initClock 1804  
                          __end_of_init_TMR1 352D                              __size_of_strcpy 001F  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                               __size_of_abs 0017           __size_of_AFE_getSetCurrentSenseRes 000A  
                               __size_of_pad 0051                                      _isalpha 35F7  
                                    _isdigit 354D                                   ??___xxtofl 0075  
                           ___awmod@dividend 0073                   ?_AFE_getSetCurrentSenseRes 0071  
                           ___aldiv@dividend 0075                                      _islower 35A9  
                                    _isspace 35DB    __end_of_setOverCurrentDischargeProtection 1C3D  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 1B28  
                                    _isupper 3592                                      efgtoa@c 00A6  
                                    efgtoa@d 00C3                                      efgtoa@e 00DB  
                                    efgtoa@f 00A2                                      efgtoa@g 00D7  
                                    efgtoa@h 00CD                                      efgtoa@i 00D5  
                                    efgtoa@l 00D1                                      efgtoa@m 00BF  
                                    efgtoa@n 00DD                                      efgtoa@p 00C7  
                                    efgtoa@t 00BB                                      efgtoa@u 00DF  
                                    efgtoa@w 00CA                                      atoi@neg 0024  
                                    _tolower 36D2                                      clrloop0 1002  
                                    _strncmp 2A2E                                      _toupper 36F4  
                       end_of_initialization 0054                                      floorf@e 0068  
                                    floorf@m 0064                                      floorf@u 006A  
                                    floorf@x 005A                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
                          _EUSART_Initialize 20BD                           ?_EUSART_Initialize 0026  
                          __end_of_vfpfcnvrt 1000                                   efgtoa@mode 00CC  
                                 efgtoa@sign 00C5                                _send_I2C_NACK 34F2  
                           ___aldiv@quotient 0022                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 3D0086                                      psplit$1 860087  
                                    psplit$2 870088                                      psplit$3 880089  
                                    psplit$4 89008A                                      psplit$5 8A008B  
                                    psplit$6 8B008C                                      psplit$7 8C008D  
                              _send_I2C_data 34E9                                    _RGB_color 368F  
                                 ??_vfprintf 006E                           EUSART_Initialize@x 007A  
                                 ??_snprintf 0169                                      strcpy@d 0077  
                                    strlen@a 0073                                      strcpy@s 0075  
                                    strlen@s 0071                          ??_EUSART_Initialize 002A  
                                ___fladd@grs 002B                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 350E                            __end_of_vsnprintf 2D3C  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
              __end_of_SCD_threshold_setting 39A3                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 3614                                  ___flmul@grs 0034  
                  __end_of_EUSART_Initialize 2165                        _OCD_threshold_setting 3963  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
 __end_of_AFE_getOverCurrentDischargeCurrent 293C  __size_of_AFE_getOverCurrentDischargeCurrent 0050  
       ??_AFE_getOverCurrentDischargeCurrent 0067          ?_AFE_getOverCurrentDischargeCurrent 0063  
         _AFE_getOverCurrentDischargeCurrent 28EC                                   ?_RGB_color 0071  
                             __end_of___flge 2C43                               __end_of___fleq 28EC  
                                vfpfcnvrt@ap 00E6                                  vfpfcnvrt@cp 012C  
                                vfpfcnvrt@ct 0135                                  vfpfcnvrt@fp 00E3  
                                vfpfcnvrt@ll 013C                               __end_of___wmul 35DB  
                                vfpfcnvrt@vp 0144                               __end_of_efgtoa 06D5  
                               _EUSART_Write 34C8                               __end_of_floorf 255D  
                I2C_writeRegister@regAddress 0077                                   floorf@F524 01AA  
              setShuntResistorValue@res_mOhm 0071             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strcpy 368F                               __end_of_strlen 357B  
      __end_of_AFE_getSetShortCircuitCurrent 298C       __size_of_AFE_getSetShortCircuitCurrent 0050  
              _AFE_getSetShortCircuitCurrent 293C                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                          pnum$text5_split_1 0086                            pnum$text5_split_2 0087  
                          pnum$text5_split_3 0088                            pnum$text5_split_4 0089  
                          pnum$text5_split_5 008A                            pnum$text5_split_6 008B  
                          pnum$text5_split_7 008C                            pnum$text5_split_8 008D  
                              ?_statemachine 0070                                  __end_of_abs 3592  
                                __end_of_pad 29DD                            _minCellTempCharge 01CA  
                       _maxCellTempDischarge 01C4                         _minCellTempDischarge 01C8  
                  __end_of_I2C_writeRegister 3632       _setOverCurrentDischargeProtection$1905 00A4  
                      __end_of___fpclassifyf 2BC7                            _EUSART_Write_Text 2800  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 00E9  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___wmul 0075                                     ??_efgtoa 00A7  
                                  __Umul8_16 3632                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01D7                                     ??_floorf 005E  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 0075                                    ___fladd@b 0071  
                               vsnprintf@cnt 0157                                 vsnprintf@fmt 0152  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01CC  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 0040  
                                  ___flsub@b 0044                               ??_statemachine 016D  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D2                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01DE                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 0163  
                          __size_of___xxtofl 0096                                 _readRegister 37CA  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 281A  
                 __size_of_EUSART_Initialize 00A8                                ??_internal_16 0071  
                                  _atoi$1532 0026                                    _atoi$1533 002A  
                                  _atoi$1534 0028                             _OV_delay_setting 39A3  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 003E  
                          __size_of_init_RGB 0005                                  _efgtoa$1021 00B3  
                                _efgtoa$1016 00AF                                  _efgtoa$1025 00B5  
                                _efgtoa$1017 00B1                                  _efgtoa$1026 00B7  
                                _efgtoa$1027 00B9                            _send_I2C_startBit 34D0  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0071  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 0071                __end_of_setShuntResistorValue 3522  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___awdiv 0071                             ___aodiv@quotient 0074  
                                   ?___flneg 0071                                     ?___awmod 0071  
                                   ?___flmul 0026                                     ?___flsub 0040  
                                   ?___fltol 005A                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0026  
                          __size_of_vfprintf 0035                          ??_send_I2C_startBit 0071  
                          __size_of_snprintf 0018               BQ76920@shuntResistorValue_mOhm 01B2  
                            ___lomod@divisor 0020                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                ??_AFE_getSetCurrentSenseRes 0075                                    _init_GPIO 1804  
                                   ?_isupper 0071                                    _initClock 1801  
                                  _init_TMR1 3522                                    _currState 01D4  
                                   ?_tolower 0077                    _setShortCircuitProtection 1C3D  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071               ?_AFE_getSetShortCircuitCurrent 0063  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0071                        __end_of_read_I2C_data 354D  
                            ___aldiv@counter 0020                               ___wmul@product 0075  
                            BQ76920@protect1 01D1                              BQ76920@protect2 01D0  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 34D8                                    clear_ram0 1001  
                                  _tmr1_flag 01D3                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 34E9  
                                  _vfpfcnvrt 13BD                                    _xtoa$1063 0043  
                                  _xtoa$1064 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 281A                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1572 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 0145                                   vfpfcnvrt@f 0138  
                 __size_of_EUSART_Write_Text 001A                                    _vsnprintf 2CBF  
                          _OCD_delay_setting 3983                    _AFE_getSetCurrentSenseRes 3504  
                       __end_of_statemachine 07FA                                   vfprintf@ap 00EB  
                                 vfprintf@fp 00E7                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
                           __size_of___flneg 0009               _setShortCircuitProtection$1904 00A4  
                           __size_of___awmod 0045                                  vsnprintf@ap 0154  
                           __size_of___flmul 022C                             __size_of___flsub 001F  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00E3                                   snprintf@ap 016C  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 01AE                                     ___xxtofl 2EC9  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                                     _dtoa$993 003D  
                           _send_I2C_stopBit 34D8                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 2639  
                                   __ptext11 2AE6                                     __ptext20 2485  
                                   __ptext12 2C43                                     __ptext21 2B4F  
                                   __ptext13 2A2E                                     __ptext30 255D  
                                   __ptext22 3651                                     __ptext14 2219  
                                   __ptext31 192D                                     __ptext23 11DB  
                                   __ptext15 183C                                     __ptext40 354D  
                                   __ptext32 3764                                     __ptext24 34FB  
                                   __ptext16 0058                                     __ptext41 0801  
                                   __ptext33 298C                                     __ptext25 28A3  
                                   __ptext17 36D2                                     __ptext50 2165  
                                   __ptext42 281A                                     __ptext34 3564  
                                   __ptext26 285E                                     __ptext18 3592  
                                   __ptext51 37CA                                     __ptext43 35C0  
                                   __ptext35 3716                                     __ptext27 29DD  
                                   __ptext19 3670                                     __ptext60 368F  
                                   __ptext52 34F2                                     __ptext44 3518  
                                   __ptext36 100D                                     __ptext28 1D54  
                                   __ptext61 2800                                     __ptext53 353D  
                                   __ptext45 1C3D                                     __ptext37 07FF  
                                   __ptext29 357B                                     __ptext70 07FA  
                                   __ptext62 34C8                                     __ptext54 3614  
                                   __ptext46 1B28                                     __ptext38 2F5F  
                                   __ptext71 352D                                     __ptext63 293C  
                                   __ptext55 34D8                                     __ptext47 15D4  
                                   __ptext39 35DB                                     __ptext72 1804  
                                   __ptext64 3504                                     __ptext56 34D0  
                                   __ptext48 3632                                     __ptext73 1801  
                                   __ptext65 28EC                                     __ptext57 34E9  
                                   __ptext49 2BC7                                     __ptext74 34E0  
                                   __ptext66 2EC9                                     __ptext58 350E  
                                   __ptext75 20BD                                     __ptext67 2A80  
                                   __ptext59 36B0                                     __ptext76 2D3C  
                                   __ptext68 1061                                     __ptext69 3522  
                           __size_of_isupper 0017                             __size_of_tolower 0022  
                  __end_of_OCD_delay_setting 3993                                   strcpy@dest 0078  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 014E                                     _init_I2C 352D  
                                   _init_AFE 0801                                     _init_RGB 07FA  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0028                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text5 003D  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3993  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 34E0                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                     efgtoa@fp 00A0  
                                   efgtoa@ne 00C1                                     efgtoa@pp 00BD  
                                   efgtoa@ou 00AB                                    stoa@F1174 01D7  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2219  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D6                                     _protect2 01D5  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 3795  
                                   _snprintf 2001                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 39AB  
                             _vfpfcnvrt$1105 0133                               _vfpfcnvrt$1078 012F  
                             _vfpfcnvrt$1079 0131                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 3863  
                             __pstringtext11 3890                               __pstringtext20 39CB  
                             __pstringtext12 38BC                               __pstringtext21 39CF  
                             __pstringtext13 38E7                               __pstringtext30 39F0  
                             __pstringtext22 39D3                               __pstringtext14 3911  
                             __pstringtext31 39F3                               __pstringtext23 39D7  
                             __pstringtext15 393B                               __pstringtext40 3A0E  
                             __pstringtext32 39F6                               __pstringtext24 39DB  
                             __pstringtext16 39BB                               __pstringtext41 3A11  
                             __pstringtext33 39F9                               __pstringtext25 39DF  
                             __pstringtext17 39BF                               __pstringtext42 0000  
                             __pstringtext34 39FC                               __pstringtext26 39E3  
                             __pstringtext18 39C3                               __pstringtext35 39FF  
                             __pstringtext27 39E7                               __pstringtext19 39C7  
                             __pstringtext36 3A02                               __pstringtext28 39EA  
                             __pstringtext37 3A05                               __pstringtext29 39ED  
                             __pstringtext38 3A08                               __pstringtext39 3A0B  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 0159                                   vsnprintf@n 0150  
                                 vsnprintf@s 014E                             _UV_delay_setting 39AB  
                                  snprintf@n 0161                                    snprintf@s 015F  
               __end_of_send_I2C_controlByte 3518                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                   isspace@c 0071                            __CFG_CLKOUTEN$OFF 0000  
                                  strcpy@src 0071                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                efgtoa@nmode 00C9                            _maxCellTempCharge 01C6  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 0120  
                                   stoa@nuls 0023                              ___aomod@counter 0072  
                              __pstringtext1 3963                                __pstringtext2 3983  
                              __pstringtext3 3993                                __pstringtext4 39A3  
                              __pstringtext5 39AB                                __pstringtext6 39B3  
                              __pstringtext7 3000                                __pstringtext8 3800  
                              __pstringtext9 3835                       __Umul8_16@multiplicand 0071  
                                   tolower@c 0077                               _vsnprintf$1707 0155  
                     __size_of___fpclassifyf 0078                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 0021                                  _SSPCON2bits 0216  
                              ___fladd@signs 0028              __end_of_setTemperatureLimitsint 285E  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 00EE  
                               ___fladd@aexp 0029                                 ___fladd@bexp 002A  
                      __size_of_statemachine 0125                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 36D2                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 34FB  
                          __Umul8_16@product 0075  
