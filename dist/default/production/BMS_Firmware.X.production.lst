

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 26 21:45:56 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	cinit,global,class=CODE,merge=1,delta=2
    47                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    49                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    50                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    51                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    52                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    53                           	psect	clrtext,global,class=CODE,delta=2
    54                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    55                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    56                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    57                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    58                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    59                           	psect	text1,local,class=CODE,merge=1,delta=2
    60                           	psect	text2,local,class=CODE,merge=1,delta=2
    61                           	psect	text3,local,class=CODE,merge=1,delta=2
    62                           	psect	text4,local,class=CODE,merge=1,delta=2
    63                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text7,local,class=CODE,merge=1,delta=2
    66                           	psect	text8,local,class=CODE,merge=1,delta=2
    67                           	psect	text9,local,class=CODE,merge=1,delta=2
    68                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text14,local,class=CODE,merge=1,delta=2
    73                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text18,local,class=CODE,merge=1,delta=2
    77                           	psect	text19,local,class=CODE,merge=1,delta=2
    78                           	psect	text20,local,class=CODE,merge=1,delta=2
    79                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text24,local,class=CODE,merge=1,delta=2
    83                           	psect	text25,local,class=CODE,merge=1,delta=2
    84                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text33,local,class=CODE,merge=1,delta=2
    92                           	psect	text34,local,class=CODE,merge=1,delta=2
    93                           	psect	text35,local,class=CODE,merge=1,delta=2
    94                           	psect	text36,local,class=CODE,merge=1,delta=2
    95                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text38,local,class=CODE,merge=1,delta=2
    97                           	psect	text39,local,class=CODE,merge=1,delta=2
    98                           	psect	text40,local,class=CODE,merge=1,delta=2
    99                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text42,local,class=CODE,merge=1,delta=2
   101                           	psect	text43,local,class=CODE,merge=1,delta=2
   102                           	psect	text44,local,class=CODE,merge=1,delta=2
   103                           	psect	text45,local,class=CODE,merge=1,delta=2
   104                           	psect	text46,local,class=CODE,merge=1,delta=2
   105                           	psect	text47,local,class=CODE,merge=1,delta=2
   106                           	psect	text48,local,class=CODE,merge=1,delta=2
   107                           	psect	text49,local,class=CODE,merge=1,delta=2
   108                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text51,local,class=CODE,merge=1,delta=2
   110                           	psect	text52,local,class=CODE,merge=1,delta=2
   111                           	psect	text53,local,class=CODE,merge=1,delta=2
   112                           	psect	text54,local,class=CODE,merge=1,delta=2
   113                           	psect	text55,local,class=CODE,merge=1,delta=2
   114                           	psect	text56,local,class=CODE,merge=1,delta=2
   115                           	psect	text57,local,class=CODE,merge=1,delta=2
   116                           	psect	text58,local,class=CODE,merge=1,delta=2
   117                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
   118                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text67,local,class=CODE,merge=1,delta=2
   126                           	psect	text68,local,class=CODE,merge=1,delta=2
   127                           	psect	text69,local,class=CODE,merge=1,delta=2
   128                           	psect	text70,local,class=CODE,merge=1,delta=2
   129                           	psect	text71,local,class=CODE,merge=1,delta=2
   130                           	psect	text72,local,class=CODE,merge=1,delta=2
   131                           	psect	text73,local,class=CODE,merge=1,delta=2
   132                           	psect	text74,local,class=CODE,merge=1,delta=2
   133                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   134                           	psect	intentry,global,class=CODE,delta=2
   135                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
   136                           	psect	text8_split_2,local,class=CODE,merge=1,delta=2
   137                           	dabs	1,0xCA0,32
   138                           	dabs	1,0xC20,80
   139                           	dabs	1,0xBE1,15
   140                           	dabs	1,0x2771,0,_messageBuffer
   141                           	dabs	1,0x7E,2
   142  0000                     
   143                           ; Version 2.05
   144                           ; Generated 20/12/2018 GMT
   145                           ; 
   146                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   147                           ; All rights reserved.
   148                           ; 
   149                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   150                           ; 
   151                           ; Redistribution and use in source and binary forms, with or without modification, are
   152                           ; permitted provided that the following conditions are met:
   153                           ; 
   154                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   155                           ;        conditions and the following disclaimer.
   156                           ; 
   157                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   158                           ;        of conditions and the following disclaimer in the documentation and/or other
   159                           ;        materials provided with the distribution.
   160                           ; 
   161                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   162                           ;        software without specific prior written permission.
   163                           ; 
   164                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   165                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   166                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   167                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   168                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   169                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   170                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   171                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   172                           ; 
   173                           ; 
   174                           ; Code-generator required, PIC16F1719 Definitions
   175                           ; 
   176                           ; SFR Addresses
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0110                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  0118                     	;# 
   239  0119                     	;# 
   240  011A                     	;# 
   241  011B                     	;# 
   242  011B                     	;# 
   243  011C                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  018F                     	;# 
   248  0190                     	;# 
   249  0191                     	;# 
   250  0191                     	;# 
   251  0192                     	;# 
   252  0193                     	;# 
   253  0193                     	;# 
   254  0194                     	;# 
   255  0195                     	;# 
   256  0196                     	;# 
   257  0197                     	;# 
   258  0199                     	;# 
   259  0199                     	;# 
   260  0199                     	;# 
   261  019A                     	;# 
   262  019A                     	;# 
   263  019A                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  019C                     	;# 
   271  019C                     	;# 
   272  019D                     	;# 
   273  019D                     	;# 
   274  019D                     	;# 
   275  019E                     	;# 
   276  019E                     	;# 
   277  019E                     	;# 
   278  019F                     	;# 
   279  019F                     	;# 
   280  019F                     	;# 
   281  019F                     	;# 
   282  019F                     	;# 
   283  020C                     	;# 
   284  020D                     	;# 
   285  020E                     	;# 
   286  020F                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  028C                     	;# 
   305  028D                     	;# 
   306  028E                     	;# 
   307  028F                     	;# 
   308  0290                     	;# 
   309  0291                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0293                     	;# 
   313  0293                     	;# 
   314  0298                     	;# 
   315  0298                     	;# 
   316  0299                     	;# 
   317  029A                     	;# 
   318  029A                     	;# 
   319  029E                     	;# 
   320  030C                     	;# 
   321  030D                     	;# 
   322  030E                     	;# 
   323  030F                     	;# 
   324  0310                     	;# 
   325  038C                     	;# 
   326  038D                     	;# 
   327  038E                     	;# 
   328  038F                     	;# 
   329  0390                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  0394                     	;# 
   334  0395                     	;# 
   335  0396                     	;# 
   336  0397                     	;# 
   337  0398                     	;# 
   338  0399                     	;# 
   339  039D                     	;# 
   340  039E                     	;# 
   341  039F                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0498                     	;# 
   349  0498                     	;# 
   350  0499                     	;# 
   351  049A                     	;# 
   352  049B                     	;# 
   353  049B                     	;# 
   354  049C                     	;# 
   355  049D                     	;# 
   356  049E                     	;# 
   357  049F                     	;# 
   358  0511                     	;# 
   359  0515                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061C                     	;# 
   368  0691                     	;# 
   369  0692                     	;# 
   370  0693                     	;# 
   371  0694                     	;# 
   372  0695                     	;# 
   373  0696                     	;# 
   374  0697                     	;# 
   375  0698                     	;# 
   376  0699                     	;# 
   377  069A                     	;# 
   378  069B                     	;# 
   379  069C                     	;# 
   380  069D                     	;# 
   381  069E                     	;# 
   382  069F                     	;# 
   383  0E0F                     	;# 
   384  0E10                     	;# 
   385  0E11                     	;# 
   386  0E12                     	;# 
   387  0E13                     	;# 
   388  0E14                     	;# 
   389  0E15                     	;# 
   390  0E17                     	;# 
   391  0E20                     	;# 
   392  0E21                     	;# 
   393  0E22                     	;# 
   394  0E24                     	;# 
   395  0E25                     	;# 
   396  0E28                     	;# 
   397  0E29                     	;# 
   398  0E2A                     	;# 
   399  0E2B                     	;# 
   400  0E90                     	;# 
   401  0E91                     	;# 
   402  0E92                     	;# 
   403  0E93                     	;# 
   404  0E94                     	;# 
   405  0E95                     	;# 
   406  0E96                     	;# 
   407  0E97                     	;# 
   408  0E98                     	;# 
   409  0E99                     	;# 
   410  0E9A                     	;# 
   411  0E9B                     	;# 
   412  0E9C                     	;# 
   413  0E9D                     	;# 
   414  0E9E                     	;# 
   415  0E9F                     	;# 
   416  0EA0                     	;# 
   417  0EA1                     	;# 
   418  0EA2                     	;# 
   419  0EA3                     	;# 
   420  0EA4                     	;# 
   421  0EA5                     	;# 
   422  0EA6                     	;# 
   423  0EA7                     	;# 
   424  0EA8                     	;# 
   425  0EA9                     	;# 
   426  0EAA                     	;# 
   427  0EAB                     	;# 
   428  0EAC                     	;# 
   429  0EAD                     	;# 
   430  0EAE                     	;# 
   431  0EAF                     	;# 
   432  0EB0                     	;# 
   433  0EB1                     	;# 
   434  0EB2                     	;# 
   435  0F0F                     	;# 
   436  0F10                     	;# 
   437  0F11                     	;# 
   438  0F12                     	;# 
   439  0F13                     	;# 
   440  0F14                     	;# 
   441  0F15                     	;# 
   442  0F16                     	;# 
   443  0F17                     	;# 
   444  0F18                     	;# 
   445  0F19                     	;# 
   446  0F1A                     	;# 
   447  0F1B                     	;# 
   448  0F1C                     	;# 
   449  0F1D                     	;# 
   450  0F1E                     	;# 
   451  0F1F                     	;# 
   452  0F20                     	;# 
   453  0F21                     	;# 
   454  0F22                     	;# 
   455  0F23                     	;# 
   456  0F24                     	;# 
   457  0F25                     	;# 
   458  0F26                     	;# 
   459  0F27                     	;# 
   460  0F28                     	;# 
   461  0F29                     	;# 
   462  0F2A                     	;# 
   463  0F2B                     	;# 
   464  0F2C                     	;# 
   465  0F2D                     	;# 
   466  0F2E                     	;# 
   467  0F2F                     	;# 
   468  0F30                     	;# 
   469  0F31                     	;# 
   470  0F32                     	;# 
   471  0F33                     	;# 
   472  0F34                     	;# 
   473  0F35                     	;# 
   474  0F36                     	;# 
   475  0F37                     	;# 
   476  0FE4                     	;# 
   477  0FE5                     	;# 
   478  0FE6                     	;# 
   479  0FE7                     	;# 
   480  0FE8                     	;# 
   481  0FE9                     	;# 
   482  0FEA                     	;# 
   483  0FEB                     	;# 
   484  0FED                     	;# 
   485  0FEE                     	;# 
   486  0FEF                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  000D                     	;# 
   501  000E                     	;# 
   502  000F                     	;# 
   503  0010                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009A                     	;# 
   530  009B                     	;# 
   531  009B                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009E                     	;# 
   535  009F                     	;# 
   536  010C                     	;# 
   537  010D                     	;# 
   538  010E                     	;# 
   539  010F                     	;# 
   540  0110                     	;# 
   541  0111                     	;# 
   542  0112                     	;# 
   543  0113                     	;# 
   544  0114                     	;# 
   545  0115                     	;# 
   546  0116                     	;# 
   547  0117                     	;# 
   548  0118                     	;# 
   549  0119                     	;# 
   550  011A                     	;# 
   551  011B                     	;# 
   552  011B                     	;# 
   553  011C                     	;# 
   554  018C                     	;# 
   555  018D                     	;# 
   556  018E                     	;# 
   557  018F                     	;# 
   558  0190                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0194                     	;# 
   565  0195                     	;# 
   566  0196                     	;# 
   567  0197                     	;# 
   568  0199                     	;# 
   569  0199                     	;# 
   570  0199                     	;# 
   571  019A                     	;# 
   572  019A                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019C                     	;# 
   581  019C                     	;# 
   582  019D                     	;# 
   583  019D                     	;# 
   584  019D                     	;# 
   585  019E                     	;# 
   586  019E                     	;# 
   587  019E                     	;# 
   588  019F                     	;# 
   589  019F                     	;# 
   590  019F                     	;# 
   591  019F                     	;# 
   592  019F                     	;# 
   593  020C                     	;# 
   594  020D                     	;# 
   595  020E                     	;# 
   596  020F                     	;# 
   597  0210                     	;# 
   598  0211                     	;# 
   599  0211                     	;# 
   600  0212                     	;# 
   601  0212                     	;# 
   602  0213                     	;# 
   603  0213                     	;# 
   604  0214                     	;# 
   605  0214                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0215                     	;# 
   609  0215                     	;# 
   610  0216                     	;# 
   611  0216                     	;# 
   612  0217                     	;# 
   613  0217                     	;# 
   614  028C                     	;# 
   615  028D                     	;# 
   616  028E                     	;# 
   617  028F                     	;# 
   618  0290                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0293                     	;# 
   624  0298                     	;# 
   625  0298                     	;# 
   626  0299                     	;# 
   627  029A                     	;# 
   628  029A                     	;# 
   629  029E                     	;# 
   630  030C                     	;# 
   631  030D                     	;# 
   632  030E                     	;# 
   633  030F                     	;# 
   634  0310                     	;# 
   635  038C                     	;# 
   636  038D                     	;# 
   637  038E                     	;# 
   638  038F                     	;# 
   639  0390                     	;# 
   640  0391                     	;# 
   641  0392                     	;# 
   642  0393                     	;# 
   643  0394                     	;# 
   644  0395                     	;# 
   645  0396                     	;# 
   646  0397                     	;# 
   647  0398                     	;# 
   648  0399                     	;# 
   649  039D                     	;# 
   650  039E                     	;# 
   651  039F                     	;# 
   652  0415                     	;# 
   653  0416                     	;# 
   654  0417                     	;# 
   655  041C                     	;# 
   656  041D                     	;# 
   657  041E                     	;# 
   658  0498                     	;# 
   659  0498                     	;# 
   660  0499                     	;# 
   661  049A                     	;# 
   662  049B                     	;# 
   663  049B                     	;# 
   664  049C                     	;# 
   665  049D                     	;# 
   666  049E                     	;# 
   667  049F                     	;# 
   668  0511                     	;# 
   669  0515                     	;# 
   670  0617                     	;# 
   671  0618                     	;# 
   672  0619                     	;# 
   673  0619                     	;# 
   674  061A                     	;# 
   675  061B                     	;# 
   676  061C                     	;# 
   677  061C                     	;# 
   678  0691                     	;# 
   679  0692                     	;# 
   680  0693                     	;# 
   681  0694                     	;# 
   682  0695                     	;# 
   683  0696                     	;# 
   684  0697                     	;# 
   685  0698                     	;# 
   686  0699                     	;# 
   687  069A                     	;# 
   688  069B                     	;# 
   689  069C                     	;# 
   690  069D                     	;# 
   691  069E                     	;# 
   692  069F                     	;# 
   693  0E0F                     	;# 
   694  0E10                     	;# 
   695  0E11                     	;# 
   696  0E12                     	;# 
   697  0E13                     	;# 
   698  0E14                     	;# 
   699  0E15                     	;# 
   700  0E17                     	;# 
   701  0E20                     	;# 
   702  0E21                     	;# 
   703  0E22                     	;# 
   704  0E24                     	;# 
   705  0E25                     	;# 
   706  0E28                     	;# 
   707  0E29                     	;# 
   708  0E2A                     	;# 
   709  0E2B                     	;# 
   710  0E90                     	;# 
   711  0E91                     	;# 
   712  0E92                     	;# 
   713  0E93                     	;# 
   714  0E94                     	;# 
   715  0E95                     	;# 
   716  0E96                     	;# 
   717  0E97                     	;# 
   718  0E98                     	;# 
   719  0E99                     	;# 
   720  0E9A                     	;# 
   721  0E9B                     	;# 
   722  0E9C                     	;# 
   723  0E9D                     	;# 
   724  0E9E                     	;# 
   725  0E9F                     	;# 
   726  0EA0                     	;# 
   727  0EA1                     	;# 
   728  0EA2                     	;# 
   729  0EA3                     	;# 
   730  0EA4                     	;# 
   731  0EA5                     	;# 
   732  0EA6                     	;# 
   733  0EA7                     	;# 
   734  0EA8                     	;# 
   735  0EA9                     	;# 
   736  0EAA                     	;# 
   737  0EAB                     	;# 
   738  0EAC                     	;# 
   739  0EAD                     	;# 
   740  0EAE                     	;# 
   741  0EAF                     	;# 
   742  0EB0                     	;# 
   743  0EB1                     	;# 
   744  0EB2                     	;# 
   745  0F0F                     	;# 
   746  0F10                     	;# 
   747  0F11                     	;# 
   748  0F12                     	;# 
   749  0F13                     	;# 
   750  0F14                     	;# 
   751  0F15                     	;# 
   752  0F16                     	;# 
   753  0F17                     	;# 
   754  0F18                     	;# 
   755  0F19                     	;# 
   756  0F1A                     	;# 
   757  0F1B                     	;# 
   758  0F1C                     	;# 
   759  0F1D                     	;# 
   760  0F1E                     	;# 
   761  0F1F                     	;# 
   762  0F20                     	;# 
   763  0F21                     	;# 
   764  0F22                     	;# 
   765  0F23                     	;# 
   766  0F24                     	;# 
   767  0F25                     	;# 
   768  0F26                     	;# 
   769  0F27                     	;# 
   770  0F28                     	;# 
   771  0F29                     	;# 
   772  0F2A                     	;# 
   773  0F2B                     	;# 
   774  0F2C                     	;# 
   775  0F2D                     	;# 
   776  0F2E                     	;# 
   777  0F2F                     	;# 
   778  0F30                     	;# 
   779  0F31                     	;# 
   780  0F32                     	;# 
   781  0F33                     	;# 
   782  0F34                     	;# 
   783  0F35                     	;# 
   784  0F36                     	;# 
   785  0F37                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0008                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000D                     	;# 
   811  000E                     	;# 
   812  000F                     	;# 
   813  0010                     	;# 
   814  0011                     	;# 
   815  0012                     	;# 
   816  0013                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0016                     	;# 
   820  0017                     	;# 
   821  0018                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  008F                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0095                     	;# 
   835  0096                     	;# 
   836  0097                     	;# 
   837  0098                     	;# 
   838  0099                     	;# 
   839  009A                     	;# 
   840  009B                     	;# 
   841  009B                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  009F                     	;# 
   846  010C                     	;# 
   847  010D                     	;# 
   848  010E                     	;# 
   849  010F                     	;# 
   850  0110                     	;# 
   851  0111                     	;# 
   852  0112                     	;# 
   853  0113                     	;# 
   854  0114                     	;# 
   855  0115                     	;# 
   856  0116                     	;# 
   857  0117                     	;# 
   858  0118                     	;# 
   859  0119                     	;# 
   860  011A                     	;# 
   861  011B                     	;# 
   862  011B                     	;# 
   863  011C                     	;# 
   864  018C                     	;# 
   865  018D                     	;# 
   866  018E                     	;# 
   867  018F                     	;# 
   868  0190                     	;# 
   869  0191                     	;# 
   870  0191                     	;# 
   871  0192                     	;# 
   872  0193                     	;# 
   873  0193                     	;# 
   874  0194                     	;# 
   875  0195                     	;# 
   876  0196                     	;# 
   877  0197                     	;# 
   878  0199                     	;# 
   879  0199                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019A                     	;# 
   883  019A                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019C                     	;# 
   892  019D                     	;# 
   893  019D                     	;# 
   894  019D                     	;# 
   895  019E                     	;# 
   896  019E                     	;# 
   897  019E                     	;# 
   898  019F                     	;# 
   899  019F                     	;# 
   900  019F                     	;# 
   901  019F                     	;# 
   902  019F                     	;# 
   903  020C                     	;# 
   904  020D                     	;# 
   905  020E                     	;# 
   906  020F                     	;# 
   907  0210                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0216                     	;# 
   921  0216                     	;# 
   922  0217                     	;# 
   923  0217                     	;# 
   924  028C                     	;# 
   925  028D                     	;# 
   926  028E                     	;# 
   927  028F                     	;# 
   928  0290                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0293                     	;# 
   934  0298                     	;# 
   935  0298                     	;# 
   936  0299                     	;# 
   937  029A                     	;# 
   938  029A                     	;# 
   939  029E                     	;# 
   940  030C                     	;# 
   941  030D                     	;# 
   942  030E                     	;# 
   943  030F                     	;# 
   944  0310                     	;# 
   945  038C                     	;# 
   946  038D                     	;# 
   947  038E                     	;# 
   948  038F                     	;# 
   949  0390                     	;# 
   950  0391                     	;# 
   951  0392                     	;# 
   952  0393                     	;# 
   953  0394                     	;# 
   954  0395                     	;# 
   955  0396                     	;# 
   956  0397                     	;# 
   957  0398                     	;# 
   958  0399                     	;# 
   959  039D                     	;# 
   960  039E                     	;# 
   961  039F                     	;# 
   962  0415                     	;# 
   963  0416                     	;# 
   964  0417                     	;# 
   965  041C                     	;# 
   966  041D                     	;# 
   967  041E                     	;# 
   968  0498                     	;# 
   969  0498                     	;# 
   970  0499                     	;# 
   971  049A                     	;# 
   972  049B                     	;# 
   973  049B                     	;# 
   974  049C                     	;# 
   975  049D                     	;# 
   976  049E                     	;# 
   977  049F                     	;# 
   978  0511                     	;# 
   979  0515                     	;# 
   980  0617                     	;# 
   981  0618                     	;# 
   982  0619                     	;# 
   983  0619                     	;# 
   984  061A                     	;# 
   985  061B                     	;# 
   986  061C                     	;# 
   987  061C                     	;# 
   988  0691                     	;# 
   989  0692                     	;# 
   990  0693                     	;# 
   991  0694                     	;# 
   992  0695                     	;# 
   993  0696                     	;# 
   994  0697                     	;# 
   995  0698                     	;# 
   996  0699                     	;# 
   997  069A                     	;# 
   998  069B                     	;# 
   999  069C                     	;# 
  1000  069D                     	;# 
  1001  069E                     	;# 
  1002  069F                     	;# 
  1003  0E0F                     	;# 
  1004  0E10                     	;# 
  1005  0E11                     	;# 
  1006  0E12                     	;# 
  1007  0E13                     	;# 
  1008  0E14                     	;# 
  1009  0E15                     	;# 
  1010  0E17                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E95                     	;# 
  1026  0E96                     	;# 
  1027  0E97                     	;# 
  1028  0E98                     	;# 
  1029  0E99                     	;# 
  1030  0E9A                     	;# 
  1031  0E9B                     	;# 
  1032  0E9C                     	;# 
  1033  0E9D                     	;# 
  1034  0E9E                     	;# 
  1035  0E9F                     	;# 
  1036  0EA0                     	;# 
  1037  0EA1                     	;# 
  1038  0EA2                     	;# 
  1039  0EA3                     	;# 
  1040  0EA4                     	;# 
  1041  0EA5                     	;# 
  1042  0EA6                     	;# 
  1043  0EA7                     	;# 
  1044  0EA8                     	;# 
  1045  0EA9                     	;# 
  1046  0EAA                     	;# 
  1047  0EAB                     	;# 
  1048  0EAC                     	;# 
  1049  0EAD                     	;# 
  1050  0EAE                     	;# 
  1051  0EAF                     	;# 
  1052  0EB0                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0F0F                     	;# 
  1056  0F10                     	;# 
  1057  0F11                     	;# 
  1058  0F12                     	;# 
  1059  0F13                     	;# 
  1060  0F14                     	;# 
  1061  0F15                     	;# 
  1062  0F16                     	;# 
  1063  0F17                     	;# 
  1064  0F18                     	;# 
  1065  0F19                     	;# 
  1066  0F1A                     	;# 
  1067  0F1B                     	;# 
  1068  0F1C                     	;# 
  1069  0F1D                     	;# 
  1070  0F1E                     	;# 
  1071  0F1F                     	;# 
  1072  0F20                     	;# 
  1073  0F21                     	;# 
  1074  0F22                     	;# 
  1075  0F23                     	;# 
  1076  0F24                     	;# 
  1077  0F25                     	;# 
  1078  0F26                     	;# 
  1079  0F27                     	;# 
  1080  0F28                     	;# 
  1081  0F29                     	;# 
  1082  0F2A                     	;# 
  1083  0F2B                     	;# 
  1084  0F2C                     	;# 
  1085  0F2D                     	;# 
  1086  0F2E                     	;# 
  1087  0F2F                     	;# 
  1088  0F30                     	;# 
  1089  0F31                     	;# 
  1090  0F32                     	;# 
  1091  0F33                     	;# 
  1092  0F34                     	;# 
  1093  0F35                     	;# 
  1094  0F36                     	;# 
  1095  0F37                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  000F                     	;# 
  1123  0010                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0013                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0016                     	;# 
  1130  0017                     	;# 
  1131  0018                     	;# 
  1132  0019                     	;# 
  1133  001A                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  008F                     	;# 
  1140  0090                     	;# 
  1141  0091                     	;# 
  1142  0092                     	;# 
  1143  0093                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0098                     	;# 
  1148  0099                     	;# 
  1149  009A                     	;# 
  1150  009B                     	;# 
  1151  009B                     	;# 
  1152  009C                     	;# 
  1153  009D                     	;# 
  1154  009E                     	;# 
  1155  009F                     	;# 
  1156  010C                     	;# 
  1157  010D                     	;# 
  1158  010E                     	;# 
  1159  010F                     	;# 
  1160  0110                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0113                     	;# 
  1164  0114                     	;# 
  1165  0115                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  0118                     	;# 
  1169  0119                     	;# 
  1170  011A                     	;# 
  1171  011B                     	;# 
  1172  011B                     	;# 
  1173  011C                     	;# 
  1174  018C                     	;# 
  1175  018D                     	;# 
  1176  018E                     	;# 
  1177  018F                     	;# 
  1178  0190                     	;# 
  1179  0191                     	;# 
  1180  0191                     	;# 
  1181  0192                     	;# 
  1182  0193                     	;# 
  1183  0193                     	;# 
  1184  0194                     	;# 
  1185  0195                     	;# 
  1186  0196                     	;# 
  1187  0197                     	;# 
  1188  0199                     	;# 
  1189  0199                     	;# 
  1190  0199                     	;# 
  1191  019A                     	;# 
  1192  019A                     	;# 
  1193  019A                     	;# 
  1194  019B                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019C                     	;# 
  1200  019C                     	;# 
  1201  019C                     	;# 
  1202  019D                     	;# 
  1203  019D                     	;# 
  1204  019D                     	;# 
  1205  019E                     	;# 
  1206  019E                     	;# 
  1207  019E                     	;# 
  1208  019F                     	;# 
  1209  019F                     	;# 
  1210  019F                     	;# 
  1211  019F                     	;# 
  1212  019F                     	;# 
  1213  020C                     	;# 
  1214  020D                     	;# 
  1215  020E                     	;# 
  1216  020F                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0212                     	;# 
  1222  0213                     	;# 
  1223  0213                     	;# 
  1224  0214                     	;# 
  1225  0214                     	;# 
  1226  0215                     	;# 
  1227  0215                     	;# 
  1228  0215                     	;# 
  1229  0215                     	;# 
  1230  0216                     	;# 
  1231  0216                     	;# 
  1232  0217                     	;# 
  1233  0217                     	;# 
  1234  028C                     	;# 
  1235  028D                     	;# 
  1236  028E                     	;# 
  1237  028F                     	;# 
  1238  0290                     	;# 
  1239  0291                     	;# 
  1240  0291                     	;# 
  1241  0292                     	;# 
  1242  0293                     	;# 
  1243  0293                     	;# 
  1244  0298                     	;# 
  1245  0298                     	;# 
  1246  0299                     	;# 
  1247  029A                     	;# 
  1248  029A                     	;# 
  1249  029E                     	;# 
  1250  030C                     	;# 
  1251  030D                     	;# 
  1252  030E                     	;# 
  1253  030F                     	;# 
  1254  0310                     	;# 
  1255  038C                     	;# 
  1256  038D                     	;# 
  1257  038E                     	;# 
  1258  038F                     	;# 
  1259  0390                     	;# 
  1260  0391                     	;# 
  1261  0392                     	;# 
  1262  0393                     	;# 
  1263  0394                     	;# 
  1264  0395                     	;# 
  1265  0396                     	;# 
  1266  0397                     	;# 
  1267  0398                     	;# 
  1268  0399                     	;# 
  1269  039D                     	;# 
  1270  039E                     	;# 
  1271  039F                     	;# 
  1272  0415                     	;# 
  1273  0416                     	;# 
  1274  0417                     	;# 
  1275  041C                     	;# 
  1276  041D                     	;# 
  1277  041E                     	;# 
  1278  0498                     	;# 
  1279  0498                     	;# 
  1280  0499                     	;# 
  1281  049A                     	;# 
  1282  049B                     	;# 
  1283  049B                     	;# 
  1284  049C                     	;# 
  1285  049D                     	;# 
  1286  049E                     	;# 
  1287  049F                     	;# 
  1288  0511                     	;# 
  1289  0515                     	;# 
  1290  0617                     	;# 
  1291  0618                     	;# 
  1292  0619                     	;# 
  1293  0619                     	;# 
  1294  061A                     	;# 
  1295  061B                     	;# 
  1296  061C                     	;# 
  1297  061C                     	;# 
  1298  0691                     	;# 
  1299  0692                     	;# 
  1300  0693                     	;# 
  1301  0694                     	;# 
  1302  0695                     	;# 
  1303  0696                     	;# 
  1304  0697                     	;# 
  1305  0698                     	;# 
  1306  0699                     	;# 
  1307  069A                     	;# 
  1308  069B                     	;# 
  1309  069C                     	;# 
  1310  069D                     	;# 
  1311  069E                     	;# 
  1312  069F                     	;# 
  1313  0E0F                     	;# 
  1314  0E10                     	;# 
  1315  0E11                     	;# 
  1316  0E12                     	;# 
  1317  0E13                     	;# 
  1318  0E14                     	;# 
  1319  0E15                     	;# 
  1320  0E17                     	;# 
  1321  0E20                     	;# 
  1322  0E21                     	;# 
  1323  0E22                     	;# 
  1324  0E24                     	;# 
  1325  0E25                     	;# 
  1326  0E28                     	;# 
  1327  0E29                     	;# 
  1328  0E2A                     	;# 
  1329  0E2B                     	;# 
  1330  0E90                     	;# 
  1331  0E91                     	;# 
  1332  0E92                     	;# 
  1333  0E93                     	;# 
  1334  0E94                     	;# 
  1335  0E95                     	;# 
  1336  0E96                     	;# 
  1337  0E97                     	;# 
  1338  0E98                     	;# 
  1339  0E99                     	;# 
  1340  0E9A                     	;# 
  1341  0E9B                     	;# 
  1342  0E9C                     	;# 
  1343  0E9D                     	;# 
  1344  0E9E                     	;# 
  1345  0E9F                     	;# 
  1346  0EA0                     	;# 
  1347  0EA1                     	;# 
  1348  0EA2                     	;# 
  1349  0EA3                     	;# 
  1350  0EA4                     	;# 
  1351  0EA5                     	;# 
  1352  0EA6                     	;# 
  1353  0EA7                     	;# 
  1354  0EA8                     	;# 
  1355  0EA9                     	;# 
  1356  0EAA                     	;# 
  1357  0EAB                     	;# 
  1358  0EAC                     	;# 
  1359  0EAD                     	;# 
  1360  0EAE                     	;# 
  1361  0EAF                     	;# 
  1362  0EB0                     	;# 
  1363  0EB1                     	;# 
  1364  0EB2                     	;# 
  1365  0F0F                     	;# 
  1366  0F10                     	;# 
  1367  0F11                     	;# 
  1368  0F12                     	;# 
  1369  0F13                     	;# 
  1370  0F14                     	;# 
  1371  0F15                     	;# 
  1372  0F16                     	;# 
  1373  0F17                     	;# 
  1374  0F18                     	;# 
  1375  0F19                     	;# 
  1376  0F1A                     	;# 
  1377  0F1B                     	;# 
  1378  0F1C                     	;# 
  1379  0F1D                     	;# 
  1380  0F1E                     	;# 
  1381  0F1F                     	;# 
  1382  0F20                     	;# 
  1383  0F21                     	;# 
  1384  0F22                     	;# 
  1385  0F23                     	;# 
  1386  0F24                     	;# 
  1387  0F25                     	;# 
  1388  0F26                     	;# 
  1389  0F27                     	;# 
  1390  0F28                     	;# 
  1391  0F29                     	;# 
  1392  0F2A                     	;# 
  1393  0F2B                     	;# 
  1394  0F2C                     	;# 
  1395  0F2D                     	;# 
  1396  0F2E                     	;# 
  1397  0F2F                     	;# 
  1398  0F30                     	;# 
  1399  0F31                     	;# 
  1400  0F32                     	;# 
  1401  0F33                     	;# 
  1402  0F34                     	;# 
  1403  0F35                     	;# 
  1404  0F36                     	;# 
  1405  0F37                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000D                     	;# 
  1431  000E                     	;# 
  1432  000F                     	;# 
  1433  0010                     	;# 
  1434  0011                     	;# 
  1435  0012                     	;# 
  1436  0013                     	;# 
  1437  0015                     	;# 
  1438  0016                     	;# 
  1439  0016                     	;# 
  1440  0017                     	;# 
  1441  0018                     	;# 
  1442  0019                     	;# 
  1443  001A                     	;# 
  1444  001B                     	;# 
  1445  001C                     	;# 
  1446  008C                     	;# 
  1447  008D                     	;# 
  1448  008E                     	;# 
  1449  008F                     	;# 
  1450  0090                     	;# 
  1451  0091                     	;# 
  1452  0092                     	;# 
  1453  0093                     	;# 
  1454  0095                     	;# 
  1455  0096                     	;# 
  1456  0097                     	;# 
  1457  0098                     	;# 
  1458  0099                     	;# 
  1459  009A                     	;# 
  1460  009B                     	;# 
  1461  009B                     	;# 
  1462  009C                     	;# 
  1463  009D                     	;# 
  1464  009E                     	;# 
  1465  009F                     	;# 
  1466  010C                     	;# 
  1467  010D                     	;# 
  1468  010E                     	;# 
  1469  010F                     	;# 
  1470  0110                     	;# 
  1471  0111                     	;# 
  1472  0112                     	;# 
  1473  0113                     	;# 
  1474  0114                     	;# 
  1475  0115                     	;# 
  1476  0116                     	;# 
  1477  0117                     	;# 
  1478  0118                     	;# 
  1479  0119                     	;# 
  1480  011A                     	;# 
  1481  011B                     	;# 
  1482  011B                     	;# 
  1483  011C                     	;# 
  1484  018C                     	;# 
  1485  018D                     	;# 
  1486  018E                     	;# 
  1487  018F                     	;# 
  1488  0190                     	;# 
  1489  0191                     	;# 
  1490  0191                     	;# 
  1491  0192                     	;# 
  1492  0193                     	;# 
  1493  0193                     	;# 
  1494  0194                     	;# 
  1495  0195                     	;# 
  1496  0196                     	;# 
  1497  0197                     	;# 
  1498  0199                     	;# 
  1499  0199                     	;# 
  1500  0199                     	;# 
  1501  019A                     	;# 
  1502  019A                     	;# 
  1503  019A                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019B                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019C                     	;# 
  1510  019C                     	;# 
  1511  019C                     	;# 
  1512  019D                     	;# 
  1513  019D                     	;# 
  1514  019D                     	;# 
  1515  019E                     	;# 
  1516  019E                     	;# 
  1517  019E                     	;# 
  1518  019F                     	;# 
  1519  019F                     	;# 
  1520  019F                     	;# 
  1521  019F                     	;# 
  1522  019F                     	;# 
  1523  020C                     	;# 
  1524  020D                     	;# 
  1525  020E                     	;# 
  1526  020F                     	;# 
  1527  0210                     	;# 
  1528  0211                     	;# 
  1529  0211                     	;# 
  1530  0212                     	;# 
  1531  0212                     	;# 
  1532  0213                     	;# 
  1533  0213                     	;# 
  1534  0214                     	;# 
  1535  0214                     	;# 
  1536  0215                     	;# 
  1537  0215                     	;# 
  1538  0215                     	;# 
  1539  0215                     	;# 
  1540  0216                     	;# 
  1541  0216                     	;# 
  1542  0217                     	;# 
  1543  0217                     	;# 
  1544  028C                     	;# 
  1545  028D                     	;# 
  1546  028E                     	;# 
  1547  028F                     	;# 
  1548  0290                     	;# 
  1549  0291                     	;# 
  1550  0291                     	;# 
  1551  0292                     	;# 
  1552  0293                     	;# 
  1553  0293                     	;# 
  1554  0298                     	;# 
  1555  0298                     	;# 
  1556  0299                     	;# 
  1557  029A                     	;# 
  1558  029A                     	;# 
  1559  029E                     	;# 
  1560  030C                     	;# 
  1561  030D                     	;# 
  1562  030E                     	;# 
  1563  030F                     	;# 
  1564  0310                     	;# 
  1565  038C                     	;# 
  1566  038D                     	;# 
  1567  038E                     	;# 
  1568  038F                     	;# 
  1569  0390                     	;# 
  1570  0391                     	;# 
  1571  0392                     	;# 
  1572  0393                     	;# 
  1573  0394                     	;# 
  1574  0395                     	;# 
  1575  0396                     	;# 
  1576  0397                     	;# 
  1577  0398                     	;# 
  1578  0399                     	;# 
  1579  039D                     	;# 
  1580  039E                     	;# 
  1581  039F                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  0498                     	;# 
  1589  0498                     	;# 
  1590  0499                     	;# 
  1591  049A                     	;# 
  1592  049B                     	;# 
  1593  049B                     	;# 
  1594  049C                     	;# 
  1595  049D                     	;# 
  1596  049E                     	;# 
  1597  049F                     	;# 
  1598  0511                     	;# 
  1599  0515                     	;# 
  1600  0617                     	;# 
  1601  0618                     	;# 
  1602  0619                     	;# 
  1603  0619                     	;# 
  1604  061A                     	;# 
  1605  061B                     	;# 
  1606  061C                     	;# 
  1607  061C                     	;# 
  1608  0691                     	;# 
  1609  0692                     	;# 
  1610  0693                     	;# 
  1611  0694                     	;# 
  1612  0695                     	;# 
  1613  0696                     	;# 
  1614  0697                     	;# 
  1615  0698                     	;# 
  1616  0699                     	;# 
  1617  069A                     	;# 
  1618  069B                     	;# 
  1619  069C                     	;# 
  1620  069D                     	;# 
  1621  069E                     	;# 
  1622  069F                     	;# 
  1623  0E0F                     	;# 
  1624  0E10                     	;# 
  1625  0E11                     	;# 
  1626  0E12                     	;# 
  1627  0E13                     	;# 
  1628  0E14                     	;# 
  1629  0E15                     	;# 
  1630  0E17                     	;# 
  1631  0E20                     	;# 
  1632  0E21                     	;# 
  1633  0E22                     	;# 
  1634  0E24                     	;# 
  1635  0E25                     	;# 
  1636  0E28                     	;# 
  1637  0E29                     	;# 
  1638  0E2A                     	;# 
  1639  0E2B                     	;# 
  1640  0E90                     	;# 
  1641  0E91                     	;# 
  1642  0E92                     	;# 
  1643  0E93                     	;# 
  1644  0E94                     	;# 
  1645  0E95                     	;# 
  1646  0E96                     	;# 
  1647  0E97                     	;# 
  1648  0E98                     	;# 
  1649  0E99                     	;# 
  1650  0E9A                     	;# 
  1651  0E9B                     	;# 
  1652  0E9C                     	;# 
  1653  0E9D                     	;# 
  1654  0E9E                     	;# 
  1655  0E9F                     	;# 
  1656  0EA0                     	;# 
  1657  0EA1                     	;# 
  1658  0EA2                     	;# 
  1659  0EA3                     	;# 
  1660  0EA4                     	;# 
  1661  0EA5                     	;# 
  1662  0EA6                     	;# 
  1663  0EA7                     	;# 
  1664  0EA8                     	;# 
  1665  0EA9                     	;# 
  1666  0EAA                     	;# 
  1667  0EAB                     	;# 
  1668  0EAC                     	;# 
  1669  0EAD                     	;# 
  1670  0EAE                     	;# 
  1671  0EAF                     	;# 
  1672  0EB0                     	;# 
  1673  0EB1                     	;# 
  1674  0EB2                     	;# 
  1675  0F0F                     	;# 
  1676  0F10                     	;# 
  1677  0F11                     	;# 
  1678  0F12                     	;# 
  1679  0F13                     	;# 
  1680  0F14                     	;# 
  1681  0F15                     	;# 
  1682  0F16                     	;# 
  1683  0F17                     	;# 
  1684  0F18                     	;# 
  1685  0F19                     	;# 
  1686  0F1A                     	;# 
  1687  0F1B                     	;# 
  1688  0F1C                     	;# 
  1689  0F1D                     	;# 
  1690  0F1E                     	;# 
  1691  0F1F                     	;# 
  1692  0F20                     	;# 
  1693  0F21                     	;# 
  1694  0F22                     	;# 
  1695  0F23                     	;# 
  1696  0F24                     	;# 
  1697  0F25                     	;# 
  1698  0F26                     	;# 
  1699  0F27                     	;# 
  1700  0F28                     	;# 
  1701  0F29                     	;# 
  1702  0F2A                     	;# 
  1703  0F2B                     	;# 
  1704  0F2C                     	;# 
  1705  0F2D                     	;# 
  1706  0F2E                     	;# 
  1707  0F2F                     	;# 
  1708  0F30                     	;# 
  1709  0F31                     	;# 
  1710  0F32                     	;# 
  1711  0F33                     	;# 
  1712  0F34                     	;# 
  1713  0F35                     	;# 
  1714  0F36                     	;# 
  1715  0F37                     	;# 
  1716  0FE4                     	;# 
  1717  0FE5                     	;# 
  1718  0FE6                     	;# 
  1719  0FE7                     	;# 
  1720  0FE8                     	;# 
  1721  0FE9                     	;# 
  1722  0FEA                     	;# 
  1723  0FEB                     	;# 
  1724  0FED                     	;# 
  1725  0FEE                     	;# 
  1726  0FEF                     	;# 
  1727  0000                     	;# 
  1728  0001                     	;# 
  1729  0002                     	;# 
  1730  0003                     	;# 
  1731  0004                     	;# 
  1732  0005                     	;# 
  1733  0006                     	;# 
  1734  0007                     	;# 
  1735  0008                     	;# 
  1736  0009                     	;# 
  1737  000A                     	;# 
  1738  000B                     	;# 
  1739  000C                     	;# 
  1740  000D                     	;# 
  1741  000E                     	;# 
  1742  000F                     	;# 
  1743  0010                     	;# 
  1744  0011                     	;# 
  1745  0012                     	;# 
  1746  0013                     	;# 
  1747  0015                     	;# 
  1748  0016                     	;# 
  1749  0016                     	;# 
  1750  0017                     	;# 
  1751  0018                     	;# 
  1752  0019                     	;# 
  1753  001A                     	;# 
  1754  001B                     	;# 
  1755  001C                     	;# 
  1756  008C                     	;# 
  1757  008D                     	;# 
  1758  008E                     	;# 
  1759  008F                     	;# 
  1760  0090                     	;# 
  1761  0091                     	;# 
  1762  0092                     	;# 
  1763  0093                     	;# 
  1764  0095                     	;# 
  1765  0096                     	;# 
  1766  0097                     	;# 
  1767  0098                     	;# 
  1768  0099                     	;# 
  1769  009A                     	;# 
  1770  009B                     	;# 
  1771  009B                     	;# 
  1772  009C                     	;# 
  1773  009D                     	;# 
  1774  009E                     	;# 
  1775  009F                     	;# 
  1776  010C                     	;# 
  1777  010D                     	;# 
  1778  010E                     	;# 
  1779  010F                     	;# 
  1780  0110                     	;# 
  1781  0111                     	;# 
  1782  0112                     	;# 
  1783  0113                     	;# 
  1784  0114                     	;# 
  1785  0115                     	;# 
  1786  0116                     	;# 
  1787  0117                     	;# 
  1788  0118                     	;# 
  1789  0119                     	;# 
  1790  011A                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011C                     	;# 
  1794  018C                     	;# 
  1795  018D                     	;# 
  1796  018E                     	;# 
  1797  018F                     	;# 
  1798  0190                     	;# 
  1799  0191                     	;# 
  1800  0191                     	;# 
  1801  0192                     	;# 
  1802  0193                     	;# 
  1803  0193                     	;# 
  1804  0194                     	;# 
  1805  0195                     	;# 
  1806  0196                     	;# 
  1807  0197                     	;# 
  1808  0199                     	;# 
  1809  0199                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019A                     	;# 
  1813  019A                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019B                     	;# 
  1817  019B                     	;# 
  1818  019B                     	;# 
  1819  019C                     	;# 
  1820  019C                     	;# 
  1821  019C                     	;# 
  1822  019D                     	;# 
  1823  019D                     	;# 
  1824  019D                     	;# 
  1825  019E                     	;# 
  1826  019E                     	;# 
  1827  019E                     	;# 
  1828  019F                     	;# 
  1829  019F                     	;# 
  1830  019F                     	;# 
  1831  019F                     	;# 
  1832  019F                     	;# 
  1833  020C                     	;# 
  1834  020D                     	;# 
  1835  020E                     	;# 
  1836  020F                     	;# 
  1837  0210                     	;# 
  1838  0211                     	;# 
  1839  0211                     	;# 
  1840  0212                     	;# 
  1841  0212                     	;# 
  1842  0213                     	;# 
  1843  0213                     	;# 
  1844  0214                     	;# 
  1845  0214                     	;# 
  1846  0215                     	;# 
  1847  0215                     	;# 
  1848  0215                     	;# 
  1849  0215                     	;# 
  1850  0216                     	;# 
  1851  0216                     	;# 
  1852  0217                     	;# 
  1853  0217                     	;# 
  1854  028C                     	;# 
  1855  028D                     	;# 
  1856  028E                     	;# 
  1857  028F                     	;# 
  1858  0290                     	;# 
  1859  0291                     	;# 
  1860  0291                     	;# 
  1861  0292                     	;# 
  1862  0293                     	;# 
  1863  0293                     	;# 
  1864  0298                     	;# 
  1865  0298                     	;# 
  1866  0299                     	;# 
  1867  029A                     	;# 
  1868  029A                     	;# 
  1869  029E                     	;# 
  1870  030C                     	;# 
  1871  030D                     	;# 
  1872  030E                     	;# 
  1873  030F                     	;# 
  1874  0310                     	;# 
  1875  038C                     	;# 
  1876  038D                     	;# 
  1877  038E                     	;# 
  1878  038F                     	;# 
  1879  0390                     	;# 
  1880  0391                     	;# 
  1881  0392                     	;# 
  1882  0393                     	;# 
  1883  0394                     	;# 
  1884  0395                     	;# 
  1885  0396                     	;# 
  1886  0397                     	;# 
  1887  0398                     	;# 
  1888  0399                     	;# 
  1889  039D                     	;# 
  1890  039E                     	;# 
  1891  039F                     	;# 
  1892  0415                     	;# 
  1893  0416                     	;# 
  1894  0417                     	;# 
  1895  041C                     	;# 
  1896  041D                     	;# 
  1897  041E                     	;# 
  1898  0498                     	;# 
  1899  0498                     	;# 
  1900  0499                     	;# 
  1901  049A                     	;# 
  1902  049B                     	;# 
  1903  049B                     	;# 
  1904  049C                     	;# 
  1905  049D                     	;# 
  1906  049E                     	;# 
  1907  049F                     	;# 
  1908  0511                     	;# 
  1909  0515                     	;# 
  1910  0617                     	;# 
  1911  0618                     	;# 
  1912  0619                     	;# 
  1913  0619                     	;# 
  1914  061A                     	;# 
  1915  061B                     	;# 
  1916  061C                     	;# 
  1917  061C                     	;# 
  1918  0691                     	;# 
  1919  0692                     	;# 
  1920  0693                     	;# 
  1921  0694                     	;# 
  1922  0695                     	;# 
  1923  0696                     	;# 
  1924  0697                     	;# 
  1925  0698                     	;# 
  1926  0699                     	;# 
  1927  069A                     	;# 
  1928  069B                     	;# 
  1929  069C                     	;# 
  1930  069D                     	;# 
  1931  069E                     	;# 
  1932  069F                     	;# 
  1933  0E0F                     	;# 
  1934  0E10                     	;# 
  1935  0E11                     	;# 
  1936  0E12                     	;# 
  1937  0E13                     	;# 
  1938  0E14                     	;# 
  1939  0E15                     	;# 
  1940  0E17                     	;# 
  1941  0E20                     	;# 
  1942  0E21                     	;# 
  1943  0E22                     	;# 
  1944  0E24                     	;# 
  1945  0E25                     	;# 
  1946  0E28                     	;# 
  1947  0E29                     	;# 
  1948  0E2A                     	;# 
  1949  0E2B                     	;# 
  1950  0E90                     	;# 
  1951  0E91                     	;# 
  1952  0E92                     	;# 
  1953  0E93                     	;# 
  1954  0E94                     	;# 
  1955  0E95                     	;# 
  1956  0E96                     	;# 
  1957  0E97                     	;# 
  1958  0E98                     	;# 
  1959  0E99                     	;# 
  1960  0E9A                     	;# 
  1961  0E9B                     	;# 
  1962  0E9C                     	;# 
  1963  0E9D                     	;# 
  1964  0E9E                     	;# 
  1965  0E9F                     	;# 
  1966  0EA0                     	;# 
  1967  0EA1                     	;# 
  1968  0EA2                     	;# 
  1969  0EA3                     	;# 
  1970  0EA4                     	;# 
  1971  0EA5                     	;# 
  1972  0EA6                     	;# 
  1973  0EA7                     	;# 
  1974  0EA8                     	;# 
  1975  0EA9                     	;# 
  1976  0EAA                     	;# 
  1977  0EAB                     	;# 
  1978  0EAC                     	;# 
  1979  0EAD                     	;# 
  1980  0EAE                     	;# 
  1981  0EAF                     	;# 
  1982  0EB0                     	;# 
  1983  0EB1                     	;# 
  1984  0EB2                     	;# 
  1985  0F0F                     	;# 
  1986  0F10                     	;# 
  1987  0F11                     	;# 
  1988  0F12                     	;# 
  1989  0F13                     	;# 
  1990  0F14                     	;# 
  1991  0F15                     	;# 
  1992  0F16                     	;# 
  1993  0F17                     	;# 
  1994  0F18                     	;# 
  1995  0F19                     	;# 
  1996  0F1A                     	;# 
  1997  0F1B                     	;# 
  1998  0F1C                     	;# 
  1999  0F1D                     	;# 
  2000  0F1E                     	;# 
  2001  0F1F                     	;# 
  2002  0F20                     	;# 
  2003  0F21                     	;# 
  2004  0F22                     	;# 
  2005  0F23                     	;# 
  2006  0F24                     	;# 
  2007  0F25                     	;# 
  2008  0F26                     	;# 
  2009  0F27                     	;# 
  2010  0F28                     	;# 
  2011  0F29                     	;# 
  2012  0F2A                     	;# 
  2013  0F2B                     	;# 
  2014  0F2C                     	;# 
  2015  0F2D                     	;# 
  2016  0F2E                     	;# 
  2017  0F2F                     	;# 
  2018  0F30                     	;# 
  2019  0F31                     	;# 
  2020  0F32                     	;# 
  2021  0F33                     	;# 
  2022  0F34                     	;# 
  2023  0F35                     	;# 
  2024  0F36                     	;# 
  2025  0F37                     	;# 
  2026  0FE4                     	;# 
  2027  0FE5                     	;# 
  2028  0FE6                     	;# 
  2029  0FE7                     	;# 
  2030  0FE8                     	;# 
  2031  0FE9                     	;# 
  2032  0FEA                     	;# 
  2033  0FEB                     	;# 
  2034  0FED                     	;# 
  2035  0FEE                     	;# 
  2036  0FEF                     	;# 
  2037  0000                     	;# 
  2038  0001                     	;# 
  2039  0002                     	;# 
  2040  0003                     	;# 
  2041  0004                     	;# 
  2042  0005                     	;# 
  2043  0006                     	;# 
  2044  0007                     	;# 
  2045  0008                     	;# 
  2046  0009                     	;# 
  2047  000A                     	;# 
  2048  000B                     	;# 
  2049  000C                     	;# 
  2050  000D                     	;# 
  2051  000E                     	;# 
  2052  000F                     	;# 
  2053  0010                     	;# 
  2054  0011                     	;# 
  2055  0012                     	;# 
  2056  0013                     	;# 
  2057  0015                     	;# 
  2058  0016                     	;# 
  2059  0016                     	;# 
  2060  0017                     	;# 
  2061  0018                     	;# 
  2062  0019                     	;# 
  2063  001A                     	;# 
  2064  001B                     	;# 
  2065  001C                     	;# 
  2066  008C                     	;# 
  2067  008D                     	;# 
  2068  008E                     	;# 
  2069  008F                     	;# 
  2070  0090                     	;# 
  2071  0091                     	;# 
  2072  0092                     	;# 
  2073  0093                     	;# 
  2074  0095                     	;# 
  2075  0096                     	;# 
  2076  0097                     	;# 
  2077  0098                     	;# 
  2078  0099                     	;# 
  2079  009A                     	;# 
  2080  009B                     	;# 
  2081  009B                     	;# 
  2082  009C                     	;# 
  2083  009D                     	;# 
  2084  009E                     	;# 
  2085  009F                     	;# 
  2086  010C                     	;# 
  2087  010D                     	;# 
  2088  010E                     	;# 
  2089  010F                     	;# 
  2090  0110                     	;# 
  2091  0111                     	;# 
  2092  0112                     	;# 
  2093  0113                     	;# 
  2094  0114                     	;# 
  2095  0115                     	;# 
  2096  0116                     	;# 
  2097  0117                     	;# 
  2098  0118                     	;# 
  2099  0119                     	;# 
  2100  011A                     	;# 
  2101  011B                     	;# 
  2102  011B                     	;# 
  2103  011C                     	;# 
  2104  018C                     	;# 
  2105  018D                     	;# 
  2106  018E                     	;# 
  2107  018F                     	;# 
  2108  0190                     	;# 
  2109  0191                     	;# 
  2110  0191                     	;# 
  2111  0192                     	;# 
  2112  0193                     	;# 
  2113  0193                     	;# 
  2114  0194                     	;# 
  2115  0195                     	;# 
  2116  0196                     	;# 
  2117  0197                     	;# 
  2118  0199                     	;# 
  2119  0199                     	;# 
  2120  0199                     	;# 
  2121  019A                     	;# 
  2122  019A                     	;# 
  2123  019A                     	;# 
  2124  019B                     	;# 
  2125  019B                     	;# 
  2126  019B                     	;# 
  2127  019B                     	;# 
  2128  019B                     	;# 
  2129  019C                     	;# 
  2130  019C                     	;# 
  2131  019C                     	;# 
  2132  019D                     	;# 
  2133  019D                     	;# 
  2134  019D                     	;# 
  2135  019E                     	;# 
  2136  019E                     	;# 
  2137  019E                     	;# 
  2138  019F                     	;# 
  2139  019F                     	;# 
  2140  019F                     	;# 
  2141  019F                     	;# 
  2142  019F                     	;# 
  2143  020C                     	;# 
  2144  020D                     	;# 
  2145  020E                     	;# 
  2146  020F                     	;# 
  2147  0210                     	;# 
  2148  0211                     	;# 
  2149  0211                     	;# 
  2150  0212                     	;# 
  2151  0212                     	;# 
  2152  0213                     	;# 
  2153  0213                     	;# 
  2154  0214                     	;# 
  2155  0214                     	;# 
  2156  0215                     	;# 
  2157  0215                     	;# 
  2158  0215                     	;# 
  2159  0215                     	;# 
  2160  0216                     	;# 
  2161  0216                     	;# 
  2162  0217                     	;# 
  2163  0217                     	;# 
  2164  028C                     	;# 
  2165  028D                     	;# 
  2166  028E                     	;# 
  2167  028F                     	;# 
  2168  0290                     	;# 
  2169  0291                     	;# 
  2170  0291                     	;# 
  2171  0292                     	;# 
  2172  0293                     	;# 
  2173  0293                     	;# 
  2174  0298                     	;# 
  2175  0298                     	;# 
  2176  0299                     	;# 
  2177  029A                     	;# 
  2178  029A                     	;# 
  2179  029E                     	;# 
  2180  030C                     	;# 
  2181  030D                     	;# 
  2182  030E                     	;# 
  2183  030F                     	;# 
  2184  0310                     	;# 
  2185  038C                     	;# 
  2186  038D                     	;# 
  2187  038E                     	;# 
  2188  038F                     	;# 
  2189  0390                     	;# 
  2190  0391                     	;# 
  2191  0392                     	;# 
  2192  0393                     	;# 
  2193  0394                     	;# 
  2194  0395                     	;# 
  2195  0396                     	;# 
  2196  0397                     	;# 
  2197  0398                     	;# 
  2198  0399                     	;# 
  2199  039D                     	;# 
  2200  039E                     	;# 
  2201  039F                     	;# 
  2202  0415                     	;# 
  2203  0416                     	;# 
  2204  0417                     	;# 
  2205  041C                     	;# 
  2206  041D                     	;# 
  2207  041E                     	;# 
  2208  0498                     	;# 
  2209  0498                     	;# 
  2210  0499                     	;# 
  2211  049A                     	;# 
  2212  049B                     	;# 
  2213  049B                     	;# 
  2214  049C                     	;# 
  2215  049D                     	;# 
  2216  049E                     	;# 
  2217  049F                     	;# 
  2218  0511                     	;# 
  2219  0515                     	;# 
  2220  0617                     	;# 
  2221  0618                     	;# 
  2222  0619                     	;# 
  2223  0619                     	;# 
  2224  061A                     	;# 
  2225  061B                     	;# 
  2226  061C                     	;# 
  2227  061C                     	;# 
  2228  0691                     	;# 
  2229  0692                     	;# 
  2230  0693                     	;# 
  2231  0694                     	;# 
  2232  0695                     	;# 
  2233  0696                     	;# 
  2234  0697                     	;# 
  2235  0698                     	;# 
  2236  0699                     	;# 
  2237  069A                     	;# 
  2238  069B                     	;# 
  2239  069C                     	;# 
  2240  069D                     	;# 
  2241  069E                     	;# 
  2242  069F                     	;# 
  2243  0E0F                     	;# 
  2244  0E10                     	;# 
  2245  0E11                     	;# 
  2246  0E12                     	;# 
  2247  0E13                     	;# 
  2248  0E14                     	;# 
  2249  0E15                     	;# 
  2250  0E17                     	;# 
  2251  0E20                     	;# 
  2252  0E21                     	;# 
  2253  0E22                     	;# 
  2254  0E24                     	;# 
  2255  0E25                     	;# 
  2256  0E28                     	;# 
  2257  0E29                     	;# 
  2258  0E2A                     	;# 
  2259  0E2B                     	;# 
  2260  0E90                     	;# 
  2261  0E91                     	;# 
  2262  0E92                     	;# 
  2263  0E93                     	;# 
  2264  0E94                     	;# 
  2265  0E95                     	;# 
  2266  0E96                     	;# 
  2267  0E97                     	;# 
  2268  0E98                     	;# 
  2269  0E99                     	;# 
  2270  0E9A                     	;# 
  2271  0E9B                     	;# 
  2272  0E9C                     	;# 
  2273  0E9D                     	;# 
  2274  0E9E                     	;# 
  2275  0E9F                     	;# 
  2276  0EA0                     	;# 
  2277  0EA1                     	;# 
  2278  0EA2                     	;# 
  2279  0EA3                     	;# 
  2280  0EA4                     	;# 
  2281  0EA5                     	;# 
  2282  0EA6                     	;# 
  2283  0EA7                     	;# 
  2284  0EA8                     	;# 
  2285  0EA9                     	;# 
  2286  0EAA                     	;# 
  2287  0EAB                     	;# 
  2288  0EAC                     	;# 
  2289  0EAD                     	;# 
  2290  0EAE                     	;# 
  2291  0EAF                     	;# 
  2292  0EB0                     	;# 
  2293  0EB1                     	;# 
  2294  0EB2                     	;# 
  2295  0F0F                     	;# 
  2296  0F10                     	;# 
  2297  0F11                     	;# 
  2298  0F12                     	;# 
  2299  0F13                     	;# 
  2300  0F14                     	;# 
  2301  0F15                     	;# 
  2302  0F16                     	;# 
  2303  0F17                     	;# 
  2304  0F18                     	;# 
  2305  0F19                     	;# 
  2306  0F1A                     	;# 
  2307  0F1B                     	;# 
  2308  0F1C                     	;# 
  2309  0F1D                     	;# 
  2310  0F1E                     	;# 
  2311  0F1F                     	;# 
  2312  0F20                     	;# 
  2313  0F21                     	;# 
  2314  0F22                     	;# 
  2315  0F23                     	;# 
  2316  0F24                     	;# 
  2317  0F25                     	;# 
  2318  0F26                     	;# 
  2319  0F27                     	;# 
  2320  0F28                     	;# 
  2321  0F29                     	;# 
  2322  0F2A                     	;# 
  2323  0F2B                     	;# 
  2324  0F2C                     	;# 
  2325  0F2D                     	;# 
  2326  0F2E                     	;# 
  2327  0F2F                     	;# 
  2328  0F30                     	;# 
  2329  0F31                     	;# 
  2330  0F32                     	;# 
  2331  0F33                     	;# 
  2332  0F34                     	;# 
  2333  0F35                     	;# 
  2334  0F36                     	;# 
  2335  0F37                     	;# 
  2336  0FE4                     	;# 
  2337  0FE5                     	;# 
  2338  0FE6                     	;# 
  2339  0FE7                     	;# 
  2340  0FE8                     	;# 
  2341  0FE9                     	;# 
  2342  0FEA                     	;# 
  2343  0FEB                     	;# 
  2344  0FED                     	;# 
  2345  0FEE                     	;# 
  2346  0FEF                     	;_messageBuffer
  2347                           
  2348                           	psect	idataBANK3
  2349  2800                     __pidataBANK3:	
  2350                           
  2351                           ;initializer for stoa@F1152
  2352  2800  3428               	retlw	40
  2353  2801  346E               	retlw	110
  2354  2802  3475               	retlw	117
  2355  2803  346C               	retlw	108
  2356  2804  346C               	retlw	108
  2357  2805  3429               	retlw	41
  2358  2806  3400               	retlw	0
  2359                           
  2360                           ;initializer for _thermistorBetaValue
  2361  2807  346B               	retlw	107
  2362  2808  340D               	retlw	13
  2363                           
  2364                           	psect	stringtext1
  2365  3065                     __pstringtext1:	
  2366  3065                     _OCD_threshold_setting:	
  2367  3065  3411               	retlw	17
  2368  3066  3400               	retlw	0
  2369  3067  3416               	retlw	22
  2370  3068  3400               	retlw	0
  2371  3069  341C               	retlw	28
  2372  306A  3400               	retlw	0
  2373  306B  3421               	retlw	33
  2374  306C  3400               	retlw	0
  2375  306D  3427               	retlw	39
  2376  306E  3400               	retlw	0
  2377  306F  342C               	retlw	44
  2378  3070  3400               	retlw	0
  2379  3071  3432               	retlw	50
  2380  3072  3400               	retlw	0
  2381  3073  3438               	retlw	56
  2382  3074  3400               	retlw	0
  2383  3075  343D               	retlw	61
  2384  3076  3400               	retlw	0
  2385  3077  3443               	retlw	67
  2386  3078  3400               	retlw	0
  2387  3079  3448               	retlw	72
  2388  307A  3400               	retlw	0
  2389  307B  344E               	retlw	78
  2390  307C  3400               	retlw	0
  2391  307D  3453               	retlw	83
  2392  307E  3400               	retlw	0
  2393  307F  3459               	retlw	89
  2394  3080  3400               	retlw	0
  2395  3081  345E               	retlw	94
  2396  3082  3400               	retlw	0
  2397  3083  3464               	retlw	100
  2398  3084  3400               	retlw	0
  2399  3085                     __end_of_OCD_threshold_setting:	
  2400                           
  2401                           	psect	stringtext2
  2402  38F4                     __pstringtext2:	
  2403  38F4                     _OCD_delay_setting:	
  2404  38F4  3408               	retlw	8
  2405  38F5  3400               	retlw	0
  2406  38F6  3414               	retlw	20
  2407  38F7  3400               	retlw	0
  2408  38F8  3428               	retlw	40
  2409  38F9  3400               	retlw	0
  2410  38FA  3450               	retlw	80
  2411  38FB  3400               	retlw	0
  2412  38FC  34A0               	retlw	160
  2413  38FD  3400               	retlw	0
  2414  38FE  3440               	retlw	64
  2415  38FF  3401               	retlw	1
  2416  3900  3480               	retlw	128
  2417  3901  3402               	retlw	2
  2418  3902  3400               	retlw	0
  2419  3903  3405               	retlw	5
  2420  3904                     __end_of_OCD_delay_setting:	
  2421                           
  2422                           	psect	stringtext3
  2423  3904                     __pstringtext3:	
  2424  3904                     _SCD_threshold_setting:	
  2425  3904  342C               	retlw	44
  2426  3905  3400               	retlw	0
  2427  3906  3443               	retlw	67
  2428  3907  3400               	retlw	0
  2429  3908  3459               	retlw	89
  2430  3909  3400               	retlw	0
  2431  390A  346F               	retlw	111
  2432  390B  3400               	retlw	0
  2433  390C  3485               	retlw	133
  2434  390D  3400               	retlw	0
  2435  390E  349B               	retlw	155
  2436  390F  3400               	retlw	0
  2437  3910  34B2               	retlw	178
  2438  3911  3400               	retlw	0
  2439  3912  34C8               	retlw	200
  2440  3913  3400               	retlw	0
  2441  3914                     __end_of_SCD_threshold_setting:	
  2442                           
  2443                           	psect	stringtext4
  2444  3914                     __pstringtext4:	
  2445  3914                     _OV_delay_setting:	
  2446  3914  3401               	retlw	1
  2447  3915  3400               	retlw	0
  2448  3916  3402               	retlw	2
  2449  3917  3400               	retlw	0
  2450  3918  3404               	retlw	4
  2451  3919  3400               	retlw	0
  2452  391A  3408               	retlw	8
  2453  391B  3400               	retlw	0
  2454  391C                     __end_of_OV_delay_setting:	
  2455                           
  2456                           	psect	stringtext5
  2457  391C                     __pstringtext5:	
  2458  391C                     _UV_delay_setting:	
  2459  391C  3401               	retlw	1
  2460  391D  3400               	retlw	0
  2461  391E  3404               	retlw	4
  2462  391F  3400               	retlw	0
  2463  3920  3408               	retlw	8
  2464  3921  3400               	retlw	0
  2465  3922  3410               	retlw	16
  2466  3923  3400               	retlw	0
  2467  3924                     __end_of_UV_delay_setting:	
  2468                           
  2469                           	psect	stringtext6
  2470  3924                     __pstringtext6:	
  2471  3924                     _SCD_delay_setting:	
  2472  3924  3446               	retlw	70
  2473  3925  3400               	retlw	0
  2474  3926  3464               	retlw	100
  2475  3927  3400               	retlw	0
  2476  3928  34C8               	retlw	200
  2477  3929  3400               	retlw	0
  2478  392A  3490               	retlw	144
  2479  392B  3401               	retlw	1
  2480  392C                     __end_of_SCD_delay_setting:	
  2481                           
  2482                           	psect	stringtext7
  2483  392C                     __pstringtext7:	
  2484  392C                     _Lg4:	
  2485  392C  3426               	retlw	38
  2486  392D  349E               	retlw	158
  2487  392E  3478               	retlw	120
  2488  392F  343E               	retlw	62
  2489  3930                     __end_of_Lg4:	
  2490                           
  2491                           	psect	stringtext8
  2492  3930                     __pstringtext8:	
  2493  3930                     _Lg3:	
  2494  3930  34EE               	retlw	238
  2495  3931  34E9               	retlw	233
  2496  3932  3491               	retlw	145
  2497  3933  343E               	retlw	62
  2498  3934                     __end_of_Lg3:	
  2499                           
  2500                           	psect	stringtext9
  2501  3934                     __pstringtext9:	
  2502  3934                     _Lg2:	
  2503  3934  3413               	retlw	19
  2504  3935  34CE               	retlw	206
  2505  3936  34CC               	retlw	204
  2506  3937  343E               	retlw	62
  2507  3938                     __end_of_Lg2:	
  2508                           
  2509                           	psect	stringtext10
  2510  3938                     __pstringtext10:	
  2511  3938                     _Lg1:	
  2512  3938  34AA               	retlw	170
  2513  3939  34AA               	retlw	170
  2514  393A  342A               	retlw	42
  2515  393B  343F               	retlw	63
  2516  393C                     __end_of_Lg1:	
  2517                           
  2518                           	psect	stringtext11
  2519  393C                     __pstringtext11:	
  2520  393C                     _ln2_lo:	
  2521  393C  34D1               	retlw	209
  2522  393D  34F7               	retlw	247
  2523  393E  3417               	retlw	23
  2524  393F  3437               	retlw	55
  2525  3940                     __end_of_ln2_lo:	
  2526                           
  2527                           	psect	stringtext12
  2528  3940                     __pstringtext12:	
  2529  3940                     _ln2_hi:	
  2530  3940  3480               	retlw	128
  2531  3941  3471               	retlw	113
  2532  3942  3431               	retlw	49
  2533  3943  343F               	retlw	63
  2534  3944                     __end_of_ln2_hi:	
  2535                           
  2536                           	psect	stringtext13
  2537  3000                     __pstringtext13:	
  2538  3000                     _ATmega328_address:	
  2539  3000  3402               	retlw	2
  2540  3001  3400               	retlw	0
  2541  3002                     __end_of_ATmega328_address:	
  2542  0016                     _TMR1	set	22
  2543  0003                     _STATUSbits	set	3
  2544  000B                     _INTCONbits	set	11
  2545  0018                     _T1CONbits	set	24
  2546  0011                     _PIR1bits	set	17
  2547  0097                     _WDTCONbits	set	151
  2548  0090                     _TRISEbits	set	144
  2549  008C                     _TRISAbits	set	140
  2550  008E                     _TRISCbits	set	142
  2551  008D                     _TRISBbits	set	141
  2552  0091                     _PIE1bits	set	145
  2553  0476                     _TRISC6	set	1142
  2554  0477                     _TRISC7	set	1143
  2555  04CF                     _SPLLEN	set	1231
  2556  04CE                     _IRCF3	set	1230
  2557  04CD                     _IRCF2	set	1229
  2558  04CC                     _IRCF1	set	1228
  2559  04CB                     _IRCF0	set	1227
  2560  04C9                     _SCS1	set	1225
  2561  04C8                     _SCS0	set	1224
  2562  0110                     _LATEbits	set	272
  2563  010C                     _LATAbits	set	268
  2564  019A                     _TX1REG	set	410
  2565  0199                     _RC1REG	set	409
  2566  019D                     _RC1STAbits	set	413
  2567  019B                     _SPBRG	set	411
  2568  018E                     _ANSELCbits	set	398
  2569  018D                     _ANSELBbits	set	397
  2570  0CF5                     _TXEN	set	3317
  2571  0CEC                     _CREN	set	3308
  2572  0CEF                     _SPEN	set	3311
  2573  0CF4                     _SYNC	set	3316
  2574  0CF2                     _BRGH	set	3314
  2575  0216                     _SSPCON2bits	set	534
  2576  0211                     _SSPBUF	set	529
  2577  0212                     _SSPADD	set	530
  2578  0215                     _SSPCONbits	set	533
  2579  0E24                     _RXPPSbits	set	3620
  2580  0E20                     _SSPCLKPPSbits	set	3616
  2581  0E21                     _SSPDATPPSbits	set	3617
  2582  0E0F                     _PPSLOCKbits	set	3599
  2583  0E0F                     _PPSLOCK	set	3599
  2584  0E9A                     _RB2PPSbits	set	3738
  2585  0EA5                     _RC5PPSbits	set	3749
  2586  0EA4                     _RC4PPSbits	set	3748
  2587  3002                     STR_1:	
  2588  3002  3443               	retlw	67	;'C'
  2589  3003  3465               	retlw	101	;'e'
  2590  3004  346C               	retlw	108	;'l'
  2591  3005  346C               	retlw	108	;'l'
  2592  3006  3420               	retlw	32	;' '
  2593  3007  3462               	retlw	98	;'b'
  2594  3008  3461               	retlw	97	;'a'
  2595  3009  3474               	retlw	116	;'t'
  2596  300A  3474               	retlw	116	;'t'
  2597  300B  343A               	retlw	58	;':'
  2598  300C  3420               	retlw	32	;' '
  2599  300D  3425               	retlw	37	;'%'
  2600  300E  3469               	retlw	105	;'i'
  2601  300F  3420               	retlw	32	;' '
  2602  3010  342C               	retlw	44	;','
  2603  3011  3425               	retlw	37	;'%'
  2604  3012  3464               	retlw	100	;'d'
  2605  3013  342C               	retlw	44	;','
  2606  3014  3420               	retlw	32	;' '
  2607  3015  3425               	retlw	37	;'%'
  2608  3016  3464               	retlw	100	;'d'
  2609  3017  3420               	retlw	32	;' '
  2610  3018  342C               	retlw	44	;','
  2611  3019  3420               	retlw	32	;' '
  2612  301A  3425               	retlw	37	;'%'
  2613  301B  3464               	retlw	100	;'d'
  2614  301C  342C               	retlw	44	;','
  2615  301D  3420               	retlw	32	;' '
  2616  301E  3425               	retlw	37	;'%'
  2617  301F  3464               	retlw	100	;'d'
  2618  3020  342C               	retlw	44	;','
  2619  3021  3420               	retlw	32	;' '
  2620  3022  3425               	retlw	37	;'%'
  2621  3023  3464               	retlw	100	;'d'
  2622  3024  3420               	retlw	32	;' '
  2623  3025  3442               	retlw	66	;'B'
  2624  3026  3461               	retlw	97	;'a'
  2625  3027  3474               	retlw	116	;'t'
  2626  3028  3474               	retlw	116	;'t'
  2627  3029  3420               	retlw	32	;' '
  2628  302A  3443               	retlw	67	;'C'
  2629  302B  3475               	retlw	117	;'u'
  2630  302C  3472               	retlw	114	;'r'
  2631  302D  3472               	retlw	114	;'r'
  2632  302E  343A               	retlw	58	;':'
  2633  302F  3420               	retlw	32	;' '
  2634  3030  3425               	retlw	37	;'%'
  2635  3031  3469               	retlw	105	;'i'
  2636  3032  3420               	retlw	32	;' '
  2637  3033  3454               	retlw	84	;'T'
  2638  3034  3465               	retlw	101	;'e'
  2639  3035  346D               	retlw	109	;'m'
  2640  3036  3470               	retlw	112	;'p'
  2641  3037  343A               	retlw	58	;':'
  2642  3038  3420               	retlw	32	;' '
  2643  3039  3425               	retlw	37	;'%'
  2644  303A  3469               	retlw	105	;'i'
  2645  303B  3420               	retlw	32	;' '
  2646  303C  340A               	retlw	10
  2647  303D  340D               	retlw	13
  2648  303E  3400               	retlw	0
  2649                           
  2650                           	psect	stringtext14
  2651  303F                     __pstringtext14:	
  2652  303F                     STR_2:	
  2653  303F  3450               	retlw	80	;'P'
  2654  3040  3472               	retlw	114	;'r'
  2655  3041  3469               	retlw	105	;'i'
  2656  3042  346E               	retlw	110	;'n'
  2657  3043  3474               	retlw	116	;'t'
  2658  3044  3469               	retlw	105	;'i'
  2659  3045  346E               	retlw	110	;'n'
  2660  3046  3467               	retlw	103	;'g'
  2661  3047  3420               	retlw	32	;' '
  2662  3048  346F               	retlw	111	;'o'
  2663  3049  3475               	retlw	117	;'u'
  2664  304A  3474               	retlw	116	;'t'
  2665  304B  3420               	retlw	32	;' '
  2666  304C  3441               	retlw	65	;'A'
  2667  304D  3446               	retlw	70	;'F'
  2668  304E  3445               	retlw	69	;'E'
  2669  304F  3420               	retlw	32	;' '
  2670  3050  3472               	retlw	114	;'r'
  2671  3051  3465               	retlw	101	;'e'
  2672  3052  3467               	retlw	103	;'g'
  2673  3053  3469               	retlw	105	;'i'
  2674  3054  3473               	retlw	115	;'s'
  2675  3055  3474               	retlw	116	;'t'
  2676  3056  3465               	retlw	101	;'e'
  2677  3057  3472               	retlw	114	;'r'
  2678  3058  3420               	retlw	32	;' '
  2679  3059  3476               	retlw	118	;'v'
  2680  305A  3461               	retlw	97	;'a'
  2681  305B  346C               	retlw	108	;'l'
  2682  305C  3475               	retlw	117	;'u'
  2683  305D  3465               	retlw	101	;'e'
  2684  305E  3473               	retlw	115	;'s'
  2685  305F  342E               	retlw	46	;'.'
  2686  3060  342E               	retlw	46	;'.'
  2687  3061  342E               	retlw	46	;'.'
  2688  3062  340A               	retlw	10
  2689  3063  340D               	retlw	13
  2690  3064  3400               	retlw	0
  2691                           
  2692                           	psect	stringtext15
  2693  3800                     __pstringtext15:	
  2694  3800                     STR_6:	
  2695  3800  3430               	retlw	48	;'0'
  2696  3801  3478               	retlw	120	;'x'
  2697  3802  3430               	retlw	48	;'0'
  2698  3803  3434               	retlw	52	;'4'
  2699  3804  3420               	retlw	32	;' '
  2700  3805  3453               	retlw	83	;'S'
  2701  3806  3459               	retlw	89	;'Y'
  2702  3807  3453               	retlw	83	;'S'
  2703  3808  345F               	retlw	95	;'_'
  2704  3809  3443               	retlw	67	;'C'
  2705  380A  3454               	retlw	84	;'T'
  2706  380B  3452               	retlw	82	;'R'
  2707  380C  344C               	retlw	76	;'L'
  2708  380D  3431               	retlw	49	;'1'
  2709  380E  343A               	retlw	58	;':'
  2710  380F  3420               	retlw	32	;' '
  2711  3810  3425               	retlw	37	;'%'
  2712  3811  3469               	retlw	105	;'i'
  2713  3812  3420               	retlw	32	;' '
  2714  3813  340A               	retlw	10
  2715  3814  340D               	retlw	13
  2716  3815  3400               	retlw	0
  2717                           
  2718                           	psect	stringtext16
  2719  3816                     __pstringtext16:	
  2720  3816                     STR_7:	
  2721  3816  3430               	retlw	48	;'0'
  2722  3817  3478               	retlw	120	;'x'
  2723  3818  3430               	retlw	48	;'0'
  2724  3819  3435               	retlw	53	;'5'
  2725  381A  3420               	retlw	32	;' '
  2726  381B  3453               	retlw	83	;'S'
  2727  381C  3459               	retlw	89	;'Y'
  2728  381D  3453               	retlw	83	;'S'
  2729  381E  345F               	retlw	95	;'_'
  2730  381F  3443               	retlw	67	;'C'
  2731  3820  3454               	retlw	84	;'T'
  2732  3821  3452               	retlw	82	;'R'
  2733  3822  344C               	retlw	76	;'L'
  2734  3823  3432               	retlw	50	;'2'
  2735  3824  343A               	retlw	58	;':'
  2736  3825  3420               	retlw	32	;' '
  2737  3826  3425               	retlw	37	;'%'
  2738  3827  3469               	retlw	105	;'i'
  2739  3828  3420               	retlw	32	;' '
  2740  3829  340A               	retlw	10
  2741  382A  340D               	retlw	13
  2742  382B  3400               	retlw	0
  2743                           
  2744                           	psect	stringtext17
  2745  382C                     __pstringtext17:	
  2746  382C                     STR_5:	
  2747  382C  3430               	retlw	48	;'0'
  2748  382D  3478               	retlw	120	;'x'
  2749  382E  3430               	retlw	48	;'0'
  2750  382F  3431               	retlw	49	;'1'
  2751  3830  3420               	retlw	32	;' '
  2752  3831  3443               	retlw	67	;'C'
  2753  3832  3445               	retlw	69	;'E'
  2754  3833  344C               	retlw	76	;'L'
  2755  3834  344C               	retlw	76	;'L'
  2756  3835  3442               	retlw	66	;'B'
  2757  3836  3441               	retlw	65	;'A'
  2758  3837  344C               	retlw	76	;'L'
  2759  3838  3431               	retlw	49	;'1'
  2760  3839  343A               	retlw	58	;':'
  2761  383A  3420               	retlw	32	;' '
  2762  383B  3425               	retlw	37	;'%'
  2763  383C  3469               	retlw	105	;'i'
  2764  383D  3420               	retlw	32	;' '
  2765  383E  340A               	retlw	10
  2766  383F  340D               	retlw	13
  2767  3840  3400               	retlw	0
  2768                           
  2769                           	psect	stringtext18
  2770  3841                     __pstringtext18:	
  2771  3841                     STR_8:	
  2772  3841  3430               	retlw	48	;'0'
  2773  3842  3478               	retlw	120	;'x'
  2774  3843  3430               	retlw	48	;'0'
  2775  3844  3436               	retlw	54	;'6'
  2776  3845  3420               	retlw	32	;' '
  2777  3846  3450               	retlw	80	;'P'
  2778  3847  3452               	retlw	82	;'R'
  2779  3848  344F               	retlw	79	;'O'
  2780  3849  3454               	retlw	84	;'T'
  2781  384A  3445               	retlw	69	;'E'
  2782  384B  3443               	retlw	67	;'C'
  2783  384C  3454               	retlw	84	;'T'
  2784  384D  3431               	retlw	49	;'1'
  2785  384E  343A               	retlw	58	;':'
  2786  384F  3420               	retlw	32	;' '
  2787  3850  3425               	retlw	37	;'%'
  2788  3851  3469               	retlw	105	;'i'
  2789  3852  3420               	retlw	32	;' '
  2790  3853  340A               	retlw	10
  2791  3854  340D               	retlw	13
  2792  3855  3400               	retlw	0
  2793                           
  2794                           	psect	stringtext19
  2795  3856                     __pstringtext19:	
  2796  3856                     STR_9:	
  2797  3856  3430               	retlw	48	;'0'
  2798  3857  3478               	retlw	120	;'x'
  2799  3858  3430               	retlw	48	;'0'
  2800  3859  3437               	retlw	55	;'7'
  2801  385A  3420               	retlw	32	;' '
  2802  385B  3450               	retlw	80	;'P'
  2803  385C  3452               	retlw	82	;'R'
  2804  385D  344F               	retlw	79	;'O'
  2805  385E  3454               	retlw	84	;'T'
  2806  385F  3445               	retlw	69	;'E'
  2807  3860  3443               	retlw	67	;'C'
  2808  3861  3454               	retlw	84	;'T'
  2809  3862  3432               	retlw	50	;'2'
  2810  3863  343A               	retlw	58	;':'
  2811  3864  3420               	retlw	32	;' '
  2812  3865  3425               	retlw	37	;'%'
  2813  3866  3469               	retlw	105	;'i'
  2814  3867  3420               	retlw	32	;' '
  2815  3868  340A               	retlw	10
  2816  3869  340D               	retlw	13
  2817  386A  3400               	retlw	0
  2818                           
  2819                           	psect	stringtext20
  2820  386B                     __pstringtext20:	
  2821  386B                     STR_10:	
  2822  386B  3430               	retlw	48	;'0'
  2823  386C  3478               	retlw	120	;'x'
  2824  386D  3430               	retlw	48	;'0'
  2825  386E  3438               	retlw	56	;'8'
  2826  386F  3420               	retlw	32	;' '
  2827  3870  3450               	retlw	80	;'P'
  2828  3871  3452               	retlw	82	;'R'
  2829  3872  344F               	retlw	79	;'O'
  2830  3873  3454               	retlw	84	;'T'
  2831  3874  3445               	retlw	69	;'E'
  2832  3875  3443               	retlw	67	;'C'
  2833  3876  3454               	retlw	84	;'T'
  2834  3877  3433               	retlw	51	;'3'
  2835  3878  343A               	retlw	58	;':'
  2836  3879  3420               	retlw	32	;' '
  2837  387A  3425               	retlw	37	;'%'
  2838  387B  3469               	retlw	105	;'i'
  2839  387C  3420               	retlw	32	;' '
  2840  387D  340A               	retlw	10
  2841  387E  340D               	retlw	13
  2842  387F  3400               	retlw	0
  2843                           
  2844                           	psect	stringtext21
  2845  3880                     __pstringtext21:	
  2846  3880                     STR_4:	
  2847  3880  3430               	retlw	48	;'0'
  2848  3881  3478               	retlw	120	;'x'
  2849  3882  3430               	retlw	48	;'0'
  2850  3883  3430               	retlw	48	;'0'
  2851  3884  3420               	retlw	32	;' '
  2852  3885  3453               	retlw	83	;'S'
  2853  3886  3459               	retlw	89	;'Y'
  2854  3887  3453               	retlw	83	;'S'
  2855  3888  345F               	retlw	95	;'_'
  2856  3889  3453               	retlw	83	;'S'
  2857  388A  3454               	retlw	84	;'T'
  2858  388B  3441               	retlw	65	;'A'
  2859  388C  3454               	retlw	84	;'T'
  2860  388D  343A               	retlw	58	;':'
  2861  388E  3420               	retlw	32	;' '
  2862  388F  3425               	retlw	37	;'%'
  2863  3890  3469               	retlw	105	;'i'
  2864  3891  3420               	retlw	32	;' '
  2865  3892  340A               	retlw	10
  2866  3893  340D               	retlw	13
  2867  3894  3400               	retlw	0
  2868                           
  2869                           	psect	stringtext22
  2870  3895                     __pstringtext22:	
  2871  3895                     STR_11:	
  2872  3895  3430               	retlw	48	;'0'
  2873  3896  3478               	retlw	120	;'x'
  2874  3897  3430               	retlw	48	;'0'
  2875  3898  3439               	retlw	57	;'9'
  2876  3899  3420               	retlw	32	;' '
  2877  389A  344F               	retlw	79	;'O'
  2878  389B  3456               	retlw	86	;'V'
  2879  389C  345F               	retlw	95	;'_'
  2880  389D  3454               	retlw	84	;'T'
  2881  389E  3452               	retlw	82	;'R'
  2882  389F  3449               	retlw	73	;'I'
  2883  38A0  3450               	retlw	80	;'P'
  2884  38A1  343A               	retlw	58	;':'
  2885  38A2  3420               	retlw	32	;' '
  2886  38A3  3425               	retlw	37	;'%'
  2887  38A4  3469               	retlw	105	;'i'
  2888  38A5  3420               	retlw	32	;' '
  2889  38A6  340A               	retlw	10
  2890  38A7  340D               	retlw	13
  2891  38A8  3400               	retlw	0
  2892                           
  2893                           	psect	stringtext23
  2894  38A9                     __pstringtext23:	
  2895  38A9                     STR_12:	
  2896  38A9  3430               	retlw	48	;'0'
  2897  38AA  3478               	retlw	120	;'x'
  2898  38AB  3430               	retlw	48	;'0'
  2899  38AC  3441               	retlw	65	;'A'
  2900  38AD  3420               	retlw	32	;' '
  2901  38AE  3455               	retlw	85	;'U'
  2902  38AF  3456               	retlw	86	;'V'
  2903  38B0  345F               	retlw	95	;'_'
  2904  38B1  3454               	retlw	84	;'T'
  2905  38B2  3452               	retlw	82	;'R'
  2906  38B3  3449               	retlw	73	;'I'
  2907  38B4  3450               	retlw	80	;'P'
  2908  38B5  343A               	retlw	58	;':'
  2909  38B6  3420               	retlw	32	;' '
  2910  38B7  3425               	retlw	37	;'%'
  2911  38B8  3469               	retlw	105	;'i'
  2912  38B9  3420               	retlw	32	;' '
  2913  38BA  340A               	retlw	10
  2914  38BB  340D               	retlw	13
  2915  38BC  3400               	retlw	0
  2916                           
  2917                           	psect	stringtext24
  2918  38BD                     __pstringtext24:	
  2919  38BD                     STR_13:	
  2920  38BD  3430               	retlw	48	;'0'
  2921  38BE  3478               	retlw	120	;'x'
  2922  38BF  3430               	retlw	48	;'0'
  2923  38C0  3442               	retlw	66	;'B'
  2924  38C1  3420               	retlw	32	;' '
  2925  38C2  3443               	retlw	67	;'C'
  2926  38C3  3443               	retlw	67	;'C'
  2927  38C4  345F               	retlw	95	;'_'
  2928  38C5  3443               	retlw	67	;'C'
  2929  38C6  3446               	retlw	70	;'F'
  2930  38C7  3447               	retlw	71	;'G'
  2931  38C8  343A               	retlw	58	;':'
  2932  38C9  3420               	retlw	32	;' '
  2933  38CA  3425               	retlw	37	;'%'
  2934  38CB  3469               	retlw	105	;'i'
  2935  38CC  3420               	retlw	32	;' '
  2936  38CD  340A               	retlw	10
  2937  38CE  340D               	retlw	13
  2938  38CF  3400               	retlw	0
  2939                           
  2940                           	psect	stringtext25
  2941  38D0                     __pstringtext25:	
  2942  38D0                     STR_14:	
  2943  38D0  3430               	retlw	48	;'0'
  2944  38D1  3478               	retlw	120	;'x'
  2945  38D2  3433               	retlw	51	;'3'
  2946  38D3  3432               	retlw	50	;'2'
  2947  38D4  3420               	retlw	32	;' '
  2948  38D5  3443               	retlw	67	;'C'
  2949  38D6  3443               	retlw	67	;'C'
  2950  38D7  345F               	retlw	95	;'_'
  2951  38D8  3448               	retlw	72	;'H'
  2952  38D9  3449               	retlw	73	;'I'
  2953  38DA  343A               	retlw	58	;':'
  2954  38DB  3420               	retlw	32	;' '
  2955  38DC  3425               	retlw	37	;'%'
  2956  38DD  3469               	retlw	105	;'i'
  2957  38DE  3420               	retlw	32	;' '
  2958  38DF  340A               	retlw	10
  2959  38E0  340D               	retlw	13
  2960  38E1  3400               	retlw	0
  2961                           
  2962                           	psect	stringtext26
  2963  38E2                     __pstringtext26:	
  2964  38E2                     STR_15:	
  2965  38E2  3430               	retlw	48	;'0'
  2966  38E3  3478               	retlw	120	;'x'
  2967  38E4  3433               	retlw	51	;'3'
  2968  38E5  3433               	retlw	51	;'3'
  2969  38E6  3420               	retlw	32	;' '
  2970  38E7  3443               	retlw	67	;'C'
  2971  38E8  3443               	retlw	67	;'C'
  2972  38E9  345F               	retlw	95	;'_'
  2973  38EA  344C               	retlw	76	;'L'
  2974  38EB  344F               	retlw	79	;'O'
  2975  38EC  343A               	retlw	58	;':'
  2976  38ED  3420               	retlw	32	;' '
  2977  38EE  3425               	retlw	37	;'%'
  2978  38EF  3469               	retlw	105	;'i'
  2979  38F0  3420               	retlw	32	;' '
  2980  38F1  340A               	retlw	10
  2981  38F2  340D               	retlw	13
  2982  38F3  3400               	retlw	0
  2983                           
  2984                           	psect	stringtext27
  2985  3944                     __pstringtext27:	
  2986  3944                     STR_93:	
  2987  3944  3468               	retlw	104	;'h'
  2988  3945  3468               	retlw	104	;'h'
  2989  3946  3458               	retlw	88	;'X'
  2990  3947  3400               	retlw	0
  2991                           
  2992                           	psect	stringtext28
  2993  3948                     __pstringtext28:	
  2994  3948                     STR_17:	
  2995  3948  3468               	retlw	104	;'h'
  2996  3949  3468               	retlw	104	;'h'
  2997  394A  3464               	retlw	100	;'d'
  2998  394B  3400               	retlw	0
  2999                           
  3000                           	psect	stringtext29
  3001  394C                     __pstringtext29:	
  3002  394C                     STR_21:	
  3003  394C  3468               	retlw	104	;'h'
  3004  394D  3468               	retlw	104	;'h'
  3005  394E  3469               	retlw	105	;'i'
  3006  394F  3400               	retlw	0
  3007                           
  3008                           	psect	stringtext30
  3009  3950                     __pstringtext30:	
  3010  3950                     STR_59:	
  3011  3950  3468               	retlw	104	;'h'
  3012  3951  3468               	retlw	104	;'h'
  3013  3952  346E               	retlw	110	;'n'
  3014  3953  3400               	retlw	0
  3015                           
  3016                           	psect	stringtext31
  3017  3954                     __pstringtext31:	
  3018  3954                     STR_44:	
  3019  3954  3468               	retlw	104	;'h'
  3020  3955  3468               	retlw	104	;'h'
  3021  3956  346F               	retlw	111	;'o'
  3022  3957  3400               	retlw	0
  3023                           
  3024                           	psect	stringtext32
  3025  3958                     __pstringtext32:	
  3026  3958                     STR_74:	
  3027  3958  3468               	retlw	104	;'h'
  3028  3959  3468               	retlw	104	;'h'
  3029  395A  3475               	retlw	117	;'u'
  3030  395B  3400               	retlw	0
  3031                           
  3032                           	psect	stringtext33
  3033  395C                     __pstringtext33:	
  3034  395C                     STR_89:	
  3035  395C  3468               	retlw	104	;'h'
  3036  395D  3468               	retlw	104	;'h'
  3037  395E  3478               	retlw	120	;'x'
  3038  395F  3400               	retlw	0
  3039                           
  3040                           	psect	stringtext34
  3041  3960                     __pstringtext34:	
  3042  3960                     STR_111:	
  3043  3960  347A               	retlw	122	;'z'
  3044  3961  3458               	retlw	88	;'X'
  3045  3962  3400               	retlw	0
  3046                           
  3047                           	psect	stringtext35
  3048  3963                     __pstringtext35:	
  3049  3963                     STR_35:	
  3050  3963  347A               	retlw	122	;'z'
  3051  3964  3464               	retlw	100	;'d'
  3052  3965  3400               	retlw	0
  3053                           
  3054                           	psect	stringtext36
  3055  3966                     __pstringtext36:	
  3056  3966                     STR_39:	
  3057  3966  347A               	retlw	122	;'z'
  3058  3967  3469               	retlw	105	;'i'
  3059  3968  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext37
  3062  3969                     __pstringtext37:	
  3063  3969                     STR_69:	
  3064  3969  347A               	retlw	122	;'z'
  3065  396A  346E               	retlw	110	;'n'
  3066  396B  3400               	retlw	0
  3067                           
  3068                           	psect	stringtext38
  3069  396C                     __pstringtext38:	
  3070  396C                     STR_54:	
  3071  396C  347A               	retlw	122	;'z'
  3072  396D  346F               	retlw	111	;'o'
  3073  396E  3400               	retlw	0
  3074                           
  3075                           	psect	stringtext39
  3076  396F                     __pstringtext39:	
  3077  396F                     STR_84:	
  3078  396F  347A               	retlw	122	;'z'
  3079  3970  3475               	retlw	117	;'u'
  3080  3971  3400               	retlw	0
  3081                           
  3082                           	psect	stringtext40
  3083  3972                     __pstringtext40:	
  3084  3972                     STR_107:	
  3085  3972  347A               	retlw	122	;'z'
  3086  3973  3478               	retlw	120	;'x'
  3087  3974  3400               	retlw	0
  3088                           
  3089                           	psect	stringtext41
  3090  0000                     __pstringtext41:	
  3091  383E                     
  3092                           ; #config settings
  3093  0000                     
  3094                           	psect	cinit
  3095  0022                     start_initialization:	
  3096  0022                     __initialization:		;BIGRAM
  3097                           
  3098                           ; Initialize objects allocated to BANK3
  3099  0022  3000               	movlw	low __pidataBANK3
  3100  0023  0084               	movwf	4
  3101  0024  30A8               	movlw	(high __pidataBANK3)| (0+128)
  3102  0025  0085               	movwf	5
  3103  0026  0023               	movlb	3	; select bank3
  3104  0027  0012               	moviw fsr0++
  3105  0028  00D0               	movwf	__pdataBANK3& (0+127)
  3106  0029  0012               	moviw fsr0++
  3107  002A  00D1               	movwf	(__pdataBANK3+1)& (0+127)
  3108  002B  0012               	moviw fsr0++
  3109  002C  00D2               	movwf	(__pdataBANK3+2)& (0+127)
  3110  002D  0012               	moviw fsr0++
  3111  002E  00D3               	movwf	(__pdataBANK3+3)& (0+127)
  3112  002F  0012               	moviw fsr0++
  3113  0030  00D4               	movwf	(__pdataBANK3+4)& (0+127)
  3114  0031  0012               	moviw fsr0++
  3115  0032  00D5               	movwf	(__pdataBANK3+5)& (0+127)
  3116  0033  0012               	moviw fsr0++
  3117  0034  00D6               	movwf	(__pdataBANK3+6)& (0+127)
  3118  0035  0012               	moviw fsr0++
  3119  0036  00D7               	movwf	(__pdataBANK3+7)& (0+127)
  3120  0037  0012               	moviw fsr0++
  3121  0038  00D8               	movwf	(__pdataBANK3+8)& (0+127)
  3122                           
  3123                           ; Clear objects allocated to BIGRAM
  3124  0039  3071               	movlw	low (0+10097)
  3125  003A  0084               	movwf	4
  3126  003B  3027               	movlw	high (0+10097)
  3127  003C  0085               	movwf	5
  3128  003D  307F               	movlw	127
  3129  003E  00FE               	movwf	btemp
  3130  003F  3000               	movlw	0
  3131  0040  00FF               	movwf	btemp+1
  3132  0041  31A0  2000  3180   	fcall	clear_ram0
  3133                           
  3134                           ; Clear objects allocated to COMMON
  3135  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3136                           
  3137                           ; Clear objects allocated to BANK1
  3138  0045  0021               	movlb	1	; select bank1
  3139  0046  01EB               	clrf	__pbssBANK1& (0+127)
  3140  0047  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  3141  0048  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  3142  0049  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  3143  004A  01EF               	clrf	(__pbssBANK1+4)& (0+127)
  3144                           
  3145                           ; Clear objects allocated to BANK2
  3146  004B  3062               	movlw	low __pbssBANK2
  3147  004C  0084               	movwf	4
  3148  004D  3001               	movlw	high __pbssBANK2
  3149  004E  0085               	movwf	5
  3150  004F  300E               	movlw	14
  3151  0050  00FE               	movwf	btemp
  3152  0051  3000               	movlw	0
  3153  0052  00FF               	movwf	btemp+1
  3154  0053  31A0  2000  3180   	fcall	clear_ram0
  3155                           
  3156                           ; Clear objects allocated to BANK3
  3157  0056  30A0               	movlw	low __pbssBANK3
  3158  0057  0084               	movwf	4
  3159  0058  3001               	movlw	high __pbssBANK3
  3160  0059  0085               	movwf	5
  3161  005A  3030               	movlw	48
  3162  005B  00FE               	movwf	btemp
  3163  005C  3000               	movlw	0
  3164  005D  00FF               	movwf	btemp+1
  3165  005E  31A0  2000  3180   	fcall	clear_ram0
  3166                           
  3167                           ; Clear objects allocated to BANK4
  3168  0061  3020               	movlw	low __pbssBANK4
  3169  0062  0084               	movwf	4
  3170  0063  3002               	movlw	high __pbssBANK4
  3171  0064  0085               	movwf	5
  3172  0065  3020               	movlw	32
  3173  0066  00FE               	movwf	btemp
  3174  0067  3000               	movlw	0
  3175  0068  00FF               	movwf	btemp+1
  3176  0069  31A0  2000         	fcall	clear_ram0
  3177  006B                     end_of_initialization:	
  3178                           ;End of C runtime variable initialization code
  3179                           
  3180  006B                     __end_of__initialization:	
  3181  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3182  006C  0020               	movlb	0
  3183  006D  31A9  2993         	ljmp	_main	;jump to C main() function
  3184                           
  3185                           	psect	bssCOMMON
  3186  007C                     __pbssCOMMON:	
  3187  007C                     _toggleColor:	
  3188  007C                     	ds	1
  3189                           
  3190                           	psect	bssBANK1
  3191  00EB                     __pbssBANK1:	
  3192  00EB                     _prec:	
  3193  00EB                     	ds	2
  3194  00ED                     _flags:	
  3195  00ED                     	ds	2
  3196  00EF                     _tmr1_flag:	
  3197  00EF                     	ds	1
  3198                           
  3199                           	psect	bssBANK2
  3200  0162                     __pbssBANK2:	
  3201  0162                     _nout:	
  3202  0162                     	ds	2
  3203  0164                     _width:	
  3204  0164                     	ds	2
  3205  0166                     _adcOffset:	
  3206  0166                     	ds	2
  3207  0168                     BQ76920@protect3:	
  3208  0168                     	ds	1
  3209  0169                     BQ76920@protect2:	
  3210  0169                     	ds	1
  3211  016A                     BQ76920@protect1:	
  3212  016A                     	ds	1
  3213  016B                     myIsr@count:	
  3214  016B                     	ds	1
  3215  016C                     _currState:	
  3216  016C                     	ds	1
  3217  016D                     _protect1:	
  3218  016D                     	ds	1
  3219  016E                     _adcGain:	
  3220  016E                     	ds	2
  3221                           
  3222                           	psect	bssBANK3
  3223  01A0                     __pbssBANK3:	
  3224  01A0                     _cellVoltages:	
  3225  01A0                     	ds	10
  3226  01AA                     logf@F469:	
  3227  01AA                     	ds	4
  3228  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3229  01AE                     	ds	4
  3230  01B2                     _shuntResistorValue_mOhm:	
  3231  01B2                     	ds	4
  3232  01B6                     _batCurrent:	
  3233  01B6                     	ds	4
  3234  01BA                     _batVoltage:	
  3235  01BA                     	ds	4
  3236  01BE                     _errno:	
  3237  01BE                     	ds	2
  3238  01C0                     _temperatureThermistor:	
  3239  01C0                     	ds	2
  3240  01C2                     _minCellVoltage:	
  3241  01C2                     	ds	2
  3242  01C4                     _maxCellVoltage:	
  3243  01C4                     	ds	2
  3244  01C6                     _maxCellTempDischarge:	
  3245  01C6                     	ds	2
  3246  01C8                     _maxCellTempCharge:	
  3247  01C8                     	ds	2
  3248  01CA                     _minCellTempDischarge:	
  3249  01CA                     	ds	2
  3250  01CC                     _minCellTempCharge:	
  3251  01CC                     	ds	2
  3252  01CE                     _protect3:	
  3253  01CE                     	ds	1
  3254  01CF                     _protect2:	
  3255  01CF                     	ds	1
  3256                           
  3257                           	psect	dataBANK3
  3258  01D0                     __pdataBANK3:	
  3259  01D0                     stoa@F1152:	
  3260  01D0                     	ds	7
  3261  01D7                     _thermistorBetaValue:	
  3262  01D7                     	ds	2
  3263                           
  3264                           	psect	bssBANK4
  3265  0220                     __pbssBANK4:	
  3266  0220                     _dbuf:	
  3267  0220                     	ds	32
  3268                           
  3269                           	psect	clrtext
  3270  2000                     clear_ram0:	
  3271                           ;	Called with FSR0 containing the base address, and
  3272                           ;	btemp/btemp+1 has the size to clear
  3273                           
  3274  2000  0064               	clrwdt	;clear the watchdog before getting into this loop
  3275  2001                     clrloop0:	
  3276  2001  0180               	clrf	0	;clear RAM location pointed to by FSR
  3277  2002  3101               	addfsr 0,1
  3278  2003  3001               	movlw	1
  3279  2004  02FE               	subwf	126,f
  3280  2005  3000               	movlw	0
  3281  2006  3BFF               	subwfb	127,f
  3282  2007  087F               	movf	127,w
  3283  2008  047E               	iorwf	126,w
  3284  2009  1903               	btfsc	3,2
  3285  200A  3400               	retlw	0	;all done for this memory range, return
  3286  200B  2801               	goto	clrloop0	;have we reached the end yet?
  3287                           
  3288                           	psect	cstackBANK2
  3289  0120                     __pcstackBANK2:	
  3290  0120                     logf@R:	
  3291                           
  3292                           ; 4 bytes @ 0x0
  3293  0120                     	ds	4
  3294  0124                     logf@t1:	
  3295                           
  3296                           ; 4 bytes @ 0x4
  3297  0124                     	ds	4
  3298  0128                     logf@t2:	
  3299                           
  3300                           ; 4 bytes @ 0x8
  3301  0128                     	ds	4
  3302  012C                     _logf$2030:	
  3303                           
  3304                           ; 4 bytes @ 0xC
  3305  012C                     	ds	4
  3306  0130                     _logf$2031:	
  3307                           
  3308                           ; 4 bytes @ 0x10
  3309  0130                     	ds	4
  3310  0134                     _logf$2032:	
  3311                           
  3312                           ; 4 bytes @ 0x14
  3313  0134                     	ds	4
  3314  0138                     _logf$2033:	
  3315                           
  3316                           ; 4 bytes @ 0x18
  3317  0138                     	ds	4
  3318  013C                     logf@k:	
  3319                           
  3320                           ; 2 bytes @ 0x1C
  3321  013C                     	ds	2
  3322  013E                     logf@hfsq:	
  3323                           
  3324                           ; 4 bytes @ 0x1E
  3325  013E                     	ds	4
  3326  0142                     logf@dk:	
  3327                           
  3328                           ; 4 bytes @ 0x22
  3329  0142                     	ds	4
  3330  0146                     logf@s:	
  3331                           
  3332                           ; 4 bytes @ 0x26
  3333  0146                     	ds	4
  3334  014A                     logf@z:	
  3335                           
  3336                           ; 4 bytes @ 0x2A
  3337  014A                     	ds	4
  3338  014E                     logf@w:	
  3339                           
  3340                           ; 4 bytes @ 0x2E
  3341  014E                     	ds	4
  3342  0152                     _logf$2029:	
  3343                           
  3344                           ; 4 bytes @ 0x32
  3345  0152                     	ds	4
  3346  0156                     logf@u:	
  3347                           
  3348                           ; 4 bytes @ 0x36
  3349  0156                     	ds	4
  3350  015A                     logf@f:	
  3351                           
  3352                           ; 4 bytes @ 0x3A
  3353  015A                     	ds	4
  3354  015E                     logf@ix:	
  3355                           
  3356                           ; 4 bytes @ 0x3E
  3357  015E                     	ds	4
  3358                           
  3359                           	psect	cstackBANK1
  3360  00A0                     __pcstackBANK1:	
  3361  00A0                     ?___flsub:	
  3362  00A0                     vfpfcnvrt@cp:	
  3363                           ; 4 bytes @ 0x0
  3364                           
  3365  00A0                     setShortCircuitProtection@scaler:	
  3366                           ; 2 bytes @ 0x0
  3367                           
  3368  00A0                     setOverCurrentDischargeProtection@scaler:	
  3369                           ; 4 bytes @ 0x0
  3370                           
  3371  00A0                     ___flsub@a:	
  3372                           ; 4 bytes @ 0x0
  3373                           
  3374                           
  3375                           ; 4 bytes @ 0x0
  3376  00A0                     	ds	2
  3377  00A2                     vfpfcnvrt@done:	
  3378                           
  3379                           ; 2 bytes @ 0x2
  3380  00A2                     	ds	2
  3381  00A4                     _vfpfcnvrt$1242:	
  3382  00A4                     ___flsub@b:	
  3383                           ; 2 bytes @ 0x4
  3384                           
  3385  00A4                     _setShortCircuitProtection$2023:	
  3386                           ; 4 bytes @ 0x4
  3387                           
  3388  00A4                     _setOverCurrentDischargeProtection$2024:	
  3389                           ; 4 bytes @ 0x4
  3390                           
  3391                           
  3392                           ; 4 bytes @ 0x4
  3393  00A4                     	ds	2
  3394  00A6                     _vfpfcnvrt$1243:	
  3395                           
  3396                           ; 2 bytes @ 0x6
  3397  00A6                     	ds	2
  3398  00A8                     ?_logf:	
  3399  00A8                     ?___fltol:	
  3400                           ; 4 bytes @ 0x8
  3401                           
  3402  00A8                     setShortCircuitProtection@i:	
  3403                           ; 4 bytes @ 0x8
  3404                           
  3405  00A8                     setOverCurrentDischargeProtection@i:	
  3406                           ; 2 bytes @ 0x8
  3407                           
  3408  00A8                     ___fltol@f1:	
  3409                           ; 2 bytes @ 0x8
  3410                           
  3411  00A8                     logf@x:	
  3412                           ; 4 bytes @ 0x8
  3413                           
  3414  00A8                     vfpfcnvrt@ll:	
  3415                           ; 4 bytes @ 0x8
  3416                           
  3417                           
  3418                           ; 8 bytes @ 0x8
  3419  00A8                     	ds	2
  3420  00AA                     setShortCircuitProtection@i_949:	
  3421  00AA                     setOverCurrentDischargeProtection@i_958:	
  3422                           ; 2 bytes @ 0xA
  3423                           
  3424                           
  3425                           ; 2 bytes @ 0xA
  3426  00AA                     	ds	2
  3427  00AC                     ??_logf:	
  3428  00AC                     ??___fltol:	
  3429                           ; 1 bytes @ 0xC
  3430                           
  3431                           
  3432                           ; 1 bytes @ 0xC
  3433  00AC                     	ds	4
  3434  00B0                     vfpfcnvrt@vp:	
  3435                           
  3436                           ; 2 bytes @ 0x10
  3437  00B0                     	ds	1
  3438  00B1                     ??_updateVoltages:	
  3439                           
  3440                           ; 1 bytes @ 0x11
  3441  00B1                     	ds	1
  3442  00B2                     vfpfcnvrt@c:	
  3443                           
  3444                           ; 1 bytes @ 0x12
  3445  00B2                     	ds	1
  3446  00B3                     vfpfcnvrt@llu:	
  3447                           
  3448                           ; 8 bytes @ 0x13
  3449  00B3                     	ds	1
  3450  00B4                     ??_updateTemperatures:	
  3451  00B4                     _updateVoltages$2025:	
  3452                           ; 1 bytes @ 0x14
  3453                           
  3454                           
  3455                           ; 4 bytes @ 0x14
  3456  00B4                     	ds	3
  3457  00B7                     _updateTemperatures$2026:	
  3458                           
  3459                           ; 4 bytes @ 0x17
  3460  00B7                     	ds	1
  3461  00B8                     updateVoltages@adcVal:	
  3462                           
  3463                           ; 4 bytes @ 0x18
  3464  00B8                     	ds	3
  3465  00BB                     ?_vsnprintf:	
  3466  00BB                     vsnprintf@s:	
  3467                           ; 2 bytes @ 0x1B
  3468                           
  3469  00BB                     _updateTemperatures$2027:	
  3470                           ; 2 bytes @ 0x1B
  3471                           
  3472                           
  3473                           ; 4 bytes @ 0x1B
  3474  00BB                     	ds	2
  3475  00BD                     vsnprintf@n:	
  3476                           
  3477                           ; 2 bytes @ 0x1D
  3478  00BD                     	ds	2
  3479  00BF                     vsnprintf@fmt:	
  3480  00BF                     _updateTemperatures$2028:	
  3481                           ; 2 bytes @ 0x1F
  3482                           
  3483                           
  3484                           ; 4 bytes @ 0x1F
  3485  00BF                     	ds	2
  3486  00C1                     vsnprintf@ap:	
  3487                           
  3488                           ; 1 bytes @ 0x21
  3489  00C1                     	ds	1
  3490  00C2                     _vsnprintf$1814:	
  3491                           
  3492                           ; 2 bytes @ 0x22
  3493  00C2                     	ds	1
  3494  00C3                     updateTemperatures@tmp:	
  3495                           
  3496                           ; 4 bytes @ 0x23
  3497  00C3                     	ds	1
  3498  00C4                     vsnprintf@cnt:	
  3499                           
  3500                           ; 2 bytes @ 0x24
  3501  00C4                     	ds	2
  3502  00C6                     vsnprintf@f:	
  3503                           
  3504                           ; 6 bytes @ 0x26
  3505  00C6                     	ds	1
  3506  00C7                     updateTemperatures@rts:	
  3507                           
  3508                           ; 4 bytes @ 0x27
  3509  00C7                     	ds	4
  3510  00CB                     updateTemperatures@adcVal:	
  3511                           
  3512                           ; 2 bytes @ 0x2B
  3513  00CB                     	ds	1
  3514  00CC                     ?_snprintf:	
  3515  00CC                     snprintf@s:	
  3516                           ; 2 bytes @ 0x2C
  3517                           
  3518                           
  3519                           ; 2 bytes @ 0x2C
  3520  00CC                     	ds	1
  3521  00CD                     updateTemperatures@vtsx:	
  3522                           
  3523                           ; 2 bytes @ 0x2D
  3524  00CD                     	ds	1
  3525  00CE                     snprintf@n:	
  3526                           
  3527                           ; 2 bytes @ 0x2E
  3528  00CE                     	ds	2
  3529  00D0                     snprintf@fmt:	
  3530                           
  3531                           ; 2 bytes @ 0x30
  3532  00D0                     	ds	22
  3533  00E6                     ??_statemachine:	
  3534                           
  3535                           ; 1 bytes @ 0x46
  3536  00E6                     	ds	2
  3537  00E8                     statemachine@success:	
  3538                           
  3539                           ; 1 bytes @ 0x48
  3540  00E8                     	ds	1
  3541  00E9                     ??_main:	
  3542                           
  3543                           ; 1 bytes @ 0x49
  3544  00E9                     	ds	2
  3545                           
  3546                           	psect	cstackCOMMON
  3547  0070                     __pcstackCOMMON:	
  3548  0070                     ?_initClock:	
  3549  0070                     ?_init_GPIO:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0070                     ?_initWDT:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0070                     ?_init_I2C:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0070                     ?_init_TMR1:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     ?_init_RGB:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0070                     ?_watchdog_timeout_shutdown:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0070                     ?_statemachine:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0070                     ?_init_AFE:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0070                     ?_AFE_UPDATE:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0070                     ?_printcellParameters:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0070                     ?_internal_16:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0070                     ?_updateVoltages:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0070                     ?_updateTemperatures:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0070                     ?_shutdown_BMS:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0070                     ?_putch:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0070                     ?_myIsr:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     ??_myIsr:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ?_main:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_EUSART_Write:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ?_send_I2C_startBit:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0070                     ?_send_I2C_stopBit:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0070                     ?_send_I2C_NACK:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0070                     putch@c:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621                           
  3622                           ; 1 bytes @ 0x0
  3623  0070                     	ds	1
  3624  0071                     ??_initClock:	
  3625  0071                     ??_init_GPIO:	
  3626                           ; 1 bytes @ 0x1
  3627                           
  3628  0071                     ??_initWDT:	
  3629                           ; 1 bytes @ 0x1
  3630                           
  3631  0071                     ??_init_I2C:	
  3632                           ; 1 bytes @ 0x1
  3633                           
  3634  0071                     ??_init_TMR1:	
  3635                           ; 1 bytes @ 0x1
  3636                           
  3637  0071                     ??_init_RGB:	
  3638                           ; 1 bytes @ 0x1
  3639                           
  3640  0071                     ?_RGB_color:	
  3641                           ; 1 bytes @ 0x1
  3642                           
  3643  0071                     ??_internal_16:	
  3644                           ; 1 bytes @ 0x1
  3645                           
  3646  0071                     ?_setShuntResistorValue:	
  3647                           ; 1 bytes @ 0x1
  3648                           
  3649  0071                     ??_shutdown_BMS:	
  3650                           ; 1 bytes @ 0x1
  3651                           
  3652  0071                     ??_putch:	
  3653                           ; 1 bytes @ 0x1
  3654                           
  3655  0071                     ??_EUSART_Write:	
  3656                           ; 1 bytes @ 0x1
  3657                           
  3658  0071                     ?_send_I2C_data:	
  3659                           ; 1 bytes @ 0x1
  3660                           
  3661  0071                     ?_send_I2C_controlByte:	
  3662                           ; 1 bytes @ 0x1
  3663                           
  3664  0071                     ??_send_I2C_startBit:	
  3665                           ; 1 bytes @ 0x1
  3666                           
  3667  0071                     ??_send_I2C_stopBit:	
  3668                           ; 1 bytes @ 0x1
  3669                           
  3670  0071                     ??_send_I2C_NACK:	
  3671                           ; 1 bytes @ 0x1
  3672                           
  3673  0071                     ??___aodiv:	
  3674                           ; 1 bytes @ 0x1
  3675                           
  3676  0071                     ??___aomod:	
  3677                           ; 1 bytes @ 0x1
  3678                           
  3679  0071                     ??___lodiv:	
  3680                           ; 1 bytes @ 0x1
  3681                           
  3682  0071                     ??___lomod:	
  3683                           ; 1 bytes @ 0x1
  3684                           
  3685  0071                     ?_fputc:	
  3686                           ; 1 bytes @ 0x1
  3687                           
  3688  0071                     ?_strlen:	
  3689                           ; 2 bytes @ 0x1
  3690                           
  3691  0071                     ?_isupper:	
  3692                           ; 2 bytes @ 0x1
  3693                           
  3694  0071                     ?_isalpha:	
  3695                           ; 2 bytes @ 0x1
  3696                           
  3697  0071                     ?_isdigit:	
  3698                           ; 2 bytes @ 0x1
  3699                           
  3700  0071                     ?_strncmp:	
  3701                           ; 2 bytes @ 0x1
  3702                           
  3703  0071                     ?__Umul8_16:	
  3704                           ; 2 bytes @ 0x1
  3705                           
  3706  0071                     ?_isspace:	
  3707                           ; 2 bytes @ 0x1
  3708                           
  3709  0071                     ?_islower:	
  3710                           ; 2 bytes @ 0x1
  3711                           
  3712  0071                     ?_read_I2C_data:	
  3713                           ; 2 bytes @ 0x1
  3714                           
  3715  0071                     ?___wmul:	
  3716                           ; 2 bytes @ 0x1
  3717                           
  3718  0071                     ?___lmul:	
  3719                           ; 2 bytes @ 0x1
  3720                           
  3721  0071                     ?___xxtofl:	
  3722                           ; 4 bytes @ 0x1
  3723                           
  3724  0071                     EUSART_Write@txData:	
  3725                           ; 4 bytes @ 0x1
  3726                           
  3727  0071                     __Umul8_16@multiplicand:	
  3728                           ; 1 bytes @ 0x1
  3729                           
  3730  0071                     send_I2C_data@databyte:	
  3731                           ; 1 bytes @ 0x1
  3732                           
  3733  0071                     send_I2C_controlByte@BlockAddress:	
  3734                           ; 2 bytes @ 0x1
  3735                           
  3736  0071                     RGB_color@color:	
  3737                           ; 2 bytes @ 0x1
  3738                           
  3739  0071                     ___wmul@multiplier:	
  3740                           ; 2 bytes @ 0x1
  3741                           
  3742  0071                     isalpha@c:	
  3743                           ; 2 bytes @ 0x1
  3744                           
  3745  0071                     isdigit@c:	
  3746                           ; 2 bytes @ 0x1
  3747                           
  3748  0071                     isspace@c:	
  3749                           ; 2 bytes @ 0x1
  3750                           
  3751  0071                     isupper@c:	
  3752                           ; 2 bytes @ 0x1
  3753                           
  3754  0071                     fputc@c:	
  3755                           ; 2 bytes @ 0x1
  3756                           
  3757  0071                     strlen@s:	
  3758                           ; 2 bytes @ 0x1
  3759                           
  3760  0071                     strncmp@_l:	
  3761                           ; 2 bytes @ 0x1
  3762                           
  3763  0071                     islower@c:	
  3764                           ; 2 bytes @ 0x1
  3765                           
  3766  0071                     setShuntResistorValue@res_mOhm:	
  3767                           ; 2 bytes @ 0x1
  3768                           
  3769  0071                     ___lmul@multiplier:	
  3770                           ; 4 bytes @ 0x1
  3771                           
  3772  0071                     ___xxtofl@val:	
  3773                           ; 4 bytes @ 0x1
  3774                           
  3775                           
  3776                           ; 4 bytes @ 0x1
  3777  0071                     	ds	1
  3778  0072                     ?_EUSART_Write_Text:	
  3779  0072                     ___aodiv@counter:	
  3780                           ; 1 bytes @ 0x2
  3781                           
  3782  0072                     ___aomod@counter:	
  3783                           ; 1 bytes @ 0x2
  3784                           
  3785  0072                     ___lomod@counter:	
  3786                           ; 1 bytes @ 0x2
  3787                           
  3788  0072                     EUSART_Write_Text@text:	
  3789                           ; 1 bytes @ 0x2
  3790                           
  3791  0072                     ___lodiv@quotient:	
  3792                           ; 2 bytes @ 0x2
  3793                           
  3794                           
  3795                           ; 8 bytes @ 0x2
  3796  0072                     	ds	1
  3797  0073                     ??_watchdog_timeout_shutdown:	
  3798  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3799                           ; 1 bytes @ 0x3
  3800                           
  3801  0073                     ??_RGB_color:	
  3802                           ; 1 bytes @ 0x3
  3803                           
  3804  0073                     ??_strlen:	
  3805                           ; 1 bytes @ 0x3
  3806                           
  3807  0073                     ??_isupper:	
  3808                           ; 1 bytes @ 0x3
  3809                           
  3810  0073                     ??_isalpha:	
  3811                           ; 1 bytes @ 0x3
  3812                           
  3813  0073                     ??_isdigit:	
  3814                           ; 1 bytes @ 0x3
  3815                           
  3816  0073                     ??__Umul8_16:	
  3817                           ; 1 bytes @ 0x3
  3818                           
  3819  0073                     ??_isspace:	
  3820                           ; 1 bytes @ 0x3
  3821                           
  3822  0073                     ??_islower:	
  3823                           ; 1 bytes @ 0x3
  3824                           
  3825  0073                     ??_send_I2C_data:	
  3826                           ; 1 bytes @ 0x3
  3827                           
  3828  0073                     ??_read_I2C_data:	
  3829                           ; 1 bytes @ 0x3
  3830                           
  3831  0073                     ___aodiv@sign:	
  3832                           ; 1 bytes @ 0x3
  3833                           
  3834  0073                     ___aomod@sign:	
  3835                           ; 1 bytes @ 0x3
  3836                           
  3837  0073                     send_I2C_controlByte@RW_bit:	
  3838                           ; 1 bytes @ 0x3
  3839                           
  3840  0073                     ___wmul@multiplicand:	
  3841                           ; 2 bytes @ 0x3
  3842                           
  3843  0073                     fputc@fp:	
  3844                           ; 2 bytes @ 0x3
  3845                           
  3846  0073                     strlen@a:	
  3847                           ; 2 bytes @ 0x3
  3848                           
  3849  0073                     strncmp@_r:	
  3850                           ; 2 bytes @ 0x3
  3851                           
  3852                           
  3853                           ; 2 bytes @ 0x3
  3854  0073                     	ds	1
  3855  0074                     ??_EUSART_Write_Text:	
  3856  0074                     ?_abs:	
  3857                           ; 1 bytes @ 0x4
  3858                           
  3859  0074                     abs@a:	
  3860                           ; 2 bytes @ 0x4
  3861                           
  3862  0074                     ___aodiv@quotient:	
  3863                           ; 2 bytes @ 0x4
  3864                           
  3865                           
  3866                           ; 8 bytes @ 0x4
  3867  0074                     	ds	1
  3868  0075                     ??_setShuntResistorValue:	
  3869  0075                     ??_fputc:	
  3870                           ; 1 bytes @ 0x5
  3871                           
  3872  0075                     ??_send_I2C_controlByte:	
  3873                           ; 1 bytes @ 0x5
  3874                           
  3875  0075                     ?_I2C_writeRegister:	
  3876                           ; 1 bytes @ 0x5
  3877                           
  3878  0075                     ??___wmul:	
  3879                           ; 1 bytes @ 0x5
  3880                           
  3881  0075                     ??___xxtofl:	
  3882                           ; 1 bytes @ 0x5
  3883                           
  3884  0075                     ?_readRegister:	
  3885                           ; 1 bytes @ 0x5
  3886                           
  3887  0075                     _isspace$1669:	
  3888                           ; 2 bytes @ 0x5
  3889                           
  3890  0075                     EUSART_Write_Text@i:	
  3891                           ; 1 bytes @ 0x5
  3892                           
  3893  0075                     I2C_writeRegister@slaveAddress:	
  3894                           ; 2 bytes @ 0x5
  3895                           
  3896  0075                     readRegister@slaveAddress:	
  3897                           ; 2 bytes @ 0x5
  3898                           
  3899  0075                     ___wmul@product:	
  3900                           ; 2 bytes @ 0x5
  3901                           
  3902  0075                     strncmp@n:	
  3903                           ; 2 bytes @ 0x5
  3904                           
  3905  0075                     __Umul8_16@product:	
  3906                           ; 2 bytes @ 0x5
  3907                           
  3908  0075                     ___lmul@multiplicand:	
  3909                           ; 2 bytes @ 0x5
  3910                           
  3911                           
  3912                           ; 4 bytes @ 0x5
  3913  0075                     	ds	1
  3914  0076                     ??_abs:	
  3915                           
  3916                           ; 1 bytes @ 0x6
  3917  0076                     	ds	1
  3918  0077                     ??_setTemperatureLimitsint:	
  3919  0077                     ??_strncmp:	
  3920                           ; 1 bytes @ 0x7
  3921                           
  3922  0077                     ?_toupper:	
  3923                           ; 1 bytes @ 0x7
  3924                           
  3925  0077                     ?_atoi:	
  3926                           ; 2 bytes @ 0x7
  3927                           
  3928  0077                     I2C_writeRegister@regAddress:	
  3929                           ; 2 bytes @ 0x7
  3930                           
  3931  0077                     readRegister@regAddress:	
  3932                           ; 2 bytes @ 0x7
  3933                           
  3934  0077                     atoi@s:	
  3935                           ; 2 bytes @ 0x7
  3936                           
  3937  0077                     toupper@c:	
  3938                           ; 2 bytes @ 0x7
  3939                           
  3940  0077                     __Umul8_16@word_mpld:	
  3941                           ; 2 bytes @ 0x7
  3942                           
  3943                           
  3944                           ; 2 bytes @ 0x7
  3945  0077                     	ds	1
  3946  0078                     strncmp@l:	
  3947                           
  3948                           ; 2 bytes @ 0x8
  3949  0078                     	ds	1
  3950  0079                     ??_readRegister:	
  3951  0079                     ??___lmul:	
  3952                           ; 1 bytes @ 0x9
  3953                           
  3954  0079                     ??___aldiv:	
  3955                           ; 1 bytes @ 0x9
  3956                           
  3957  0079                     __Umul8_16@multiplier:	
  3958                           ; 1 bytes @ 0x9
  3959                           
  3960  0079                     I2C_writeRegister@data:	
  3961                           ; 1 bytes @ 0x9
  3962                           
  3963  0079                     readRegister@recievedData:	
  3964                           ; 2 bytes @ 0x9
  3965                           
  3966  0079                     _toupper$1777:	
  3967                           ; 2 bytes @ 0x9
  3968                           
  3969                           
  3970                           ; 2 bytes @ 0x9
  3971  0079                     	ds	1
  3972  007A                     ??_stoa:	
  3973  007A                     ??___flsub:	
  3974                           ; 1 bytes @ 0xA
  3975                           
  3976  007A                     ?_fputs:	
  3977                           ; 1 bytes @ 0xA
  3978                           
  3979  007A                     ___fltol@sign1:	
  3980                           ; 2 bytes @ 0xA
  3981                           
  3982  007A                     ___lodiv@counter:	
  3983                           ; 1 bytes @ 0xA
  3984                           
  3985  007A                     EUSART_Initialize@x:	
  3986                           ; 1 bytes @ 0xA
  3987                           
  3988  007A                     fputs@fp:	
  3989                           ; 2 bytes @ 0xA
  3990                           
  3991  007A                     strncmp@r:	
  3992                           ; 2 bytes @ 0xA
  3993                           
  3994                           
  3995                           ; 2 bytes @ 0xA
  3996  007A                     	ds	1
  3997  007B                     ??_init_AFE:	
  3998  007B                     ??_I2C_writeRegister:	
  3999                           ; 1 bytes @ 0xB
  4000                           
  4001  007B                     ___fltol@exp1:	
  4002                           ; 1 bytes @ 0xB
  4003                           
  4004                           
  4005                           ; 1 bytes @ 0xB
  4006  007B                     	ds	1
  4007  007C                     ??_AFE_UPDATE:	
  4008  007C                     ??_printcellParameters:	
  4009                           ; 1 bytes @ 0xC
  4010                           
  4011                           
  4012                           	psect	cstackBANK0
  4013  0020                     __pcstackBANK0:	
  4014                           ; 1 bytes @ 0xC
  4015                           
  4016  0020                     ?_setTemperatureLimitsint:	
  4017  0020                     ??_fputs:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0020                     ??_toupper:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0020                     ??_atoi:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0020                     ?_beginAFEcommunication:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0020                     ?_stoa:	
  4030                           ; 2 bytes @ 0x0
  4031                           
  4032  0020                     ?___aodiv:	
  4033                           ; 2 bytes @ 0x0
  4034                           
  4035  0020                     ?___aomod:	
  4036                           ; 8 bytes @ 0x0
  4037                           
  4038  0020                     ?___lodiv:	
  4039                           ; 8 bytes @ 0x0
  4040                           
  4041  0020                     ?___lomod:	
  4042                           ; 8 bytes @ 0x0
  4043                           
  4044  0020                     ___xxtofl@sign:	
  4045                           ; 8 bytes @ 0x0
  4046                           
  4047  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0020                     stoa@fp:	
  4051                           ; 2 bytes @ 0x0
  4052                           
  4053  0020                     ___lmul@product:	
  4054                           ; 2 bytes @ 0x0
  4055                           
  4056  0020                     ___aodiv@divisor:	
  4057                           ; 4 bytes @ 0x0
  4058                           
  4059  0020                     ___aomod@divisor:	
  4060                           ; 8 bytes @ 0x0
  4061                           
  4062  0020                     ___lodiv@divisor:	
  4063                           ; 8 bytes @ 0x0
  4064                           
  4065  0020                     ___lomod@divisor:	
  4066                           ; 8 bytes @ 0x0
  4067                           
  4068                           
  4069                           ; 8 bytes @ 0x0
  4070  0020                     	ds	1
  4071  0021                     ___xxtofl@exp:	
  4072                           
  4073                           ; 1 bytes @ 0x1
  4074  0021                     	ds	1
  4075  0022                     ??_beginAFEcommunication:	
  4076  0022                     fputs@c:	
  4077                           ; 1 bytes @ 0x2
  4078                           
  4079  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4080                           ; 1 bytes @ 0x2
  4081                           
  4082  0022                     stoa@s:	
  4083                           ; 2 bytes @ 0x2
  4084                           
  4085  0022                     ___xxtofl@arg:	
  4086                           ; 2 bytes @ 0x2
  4087                           
  4088                           
  4089                           ; 4 bytes @ 0x2
  4090  0022                     	ds	1
  4091  0023                     fputs@i:	
  4092                           
  4093                           ; 2 bytes @ 0x3
  4094  0023                     	ds	1
  4095  0024                     ?___aldiv:	
  4096  0024                     setTemperatureLimitsint@minCharge_degC:	
  4097                           ; 4 bytes @ 0x4
  4098                           
  4099  0024                     atoi@neg:	
  4100                           ; 2 bytes @ 0x4
  4101                           
  4102  0024                     ___aldiv@divisor:	
  4103                           ; 2 bytes @ 0x4
  4104                           
  4105  0024                     stoa@nuls:	
  4106                           ; 4 bytes @ 0x4
  4107                           
  4108                           
  4109                           ; 7 bytes @ 0x4
  4110  0024                     	ds	1
  4111  0025                     fputs@s:	
  4112                           
  4113                           ; 1 bytes @ 0x5
  4114  0025                     	ds	1
  4115  0026                     ?_pad:	
  4116  0026                     ?___flmul:	
  4117                           ; 2 bytes @ 0x6
  4118                           
  4119  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4120                           ; 4 bytes @ 0x6
  4121                           
  4122  0026                     pad@fp:	
  4123                           ; 2 bytes @ 0x6
  4124                           
  4125  0026                     _atoi$1642:	
  4126                           ; 2 bytes @ 0x6
  4127                           
  4128  0026                     ___flmul@b:	
  4129                           ; 2 bytes @ 0x6
  4130                           
  4131                           
  4132                           ; 4 bytes @ 0x6
  4133  0026                     	ds	2
  4134  0028                     pad@buf:	
  4135  0028                     _atoi$1644:	
  4136                           ; 1 bytes @ 0x8
  4137                           
  4138  0028                     ___aldiv@dividend:	
  4139                           ; 2 bytes @ 0x8
  4140                           
  4141  0028                     ___aodiv@dividend:	
  4142                           ; 4 bytes @ 0x8
  4143                           
  4144  0028                     ___aomod@dividend:	
  4145                           ; 8 bytes @ 0x8
  4146                           
  4147  0028                     ___lodiv@dividend:	
  4148                           ; 8 bytes @ 0x8
  4149                           
  4150  0028                     ___lomod@dividend:	
  4151                           ; 8 bytes @ 0x8
  4152                           
  4153                           
  4154                           ; 8 bytes @ 0x8
  4155  0028                     	ds	1
  4156  0029                     pad@p:	
  4157                           
  4158                           ; 2 bytes @ 0x9
  4159  0029                     	ds	1
  4160  002A                     _atoi$1643:	
  4161  002A                     ___flmul@a:	
  4162                           ; 1 bytes @ 0xA
  4163                           
  4164                           
  4165                           ; 4 bytes @ 0xA
  4166  002A                     	ds	1
  4167  002B                     ??_pad:	
  4168  002B                     beginAFEcommunication@commSuccess:	
  4169                           ; 1 bytes @ 0xB
  4170                           
  4171  002B                     stoa@i:	
  4172                           ; 2 bytes @ 0xB
  4173                           
  4174  002B                     atoi@n:	
  4175                           ; 2 bytes @ 0xB
  4176                           
  4177                           
  4178                           ; 2 bytes @ 0xB
  4179  002B                     	ds	1
  4180  002C                     ___aldiv@counter:	
  4181  002C                     pad@i:	
  4182                           ; 1 bytes @ 0xC
  4183                           
  4184                           
  4185                           ; 2 bytes @ 0xC
  4186  002C                     	ds	1
  4187  002D                     ___aldiv@sign:	
  4188  002D                     beginAFEcommunication@i:	
  4189                           ; 1 bytes @ 0xD
  4190                           
  4191  002D                     stoa@w:	
  4192                           ; 2 bytes @ 0xD
  4193                           
  4194                           
  4195                           ; 2 bytes @ 0xD
  4196  002D                     	ds	1
  4197  002E                     ??___flmul:	
  4198  002E                     pad@w:	
  4199                           ; 1 bytes @ 0xE
  4200                           
  4201  002E                     ___aldiv@quotient:	
  4202                           ; 2 bytes @ 0xE
  4203                           
  4204                           
  4205                           ; 4 bytes @ 0xE
  4206  002E                     	ds	1
  4207  002F                     stoa@cp:	
  4208                           
  4209                           ; 2 bytes @ 0xF
  4210  002F                     	ds	1
  4211  0030                     ?_ctoa:	
  4212  0030                     ?_dtoa:	
  4213                           ; 2 bytes @ 0x10
  4214                           
  4215  0030                     ?_otoa:	
  4216                           ; 2 bytes @ 0x10
  4217                           
  4218  0030                     ?_utoa:	
  4219                           ; 2 bytes @ 0x10
  4220                           
  4221  0030                     ?_xtoa:	
  4222                           ; 2 bytes @ 0x10
  4223                           
  4224  0030                     ctoa@fp:	
  4225                           ; 2 bytes @ 0x10
  4226                           
  4227  0030                     dtoa@fp:	
  4228                           ; 2 bytes @ 0x10
  4229                           
  4230  0030                     otoa@fp:	
  4231                           ; 2 bytes @ 0x10
  4232                           
  4233  0030                     utoa@fp:	
  4234                           ; 2 bytes @ 0x10
  4235                           
  4236  0030                     xtoa@fp:	
  4237                           ; 2 bytes @ 0x10
  4238                           
  4239                           
  4240                           ; 2 bytes @ 0x10
  4241  0030                     	ds	1
  4242  0031                     stoa@p:	
  4243                           
  4244                           ; 2 bytes @ 0x11
  4245  0031                     	ds	1
  4246  0032                     ?_EUSART_Initialize:	
  4247  0032                     ?_setCellUndervoltageProtection:	
  4248                           ; 1 bytes @ 0x12
  4249                           
  4250  0032                     ?_setCellOvervoltageProtection:	
  4251                           ; 1 bytes @ 0x12
  4252                           
  4253  0032                     ctoa@c:	
  4254                           ; 1 bytes @ 0x12
  4255                           
  4256  0032                     setCellUndervoltageProtection@voltage_mV:	
  4257                           ; 1 bytes @ 0x12
  4258                           
  4259  0032                     setCellOvervoltageProtection@voltage_mV:	
  4260                           ; 2 bytes @ 0x12
  4261                           
  4262  0032                     EUSART_Initialize@baudrate:	
  4263                           ; 2 bytes @ 0x12
  4264                           
  4265  0032                     dtoa@d:	
  4266                           ; 4 bytes @ 0x12
  4267                           
  4268  0032                     otoa@d:	
  4269                           ; 8 bytes @ 0x12
  4270                           
  4271  0032                     utoa@d:	
  4272                           ; 8 bytes @ 0x12
  4273                           
  4274  0032                     xtoa@d:	
  4275                           ; 8 bytes @ 0x12
  4276                           
  4277                           
  4278                           ; 8 bytes @ 0x12
  4279  0032                     	ds	1
  4280  0033                     ??_ctoa:	
  4281  0033                     ___flmul@sign:	
  4282                           ; 1 bytes @ 0x13
  4283                           
  4284  0033                     stoa@l:	
  4285                           ; 1 bytes @ 0x13
  4286                           
  4287                           
  4288                           ; 2 bytes @ 0x13
  4289  0033                     	ds	1
  4290  0034                     ___flmul@aexp:	
  4291  0034                     setCellUndervoltageProtection@delay_s:	
  4292                           ; 1 bytes @ 0x14
  4293                           
  4294  0034                     setCellOvervoltageProtection@delay_s:	
  4295                           ; 2 bytes @ 0x14
  4296                           
  4297  0034                     ctoa@w:	
  4298                           ; 2 bytes @ 0x14
  4299                           
  4300                           
  4301                           ; 2 bytes @ 0x14
  4302  0034                     	ds	1
  4303  0035                     ___flmul@grs:	
  4304                           
  4305                           ; 4 bytes @ 0x15
  4306  0035                     	ds	1
  4307  0036                     ??_EUSART_Initialize:	
  4308  0036                     ??_setCellUndervoltageProtection:	
  4309                           ; 1 bytes @ 0x16
  4310                           
  4311  0036                     ??_setCellOvervoltageProtection:	
  4312                           ; 1 bytes @ 0x16
  4313                           
  4314                           
  4315                           ; 1 bytes @ 0x16
  4316  0036                     	ds	3
  4317  0039                     ___flmul@bexp:	
  4318                           
  4319                           ; 1 bytes @ 0x19
  4320  0039                     	ds	1
  4321  003A                     ??_dtoa:	
  4322  003A                     ??_otoa:	
  4323                           ; 1 bytes @ 0x1A
  4324                           
  4325  003A                     ??_utoa:	
  4326                           ; 1 bytes @ 0x1A
  4327                           
  4328  003A                     xtoa@x:	
  4329                           ; 1 bytes @ 0x1A
  4330                           
  4331  003A                     ___flmul@prod:	
  4332                           ; 1 bytes @ 0x1A
  4333                           
  4334                           
  4335                           ; 4 bytes @ 0x1A
  4336  003A                     	ds	1
  4337  003B                     ??_xtoa:	
  4338  003B                     utoa@p:	
  4339                           ; 1 bytes @ 0x1B
  4340                           
  4341                           
  4342                           ; 2 bytes @ 0x1B
  4343  003B                     	ds	2
  4344  003D                     _dtoa$1191:	
  4345  003D                     utoa@w:	
  4346                           ; 2 bytes @ 0x1D
  4347                           
  4348                           
  4349                           ; 2 bytes @ 0x1D
  4350  003D                     	ds	1
  4351  003E                     ___flmul@temp:	
  4352                           
  4353                           ; 2 bytes @ 0x1E
  4354  003E                     	ds	1
  4355  003F                     dtoa@p:	
  4356  003F                     utoa@n:	
  4357                           ; 2 bytes @ 0x1F
  4358                           
  4359                           
  4360                           ; 8 bytes @ 0x1F
  4361  003F                     	ds	1
  4362  0040                     ?___fldiv:	
  4363  0040                     ___fldiv@a:	
  4364                           ; 4 bytes @ 0x20
  4365                           
  4366                           
  4367                           ; 4 bytes @ 0x20
  4368  0040                     	ds	1
  4369  0041                     dtoa@w:	
  4370                           
  4371                           ; 2 bytes @ 0x21
  4372  0041                     	ds	1
  4373  0042                     otoa@p:	
  4374                           
  4375                           ; 2 bytes @ 0x22
  4376  0042                     	ds	1
  4377  0043                     dtoa@s:	
  4378  0043                     _xtoa$1227:	
  4379                           ; 2 bytes @ 0x23
  4380                           
  4381                           
  4382                           ; 2 bytes @ 0x23
  4383  0043                     	ds	1
  4384  0044                     setCellUndervoltageProtection@uv_trip:	
  4385  0044                     setCellOvervoltageProtection@ov_trip:	
  4386                           ; 1 bytes @ 0x24
  4387                           
  4388  0044                     otoa@t:	
  4389                           ; 1 bytes @ 0x24
  4390                           
  4391  0044                     ___fldiv@b:	
  4392                           ; 2 bytes @ 0x24
  4393                           
  4394                           
  4395                           ; 4 bytes @ 0x24
  4396  0044                     	ds	1
  4397  0045                     setCellUndervoltageProtection@i:	
  4398  0045                     setCellOvervoltageProtection@i:	
  4399                           ; 2 bytes @ 0x25
  4400                           
  4401  0045                     _xtoa$1228:	
  4402                           ; 2 bytes @ 0x25
  4403                           
  4404  0045                     dtoa@n:	
  4405                           ; 2 bytes @ 0x25
  4406                           
  4407                           
  4408                           ; 8 bytes @ 0x25
  4409  0045                     	ds	1
  4410  0046                     otoa@w:	
  4411                           
  4412                           ; 2 bytes @ 0x26
  4413  0046                     	ds	1
  4414  0047                     utoa@i:	
  4415  0047                     xtoa@p:	
  4416                           ; 2 bytes @ 0x27
  4417                           
  4418                           
  4419                           ; 2 bytes @ 0x27
  4420  0047                     	ds	1
  4421  0048                     ??___fldiv:	
  4422  0048                     otoa@n:	
  4423                           ; 1 bytes @ 0x28
  4424                           
  4425                           
  4426                           ; 8 bytes @ 0x28
  4427  0048                     	ds	1
  4428  0049                     xtoa@w:	
  4429                           
  4430                           ; 2 bytes @ 0x29
  4431  0049                     	ds	2
  4432  004B                     xtoa@n:	
  4433                           
  4434                           ; 8 bytes @ 0x2B
  4435  004B                     	ds	2
  4436  004D                     dtoa@i:	
  4437  004D                     ___fldiv@rem:	
  4438                           ; 2 bytes @ 0x2D
  4439                           
  4440                           
  4441                           ; 4 bytes @ 0x2D
  4442  004D                     	ds	3
  4443  0050                     otoa@i:	
  4444                           
  4445                           ; 2 bytes @ 0x30
  4446  0050                     	ds	1
  4447  0051                     ___fldiv@sign:	
  4448                           
  4449                           ; 1 bytes @ 0x31
  4450  0051                     	ds	1
  4451  0052                     ___fldiv@new_exp:	
  4452                           
  4453                           ; 2 bytes @ 0x32
  4454  0052                     	ds	1
  4455  0053                     xtoa@i:	
  4456                           
  4457                           ; 2 bytes @ 0x33
  4458  0053                     	ds	1
  4459  0054                     ___fldiv@grs:	
  4460                           
  4461                           ; 4 bytes @ 0x34
  4462  0054                     	ds	1
  4463  0055                     xtoa@c:	
  4464                           
  4465                           ; 2 bytes @ 0x35
  4466  0055                     	ds	2
  4467  0057                     ?_vfpfcnvrt:	
  4468  0057                     vfpfcnvrt@fp:	
  4469                           ; 2 bytes @ 0x37
  4470                           
  4471                           
  4472                           ; 2 bytes @ 0x37
  4473  0057                     	ds	1
  4474  0058                     ___fldiv@bexp:	
  4475                           
  4476                           ; 1 bytes @ 0x38
  4477  0058                     	ds	1
  4478  0059                     vfpfcnvrt@fmt:	
  4479  0059                     ___fldiv@aexp:	
  4480                           ; 1 bytes @ 0x39
  4481                           
  4482                           
  4483                           ; 1 bytes @ 0x39
  4484  0059                     	ds	1
  4485  005A                     ?___flge:	
  4486  005A                     ?___fladd:	
  4487                           ; 1 bit 
  4488                           
  4489  005A                     vfpfcnvrt@ap:	
  4490                           ; 4 bytes @ 0x3A
  4491                           
  4492  005A                     ___flge@ff1:	
  4493                           ; 1 bytes @ 0x3A
  4494                           
  4495  005A                     ___fladd@b:	
  4496                           ; 4 bytes @ 0x3A
  4497                           
  4498                           
  4499                           ; 4 bytes @ 0x3A
  4500  005A                     	ds	1
  4501  005B                     ??_vfpfcnvrt:	
  4502                           
  4503                           ; 1 bytes @ 0x3B
  4504  005B                     	ds	3
  4505  005E                     ___flge@ff2:	
  4506  005E                     ___fladd@a:	
  4507                           ; 4 bytes @ 0x3E
  4508                           
  4509                           
  4510                           ; 4 bytes @ 0x3E
  4511  005E                     	ds	3
  4512  0061                     ?_vfprintf:	
  4513  0061                     vfprintf@fp:	
  4514                           ; 2 bytes @ 0x41
  4515                           
  4516                           
  4517                           ; 2 bytes @ 0x41
  4518  0061                     	ds	1
  4519  0062                     ??___flge:	
  4520  0062                     ??___fladd:	
  4521                           ; 1 bytes @ 0x42
  4522                           
  4523                           
  4524                           ; 1 bytes @ 0x42
  4525  0062                     	ds	1
  4526  0063                     vfprintf@fmt:	
  4527                           
  4528                           ; 2 bytes @ 0x43
  4529  0063                     	ds	2
  4530  0065                     vfprintf@ap:	
  4531                           
  4532                           ; 1 bytes @ 0x45
  4533  0065                     	ds	1
  4534  0066                     ?_setShortCircuitProtection:	
  4535  0066                     ?_setOverCurrentDischargeProtection:	
  4536                           ; 1 bytes @ 0x46
  4537                           
  4538  0066                     ??_vfprintf:	
  4539                           ; 1 bytes @ 0x46
  4540                           
  4541  0066                     setShortCircuitProtection@current_mA:	
  4542                           ; 1 bytes @ 0x46
  4543                           
  4544  0066                     setOverCurrentDischargeProtection@current_mA:	
  4545                           ; 4 bytes @ 0x46
  4546                           
  4547                           
  4548                           ; 4 bytes @ 0x46
  4549  0066                     	ds	2
  4550  0068                     vfprintf@cfmt:	
  4551                           
  4552                           ; 2 bytes @ 0x48
  4553  0068                     	ds	2
  4554  006A                     ??_vsnprintf:	
  4555  006A                     ___fladd@signs:	
  4556                           ; 1 bytes @ 0x4A
  4557                           
  4558  006A                     setShortCircuitProtection@delay_us:	
  4559                           ; 1 bytes @ 0x4A
  4560                           
  4561  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4562                           ; 2 bytes @ 0x4A
  4563                           
  4564                           
  4565                           ; 2 bytes @ 0x4A
  4566  006A                     	ds	1
  4567  006B                     ___fladd@aexp:	
  4568                           
  4569                           ; 1 bytes @ 0x4B
  4570  006B                     	ds	1
  4571  006C                     ??_setShortCircuitProtection:	
  4572  006C                     ??_setOverCurrentDischargeProtection:	
  4573                           ; 1 bytes @ 0x4C
  4574                           
  4575  006C                     ??_snprintf:	
  4576                           ; 1 bytes @ 0x4C
  4577                           
  4578  006C                     ___fladd@bexp:	
  4579                           ; 1 bytes @ 0x4C
  4580                           
  4581                           
  4582                           ; 1 bytes @ 0x4C
  4583  006C                     	ds	1
  4584  006D                     ___fladd@grs:	
  4585                           
  4586                           ; 1 bytes @ 0x4D
  4587  006D                     	ds	2
  4588  006F                     snprintf@ap:	
  4589                           
  4590                           ; 1 bytes @ 0x4F
  4591  006F                     	ds	1
  4592                           
  4593                           	psect	maintext
  4594  2993                     __pmaintext:	
  4595 ;;
  4596 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4597 ;;
  4598 ;; *************** function _main *****************
  4599 ;; Defined at:
  4600 ;;		line 77 in file "main.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : B1F/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels required when called:   12
  4620 ;; This function calls:
  4621 ;;		_EUSART_Initialize
  4622 ;;		_initClock
  4623 ;;		_initWDT
  4624 ;;		_init_GPIO
  4625 ;;		_init_I2C
  4626 ;;		_init_RGB
  4627 ;;		_init_TMR1
  4628 ;;		_statemachine
  4629 ;;		_watchdog_timeout_shutdown
  4630 ;; This function is called by:
  4631 ;;		Startup code after reset
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function _main
  4637  2993                     _main:	
  4638                           
  4639                           ;main.c: 80:     initClock();
  4640                           
  4641                           ;incstack = 0
  4642                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4643  2993  31B6  26C8  31A9   	fcall	_initClock
  4644                           
  4645                           ;main.c: 81:     init_GPIO();
  4646  2996  3188  2008  31A9   	fcall	_init_GPIO
  4647                           
  4648                           ;main.c: 82:     initWDT();
  4649  2999  31B6  26D0  31A9   	fcall	_initWDT
  4650                           
  4651                           ;main.c: 83:     init_I2C();
  4652  299C  31B7  2720  31A9   	fcall	_init_I2C
  4653                           
  4654                           ;main.c: 84:     EUSART_Initialize(9600);
  4655  299F  3000               	movlw	0
  4656  29A0  0020               	movlb	0	; select bank0
  4657  29A1  00B5               	movwf	EUSART_Initialize@baudrate+3
  4658  29A2  3000               	movlw	0
  4659  29A3  00B4               	movwf	EUSART_Initialize@baudrate+2
  4660  29A4  3025               	movlw	37
  4661  29A5  00B3               	movwf	EUSART_Initialize@baudrate+1
  4662  29A6  3080               	movlw	128
  4663  29A7  00B2               	movwf	EUSART_Initialize@baudrate
  4664  29A8  31A0  208E  31A9   	fcall	_EUSART_Initialize
  4665                           
  4666                           ;main.c: 85:     init_TMR1();
  4667  29AB  31B7  2715  31A9   	fcall	_init_TMR1
  4668                           
  4669                           ;main.c: 86:     init_RGB();
  4670  29AE  31B6  26CB  31A9   	fcall	_init_RGB
  4671                           
  4672                           ;main.c: 89:     watchdog_timeout_shutdown();
  4673  29B1  31B7  27B3  31A9   	fcall	_watchdog_timeout_shutdown
  4674  29B4                     l8223:	
  4675                           
  4676                           ;main.c: 93:         statemachine();
  4677  29B4  31AB  23C1  31A9   	fcall	_statemachine
  4678                           
  4679                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4680  29B7  3015               	movlw	21
  4681  29B8  0021               	movlb	1	; select bank1
  4682  29B9  00EA               	movwf	(??_main^(0+128)+1)
  4683  29BA  304B               	movlw	75
  4684  29BB  00E9               	movwf	??_main^(0+128)
  4685  29BC  30BE               	movlw	190
  4686  29BD                     u11437:	
  4687  29BD  0B89               	decfsz	9,f
  4688  29BE  29BD               	goto	u11437
  4689  29BF  0BE9               	decfsz	??_main^(0+128),f
  4690  29C0  29BD               	goto	u11437
  4691  29C1  0BEA               	decfsz	(??_main^(0+128)+1),f
  4692  29C2  29BD               	goto	u11437
  4693  29C3  0000               	nop
  4694  29C4  29B4               	goto	l8223
  4695  29C5                     __end_of_main:	
  4696                           
  4697                           	psect	text1
  4698  37B3                     __ptext1:	
  4699 ;; *************** function _watchdog_timeout_shutdown *****************
  4700 ;; Defined at:
  4701 ;;		line 3 in file "algorithms.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4719 ;;Total ram usage:        2 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    2
  4722 ;; This function calls:
  4723 ;;		_RGB_color
  4724 ;;		_shutdown_BMS
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function _watchdog_timeout_shutdown
  4732  37B3                     _watchdog_timeout_shutdown:	
  4733                           
  4734                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4738  37B3  0020               	movlb	0	; select bank0
  4739  37B4  1A03               	btfsc	3,4	;volatile
  4740  37B5  0008               	return
  4741                           
  4742                           ;algorithms.c: 6:         RGB_color(0);
  4743  37B6  3000               	movlw	0
  4744  37B7  00F1               	movwf	RGB_color@color
  4745  37B8  00F2               	movwf	RGB_color@color+1
  4746  37B9  31A8  209A  31B7   	fcall	_RGB_color
  4747                           
  4748                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4749  37BC  3029               	movlw	41
  4750  37BD  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4751  37BE  3096               	movlw	150
  4752  37BF  00F3               	movwf	??_watchdog_timeout_shutdown
  4753  37C0  307F               	movlw	127
  4754  37C1                     u11447:	
  4755  37C1  0B89               	decfsz	9,f
  4756  37C2  2FC1               	goto	u11447
  4757  37C3  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4758  37C4  2FC1               	goto	u11447
  4759  37C5  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4760  37C6  2FC1               	goto	u11447
  4761  37C7  0000               	nop
  4762                           
  4763                           ;algorithms.c: 8:         shutdown_BMS();
  4764  37C8  3190  2000         	fcall	_shutdown_BMS
  4765  37CA  0008               	return
  4766  37CB                     __end_of_watchdog_timeout_shutdown:	
  4767                           
  4768                           	psect	text2
  4769  1000                     __ptext2:	
  4770 ;; *************** function _shutdown_BMS *****************
  4771 ;; Defined at:
  4772 ;;		line 12 in file "algorithms.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;		None
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		None
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4790 ;;Total ram usage:        0 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_watchdog_timeout_shutdown
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _shutdown_BMS
  4802  1000                     _shutdown_BMS:	
  4803                           
  4804                           ;algorithms.c: 13:  LATAbits.LATA3 = 1;
  4805                           
  4806                           ;incstack = 0
  4807                           ; Regs used in _shutdown_BMS: []
  4808  1000  0022               	movlb	2	; select bank2
  4809  1001  158C               	bsf	12,3	;volatile
  4810  1002  0008               	return
  4811  1003                     __end_of_shutdown_BMS:	
  4812                           
  4813                           	psect	text3
  4814  2BC1                     __ptext3:	
  4815 ;; *************** function _statemachine *****************
  4816 ;; Defined at:
  4817 ;;		line 101 in file "main.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  success         1   72[BANK1 ] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4832 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4833 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4834 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4835 ;;Total ram usage:        3 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:   11
  4838 ;; This function calls:
  4839 ;;		_AFE_UPDATE
  4840 ;;		_RGB_AWAIT_AFE_CONN
  4841 ;;		_RGB_color
  4842 ;;		_beginAFEcommunication
  4843 ;;		_init_AFE
  4844 ;;		_printcellParameters
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _statemachine
  4852  2BC1                     _statemachine:	
  4853                           
  4854                           ;main.c: 103:     switch (currState) {
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4858  2BC1  2C08               	goto	l8199
  4859  2BC2                     l8169:	
  4860                           
  4861                           ;main.c: 106:             if (tmr1_flag) {
  4862  2BC2  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4863  2BC3  1903               	btfsc	3,2
  4864  2BC4  0008               	return
  4865                           
  4866                           ;main.c: 107:                 tmr1_flag = 0;
  4867  2BC5  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4868                           
  4869                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  4870  2BC6  31A8  20BB  31AB   	fcall	_RGB_AWAIT_AFE_CONN
  4871                           
  4872                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  4873  2BC9  31A1  2137  31AB   	fcall	_beginAFEcommunication
  4874  2BCC  0020               	movlb	0	; select bank0
  4875  2BCD  0820               	movf	?_beginAFEcommunication,w
  4876  2BCE  0021               	movlb	1	; select bank1
  4877  2BCF  00E6               	movwf	??_statemachine^(0+128)
  4878  2BD0  0866               	movf	??_statemachine^(0+128),w
  4879  2BD1  00E8               	movwf	statemachine@success^(0+128)
  4880                           
  4881                           ;main.c: 114:                 if (success) {
  4882  2BD2  0868               	movf	statemachine@success^(0+128),w
  4883  2BD3  1903               	btfsc	3,2
  4884  2BD4  0008               	return
  4885                           
  4886                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  4887  2BD5  0020               	movlb	0	; select bank0
  4888  2BD6  1018               	bcf	24,0	;volatile
  4889                           
  4890                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  4891  2BD7  0021               	movlb	1	; select bank1
  4892  2BD8  1011               	bcf	17,0	;volatile
  4893                           
  4894                           ;main.c: 117:                     RGB_color(0);
  4895  2BD9  3000               	movlw	0
  4896  2BDA  00F1               	movwf	RGB_color@color
  4897  2BDB  00F2               	movwf	RGB_color@color+1
  4898  2BDC  31A8  209A         	fcall	_RGB_color
  4899                           
  4900                           ;main.c: 118:                     tmr1_flag = 0;
  4901  2BDE  0021               	movlb	1	; select bank1
  4902  2BDF  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4903                           
  4904                           ;main.c: 131:                     currState = 1;
  4905  2BE0  0022               	movlb	2	; select bank2
  4906  2BE1  01EC               	clrf	_currState^(0+256)
  4907  2BE2  0AEC               	incf	_currState^(0+256),f
  4908  2BE3  0008               	return
  4909  2BE4                     l8187:	
  4910                           
  4911                           ;main.c: 140:             init_AFE();
  4912  2BE4  31AB  236B  31AB   	fcall	_init_AFE
  4913                           
  4914                           ;main.c: 159:             RGB_color(1);
  4915  2BE7  3001               	movlw	1
  4916  2BE8  00F1               	movwf	RGB_color@color
  4917  2BE9  3000               	movlw	0
  4918  2BEA  00F2               	movwf	RGB_color@color+1
  4919  2BEB  31A8  209A         	fcall	_RGB_color
  4920                           
  4921                           ;main.c: 160:             currState = 2;
  4922  2BED  3002               	movlw	2
  4923  2BEE  0021               	movlb	1	; select bank1
  4924  2BEF  00E6               	movwf	??_statemachine^(0+128)
  4925  2BF0  0866               	movf	??_statemachine^(0+128),w
  4926  2BF1  0022               	movlb	2	; select bank2
  4927  2BF2  00EC               	movwf	_currState^(0+256)
  4928                           
  4929                           ;main.c: 161:             break;
  4930  2BF3  0008               	return
  4931  2BF4                     l8191:	
  4932                           
  4933                           ;main.c: 165:             AFE_UPDATE();
  4934  2BF4  3187  27F9  31AB   	fcall	_AFE_UPDATE
  4935  2BF7  0064               	clrwdt	;# 
  4936                           
  4937                           ;main.c: 169:             printcellParameters();
  4938  2BF8  31AC  2484  31AB   	fcall	_printcellParameters
  4939                           
  4940                           ;main.c: 171:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  4941  2BFB  3066               	movlw	102
  4942  2BFC  0021               	movlb	1	; select bank1
  4943  2BFD  00E7               	movwf	(??_statemachine^(0+128)+1)
  4944  2BFE  3076               	movlw	118
  4945  2BFF  00E6               	movwf	??_statemachine^(0+128)
  4946  2C00  30C1               	movlw	193
  4947  2C01                     u11457:	
  4948  2C01  0B89               	decfsz	9,f
  4949  2C02  2C01               	goto	u11457
  4950  2C03  0BE6               	decfsz	??_statemachine^(0+128),f
  4951  2C04  2C01               	goto	u11457
  4952  2C05  0BE7               	decfsz	(??_statemachine^(0+128)+1),f
  4953  2C06  2C01               	goto	u11457
  4954                           
  4955                           ;main.c: 173:             break;
  4956  2C07  0008               	return
  4957  2C08                     l8199:	
  4958  2C08  0022               	movlb	2	; select bank2
  4959  2C09  086C               	movf	_currState^(0+256),w
  4960  2C0A  0021               	movlb	1	; select bank1
  4961  2C0B  00E6               	movwf	??_statemachine^(0+128)
  4962  2C0C  01E7               	clrf	(??_statemachine^(0+128)+1)
  4963                           
  4964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4965                           ; Switch size 1, requested type "simple"
  4966                           ; Number of cases is 1, Range of values is 0 to 0
  4967                           ; switch strategies available:
  4968                           ; Name         Instructions Cycles
  4969                           ; simple_byte            4     3 (average)
  4970                           ; direct_byte            8     6 (fixed)
  4971                           ; jumptable            260     6 (fixed)
  4972                           ;	Chosen strategy is simple_byte
  4973  2C0D  0867               	movf	(??_statemachine+1)^(0+128),w
  4974  2C0E  3A00               	xorlw	0	; case 0
  4975  2C0F  1903               	skipnz
  4976  2C10  2C12               	goto	l8407
  4977  2C11  2C1D               	goto	l159
  4978  2C12                     l8407:	
  4979                           
  4980                           ; Switch size 1, requested type "simple"
  4981                           ; Number of cases is 3, Range of values is 0 to 2
  4982                           ; switch strategies available:
  4983                           ; Name         Instructions Cycles
  4984                           ; simple_byte           10     6 (average)
  4985                           ; direct_byte           12     6 (fixed)
  4986                           ; jumptable            260     6 (fixed)
  4987                           ;	Chosen strategy is simple_byte
  4988  2C12  0866               	movf	??_statemachine^(0+128),w
  4989  2C13  3A00               	xorlw	0	; case 0
  4990  2C14  1903               	skipnz
  4991  2C15  2BC2               	goto	l8169
  4992  2C16  3A01               	xorlw	1	; case 1
  4993  2C17  1903               	skipnz
  4994  2C18  2BE4               	goto	l8187
  4995  2C19  3A03               	xorlw	3	; case 2
  4996  2C1A  1903               	skipnz
  4997  2C1B  2BF4               	goto	l8191
  4998  2C1C  2C1D               	goto	l159
  4999  2C1D                     l159:	
  5000  2C1D  0008               	return
  5001  2C1E                     __end_of_statemachine:	
  5002                           
  5003                           	psect	text4
  5004  2C84                     __ptext4:	
  5005 ;; *************** function _printcellParameters *****************
  5006 ;; Defined at:
  5007 ;;		line 278 in file "BQ76920.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:   10
  5028 ;; This function calls:
  5029 ;;		_EUSART_Write_Text
  5030 ;;		_snprintf
  5031 ;; This function is called by:
  5032 ;;		_statemachine
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _printcellParameters
  5038  2C84                     _printcellParameters:	
  5039                           
  5040                           ;BQ76920.c: 279:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVoltages[2],c
      +                          ellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor);;
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5044  2C84  3071               	movlw	113
  5045  2C85  0021               	movlb	1	; select bank1
  5046  2C86  00CC               	movwf	snprintf@s^(0+128)
  5047  2C87  3027               	movlw	39
  5048  2C88  00CD               	movwf	(snprintf@s^(0+128)+1)
  5049  2C89  307F               	movlw	127
  5050  2C8A  00CE               	movwf	snprintf@n^(0+128)
  5051  2C8B  3000               	movlw	0
  5052  2C8C  00CF               	movwf	(snprintf@n^(0+128)+1)
  5053  2C8D  3002               	movlw	low (STR_1| (0+32768))
  5054  2C8E  00D0               	movwf	snprintf@fmt^(0+128)
  5055  2C8F  30B0               	movlw	high (STR_1| (0+32768))
  5056  2C90  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5057  2C91  0023               	movlb	3	; select bank3
  5058  2C92  083D               	movf	(_batVoltage+3)^(0+384),w
  5059  2C93  0021               	movlb	1	; select bank1
  5060  2C94  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5061  2C95  0023               	movlb	3	; select bank3
  5062  2C96  083C               	movf	(_batVoltage+2)^(0+384),w
  5063  2C97  0021               	movlb	1	; select bank1
  5064  2C98  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5065  2C99  0023               	movlb	3	; select bank3
  5066  2C9A  083B               	movf	(_batVoltage+1)^(0+384),w
  5067  2C9B  0021               	movlb	1	; select bank1
  5068  2C9C  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5069  2C9D  0023               	movlb	3	; select bank3
  5070  2C9E  083A               	movf	_batVoltage^(0+384),w
  5071  2C9F  0021               	movlb	1	; select bank1
  5072  2CA0  00D2               	movwf	(?_snprintf^(0+128)+6)
  5073  2CA1  0023               	movlb	3	; select bank3
  5074  2CA2  0821               	movf	(_cellVoltages+1)^(0+384),w
  5075  2CA3  0021               	movlb	1	; select bank1
  5076  2CA4  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5077  2CA5  0023               	movlb	3	; select bank3
  5078  2CA6  0820               	movf	_cellVoltages^(0+384),w
  5079  2CA7  0021               	movlb	1	; select bank1
  5080  2CA8  00D6               	movwf	(?_snprintf^(0+128)+10)
  5081  2CA9  0023               	movlb	3	; select bank3
  5082  2CAA  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5083  2CAB  0021               	movlb	1	; select bank1
  5084  2CAC  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5085  2CAD  0023               	movlb	3	; select bank3
  5086  2CAE  0822               	movf	(_cellVoltages^(0+384)+2),w
  5087  2CAF  0021               	movlb	1	; select bank1
  5088  2CB0  00D8               	movwf	(?_snprintf^(0+128)+12)
  5089  2CB1  0023               	movlb	3	; select bank3
  5090  2CB2  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5091  2CB3  0021               	movlb	1	; select bank1
  5092  2CB4  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5093  2CB5  0023               	movlb	3	; select bank3
  5094  2CB6  0824               	movf	(_cellVoltages^(0+384)+4),w
  5095  2CB7  0021               	movlb	1	; select bank1
  5096  2CB8  00DA               	movwf	(?_snprintf^(0+128)+14)
  5097  2CB9  0023               	movlb	3	; select bank3
  5098  2CBA  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5099  2CBB  0021               	movlb	1	; select bank1
  5100  2CBC  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5101  2CBD  0023               	movlb	3	; select bank3
  5102  2CBE  0826               	movf	(_cellVoltages^(0+384)+6),w
  5103  2CBF  0021               	movlb	1	; select bank1
  5104  2CC0  00DC               	movwf	(?_snprintf^(0+128)+16)
  5105  2CC1  0023               	movlb	3	; select bank3
  5106  2CC2  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5107  2CC3  0021               	movlb	1	; select bank1
  5108  2CC4  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5109  2CC5  0023               	movlb	3	; select bank3
  5110  2CC6  0828               	movf	(_cellVoltages^(0+384)+8),w
  5111  2CC7  0021               	movlb	1	; select bank1
  5112  2CC8  00DE               	movwf	(?_snprintf^(0+128)+18)
  5113  2CC9  0023               	movlb	3	; select bank3
  5114  2CCA  0839               	movf	(_batCurrent+3)^(0+384),w
  5115  2CCB  0021               	movlb	1	; select bank1
  5116  2CCC  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5117  2CCD  0023               	movlb	3	; select bank3
  5118  2CCE  0838               	movf	(_batCurrent+2)^(0+384),w
  5119  2CCF  0021               	movlb	1	; select bank1
  5120  2CD0  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5121  2CD1  0023               	movlb	3	; select bank3
  5122  2CD2  0837               	movf	(_batCurrent+1)^(0+384),w
  5123  2CD3  0021               	movlb	1	; select bank1
  5124  2CD4  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5125  2CD5  0023               	movlb	3	; select bank3
  5126  2CD6  0836               	movf	_batCurrent^(0+384),w
  5127  2CD7  0021               	movlb	1	; select bank1
  5128  2CD8  00E0               	movwf	(?_snprintf^(0+128)+20)
  5129  2CD9  0023               	movlb	3	; select bank3
  5130  2CDA  0841               	movf	(_temperatureThermistor+1)^(0+384),w
  5131  2CDB  0021               	movlb	1	; select bank1
  5132  2CDC  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5133  2CDD  0023               	movlb	3	; select bank3
  5134  2CDE  0840               	movf	_temperatureThermistor^(0+384),w
  5135  2CDF  0021               	movlb	1	; select bank1
  5136  2CE0  00E4               	movwf	(?_snprintf^(0+128)+24)
  5137  2CE1  31A8  2009  31AC   	fcall	_snprintf
  5138                           
  5139                           ;BQ76920.c: 280:     EUSART_Write_Text(messageBuffer);
  5140  2CE4  3071               	movlw	113
  5141  2CE5  00F2               	movwf	EUSART_Write_Text@text
  5142  2CE6  3027               	movlw	39
  5143  2CE7  00F3               	movwf	EUSART_Write_Text@text+1
  5144  2CE8  31B7  27CB         	fcall	_EUSART_Write_Text
  5145  2CEA  0008               	return
  5146  2CEB                     __end_of_printcellParameters:	
  5147                           
  5148                           	psect	text5
  5149  2809                     __ptext5:	
  5150 ;; *************** function _snprintf *****************
  5151 ;; Defined at:
  5152 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5155 ;;		 -> messageBuffer(127), 
  5156 ;;  n               2   46[BANK1 ] unsigned int 
  5157 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5158 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  5159 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  5160 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  5161 ;;		 -> STR_1(61), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  ret             2    0        int 
  5164 ;;  ap              1   79[BANK0 ] PTR void [1]
  5165 ;;		 -> ?_snprintf(2), 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2   44[BANK1 ] int 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5175 ;;      Params:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5176 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5178 ;;      Totals:         0       4      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5179 ;;Total ram usage:       30 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    9
  5182 ;; This function calls:
  5183 ;;		_vsnprintf
  5184 ;; This function is called by:
  5185 ;;		_printcellParameters
  5186 ;;		_printotAFERegisters
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _snprintf
  5192  2809                     _snprintf:	
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5196  2809  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5197  280A  0020               	movlb	0	; select bank0
  5198  280B  00EC               	movwf	??_snprintf
  5199  280C  086C               	movf	??_snprintf,w
  5200  280D  00EF               	movwf	snprintf@ap
  5201  280E  0021               	movlb	1	; select bank1
  5202  280F  084D               	movf	(snprintf@s+1)^(0+128),w
  5203  2810  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5204  2811  084C               	movf	snprintf@s^(0+128),w
  5205  2812  00BB               	movwf	vsnprintf@s^(0+128)
  5206  2813  084F               	movf	(snprintf@n+1)^(0+128),w
  5207  2814  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5208  2815  084E               	movf	snprintf@n^(0+128),w
  5209  2816  00BD               	movwf	vsnprintf@n^(0+128)
  5210  2817  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5211  2818  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5212  2819  0850               	movf	snprintf@fmt^(0+128),w
  5213  281A  00BF               	movwf	vsnprintf@fmt^(0+128)
  5214  281B  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5215  281C  0020               	movlb	0	; select bank0
  5216  281D  00EC               	movwf	??_snprintf
  5217  281E  086C               	movf	??_snprintf,w
  5218  281F  0021               	movlb	1	; select bank1
  5219  2820  00C1               	movwf	vsnprintf@ap^(0+128)
  5220  2821  31AE  264C         	fcall	_vsnprintf
  5221  2823  0008               	return
  5222  2824                     __end_of_snprintf:	
  5223                           
  5224                           	psect	text6
  5225  2E4C                     __ptext6:	
  5226 ;; *************** function _vsnprintf *****************
  5227 ;; Defined at:
  5228 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5231 ;;		 -> messageBuffer(127), 
  5232 ;;  n               2   29[BANK1 ] unsigned int 
  5233 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5234 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  5235 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  5236 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  5237 ;;		 -> STR_1(61), 
  5238 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5239 ;;		 -> snprintf@ap(1), 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5242 ;;  cnt             2   36[BANK1 ] int 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  2   27[BANK1 ] int 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5252 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5253 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5255 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5256 ;;Total ram usage:       19 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    8
  5259 ;; This function calls:
  5260 ;;		_vfprintf
  5261 ;; This function is called by:
  5262 ;;		_snprintf
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function _vsnprintf
  5268  2E4C                     _vsnprintf:	
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5272  2E4C  3080               	movlw	128
  5273  2E4D  0021               	movlb	1	; select bank1
  5274  2E4E  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5275  2E4F  3000               	movlw	0
  5276  2E50  1903               	skipnz
  5277  2E51  023D               	subwf	vsnprintf@n^(0+128),w
  5278  2E52  1C03               	skipc
  5279  2E53  2E5F               	goto	l7845
  5280  2E54  304B               	movlw	75
  5281  2E55  0023               	movlb	3	; select bank3
  5282  2E56  00BE               	movwf	_errno^(0+384)
  5283  2E57  3000               	movlw	0
  5284  2E58  00BF               	movwf	(_errno^(0+384)+1)
  5285  2E59  30FF               	movlw	255
  5286  2E5A  0021               	movlb	1	; select bank1
  5287  2E5B  00BB               	movwf	?_vsnprintf^(0+128)
  5288  2E5C  30FF               	movlw	255
  5289  2E5D  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5290  2E5E  0008               	return
  5291  2E5F                     l7845:	
  5292  2E5F  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5293  2E60  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5294  2E61  083B               	movf	vsnprintf@s^(0+128),w
  5295  2E62  00C6               	movwf	vsnprintf@f^(0+128)
  5296  2E63  3000               	movlw	0
  5297  2E64  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5298  2E65  3002               	movlw	2
  5299  2E66  1903               	skipnz
  5300  2E67  023D               	subwf	vsnprintf@n^(0+128),w
  5301  2E68  1C03               	skipc
  5302  2E69  2E73               	goto	l7851
  5303  2E6A  083D               	movf	vsnprintf@n^(0+128),w
  5304  2E6B  3EFF               	addlw	255
  5305  2E6C  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5306  2E6D  30FF               	movlw	255
  5307  2E6E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5308  2E6F  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5309  2E70  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5310  2E71  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5311  2E72  2E7B               	goto	l7853
  5312  2E73                     l7851:	
  5313  2E73  3001               	movlw	1
  5314  2E74  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5315  2E75  3000               	movlw	0
  5316  2E76  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5317  2E77  3001               	movlw	1
  5318  2E78  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5319  2E79  3000               	movlw	0
  5320  2E7A  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5321  2E7B                     l7853:	
  5322  2E7B  30C6               	movlw	low vsnprintf@f
  5323  2E7C  0020               	movlb	0	; select bank0
  5324  2E7D  00E1               	movwf	vfprintf@fp
  5325  2E7E  3000               	movlw	high vsnprintf@f
  5326  2E7F  00E2               	movwf	vfprintf@fp+1
  5327  2E80  0021               	movlb	1	; select bank1
  5328  2E81  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5329  2E82  0020               	movlb	0	; select bank0
  5330  2E83  00E4               	movwf	vfprintf@fmt+1
  5331  2E84  0021               	movlb	1	; select bank1
  5332  2E85  083F               	movf	vsnprintf@fmt^(0+128),w
  5333  2E86  0020               	movlb	0	; select bank0
  5334  2E87  00E3               	movwf	vfprintf@fmt
  5335  2E88  0021               	movlb	1	; select bank1
  5336  2E89  0841               	movf	vsnprintf@ap^(0+128),w
  5337  2E8A  0020               	movlb	0	; select bank0
  5338  2E8B  00EA               	movwf	??_vsnprintf
  5339  2E8C  086A               	movf	??_vsnprintf,w
  5340  2E8D  00E5               	movwf	vfprintf@ap
  5341  2E8E  31A9  2130  31AE   	fcall	_vfprintf
  5342  2E91  0020               	movlb	0	; select bank0
  5343  2E92  0862               	movf	?_vfprintf+1,w
  5344  2E93  0021               	movlb	1	; select bank1
  5345  2E94  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5346  2E95  0020               	movlb	0	; select bank0
  5347  2E96  0861               	movf	?_vfprintf,w
  5348  2E97  0021               	movlb	1	; select bank1
  5349  2E98  00C4               	movwf	vsnprintf@cnt^(0+128)
  5350  2E99  083D               	movf	vsnprintf@n^(0+128),w
  5351  2E9A  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5352  2E9B  1D03               	btfss	3,2
  5353  2E9C  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5354  2E9D  2EC4               	goto	l7867
  5355  2E9E  083D               	movf	vsnprintf@n^(0+128),w
  5356  2E9F  3EFF               	addlw	255
  5357  2EA0  0020               	movlb	0	; select bank0
  5358  2EA1  00EA               	movwf	??_vsnprintf
  5359  2EA2  30FF               	movlw	255
  5360  2EA3  0021               	movlb	1	; select bank1
  5361  2EA4  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5362  2EA5  0020               	movlb	0	; select bank0
  5363  2EA6  00EB               	movwf	??_vsnprintf+1
  5364  2EA7  086B               	movf	??_vsnprintf+1,w
  5365  2EA8  0021               	movlb	1	; select bank1
  5366  2EA9  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5367  2EAA  1D03               	skipz
  5368  2EAB  2EB0               	goto	u11075
  5369  2EAC  0020               	movlb	0	; select bank0
  5370  2EAD  086A               	movf	??_vsnprintf,w
  5371  2EAE  0021               	movlb	1	; select bank1
  5372  2EAF  0244               	subwf	vsnprintf@cnt^(0+128),w
  5373  2EB0                     u11075:	
  5374  2EB0  1C03               	skipc
  5375  2EB1  2EB9               	goto	l7863
  5376  2EB2  083D               	movf	vsnprintf@n^(0+128),w
  5377  2EB3  3EFF               	addlw	255
  5378  2EB4  00C2               	movwf	_vsnprintf$1814^(0+128)
  5379  2EB5  30FF               	movlw	255
  5380  2EB6  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5381  2EB7  00C3               	movwf	(_vsnprintf$1814+1)^(0+128)
  5382  2EB8  2EBD               	goto	l7865
  5383  2EB9                     l7863:	
  5384  2EB9  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5385  2EBA  00C3               	movwf	(_vsnprintf$1814+1)^(0+128)
  5386  2EBB  0844               	movf	vsnprintf@cnt^(0+128),w
  5387  2EBC  00C2               	movwf	_vsnprintf$1814^(0+128)
  5388  2EBD                     l7865:	
  5389  2EBD  0842               	movf	_vsnprintf$1814^(0+128),w
  5390  2EBE  073B               	addwf	vsnprintf@s^(0+128),w
  5391  2EBF  0086               	movwf	6
  5392  2EC0  0843               	movf	(_vsnprintf$1814+1)^(0+128),w
  5393  2EC1  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5394  2EC2  0087               	movwf	7
  5395  2EC3  0181               	clrf	1
  5396  2EC4                     l7867:	
  5397  2EC4  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5398  2EC5  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5399  2EC6  0844               	movf	vsnprintf@cnt^(0+128),w
  5400  2EC7  00BB               	movwf	?_vsnprintf^(0+128)
  5401  2EC8  0008               	return
  5402  2EC9                     __end_of_vsnprintf:	
  5403                           
  5404                           	psect	text7
  5405  2930                     __ptext7:	
  5406 ;; *************** function _vfprintf *****************
  5407 ;; Defined at:
  5408 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5411 ;;		 -> vsnprintf@f(6), 
  5412 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5413 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  5414 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  5415 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  5416 ;;		 -> STR_1(61), 
  5417 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5418 ;;		 -> snprintf@ap(1), 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5421 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  5422 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  5423 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  5424 ;;		 -> STR_1(61), 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2   65[BANK0 ] int 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5434 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5437 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5438 ;;Total ram usage:        9 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    7
  5441 ;; This function calls:
  5442 ;;		_vfpfcnvrt
  5443 ;; This function is called by:
  5444 ;;		_vsnprintf
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function _vfprintf
  5450  2930                     _vfprintf:	
  5451                           
  5452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5453                           
  5454                           ;incstack = 0
  5455                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5456  2930  0020               	movlb	0	; select bank0
  5457  2931  0864               	movf	vfprintf@fmt+1,w
  5458  2932  00E9               	movwf	vfprintf@cfmt+1
  5459  2933  0863               	movf	vfprintf@fmt,w
  5460  2934  00E8               	movwf	vfprintf@cfmt
  5461                           
  5462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5463  2935  0022               	movlb	2	; select bank2
  5464  2936  01E2               	clrf	_nout^(0+256)
  5465  2937  01E3               	clrf	(_nout+1)^(0+256)
  5466  2938                     l7275:	
  5467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5468                           
  5469                           
  5470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5471  2938  0020               	movlb	0	; select bank0
  5472  2939  0868               	movf	vfprintf@cfmt,w
  5473  293A  0084               	movwf	4
  5474  293B  0869               	movf	vfprintf@cfmt+1,w
  5475  293C  0085               	movwf	5
  5476  293D  0012               	moviw fsr0++
  5477  293E  1903               	btfsc	3,2
  5478  293F  2958               	goto	l7277
  5479                           
  5480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5481  2940  0862               	movf	vfprintf@fp+1,w
  5482  2941  00D8               	movwf	vfpfcnvrt@fp+1
  5483  2942  0861               	movf	vfprintf@fp,w
  5484  2943  00D7               	movwf	vfpfcnvrt@fp
  5485  2944  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5486  2945  00E6               	movwf	??_vfprintf
  5487  2946  0866               	movf	??_vfprintf,w
  5488  2947  00D9               	movwf	vfpfcnvrt@fmt
  5489  2948  0865               	movf	vfprintf@ap,w
  5490  2949  00E7               	movwf	??_vfprintf+1
  5491  294A  0867               	movf	??_vfprintf+1,w
  5492  294B  00DA               	movwf	vfpfcnvrt@ap
  5493  294C  319E  265B  31A9   	fcall	_vfpfcnvrt
  5494  294F  0020               	movlb	0	; select bank0
  5495  2950  0857               	movf	?_vfpfcnvrt,w
  5496  2951  0022               	movlb	2	; select bank2
  5497  2952  07E2               	addwf	_nout^(0+256),f
  5498  2953  0020               	movlb	0	; select bank0
  5499  2954  0858               	movf	?_vfpfcnvrt+1,w
  5500  2955  0022               	movlb	2	; select bank2
  5501  2956  3DE3               	addwfc	(_nout+1)^(0+256),f
  5502  2957  2938               	goto	l7275
  5503  2958                     l7277:	
  5504                           
  5505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5506  2958  0022               	movlb	2	; select bank2
  5507  2959  0863               	movf	(_nout+1)^(0+256),w
  5508  295A  0020               	movlb	0	; select bank0
  5509  295B  00E2               	movwf	?_vfprintf+1
  5510  295C  0022               	movlb	2	; select bank2
  5511  295D  0862               	movf	_nout^(0+256),w
  5512  295E  0020               	movlb	0	; select bank0
  5513  295F  00E1               	movwf	?_vfprintf
  5514  2960  0008               	return
  5515  2961                     __end_of_vfprintf:	
  5516                           
  5517                           	psect	text8
  5518  1E5B                     __ptext8:	
  5519 ;; *************** function _vfpfcnvrt *****************
  5520 ;; Defined at:
  5521 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5524 ;;		 -> vsnprintf@f(6), 
  5525 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5526 ;;		 -> vfprintf@cfmt(2), 
  5527 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5528 ;;		 -> snprintf@ap(1), 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  llu             8   19[BANK1 ] unsigned long long 
  5531 ;;  ll              8    8[BANK1 ] long long 
  5532 ;;  f               4    0        long long 
  5533 ;;  ct              3    0        unsigned char [3]
  5534 ;;  vp              2   16[BANK1 ] PTR void 
  5535 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  5536 ;;  done            2    2[BANK1 ] int 
  5537 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5538 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  5539 ;;  i               2    0        int 
  5540 ;;  c               1   18[BANK1 ] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  2   55[BANK0 ] int 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:       37 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    6
  5557 ;; This function calls:
  5558 ;;		_atoi
  5559 ;;		_ctoa
  5560 ;;		_dtoa
  5561 ;;		_fputc
  5562 ;;		_isdigit
  5563 ;;		_otoa
  5564 ;;		_stoa
  5565 ;;		_strncmp
  5566 ;;		_utoa
  5567 ;;		_xtoa
  5568 ;; This function is called by:
  5569 ;;		_vfprintf
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _vfpfcnvrt
  5575  1E5B                     _vfpfcnvrt:	
  5576                           
  5577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5581  1E5B  0020               	movlb	0	; select bank0
  5582  1E5C  0859               	movf	vfpfcnvrt@fmt,w
  5583  1E5D  0086               	movwf	6
  5584  1E5E  0187               	clrf	7
  5585  1E5F  3F40               	moviw [0]fsr1
  5586  1E60  00DB               	movwf	??_vfpfcnvrt
  5587  1E61  3F41               	moviw [1]fsr1
  5588  1E62  00DC               	movwf	??_vfpfcnvrt+1
  5589  1E63  085B               	movf	??_vfpfcnvrt,w
  5590  1E64  0084               	movwf	4
  5591  1E65  085C               	movf	??_vfpfcnvrt+1,w
  5592  1E66  0085               	movwf	5
  5593  1E67  0012               	moviw fsr0++
  5594  1E68  3A25               	xorlw	37
  5595  1E69  1D03               	btfss	3,2
  5596  1E6A  2FFE               	goto	L7
  5597                           
  5598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5599  1E6B  0859               	movf	vfpfcnvrt@fmt,w
  5600  1E6C  0086               	movwf	6
  5601  1E6D  0187               	clrf	7
  5602  1E6E  3001               	movlw	1
  5603  1E6F  0781               	addwf	1,f
  5604  1E70  3141               	addfsr 1,1
  5605  1E71  1803               	skipnc
  5606  1E72  0A81               	incf	1,f
  5607                           
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5609  1E73  0022               	movlb	2	; select bank2
  5610  1E74  01E4               	clrf	_width^(0+256)
  5611  1E75  01E5               	clrf	(_width+1)^(0+256)
  5612  1E76  0021               	movlb	1	; select bank1
  5613  1E77  01ED               	clrf	_flags^(0+128)
  5614  1E78  01EE               	clrf	(_flags+1)^(0+128)
  5615                           
  5616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5617  1E79  30FF               	movlw	255
  5618  1E7A  00EB               	movwf	_prec^(0+128)
  5619  1E7B  30FF               	movlw	255
  5620  1E7C  00EC               	movwf	(_prec^(0+128)+1)
  5621                           
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5623  1E7D  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5624  1E7E  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5625                           
  5626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5627  1E7F  2E9D               	goto	l6703
  5628  1E80                     l749:	
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5630                           
  5631                           
  5632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5633  1E80  0021               	movlb	1	; select bank1
  5634  1E81  146D               	bsf	_flags^(0+128),0
  5635  1E82                     l6687:	
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5638  1E82  0020               	movlb	0	; select bank0
  5639  1E83  0859               	movf	vfpfcnvrt@fmt,w
  5640  1E84  0086               	movwf	6
  5641  1E85  0187               	clrf	7
  5642  1E86  3001               	movlw	1
  5643  1E87  0781               	addwf	1,f
  5644  1E88  3141               	addfsr 1,1
  5645  1E89  1803               	skipnc
  5646  1E8A  0A81               	incf	1,f
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5649  1E8B  2E9D               	goto	l6703
  5650  1E8C                     l751:	
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5652                           
  5653                           
  5654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5655  1E8C  0021               	movlb	1	; select bank1
  5656  1E8D  14ED               	bsf	_flags^(0+128),1
  5657  1E8E  2E82               	goto	l6687
  5658  1E8F                     l752:	
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5660                           
  5661                           
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5663  1E8F  0021               	movlb	1	; select bank1
  5664  1E90  156D               	bsf	_flags^(0+128),2
  5665  1E91  2E82               	goto	l6687
  5666  1E92                     l753:	
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5668                           
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5671  1E92  0021               	movlb	1	; select bank1
  5672  1E93  15ED               	bsf	_flags^(0+128),3
  5673  1E94  2E82               	goto	l6687
  5674  1E95                     l754:	
  5675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5676                           
  5677                           
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5679  1E95  0021               	movlb	1	; select bank1
  5680  1E96  166D               	bsf	_flags^(0+128),4
  5681  1E97  2E82               	goto	l6687
  5682  1E98                     l6697:	
  5683                           
  5684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5685  1E98  3001               	movlw	1
  5686  1E99  0021               	movlb	1	; select bank1
  5687  1E9A  00A2               	movwf	vfpfcnvrt@done^(0+128)
  5688  1E9B  3000               	movlw	0
  5689  1E9C  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  5690  1E9D                     l6703:	
  5691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5692                           
  5693                           
  5694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5695  1E9D  0021               	movlb	1	; select bank1
  5696  1E9E  0822               	movf	vfpfcnvrt@done^(0+128),w
  5697  1E9F  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  5698  1EA0  1D03               	btfss	3,2
  5699  1EA1  2EC8               	goto	l756
  5700  1EA2  0020               	movlb	0	; select bank0
  5701  1EA3  0859               	movf	vfpfcnvrt@fmt,w
  5702  1EA4  0086               	movwf	6
  5703  1EA5  0187               	clrf	7
  5704  1EA6  3F40               	moviw [0]fsr1
  5705  1EA7  00DB               	movwf	??_vfpfcnvrt
  5706  1EA8  3F41               	moviw [1]fsr1
  5707  1EA9  00DC               	movwf	??_vfpfcnvrt+1
  5708  1EAA  085B               	movf	??_vfpfcnvrt,w
  5709  1EAB  0084               	movwf	4
  5710  1EAC  085C               	movf	??_vfpfcnvrt+1,w
  5711  1EAD  0085               	movwf	5
  5712  1EAE  0800               	movf	0,w	;code access
  5713  1EAF  00DD               	movwf	??_vfpfcnvrt+2
  5714  1EB0  01DE               	clrf	??_vfpfcnvrt+3
  5715                           
  5716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5717                           ; Switch size 1, requested type "simple"
  5718                           ; Number of cases is 1, Range of values is 0 to 0
  5719                           ; switch strategies available:
  5720                           ; Name         Instructions Cycles
  5721                           ; simple_byte            4     3 (average)
  5722                           ; direct_byte            8     6 (fixed)
  5723                           ; jumptable            260     6 (fixed)
  5724                           ;	Chosen strategy is simple_byte
  5725  1EB1  085E               	movf	??_vfpfcnvrt+3,w
  5726  1EB2  3A00               	xorlw	0	; case 0
  5727  1EB3  1903               	skipnz
  5728  1EB4  2EB6               	goto	l8409
  5729  1EB5  2E98               	goto	l6697
  5730  1EB6                     l8409:	
  5731                           
  5732                           ; Switch size 1, requested type "simple"
  5733                           ; Number of cases is 5, Range of values is 32 to 48
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte           16     9 (average)
  5737                           ; direct_byte           43     9 (fixed)
  5738                           ; jumptable            263     9 (fixed)
  5739                           ;	Chosen strategy is simple_byte
  5740  1EB6  085D               	movf	??_vfpfcnvrt+2,w
  5741  1EB7  3A20               	xorlw	32	; case 32
  5742  1EB8  1903               	skipnz
  5743  1EB9  2E92               	goto	l753
  5744  1EBA  3A03               	xorlw	3	; case 35
  5745  1EBB  1903               	skipnz
  5746  1EBC  2E95               	goto	l754
  5747  1EBD  3A08               	xorlw	8	; case 43
  5748  1EBE  1903               	skipnz
  5749  1EBF  2E8F               	goto	l752
  5750  1EC0  3A06               	xorlw	6	; case 45
  5751  1EC1  1903               	skipnz
  5752  1EC2  2E80               	goto	l749
  5753  1EC3  3A1D               	xorlw	29	; case 48
  5754  1EC4  1903               	skipnz
  5755  1EC5  2E8C               	goto	l751
  5756  1EC6  2E98               	goto	l6697
  5757  1EC7  2E9D               	goto	l6703
  5758  1EC8                     l756:	
  5759                           
  5760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5761  1EC8  1C6D               	btfss	_flags^(0+128),0
  5762  1EC9  2ECE               	goto	l6707
  5763                           
  5764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5765  1ECA  30FD               	movlw	253
  5766  1ECB  05ED               	andwf	_flags^(0+128),f
  5767  1ECC  30FF               	movlw	255
  5768  1ECD  05EE               	andwf	(_flags+1)^(0+128),f
  5769  1ECE                     l6707:	
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5772  1ECE  0020               	movlb	0	; select bank0
  5773  1ECF  0859               	movf	vfpfcnvrt@fmt,w
  5774  1ED0  0086               	movwf	6
  5775  1ED1  0187               	clrf	7
  5776  1ED2  3F40               	moviw [0]fsr1
  5777  1ED3  00DB               	movwf	??_vfpfcnvrt
  5778  1ED4  3F41               	moviw [1]fsr1
  5779  1ED5  00DC               	movwf	??_vfpfcnvrt+1
  5780  1ED6  085B               	movf	??_vfpfcnvrt,w
  5781  1ED7  0084               	movwf	4
  5782  1ED8  085C               	movf	??_vfpfcnvrt+1,w
  5783  1ED9  0085               	movwf	5
  5784  1EDA  0012               	moviw fsr0++
  5785  1EDB  3A2A               	xorlw	42
  5786  1EDC  1D03               	btfss	3,2
  5787  1EDD  2EFE               	goto	l6719
  5788                           
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5790  1EDE  0859               	movf	vfpfcnvrt@fmt,w
  5791  1EDF  0086               	movwf	6
  5792  1EE0  0187               	clrf	7
  5793  1EE1  3001               	movlw	1
  5794  1EE2  0781               	addwf	1,f
  5795  1EE3  3141               	addfsr 1,1
  5796  1EE4  1803               	skipnc
  5797  1EE5  0A81               	incf	1,f
  5798                           
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5800  1EE6  085A               	movf	vfpfcnvrt@ap,w
  5801  1EE7  0086               	movwf	6
  5802  1EE8  0187               	clrf	7
  5803  1EE9  0801               	movf	1,w
  5804  1EEA  0084               	movwf	4
  5805  1EEB  0185               	clrf	5
  5806  1EEC  3002               	movlw	2
  5807  1EED  0781               	addwf	1,f
  5808  1EEE  3F00               	moviw [0]fsr0
  5809  1EEF  0022               	movlb	2	; select bank2
  5810  1EF0  00E4               	movwf	_width^(0+256)
  5811  1EF1  3F01               	moviw [1]fsr0
  5812  1EF2  00E5               	movwf	(_width+1)^(0+256)
  5813                           
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5815  1EF3  1FE5               	btfss	(_width+1)^(0+256),7
  5816  1EF4  2F41               	goto	l6729
  5817                           
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5819  1EF5  0021               	movlb	1	; select bank1
  5820  1EF6  146D               	bsf	_flags^(0+128),0
  5821                           
  5822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5823  1EF7  0022               	movlb	2	; select bank2
  5824  1EF8  09E4               	comf	_width^(0+256),f
  5825  1EF9  09E5               	comf	(_width+1)^(0+256),f
  5826  1EFA  0AE4               	incf	_width^(0+256),f
  5827  1EFB  1903               	skipnz
  5828  1EFC  0AE5               	incf	(_width+1)^(0+256),f
  5829  1EFD  2F41               	goto	l6729
  5830  1EFE                     l6719:	
  5831                           
  5832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5833  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  5834  1EFF  0086               	movwf	6
  5835  1F00  0187               	clrf	7
  5836  1F01  3F40               	moviw [0]fsr1
  5837  1F02  00F7               	movwf	atoi@s
  5838  1F03  3F41               	moviw [1]fsr1
  5839  1F04  00F8               	movwf	atoi@s+1
  5840  1F05  31AF  275F  319E   	fcall	_atoi
  5841  1F08  0878               	movf	?_atoi+1,w
  5842  1F09  0022               	movlb	2	; select bank2
  5843  1F0A  00E5               	movwf	(_width+1)^(0+256)
  5844  1F0B  0877               	movf	?_atoi,w
  5845  1F0C  00E4               	movwf	_width^(0+256)
  5846                           
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5848  1F0D  2F17               	goto	l6723
  5849  1F0E                     l6721:	
  5850                           
  5851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5852  1F0E  0020               	movlb	0	; select bank0
  5853  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  5854  1F10  0086               	movwf	6
  5855  1F11  0187               	clrf	7
  5856  1F12  3001               	movlw	1
  5857  1F13  0781               	addwf	1,f
  5858  1F14  3141               	addfsr 1,1
  5859  1F15  1803               	skipnc
  5860  1F16  0A81               	incf	1,f
  5861  1F17                     l6723:	
  5862  1F17  0020               	movlb	0	; select bank0
  5863  1F18  0859               	movf	vfpfcnvrt@fmt,w
  5864  1F19  0086               	movwf	6
  5865  1F1A  0187               	clrf	7
  5866  1F1B  3F40               	moviw [0]fsr1
  5867  1F1C  00DB               	movwf	??_vfpfcnvrt
  5868  1F1D  3F41               	moviw [1]fsr1
  5869  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  5870  1F1F  085B               	movf	??_vfpfcnvrt,w
  5871  1F20  0084               	movwf	4
  5872  1F21  085C               	movf	??_vfpfcnvrt+1,w
  5873  1F22  0085               	movwf	5
  5874  1F23  0800               	movf	0,w	;code access
  5875  1F24  3ED0               	addlw	208
  5876  1F25  00DD               	movwf	??_vfpfcnvrt+2
  5877  1F26  30FF               	movlw	255
  5878  1F27  1803               	skipnc
  5879  1F28  3000               	movlw	0
  5880  1F29  00DE               	movwf	??_vfpfcnvrt+3
  5881  1F2A  3000               	movlw	0
  5882  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  5883  1F2C  300A               	movlw	10
  5884  1F2D  1903               	skipnz
  5885  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  5886  1F2F  1803               	btfsc	3,0
  5887  1F30  2F33               	goto	u9010
  5888  1F31  3001               	movlw	1
  5889  1F32  2F34               	goto	u9020
  5890  1F33                     u9010:	
  5891  1F33  3000               	movlw	0
  5892  1F34                     u9020:	
  5893  1F34  00DF               	movwf	??_vfpfcnvrt+4
  5894  1F35  01E0               	clrf	??_vfpfcnvrt+5
  5895  1F36  085F               	movf	??_vfpfcnvrt+4,w
  5896  1F37  0021               	movlb	1	; select bank1
  5897  1F38  00A4               	movwf	_vfpfcnvrt$1242^(0+128)
  5898  1F39  0020               	movlb	0	; select bank0
  5899  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  5900  1F3B  0021               	movlb	1	; select bank1
  5901  1F3C  00A5               	movwf	(_vfpfcnvrt$1242+1)^(0+128)
  5902  1F3D  0824               	movf	_vfpfcnvrt$1242^(0+128),w
  5903  1F3E  0425               	iorwf	(_vfpfcnvrt$1242+1)^(0+128),w
  5904  1F3F  1D03               	btfss	3,2
  5905  1F40  2F0E               	goto	l6721
  5906  1F41                     l6729:	
  5907                           
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5909  1F41  0020               	movlb	0	; select bank0
  5910  1F42  0859               	movf	vfpfcnvrt@fmt,w
  5911  1F43  0086               	movwf	6
  5912  1F44  0187               	clrf	7
  5913  1F45  3F40               	moviw [0]fsr1
  5914  1F46  00DB               	movwf	??_vfpfcnvrt
  5915  1F47  3F41               	moviw [1]fsr1
  5916  1F48  00DC               	movwf	??_vfpfcnvrt+1
  5917  1F49  085B               	movf	??_vfpfcnvrt,w
  5918  1F4A  0084               	movwf	4
  5919  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  5920  1F4C  0085               	movwf	5
  5921  1F4D  0012               	moviw fsr0++
  5922  1F4E  3A2E               	xorlw	46
  5923  1F4F  1D03               	btfss	3,2
  5924  1F50  2FC5               	goto	l6751
  5925                           
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5927  1F51  0021               	movlb	1	; select bank1
  5928  1F52  01EB               	clrf	_prec^(0+128)
  5929  1F53  01EC               	clrf	(_prec+1)^(0+128)
  5930                           
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5932  1F54  0020               	movlb	0	; select bank0
  5933  1F55  0859               	movf	vfpfcnvrt@fmt,w
  5934  1F56  0086               	movwf	6
  5935  1F57  0187               	clrf	7
  5936  1F58  3001               	movlw	1
  5937  1F59  0781               	addwf	1,f
  5938  1F5A  3141               	addfsr 1,1
  5939  1F5B  1803               	skipnc
  5940  1F5C  0A81               	incf	1,f
  5941                           
  5942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5943  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  5944  1F5E  0086               	movwf	6
  5945  1F5F  0187               	clrf	7
  5946  1F60  3F40               	moviw [0]fsr1
  5947  1F61  00DB               	movwf	??_vfpfcnvrt
  5948  1F62  3F41               	moviw [1]fsr1
  5949  1F63  00DC               	movwf	??_vfpfcnvrt+1
  5950  1F64  085B               	movf	??_vfpfcnvrt,w
  5951  1F65  0084               	movwf	4
  5952  1F66  085C               	movf	??_vfpfcnvrt+1,w
  5953  1F67  0085               	movwf	5
  5954  1F68  0012               	moviw fsr0++
  5955  1F69  3A2A               	xorlw	42
  5956  1F6A  1D03               	btfss	3,2
  5957  1F6B  2F82               	goto	l6741
  5958                           
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5960  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  5961  1F6D  0086               	movwf	6
  5962  1F6E  0187               	clrf	7
  5963  1F6F  3001               	movlw	1
  5964  1F70  0781               	addwf	1,f
  5965  1F71  3141               	addfsr 1,1
  5966  1F72  1803               	skipnc
  5967  1F73  0A81               	incf	1,f
  5968                           
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5970  1F74  085A               	movf	vfpfcnvrt@ap,w
  5971  1F75  0086               	movwf	6
  5972  1F76  0187               	clrf	7
  5973  1F77  0801               	movf	1,w
  5974  1F78  0084               	movwf	4
  5975  1F79  0185               	clrf	5
  5976  1F7A  3002               	movlw	2
  5977  1F7B  0781               	addwf	1,f
  5978  1F7C  3F00               	moviw [0]fsr0
  5979  1F7D  0021               	movlb	1	; select bank1
  5980  1F7E  00EB               	movwf	_prec^(0+128)
  5981  1F7F  3F01               	moviw [1]fsr0
  5982  1F80  00EC               	movwf	(_prec+1)^(0+128)
  5983                           
  5984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5985  1F81  2FC5               	goto	l6751
  5986  1F82                     l6741:	
  5987                           
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5989  1F82  0859               	movf	vfpfcnvrt@fmt,w
  5990  1F83  0086               	movwf	6
  5991  1F84  0187               	clrf	7
  5992  1F85  3F40               	moviw [0]fsr1
  5993  1F86  00F7               	movwf	atoi@s
  5994  1F87  3F41               	moviw [1]fsr1
  5995  1F88  00F8               	movwf	atoi@s+1
  5996  1F89  31AF  275F  319E   	fcall	_atoi
  5997  1F8C  0878               	movf	?_atoi+1,w
  5998  1F8D  0021               	movlb	1	; select bank1
  5999  1F8E  00EC               	movwf	(_prec+1)^(0+128)
  6000  1F8F  0877               	movf	?_atoi,w
  6001  1F90  00EB               	movwf	_prec^(0+128)
  6002                           
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6004  1F91  2F9B               	goto	l6745
  6005  1F92                     l6743:	
  6006                           
  6007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6008  1F92  0020               	movlb	0	; select bank0
  6009  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6010  1F94  0086               	movwf	6
  6011  1F95  0187               	clrf	7
  6012  1F96  3001               	movlw	1
  6013  1F97  0781               	addwf	1,f
  6014  1F98  3141               	addfsr 1,1
  6015  1F99  1803               	skipnc
  6016  1F9A  0A81               	incf	1,f
  6017  1F9B                     l6745:	
  6018  1F9B  0020               	movlb	0	; select bank0
  6019  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6020  1F9D  0086               	movwf	6
  6021  1F9E  0187               	clrf	7
  6022  1F9F  3F40               	moviw [0]fsr1
  6023  1FA0  00DB               	movwf	??_vfpfcnvrt
  6024  1FA1  3F41               	moviw [1]fsr1
  6025  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6026  1FA3  085B               	movf	??_vfpfcnvrt,w
  6027  1FA4  0084               	movwf	4
  6028  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6029  1FA6  0085               	movwf	5
  6030  1FA7  0800               	movf	0,w	;code access
  6031  1FA8  3ED0               	addlw	208
  6032  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6033  1FAA  30FF               	movlw	255
  6034  1FAB  1803               	skipnc
  6035  1FAC  3000               	movlw	0
  6036  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6037  1FAE  3000               	movlw	0
  6038  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6039  1FB0  300A               	movlw	10
  6040  1FB1  1903               	skipnz
  6041  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6042  1FB3  1803               	btfsc	3,0
  6043  1FB4  2FB7               	goto	u9060
  6044  1FB5  3001               	movlw	1
  6045  1FB6  2FB8               	goto	u9070
  6046  1FB7                     u9060:	
  6047  1FB7  3000               	movlw	0
  6048  1FB8                     u9070:	
  6049  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6050  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6051  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6052  1FBB  0021               	movlb	1	; select bank1
  6053  1FBC  00A6               	movwf	_vfpfcnvrt$1243^(0+128)
  6054  1FBD  0020               	movlb	0	; select bank0
  6055  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6056  1FBF  0021               	movlb	1	; select bank1
  6057  1FC0  00A7               	movwf	(_vfpfcnvrt$1243+1)^(0+128)
  6058  1FC1  0826               	movf	_vfpfcnvrt$1243^(0+128),w
  6059  1FC2  0427               	iorwf	(_vfpfcnvrt$1243+1)^(0+128),w
  6060  1FC3  1D03               	btfss	3,2
  6061  1FC4  2F92               	goto	l6743
  6062  1FC5                     l6751:	
  6063                           
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6065  1FC5  0020               	movlb	0	; select bank0
  6066  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6067  1FC7  0086               	movwf	6
  6068  1FC8  0187               	clrf	7
  6069  1FC9  3F40               	moviw [0]fsr1
  6070  1FCA  00DB               	movwf	??_vfpfcnvrt
  6071  1FCB  3F41               	moviw [1]fsr1
  6072  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6073  1FCD  085B               	movf	??_vfpfcnvrt,w
  6074  1FCE  0084               	movwf	4
  6075  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6076  1FD0  0085               	movwf	5
  6077  1FD1  0012               	moviw fsr0++
  6078  1FD2  3A63               	xorlw	99
  6079  1FD3  3198  1D03         	btfss	3,2
  6080  1FD5  2826               	goto	l6761
  6081                           
  6082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6083  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6084  1FD7  0086               	movwf	6
  6085  1FD8  0187               	clrf	7
  6086  1FD9  3001               	movlw	1
  6087  1FDA  0781               	addwf	1,f
  6088  1FDB  3141               	addfsr 1,1
  6089  1FDC  1803               	skipnc
  6090  1FDD  0A81               	incf	1,f
  6091                           
  6092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6093  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6094  1FDF  0086               	movwf	6
  6095  1FE0  0187               	clrf	7
  6096  1FE1  0801               	movf	1,w
  6097  1FE2  0084               	movwf	4
  6098  1FE3  0185               	clrf	5
  6099  1FE4  3002               	movlw	2
  6100  1FE5  0781               	addwf	1,f
  6101  1FE6  0800               	movf	0,w
  6102  1FE7  00DB               	movwf	??_vfpfcnvrt
  6103  1FE8  085B               	movf	??_vfpfcnvrt,w
  6104  1FE9  0021               	movlb	1	; select bank1
  6105  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6106                           
  6107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6108  1FEB  0020               	movlb	0	; select bank0
  6109  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6110  1FED  00B1               	movwf	ctoa@fp+1
  6111  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6112  1FEF  00B0               	movwf	ctoa@fp
  6113  1FF0  0021               	movlb	1	; select bank1
  6114  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6115  1FF2  0020               	movlb	0	; select bank0
  6116  1FF3  00DB               	movwf	??_vfpfcnvrt
  6117  1FF4  085B               	movf	??_vfpfcnvrt,w
  6118  1FF5  00B2               	movwf	ctoa@c
  6119  1FF6  31A8  20FF         	fcall	_ctoa
  6120  1FF8  0020               	movlb	0	; select bank0
  6121  1FF9  0831               	movf	?_ctoa+1,w
  6122  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6123  1FFB  0830               	movf	?_ctoa,w
  6124  1FFC  00D7               	movwf	?_vfpfcnvrt
  6125  1FFD  0008               	return
  6126  1FFE                     L7:	
  6127  1FFE                     L6:	
  6128  1FFE  318F  2FDD         	ljmp	l7029
  6129                           
  6130                           	psect	text9
  6131  1B88                     __ptext9:	
  6132 ;; *************** function _xtoa *****************
  6133 ;; Defined at:
  6134 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6137 ;;		 -> vsnprintf@f(6), 
  6138 ;;  d               8   18[BANK0 ] unsigned long long 
  6139 ;;  x               1   26[BANK0 ] unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  n               8   43[BANK0 ] unsigned long long 
  6142 ;;  c               2   53[BANK0 ] int 
  6143 ;;  i               2   51[BANK0 ] int 
  6144 ;;  w               2   41[BANK0 ] int 
  6145 ;;  p               2   39[BANK0 ] int 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  2   16[BANK0 ] int 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6155 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6156 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6157 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6158 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6159 ;;Total ram usage:       39 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    5
  6162 ;; This function calls:
  6163 ;;		_isalpha
  6164 ;;		_isupper
  6165 ;;		_pad
  6166 ;;		_toupper
  6167 ;; This function is called by:
  6168 ;;		_vfpfcnvrt
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function _xtoa
  6174  1B88                     _xtoa:	
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6180  1B88  0021               	movlb	1	; select bank1
  6181  1B89  1BEC               	btfsc	(_prec+1)^(0+128),7
  6182  1B8A  2B8F               	goto	l715
  6183                           
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6185  1B8B  30FD               	movlw	253
  6186  1B8C  05ED               	andwf	_flags^(0+128),f
  6187  1B8D  30FF               	movlw	255
  6188  1B8E  05EE               	andwf	(_flags+1)^(0+128),f
  6189  1B8F                     l715:	
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6191                           
  6192                           
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6194  1B8F  086C               	movf	(_prec+1)^(0+128),w
  6195  1B90  3A80               	xorlw	128
  6196  1B91  0020               	movlb	0	; select bank0
  6197  1B92  00BB               	movwf	??_xtoa
  6198  1B93  3080               	movlw	128
  6199  1B94  023B               	subwf	??_xtoa,w
  6200  1B95  1D03               	skipz
  6201  1B96  2B9A               	goto	u8685
  6202  1B97  3001               	movlw	1
  6203  1B98  0021               	movlb	1	; select bank1
  6204  1B99  026B               	subwf	_prec^(0+128),w
  6205  1B9A                     u8685:	
  6206  1B9A  1803               	skipnc
  6207  1B9B  2BA2               	goto	l6551
  6208  1B9C  3001               	movlw	1
  6209  1B9D  0020               	movlb	0	; select bank0
  6210  1B9E  00C7               	movwf	xtoa@p
  6211  1B9F  3000               	movlw	0
  6212  1BA0  00C8               	movwf	xtoa@p+1
  6213  1BA1  2BAA               	goto	l719
  6214  1BA2                     l6551:	
  6215  1BA2  0021               	movlb	1	; select bank1
  6216  1BA3  086C               	movf	(_prec+1)^(0+128),w
  6217  1BA4  0020               	movlb	0	; select bank0
  6218  1BA5  00C8               	movwf	xtoa@p+1
  6219  1BA6  0021               	movlb	1	; select bank1
  6220  1BA7  086B               	movf	_prec^(0+128),w
  6221  1BA8  0020               	movlb	0	; select bank0
  6222  1BA9  00C7               	movwf	xtoa@p
  6223  1BAA                     l719:	
  6224                           
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6226  1BAA  0022               	movlb	2	; select bank2
  6227  1BAB  0865               	movf	(_width+1)^(0+256),w
  6228  1BAC  0020               	movlb	0	; select bank0
  6229  1BAD  00CA               	movwf	xtoa@w+1
  6230  1BAE  0022               	movlb	2	; select bank2
  6231  1BAF  0864               	movf	_width^(0+256),w
  6232  1BB0  0020               	movlb	0	; select bank0
  6233  1BB1  00C9               	movwf	xtoa@w
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6236  1BB2  0021               	movlb	1	; select bank1
  6237  1BB3  1E6D               	btfss	_flags^(0+128),4
  6238  1BB4  2BBA               	goto	l6557
  6239                           
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6241  1BB5  30FE               	movlw	254
  6242  1BB6  0020               	movlb	0	; select bank0
  6243  1BB7  07C9               	addwf	xtoa@w,f
  6244  1BB8  30FF               	movlw	255
  6245  1BB9  3DCA               	addwfc	xtoa@w+1,f
  6246  1BBA                     l6557:	
  6247                           
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6249  1BBA  0020               	movlb	0	; select bank0
  6250  1BBB  0832               	movf	xtoa@d,w
  6251  1BBC  00CB               	movwf	xtoa@n
  6252  1BBD  0833               	movf	xtoa@d+1,w
  6253  1BBE  00CC               	movwf	xtoa@n+1
  6254  1BBF  0834               	movf	xtoa@d+2,w
  6255  1BC0  00CD               	movwf	xtoa@n+2
  6256  1BC1  0835               	movf	xtoa@d+3,w
  6257  1BC2  00CE               	movwf	xtoa@n+3
  6258  1BC3  0836               	movf	xtoa@d+4,w
  6259  1BC4  00CF               	movwf	xtoa@n+4
  6260  1BC5  0837               	movf	xtoa@d+5,w
  6261  1BC6  00D0               	movwf	xtoa@n+5
  6262  1BC7  0838               	movf	xtoa@d+6,w
  6263  1BC8  00D1               	movwf	xtoa@n+6
  6264  1BC9  0839               	movf	xtoa@d+7,w
  6265  1BCA  00D2               	movwf	xtoa@n+7
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6268  1BCB  301F               	movlw	31
  6269  1BCC  00D3               	movwf	xtoa@i
  6270  1BCD  3000               	movlw	0
  6271  1BCE  00D4               	movwf	xtoa@i+1
  6272                           
  6273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6274  1BCF  0024               	movlb	4	; select bank4
  6275  1BD0  01BF               	clrf	(_dbuf^(0+512)+31)
  6276                           
  6277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6278  1BD1  2C7C               	goto	l6589
  6279  1BD2                     l6561:	
  6280                           
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6282  1BD2  30FF               	movlw	255
  6283  1BD3  0020               	movlb	0	; select bank0
  6284  1BD4  07D3               	addwf	xtoa@i,f
  6285  1BD5  30FF               	movlw	255
  6286  1BD6  3DD4               	addwfc	xtoa@i+1,f
  6287                           
  6288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6289  1BD7  300F               	movlw	15
  6290  1BD8  054B               	andwf	xtoa@n,w
  6291  1BD9  00D5               	movwf	xtoa@c
  6292  1BDA  3000               	movlw	0
  6293  1BDB  054C               	andwf	xtoa@n+1,w
  6294  1BDC  00D6               	movwf	xtoa@c+1
  6295                           
  6296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6297  1BDD  0856               	movf	xtoa@c+1,w
  6298  1BDE  3A80               	xorlw	128
  6299  1BDF  00BB               	movwf	??_xtoa
  6300  1BE0  3080               	movlw	128
  6301  1BE1  023B               	subwf	??_xtoa,w
  6302  1BE2  1D03               	skipz
  6303  1BE3  2BE6               	goto	u8705
  6304  1BE4  300A               	movlw	10
  6305  1BE5  0255               	subwf	xtoa@c,w
  6306  1BE6                     u8705:	
  6307  1BE6  1C03               	skipc
  6308  1BE7  2BEC               	goto	l6565
  6309  1BE8  0020               	movlb	0	; select bank0
  6310  1BE9  0855               	movf	xtoa@c,w
  6311  1BEA  3E57               	addlw	87
  6312  1BEB  2BEF               	goto	L1
  6313  1BEC                     l6565:	
  6314  1BEC  0020               	movlb	0	; select bank0
  6315  1BED  0855               	movf	xtoa@c,w
  6316  1BEE  3E30               	addlw	48
  6317  1BEF                     L1:	
  6318  1BEF  00D5               	movwf	xtoa@c
  6319  1BF0  3000               	movlw	0
  6320  1BF1  3D56               	addwfc	xtoa@c+1,w
  6321  1BF2  00D6               	movwf	xtoa@c+1
  6322  1BF3  083A               	movf	xtoa@x,w
  6323  1BF4  3EBF               	addlw	191
  6324  1BF5  00BB               	movwf	??_xtoa
  6325  1BF6  30FF               	movlw	255
  6326  1BF7  1803               	skipnc
  6327  1BF8  3000               	movlw	0
  6328  1BF9  00BC               	movwf	??_xtoa+1
  6329  1BFA  3000               	movlw	0
  6330  1BFB  023C               	subwf	??_xtoa+1,w
  6331  1BFC  301A               	movlw	26
  6332  1BFD  1903               	skipnz
  6333  1BFE  023B               	subwf	??_xtoa,w
  6334  1BFF  1803               	btfsc	3,0
  6335  1C00  2C03               	goto	u8710
  6336  1C01  3001               	movlw	1
  6337  1C02  2C04               	goto	u8720
  6338  1C03                     u8710:	
  6339  1C03  3000               	movlw	0
  6340  1C04                     u8720:	
  6341  1C04  00BD               	movwf	??_xtoa+2
  6342  1C05  01BE               	clrf	??_xtoa+3
  6343  1C06  083D               	movf	??_xtoa+2,w
  6344  1C07  00C3               	movwf	_xtoa$1227
  6345  1C08  083E               	movf	??_xtoa+3,w
  6346  1C09  00C4               	movwf	_xtoa$1227+1
  6347  1C0A  0843               	movf	_xtoa$1227,w
  6348  1C0B  0444               	iorwf	_xtoa$1227+1,w
  6349  1C0C  1903               	btfsc	3,2
  6350  1C0D  2C3A               	goto	l6581
  6351  1C0E  3020               	movlw	32
  6352  1C0F  0455               	iorwf	xtoa@c,w
  6353  1C10  00BB               	movwf	??_xtoa
  6354  1C11  3000               	movlw	0
  6355  1C12  0456               	iorwf	xtoa@c+1,w
  6356  1C13  00BC               	movwf	??_xtoa+1
  6357  1C14  083B               	movf	??_xtoa,w
  6358  1C15  3E9F               	addlw	159
  6359  1C16  00BD               	movwf	??_xtoa+2
  6360  1C17  30FF               	movlw	255
  6361  1C18  3D3C               	addwfc	??_xtoa+1,w
  6362  1C19  00BE               	movwf	??_xtoa+3
  6363  1C1A  3000               	movlw	0
  6364  1C1B  023E               	subwf	??_xtoa+3,w
  6365  1C1C  301A               	movlw	26
  6366  1C1D  1903               	skipnz
  6367  1C1E  023D               	subwf	??_xtoa+2,w
  6368  1C1F  1803               	btfsc	3,0
  6369  1C20  2C23               	goto	u8740
  6370  1C21  3001               	movlw	1
  6371  1C22  2C24               	goto	u8750
  6372  1C23                     u8740:	
  6373  1C23  3000               	movlw	0
  6374  1C24                     u8750:	
  6375  1C24  00BF               	movwf	??_xtoa+4
  6376  1C25  01C0               	clrf	??_xtoa+5
  6377  1C26  083F               	movf	??_xtoa+4,w
  6378  1C27  00C5               	movwf	_xtoa$1228
  6379  1C28  0840               	movf	??_xtoa+5,w
  6380  1C29  00C6               	movwf	_xtoa$1228+1
  6381  1C2A  0845               	movf	_xtoa$1228,w
  6382  1C2B  0446               	iorwf	_xtoa$1228+1,w
  6383  1C2C  1903               	btfsc	3,2
  6384  1C2D  2C3A               	goto	l6581
  6385                           
  6386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6387  1C2E  0856               	movf	xtoa@c+1,w
  6388  1C2F  00F8               	movwf	toupper@c+1
  6389  1C30  0855               	movf	xtoa@c,w
  6390  1C31  00F7               	movwf	toupper@c
  6391  1C32  31A8  20DD  319B   	fcall	_toupper
  6392  1C35  0878               	movf	?_toupper+1,w
  6393  1C36  0020               	movlb	0	; select bank0
  6394  1C37  00D6               	movwf	xtoa@c+1
  6395  1C38  0877               	movf	?_toupper,w
  6396  1C39  00D5               	movwf	xtoa@c
  6397  1C3A                     l6581:	
  6398                           
  6399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6400  1C3A  0855               	movf	xtoa@c,w
  6401  1C3B  00BB               	movwf	??_xtoa
  6402  1C3C  0853               	movf	xtoa@i,w
  6403  1C3D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6404  1C3E  0086               	movwf	6
  6405  1C3F  3002               	movlw	2	; select bank4/5
  6406  1C40  0087               	movwf	7
  6407  1C41  083B               	movf	??_xtoa,w
  6408  1C42  0081               	movwf	1
  6409                           
  6410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6411  1C43  30FF               	movlw	255
  6412  1C44  07C7               	addwf	xtoa@p,f
  6413  1C45  30FF               	movlw	255
  6414  1C46  3DC8               	addwfc	xtoa@p+1,f
  6415                           
  6416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6417  1C47  30FF               	movlw	255
  6418  1C48  07C9               	addwf	xtoa@w,f
  6419  1C49  30FF               	movlw	255
  6420  1C4A  3DCA               	addwfc	xtoa@w+1,f
  6421                           
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6423  1C4B  304B               	movlw	low xtoa@n
  6424  1C4C  0086               	movwf	6
  6425  1C4D  3000               	movlw	high xtoa@n
  6426  1C4E  0087               	movwf	7
  6427  1C4F  3F40               	moviw [0]fsr1
  6428  1C50  00BB               	movwf	??_xtoa
  6429  1C51  3F41               	moviw [1]fsr1
  6430  1C52  00BC               	movwf	??_xtoa+1
  6431  1C53  3F42               	moviw [2]fsr1
  6432  1C54  00BD               	movwf	??_xtoa+2
  6433  1C55  3F43               	moviw [3]fsr1
  6434  1C56  00BE               	movwf	??_xtoa+3
  6435  1C57  3F44               	moviw [4]fsr1
  6436  1C58  00BF               	movwf	??_xtoa+4
  6437  1C59  3F45               	moviw [5]fsr1
  6438  1C5A  00C0               	movwf	??_xtoa+5
  6439  1C5B  3F46               	moviw [6]fsr1
  6440  1C5C  00C1               	movwf	??_xtoa+6
  6441  1C5D  3F47               	moviw [7]fsr1
  6442  1C5E  00C2               	movwf	??_xtoa+7
  6443  1C5F  3004               	movlw	4
  6444  1C60                     u8775:	
  6445  1C60  0020               	movlb	0	; select bank0
  6446  1C61  36C2               	lsrf	??_xtoa+7,f
  6447  1C62  0CC1               	rrf	??_xtoa+6,f
  6448  1C63  0CC0               	rrf	??_xtoa+5,f
  6449  1C64  0CBF               	rrf	??_xtoa+4,f
  6450  1C65  0CBE               	rrf	??_xtoa+3,f
  6451  1C66  0CBD               	rrf	??_xtoa+2,f
  6452  1C67  0CBC               	rrf	??_xtoa+1,f
  6453  1C68  0CBB               	rrf	??_xtoa,f
  6454  1C69  0B89               	decfsz	9,f
  6455  1C6A  2C60               	goto	u8775
  6456  1C6B  0020               	movlb	0	; select bank0
  6457  1C6C  0842               	movf	??_xtoa+7,w
  6458  1C6D  00D2               	movwf	xtoa@n+7
  6459  1C6E  0841               	movf	??_xtoa+6,w
  6460  1C6F  00D1               	movwf	xtoa@n+6
  6461  1C70  0840               	movf	??_xtoa+5,w
  6462  1C71  00D0               	movwf	xtoa@n+5
  6463  1C72  083F               	movf	??_xtoa+4,w
  6464  1C73  00CF               	movwf	xtoa@n+4
  6465  1C74  083E               	movf	??_xtoa+3,w
  6466  1C75  00CE               	movwf	xtoa@n+3
  6467  1C76  083D               	movf	??_xtoa+2,w
  6468  1C77  00CD               	movwf	xtoa@n+2
  6469  1C78  083C               	movf	??_xtoa+1,w
  6470  1C79  00CC               	movwf	xtoa@n+1
  6471  1C7A  083B               	movf	??_xtoa,w
  6472  1C7B  00CB               	movwf	xtoa@n
  6473  1C7C                     l6589:	
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6476  1C7C  0020               	movlb	0	; select bank0
  6477  1C7D  0854               	movf	xtoa@i+1,w
  6478  1C7E  3A80               	xorlw	128
  6479  1C7F  00BB               	movwf	??_xtoa
  6480  1C80  3080               	movlw	128
  6481  1C81  023B               	subwf	??_xtoa,w
  6482  1C82  1D03               	skipz
  6483  1C83  2C86               	goto	u8785
  6484  1C84  3002               	movlw	2
  6485  1C85  0253               	subwf	xtoa@i,w
  6486  1C86                     u8785:	
  6487  1C86  1C03               	skipc
  6488  1C87  2CAD               	goto	l740
  6489  1C88  0020               	movlb	0	; select bank0
  6490  1C89  084B               	movf	xtoa@n,w
  6491  1C8A  044C               	iorwf	xtoa@n+1,w
  6492  1C8B  044D               	iorwf	xtoa@n+2,w
  6493  1C8C  044E               	iorwf	xtoa@n+3,w
  6494  1C8D  044F               	iorwf	xtoa@n+4,w
  6495  1C8E  0450               	iorwf	xtoa@n+5,w
  6496  1C8F  0451               	iorwf	xtoa@n+6,w
  6497  1C90  0452               	iorwf	xtoa@n+7,w
  6498  1C91  1D03               	skipz
  6499  1C92  2BD2               	goto	l6561
  6500  1C93  0848               	movf	xtoa@p+1,w
  6501  1C94  3A80               	xorlw	128
  6502  1C95  00BB               	movwf	??_xtoa
  6503  1C96  3080               	movlw	128
  6504  1C97  023B               	subwf	??_xtoa,w
  6505  1C98  1D03               	skipz
  6506  1C99  2C9C               	goto	u8805
  6507  1C9A  3001               	movlw	1
  6508  1C9B  0247               	subwf	xtoa@p,w
  6509  1C9C                     u8805:	
  6510  1C9C  1803               	skipnc
  6511  1C9D  2BD2               	goto	l6561
  6512  1C9E  0020               	movlb	0	; select bank0
  6513  1C9F  084A               	movf	xtoa@w+1,w
  6514  1CA0  3A80               	xorlw	128
  6515  1CA1  00BB               	movwf	??_xtoa
  6516  1CA2  3080               	movlw	128
  6517  1CA3  023B               	subwf	??_xtoa,w
  6518  1CA4  1D03               	skipz
  6519  1CA5  2CA8               	goto	u8815
  6520  1CA6  3001               	movlw	1
  6521  1CA7  0249               	subwf	xtoa@w,w
  6522  1CA8                     u8815:	
  6523  1CA8  1C03               	skipc
  6524  1CA9  2CAD               	goto	l740
  6525  1CAA  0021               	movlb	1	; select bank1
  6526  1CAB  18ED               	btfsc	_flags^(0+128),1
  6527  1CAC  2BD2               	goto	l6561
  6528  1CAD                     l740:	
  6529                           
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6531  1CAD  0021               	movlb	1	; select bank1
  6532  1CAE  1E6D               	btfss	_flags^(0+128),4
  6533  1CAF  2CCB               	goto	l6605
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6536  1CB0  30FF               	movlw	255
  6537  1CB1  0020               	movlb	0	; select bank0
  6538  1CB2  07D3               	addwf	xtoa@i,f
  6539  1CB3  30FF               	movlw	255
  6540  1CB4  3DD4               	addwfc	xtoa@i+1,f
  6541                           
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6543  1CB5  083A               	movf	xtoa@x,w
  6544  1CB6  00BB               	movwf	??_xtoa
  6545  1CB7  0853               	movf	xtoa@i,w
  6546  1CB8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6547  1CB9  0086               	movwf	6
  6548  1CBA  3002               	movlw	2	; select bank4/5
  6549  1CBB  0087               	movwf	7
  6550  1CBC  083B               	movf	??_xtoa,w
  6551  1CBD  0081               	movwf	1
  6552                           
  6553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6554  1CBE  30FF               	movlw	255
  6555  1CBF  07D3               	addwf	xtoa@i,f
  6556  1CC0  30FF               	movlw	255
  6557  1CC1  3DD4               	addwfc	xtoa@i+1,f
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6560  1CC2  3030               	movlw	48
  6561  1CC3  00BB               	movwf	??_xtoa
  6562  1CC4  0853               	movf	xtoa@i,w
  6563  1CC5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6564  1CC6  0086               	movwf	6
  6565  1CC7  3002               	movlw	2	; select bank4/5
  6566  1CC8  0087               	movwf	7
  6567  1CC9  083B               	movf	??_xtoa,w
  6568  1CCA  0081               	movwf	1
  6569  1CCB                     l6605:	
  6570                           
  6571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6572  1CCB  0020               	movlb	0	; select bank0
  6573  1CCC  0831               	movf	xtoa@fp+1,w
  6574  1CCD  00A7               	movwf	pad@fp+1
  6575  1CCE  0830               	movf	xtoa@fp,w
  6576  1CCF  00A6               	movwf	pad@fp
  6577  1CD0  0853               	movf	xtoa@i,w
  6578  1CD1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6579  1CD2  00BB               	movwf	??_xtoa
  6580  1CD3  083B               	movf	??_xtoa,w
  6581  1CD4  00A8               	movwf	pad@buf
  6582  1CD5  084A               	movf	xtoa@w+1,w
  6583  1CD6  00AA               	movwf	pad@p+1
  6584  1CD7  0849               	movf	xtoa@w,w
  6585  1CD8  00A9               	movwf	pad@p
  6586  1CD9  31AA  2274         	fcall	_pad
  6587  1CDB  0020               	movlb	0	; select bank0
  6588  1CDC  0827               	movf	?_pad+1,w
  6589  1CDD  00B1               	movwf	?_xtoa+1
  6590  1CDE  0826               	movf	?_pad,w
  6591  1CDF  00B0               	movwf	?_xtoa
  6592  1CE0  0008               	return
  6593  1CE1                     __end_of_xtoa:	
  6594                           
  6595                           	psect	text10
  6596  28DD                     __ptext10:	
  6597 ;; *************** function _toupper *****************
  6598 ;; Defined at:
  6599 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  c               2    7[COMMON] int 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  2    7[COMMON] int 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6616 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6617 ;;Total ram usage:        8 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    2
  6620 ;; This function calls:
  6621 ;;		_islower
  6622 ;; This function is called by:
  6623 ;;		_xtoa
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _toupper
  6629  28DD                     _toupper:	
  6630                           
  6631                           ;incstack = 0
  6632                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6633  28DD  0877               	movf	toupper@c,w
  6634  28DE  3E9F               	addlw	159
  6635  28DF  0020               	movlb	0	; select bank0
  6636  28E0  00A0               	movwf	??_toupper
  6637  28E1  30FF               	movlw	255
  6638  28E2  3D78               	addwfc	toupper@c+1,w
  6639  28E3  00A1               	movwf	??_toupper+1
  6640  28E4  3000               	movlw	0
  6641  28E5  0221               	subwf	??_toupper+1,w
  6642  28E6  301A               	movlw	26
  6643  28E7  1903               	skipnz
  6644  28E8  0220               	subwf	??_toupper,w
  6645  28E9  1803               	btfsc	3,0
  6646  28EA  28ED               	goto	u7830
  6647  28EB  3001               	movlw	1
  6648  28EC  28EE               	goto	u7840
  6649  28ED                     u7830:	
  6650  28ED  3000               	movlw	0
  6651  28EE                     u7840:	
  6652  28EE  00A2               	movwf	??_toupper+2
  6653  28EF  01A3               	clrf	??_toupper+3
  6654  28F0  0822               	movf	??_toupper+2,w
  6655  28F1  00F9               	movwf	_toupper$1777
  6656  28F2  0823               	movf	??_toupper+3,w
  6657  28F3  00FA               	movwf	_toupper$1777+1
  6658  28F4  0879               	movf	_toupper$1777,w
  6659  28F5  047A               	iorwf	_toupper$1777+1,w
  6660  28F6  1903               	btfsc	3,2
  6661  28F7  0008               	return
  6662  28F8  305F               	movlw	95
  6663  28F9  0577               	andwf	toupper@c,w
  6664  28FA  00F7               	movwf	?_toupper
  6665  28FB  3000               	movlw	0
  6666  28FC  0578               	andwf	toupper@c+1,w
  6667  28FD  00F8               	movwf	?_toupper+1
  6668  28FE  0008               	return
  6669  28FF                     __end_of_toupper:	
  6670                           
  6671                           	psect	text11
  6672  379C                     __ptext11:	
  6673 ;; *************** function _islower *****************
  6674 ;; Defined at:
  6675 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  c               2    1[COMMON] int 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2    1[COMMON] int 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2, status,0
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6692 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;Total ram usage:        6 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_toupper
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _islower
  6705  379C                     _islower:	
  6706                           
  6707                           ;incstack = 0
  6708                           ; Regs used in _islower: [wreg+status,2+status,0]
  6709  379C  0871               	movf	islower@c,w
  6710  379D  3E9F               	addlw	159
  6711  379E  00F3               	movwf	??_islower
  6712  379F  30FF               	movlw	255
  6713  37A0  3D72               	addwfc	islower@c+1,w
  6714  37A1  00F4               	movwf	??_islower+1
  6715  37A2  3000               	movlw	0
  6716  37A3  0274               	subwf	??_islower+1,w
  6717  37A4  301A               	movlw	26
  6718  37A5  1903               	skipnz
  6719  37A6  0273               	subwf	??_islower,w
  6720  37A7  1803               	btfsc	3,0
  6721  37A8  2FAB               	goto	u7720
  6722  37A9  3001               	movlw	1
  6723  37AA  2FAC               	goto	u7730
  6724  37AB                     u7720:	
  6725  37AB  3000               	movlw	0
  6726  37AC                     u7730:	
  6727  37AC  00F5               	movwf	??_islower+2
  6728  37AD  01F6               	clrf	??_islower+3
  6729  37AE  0875               	movf	??_islower+2,w
  6730  37AF  00F1               	movwf	?_islower
  6731  37B0  0876               	movf	??_islower+3,w
  6732  37B1  00F2               	movwf	?_islower+1
  6733  37B2  0008               	return
  6734  37B3                     __end_of_islower:	
  6735                           
  6736                           	psect	text12
  6737  3785                     __ptext12:	
  6738 ;; *************** function _isupper *****************
  6739 ;; Defined at:
  6740 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  c               2    1[COMMON] int 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  2    1[COMMON] int 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6756 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6758 ;;Total ram usage:        6 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_xtoa
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _isupper
  6770  3785                     _isupper:	
  6771                           
  6772                           ;incstack = 0
  6773                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6774  3785  0871               	movf	isupper@c,w
  6775  3786  3EBF               	addlw	191
  6776  3787  00F3               	movwf	??_isupper
  6777  3788  30FF               	movlw	255
  6778  3789  3D72               	addwfc	isupper@c+1,w
  6779  378A  00F4               	movwf	??_isupper+1
  6780  378B  3000               	movlw	0
  6781  378C  0274               	subwf	??_isupper+1,w
  6782  378D  301A               	movlw	26
  6783  378E  1903               	skipnz
  6784  378F  0273               	subwf	??_isupper,w
  6785  3790  1803               	btfsc	3,0
  6786  3791  2F94               	goto	u7790
  6787  3792  3001               	movlw	1
  6788  3793  2F95               	goto	u7800
  6789  3794                     u7790:	
  6790  3794  3000               	movlw	0
  6791  3795                     u7800:	
  6792  3795  00F5               	movwf	??_isupper+2
  6793  3796  01F6               	clrf	??_isupper+3
  6794  3797  0875               	movf	??_isupper+2,w
  6795  3798  00F1               	movwf	?_isupper
  6796  3799  0876               	movf	??_isupper+3,w
  6797  379A  00F2               	movwf	?_isupper+1
  6798  379B  0008               	return
  6799  379C                     __end_of_isupper:	
  6800                           
  6801                           	psect	text13
  6802  2840                     __ptext13:	
  6803 ;; *************** function _isalpha *****************
  6804 ;; Defined at:
  6805 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  c               2    1[COMMON] int 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  2    1[COMMON] int 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6821 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6823 ;;Total ram usage:        8 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_xtoa
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           
  6834                           ;psect for function _isalpha
  6835  2840                     _isalpha:	
  6836                           
  6837                           ;incstack = 0
  6838                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6839  2840  3020               	movlw	32
  6840  2841  0471               	iorwf	isalpha@c,w
  6841  2842  00F3               	movwf	??_isalpha
  6842  2843  3000               	movlw	0
  6843  2844  0472               	iorwf	isalpha@c+1,w
  6844  2845  00F4               	movwf	??_isalpha+1
  6845  2846  0873               	movf	??_isalpha,w
  6846  2847  3E9F               	addlw	159
  6847  2848  00F5               	movwf	??_isalpha+2
  6848  2849  30FF               	movlw	255
  6849  284A  3D74               	addwfc	??_isalpha+1,w
  6850  284B  00F6               	movwf	??_isalpha+3
  6851  284C  3000               	movlw	0
  6852  284D  0276               	subwf	??_isalpha+3,w
  6853  284E  301A               	movlw	26
  6854  284F  1903               	skipnz
  6855  2850  0275               	subwf	??_isalpha+2,w
  6856  2851  1803               	btfsc	3,0
  6857  2852  2855               	goto	u7810
  6858  2853  3001               	movlw	1
  6859  2854  2856               	goto	u7820
  6860  2855                     u7810:	
  6861  2855  3000               	movlw	0
  6862  2856                     u7820:	
  6863  2856  00F7               	movwf	??_isalpha+4
  6864  2857  01F8               	clrf	??_isalpha+5
  6865  2858  0877               	movf	??_isalpha+4,w
  6866  2859  00F1               	movwf	?_isalpha
  6867  285A  0878               	movf	??_isalpha+5,w
  6868  285B  00F2               	movwf	?_isalpha+1
  6869  285C  0008               	return
  6870  285D                     __end_of_isalpha:	
  6871                           
  6872                           	psect	text14
  6873  253B                     __ptext14:	
  6874 ;; *************** function _utoa *****************
  6875 ;; Defined at:
  6876 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6879 ;;		 -> vsnprintf@f(6), 
  6880 ;;  d               8   18[BANK0 ] unsigned long long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  n               8   31[BANK0 ] unsigned long long 
  6883 ;;  i               2   39[BANK0 ] int 
  6884 ;;  w               2   29[BANK0 ] int 
  6885 ;;  p               2   27[BANK0 ] int 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2   16[BANK0 ] int 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6895 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6896 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6898 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6899 ;;Total ram usage:       25 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    5
  6902 ;; This function calls:
  6903 ;;		___lodiv
  6904 ;;		___lomod
  6905 ;;		_pad
  6906 ;; This function is called by:
  6907 ;;		_vfpfcnvrt
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           
  6912                           ;psect for function _utoa
  6913  253B                     _utoa:	
  6914                           
  6915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6916                           
  6917                           ;incstack = 0
  6918                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6919  253B  0021               	movlb	1	; select bank1
  6920  253C  1BEC               	btfsc	(_prec+1)^(0+128),7
  6921  253D  2D42               	goto	l700
  6922                           
  6923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6924  253E  30FD               	movlw	253
  6925  253F  05ED               	andwf	_flags^(0+128),f
  6926  2540  30FF               	movlw	255
  6927  2541  05EE               	andwf	(_flags+1)^(0+128),f
  6928  2542                     l700:	
  6929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  6930                           
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6933  2542  086C               	movf	(_prec+1)^(0+128),w
  6934  2543  3A80               	xorlw	128
  6935  2544  0020               	movlb	0	; select bank0
  6936  2545  00BA               	movwf	??_utoa
  6937  2546  3080               	movlw	128
  6938  2547  023A               	subwf	??_utoa,w
  6939  2548  1D03               	skipz
  6940  2549  2D4D               	goto	u8615
  6941  254A  3001               	movlw	1
  6942  254B  0021               	movlb	1	; select bank1
  6943  254C  026B               	subwf	_prec^(0+128),w
  6944  254D                     u8615:	
  6945  254D  1803               	skipnc
  6946  254E  2D55               	goto	l6515
  6947  254F  3001               	movlw	1
  6948  2550  0020               	movlb	0	; select bank0
  6949  2551  00BB               	movwf	utoa@p
  6950  2552  3000               	movlw	0
  6951  2553  00BC               	movwf	utoa@p+1
  6952  2554  2D5D               	goto	l704
  6953  2555                     l6515:	
  6954  2555  0021               	movlb	1	; select bank1
  6955  2556  086C               	movf	(_prec+1)^(0+128),w
  6956  2557  0020               	movlb	0	; select bank0
  6957  2558  00BC               	movwf	utoa@p+1
  6958  2559  0021               	movlb	1	; select bank1
  6959  255A  086B               	movf	_prec^(0+128),w
  6960  255B  0020               	movlb	0	; select bank0
  6961  255C  00BB               	movwf	utoa@p
  6962  255D                     l704:	
  6963                           
  6964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6965  255D  0022               	movlb	2	; select bank2
  6966  255E  0865               	movf	(_width+1)^(0+256),w
  6967  255F  0020               	movlb	0	; select bank0
  6968  2560  00BE               	movwf	utoa@w+1
  6969  2561  0022               	movlb	2	; select bank2
  6970  2562  0864               	movf	_width^(0+256),w
  6971  2563  0020               	movlb	0	; select bank0
  6972  2564  00BD               	movwf	utoa@w
  6973                           
  6974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6975  2565  0832               	movf	utoa@d,w
  6976  2566  00BF               	movwf	utoa@n
  6977  2567  0833               	movf	utoa@d+1,w
  6978  2568  00C0               	movwf	utoa@n+1
  6979  2569  0834               	movf	utoa@d+2,w
  6980  256A  00C1               	movwf	utoa@n+2
  6981  256B  0835               	movf	utoa@d+3,w
  6982  256C  00C2               	movwf	utoa@n+3
  6983  256D  0836               	movf	utoa@d+4,w
  6984  256E  00C3               	movwf	utoa@n+4
  6985  256F  0837               	movf	utoa@d+5,w
  6986  2570  00C4               	movwf	utoa@n+5
  6987  2571  0838               	movf	utoa@d+6,w
  6988  2572  00C5               	movwf	utoa@n+6
  6989  2573  0839               	movf	utoa@d+7,w
  6990  2574  00C6               	movwf	utoa@n+7
  6991                           
  6992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6993  2575  301F               	movlw	31
  6994  2576  00C7               	movwf	utoa@i
  6995  2577  3000               	movlw	0
  6996  2578  00C8               	movwf	utoa@i+1
  6997                           
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6999  2579  0024               	movlb	4	; select bank4
  7000  257A  01BF               	clrf	(_dbuf^(0+512)+31)
  7001                           
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7003  257B  2E01               	goto	l6531
  7004  257C                     l6533:	
  7005  257C  083F               	movf	utoa@n,w
  7006  257D  0440               	iorwf	utoa@n+1,w
  7007  257E  0441               	iorwf	utoa@n+2,w
  7008  257F  0442               	iorwf	utoa@n+3,w
  7009  2580  0443               	iorwf	utoa@n+4,w
  7010  2581  0444               	iorwf	utoa@n+5,w
  7011  2582  0445               	iorwf	utoa@n+6,w
  7012  2583  0446               	iorwf	utoa@n+7,w
  7013  2584  1D03               	skipz
  7014  2585  2DA0               	goto	l6521
  7015  2586  083C               	movf	utoa@p+1,w
  7016  2587  3A80               	xorlw	128
  7017  2588  00BA               	movwf	??_utoa
  7018  2589  3080               	movlw	128
  7019  258A  023A               	subwf	??_utoa,w
  7020  258B  1D03               	skipz
  7021  258C  2D8F               	goto	u8645
  7022  258D  3001               	movlw	1
  7023  258E  023B               	subwf	utoa@p,w
  7024  258F                     u8645:	
  7025  258F  1803               	skipnc
  7026  2590  2DA0               	goto	l6521
  7027  2591  0020               	movlb	0	; select bank0
  7028  2592  083E               	movf	utoa@w+1,w
  7029  2593  3A80               	xorlw	128
  7030  2594  00BA               	movwf	??_utoa
  7031  2595  3080               	movlw	128
  7032  2596  023A               	subwf	??_utoa,w
  7033  2597  1D03               	skipz
  7034  2598  2D9B               	goto	u8655
  7035  2599  3001               	movlw	1
  7036  259A  023D               	subwf	utoa@w,w
  7037  259B                     u8655:	
  7038  259B  1C03               	skipc
  7039  259C  2E06               	goto	l6541
  7040  259D  0021               	movlb	1	; select bank1
  7041  259E  1CED               	btfss	_flags^(0+128),1
  7042  259F  2E06               	goto	l6541
  7043  25A0                     l6521:	
  7044                           
  7045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7046  25A0  30FF               	movlw	255
  7047  25A1  0020               	movlb	0	; select bank0
  7048  25A2  07C7               	addwf	utoa@i,f
  7049  25A3  30FF               	movlw	255
  7050  25A4  3DC8               	addwfc	utoa@i+1,f
  7051                           
  7052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7053  25A5  300A               	movlw	10
  7054  25A6  00A0               	movwf	___lomod@divisor
  7055  25A7  01A1               	clrf	___lomod@divisor+1
  7056  25A8  01A2               	clrf	___lomod@divisor+2
  7057  25A9  01A3               	clrf	___lomod@divisor+3
  7058  25AA  01A4               	clrf	___lomod@divisor+4
  7059  25AB  01A5               	clrf	___lomod@divisor+5
  7060  25AC  01A6               	clrf	___lomod@divisor+6
  7061  25AD  01A7               	clrf	___lomod@divisor+7
  7062  25AE  083F               	movf	utoa@n,w
  7063  25AF  00A8               	movwf	___lomod@dividend
  7064  25B0  0840               	movf	utoa@n+1,w
  7065  25B1  00A9               	movwf	___lomod@dividend+1
  7066  25B2  0841               	movf	utoa@n+2,w
  7067  25B3  00AA               	movwf	___lomod@dividend+2
  7068  25B4  0842               	movf	utoa@n+3,w
  7069  25B5  00AB               	movwf	___lomod@dividend+3
  7070  25B6  0843               	movf	utoa@n+4,w
  7071  25B7  00AC               	movwf	___lomod@dividend+4
  7072  25B8  0844               	movf	utoa@n+5,w
  7073  25B9  00AD               	movwf	___lomod@dividend+5
  7074  25BA  0845               	movf	utoa@n+6,w
  7075  25BB  00AE               	movwf	___lomod@dividend+6
  7076  25BC  0846               	movf	utoa@n+7,w
  7077  25BD  00AF               	movwf	___lomod@dividend+7
  7078  25BE  31AC  24EB  31A5   	fcall	___lomod
  7079  25C1  0020               	movlb	0	; select bank0
  7080  25C2  0820               	movf	?___lomod,w
  7081  25C3  3E30               	addlw	48
  7082  25C4  00BA               	movwf	??_utoa
  7083  25C5  0847               	movf	utoa@i,w
  7084  25C6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7085  25C7  0086               	movwf	6
  7086  25C8  3002               	movlw	2	; select bank4/5
  7087  25C9  0087               	movwf	7
  7088  25CA  083A               	movf	??_utoa,w
  7089  25CB  0081               	movwf	1
  7090                           
  7091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7092  25CC  30FF               	movlw	255
  7093  25CD  07BB               	addwf	utoa@p,f
  7094  25CE  30FF               	movlw	255
  7095  25CF  3DBC               	addwfc	utoa@p+1,f
  7096                           
  7097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7098  25D0  30FF               	movlw	255
  7099  25D1  07BD               	addwf	utoa@w,f
  7100  25D2  30FF               	movlw	255
  7101  25D3  3DBE               	addwfc	utoa@w+1,f
  7102                           
  7103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7104  25D4  300A               	movlw	10
  7105  25D5  00A0               	movwf	___lodiv@divisor
  7106  25D6  01A1               	clrf	___lodiv@divisor+1
  7107  25D7  01A2               	clrf	___lodiv@divisor+2
  7108  25D8  01A3               	clrf	___lodiv@divisor+3
  7109  25D9  01A4               	clrf	___lodiv@divisor+4
  7110  25DA  01A5               	clrf	___lodiv@divisor+5
  7111  25DB  01A6               	clrf	___lodiv@divisor+6
  7112  25DC  01A7               	clrf	___lodiv@divisor+7
  7113  25DD  083F               	movf	utoa@n,w
  7114  25DE  00A8               	movwf	___lodiv@dividend
  7115  25DF  0840               	movf	utoa@n+1,w
  7116  25E0  00A9               	movwf	___lodiv@dividend+1
  7117  25E1  0841               	movf	utoa@n+2,w
  7118  25E2  00AA               	movwf	___lodiv@dividend+2
  7119  25E3  0842               	movf	utoa@n+3,w
  7120  25E4  00AB               	movwf	___lodiv@dividend+3
  7121  25E5  0843               	movf	utoa@n+4,w
  7122  25E6  00AC               	movwf	___lodiv@dividend+4
  7123  25E7  0844               	movf	utoa@n+5,w
  7124  25E8  00AD               	movwf	___lodiv@dividend+5
  7125  25E9  0845               	movf	utoa@n+6,w
  7126  25EA  00AE               	movwf	___lodiv@dividend+6
  7127  25EB  0846               	movf	utoa@n+7,w
  7128  25EC  00AF               	movwf	___lodiv@dividend+7
  7129  25ED  31AD  25D0  31A5   	fcall	___lodiv
  7130  25F0  0020               	movlb	0	; select bank0
  7131  25F1  0820               	movf	?___lodiv,w
  7132  25F2  00BF               	movwf	utoa@n
  7133  25F3  0821               	movf	?___lodiv+1,w
  7134  25F4  00C0               	movwf	utoa@n+1
  7135  25F5  0822               	movf	?___lodiv+2,w
  7136  25F6  00C1               	movwf	utoa@n+2
  7137  25F7  0823               	movf	?___lodiv+3,w
  7138  25F8  00C2               	movwf	utoa@n+3
  7139  25F9  0824               	movf	?___lodiv+4,w
  7140  25FA  00C3               	movwf	utoa@n+4
  7141  25FB  0825               	movf	?___lodiv+5,w
  7142  25FC  00C4               	movwf	utoa@n+5
  7143  25FD  0826               	movf	?___lodiv+6,w
  7144  25FE  00C5               	movwf	utoa@n+6
  7145  25FF  0827               	movf	?___lodiv+7,w
  7146  2600  00C6               	movwf	utoa@n+7
  7147  2601                     l6531:	
  7148                           
  7149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7150  2601  0020               	movlb	0	; select bank0
  7151  2602  0847               	movf	utoa@i,w
  7152  2603  0448               	iorwf	utoa@i+1,w
  7153  2604  1D03               	btfss	3,2
  7154  2605  2D7C               	goto	l6533
  7155  2606                     l6541:	
  7156                           
  7157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7158  2606  0020               	movlb	0	; select bank0
  7159  2607  0831               	movf	utoa@fp+1,w
  7160  2608  00A7               	movwf	pad@fp+1
  7161  2609  0830               	movf	utoa@fp,w
  7162  260A  00A6               	movwf	pad@fp
  7163  260B  0847               	movf	utoa@i,w
  7164  260C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7165  260D  00BA               	movwf	??_utoa
  7166  260E  083A               	movf	??_utoa,w
  7167  260F  00A8               	movwf	pad@buf
  7168  2610  083E               	movf	utoa@w+1,w
  7169  2611  00AA               	movwf	pad@p+1
  7170  2612  083D               	movf	utoa@w,w
  7171  2613  00A9               	movwf	pad@p
  7172  2614  31AA  2274         	fcall	_pad
  7173  2616  0020               	movlb	0	; select bank0
  7174  2617  0827               	movf	?_pad+1,w
  7175  2618  00B1               	movwf	?_utoa+1
  7176  2619  0826               	movf	?_pad,w
  7177  261A  00B0               	movwf	?_utoa
  7178  261B  0008               	return
  7179  261C                     __end_of_utoa:	
  7180                           
  7181                           	psect	text15
  7182  2CEB                     __ptext15:	
  7183 ;; *************** function ___lomod *****************
  7184 ;; Defined at:
  7185 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7188 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  counter         1    2[COMMON] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  8    0[BANK0 ] unsigned long long 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7200 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7203 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:       18 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_utoa
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function ___lomod
  7216  2CEB                     ___lomod:	
  7217                           
  7218                           ;incstack = 0
  7219                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7220  2CEB  0020               	movlb	0	; select bank0
  7221  2CEC  0820               	movf	___lomod@divisor,w
  7222  2CED  0421               	iorwf	___lomod@divisor+1,w
  7223  2CEE  0422               	iorwf	___lomod@divisor+2,w
  7224  2CEF  0423               	iorwf	___lomod@divisor+3,w
  7225  2CF0  0424               	iorwf	___lomod@divisor+4,w
  7226  2CF1  0425               	iorwf	___lomod@divisor+5,w
  7227  2CF2  0426               	iorwf	___lomod@divisor+6,w
  7228  2CF3  0427               	iorwf	___lomod@divisor+7,w
  7229  2CF4  1903               	skipnz
  7230  2CF5  2D43               	goto	l1071
  7231  2CF6  01F2               	clrf	___lomod@counter
  7232  2CF7  0AF2               	incf	___lomod@counter,f
  7233  2CF8                     l6323:	
  7234  2CF8  1BA7               	btfsc	___lomod@divisor+7,7
  7235  2CF9  2D07               	goto	l6325
  7236  2CFA  35A0               	lslf	___lomod@divisor,f
  7237  2CFB  0DA1               	rlf	___lomod@divisor+1,f
  7238  2CFC  0DA2               	rlf	___lomod@divisor+2,f
  7239  2CFD  0DA3               	rlf	___lomod@divisor+3,f
  7240  2CFE  0DA4               	rlf	___lomod@divisor+4,f
  7241  2CFF  0DA5               	rlf	___lomod@divisor+5,f
  7242  2D00  0DA6               	rlf	___lomod@divisor+6,f
  7243  2D01  0DA7               	rlf	___lomod@divisor+7,f
  7244  2D02  3001               	movlw	1
  7245  2D03  00F1               	movwf	??___lomod
  7246  2D04  0871               	movf	??___lomod,w
  7247  2D05  07F2               	addwf	___lomod@counter,f
  7248  2D06  2CF8               	goto	l6323
  7249  2D07                     l6325:	
  7250  2D07  0827               	movf	___lomod@divisor+7,w
  7251  2D08  022F               	subwf	___lomod@dividend+7,w
  7252  2D09  1D03               	skipz
  7253  2D0A  2D25               	goto	u8205
  7254  2D0B  0826               	movf	___lomod@divisor+6,w
  7255  2D0C  022E               	subwf	___lomod@dividend+6,w
  7256  2D0D  1D03               	skipz
  7257  2D0E  2D25               	goto	u8205
  7258  2D0F  0825               	movf	___lomod@divisor+5,w
  7259  2D10  022D               	subwf	___lomod@dividend+5,w
  7260  2D11  1D03               	skipz
  7261  2D12  2D25               	goto	u8205
  7262  2D13  0824               	movf	___lomod@divisor+4,w
  7263  2D14  022C               	subwf	___lomod@dividend+4,w
  7264  2D15  1D03               	skipz
  7265  2D16  2D25               	goto	u8205
  7266  2D17  0823               	movf	___lomod@divisor+3,w
  7267  2D18  022B               	subwf	___lomod@dividend+3,w
  7268  2D19  1D03               	skipz
  7269  2D1A  2D25               	goto	u8205
  7270  2D1B  0822               	movf	___lomod@divisor+2,w
  7271  2D1C  022A               	subwf	___lomod@dividend+2,w
  7272  2D1D  1D03               	skipz
  7273  2D1E  2D25               	goto	u8205
  7274  2D1F  0821               	movf	___lomod@divisor+1,w
  7275  2D20  0229               	subwf	___lomod@dividend+1,w
  7276  2D21  1D03               	skipz
  7277  2D22  2D25               	goto	u8205
  7278  2D23  0820               	movf	___lomod@divisor,w
  7279  2D24  0228               	subwf	___lomod@dividend,w
  7280  2D25                     u8205:	
  7281  2D25  1C03               	skipc
  7282  2D26  2D37               	goto	l6329
  7283  2D27  0820               	movf	___lomod@divisor,w
  7284  2D28  02A8               	subwf	___lomod@dividend,f
  7285  2D29  0821               	movf	___lomod@divisor+1,w
  7286  2D2A  3BA9               	subwfb	___lomod@dividend+1,f
  7287  2D2B  0822               	movf	___lomod@divisor+2,w
  7288  2D2C  3BAA               	subwfb	___lomod@dividend+2,f
  7289  2D2D  0823               	movf	___lomod@divisor+3,w
  7290  2D2E  3BAB               	subwfb	___lomod@dividend+3,f
  7291  2D2F  0824               	movf	___lomod@divisor+4,w
  7292  2D30  3BAC               	subwfb	___lomod@dividend+4,f
  7293  2D31  0825               	movf	___lomod@divisor+5,w
  7294  2D32  3BAD               	subwfb	___lomod@dividend+5,f
  7295  2D33  0826               	movf	___lomod@divisor+6,w
  7296  2D34  3BAE               	subwfb	___lomod@dividend+6,f
  7297  2D35  0827               	movf	___lomod@divisor+7,w
  7298  2D36  3BAF               	subwfb	___lomod@dividend+7,f
  7299  2D37                     l6329:	
  7300  2D37  36A7               	lsrf	___lomod@divisor+7,f
  7301  2D38  0CA6               	rrf	___lomod@divisor+6,f
  7302  2D39  0CA5               	rrf	___lomod@divisor+5,f
  7303  2D3A  0CA4               	rrf	___lomod@divisor+4,f
  7304  2D3B  0CA3               	rrf	___lomod@divisor+3,f
  7305  2D3C  0CA2               	rrf	___lomod@divisor+2,f
  7306  2D3D  0CA1               	rrf	___lomod@divisor+1,f
  7307  2D3E  0CA0               	rrf	___lomod@divisor,f
  7308  2D3F  3001               	movlw	1
  7309  2D40  02F2               	subwf	___lomod@counter,f
  7310  2D41  1D03               	btfss	3,2
  7311  2D42  2D07               	goto	l6325
  7312  2D43                     l1071:	
  7313  2D43  0828               	movf	___lomod@dividend,w
  7314  2D44  00A0               	movwf	?___lomod
  7315  2D45  0829               	movf	___lomod@dividend+1,w
  7316  2D46  00A1               	movwf	?___lomod+1
  7317  2D47  082A               	movf	___lomod@dividend+2,w
  7318  2D48  00A2               	movwf	?___lomod+2
  7319  2D49  082B               	movf	___lomod@dividend+3,w
  7320  2D4A  00A3               	movwf	?___lomod+3
  7321  2D4B  082C               	movf	___lomod@dividend+4,w
  7322  2D4C  00A4               	movwf	?___lomod+4
  7323  2D4D  082D               	movf	___lomod@dividend+5,w
  7324  2D4E  00A5               	movwf	?___lomod+5
  7325  2D4F  082E               	movf	___lomod@dividend+6,w
  7326  2D50  00A6               	movwf	?___lomod+6
  7327  2D51  082F               	movf	___lomod@dividend+7,w
  7328  2D52  00A7               	movwf	?___lomod+7
  7329  2D53  0008               	return
  7330  2D54                     __end_of___lomod:	
  7331                           
  7332                           	psect	text16
  7333  2DD0                     __ptext16:	
  7334 ;; *************** function ___lodiv *****************
  7335 ;; Defined at:
  7336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7339 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  quotient        8    2[COMMON] unsigned long long 
  7342 ;;  counter         1   10[COMMON] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  8    0[BANK0 ] unsigned long long 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7352 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7353 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7355 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;Total ram usage:       26 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_utoa
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function ___lodiv
  7368  2DD0                     ___lodiv:	
  7369                           
  7370                           ;incstack = 0
  7371                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7372  2DD0  3072               	movlw	low ___lodiv@quotient
  7373  2DD1  0086               	movwf	6
  7374  2DD2  3000               	movlw	high ___lodiv@quotient
  7375  2DD3  0087               	movwf	7
  7376  2DD4  3008               	movlw	8
  7377  2DD5  00F1               	movwf	??___lodiv
  7378  2DD6  3000               	movlw	0
  7379  2DD7                     u8130:	
  7380  2DD7  001E               	movwi fsr1++
  7381  2DD8  0BF1               	decfsz	??___lodiv,f
  7382  2DD9  2DD7               	goto	u8130
  7383  2DDA  0020               	movlb	0	; select bank0
  7384  2DDB  0820               	movf	___lodiv@divisor,w
  7385  2DDC  0421               	iorwf	___lodiv@divisor+1,w
  7386  2DDD  0422               	iorwf	___lodiv@divisor+2,w
  7387  2DDE  0423               	iorwf	___lodiv@divisor+3,w
  7388  2DDF  0424               	iorwf	___lodiv@divisor+4,w
  7389  2DE0  0425               	iorwf	___lodiv@divisor+5,w
  7390  2DE1  0426               	iorwf	___lodiv@divisor+6,w
  7391  2DE2  0427               	iorwf	___lodiv@divisor+7,w
  7392  2DE3  1903               	skipnz
  7393  2DE4  2E3B               	goto	l1061
  7394  2DE5  01FA               	clrf	___lodiv@counter
  7395  2DE6  0AFA               	incf	___lodiv@counter,f
  7396  2DE7                     l6303:	
  7397  2DE7  1BA7               	btfsc	___lodiv@divisor+7,7
  7398  2DE8  2DF6               	goto	l6305
  7399  2DE9  35A0               	lslf	___lodiv@divisor,f
  7400  2DEA  0DA1               	rlf	___lodiv@divisor+1,f
  7401  2DEB  0DA2               	rlf	___lodiv@divisor+2,f
  7402  2DEC  0DA3               	rlf	___lodiv@divisor+3,f
  7403  2DED  0DA4               	rlf	___lodiv@divisor+4,f
  7404  2DEE  0DA5               	rlf	___lodiv@divisor+5,f
  7405  2DEF  0DA6               	rlf	___lodiv@divisor+6,f
  7406  2DF0  0DA7               	rlf	___lodiv@divisor+7,f
  7407  2DF1  3001               	movlw	1
  7408  2DF2  00F1               	movwf	??___lodiv
  7409  2DF3  0871               	movf	??___lodiv,w
  7410  2DF4  07FA               	addwf	___lodiv@counter,f
  7411  2DF5  2DE7               	goto	l6303
  7412  2DF6                     l6305:	
  7413  2DF6  35F2               	lslf	___lodiv@quotient,f
  7414  2DF7  0DF3               	rlf	___lodiv@quotient+1,f
  7415  2DF8  0DF4               	rlf	___lodiv@quotient+2,f
  7416  2DF9  0DF5               	rlf	___lodiv@quotient+3,f
  7417  2DFA  0DF6               	rlf	___lodiv@quotient+4,f
  7418  2DFB  0DF7               	rlf	___lodiv@quotient+5,f
  7419  2DFC  0DF8               	rlf	___lodiv@quotient+6,f
  7420  2DFD  0DF9               	rlf	___lodiv@quotient+7,f
  7421  2DFE  0827               	movf	___lodiv@divisor+7,w
  7422  2DFF  022F               	subwf	___lodiv@dividend+7,w
  7423  2E00  1D03               	skipz
  7424  2E01  2E1C               	goto	u8165
  7425  2E02  0826               	movf	___lodiv@divisor+6,w
  7426  2E03  022E               	subwf	___lodiv@dividend+6,w
  7427  2E04  1D03               	skipz
  7428  2E05  2E1C               	goto	u8165
  7429  2E06  0825               	movf	___lodiv@divisor+5,w
  7430  2E07  022D               	subwf	___lodiv@dividend+5,w
  7431  2E08  1D03               	skipz
  7432  2E09  2E1C               	goto	u8165
  7433  2E0A  0824               	movf	___lodiv@divisor+4,w
  7434  2E0B  022C               	subwf	___lodiv@dividend+4,w
  7435  2E0C  1D03               	skipz
  7436  2E0D  2E1C               	goto	u8165
  7437  2E0E  0823               	movf	___lodiv@divisor+3,w
  7438  2E0F  022B               	subwf	___lodiv@dividend+3,w
  7439  2E10  1D03               	skipz
  7440  2E11  2E1C               	goto	u8165
  7441  2E12  0822               	movf	___lodiv@divisor+2,w
  7442  2E13  022A               	subwf	___lodiv@dividend+2,w
  7443  2E14  1D03               	skipz
  7444  2E15  2E1C               	goto	u8165
  7445  2E16  0821               	movf	___lodiv@divisor+1,w
  7446  2E17  0229               	subwf	___lodiv@dividend+1,w
  7447  2E18  1D03               	skipz
  7448  2E19  2E1C               	goto	u8165
  7449  2E1A  0820               	movf	___lodiv@divisor,w
  7450  2E1B  0228               	subwf	___lodiv@dividend,w
  7451  2E1C                     u8165:	
  7452  2E1C  1C03               	skipc
  7453  2E1D  2E2F               	goto	l6313
  7454  2E1E  0820               	movf	___lodiv@divisor,w
  7455  2E1F  02A8               	subwf	___lodiv@dividend,f
  7456  2E20  0821               	movf	___lodiv@divisor+1,w
  7457  2E21  3BA9               	subwfb	___lodiv@dividend+1,f
  7458  2E22  0822               	movf	___lodiv@divisor+2,w
  7459  2E23  3BAA               	subwfb	___lodiv@dividend+2,f
  7460  2E24  0823               	movf	___lodiv@divisor+3,w
  7461  2E25  3BAB               	subwfb	___lodiv@dividend+3,f
  7462  2E26  0824               	movf	___lodiv@divisor+4,w
  7463  2E27  3BAC               	subwfb	___lodiv@dividend+4,f
  7464  2E28  0825               	movf	___lodiv@divisor+5,w
  7465  2E29  3BAD               	subwfb	___lodiv@dividend+5,f
  7466  2E2A  0826               	movf	___lodiv@divisor+6,w
  7467  2E2B  3BAE               	subwfb	___lodiv@dividend+6,f
  7468  2E2C  0827               	movf	___lodiv@divisor+7,w
  7469  2E2D  3BAF               	subwfb	___lodiv@dividend+7,f
  7470  2E2E  1472               	bsf	___lodiv@quotient,0
  7471  2E2F                     l6313:	
  7472  2E2F  36A7               	lsrf	___lodiv@divisor+7,f
  7473  2E30  0CA6               	rrf	___lodiv@divisor+6,f
  7474  2E31  0CA5               	rrf	___lodiv@divisor+5,f
  7475  2E32  0CA4               	rrf	___lodiv@divisor+4,f
  7476  2E33  0CA3               	rrf	___lodiv@divisor+3,f
  7477  2E34  0CA2               	rrf	___lodiv@divisor+2,f
  7478  2E35  0CA1               	rrf	___lodiv@divisor+1,f
  7479  2E36  0CA0               	rrf	___lodiv@divisor,f
  7480  2E37  3001               	movlw	1
  7481  2E38  02FA               	subwf	___lodiv@counter,f
  7482  2E39  1D03               	btfss	3,2
  7483  2E3A  2DF6               	goto	l6305
  7484  2E3B                     l1061:	
  7485  2E3B  0872               	movf	___lodiv@quotient,w
  7486  2E3C  00A0               	movwf	?___lodiv
  7487  2E3D  0873               	movf	___lodiv@quotient+1,w
  7488  2E3E  00A1               	movwf	?___lodiv+1
  7489  2E3F  0874               	movf	___lodiv@quotient+2,w
  7490  2E40  00A2               	movwf	?___lodiv+2
  7491  2E41  0875               	movf	___lodiv@quotient+3,w
  7492  2E42  00A3               	movwf	?___lodiv+3
  7493  2E43  0876               	movf	___lodiv@quotient+4,w
  7494  2E44  00A4               	movwf	?___lodiv+4
  7495  2E45  0877               	movf	___lodiv@quotient+5,w
  7496  2E46  00A5               	movwf	?___lodiv+5
  7497  2E47  0878               	movf	___lodiv@quotient+6,w
  7498  2E48  00A6               	movwf	?___lodiv+6
  7499  2E49  0879               	movf	___lodiv@quotient+7,w
  7500  2E4A  00A7               	movwf	?___lodiv+7
  7501  2E4B  0008               	return
  7502  2E4C                     __end_of___lodiv:	
  7503                           
  7504                           	psect	text17
  7505  2AC5                     __ptext17:	
  7506 ;; *************** function _strncmp *****************
  7507 ;; Defined at:
  7508 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7511 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  7512 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  7513 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  7514 ;;		 -> STR_1(61), 
  7515 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7516 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7517 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7518 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7519 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7520 ;;		 -> STR_37(3), STR_32(3), STR_28(3), STR_23(4), 
  7521 ;;		 -> STR_19(4), 
  7522 ;;  n               2    5[COMMON] unsigned int 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;  r               2   10[COMMON] PTR const unsigned char 
  7525 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7526 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7527 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7528 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7529 ;;		 -> STR_37(3), STR_32(3), STR_28(3), STR_23(4), 
  7530 ;;		 -> STR_19(4), 
  7531 ;;  l               2    8[COMMON] PTR const unsigned char 
  7532 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  7533 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  7534 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  7535 ;;		 -> STR_1(61), 
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  2    1[COMMON] int 
  7538 ;; Registers used:
  7539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7545 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7548 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7549 ;;Total ram usage:       11 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    1
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_vfpfcnvrt
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _strncmp
  7561  2AC5                     _strncmp:	
  7562                           
  7563                           ;incstack = 0
  7564                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7565  2AC5  0872               	movf	strncmp@_l+1,w
  7566  2AC6  00F9               	movwf	strncmp@l+1
  7567  2AC7  0871               	movf	strncmp@_l,w
  7568  2AC8  00F8               	movwf	strncmp@l
  7569  2AC9  0874               	movf	strncmp@_r+1,w
  7570  2ACA  00FB               	movwf	strncmp@r+1
  7571  2ACB  0873               	movf	strncmp@_r,w
  7572  2ACC  00FA               	movwf	strncmp@r
  7573  2ACD  3001               	movlw	1
  7574  2ACE  02F5               	subwf	strncmp@n,f
  7575  2ACF  3000               	movlw	0
  7576  2AD0  3BF6               	subwfb	strncmp@n+1,f
  7577  2AD1  0A75               	incf	strncmp@n,w
  7578  2AD2  1D03               	skipz
  7579  2AD3  2AFF               	goto	l6665
  7580  2AD4  0A76               	incf	strncmp@n+1,w
  7581  2AD5  1D03               	btfss	3,2
  7582  2AD6  2AFF               	goto	l6665
  7583  2AD7  01F1               	clrf	?_strncmp
  7584  2AD8  01F2               	clrf	?_strncmp+1
  7585  2AD9  0008               	return
  7586  2ADA                     l6667:	
  7587  2ADA  087A               	movf	strncmp@r,w
  7588  2ADB  0084               	movwf	4
  7589  2ADC  087B               	movf	strncmp@r+1,w
  7590  2ADD  0085               	movwf	5
  7591  2ADE  0012               	moviw fsr0++
  7592  2ADF  1903               	btfsc	3,2
  7593  2AE0  2B06               	goto	l6673
  7594  2AE1  0875               	movf	strncmp@n,w
  7595  2AE2  0476               	iorwf	strncmp@n+1,w
  7596  2AE3  1903               	btfsc	3,2
  7597  2AE4  2B06               	goto	l6673
  7598  2AE5  087A               	movf	strncmp@r,w
  7599  2AE6  0084               	movwf	4
  7600  2AE7  087B               	movf	strncmp@r+1,w
  7601  2AE8  0085               	movwf	5
  7602  2AE9  0800               	movf	0,w	;code access
  7603  2AEA  00F7               	movwf	??_strncmp
  7604  2AEB  0878               	movf	strncmp@l,w
  7605  2AEC  0084               	movwf	4
  7606  2AED  0879               	movf	strncmp@l+1,w
  7607  2AEE  0085               	movwf	5
  7608  2AEF  0800               	movf	0,w	;code access
  7609  2AF0  0677               	xorwf	??_strncmp,w
  7610  2AF1  1D03               	btfss	3,2
  7611  2AF2  2B06               	goto	l6673
  7612  2AF3  3001               	movlw	1
  7613  2AF4  07F8               	addwf	strncmp@l,f
  7614  2AF5  3000               	movlw	0
  7615  2AF6  3DF9               	addwfc	strncmp@l+1,f
  7616  2AF7  3001               	movlw	1
  7617  2AF8  07FA               	addwf	strncmp@r,f
  7618  2AF9  3000               	movlw	0
  7619  2AFA  3DFB               	addwfc	strncmp@r+1,f
  7620  2AFB  3001               	movlw	1
  7621  2AFC  02F5               	subwf	strncmp@n,f
  7622  2AFD  3000               	movlw	0
  7623  2AFE  3BF6               	subwfb	strncmp@n+1,f
  7624  2AFF                     l6665:	
  7625  2AFF  0878               	movf	strncmp@l,w
  7626  2B00  0084               	movwf	4
  7627  2B01  0879               	movf	strncmp@l+1,w
  7628  2B02  0085               	movwf	5
  7629  2B03  0012               	moviw fsr0++
  7630  2B04  1D03               	btfss	3,2
  7631  2B05  2ADA               	goto	l6667
  7632  2B06                     l6673:	
  7633  2B06  0878               	movf	strncmp@l,w
  7634  2B07  0084               	movwf	4
  7635  2B08  0879               	movf	strncmp@l+1,w
  7636  2B09  0085               	movwf	5
  7637  2B0A  0800               	movf	0,w	;code access
  7638  2B0B  00F7               	movwf	??_strncmp
  7639  2B0C  087A               	movf	strncmp@r,w
  7640  2B0D  0084               	movwf	4
  7641  2B0E  087B               	movf	strncmp@r+1,w
  7642  2B0F  0085               	movwf	5
  7643  2B10  0800               	movf	0,w	;code access
  7644  2B11  0277               	subwf	??_strncmp,w
  7645  2B12  00F1               	movwf	?_strncmp
  7646  2B13  01F2               	clrf	?_strncmp+1
  7647  2B14  1C03               	skipc
  7648  2B15  03F2               	decf	?_strncmp+1,f
  7649  2B16  0008               	return
  7650  2B17                     __end_of_strncmp:	
  7651                           
  7652                           	psect	text18
  7653  21EB                     __ptext18:	
  7654 ;; *************** function _stoa *****************
  7655 ;; Defined at:
  7656 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7659 ;;		 -> vsnprintf@f(6), 
  7660 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7661 ;;		 -> ?_snprintf(2), thermistorBetaValue(2), adcGain(2), 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  7664 ;;  l               2   19[BANK0 ] int 
  7665 ;;  p               2   17[BANK0 ] int 
  7666 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  7667 ;;		 -> ?_snprintf(2), stoa@nuls(7), thermistorBetaValue(2), adcGain(2), 
  7668 ;;  w               2   13[BANK0 ] int 
  7669 ;;  i               2   11[BANK0 ] int 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  2    0[BANK0 ] int 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7679 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7680 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7682 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7683 ;;Total ram usage:       23 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    3
  7686 ;; This function calls:
  7687 ;;		_fputc
  7688 ;;		_strlen
  7689 ;; This function is called by:
  7690 ;;		_vfpfcnvrt
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _stoa
  7696  21EB                     _stoa:	
  7697                           
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7699                           
  7700                           ;incstack = 0
  7701                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7702  21EB  30D0               	movlw	low stoa@F1152
  7703  21EC  0086               	movwf	6
  7704  21ED  3001               	movlw	high stoa@F1152
  7705  21EE  0087               	movwf	7
  7706  21EF  3024               	movlw	low stoa@nuls
  7707  21F0  0084               	movwf	4
  7708  21F1  3000               	movlw	high stoa@nuls
  7709  21F2  0085               	movwf	5
  7710  21F3  3007               	movlw	7
  7711  21F4  00FA               	movwf	??_stoa
  7712  21F5                     u8510:	
  7713  21F5  0016               	moviw fsr1++
  7714  21F6  001A               	movwi fsr0++
  7715  21F7  0BFA               	decfsz	??_stoa,f
  7716  21F8  29F5               	goto	u8510
  7717                           
  7718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7719  21F9  0020               	movlb	0	; select bank0
  7720  21FA  0823               	movf	stoa@s+1,w
  7721  21FB  00B0               	movwf	stoa@cp+1
  7722  21FC  0822               	movf	stoa@s,w
  7723  21FD  00AF               	movwf	stoa@cp
  7724                           
  7725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7726  21FE  082F               	movf	stoa@cp,w
  7727  21FF  0430               	iorwf	stoa@cp+1,w
  7728  2200  1D03               	btfss	3,2
  7729  2201  2A06               	goto	l6467
  7730                           
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7732  2202  3024               	movlw	low stoa@nuls
  7733  2203  00AF               	movwf	stoa@cp
  7734  2204  3000               	movlw	high stoa@nuls
  7735  2205  00B0               	movwf	stoa@cp+1
  7736  2206                     l6467:	
  7737                           
  7738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7739  2206  0830               	movf	stoa@cp+1,w
  7740  2207  00F2               	movwf	strlen@s+1
  7741  2208  082F               	movf	stoa@cp,w
  7742  2209  00F1               	movwf	strlen@s
  7743  220A  31B7  2757  31A1   	fcall	_strlen
  7744  220D  0872               	movf	?_strlen+1,w
  7745  220E  0020               	movlb	0	; select bank0
  7746  220F  00B4               	movwf	stoa@l+1
  7747  2210  0871               	movf	?_strlen,w
  7748  2211  00B3               	movwf	stoa@l
  7749                           
  7750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7751  2212  0021               	movlb	1	; select bank1
  7752  2213  086C               	movf	(_prec+1)^(0+128),w
  7753  2214  0020               	movlb	0	; select bank0
  7754  2215  00B2               	movwf	stoa@p+1
  7755  2216  0021               	movlb	1	; select bank1
  7756  2217  086B               	movf	_prec^(0+128),w
  7757  2218  0020               	movlb	0	; select bank0
  7758  2219  00B1               	movwf	stoa@p
  7759                           
  7760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7761  221A  1BB2               	btfsc	stoa@p+1,7
  7762  221B  2A2D               	goto	l683
  7763  221C  0832               	movf	stoa@p+1,w
  7764  221D  3A80               	xorlw	128
  7765  221E  00FA               	movwf	??_stoa
  7766  221F  0834               	movf	stoa@l+1,w
  7767  2220  3A80               	xorlw	128
  7768  2221  027A               	subwf	??_stoa,w
  7769  2222  1D03               	skipz
  7770  2223  2A26               	goto	u8545
  7771  2224  0833               	movf	stoa@l,w
  7772  2225  0231               	subwf	stoa@p,w
  7773  2226                     u8545:	
  7774  2226  1803               	btfsc	3,0
  7775  2227  2A2D               	goto	l683
  7776  2228  0020               	movlb	0	; select bank0
  7777  2229  0832               	movf	stoa@p+1,w
  7778  222A  00B4               	movwf	stoa@l+1
  7779  222B  0831               	movf	stoa@p,w
  7780  222C  00B3               	movwf	stoa@l
  7781  222D                     l683:	
  7782                           
  7783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7784  222D  0020               	movlb	0	; select bank0
  7785  222E  0834               	movf	stoa@l+1,w
  7786  222F  00B2               	movwf	stoa@p+1
  7787  2230  0833               	movf	stoa@l,w
  7788  2231  00B1               	movwf	stoa@p
  7789                           
  7790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7791  2232  0022               	movlb	2	; select bank2
  7792  2233  0865               	movf	(_width+1)^(0+256),w
  7793  2234  0020               	movlb	0	; select bank0
  7794  2235  00AE               	movwf	stoa@w+1
  7795  2236  0022               	movlb	2	; select bank2
  7796  2237  0864               	movf	_width^(0+256),w
  7797  2238  0020               	movlb	0	; select bank0
  7798  2239  00AD               	movwf	stoa@w
  7799                           
  7800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7801  223A  0021               	movlb	1	; select bank1
  7802  223B  1C6D               	btfss	_flags^(0+128),0
  7803  223C  2A4F               	goto	l6485
  7804  223D  2A5C               	goto	l6487
  7805  223E                     l6481:	
  7806                           
  7807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7808  223E  3020               	movlw	32
  7809  223F  00F1               	movwf	fputc@c
  7810  2240  3000               	movlw	0
  7811  2241  00F2               	movwf	fputc@c+1
  7812  2242  0020               	movlb	0	; select bank0
  7813  2243  0821               	movf	stoa@fp+1,w
  7814  2244  00F4               	movwf	fputc@fp+1
  7815  2245  0820               	movf	stoa@fp,w
  7816  2246  00F3               	movwf	fputc@fp
  7817  2247  31AB  2317  31A1   	fcall	_fputc
  7818                           
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7820  224A  3001               	movlw	1
  7821  224B  0020               	movlb	0	; select bank0
  7822  224C  07B3               	addwf	stoa@l,f
  7823  224D  3000               	movlw	0
  7824  224E  3DB4               	addwfc	stoa@l+1,f
  7825  224F                     l6485:	
  7826                           
  7827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7828  224F  0020               	movlb	0	; select bank0
  7829  2250  0834               	movf	stoa@l+1,w
  7830  2251  3A80               	xorlw	128
  7831  2252  00FA               	movwf	??_stoa
  7832  2253  082E               	movf	stoa@w+1,w
  7833  2254  3A80               	xorlw	128
  7834  2255  027A               	subwf	??_stoa,w
  7835  2256  1D03               	skipz
  7836  2257  2A5A               	goto	u8565
  7837  2258  082D               	movf	stoa@w,w
  7838  2259  0233               	subwf	stoa@l,w
  7839  225A                     u8565:	
  7840  225A  1C03               	skipc
  7841  225B  2A3E               	goto	l6481
  7842  225C                     l6487:	
  7843                           
  7844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7845  225C  0020               	movlb	0	; select bank0
  7846  225D  01AB               	clrf	stoa@i
  7847  225E  01AC               	clrf	stoa@i+1
  7848  225F                     l6495:	
  7849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7850                           
  7851                           
  7852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7853  225F  082C               	movf	stoa@i+1,w
  7854  2260  3A80               	xorlw	128
  7855  2261  00FA               	movwf	??_stoa
  7856  2262  0832               	movf	stoa@p+1,w
  7857  2263  3A80               	xorlw	128
  7858  2264  027A               	subwf	??_stoa,w
  7859  2265  1D03               	skipz
  7860  2266  2A69               	goto	u8575
  7861  2267  0831               	movf	stoa@p,w
  7862  2268  022B               	subwf	stoa@i,w
  7863  2269                     u8575:	
  7864  2269  1803               	btfsc	3,0
  7865  226A  2A88               	goto	l692
  7866                           
  7867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7868  226B  0020               	movlb	0	; select bank0
  7869  226C  082F               	movf	stoa@cp,w
  7870  226D  0086               	movwf	6
  7871  226E  0830               	movf	stoa@cp+1,w
  7872  226F  0087               	movwf	7
  7873  2270  0801               	movf	1,w
  7874  2271  00FA               	movwf	??_stoa
  7875  2272  01FB               	clrf	??_stoa+1
  7876  2273  087A               	movf	??_stoa,w
  7877  2274  00F1               	movwf	fputc@c
  7878  2275  087B               	movf	??_stoa+1,w
  7879  2276  00F2               	movwf	fputc@c+1
  7880  2277  0821               	movf	stoa@fp+1,w
  7881  2278  00F4               	movwf	fputc@fp+1
  7882  2279  0820               	movf	stoa@fp,w
  7883  227A  00F3               	movwf	fputc@fp
  7884  227B  31AB  2317  31A1   	fcall	_fputc
  7885                           
  7886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7887  227E  3001               	movlw	1
  7888  227F  0020               	movlb	0	; select bank0
  7889  2280  07AF               	addwf	stoa@cp,f
  7890  2281  3000               	movlw	0
  7891  2282  3DB0               	addwfc	stoa@cp+1,f
  7892                           
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7894  2283  3001               	movlw	1
  7895  2284  07AB               	addwf	stoa@i,f
  7896  2285  3000               	movlw	0
  7897  2286  3DAC               	addwfc	stoa@i+1,f
  7898  2287  2A5F               	goto	l6495
  7899  2288                     l692:	
  7900                           
  7901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7902  2288  0021               	movlb	1	; select bank1
  7903  2289  186D               	btfsc	_flags^(0+128),0
  7904  228A  2A9D               	goto	l6503
  7905  228B  2AAA               	goto	l6505
  7906  228C                     l6499:	
  7907                           
  7908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7909  228C  3020               	movlw	32
  7910  228D  00F1               	movwf	fputc@c
  7911  228E  3000               	movlw	0
  7912  228F  00F2               	movwf	fputc@c+1
  7913  2290  0020               	movlb	0	; select bank0
  7914  2291  0821               	movf	stoa@fp+1,w
  7915  2292  00F4               	movwf	fputc@fp+1
  7916  2293  0820               	movf	stoa@fp,w
  7917  2294  00F3               	movwf	fputc@fp
  7918  2295  31AB  2317  31A1   	fcall	_fputc
  7919                           
  7920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7921  2298  3001               	movlw	1
  7922  2299  0020               	movlb	0	; select bank0
  7923  229A  07B3               	addwf	stoa@l,f
  7924  229B  3000               	movlw	0
  7925  229C  3DB4               	addwfc	stoa@l+1,f
  7926  229D                     l6503:	
  7927                           
  7928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7929  229D  0020               	movlb	0	; select bank0
  7930  229E  0834               	movf	stoa@l+1,w
  7931  229F  3A80               	xorlw	128
  7932  22A0  00FA               	movwf	??_stoa
  7933  22A1  082E               	movf	stoa@w+1,w
  7934  22A2  3A80               	xorlw	128
  7935  22A3  027A               	subwf	??_stoa,w
  7936  22A4  1D03               	skipz
  7937  22A5  2AA8               	goto	u8595
  7938  22A6  082D               	movf	stoa@w,w
  7939  22A7  0233               	subwf	stoa@l,w
  7940  22A8                     u8595:	
  7941  22A8  1C03               	skipc
  7942  22A9  2A8C               	goto	l6499
  7943  22AA                     l6505:	
  7944                           
  7945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7946  22AA  0020               	movlb	0	; select bank0
  7947  22AB  0834               	movf	stoa@l+1,w
  7948  22AC  00A1               	movwf	?_stoa+1
  7949  22AD  0833               	movf	stoa@l,w
  7950  22AE  00A0               	movwf	?_stoa
  7951  22AF  0008               	return
  7952  22B0                     __end_of_stoa:	
  7953                           
  7954                           	psect	text19
  7955  261C                     __ptext19:	
  7956 ;; *************** function _otoa *****************
  7957 ;; Defined at:
  7958 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7961 ;;		 -> vsnprintf@f(6), 
  7962 ;;  d               8   18[BANK0 ] unsigned long long 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  n               8   40[BANK0 ] unsigned long long 
  7965 ;;  i               2   48[BANK0 ] int 
  7966 ;;  w               2   38[BANK0 ] int 
  7967 ;;  t               2   36[BANK0 ] int 
  7968 ;;  p               2   34[BANK0 ] int 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  2   16[BANK0 ] int 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7978 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7979 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7980 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7981 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7982 ;;Total ram usage:       34 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    5
  7985 ;; This function calls:
  7986 ;;		_pad
  7987 ;; This function is called by:
  7988 ;;		_vfpfcnvrt
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _otoa
  7994  261C                     _otoa:	
  7995                           
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7997                           
  7998                           ;incstack = 0
  7999                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8000  261C  0021               	movlb	1	; select bank1
  8001  261D  1BEC               	btfsc	(_prec+1)^(0+128),7
  8002  261E  2E23               	goto	l661
  8003                           
  8004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8005  261F  30FD               	movlw	253
  8006  2620  05ED               	andwf	_flags^(0+128),f
  8007  2621  30FF               	movlw	255
  8008  2622  05EE               	andwf	(_flags+1)^(0+128),f
  8009  2623                     l661:	
  8010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8011                           
  8012                           
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8014  2623  086C               	movf	(_prec+1)^(0+128),w
  8015  2624  3A80               	xorlw	128
  8016  2625  0020               	movlb	0	; select bank0
  8017  2626  00BA               	movwf	??_otoa
  8018  2627  3080               	movlw	128
  8019  2628  023A               	subwf	??_otoa,w
  8020  2629  1D03               	skipz
  8021  262A  2E2E               	goto	u8425
  8022  262B  3001               	movlw	1
  8023  262C  0021               	movlb	1	; select bank1
  8024  262D  026B               	subwf	_prec^(0+128),w
  8025  262E                     u8425:	
  8026  262E  1803               	skipnc
  8027  262F  2E36               	goto	l6421
  8028  2630  3001               	movlw	1
  8029  2631  0020               	movlb	0	; select bank0
  8030  2632  00C2               	movwf	otoa@p
  8031  2633  3000               	movlw	0
  8032  2634  00C3               	movwf	otoa@p+1
  8033  2635  2E3E               	goto	l665
  8034  2636                     l6421:	
  8035  2636  0021               	movlb	1	; select bank1
  8036  2637  086C               	movf	(_prec+1)^(0+128),w
  8037  2638  0020               	movlb	0	; select bank0
  8038  2639  00C3               	movwf	otoa@p+1
  8039  263A  0021               	movlb	1	; select bank1
  8040  263B  086B               	movf	_prec^(0+128),w
  8041  263C  0020               	movlb	0	; select bank0
  8042  263D  00C2               	movwf	otoa@p
  8043  263E                     l665:	
  8044                           
  8045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8046  263E  0022               	movlb	2	; select bank2
  8047  263F  0865               	movf	(_width+1)^(0+256),w
  8048  2640  0020               	movlb	0	; select bank0
  8049  2641  00C7               	movwf	otoa@w+1
  8050  2642  0022               	movlb	2	; select bank2
  8051  2643  0864               	movf	_width^(0+256),w
  8052  2644  0020               	movlb	0	; select bank0
  8053  2645  00C6               	movwf	otoa@w
  8054                           
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8056  2646  0832               	movf	otoa@d,w
  8057  2647  00C8               	movwf	otoa@n
  8058  2648  0833               	movf	otoa@d+1,w
  8059  2649  00C9               	movwf	otoa@n+1
  8060  264A  0834               	movf	otoa@d+2,w
  8061  264B  00CA               	movwf	otoa@n+2
  8062  264C  0835               	movf	otoa@d+3,w
  8063  264D  00CB               	movwf	otoa@n+3
  8064  264E  0836               	movf	otoa@d+4,w
  8065  264F  00CC               	movwf	otoa@n+4
  8066  2650  0837               	movf	otoa@d+5,w
  8067  2651  00CD               	movwf	otoa@n+5
  8068  2652  0838               	movf	otoa@d+6,w
  8069  2653  00CE               	movwf	otoa@n+6
  8070  2654  0839               	movf	otoa@d+7,w
  8071  2655  00CF               	movwf	otoa@n+7
  8072                           
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8074  2656  301F               	movlw	31
  8075  2657  00D0               	movwf	otoa@i
  8076  2658  3000               	movlw	0
  8077  2659  00D1               	movwf	otoa@i+1
  8078                           
  8079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8080  265A  0024               	movlb	4	; select bank4
  8081  265B  01BF               	clrf	(_dbuf^(0+512)+31)
  8082                           
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8084  265C  0020               	movlb	0	; select bank0
  8085  265D  01C4               	clrf	otoa@t
  8086  265E  01C5               	clrf	otoa@t+1
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8089  265F  2ED3               	goto	l666
  8090  2660                     l6439:	
  8091  2660  0020               	movlb	0	; select bank0
  8092  2661  0848               	movf	otoa@n,w
  8093  2662  0449               	iorwf	otoa@n+1,w
  8094  2663  044A               	iorwf	otoa@n+2,w
  8095  2664  044B               	iorwf	otoa@n+3,w
  8096  2665  044C               	iorwf	otoa@n+4,w
  8097  2666  044D               	iorwf	otoa@n+5,w
  8098  2667  044E               	iorwf	otoa@n+6,w
  8099  2668  044F               	iorwf	otoa@n+7,w
  8100  2669  1D03               	skipz
  8101  266A  2E85               	goto	l6429
  8102  266B  0843               	movf	otoa@p+1,w
  8103  266C  3A80               	xorlw	128
  8104  266D  00BA               	movwf	??_otoa
  8105  266E  3080               	movlw	128
  8106  266F  023A               	subwf	??_otoa,w
  8107  2670  1D03               	skipz
  8108  2671  2E74               	goto	u8465
  8109  2672  3001               	movlw	1
  8110  2673  0242               	subwf	otoa@p,w
  8111  2674                     u8465:	
  8112  2674  1803               	skipnc
  8113  2675  2E85               	goto	l6429
  8114  2676  0020               	movlb	0	; select bank0
  8115  2677  0847               	movf	otoa@w+1,w
  8116  2678  3A80               	xorlw	128
  8117  2679  00BA               	movwf	??_otoa
  8118  267A  3080               	movlw	128
  8119  267B  023A               	subwf	??_otoa,w
  8120  267C  1D03               	skipz
  8121  267D  2E80               	goto	u8475
  8122  267E  3001               	movlw	1
  8123  267F  0246               	subwf	otoa@w,w
  8124  2680                     u8475:	
  8125  2680  1C03               	skipc
  8126  2681  2EDE               	goto	l672
  8127  2682  0021               	movlb	1	; select bank1
  8128  2683  1CED               	btfss	_flags^(0+128),1
  8129  2684  2EDE               	goto	l672
  8130  2685                     l6429:	
  8131                           
  8132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8133  2685  30FF               	movlw	255
  8134  2686  0020               	movlb	0	; select bank0
  8135  2687  07D0               	addwf	otoa@i,f
  8136  2688  30FF               	movlw	255
  8137  2689  3DD1               	addwfc	otoa@i+1,f
  8138                           
  8139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8140  268A  3007               	movlw	7
  8141  268B  0548               	andwf	otoa@n,w
  8142  268C  00C4               	movwf	otoa@t
  8143  268D  3000               	movlw	0
  8144  268E  0549               	andwf	otoa@n+1,w
  8145  268F  00C5               	movwf	otoa@t+1
  8146                           
  8147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8148  2690  0844               	movf	otoa@t,w
  8149  2691  3E30               	addlw	48
  8150  2692  00BA               	movwf	??_otoa
  8151  2693  0850               	movf	otoa@i,w
  8152  2694  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8153  2695  0086               	movwf	6
  8154  2696  3002               	movlw	2	; select bank4/5
  8155  2697  0087               	movwf	7
  8156  2698  083A               	movf	??_otoa,w
  8157  2699  0081               	movwf	1
  8158                           
  8159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8160  269A  30FF               	movlw	255
  8161  269B  07C2               	addwf	otoa@p,f
  8162  269C  30FF               	movlw	255
  8163  269D  3DC3               	addwfc	otoa@p+1,f
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8166  269E  30FF               	movlw	255
  8167  269F  07C6               	addwf	otoa@w,f
  8168  26A0  30FF               	movlw	255
  8169  26A1  3DC7               	addwfc	otoa@w+1,f
  8170                           
  8171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8172  26A2  3048               	movlw	low otoa@n
  8173  26A3  0086               	movwf	6
  8174  26A4  3000               	movlw	high otoa@n
  8175  26A5  0087               	movwf	7
  8176  26A6  3F40               	moviw [0]fsr1
  8177  26A7  00BA               	movwf	??_otoa
  8178  26A8  3F41               	moviw [1]fsr1
  8179  26A9  00BB               	movwf	??_otoa+1
  8180  26AA  3F42               	moviw [2]fsr1
  8181  26AB  00BC               	movwf	??_otoa+2
  8182  26AC  3F43               	moviw [3]fsr1
  8183  26AD  00BD               	movwf	??_otoa+3
  8184  26AE  3F44               	moviw [4]fsr1
  8185  26AF  00BE               	movwf	??_otoa+4
  8186  26B0  3F45               	moviw [5]fsr1
  8187  26B1  00BF               	movwf	??_otoa+5
  8188  26B2  3F46               	moviw [6]fsr1
  8189  26B3  00C0               	movwf	??_otoa+6
  8190  26B4  3F47               	moviw [7]fsr1
  8191  26B5  00C1               	movwf	??_otoa+7
  8192  26B6  3003               	movlw	3
  8193  26B7                     u8435:	
  8194  26B7  0020               	movlb	0	; select bank0
  8195  26B8  36C1               	lsrf	??_otoa+7,f
  8196  26B9  0CC0               	rrf	??_otoa+6,f
  8197  26BA  0CBF               	rrf	??_otoa+5,f
  8198  26BB  0CBE               	rrf	??_otoa+4,f
  8199  26BC  0CBD               	rrf	??_otoa+3,f
  8200  26BD  0CBC               	rrf	??_otoa+2,f
  8201  26BE  0CBB               	rrf	??_otoa+1,f
  8202  26BF  0CBA               	rrf	??_otoa,f
  8203  26C0  0B89               	decfsz	9,f
  8204  26C1  2EB7               	goto	u8435
  8205  26C2  0020               	movlb	0	; select bank0
  8206  26C3  0841               	movf	??_otoa+7,w
  8207  26C4  00CF               	movwf	otoa@n+7
  8208  26C5  0840               	movf	??_otoa+6,w
  8209  26C6  00CE               	movwf	otoa@n+6
  8210  26C7  083F               	movf	??_otoa+5,w
  8211  26C8  00CD               	movwf	otoa@n+5
  8212  26C9  083E               	movf	??_otoa+4,w
  8213  26CA  00CC               	movwf	otoa@n+4
  8214  26CB  083D               	movf	??_otoa+3,w
  8215  26CC  00CB               	movwf	otoa@n+3
  8216  26CD  083C               	movf	??_otoa+2,w
  8217  26CE  00CA               	movwf	otoa@n+2
  8218  26CF  083B               	movf	??_otoa+1,w
  8219  26D0  00C9               	movwf	otoa@n+1
  8220  26D1  083A               	movf	??_otoa,w
  8221  26D2  00C8               	movwf	otoa@n
  8222  26D3                     l666:	
  8223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8224                           
  8225                           
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8227  26D3  0851               	movf	otoa@i+1,w
  8228  26D4  3A80               	xorlw	128
  8229  26D5  00BA               	movwf	??_otoa
  8230  26D6  3080               	movlw	128
  8231  26D7  023A               	subwf	??_otoa,w
  8232  26D8  1D03               	skipz
  8233  26D9  2EDC               	goto	u8445
  8234  26DA  3001               	movlw	1
  8235  26DB  0250               	subwf	otoa@i,w
  8236  26DC                     u8445:	
  8237  26DC  1803               	btfsc	3,0
  8238  26DD  2E60               	goto	l6439
  8239  26DE                     l672:	
  8240                           
  8241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8242  26DE  0021               	movlb	1	; select bank1
  8243  26DF  1E6D               	btfss	_flags^(0+128),4
  8244  26E0  2EF7               	goto	l6455
  8245  26E1  0020               	movlb	0	; select bank0
  8246  26E2  0844               	movf	otoa@t,w
  8247  26E3  0445               	iorwf	otoa@t+1,w
  8248  26E4  1903               	btfsc	3,2
  8249  26E5  2EF7               	goto	l6455
  8250                           
  8251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8252  26E6  30FF               	movlw	255
  8253  26E7  07D0               	addwf	otoa@i,f
  8254  26E8  30FF               	movlw	255
  8255  26E9  3DD1               	addwfc	otoa@i+1,f
  8256                           
  8257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8258  26EA  3030               	movlw	48
  8259  26EB  00BA               	movwf	??_otoa
  8260  26EC  0850               	movf	otoa@i,w
  8261  26ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8262  26EE  0086               	movwf	6
  8263  26EF  3002               	movlw	2	; select bank4/5
  8264  26F0  0087               	movwf	7
  8265  26F1  083A               	movf	??_otoa,w
  8266  26F2  0081               	movwf	1
  8267                           
  8268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8269  26F3  30FF               	movlw	255
  8270  26F4  07C6               	addwf	otoa@w,f
  8271  26F5  30FF               	movlw	255
  8272  26F6  3DC7               	addwfc	otoa@w+1,f
  8273  26F7                     l6455:	
  8274                           
  8275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8276  26F7  0020               	movlb	0	; select bank0
  8277  26F8  0831               	movf	otoa@fp+1,w
  8278  26F9  00A7               	movwf	pad@fp+1
  8279  26FA  0830               	movf	otoa@fp,w
  8280  26FB  00A6               	movwf	pad@fp
  8281  26FC  0850               	movf	otoa@i,w
  8282  26FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8283  26FE  00BA               	movwf	??_otoa
  8284  26FF  083A               	movf	??_otoa,w
  8285  2700  00A8               	movwf	pad@buf
  8286  2701  0847               	movf	otoa@w+1,w
  8287  2702  00AA               	movwf	pad@p+1
  8288  2703  0846               	movf	otoa@w,w
  8289  2704  00A9               	movwf	pad@p
  8290  2705  31AA  2274         	fcall	_pad
  8291  2707  0020               	movlb	0	; select bank0
  8292  2708  0827               	movf	?_pad+1,w
  8293  2709  00B1               	movwf	?_otoa+1
  8294  270A  0826               	movf	?_pad,w
  8295  270B  00B0               	movwf	?_otoa
  8296  270C  0008               	return
  8297  270D                     __end_of_otoa:	
  8298                           
  8299                           	psect	text20
  8300  1A35                     __ptext20:	
  8301 ;; *************** function _dtoa *****************
  8302 ;; Defined at:
  8303 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8306 ;;		 -> vsnprintf@f(6), 
  8307 ;;  d               8   18[BANK0 ] long long 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  n               8   37[BANK0 ] long long 
  8310 ;;  i               2   45[BANK0 ] int 
  8311 ;;  s               2   35[BANK0 ] int 
  8312 ;;  w               2   33[BANK0 ] int 
  8313 ;;  p               2   31[BANK0 ] int 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  2   16[BANK0 ] int 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8323 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8324 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8325 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8326 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8327 ;;Total ram usage:       31 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    5
  8330 ;; This function calls:
  8331 ;;		___aodiv
  8332 ;;		___aomod
  8333 ;;		_abs
  8334 ;;		_pad
  8335 ;; This function is called by:
  8336 ;;		_vfpfcnvrt
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _dtoa
  8342  1A35                     _dtoa:	
  8343                           
  8344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8348  1A35  0020               	movlb	0	; select bank0
  8349  1A36  0832               	movf	dtoa@d,w
  8350  1A37  00C5               	movwf	dtoa@n
  8351  1A38  0833               	movf	dtoa@d+1,w
  8352  1A39  00C6               	movwf	dtoa@n+1
  8353  1A3A  0834               	movf	dtoa@d+2,w
  8354  1A3B  00C7               	movwf	dtoa@n+2
  8355  1A3C  0835               	movf	dtoa@d+3,w
  8356  1A3D  00C8               	movwf	dtoa@n+3
  8357  1A3E  0836               	movf	dtoa@d+4,w
  8358  1A3F  00C9               	movwf	dtoa@n+4
  8359  1A40  0837               	movf	dtoa@d+5,w
  8360  1A41  00CA               	movwf	dtoa@n+5
  8361  1A42  0838               	movf	dtoa@d+6,w
  8362  1A43  00CB               	movwf	dtoa@n+6
  8363  1A44  0839               	movf	dtoa@d+7,w
  8364  1A45  00CC               	movwf	dtoa@n+7
  8365                           
  8366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8367  1A46  3045               	movlw	low dtoa@n
  8368  1A47  0086               	movwf	6
  8369  1A48  3000               	movlw	high dtoa@n
  8370  1A49  0087               	movwf	7
  8371  1A4A  3F47               	moviw [7]fsr1
  8372  1A4B  00BA               	movwf	??_dtoa
  8373  1A4C  1FBA               	btfss	??_dtoa,7
  8374  1A4D  2A50               	goto	u8250
  8375  1A4E  3001               	movlw	1
  8376  1A4F  2A51               	goto	u8260
  8377  1A50                     u8250:	
  8378  1A50  3000               	movlw	0
  8379  1A51                     u8260:	
  8380  1A51  0020               	movlb	0	; select bank0
  8381  1A52  00BB               	movwf	??_dtoa+1
  8382  1A53  01BC               	clrf	??_dtoa+2
  8383  1A54  083B               	movf	??_dtoa+1,w
  8384  1A55  00C3               	movwf	dtoa@s
  8385  1A56  083C               	movf	??_dtoa+2,w
  8386  1A57  00C4               	movwf	dtoa@s+1
  8387                           
  8388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8389  1A58  0843               	movf	dtoa@s,w
  8390  1A59  0444               	iorwf	dtoa@s+1,w
  8391  1A5A  1903               	btfsc	3,2
  8392  1A5B  2A7A               	goto	l635
  8393                           
  8394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8395  1A5C  09C5               	comf	dtoa@n,f
  8396  1A5D  09C6               	comf	dtoa@n+1,f
  8397  1A5E  09C7               	comf	dtoa@n+2,f
  8398  1A5F  09C8               	comf	dtoa@n+3,f
  8399  1A60  09C9               	comf	dtoa@n+4,f
  8400  1A61  09CA               	comf	dtoa@n+5,f
  8401  1A62  09CB               	comf	dtoa@n+6,f
  8402  1A63  09CC               	comf	dtoa@n+7,f
  8403  1A64  0AC5               	incf	dtoa@n,f
  8404  1A65  1D03               	skipz
  8405  1A66  2A7A               	goto	l635
  8406  1A67  0AC6               	incf	dtoa@n+1,f
  8407  1A68  1D03               	skipz
  8408  1A69  2A7A               	goto	l635
  8409  1A6A  0AC7               	incf	dtoa@n+2,f
  8410  1A6B  1D03               	skipz
  8411  1A6C  2A7A               	goto	l635
  8412  1A6D  0AC8               	incf	dtoa@n+3,f
  8413  1A6E  1D03               	skipz
  8414  1A6F  2A7A               	goto	l635
  8415  1A70  0AC9               	incf	dtoa@n+4,f
  8416  1A71  1D03               	skipz
  8417  1A72  2A7A               	goto	l635
  8418  1A73  0ACA               	incf	dtoa@n+5,f
  8419  1A74  1D03               	skipz
  8420  1A75  2A7A               	goto	l635
  8421  1A76  0ACB               	incf	dtoa@n+6,f
  8422  1A77  1D03               	skipz
  8423  1A78  2A7A               	goto	l635
  8424  1A79  0ACC               	incf	dtoa@n+7,f
  8425  1A7A                     l635:	
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8427                           
  8428                           
  8429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8430  1A7A  0021               	movlb	1	; select bank1
  8431  1A7B  1BEC               	btfsc	(_prec+1)^(0+128),7
  8432  1A7C  2A81               	goto	l636
  8433                           
  8434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8435  1A7D  30FD               	movlw	253
  8436  1A7E  05ED               	andwf	_flags^(0+128),f
  8437  1A7F  30FF               	movlw	255
  8438  1A80  05EE               	andwf	(_flags+1)^(0+128),f
  8439  1A81                     l636:	
  8440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8441                           
  8442                           
  8443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8444  1A81  086C               	movf	(_prec+1)^(0+128),w
  8445  1A82  3A80               	xorlw	128
  8446  1A83  0020               	movlb	0	; select bank0
  8447  1A84  00BA               	movwf	??_dtoa
  8448  1A85  3080               	movlw	128
  8449  1A86  023A               	subwf	??_dtoa,w
  8450  1A87  1D03               	skipz
  8451  1A88  2A8C               	goto	u8305
  8452  1A89  3001               	movlw	1
  8453  1A8A  0021               	movlb	1	; select bank1
  8454  1A8B  026B               	subwf	_prec^(0+128),w
  8455  1A8C                     u8305:	
  8456  1A8C  1803               	skipnc
  8457  1A8D  2A94               	goto	l6369
  8458  1A8E  3001               	movlw	1
  8459  1A8F  0020               	movlb	0	; select bank0
  8460  1A90  00BF               	movwf	dtoa@p
  8461  1A91  3000               	movlw	0
  8462  1A92  00C0               	movwf	dtoa@p+1
  8463  1A93  2A9C               	goto	l640
  8464  1A94                     l6369:	
  8465  1A94  0021               	movlb	1	; select bank1
  8466  1A95  086C               	movf	(_prec+1)^(0+128),w
  8467  1A96  0020               	movlb	0	; select bank0
  8468  1A97  00C0               	movwf	dtoa@p+1
  8469  1A98  0021               	movlb	1	; select bank1
  8470  1A99  086B               	movf	_prec^(0+128),w
  8471  1A9A  0020               	movlb	0	; select bank0
  8472  1A9B  00BF               	movwf	dtoa@p
  8473  1A9C                     l640:	
  8474                           
  8475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8476  1A9C  0022               	movlb	2	; select bank2
  8477  1A9D  0865               	movf	(_width+1)^(0+256),w
  8478  1A9E  0020               	movlb	0	; select bank0
  8479  1A9F  00C2               	movwf	dtoa@w+1
  8480  1AA0  0022               	movlb	2	; select bank2
  8481  1AA1  0864               	movf	_width^(0+256),w
  8482  1AA2  0020               	movlb	0	; select bank0
  8483  1AA3  00C1               	movwf	dtoa@w
  8484                           
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8486  1AA4  0843               	movf	dtoa@s,w
  8487  1AA5  0444               	iorwf	dtoa@s+1,w
  8488  1AA6  1D03               	btfss	3,2
  8489  1AA7  2AAB               	goto	l6375
  8490  1AA8  0021               	movlb	1	; select bank1
  8491  1AA9  1D6D               	btfss	_flags^(0+128),2
  8492  1AAA  2AB0               	goto	l641
  8493  1AAB                     l6375:	
  8494                           
  8495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8496  1AAB  30FF               	movlw	255
  8497  1AAC  0020               	movlb	0	; select bank0
  8498  1AAD  07C1               	addwf	dtoa@w,f
  8499  1AAE  30FF               	movlw	255
  8500  1AAF  3DC2               	addwfc	dtoa@w+1,f
  8501  1AB0                     l641:	
  8502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8503                           
  8504                           
  8505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8506  1AB0  301F               	movlw	31
  8507  1AB1  0020               	movlb	0	; select bank0
  8508  1AB2  00CD               	movwf	dtoa@i
  8509  1AB3  3000               	movlw	0
  8510  1AB4  00CE               	movwf	dtoa@i+1
  8511                           
  8512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8513  1AB5  0024               	movlb	4	; select bank4
  8514  1AB6  01BF               	clrf	(_dbuf^(0+512)+31)
  8515                           
  8516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8517  1AB7  2B46               	goto	l644
  8518  1AB8                     l6389:	
  8519  1AB8  0020               	movlb	0	; select bank0
  8520  1AB9  0845               	movf	dtoa@n,w
  8521  1ABA  0446               	iorwf	dtoa@n+1,w
  8522  1ABB  0447               	iorwf	dtoa@n+2,w
  8523  1ABC  0448               	iorwf	dtoa@n+3,w
  8524  1ABD  0449               	iorwf	dtoa@n+4,w
  8525  1ABE  044A               	iorwf	dtoa@n+5,w
  8526  1ABF  044B               	iorwf	dtoa@n+6,w
  8527  1AC0  044C               	iorwf	dtoa@n+7,w
  8528  1AC1  1D03               	skipz
  8529  1AC2  2ADD               	goto	l6379
  8530  1AC3  0840               	movf	dtoa@p+1,w
  8531  1AC4  3A80               	xorlw	128
  8532  1AC5  00BA               	movwf	??_dtoa
  8533  1AC6  3080               	movlw	128
  8534  1AC7  023A               	subwf	??_dtoa,w
  8535  1AC8  1D03               	skipz
  8536  1AC9  2ACC               	goto	u8355
  8537  1ACA  3001               	movlw	1
  8538  1ACB  023F               	subwf	dtoa@p,w
  8539  1ACC                     u8355:	
  8540  1ACC  1803               	skipnc
  8541  1ACD  2ADD               	goto	l6379
  8542  1ACE  0020               	movlb	0	; select bank0
  8543  1ACF  0842               	movf	dtoa@w+1,w
  8544  1AD0  3A80               	xorlw	128
  8545  1AD1  00BA               	movwf	??_dtoa
  8546  1AD2  3080               	movlw	128
  8547  1AD3  023A               	subwf	??_dtoa,w
  8548  1AD4  1D03               	skipz
  8549  1AD5  2AD8               	goto	u8365
  8550  1AD6  3001               	movlw	1
  8551  1AD7  0241               	subwf	dtoa@w,w
  8552  1AD8                     u8365:	
  8553  1AD8  1C03               	skipc
  8554  1AD9  2B52               	goto	l6397
  8555  1ADA  0021               	movlb	1	; select bank1
  8556  1ADB  1CED               	btfss	_flags^(0+128),1
  8557  1ADC  2B52               	goto	l6397
  8558  1ADD                     l6379:	
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8561  1ADD  30FF               	movlw	255
  8562  1ADE  0020               	movlb	0	; select bank0
  8563  1ADF  07CD               	addwf	dtoa@i,f
  8564  1AE0  30FF               	movlw	255
  8565  1AE1  3DCE               	addwfc	dtoa@i+1,f
  8566                           
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8568  1AE2  300A               	movlw	10
  8569  1AE3  00A0               	movwf	___aomod@divisor
  8570  1AE4  01A1               	clrf	___aomod@divisor+1
  8571  1AE5  01A2               	clrf	___aomod@divisor+2
  8572  1AE6  01A3               	clrf	___aomod@divisor+3
  8573  1AE7  01A4               	clrf	___aomod@divisor+4
  8574  1AE8  01A5               	clrf	___aomod@divisor+5
  8575  1AE9  01A6               	clrf	___aomod@divisor+6
  8576  1AEA  01A7               	clrf	___aomod@divisor+7
  8577  1AEB  0845               	movf	dtoa@n,w
  8578  1AEC  00A8               	movwf	___aomod@dividend
  8579  1AED  0846               	movf	dtoa@n+1,w
  8580  1AEE  00A9               	movwf	___aomod@dividend+1
  8581  1AEF  0847               	movf	dtoa@n+2,w
  8582  1AF0  00AA               	movwf	___aomod@dividend+2
  8583  1AF1  0848               	movf	dtoa@n+3,w
  8584  1AF2  00AB               	movwf	___aomod@dividend+3
  8585  1AF3  0849               	movf	dtoa@n+4,w
  8586  1AF4  00AC               	movwf	___aomod@dividend+4
  8587  1AF5  084A               	movf	dtoa@n+5,w
  8588  1AF6  00AD               	movwf	___aomod@dividend+5
  8589  1AF7  084B               	movf	dtoa@n+6,w
  8590  1AF8  00AE               	movwf	___aomod@dividend+6
  8591  1AF9  084C               	movf	dtoa@n+7,w
  8592  1AFA  00AF               	movwf	___aomod@dividend+7
  8593  1AFB  31A4  245F  319A   	fcall	___aomod
  8594  1AFE  0020               	movlb	0	; select bank0
  8595  1AFF  0821               	movf	?___aomod+1,w
  8596  1B00  00F5               	movwf	abs@a+1
  8597  1B01  0820               	movf	?___aomod,w
  8598  1B02  00F4               	movwf	abs@a
  8599  1B03  31B7  276E  319A   	fcall	_abs
  8600  1B06  0874               	movf	?_abs,w
  8601  1B07  3E30               	addlw	48
  8602  1B08  0020               	movlb	0	; select bank0
  8603  1B09  00BA               	movwf	??_dtoa
  8604  1B0A  084D               	movf	dtoa@i,w
  8605  1B0B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8606  1B0C  0086               	movwf	6
  8607  1B0D  3002               	movlw	2	; select bank4/5
  8608  1B0E  0087               	movwf	7
  8609  1B0F  083A               	movf	??_dtoa,w
  8610  1B10  0081               	movwf	1
  8611                           
  8612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8613  1B11  30FF               	movlw	255
  8614  1B12  07BF               	addwf	dtoa@p,f
  8615  1B13  30FF               	movlw	255
  8616  1B14  3DC0               	addwfc	dtoa@p+1,f
  8617                           
  8618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8619  1B15  30FF               	movlw	255
  8620  1B16  07C1               	addwf	dtoa@w,f
  8621  1B17  30FF               	movlw	255
  8622  1B18  3DC2               	addwfc	dtoa@w+1,f
  8623                           
  8624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8625  1B19  300A               	movlw	10
  8626  1B1A  00A0               	movwf	___aodiv@divisor
  8627  1B1B  01A1               	clrf	___aodiv@divisor+1
  8628  1B1C  01A2               	clrf	___aodiv@divisor+2
  8629  1B1D  01A3               	clrf	___aodiv@divisor+3
  8630  1B1E  01A4               	clrf	___aodiv@divisor+4
  8631  1B1F  01A5               	clrf	___aodiv@divisor+5
  8632  1B20  01A6               	clrf	___aodiv@divisor+6
  8633  1B21  01A7               	clrf	___aodiv@divisor+7
  8634  1B22  0845               	movf	dtoa@n,w
  8635  1B23  00A8               	movwf	___aodiv@dividend
  8636  1B24  0846               	movf	dtoa@n+1,w
  8637  1B25  00A9               	movwf	___aodiv@dividend+1
  8638  1B26  0847               	movf	dtoa@n+2,w
  8639  1B27  00AA               	movwf	___aodiv@dividend+2
  8640  1B28  0848               	movf	dtoa@n+3,w
  8641  1B29  00AB               	movwf	___aodiv@dividend+3
  8642  1B2A  0849               	movf	dtoa@n+4,w
  8643  1B2B  00AC               	movwf	___aodiv@dividend+4
  8644  1B2C  084A               	movf	dtoa@n+5,w
  8645  1B2D  00AD               	movwf	___aodiv@dividend+5
  8646  1B2E  084B               	movf	dtoa@n+6,w
  8647  1B2F  00AE               	movwf	___aodiv@dividend+6
  8648  1B30  084C               	movf	dtoa@n+7,w
  8649  1B31  00AF               	movwf	___aodiv@dividend+7
  8650  1B32  31A7  270D  319A   	fcall	___aodiv
  8651  1B35  0020               	movlb	0	; select bank0
  8652  1B36  0820               	movf	?___aodiv,w
  8653  1B37  00C5               	movwf	dtoa@n
  8654  1B38  0821               	movf	?___aodiv+1,w
  8655  1B39  00C6               	movwf	dtoa@n+1
  8656  1B3A  0822               	movf	?___aodiv+2,w
  8657  1B3B  00C7               	movwf	dtoa@n+2
  8658  1B3C  0823               	movf	?___aodiv+3,w
  8659  1B3D  00C8               	movwf	dtoa@n+3
  8660  1B3E  0824               	movf	?___aodiv+4,w
  8661  1B3F  00C9               	movwf	dtoa@n+4
  8662  1B40  0825               	movf	?___aodiv+5,w
  8663  1B41  00CA               	movwf	dtoa@n+5
  8664  1B42  0826               	movf	?___aodiv+6,w
  8665  1B43  00CB               	movwf	dtoa@n+6
  8666  1B44  0827               	movf	?___aodiv+7,w
  8667  1B45  00CC               	movwf	dtoa@n+7
  8668  1B46                     l644:	
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  8670                           
  8671                           
  8672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8673  1B46  0020               	movlb	0	; select bank0
  8674  1B47  084E               	movf	dtoa@i+1,w
  8675  1B48  3A80               	xorlw	128
  8676  1B49  00BA               	movwf	??_dtoa
  8677  1B4A  3080               	movlw	128
  8678  1B4B  023A               	subwf	??_dtoa,w
  8679  1B4C  1D03               	skipz
  8680  1B4D  2B50               	goto	u8335
  8681  1B4E  3001               	movlw	1
  8682  1B4F  024D               	subwf	dtoa@i,w
  8683  1B50                     u8335:	
  8684  1B50  1803               	btfsc	3,0
  8685  1B51  2AB8               	goto	l6389
  8686  1B52                     l6397:	
  8687                           
  8688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8689  1B52  0020               	movlb	0	; select bank0
  8690  1B53  0843               	movf	dtoa@s,w
  8691  1B54  0444               	iorwf	dtoa@s+1,w
  8692  1B55  1D03               	btfss	3,2
  8693  1B56  2B5A               	goto	l6401
  8694  1B57  0021               	movlb	1	; select bank1
  8695  1B58  1D6D               	btfss	_flags^(0+128),2
  8696  1B59  2B72               	goto	l6411
  8697  1B5A                     l6401:	
  8698                           
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8700  1B5A  30FF               	movlw	255
  8701  1B5B  0020               	movlb	0	; select bank0
  8702  1B5C  07CD               	addwf	dtoa@i,f
  8703  1B5D  30FF               	movlw	255
  8704  1B5E  3DCE               	addwfc	dtoa@i+1,f
  8705                           
  8706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8707  1B5F  0843               	movf	dtoa@s,w
  8708  1B60  0444               	iorwf	dtoa@s+1,w
  8709  1B61  1D03               	btfss	3,2
  8710  1B62  2B65               	goto	l6407
  8711  1B63  302B               	movlw	43
  8712  1B64  2B66               	goto	L2
  8713  1B65                     l6407:	
  8714  1B65  302D               	movlw	45
  8715  1B66                     L2:	
  8716  1B66  00BD               	movwf	_dtoa$1191
  8717  1B67  3000               	movlw	0
  8718  1B68  00BE               	movwf	_dtoa$1191+1
  8719  1B69  083D               	movf	_dtoa$1191,w
  8720  1B6A  00BA               	movwf	??_dtoa
  8721  1B6B  084D               	movf	dtoa@i,w
  8722  1B6C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8723  1B6D  0086               	movwf	6
  8724  1B6E  3002               	movlw	2	; select bank4/5
  8725  1B6F  0087               	movwf	7
  8726  1B70  083A               	movf	??_dtoa,w
  8727  1B71  0081               	movwf	1
  8728  1B72                     l6411:	
  8729                           
  8730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8731  1B72  0020               	movlb	0	; select bank0
  8732  1B73  0831               	movf	dtoa@fp+1,w
  8733  1B74  00A7               	movwf	pad@fp+1
  8734  1B75  0830               	movf	dtoa@fp,w
  8735  1B76  00A6               	movwf	pad@fp
  8736  1B77  084D               	movf	dtoa@i,w
  8737  1B78  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8738  1B79  00BA               	movwf	??_dtoa
  8739  1B7A  083A               	movf	??_dtoa,w
  8740  1B7B  00A8               	movwf	pad@buf
  8741  1B7C  0842               	movf	dtoa@w+1,w
  8742  1B7D  00AA               	movwf	pad@p+1
  8743  1B7E  0841               	movf	dtoa@w,w
  8744  1B7F  00A9               	movwf	pad@p
  8745  1B80  31AA  2274         	fcall	_pad
  8746  1B82  0020               	movlb	0	; select bank0
  8747  1B83  0827               	movf	?_pad+1,w
  8748  1B84  00B1               	movwf	?_dtoa+1
  8749  1B85  0826               	movf	?_pad,w
  8750  1B86  00B0               	movwf	?_dtoa
  8751  1B87  0008               	return
  8752  1B88                     __end_of_dtoa:	
  8753                           
  8754                           	psect	text21
  8755  376E                     __ptext21:	
  8756 ;; *************** function _abs *****************
  8757 ;; Defined at:
  8758 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  a               2    4[COMMON] int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  2    4[COMMON] int 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8776 ;;Total ram usage:        4 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_dtoa
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           
  8787                           ;psect for function _abs
  8788  376E                     _abs:	
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in _abs: [wreg+status,2+status,0]
  8792  376E  0875               	movf	abs@a+1,w
  8793  376F  3A80               	xorlw	128
  8794  3770  00F6               	movwf	??_abs
  8795  3771  3080               	movlw	128
  8796  3772  0276               	subwf	??_abs,w
  8797  3773  1D03               	skipz
  8798  3774  2F77               	goto	u7785
  8799  3775  3001               	movlw	1
  8800  3776  0274               	subwf	abs@a,w
  8801  3777                     u7785:	
  8802  3777  1803               	skipnc
  8803  3778  0008               	return
  8804  3779  0974               	comf	abs@a,w
  8805  377A  00F6               	movwf	??_abs
  8806  377B  0975               	comf	abs@a+1,w
  8807  377C  00F7               	movwf	??_abs+1
  8808  377D  0AF6               	incf	??_abs,f
  8809  377E  1903               	skipnz
  8810  377F  0AF7               	incf	??_abs+1,f
  8811  3780  0876               	movf	??_abs,w
  8812  3781  00F4               	movwf	?_abs
  8813  3782  0877               	movf	??_abs+1,w
  8814  3783  00F5               	movwf	?_abs+1
  8815  3784  0008               	return
  8816  3785                     __end_of_abs:	
  8817                           
  8818                           	psect	text22
  8819  245F                     __ptext22:	
  8820 ;; *************** function ___aomod *****************
  8821 ;; Defined at:
  8822 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  divisor         8    0[BANK0 ] long long 
  8825 ;;  dividend        8    8[BANK0 ] long long 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  sign            1    3[COMMON] unsigned char 
  8828 ;;  counter         1    2[COMMON] unsigned char 
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  8    0[BANK0 ] long long 
  8831 ;; Registers used:
  8832 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8838 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8841 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8842 ;;Total ram usage:       19 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    1
  8845 ;; This function calls:
  8846 ;;		Nothing
  8847 ;; This function is called by:
  8848 ;;		_dtoa
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           
  8853                           ;psect for function ___aomod
  8854  245F                     ___aomod:	
  8855                           
  8856                           ;incstack = 0
  8857                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  8858  245F  01F3               	clrf	___aomod@sign
  8859  2460  3028               	movlw	low ___aomod@dividend
  8860  2461  0086               	movwf	6
  8861  2462  3000               	movlw	high ___aomod@dividend
  8862  2463  0087               	movwf	7
  8863  2464  3F47               	moviw [7]fsr1
  8864  2465  00F1               	movwf	??___aomod
  8865  2466  1FF1               	btfss	??___aomod,7
  8866  2467  2C89               	goto	l6269
  8867  2468  0020               	movlb	0	; select bank0
  8868  2469  09A8               	comf	___aomod@dividend,f
  8869  246A  09A9               	comf	___aomod@dividend+1,f
  8870  246B  09AA               	comf	___aomod@dividend+2,f
  8871  246C  09AB               	comf	___aomod@dividend+3,f
  8872  246D  09AC               	comf	___aomod@dividend+4,f
  8873  246E  09AD               	comf	___aomod@dividend+5,f
  8874  246F  09AE               	comf	___aomod@dividend+6,f
  8875  2470  09AF               	comf	___aomod@dividend+7,f
  8876  2471  0AA8               	incf	___aomod@dividend,f
  8877  2472  1D03               	skipz
  8878  2473  2C87               	goto	u804lld
  8879  2474  0AA9               	incf	___aomod@dividend+1,f
  8880  2475  1D03               	skipz
  8881  2476  2C87               	goto	u804lld
  8882  2477  0AAA               	incf	___aomod@dividend+2,f
  8883  2478  1D03               	skipz
  8884  2479  2C87               	goto	u804lld
  8885  247A  0AAB               	incf	___aomod@dividend+3,f
  8886  247B  1D03               	skipz
  8887  247C  2C87               	goto	u804lld
  8888  247D  0AAC               	incf	___aomod@dividend+4,f
  8889  247E  1D03               	skipz
  8890  247F  2C87               	goto	u804lld
  8891  2480  0AAD               	incf	___aomod@dividend+5,f
  8892  2481  1D03               	skipz
  8893  2482  2C87               	goto	u804lld
  8894  2483  0AAE               	incf	___aomod@dividend+6,f
  8895  2484  1D03               	skipz
  8896  2485  2C87               	goto	u804lld
  8897  2486  0AAF               	incf	___aomod@dividend+7,f
  8898  2487                     u804lld:	
  8899  2487  01F3               	clrf	___aomod@sign
  8900  2488  0AF3               	incf	___aomod@sign,f
  8901  2489                     l6269:	
  8902  2489  3020               	movlw	low ___aomod@divisor
  8903  248A  0086               	movwf	6
  8904  248B  3000               	movlw	high ___aomod@divisor
  8905  248C  0087               	movwf	7
  8906  248D  3F47               	moviw [7]fsr1
  8907  248E  00F1               	movwf	??___aomod
  8908  248F  1FF1               	btfss	??___aomod,7
  8909  2490  2CB0               	goto	l6273
  8910  2491  0020               	movlb	0	; select bank0
  8911  2492  09A0               	comf	___aomod@divisor,f
  8912  2493  09A1               	comf	___aomod@divisor+1,f
  8913  2494  09A2               	comf	___aomod@divisor+2,f
  8914  2495  09A3               	comf	___aomod@divisor+3,f
  8915  2496  09A4               	comf	___aomod@divisor+4,f
  8916  2497  09A5               	comf	___aomod@divisor+5,f
  8917  2498  09A6               	comf	___aomod@divisor+6,f
  8918  2499  09A7               	comf	___aomod@divisor+7,f
  8919  249A  0AA0               	incf	___aomod@divisor,f
  8920  249B  1D03               	skipz
  8921  249C  2CB0               	goto	l6273
  8922  249D  0AA1               	incf	___aomod@divisor+1,f
  8923  249E  1D03               	skipz
  8924  249F  2CB0               	goto	l6273
  8925  24A0  0AA2               	incf	___aomod@divisor+2,f
  8926  24A1  1D03               	skipz
  8927  24A2  2CB0               	goto	l6273
  8928  24A3  0AA3               	incf	___aomod@divisor+3,f
  8929  24A4  1D03               	skipz
  8930  24A5  2CB0               	goto	l6273
  8931  24A6  0AA4               	incf	___aomod@divisor+4,f
  8932  24A7  1D03               	skipz
  8933  24A8  2CB0               	goto	l6273
  8934  24A9  0AA5               	incf	___aomod@divisor+5,f
  8935  24AA  1D03               	skipz
  8936  24AB  2CB0               	goto	l6273
  8937  24AC  0AA6               	incf	___aomod@divisor+6,f
  8938  24AD  1D03               	skipz
  8939  24AE  2CB0               	goto	l6273
  8940  24AF  0AA7               	incf	___aomod@divisor+7,f
  8941  24B0                     l6273:	
  8942  24B0  0020               	movlb	0	; select bank0
  8943  24B1  0820               	movf	___aomod@divisor,w
  8944  24B2  0421               	iorwf	___aomod@divisor+1,w
  8945  24B3  0422               	iorwf	___aomod@divisor+2,w
  8946  24B4  0423               	iorwf	___aomod@divisor+3,w
  8947  24B5  0424               	iorwf	___aomod@divisor+4,w
  8948  24B6  0425               	iorwf	___aomod@divisor+5,w
  8949  24B7  0426               	iorwf	___aomod@divisor+6,w
  8950  24B8  0427               	iorwf	___aomod@divisor+7,w
  8951  24B9  1903               	skipnz
  8952  24BA  2D08               	goto	l6289
  8953  24BB  01F2               	clrf	___aomod@counter
  8954  24BC  0AF2               	incf	___aomod@counter,f
  8955  24BD                     l6281:	
  8956  24BD  1BA7               	btfsc	___aomod@divisor+7,7
  8957  24BE  2CCC               	goto	l6283
  8958  24BF  35A0               	lslf	___aomod@divisor,f
  8959  24C0  0DA1               	rlf	___aomod@divisor+1,f
  8960  24C1  0DA2               	rlf	___aomod@divisor+2,f
  8961  24C2  0DA3               	rlf	___aomod@divisor+3,f
  8962  24C3  0DA4               	rlf	___aomod@divisor+4,f
  8963  24C4  0DA5               	rlf	___aomod@divisor+5,f
  8964  24C5  0DA6               	rlf	___aomod@divisor+6,f
  8965  24C6  0DA7               	rlf	___aomod@divisor+7,f
  8966  24C7  3001               	movlw	1
  8967  24C8  00F1               	movwf	??___aomod
  8968  24C9  0871               	movf	??___aomod,w
  8969  24CA  07F2               	addwf	___aomod@counter,f
  8970  24CB  2CBD               	goto	l6281
  8971  24CC                     l6283:	
  8972  24CC  0827               	movf	___aomod@divisor+7,w
  8973  24CD  022F               	subwf	___aomod@dividend+7,w
  8974  24CE  1D03               	skipz
  8975  24CF  2CEA               	goto	u8095
  8976  24D0  0826               	movf	___aomod@divisor+6,w
  8977  24D1  022E               	subwf	___aomod@dividend+6,w
  8978  24D2  1D03               	skipz
  8979  24D3  2CEA               	goto	u8095
  8980  24D4  0825               	movf	___aomod@divisor+5,w
  8981  24D5  022D               	subwf	___aomod@dividend+5,w
  8982  24D6  1D03               	skipz
  8983  24D7  2CEA               	goto	u8095
  8984  24D8  0824               	movf	___aomod@divisor+4,w
  8985  24D9  022C               	subwf	___aomod@dividend+4,w
  8986  24DA  1D03               	skipz
  8987  24DB  2CEA               	goto	u8095
  8988  24DC  0823               	movf	___aomod@divisor+3,w
  8989  24DD  022B               	subwf	___aomod@dividend+3,w
  8990  24DE  1D03               	skipz
  8991  24DF  2CEA               	goto	u8095
  8992  24E0  0822               	movf	___aomod@divisor+2,w
  8993  24E1  022A               	subwf	___aomod@dividend+2,w
  8994  24E2  1D03               	skipz
  8995  24E3  2CEA               	goto	u8095
  8996  24E4  0821               	movf	___aomod@divisor+1,w
  8997  24E5  0229               	subwf	___aomod@dividend+1,w
  8998  24E6  1D03               	skipz
  8999  24E7  2CEA               	goto	u8095
  9000  24E8  0820               	movf	___aomod@divisor,w
  9001  24E9  0228               	subwf	___aomod@dividend,w
  9002  24EA                     u8095:	
  9003  24EA  1C03               	skipc
  9004  24EB  2CFC               	goto	l6287
  9005  24EC  0820               	movf	___aomod@divisor,w
  9006  24ED  02A8               	subwf	___aomod@dividend,f
  9007  24EE  0821               	movf	___aomod@divisor+1,w
  9008  24EF  3BA9               	subwfb	___aomod@dividend+1,f
  9009  24F0  0822               	movf	___aomod@divisor+2,w
  9010  24F1  3BAA               	subwfb	___aomod@dividend+2,f
  9011  24F2  0823               	movf	___aomod@divisor+3,w
  9012  24F3  3BAB               	subwfb	___aomod@dividend+3,f
  9013  24F4  0824               	movf	___aomod@divisor+4,w
  9014  24F5  3BAC               	subwfb	___aomod@dividend+4,f
  9015  24F6  0825               	movf	___aomod@divisor+5,w
  9016  24F7  3BAD               	subwfb	___aomod@dividend+5,f
  9017  24F8  0826               	movf	___aomod@divisor+6,w
  9018  24F9  3BAE               	subwfb	___aomod@dividend+6,f
  9019  24FA  0827               	movf	___aomod@divisor+7,w
  9020  24FB  3BAF               	subwfb	___aomod@dividend+7,f
  9021  24FC                     l6287:	
  9022  24FC  36A7               	lsrf	___aomod@divisor+7,f
  9023  24FD  0CA6               	rrf	___aomod@divisor+6,f
  9024  24FE  0CA5               	rrf	___aomod@divisor+5,f
  9025  24FF  0CA4               	rrf	___aomod@divisor+4,f
  9026  2500  0CA3               	rrf	___aomod@divisor+3,f
  9027  2501  0CA2               	rrf	___aomod@divisor+2,f
  9028  2502  0CA1               	rrf	___aomod@divisor+1,f
  9029  2503  0CA0               	rrf	___aomod@divisor,f
  9030  2504  3001               	movlw	1
  9031  2505  02F2               	subwf	___aomod@counter,f
  9032  2506  1D03               	btfss	3,2
  9033  2507  2CCC               	goto	l6283
  9034  2508                     l6289:	
  9035  2508  0873               	movf	___aomod@sign,w
  9036  2509  1903               	btfsc	3,2
  9037  250A  2D29               	goto	l941
  9038  250B  09A8               	comf	___aomod@dividend,f
  9039  250C  09A9               	comf	___aomod@dividend+1,f
  9040  250D  09AA               	comf	___aomod@dividend+2,f
  9041  250E  09AB               	comf	___aomod@dividend+3,f
  9042  250F  09AC               	comf	___aomod@dividend+4,f
  9043  2510  09AD               	comf	___aomod@dividend+5,f
  9044  2511  09AE               	comf	___aomod@dividend+6,f
  9045  2512  09AF               	comf	___aomod@dividend+7,f
  9046  2513  0AA8               	incf	___aomod@dividend,f
  9047  2514  1D03               	skipz
  9048  2515  2D29               	goto	l941
  9049  2516  0AA9               	incf	___aomod@dividend+1,f
  9050  2517  1D03               	skipz
  9051  2518  2D29               	goto	l941
  9052  2519  0AAA               	incf	___aomod@dividend+2,f
  9053  251A  1D03               	skipz
  9054  251B  2D29               	goto	l941
  9055  251C  0AAB               	incf	___aomod@dividend+3,f
  9056  251D  1D03               	skipz
  9057  251E  2D29               	goto	l941
  9058  251F  0AAC               	incf	___aomod@dividend+4,f
  9059  2520  1D03               	skipz
  9060  2521  2D29               	goto	l941
  9061  2522  0AAD               	incf	___aomod@dividend+5,f
  9062  2523  1D03               	skipz
  9063  2524  2D29               	goto	l941
  9064  2525  0AAE               	incf	___aomod@dividend+6,f
  9065  2526  1D03               	skipz
  9066  2527  2D29               	goto	l941
  9067  2528  0AAF               	incf	___aomod@dividend+7,f
  9068  2529                     l941:	
  9069  2529  0020               	movlb	0	; select bank0
  9070  252A  0828               	movf	___aomod@dividend,w
  9071  252B  00A0               	movwf	?___aomod
  9072  252C  0829               	movf	___aomod@dividend+1,w
  9073  252D  00A1               	movwf	?___aomod+1
  9074  252E  082A               	movf	___aomod@dividend+2,w
  9075  252F  00A2               	movwf	?___aomod+2
  9076  2530  082B               	movf	___aomod@dividend+3,w
  9077  2531  00A3               	movwf	?___aomod+3
  9078  2532  082C               	movf	___aomod@dividend+4,w
  9079  2533  00A4               	movwf	?___aomod+4
  9080  2534  082D               	movf	___aomod@dividend+5,w
  9081  2535  00A5               	movwf	?___aomod+5
  9082  2536  082E               	movf	___aomod@dividend+6,w
  9083  2537  00A6               	movwf	?___aomod+6
  9084  2538  082F               	movf	___aomod@dividend+7,w
  9085  2539  00A7               	movwf	?___aomod+7
  9086  253A  0008               	return
  9087  253B                     __end_of___aomod:	
  9088                           
  9089                           	psect	text23
  9090  270D                     __ptext23:	
  9091 ;; *************** function ___aodiv *****************
  9092 ;; Defined at:
  9093 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  divisor         8    0[BANK0 ] long long 
  9096 ;;  dividend        8    8[BANK0 ] long long 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  quotient        8    4[COMMON] long long 
  9099 ;;  sign            1    3[COMMON] unsigned char 
  9100 ;;  counter         1    2[COMMON] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  8    0[BANK0 ] long long 
  9103 ;; Registers used:
  9104 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9110 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9111 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9113 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9114 ;;Total ram usage:       27 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_dtoa
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function ___aodiv
  9126  270D                     ___aodiv:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9130  270D  01F3               	clrf	___aodiv@sign
  9131  270E  3020               	movlw	low ___aodiv@divisor
  9132  270F  0086               	movwf	6
  9133  2710  3000               	movlw	high ___aodiv@divisor
  9134  2711  0087               	movwf	7
  9135  2712  3F47               	moviw [7]fsr1
  9136  2713  00F1               	movwf	??___aodiv
  9137  2714  1FF1               	btfss	??___aodiv,7
  9138  2715  2F37               	goto	l6231
  9139  2716  0020               	movlb	0	; select bank0
  9140  2717  09A0               	comf	___aodiv@divisor,f
  9141  2718  09A1               	comf	___aodiv@divisor+1,f
  9142  2719  09A2               	comf	___aodiv@divisor+2,f
  9143  271A  09A3               	comf	___aodiv@divisor+3,f
  9144  271B  09A4               	comf	___aodiv@divisor+4,f
  9145  271C  09A5               	comf	___aodiv@divisor+5,f
  9146  271D  09A6               	comf	___aodiv@divisor+6,f
  9147  271E  09A7               	comf	___aodiv@divisor+7,f
  9148  271F  0AA0               	incf	___aodiv@divisor,f
  9149  2720  1D03               	skipz
  9150  2721  2F35               	goto	u793lld
  9151  2722  0AA1               	incf	___aodiv@divisor+1,f
  9152  2723  1D03               	skipz
  9153  2724  2F35               	goto	u793lld
  9154  2725  0AA2               	incf	___aodiv@divisor+2,f
  9155  2726  1D03               	skipz
  9156  2727  2F35               	goto	u793lld
  9157  2728  0AA3               	incf	___aodiv@divisor+3,f
  9158  2729  1D03               	skipz
  9159  272A  2F35               	goto	u793lld
  9160  272B  0AA4               	incf	___aodiv@divisor+4,f
  9161  272C  1D03               	skipz
  9162  272D  2F35               	goto	u793lld
  9163  272E  0AA5               	incf	___aodiv@divisor+5,f
  9164  272F  1D03               	skipz
  9165  2730  2F35               	goto	u793lld
  9166  2731  0AA6               	incf	___aodiv@divisor+6,f
  9167  2732  1D03               	skipz
  9168  2733  2F35               	goto	u793lld
  9169  2734  0AA7               	incf	___aodiv@divisor+7,f
  9170  2735                     u793lld:	
  9171  2735  01F3               	clrf	___aodiv@sign
  9172  2736  0AF3               	incf	___aodiv@sign,f
  9173  2737                     l6231:	
  9174  2737  3028               	movlw	low ___aodiv@dividend
  9175  2738  0086               	movwf	6
  9176  2739  3000               	movlw	high ___aodiv@dividend
  9177  273A  0087               	movwf	7
  9178  273B  3F47               	moviw [7]fsr1
  9179  273C  00F1               	movwf	??___aodiv
  9180  273D  1FF1               	btfss	??___aodiv,7
  9181  273E  2F62               	goto	l6237
  9182  273F  0020               	movlb	0	; select bank0
  9183  2740  09A8               	comf	___aodiv@dividend,f
  9184  2741  09A9               	comf	___aodiv@dividend+1,f
  9185  2742  09AA               	comf	___aodiv@dividend+2,f
  9186  2743  09AB               	comf	___aodiv@dividend+3,f
  9187  2744  09AC               	comf	___aodiv@dividend+4,f
  9188  2745  09AD               	comf	___aodiv@dividend+5,f
  9189  2746  09AE               	comf	___aodiv@dividend+6,f
  9190  2747  09AF               	comf	___aodiv@dividend+7,f
  9191  2748  0AA8               	incf	___aodiv@dividend,f
  9192  2749  1D03               	skipz
  9193  274A  2F5E               	goto	l6235
  9194  274B  0AA9               	incf	___aodiv@dividend+1,f
  9195  274C  1D03               	skipz
  9196  274D  2F5E               	goto	l6235
  9197  274E  0AAA               	incf	___aodiv@dividend+2,f
  9198  274F  1D03               	skipz
  9199  2750  2F5E               	goto	l6235
  9200  2751  0AAB               	incf	___aodiv@dividend+3,f
  9201  2752  1D03               	skipz
  9202  2753  2F5E               	goto	l6235
  9203  2754  0AAC               	incf	___aodiv@dividend+4,f
  9204  2755  1D03               	skipz
  9205  2756  2F5E               	goto	l6235
  9206  2757  0AAD               	incf	___aodiv@dividend+5,f
  9207  2758  1D03               	skipz
  9208  2759  2F5E               	goto	l6235
  9209  275A  0AAE               	incf	___aodiv@dividend+6,f
  9210  275B  1D03               	skipz
  9211  275C  2F5E               	goto	l6235
  9212  275D  0AAF               	incf	___aodiv@dividend+7,f
  9213  275E                     l6235:	
  9214  275E  3001               	movlw	1
  9215  275F  00F1               	movwf	??___aodiv
  9216  2760  0871               	movf	??___aodiv,w
  9217  2761  06F3               	xorwf	___aodiv@sign,f
  9218  2762                     l6237:	
  9219  2762  3074               	movlw	low ___aodiv@quotient
  9220  2763  0086               	movwf	6
  9221  2764  3000               	movlw	high ___aodiv@quotient
  9222  2765  0087               	movwf	7
  9223  2766  3008               	movlw	8
  9224  2767  00F1               	movwf	??___aodiv
  9225  2768  3000               	movlw	0
  9226  2769                     u7960:	
  9227  2769  001E               	movwi fsr1++
  9228  276A  0BF1               	decfsz	??___aodiv,f
  9229  276B  2F69               	goto	u7960
  9230  276C  0020               	movlb	0	; select bank0
  9231  276D  0820               	movf	___aodiv@divisor,w
  9232  276E  0421               	iorwf	___aodiv@divisor+1,w
  9233  276F  0422               	iorwf	___aodiv@divisor+2,w
  9234  2770  0423               	iorwf	___aodiv@divisor+3,w
  9235  2771  0424               	iorwf	___aodiv@divisor+4,w
  9236  2772  0425               	iorwf	___aodiv@divisor+5,w
  9237  2773  0426               	iorwf	___aodiv@divisor+6,w
  9238  2774  0427               	iorwf	___aodiv@divisor+7,w
  9239  2775  1903               	skipnz
  9240  2776  2FCD               	goto	l6259
  9241  2777  01F2               	clrf	___aodiv@counter
  9242  2778  0AF2               	incf	___aodiv@counter,f
  9243  2779                     l6247:	
  9244  2779  1BA7               	btfsc	___aodiv@divisor+7,7
  9245  277A  2F88               	goto	l6249
  9246  277B  35A0               	lslf	___aodiv@divisor,f
  9247  277C  0DA1               	rlf	___aodiv@divisor+1,f
  9248  277D  0DA2               	rlf	___aodiv@divisor+2,f
  9249  277E  0DA3               	rlf	___aodiv@divisor+3,f
  9250  277F  0DA4               	rlf	___aodiv@divisor+4,f
  9251  2780  0DA5               	rlf	___aodiv@divisor+5,f
  9252  2781  0DA6               	rlf	___aodiv@divisor+6,f
  9253  2782  0DA7               	rlf	___aodiv@divisor+7,f
  9254  2783  3001               	movlw	1
  9255  2784  00F1               	movwf	??___aodiv
  9256  2785  0871               	movf	??___aodiv,w
  9257  2786  07F2               	addwf	___aodiv@counter,f
  9258  2787  2F79               	goto	l6247
  9259  2788                     l6249:	
  9260  2788  35F4               	lslf	___aodiv@quotient,f
  9261  2789  0DF5               	rlf	___aodiv@quotient+1,f
  9262  278A  0DF6               	rlf	___aodiv@quotient+2,f
  9263  278B  0DF7               	rlf	___aodiv@quotient+3,f
  9264  278C  0DF8               	rlf	___aodiv@quotient+4,f
  9265  278D  0DF9               	rlf	___aodiv@quotient+5,f
  9266  278E  0DFA               	rlf	___aodiv@quotient+6,f
  9267  278F  0DFB               	rlf	___aodiv@quotient+7,f
  9268  2790  0827               	movf	___aodiv@divisor+7,w
  9269  2791  022F               	subwf	___aodiv@dividend+7,w
  9270  2792  1D03               	skipz
  9271  2793  2FAE               	goto	u7995
  9272  2794  0826               	movf	___aodiv@divisor+6,w
  9273  2795  022E               	subwf	___aodiv@dividend+6,w
  9274  2796  1D03               	skipz
  9275  2797  2FAE               	goto	u7995
  9276  2798  0825               	movf	___aodiv@divisor+5,w
  9277  2799  022D               	subwf	___aodiv@dividend+5,w
  9278  279A  1D03               	skipz
  9279  279B  2FAE               	goto	u7995
  9280  279C  0824               	movf	___aodiv@divisor+4,w
  9281  279D  022C               	subwf	___aodiv@dividend+4,w
  9282  279E  1D03               	skipz
  9283  279F  2FAE               	goto	u7995
  9284  27A0  0823               	movf	___aodiv@divisor+3,w
  9285  27A1  022B               	subwf	___aodiv@dividend+3,w
  9286  27A2  1D03               	skipz
  9287  27A3  2FAE               	goto	u7995
  9288  27A4  0822               	movf	___aodiv@divisor+2,w
  9289  27A5  022A               	subwf	___aodiv@dividend+2,w
  9290  27A6  1D03               	skipz
  9291  27A7  2FAE               	goto	u7995
  9292  27A8  0821               	movf	___aodiv@divisor+1,w
  9293  27A9  0229               	subwf	___aodiv@dividend+1,w
  9294  27AA  1D03               	skipz
  9295  27AB  2FAE               	goto	u7995
  9296  27AC  0820               	movf	___aodiv@divisor,w
  9297  27AD  0228               	subwf	___aodiv@dividend,w
  9298  27AE                     u7995:	
  9299  27AE  1C03               	skipc
  9300  27AF  2FC1               	goto	l6257
  9301  27B0  0820               	movf	___aodiv@divisor,w
  9302  27B1  02A8               	subwf	___aodiv@dividend,f
  9303  27B2  0821               	movf	___aodiv@divisor+1,w
  9304  27B3  3BA9               	subwfb	___aodiv@dividend+1,f
  9305  27B4  0822               	movf	___aodiv@divisor+2,w
  9306  27B5  3BAA               	subwfb	___aodiv@dividend+2,f
  9307  27B6  0823               	movf	___aodiv@divisor+3,w
  9308  27B7  3BAB               	subwfb	___aodiv@dividend+3,f
  9309  27B8  0824               	movf	___aodiv@divisor+4,w
  9310  27B9  3BAC               	subwfb	___aodiv@dividend+4,f
  9311  27BA  0825               	movf	___aodiv@divisor+5,w
  9312  27BB  3BAD               	subwfb	___aodiv@dividend+5,f
  9313  27BC  0826               	movf	___aodiv@divisor+6,w
  9314  27BD  3BAE               	subwfb	___aodiv@dividend+6,f
  9315  27BE  0827               	movf	___aodiv@divisor+7,w
  9316  27BF  3BAF               	subwfb	___aodiv@dividend+7,f
  9317  27C0  1474               	bsf	___aodiv@quotient,0
  9318  27C1                     l6257:	
  9319  27C1  36A7               	lsrf	___aodiv@divisor+7,f
  9320  27C2  0CA6               	rrf	___aodiv@divisor+6,f
  9321  27C3  0CA5               	rrf	___aodiv@divisor+5,f
  9322  27C4  0CA4               	rrf	___aodiv@divisor+4,f
  9323  27C5  0CA3               	rrf	___aodiv@divisor+3,f
  9324  27C6  0CA2               	rrf	___aodiv@divisor+2,f
  9325  27C7  0CA1               	rrf	___aodiv@divisor+1,f
  9326  27C8  0CA0               	rrf	___aodiv@divisor,f
  9327  27C9  3001               	movlw	1
  9328  27CA  02F2               	subwf	___aodiv@counter,f
  9329  27CB  1D03               	btfss	3,2
  9330  27CC  2F88               	goto	l6249
  9331  27CD                     l6259:	
  9332  27CD  0873               	movf	___aodiv@sign,w
  9333  27CE  1903               	btfsc	3,2
  9334  27CF  2FEE               	goto	l928
  9335  27D0  09F4               	comf	___aodiv@quotient,f
  9336  27D1  09F5               	comf	___aodiv@quotient+1,f
  9337  27D2  09F6               	comf	___aodiv@quotient+2,f
  9338  27D3  09F7               	comf	___aodiv@quotient+3,f
  9339  27D4  09F8               	comf	___aodiv@quotient+4,f
  9340  27D5  09F9               	comf	___aodiv@quotient+5,f
  9341  27D6  09FA               	comf	___aodiv@quotient+6,f
  9342  27D7  09FB               	comf	___aodiv@quotient+7,f
  9343  27D8  0AF4               	incf	___aodiv@quotient,f
  9344  27D9  1D03               	skipz
  9345  27DA  2FEE               	goto	l928
  9346  27DB  0AF5               	incf	___aodiv@quotient+1,f
  9347  27DC  1D03               	skipz
  9348  27DD  2FEE               	goto	l928
  9349  27DE  0AF6               	incf	___aodiv@quotient+2,f
  9350  27DF  1D03               	skipz
  9351  27E0  2FEE               	goto	l928
  9352  27E1  0AF7               	incf	___aodiv@quotient+3,f
  9353  27E2  1D03               	skipz
  9354  27E3  2FEE               	goto	l928
  9355  27E4  0AF8               	incf	___aodiv@quotient+4,f
  9356  27E5  1D03               	skipz
  9357  27E6  2FEE               	goto	l928
  9358  27E7  0AF9               	incf	___aodiv@quotient+5,f
  9359  27E8  1D03               	skipz
  9360  27E9  2FEE               	goto	l928
  9361  27EA  0AFA               	incf	___aodiv@quotient+6,f
  9362  27EB  1D03               	skipz
  9363  27EC  2FEE               	goto	l928
  9364  27ED  0AFB               	incf	___aodiv@quotient+7,f
  9365  27EE                     l928:	
  9366  27EE  0874               	movf	___aodiv@quotient,w
  9367  27EF  0020               	movlb	0	; select bank0
  9368  27F0  00A0               	movwf	?___aodiv
  9369  27F1  0875               	movf	___aodiv@quotient+1,w
  9370  27F2  00A1               	movwf	?___aodiv+1
  9371  27F3  0876               	movf	___aodiv@quotient+2,w
  9372  27F4  00A2               	movwf	?___aodiv+2
  9373  27F5  0877               	movf	___aodiv@quotient+3,w
  9374  27F6  00A3               	movwf	?___aodiv+3
  9375  27F7  0878               	movf	___aodiv@quotient+4,w
  9376  27F8  00A4               	movwf	?___aodiv+4
  9377  27F9  0879               	movf	___aodiv@quotient+5,w
  9378  27FA  00A5               	movwf	?___aodiv+5
  9379  27FB  087A               	movf	___aodiv@quotient+6,w
  9380  27FC  00A6               	movwf	?___aodiv+6
  9381  27FD  087B               	movf	___aodiv@quotient+7,w
  9382  27FE  00A7               	movwf	?___aodiv+7
  9383  27FF  0008               	return
  9384  2800                     __end_of___aodiv:	
  9385                           
  9386                           	psect	text24
  9387  28FF                     __ptext24:	
  9388 ;; *************** function _ctoa *****************
  9389 ;; Defined at:
  9390 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9393 ;;		 -> vsnprintf@f(6), 
  9394 ;;  c               1   18[BANK0 ] unsigned char 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;  w               2   20[BANK0 ] int 
  9397 ;;  l               2    0        int 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  2   16[BANK0 ] int 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9407 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;Total ram usage:        6 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    5
  9414 ;; This function calls:
  9415 ;;		_pad
  9416 ;; This function is called by:
  9417 ;;		_vfpfcnvrt
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           
  9422                           ;psect for function _ctoa
  9423  28FF                     _ctoa:	
  9424                           
  9425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9429  28FF  0022               	movlb	2	; select bank2
  9430  2900  0864               	movf	_width^(0+256),w
  9431  2901  0465               	iorwf	(_width+1)^(0+256),w
  9432  2902  1D03               	btfss	3,2
  9433  2903  290C               	goto	l6347
  9434  2904  0865               	movf	(_width+1)^(0+256),w
  9435  2905  0020               	movlb	0	; select bank0
  9436  2906  00B5               	movwf	ctoa@w+1
  9437  2907  0022               	movlb	2	; select bank2
  9438  2908  0864               	movf	_width^(0+256),w
  9439  2909  0020               	movlb	0	; select bank0
  9440  290A  00B4               	movwf	ctoa@w
  9441  290B  2915               	goto	l6349
  9442  290C                     l6347:	
  9443  290C  0864               	movf	_width^(0+256),w
  9444  290D  3EFF               	addlw	255
  9445  290E  0020               	movlb	0	; select bank0
  9446  290F  00B4               	movwf	ctoa@w
  9447  2910  30FF               	movlw	255
  9448  2911  0022               	movlb	2	; select bank2
  9449  2912  3D65               	addwfc	(_width+1)^(0+256),w
  9450  2913  0020               	movlb	0	; select bank0
  9451  2914  00B5               	movwf	ctoa@w+1
  9452  2915                     l6349:	
  9453                           
  9454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9455  2915  0832               	movf	ctoa@c,w
  9456  2916  00B3               	movwf	??_ctoa
  9457  2917  0833               	movf	??_ctoa,w
  9458  2918  0024               	movlb	4	; select bank4
  9459  2919  00A0               	movwf	_dbuf^(0+512)
  9460                           
  9461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9462  291A  01A1               	clrf	(_dbuf^(0+512)+1)
  9463                           
  9464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9465  291B  0020               	movlb	0	; select bank0
  9466  291C  0831               	movf	ctoa@fp+1,w
  9467  291D  00A7               	movwf	pad@fp+1
  9468  291E  0830               	movf	ctoa@fp,w
  9469  291F  00A6               	movwf	pad@fp
  9470  2920  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9471  2921  00B3               	movwf	??_ctoa
  9472  2922  0833               	movf	??_ctoa,w
  9473  2923  00A8               	movwf	pad@buf
  9474  2924  0835               	movf	ctoa@w+1,w
  9475  2925  00AA               	movwf	pad@p+1
  9476  2926  0834               	movf	ctoa@w,w
  9477  2927  00A9               	movwf	pad@p
  9478  2928  31AA  2274         	fcall	_pad
  9479  292A  0020               	movlb	0	; select bank0
  9480  292B  0827               	movf	?_pad+1,w
  9481  292C  00B1               	movwf	?_ctoa+1
  9482  292D  0826               	movf	?_pad,w
  9483  292E  00B0               	movwf	?_ctoa
  9484  292F  0008               	return
  9485  2930                     __end_of_ctoa:	
  9486                           
  9487                           	psect	text25
  9488  2A74                     __ptext25:	
  9489 ;; *************** function _pad *****************
  9490 ;; Defined at:
  9491 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9494 ;;		 -> vsnprintf@f(6), 
  9495 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9496 ;;		 -> dbuf(32), 
  9497 ;;  p               2    9[BANK0 ] int 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  w               2   14[BANK0 ] int 
  9500 ;;  i               2   12[BANK0 ] int 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  2    6[BANK0 ] int 
  9503 ;; Registers used:
  9504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9510 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9511 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9512 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9513 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9514 ;;Total ram usage:       10 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    4
  9517 ;; This function calls:
  9518 ;;		_fputc
  9519 ;;		_fputs
  9520 ;;		_strlen
  9521 ;; This function is called by:
  9522 ;;		_ctoa
  9523 ;;		_dtoa
  9524 ;;		_otoa
  9525 ;;		_utoa
  9526 ;;		_xtoa
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _pad
  9532  2A74                     _pad:	
  9533                           
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9538  2A74  0021               	movlb	1	; select bank1
  9539  2A75  1C6D               	btfss	_flags^(0+128),0
  9540  2A76  2A80               	goto	l6167
  9541                           
  9542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9543  2A77  0020               	movlb	0	; select bank0
  9544  2A78  0827               	movf	pad@fp+1,w
  9545  2A79  00FB               	movwf	fputs@fp+1
  9546  2A7A  0826               	movf	pad@fp,w
  9547  2A7B  00FA               	movwf	fputs@fp
  9548  2A7C  0828               	movf	pad@buf,w
  9549  2A7D  3198  2000  31AA   	fcall	_fputs
  9550  2A80                     l6167:	
  9551                           
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9553  2A80  0020               	movlb	0	; select bank0
  9554  2A81  1BAA               	btfsc	pad@p+1,7
  9555  2A82  2A88               	goto	l6171
  9556  2A83  082A               	movf	pad@p+1,w
  9557  2A84  00AF               	movwf	pad@w+1
  9558  2A85  0829               	movf	pad@p,w
  9559  2A86  00AE               	movwf	pad@w
  9560  2A87  2A8A               	goto	l620
  9561  2A88                     l6171:	
  9562  2A88  01AE               	clrf	pad@w
  9563  2A89  01AF               	clrf	pad@w+1
  9564  2A8A                     l620:	
  9565                           
  9566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9567  2A8A  01AC               	clrf	pad@i
  9568  2A8B  01AD               	clrf	pad@i+1
  9569  2A8C                     l6177:	
  9570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9571                           
  9572                           
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9574  2A8C  082D               	movf	pad@i+1,w
  9575  2A8D  3A80               	xorlw	128
  9576  2A8E  00AB               	movwf	??_pad
  9577  2A8F  082F               	movf	pad@w+1,w
  9578  2A90  3A80               	xorlw	128
  9579  2A91  022B               	subwf	??_pad,w
  9580  2A92  1D03               	skipz
  9581  2A93  2A96               	goto	u7765
  9582  2A94  082E               	movf	pad@w,w
  9583  2A95  022C               	subwf	pad@i,w
  9584  2A96                     u7765:	
  9585  2A96  1803               	btfsc	3,0
  9586  2A97  2AAA               	goto	l623
  9587                           
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9589  2A98  3020               	movlw	32
  9590  2A99  00F1               	movwf	fputc@c
  9591  2A9A  3000               	movlw	0
  9592  2A9B  00F2               	movwf	fputc@c+1
  9593  2A9C  0020               	movlb	0	; select bank0
  9594  2A9D  0827               	movf	pad@fp+1,w
  9595  2A9E  00F4               	movwf	fputc@fp+1
  9596  2A9F  0826               	movf	pad@fp,w
  9597  2AA0  00F3               	movwf	fputc@fp
  9598  2AA1  31AB  2317  31AA   	fcall	_fputc
  9599                           
  9600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9601  2AA4  3001               	movlw	1
  9602  2AA5  0020               	movlb	0	; select bank0
  9603  2AA6  07AC               	addwf	pad@i,f
  9604  2AA7  3000               	movlw	0
  9605  2AA8  3DAD               	addwfc	pad@i+1,f
  9606  2AA9  2A8C               	goto	l6177
  9607  2AAA                     l623:	
  9608                           
  9609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9610  2AAA  0021               	movlb	1	; select bank1
  9611  2AAB  186D               	btfsc	_flags^(0+128),0
  9612  2AAC  2AB6               	goto	l6181
  9613                           
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9615  2AAD  0020               	movlb	0	; select bank0
  9616  2AAE  0827               	movf	pad@fp+1,w
  9617  2AAF  00FB               	movwf	fputs@fp+1
  9618  2AB0  0826               	movf	pad@fp,w
  9619  2AB1  00FA               	movwf	fputs@fp
  9620  2AB2  0828               	movf	pad@buf,w
  9621  2AB3  3198  2000  31AA   	fcall	_fputs
  9622  2AB6                     l6181:	
  9623                           
  9624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9625  2AB6  0020               	movlb	0	; select bank0
  9626  2AB7  0828               	movf	pad@buf,w
  9627  2AB8  00F1               	movwf	strlen@s
  9628  2AB9  3002               	movlw	2
  9629  2ABA  00F2               	movwf	strlen@s+1
  9630  2ABB  31B7  2757         	fcall	_strlen
  9631  2ABD  0020               	movlb	0	; select bank0
  9632  2ABE  082E               	movf	pad@w,w
  9633  2ABF  0771               	addwf	?_strlen,w
  9634  2AC0  00A6               	movwf	?_pad
  9635  2AC1  082F               	movf	pad@w+1,w
  9636  2AC2  3D72               	addwfc	?_strlen+1,w
  9637  2AC3  00A7               	movwf	?_pad+1
  9638  2AC4  0008               	return
  9639  2AC5                     __end_of_pad:	
  9640                           
  9641                           	psect	text26
  9642  3757                     __ptext26:	
  9643 ;; *************** function _strlen *****************
  9644 ;; Defined at:
  9645 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  s               2    1[COMMON] PTR const unsigned char 
  9648 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), thermistorBetaValue(2), 
  9649 ;;		 -> adcGain(2), 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;  a               2    3[COMMON] PTR const unsigned char 
  9652 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), thermistorBetaValue(2), 
  9653 ;;		 -> adcGain(2), 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2    1[COMMON] unsigned int 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9667 ;;Total ram usage:        4 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    1
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_pad
  9674 ;;		_stoa
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _strlen
  9680  3757                     _strlen:	
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9684  3757  0872               	movf	strlen@s+1,w
  9685  3758  00F4               	movwf	strlen@a+1
  9686  3759  0871               	movf	strlen@s,w
  9687  375A  00F3               	movwf	strlen@a
  9688  375B                     l6153:	
  9689  375B  0871               	movf	strlen@s,w
  9690  375C  0086               	movwf	6
  9691  375D  0872               	movf	strlen@s+1,w
  9692  375E  0087               	movwf	7
  9693  375F  0801               	movf	1,w
  9694  3760  1903               	btfsc	3,2
  9695  3761  2F67               	goto	l6155
  9696  3762  3001               	movlw	1
  9697  3763  07F1               	addwf	strlen@s,f
  9698  3764  3000               	movlw	0
  9699  3765  3DF2               	addwfc	strlen@s+1,f
  9700  3766  2F5B               	goto	l6153
  9701  3767                     l6155:	
  9702  3767  0873               	movf	strlen@a,w
  9703  3768  0271               	subwf	strlen@s,w
  9704  3769  00F1               	movwf	?_strlen
  9705  376A  0874               	movf	strlen@a+1,w
  9706  376B  3B72               	subwfb	strlen@s+1,w
  9707  376C  00F2               	movwf	?_strlen+1
  9708  376D  0008               	return
  9709  376E                     __end_of_strlen:	
  9710                           
  9711                           	psect	text27
  9712  1800                     __ptext27:	
  9713 ;; *************** function _fputs *****************
  9714 ;; Defined at:
  9715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  s               1    wreg     PTR const unsigned char 
  9718 ;;		 -> dbuf(32), 
  9719 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  9720 ;;		 -> vsnprintf@f(6), 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  9723 ;;		 -> dbuf(32), 
  9724 ;;  i               2    3[BANK0 ] int 
  9725 ;;  c               1    2[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2   10[COMMON] int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9738 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9739 ;;Total ram usage:        8 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    3
  9742 ;; This function calls:
  9743 ;;		_fputc
  9744 ;; This function is called by:
  9745 ;;		_pad
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           
  9750                           ;psect for function _fputs
  9751  1800                     _fputs:	
  9752                           
  9753                           ;incstack = 0
  9754                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9755                           ;fputs@s stored from wreg
  9756  1800  0020               	movlb	0	; select bank0
  9757  1801  00A5               	movwf	fputs@s
  9758  1802  01A3               	clrf	fputs@i
  9759  1803  01A4               	clrf	fputs@i+1
  9760  1804                     l6147:	
  9761  1804  0823               	movf	fputs@i,w
  9762  1805  0725               	addwf	fputs@s,w
  9763  1806  00A0               	movwf	??_fputs
  9764  1807  0820               	movf	??_fputs,w
  9765  1808  0086               	movwf	6
  9766  1809  3002               	movlw	2	; select bank4/5
  9767  180A  0087               	movwf	7
  9768  180B  0801               	movf	1,w
  9769  180C  00A1               	movwf	??_fputs+1
  9770  180D  0821               	movf	??_fputs+1,w
  9771  180E  00A2               	movwf	fputs@c
  9772  180F  0822               	movf	fputs@c,w
  9773  1810  1903               	btfsc	3,2
  9774  1811  0008               	return
  9775  1812  0822               	movf	fputs@c,w
  9776  1813  00A0               	movwf	??_fputs
  9777  1814  01A1               	clrf	??_fputs+1
  9778  1815  0820               	movf	??_fputs,w
  9779  1816  00F1               	movwf	fputc@c
  9780  1817  0821               	movf	??_fputs+1,w
  9781  1818  00F2               	movwf	fputc@c+1
  9782  1819  087B               	movf	fputs@fp+1,w
  9783  181A  00F4               	movwf	fputc@fp+1
  9784  181B  087A               	movf	fputs@fp,w
  9785  181C  00F3               	movwf	fputc@fp
  9786  181D  31AB  2317  3198   	fcall	_fputc
  9787  1820  3001               	movlw	1
  9788  1821  0020               	movlb	0	; select bank0
  9789  1822  07A3               	addwf	fputs@i,f
  9790  1823  3000               	movlw	0
  9791  1824  3DA4               	addwfc	fputs@i+1,f
  9792  1825  2804               	goto	l6147
  9793  1826                     __end_of_fputs:	
  9794                           
  9795                           	psect	text28
  9796  2B17                     __ptext28:	
  9797 ;; *************** function _fputc *****************
  9798 ;; Defined at:
  9799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  c               2    1[COMMON] int 
  9802 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
  9803 ;;		 -> vsnprintf@f(6), 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  2    1[COMMON] int 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9817 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9818 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9819 ;;Total ram usage:        9 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    2
  9822 ;; This function calls:
  9823 ;;		_putch
  9824 ;; This function is called by:
  9825 ;;		_pad
  9826 ;;		_stoa
  9827 ;;		_vfpfcnvrt
  9828 ;;		_fputs
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           
  9833                           ;psect for function _fputc
  9834  2B17                     _fputc:	
  9835                           
  9836                           ;incstack = 0
  9837                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9838  2B17  0873               	movf	fputc@fp,w
  9839  2B18  0474               	iorwf	fputc@fp+1,w
  9840  2B19  1903               	btfsc	3,2
  9841  2B1A  2B1F               	goto	l6129
  9842  2B1B  0873               	movf	fputc@fp,w
  9843  2B1C  0474               	iorwf	fputc@fp+1,w
  9844  2B1D  1D03               	btfss	3,2
  9845  2B1E  2B23               	goto	l6131
  9846  2B1F                     l6129:	
  9847  2B1F  0871               	movf	fputc@c,w
  9848  2B20  3187  27FF         	fcall	_putch
  9849  2B22  0008               	return
  9850  2B23                     l6131:	
  9851  2B23  0873               	movf	fputc@fp,w
  9852  2B24  0086               	movwf	6
  9853  2B25  0874               	movf	fputc@fp+1,w
  9854  2B26  0087               	movwf	7
  9855  2B27  3144               	addfsr 1,4
  9856  2B28  0016               	moviw fsr1++
  9857  2B29  0401               	iorwf	1,w
  9858  2B2A  1903               	btfsc	3,2
  9859  2B2B  2B4A               	goto	l6135
  9860  2B2C  0873               	movf	fputc@fp,w
  9861  2B2D  0086               	movwf	6
  9862  2B2E  0874               	movf	fputc@fp+1,w
  9863  2B2F  0087               	movwf	7
  9864  2B30  3144               	addfsr 1,4
  9865  2B31  3F40               	moviw [0]fsr1
  9866  2B32  00F5               	movwf	??_fputc
  9867  2B33  3F41               	moviw [1]fsr1
  9868  2B34  00F6               	movwf	??_fputc+1
  9869  2B35  0873               	movf	fputc@fp,w
  9870  2B36  0086               	movwf	6
  9871  2B37  0874               	movf	fputc@fp+1,w
  9872  2B38  0087               	movwf	7
  9873  2B39  3142               	addfsr 1,2
  9874  2B3A  3F40               	moviw [0]fsr1
  9875  2B3B  00F7               	movwf	??_fputc+2
  9876  2B3C  3F41               	moviw [1]fsr1
  9877  2B3D  00F8               	movwf	??_fputc+3
  9878  2B3E  0878               	movf	??_fputc+3,w
  9879  2B3F  3A80               	xorlw	128
  9880  2B40  00F9               	movwf	??_fputc+4
  9881  2B41  0876               	movf	??_fputc+1,w
  9882  2B42  3A80               	xorlw	128
  9883  2B43  0279               	subwf	??_fputc+4,w
  9884  2B44  1D03               	skipz
  9885  2B45  2B48               	goto	u7695
  9886  2B46  0875               	movf	??_fputc,w
  9887  2B47  0277               	subwf	??_fputc+2,w
  9888  2B48                     u7695:	
  9889  2B48  1803               	skipnc
  9890  2B49  0008               	return
  9891  2B4A                     l6135:	
  9892  2B4A  0873               	movf	fputc@fp,w
  9893  2B4B  0086               	movwf	6
  9894  2B4C  0874               	movf	fputc@fp+1,w
  9895  2B4D  0087               	movwf	7
  9896  2B4E  3142               	addfsr 1,2
  9897  2B4F  0873               	movf	fputc@fp,w
  9898  2B50  0084               	movwf	4
  9899  2B51  0874               	movf	fputc@fp+1,w
  9900  2B52  0085               	movwf	5
  9901  2B53  3F40               	moviw [0]fsr1
  9902  2B54  0700               	addwf	0,w
  9903  2B55  00F5               	movwf	??_fputc
  9904  2B56  3101               	addfsr 0,1
  9905  2B57  3F41               	moviw [1]fsr1
  9906  2B58  3D00               	addwfc	0,w
  9907  2B59  00F6               	movwf	??_fputc+1
  9908  2B5A  0875               	movf	??_fputc,w
  9909  2B5B  0086               	movwf	6
  9910  2B5C  0876               	movf	??_fputc+1,w
  9911  2B5D  0087               	movwf	7
  9912  2B5E  0871               	movf	fputc@c,w
  9913  2B5F  0081               	movwf	1
  9914  2B60  0873               	movf	fputc@fp,w
  9915  2B61  0086               	movwf	6
  9916  2B62  0874               	movf	fputc@fp+1,w
  9917  2B63  0087               	movwf	7
  9918  2B64  3142               	addfsr 1,2
  9919  2B65  3001               	movlw	1
  9920  2B66  0781               	addwf	1,f
  9921  2B67  3141               	addfsr 1,1
  9922  2B68  1803               	skipnc
  9923  2B69  0A81               	incf	1,f
  9924  2B6A  0008               	return
  9925  2B6B                     __end_of_fputc:	
  9926                           
  9927                           	psect	text29
  9928  07FF                     __ptext29:	
  9929 ;; *************** function _putch *****************
  9930 ;; Defined at:
  9931 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  c               1    wreg     unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  c               1    0[COMMON] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:    1
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_fputc
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function _putch
  9961  07FF                     _putch:	
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _putch: [wreg]
  9965  07FF  0008               	return
  9966  0800                     __end_of_putch:	
  9967                           
  9968                           	psect	text30
  9969  2F5F                     __ptext30:	
  9970 ;; *************** function _atoi *****************
  9971 ;; Defined at:
  9972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  s               2    7[COMMON] PTR const unsigned char 
  9975 ;;		 -> STR_15(18), STR_14(18), STR_13(19), STR_12(20), 
  9976 ;;		 -> STR_11(20), STR_10(21), STR_9(21), STR_8(21), 
  9977 ;;		 -> STR_7(22), STR_6(22), STR_5(21), STR_4(21), 
  9978 ;;		 -> STR_1(61), 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  n               2   11[BANK0 ] int 
  9981 ;;  neg             2    4[BANK0 ] int 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  2    7[COMMON] int 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9992 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9993 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9994 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9995 ;;Total ram usage:       15 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    2
  9998 ;; This function calls:
  9999 ;;		___wmul
 10000 ;;		_isdigit
 10001 ;;		_isspace
 10002 ;; This function is called by:
 10003 ;;		_vfpfcnvrt
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function _atoi
 10009  2F5F                     _atoi:	
 10010                           
 10011                           ;incstack = 0
 10012                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10013  2F5F  0020               	movlb	0	; select bank0
 10014  2F60  01AB               	clrf	atoi@n
 10015  2F61  01AC               	clrf	atoi@n+1
 10016  2F62  01A4               	clrf	atoi@neg
 10017  2F63  01A5               	clrf	atoi@neg+1
 10018  2F64                     l6613:	
 10019  2F64  01AA               	clrf	_atoi$1643
 10020  2F65  0AAA               	incf	_atoi$1643,f
 10021  2F66  0877               	movf	atoi@s,w
 10022  2F67  0084               	movwf	4
 10023  2F68  0878               	movf	atoi@s+1,w
 10024  2F69  0085               	movwf	5
 10025  2F6A  0012               	moviw fsr0++
 10026  2F6B  3A20               	xorlw	32
 10027  2F6C  1903               	btfsc	3,2
 10028  2F6D  2F80               	goto	l6621
 10029  2F6E  0877               	movf	atoi@s,w
 10030  2F6F  0084               	movwf	4
 10031  2F70  0878               	movf	atoi@s+1,w
 10032  2F71  0085               	movwf	5
 10033  2F72  0800               	movf	0,w	;code access
 10034  2F73  3EF7               	addlw	247
 10035  2F74  00A0               	movwf	??_atoi
 10036  2F75  30FF               	movlw	255
 10037  2F76  1803               	skipnc
 10038  2F77  3000               	movlw	0
 10039  2F78  00A1               	movwf	??_atoi+1
 10040  2F79  3000               	movlw	0
 10041  2F7A  0221               	subwf	??_atoi+1,w
 10042  2F7B  3005               	movlw	5
 10043  2F7C  1903               	skipnz
 10044  2F7D  0220               	subwf	??_atoi,w
 10045  2F7E  1803               	btfsc	3,0
 10046  2F7F  01AA               	clrf	_atoi$1643
 10047  2F80                     l6621:	
 10048  2F80  082A               	movf	_atoi$1643,w
 10049  2F81  00A0               	movwf	??_atoi
 10050  2F82  01A1               	clrf	??_atoi+1
 10051  2F83  0820               	movf	??_atoi,w
 10052  2F84  00A6               	movwf	_atoi$1642
 10053  2F85  0821               	movf	??_atoi+1,w
 10054  2F86  00A7               	movwf	_atoi$1642+1
 10055  2F87  0826               	movf	_atoi$1642,w
 10056  2F88  0427               	iorwf	_atoi$1642+1,w
 10057  2F89  1903               	btfsc	3,2
 10058  2F8A  2F95               	goto	l6629
 10059  2F8B  3001               	movlw	1
 10060  2F8C  07F7               	addwf	atoi@s,f
 10061  2F8D  3000               	movlw	0
 10062  2F8E  3DF8               	addwfc	atoi@s+1,f
 10063  2F8F  2F64               	goto	l6613
 10064  2F90                     l6627:	
 10065  2F90  3001               	movlw	1
 10066  2F91  00A4               	movwf	atoi@neg
 10067  2F92  3000               	movlw	0
 10068  2F93  00A5               	movwf	atoi@neg+1
 10069  2F94  2FC8               	goto	l1303
 10070  2F95                     l6629:	
 10071  2F95  0877               	movf	atoi@s,w
 10072  2F96  0084               	movwf	4
 10073  2F97  0878               	movf	atoi@s+1,w
 10074  2F98  0085               	movwf	5
 10075  2F99  0800               	movf	0,w	;code access
 10076  2F9A  00A0               	movwf	??_atoi
 10077  2F9B  01A1               	clrf	??_atoi+1
 10078                           
 10079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10080                           ; Switch size 1, requested type "simple"
 10081                           ; Number of cases is 1, Range of values is 0 to 0
 10082                           ; switch strategies available:
 10083                           ; Name         Instructions Cycles
 10084                           ; simple_byte            4     3 (average)
 10085                           ; direct_byte            8     6 (fixed)
 10086                           ; jumptable            260     6 (fixed)
 10087                           ;	Chosen strategy is simple_byte
 10088  2F9C  0821               	movf	??_atoi+1,w
 10089  2F9D  3A00               	xorlw	0	; case 0
 10090  2F9E  1903               	skipnz
 10091  2F9F  2FA1               	goto	l8411
 10092  2FA0  2FCC               	goto	l6635
 10093  2FA1                     l8411:	
 10094                           
 10095                           ; Switch size 1, requested type "simple"
 10096                           ; Number of cases is 2, Range of values is 43 to 45
 10097                           ; switch strategies available:
 10098                           ; Name         Instructions Cycles
 10099                           ; simple_byte            7     4 (average)
 10100                           ; direct_byte           15     9 (fixed)
 10101                           ; jumptable            263     9 (fixed)
 10102                           ;	Chosen strategy is simple_byte
 10103  2FA1  0820               	movf	??_atoi,w
 10104  2FA2  3A2B               	xorlw	43	; case 43
 10105  2FA3  1903               	skipnz
 10106  2FA4  2FC8               	goto	l1303
 10107  2FA5  3A06               	xorlw	6	; case 45
 10108  2FA6  1903               	skipnz
 10109  2FA7  2F90               	goto	l6627
 10110  2FA8  2FCC               	goto	l6635
 10111  2FA9                     l6631:	
 10112  2FA9  0877               	movf	atoi@s,w
 10113  2FAA  0084               	movwf	4
 10114  2FAB  0878               	movf	atoi@s+1,w
 10115  2FAC  0085               	movwf	5
 10116  2FAD  0800               	movf	0,w	;code access
 10117  2FAE  00A0               	movwf	??_atoi
 10118  2FAF  082C               	movf	atoi@n+1,w
 10119  2FB0  00F2               	movwf	___wmul@multiplier+1
 10120  2FB1  082B               	movf	atoi@n,w
 10121  2FB2  00F1               	movwf	___wmul@multiplier
 10122  2FB3  300A               	movlw	10
 10123  2FB4  00F3               	movwf	___wmul@multiplicand
 10124  2FB5  3000               	movlw	0
 10125  2FB6  00F4               	movwf	___wmul@multiplicand+1
 10126  2FB7  31B7  27E5  31AF   	fcall	___wmul
 10127  2FBA  0872               	movf	?___wmul+1,w
 10128  2FBB  0020               	movlb	0	; select bank0
 10129  2FBC  00A2               	movwf	??_atoi+2
 10130  2FBD  0820               	movf	??_atoi,w
 10131  2FBE  0271               	subwf	?___wmul,w
 10132  2FBF  00A1               	movwf	??_atoi+1
 10133  2FC0  1C03               	skipc
 10134  2FC1  03A2               	decf	??_atoi+2,f
 10135  2FC2  0821               	movf	??_atoi+1,w
 10136  2FC3  3E30               	addlw	48
 10137  2FC4  00AB               	movwf	atoi@n
 10138  2FC5  3000               	movlw	0
 10139  2FC6  3D22               	addwfc	??_atoi+2,w
 10140  2FC7  00AC               	movwf	atoi@n+1
 10141  2FC8                     l1303:	
 10142  2FC8  3001               	movlw	1
 10143  2FC9  07F7               	addwf	atoi@s,f
 10144  2FCA  3000               	movlw	0
 10145  2FCB  3DF8               	addwfc	atoi@s+1,f
 10146  2FCC                     l6635:	
 10147  2FCC  0877               	movf	atoi@s,w
 10148  2FCD  0084               	movwf	4
 10149  2FCE  0878               	movf	atoi@s+1,w
 10150  2FCF  0085               	movwf	5
 10151  2FD0  0800               	movf	0,w	;code access
 10152  2FD1  3ED0               	addlw	208
 10153  2FD2  00A0               	movwf	??_atoi
 10154  2FD3  30FF               	movlw	255
 10155  2FD4  1803               	skipnc
 10156  2FD5  3000               	movlw	0
 10157  2FD6  00A1               	movwf	??_atoi+1
 10158  2FD7  3000               	movlw	0
 10159  2FD8  0221               	subwf	??_atoi+1,w
 10160  2FD9  300A               	movlw	10
 10161  2FDA  1903               	skipnz
 10162  2FDB  0220               	subwf	??_atoi,w
 10163  2FDC  1803               	btfsc	3,0
 10164  2FDD  2FE0               	goto	u8870
 10165  2FDE  3001               	movlw	1
 10166  2FDF  2FE1               	goto	u8880
 10167  2FE0                     u8870:	
 10168  2FE0  3000               	movlw	0
 10169  2FE1                     u8880:	
 10170  2FE1  00A2               	movwf	??_atoi+2
 10171  2FE2  01A3               	clrf	??_atoi+3
 10172  2FE3  0822               	movf	??_atoi+2,w
 10173  2FE4  00A8               	movwf	_atoi$1644
 10174  2FE5  0823               	movf	??_atoi+3,w
 10175  2FE6  00A9               	movwf	_atoi$1644+1
 10176  2FE7  0828               	movf	_atoi$1644,w
 10177  2FE8  0429               	iorwf	_atoi$1644+1,w
 10178  2FE9  1D03               	btfss	3,2
 10179  2FEA  2FA9               	goto	l6631
 10180  2FEB  0824               	movf	atoi@neg,w
 10181  2FEC  0425               	iorwf	atoi@neg+1,w
 10182  2FED  1D03               	btfss	3,2
 10183  2FEE  2FFB               	goto	l6645
 10184  2FEF  092B               	comf	atoi@n,w
 10185  2FF0  00A0               	movwf	??_atoi
 10186  2FF1  092C               	comf	atoi@n+1,w
 10187  2FF2  00A1               	movwf	??_atoi+1
 10188  2FF3  0AA0               	incf	??_atoi,f
 10189  2FF4  1903               	skipnz
 10190  2FF5  0AA1               	incf	??_atoi+1,f
 10191  2FF6  0820               	movf	??_atoi,w
 10192  2FF7  00F7               	movwf	?_atoi
 10193  2FF8  0821               	movf	??_atoi+1,w
 10194  2FF9  00F8               	movwf	?_atoi+1
 10195  2FFA  0008               	return
 10196  2FFB                     l6645:	
 10197  2FFB  082C               	movf	atoi@n+1,w
 10198  2FFC  00F8               	movwf	?_atoi+1
 10199  2FFD  082B               	movf	atoi@n,w
 10200  2FFE  00F7               	movwf	?_atoi
 10201  2FFF  0008               	return
 10202  3000                     __end_of_atoi:	
 10203                           
 10204                           	psect	text31
 10205  2824                     __ptext31:	
 10206 ;; *************** function _isspace *****************
 10207 ;; Defined at:
 10208 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  c               2    1[COMMON] int 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;		None
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  2    1[COMMON] int 
 10215 ;; Registers used:
 10216 ;;		wreg, status,2, status,0
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10225 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10226 ;;Total ram usage:        5 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; Hardware stack levels required when called:    1
 10229 ;; This function calls:
 10230 ;;		Nothing
 10231 ;; This function is called by:
 10232 ;;		_atoi
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           
 10237                           ;psect for function _isspace
 10238  2824                     _isspace:	
 10239                           
 10240                           ;incstack = 0
 10241                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10242  2824  01F5               	clrf	_isspace$1669
 10243  2825  0AF5               	incf	_isspace$1669,f
 10244  2826  3020               	movlw	32
 10245  2827  0671               	xorwf	isspace@c,w
 10246  2828  0472               	iorwf	isspace@c+1,w
 10247  2829  1903               	btfsc	3,2
 10248  282A  2838               	goto	l6339
 10249  282B  0871               	movf	isspace@c,w
 10250  282C  3EF7               	addlw	247
 10251  282D  00F3               	movwf	??_isspace
 10252  282E  30FF               	movlw	255
 10253  282F  3D72               	addwfc	isspace@c+1,w
 10254  2830  00F4               	movwf	??_isspace+1
 10255  2831  3000               	movlw	0
 10256  2832  0274               	subwf	??_isspace+1,w
 10257  2833  3005               	movlw	5
 10258  2834  1903               	skipnz
 10259  2835  0273               	subwf	??_isspace,w
 10260  2836  1803               	btfsc	3,0
 10261  2837  01F5               	clrf	_isspace$1669
 10262  2838                     l6339:	
 10263  2838  0875               	movf	_isspace$1669,w
 10264  2839  00F3               	movwf	??_isspace
 10265  283A  01F4               	clrf	??_isspace+1
 10266  283B  0873               	movf	??_isspace,w
 10267  283C  00F1               	movwf	?_isspace
 10268  283D  0874               	movf	??_isspace+1,w
 10269  283E  00F2               	movwf	?_isspace+1
 10270  283F  0008               	return
 10271  2840                     __end_of_isspace:	
 10272                           
 10273                           	psect	text32
 10274  3740                     __ptext32:	
 10275 ;; *************** function _isdigit *****************
 10276 ;; Defined at:
 10277 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  c               2    1[COMMON] int 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  2    1[COMMON] int 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10295 ;;Total ram usage:        6 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    1
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_vfpfcnvrt
 10302 ;;		_atoi
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           
 10307                           ;psect for function _isdigit
 10308  3740                     _isdigit:	
 10309                           
 10310                           ;incstack = 0
 10311                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10312  3740  0871               	movf	isdigit@c,w
 10313  3741  3ED0               	addlw	208
 10314  3742  00F3               	movwf	??_isdigit
 10315  3743  30FF               	movlw	255
 10316  3744  3D72               	addwfc	isdigit@c+1,w
 10317  3745  00F4               	movwf	??_isdigit+1
 10318  3746  3000               	movlw	0
 10319  3747  0274               	subwf	??_isdigit+1,w
 10320  3748  300A               	movlw	10
 10321  3749  1903               	skipnz
 10322  374A  0273               	subwf	??_isdigit,w
 10323  374B  1803               	btfsc	3,0
 10324  374C  2F4F               	goto	u7860
 10325  374D  3001               	movlw	1
 10326  374E  2F50               	goto	u7870
 10327  374F                     u7860:	
 10328  374F  3000               	movlw	0
 10329  3750                     u7870:	
 10330  3750  00F5               	movwf	??_isdigit+2
 10331  3751  01F6               	clrf	??_isdigit+3
 10332  3752  0875               	movf	??_isdigit+2,w
 10333  3753  00F1               	movwf	?_isdigit
 10334  3754  0876               	movf	??_isdigit+3,w
 10335  3755  00F2               	movwf	?_isdigit+1
 10336  3756  0008               	return
 10337  3757                     __end_of_isdigit:	
 10338                           
 10339                           	psect	text33
 10340  37CB                     __ptext33:	
 10341 ;; *************** function _EUSART_Write_Text *****************
 10342 ;; Defined at:
 10343 ;;		line 75 in file "EUSART.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  text            2    2[COMMON] PTR unsigned char 
 10346 ;;		 -> STR_16(3), STR_3(3), STR_2(38), messageBuffer(127), 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  i               2    5[COMMON] int 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        5 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    2
 10365 ;; This function calls:
 10366 ;;		_EUSART_Write
 10367 ;; This function is called by:
 10368 ;;		_printcellParameters
 10369 ;;		_printotAFERegisters
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _EUSART_Write_Text
 10375  37CB                     _EUSART_Write_Text:	
 10376                           
 10377                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10378                           
 10379                           ;incstack = 0
 10380                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10381  37CB  01F5               	clrf	EUSART_Write_Text@i
 10382  37CC  01F6               	clrf	EUSART_Write_Text@i+1
 10383  37CD                     l7887:	
 10384  37CD  0872               	movf	EUSART_Write_Text@text,w
 10385  37CE  0775               	addwf	EUSART_Write_Text@i,w
 10386  37CF  0084               	movwf	4
 10387  37D0  0873               	movf	EUSART_Write_Text@text+1,w
 10388  37D1  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10389  37D2  0085               	movwf	5
 10390  37D3  0012               	moviw fsr0++
 10391  37D4  1903               	btfsc	3,2
 10392  37D5  0008               	return
 10393                           
 10394                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10395  37D6  0872               	movf	EUSART_Write_Text@text,w
 10396  37D7  0775               	addwf	EUSART_Write_Text@i,w
 10397  37D8  0084               	movwf	4
 10398  37D9  0873               	movf	EUSART_Write_Text@text+1,w
 10399  37DA  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10400  37DB  0085               	movwf	5
 10401  37DC  0800               	movf	0,w	;code access
 10402  37DD  3188  2000  31B7   	fcall	_EUSART_Write
 10403  37E0  3001               	movlw	1
 10404  37E1  07F5               	addwf	EUSART_Write_Text@i,f
 10405  37E2  3000               	movlw	0
 10406  37E3  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10407  37E4  2FCD               	goto	l7887
 10408  37E5                     __end_of_EUSART_Write_Text:	
 10409                           
 10410                           	psect	text34
 10411  0800                     __ptext34:	
 10412 ;; *************** function _EUSART_Write *****************
 10413 ;; Defined at:
 10414 ;;		line 56 in file "EUSART.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  txData          1    wreg     unsigned char 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;  txData          1    1[COMMON] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;Total ram usage:        1 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    1
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_EUSART_Write_Text
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _EUSART_Write
 10444  0800                     _EUSART_Write:	
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _EUSART_Write: [wreg]
 10448                           ;EUSART_Write@txData stored from wreg
 10449  0800  00F1               	movwf	EUSART_Write@txData
 10450  0801                     l238:	
 10451                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10452                           
 10453                           
 10454                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10455  0801  0020               	movlb	0	; select bank0
 10456  0802  1E11               	btfss	17,4	;volatile
 10457  0803  2801               	goto	l238
 10458                           
 10459                           ;EUSART.c: 62:     TX1REG = txData;
 10460  0804  0871               	movf	EUSART_Write@txData,w
 10461  0805  0023               	movlb	3	; select bank3
 10462  0806  009A               	movwf	26	;volatile
 10463  0807  0008               	return
 10464  0808                     __end_of_EUSART_Write:	
 10465                           
 10466                           	psect	text35
 10467  2B6B                     __ptext35:	
 10468 ;; *************** function _init_AFE *****************
 10469 ;; Defined at:
 10470 ;;		line 3 in file "BQ76920.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;		None
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;		None
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  1    wreg      void 
 10477 ;; Registers used:
 10478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;Total ram usage:        0 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    4
 10491 ;; This function calls:
 10492 ;;		_setCellOvervoltageProtection
 10493 ;;		_setCellUndervoltageProtection
 10494 ;;		_setOverCurrentDischargeProtection
 10495 ;;		_setShortCircuitProtection
 10496 ;;		_setShuntResistorValue
 10497 ;;		_setTemperatureLimitsint
 10498 ;; This function is called by:
 10499 ;;		_statemachine
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           
 10504                           ;psect for function _init_AFE
 10505  2B6B                     _init_AFE:	
 10506                           
 10507                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10508                           
 10509                           ;incstack = 0
 10510                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10511  2B6B  30EC               	movlw	236
 10512  2B6C  0020               	movlb	0	; select bank0
 10513  2B6D  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10514  2B6E  30FF               	movlw	255
 10515  2B6F  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10516  2B70  302D               	movlw	45
 10517  2B71  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10518  2B72  3000               	movlw	0
 10519  2B73  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10520  2B74  3000               	movlw	0
 10521  2B75  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10522  2B76  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10523  2B77  302D               	movlw	45
 10524  2B78  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10525  2B79  3000               	movlw	0
 10526  2B7A  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10527  2B7B  31AA  2230  31AB   	fcall	_setTemperatureLimitsint
 10528                           
 10529                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10530  2B7E  303C               	movlw	60
 10531  2B7F  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10532  2B80  30A3               	movlw	163
 10533  2B81  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10534  2B82  30D7               	movlw	215
 10535  2B83  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10536  2B84  300A               	movlw	10
 10537  2B85  00F1               	movwf	setShuntResistorValue@res_mOhm
 10538  2B86  31B7  270B  31AB   	fcall	_setShuntResistorValue
 10539                           
 10540                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 10541  2B89  3000               	movlw	0
 10542  2B8A  0020               	movlb	0	; select bank0
 10543  2B8B  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10544  2B8C  3000               	movlw	0
 10545  2B8D  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10546  2B8E  3009               	movlw	9
 10547  2B8F  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10548  2B90  30C4               	movlw	196
 10549  2B91  00E6               	movwf	setShortCircuitProtection@current_mA
 10550  2B92  30C8               	movlw	200
 10551  2B93  00EA               	movwf	setShortCircuitProtection@delay_us
 10552  2B94  3000               	movlw	0
 10553  2B95  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10554  2B96  3190  2003  31AB   	fcall	_setShortCircuitProtection
 10555                           
 10556                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 10557  2B99  3000               	movlw	0
 10558  2B9A  0020               	movlb	0	; select bank0
 10559  2B9B  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10560  2B9C  3000               	movlw	0
 10561  2B9D  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10562  2B9E  304E               	movlw	78
 10563  2B9F  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10564  2BA0  3020               	movlw	32
 10565  2BA1  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10566  2BA2  3040               	movlw	64
 10567  2BA3  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10568  2BA4  3001               	movlw	1
 10569  2BA5  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10570  2BA6  3199  2120  31AB   	fcall	_setOverCurrentDischargeProtection
 10571                           
 10572                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 10573  2BA9  3054               	movlw	84
 10574  2BAA  0020               	movlb	0	; select bank0
 10575  2BAB  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10576  2BAC  300B               	movlw	11
 10577  2BAD  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10578  2BAE  3002               	movlw	2
 10579  2BAF  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10580  2BB0  3000               	movlw	0
 10581  2BB1  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10582  2BB2  31A3  2384  31AB   	fcall	_setCellUndervoltageProtection
 10583                           
 10584                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 10585  2BB5  3004               	movlw	4
 10586  2BB6  0020               	movlb	0	; select bank0
 10587  2BB7  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10588  2BB8  3010               	movlw	16
 10589  2BB9  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10590  2BBA  3002               	movlw	2
 10591  2BBB  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10592  2BBC  3000               	movlw	0
 10593  2BBD  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10594  2BBE  31A2  22B0         	fcall	_setCellOvervoltageProtection
 10595  2BC0  0008               	return
 10596  2BC1                     __end_of_init_AFE:	
 10597                           
 10598                           	psect	text36
 10599  2A30                     __ptext36:	
 10600 ;; *************** function _setTemperatureLimitsint *****************
 10601 ;; Defined at:
 10602 ;;		line 56 in file "BQ76920.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  minDischarge    2    0[BANK0 ] int 
 10605 ;;  maxDischarge    2    2[BANK0 ] int 
 10606 ;;  minCharge_de    2    4[BANK0 ] int 
 10607 ;;  maxCharge_de    2    6[BANK0 ] int 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0, pclath, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10619 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10622 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10623 ;;Total ram usage:        8 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    2
 10626 ;; This function calls:
 10627 ;;		___wmul
 10628 ;; This function is called by:
 10629 ;;		_init_AFE
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function _setTemperatureLimitsint
 10635  2A30                     _setTemperatureLimitsint:	
 10636                           
 10637                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 10638                           
 10639                           ;incstack = 0
 10640                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10641  2A30  0020               	movlb	0	; select bank0
 10642  2A31  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10643  2A32  00F2               	movwf	___wmul@multiplier+1
 10644  2A33  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10645  2A34  00F1               	movwf	___wmul@multiplier
 10646  2A35  300A               	movlw	10
 10647  2A36  00F3               	movwf	___wmul@multiplicand
 10648  2A37  3000               	movlw	0
 10649  2A38  00F4               	movwf	___wmul@multiplicand+1
 10650  2A39  31B7  27E5  31AA   	fcall	___wmul
 10651  2A3C  0872               	movf	?___wmul+1,w
 10652  2A3D  0023               	movlb	3	; select bank3
 10653  2A3E  00CB               	movwf	(_minCellTempDischarge+1)^(0+384)
 10654  2A3F  0871               	movf	?___wmul,w
 10655  2A40  00CA               	movwf	_minCellTempDischarge^(0+384)
 10656                           
 10657                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 10658  2A41  0020               	movlb	0	; select bank0
 10659  2A42  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 10660  2A43  00F2               	movwf	___wmul@multiplier+1
 10661  2A44  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 10662  2A45  00F1               	movwf	___wmul@multiplier
 10663  2A46  300A               	movlw	10
 10664  2A47  00F3               	movwf	___wmul@multiplicand
 10665  2A48  3000               	movlw	0
 10666  2A49  00F4               	movwf	___wmul@multiplicand+1
 10667  2A4A  31B7  27E5  31AA   	fcall	___wmul
 10668  2A4D  0872               	movf	?___wmul+1,w
 10669  2A4E  0023               	movlb	3	; select bank3
 10670  2A4F  00C7               	movwf	(_maxCellTempDischarge+1)^(0+384)
 10671  2A50  0871               	movf	?___wmul,w
 10672  2A51  00C6               	movwf	_maxCellTempDischarge^(0+384)
 10673                           
 10674                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 10675  2A52  0020               	movlb	0	; select bank0
 10676  2A53  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 10677  2A54  00F2               	movwf	___wmul@multiplier+1
 10678  2A55  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 10679  2A56  00F1               	movwf	___wmul@multiplier
 10680  2A57  300A               	movlw	10
 10681  2A58  00F3               	movwf	___wmul@multiplicand
 10682  2A59  3000               	movlw	0
 10683  2A5A  00F4               	movwf	___wmul@multiplicand+1
 10684  2A5B  31B7  27E5  31AA   	fcall	___wmul
 10685  2A5E  0872               	movf	?___wmul+1,w
 10686  2A5F  0023               	movlb	3	; select bank3
 10687  2A60  00CD               	movwf	(_minCellTempCharge+1)^(0+384)
 10688  2A61  0871               	movf	?___wmul,w
 10689  2A62  00CC               	movwf	_minCellTempCharge^(0+384)
 10690                           
 10691                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 10692  2A63  0020               	movlb	0	; select bank0
 10693  2A64  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 10694  2A65  00F2               	movwf	___wmul@multiplier+1
 10695  2A66  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 10696  2A67  00F1               	movwf	___wmul@multiplier
 10697  2A68  300A               	movlw	10
 10698  2A69  00F3               	movwf	___wmul@multiplicand
 10699  2A6A  3000               	movlw	0
 10700  2A6B  00F4               	movwf	___wmul@multiplicand+1
 10701  2A6C  31B7  27E5         	fcall	___wmul
 10702  2A6E  0872               	movf	?___wmul+1,w
 10703  2A6F  0023               	movlb	3	; select bank3
 10704  2A70  00C9               	movwf	(_maxCellTempCharge+1)^(0+384)
 10705  2A71  0871               	movf	?___wmul,w
 10706  2A72  00C8               	movwf	_maxCellTempCharge^(0+384)
 10707  2A73  0008               	return
 10708  2A74                     __end_of_setTemperatureLimitsint:	
 10709                           
 10710                           	psect	text37
 10711  37E5                     __ptext37:	
 10712 ;; *************** function ___wmul *****************
 10713 ;; Defined at:
 10714 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  multiplier      2    1[COMMON] unsigned int 
 10717 ;;  multiplicand    2    3[COMMON] unsigned int 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  product         2    5[COMMON] unsigned int 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  2    1[COMMON] unsigned int 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10733 ;;Total ram usage:        6 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    1
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_setTemperatureLimitsint
 10740 ;;		_atoi
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function ___wmul
 10746  37E5                     ___wmul:	
 10747                           
 10748                           ;incstack = 0
 10749                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10750  37E5  01F5               	clrf	___wmul@product
 10751  37E6  01F6               	clrf	___wmul@product+1
 10752  37E7                     l6213:	
 10753  37E7  1C71               	btfss	___wmul@multiplier,0
 10754  37E8  2FED               	goto	l828
 10755  37E9  0873               	movf	___wmul@multiplicand,w
 10756  37EA  07F5               	addwf	___wmul@product,f
 10757  37EB  0874               	movf	___wmul@multiplicand+1,w
 10758  37EC  3DF6               	addwfc	___wmul@product+1,f
 10759  37ED                     l828:	
 10760  37ED  3001               	movlw	1
 10761  37EE                     u7895:	
 10762  37EE  35F3               	lslf	___wmul@multiplicand,f
 10763  37EF  0DF4               	rlf	___wmul@multiplicand+1,f
 10764  37F0  0B89               	decfsz	9,f
 10765  37F1  2FEE               	goto	u7895
 10766  37F2  3001               	movlw	1
 10767  37F3                     u7905:	
 10768  37F3  36F2               	lsrf	___wmul@multiplier+1,f
 10769  37F4  0CF1               	rrf	___wmul@multiplier,f
 10770  37F5  0B89               	decfsz	9,f
 10771  37F6  2FF3               	goto	u7905
 10772  37F7  0871               	movf	___wmul@multiplier,w
 10773  37F8  0472               	iorwf	___wmul@multiplier+1,w
 10774  37F9  1D03               	btfss	3,2
 10775  37FA  2FE7               	goto	l6213
 10776  37FB  0876               	movf	___wmul@product+1,w
 10777  37FC  00F2               	movwf	?___wmul+1
 10778  37FD  0875               	movf	___wmul@product,w
 10779  37FE  00F1               	movwf	?___wmul
 10780  37FF  0008               	return
 10781  3800                     __end_of___wmul:	
 10782                           
 10783                           	psect	text38
 10784  370B                     __ptext38:	
 10785 ;; *************** function _setShuntResistorValue *****************
 10786 ;; Defined at:
 10787 ;;		line 68 in file "BQ76920.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  res_mOhm        4    1[COMMON] float 
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;		None
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      void 
 10794 ;; Registers used:
 10795 ;;		wreg
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10805 ;;Total ram usage:        4 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:    1
 10808 ;; This function calls:
 10809 ;;		Nothing
 10810 ;; This function is called by:
 10811 ;;		_init_AFE
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           
 10816                           ;psect for function _setShuntResistorValue
 10817  370B                     _setShuntResistorValue:	
 10818                           
 10819                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 10820                           
 10821                           ;incstack = 0
 10822                           ; Regs used in _setShuntResistorValue: [wreg]
 10823  370B  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 10824  370C  0023               	movlb	3	; select bank3
 10825  370D  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 10826  370E  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 10827  370F  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 10828  3710  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 10829  3711  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 10830  3712  0871               	movf	setShuntResistorValue@res_mOhm,w
 10831  3713  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 10832  3714  0008               	return
 10833  3715                     __end_of_setShuntResistorValue:	
 10834                           
 10835                           	psect	text39
 10836  1003                     __ptext39:	
 10837 ;; *************** function _setShortCircuitProtection *****************
 10838 ;; Defined at:
 10839 ;;		line 76 in file "BQ76920.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  current_mA      4   70[BANK0 ] long 
 10842 ;;  delay_us        2   74[BANK0 ] int 
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  i               2   10[BANK1 ] int 
 10845 ;;  i               2    8[BANK1 ] int 
 10846 ;;  scaler          4    0[BANK1 ] float 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10856 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10857 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;Total ram usage:       21 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    3
 10863 ;; This function calls:
 10864 ;;		_I2C_writeRegister
 10865 ;;		___fldiv
 10866 ;;		___flge
 10867 ;;		___flmul
 10868 ;;		___xxtofl
 10869 ;; This function is called by:
 10870 ;;		_init_AFE
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           
 10875                           ;psect for function _setShortCircuitProtection
 10876  1003                     _setShortCircuitProtection:	
 10877                           
 10878                           ;BQ76920.c: 81:     float scaler = 1000.0;
 10879                           
 10880                           ;incstack = 0
 10881                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10882  1003  3044               	movlw	68
 10883  1004  0021               	movlb	1	; select bank1
 10884  1005  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 10885  1006  307A               	movlw	122
 10886  1007  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 10887  1008  3000               	movlw	0
 10888  1009  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 10889  100A  3000               	movlw	0
 10890  100B  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 10891                           
 10892                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 10893  100C  30F8               	movlw	-8
 10894  100D  0022               	movlb	2	; select bank2
 10895  100E  05EA               	andwf	BQ76920@protect1^(0+256),f
 10896                           
 10897                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 10898  100F  0021               	movlb	1	; select bank1
 10899  1010  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 10900  1011  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 10901  1012                     l7903:	
 10902                           
 10903                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 10904  1012  0023               	movlb	3	; select bank3
 10905  1013  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 10906  1014  0020               	movlb	0	; select bank0
 10907  1015  00A9               	movwf	___flmul@b+3
 10908  1016  0023               	movlb	3	; select bank3
 10909  1017  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 10910  1018  0020               	movlb	0	; select bank0
 10911  1019  00A8               	movwf	___flmul@b+2
 10912  101A  0023               	movlb	3	; select bank3
 10913  101B  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 10914  101C  0020               	movlb	0	; select bank0
 10915  101D  00A7               	movwf	___flmul@b+1
 10916  101E  0023               	movlb	3	; select bank3
 10917  101F  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 10918  1020  0020               	movlb	0	; select bank0
 10919  1021  00A6               	movwf	___flmul@b
 10920  1022  0869               	movf	setShortCircuitProtection@current_mA+3,w
 10921  1023  00F4               	movwf	___xxtofl@val+3
 10922  1024  0868               	movf	setShortCircuitProtection@current_mA+2,w
 10923  1025  00F3               	movwf	___xxtofl@val+2
 10924  1026  0867               	movf	setShortCircuitProtection@current_mA+1,w
 10925  1027  00F2               	movwf	___xxtofl@val+1
 10926  1028  0866               	movf	setShortCircuitProtection@current_mA,w
 10927  1029  00F1               	movwf	___xxtofl@val
 10928  102A  3001               	movlw	1
 10929  102B  31AE  26C9  3190   	fcall	___xxtofl
 10930  102E  0874               	movf	?___xxtofl+3,w
 10931  102F  0020               	movlb	0	; select bank0
 10932  1030  00AD               	movwf	___flmul@a+3
 10933  1031  0873               	movf	?___xxtofl+2,w
 10934  1032  00AC               	movwf	___flmul@a+2
 10935  1033  0872               	movf	?___xxtofl+1,w
 10936  1034  00AB               	movwf	___flmul@a+1
 10937  1035  0871               	movf	?___xxtofl,w
 10938  1036  00AA               	movwf	___flmul@a
 10939  1037  3192  22FC  3190   	fcall	___flmul
 10940  103A  0020               	movlb	0	; select bank0
 10941  103B  0829               	movf	?___flmul+3,w
 10942  103C  0021               	movlb	1	; select bank1
 10943  103D  00A7               	movwf	(_setShortCircuitProtection$2023+3)^(0+128)
 10944  103E  0020               	movlb	0	; select bank0
 10945  103F  0828               	movf	?___flmul+2,w
 10946  1040  0021               	movlb	1	; select bank1
 10947  1041  00A6               	movwf	(_setShortCircuitProtection$2023+2)^(0+128)
 10948  1042  0020               	movlb	0	; select bank0
 10949  1043  0827               	movf	?___flmul+1,w
 10950  1044  0021               	movlb	1	; select bank1
 10951  1045  00A5               	movwf	(_setShortCircuitProtection$2023+1)^(0+128)
 10952  1046  0020               	movlb	0	; select bank0
 10953  1047  0826               	movf	?___flmul,w
 10954  1048  0021               	movlb	1	; select bank1
 10955  1049  00A4               	movwf	_setShortCircuitProtection$2023^(0+128)
 10956                           
 10957                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 10958  104A  3044               	movlw	68
 10959  104B  0020               	movlb	0	; select bank0
 10960  104C  00C3               	movwf	___fldiv@a+3
 10961  104D  307A               	movlw	122
 10962  104E  00C2               	movwf	___fldiv@a+2
 10963  104F  3000               	movlw	0
 10964  1050  00C1               	movwf	___fldiv@a+1
 10965  1051  3000               	movlw	0
 10966  1052  00C0               	movwf	___fldiv@a
 10967  1053  0021               	movlb	1	; select bank1
 10968  1054  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 10969  1055  0020               	movlb	0	; select bank0
 10970  1056  00A9               	movwf	___flmul@b+3
 10971  1057  0021               	movlb	1	; select bank1
 10972  1058  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 10973  1059  0020               	movlb	0	; select bank0
 10974  105A  00A8               	movwf	___flmul@b+2
 10975  105B  0021               	movlb	1	; select bank1
 10976  105C  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 10977  105D  0020               	movlb	0	; select bank0
 10978  105E  00A7               	movwf	___flmul@b+1
 10979  105F  0021               	movlb	1	; select bank1
 10980  1060  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 10981  1061  0020               	movlb	0	; select bank0
 10982  1062  00A6               	movwf	___flmul@b
 10983  1063  0021               	movlb	1	; select bank1
 10984  1064  0827               	movf	(_setShortCircuitProtection$2023+3)^(0+128),w
 10985  1065  0020               	movlb	0	; select bank0
 10986  1066  00AD               	movwf	___flmul@a+3
 10987  1067  0021               	movlb	1	; select bank1
 10988  1068  0826               	movf	(_setShortCircuitProtection$2023+2)^(0+128),w
 10989  1069  0020               	movlb	0	; select bank0
 10990  106A  00AC               	movwf	___flmul@a+2
 10991  106B  0021               	movlb	1	; select bank1
 10992  106C  0825               	movf	(_setShortCircuitProtection$2023+1)^(0+128),w
 10993  106D  0020               	movlb	0	; select bank0
 10994  106E  00AB               	movwf	___flmul@a+1
 10995  106F  0021               	movlb	1	; select bank1
 10996  1070  0824               	movf	_setShortCircuitProtection$2023^(0+128),w
 10997  1071  0020               	movlb	0	; select bank0
 10998  1072  00AA               	movwf	___flmul@a
 10999  1073  3192  22FC  3190   	fcall	___flmul
 11000  1076  0020               	movlb	0	; select bank0
 11001  1077  0829               	movf	?___flmul+3,w
 11002  1078  00C7               	movwf	___fldiv@b+3
 11003  1079  0828               	movf	?___flmul+2,w
 11004  107A  00C6               	movwf	___fldiv@b+2
 11005  107B  0827               	movf	?___flmul+1,w
 11006  107C  00C5               	movwf	___fldiv@b+1
 11007  107D  0826               	movf	?___flmul,w
 11008  107E  00C4               	movwf	___fldiv@b
 11009  107F  319C  24E1  3190   	fcall	___fldiv
 11010  1082  0020               	movlb	0	; select bank0
 11011  1083  0843               	movf	?___fldiv+3,w
 11012  1084  00DD               	movwf	___flge@ff1+3
 11013  1085  0842               	movf	?___fldiv+2,w
 11014  1086  00DC               	movwf	___flge@ff1+2
 11015  1087  0841               	movf	?___fldiv+1,w
 11016  1088  00DB               	movwf	___flge@ff1+1
 11017  1089  0840               	movf	?___fldiv,w
 11018  108A  00DA               	movwf	___flge@ff1
 11019  108B  0021               	movlb	1	; select bank1
 11020  108C  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11021  108D  0085               	movwf	5
 11022  108E  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11023  108F  0084               	movwf	4
 11024  1090  3584               	lslf	4,f
 11025  1091  0D85               	rlf	5,f
 11026  1092  3004               	movlw	low (_SCD_threshold_setting| (0+32768))
 11027  1093  0784               	addwf	4,f
 11028  1094  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11029  1095  3D85               	addwfc	5,f
 11030  1096  3F00               	moviw [0]fsr0
 11031  1097  0020               	movlb	0	; select bank0
 11032  1098  00EC               	movwf	??_setShortCircuitProtection
 11033  1099  3F01               	moviw [1]fsr0
 11034  109A  00ED               	movwf	??_setShortCircuitProtection+1
 11035  109B  086C               	movf	??_setShortCircuitProtection,w
 11036  109C  00F1               	movwf	___xxtofl@val
 11037  109D  086D               	movf	??_setShortCircuitProtection+1,w
 11038  109E  00F2               	movwf	___xxtofl@val+1
 11039  109F  0D89               	rlf	9,f
 11040  10A0  3B89               	subwfb	9,f
 11041  10A1  0989               	comf	9,f
 11042  10A2  00F3               	movwf	___xxtofl@val+2
 11043  10A3  00F4               	movwf	___xxtofl@val+3
 11044  10A4  3001               	movlw	1
 11045  10A5  31AE  26C9  3190   	fcall	___xxtofl
 11046  10A8  0874               	movf	?___xxtofl+3,w
 11047  10A9  0020               	movlb	0	; select bank0
 11048  10AA  00E1               	movwf	___flge@ff2+3
 11049  10AB  0873               	movf	?___xxtofl+2,w
 11050  10AC  00E0               	movwf	___flge@ff2+2
 11051  10AD  0872               	movf	?___xxtofl+1,w
 11052  10AE  00DF               	movwf	___flge@ff2+1
 11053  10AF  0871               	movf	?___xxtofl,w
 11054  10B0  00DE               	movwf	___flge@ff2
 11055  10B1  31AD  2554  3190   	fcall	___flge
 11056  10B4  1C03               	btfss	3,0
 11057  10B5  28BE               	goto	l7909
 11058                           
 11059                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 11060  10B6  0022               	movlb	2	; select bank2
 11061  10B7  086A               	movf	BQ76920@protect1^(0+256),w
 11062  10B8  0021               	movlb	1	; select bank1
 11063  10B9  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11064  10BA  39F8               	andlw	-8
 11065  10BB  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11066  10BC  0022               	movlb	2	; select bank2
 11067  10BD  00EA               	movwf	BQ76920@protect1^(0+256)
 11068  10BE                     l7909:	
 11069                           
 11070                           ;BQ76920.c: 87:     }
 11071  10BE  3001               	movlw	1
 11072  10BF  0021               	movlb	1	; select bank1
 11073  10C0  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11074  10C1  3000               	movlw	0
 11075  10C2  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11076  10C3  3000               	movlw	0
 11077  10C4  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11078  10C5  3007               	movlw	7
 11079  10C6  1903               	skipnz
 11080  10C7  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11081  10C8  1C03               	skipc
 11082  10C9  2812               	goto	l7903
 11083                           
 11084                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 11085  10CA  30E7               	movlw	-25
 11086  10CB  0022               	movlb	2	; select bank2
 11087  10CC  05EA               	andwf	BQ76920@protect1^(0+256),f
 11088                           
 11089                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11090  10CD  0021               	movlb	1	; select bank1
 11091  10CE  01AA               	clrf	setShortCircuitProtection@i_949^(0+128)
 11092  10CF  01AB               	clrf	(setShortCircuitProtection@i_949+1)^(0+128)
 11093  10D0                     l7921:	
 11094                           
 11095                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 11096  10D0  082B               	movf	(setShortCircuitProtection@i_949+1)^(0+128),w
 11097  10D1  0085               	movwf	5
 11098  10D2  082A               	movf	setShortCircuitProtection@i_949^(0+128),w
 11099  10D3  0084               	movwf	4
 11100  10D4  3584               	lslf	4,f
 11101  10D5  0D85               	rlf	5,f
 11102  10D6  3024               	movlw	low (_SCD_delay_setting| (0+32768))
 11103  10D7  0784               	addwf	4,f
 11104  10D8  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11105  10D9  3D85               	addwfc	5,f
 11106  10DA  3F00               	moviw [0]fsr0
 11107  10DB  0020               	movlb	0	; select bank0
 11108  10DC  00EC               	movwf	??_setShortCircuitProtection
 11109  10DD  3F01               	moviw [1]fsr0
 11110  10DE  00ED               	movwf	??_setShortCircuitProtection+1
 11111  10DF  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11112  10E0  3A80               	xorlw	128
 11113  10E1  00EE               	movwf	??_setShortCircuitProtection+2
 11114  10E2  086D               	movf	??_setShortCircuitProtection+1,w
 11115  10E3  3A80               	xorlw	128
 11116  10E4  026E               	subwf	??_setShortCircuitProtection+2,w
 11117  10E5  1D03               	skipz
 11118  10E6  28E9               	goto	u11115
 11119  10E7  086C               	movf	??_setShortCircuitProtection,w
 11120  10E8  026A               	subwf	setShortCircuitProtection@delay_us,w
 11121  10E9                     u11115:	
 11122  10E9  1C03               	skipc
 11123  10EA  28FA               	goto	l7925
 11124                           
 11125                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 11126  10EB  0021               	movlb	1	; select bank1
 11127  10EC  082A               	movf	setShortCircuitProtection@i_949^(0+128),w
 11128  10ED  0020               	movlb	0	; select bank0
 11129  10EE  00EC               	movwf	??_setShortCircuitProtection
 11130  10EF  0DEC               	rlf	??_setShortCircuitProtection,f
 11131  10F0  0DEC               	rlf	??_setShortCircuitProtection,f
 11132  10F1  0DEC               	rlf	??_setShortCircuitProtection,f
 11133  10F2  0022               	movlb	2	; select bank2
 11134  10F3  086A               	movf	BQ76920@protect1^(0+256),w
 11135  10F4  0020               	movlb	0	; select bank0
 11136  10F5  066C               	xorwf	??_setShortCircuitProtection,w
 11137  10F6  39E7               	andlw	-25
 11138  10F7  066C               	xorwf	??_setShortCircuitProtection,w
 11139  10F8  0022               	movlb	2	; select bank2
 11140  10F9  00EA               	movwf	BQ76920@protect1^(0+256)
 11141  10FA                     l7925:	
 11142                           
 11143                           ;BQ76920.c: 94:     }
 11144  10FA  3001               	movlw	1
 11145  10FB  0021               	movlb	1	; select bank1
 11146  10FC  07AA               	addwf	setShortCircuitProtection@i_949^(0+128),f
 11147  10FD  3000               	movlw	0
 11148  10FE  3DAB               	addwfc	(setShortCircuitProtection@i_949+1)^(0+128),f
 11149  10FF  3000               	movlw	0
 11150  1100  022B               	subwf	(setShortCircuitProtection@i_949+1)^(0+128),w
 11151  1101  3007               	movlw	7
 11152  1102  1903               	skipnz
 11153  1103  022A               	subwf	setShortCircuitProtection@i_949^(0+128),w
 11154  1104  1C03               	skipc
 11155  1105  28D0               	goto	l7921
 11156                           
 11157                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11158  1106  3018               	movlw	24
 11159  1107  00F5               	movwf	I2C_writeRegister@slaveAddress
 11160  1108  3000               	movlw	0
 11161  1109  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11162  110A  3006               	movlw	6
 11163  110B  00F7               	movwf	I2C_writeRegister@regAddress
 11164  110C  3000               	movlw	0
 11165  110D  00F8               	movwf	I2C_writeRegister@regAddress+1
 11166  110E  0022               	movlb	2	; select bank2
 11167  110F  086A               	movf	BQ76920@protect1^(0+256),w
 11168  1110  0020               	movlb	0	; select bank0
 11169  1111  00EC               	movwf	??_setShortCircuitProtection
 11170  1112  01ED               	clrf	??_setShortCircuitProtection+1
 11171  1113  086C               	movf	??_setShortCircuitProtection,w
 11172  1114  00F9               	movwf	I2C_writeRegister@data
 11173  1115  086D               	movf	??_setShortCircuitProtection+1,w
 11174  1116  00FA               	movwf	I2C_writeRegister@data+1
 11175  1117  31A8  205D         	fcall	_I2C_writeRegister
 11176  1119  0008               	return
 11177  111A                     __end_of_setShortCircuitProtection:	
 11178                           
 11179                           	psect	text40
 11180  1920                     __ptext40:	
 11181 ;; *************** function _setOverCurrentDischargeProtection *****************
 11182 ;; Defined at:
 11183 ;;		line 103 in file "BQ76920.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  current_mA      4   70[BANK0 ] long 
 11186 ;;  delay_ms        2   74[BANK0 ] int 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  i               2   10[BANK1 ] int 
 11189 ;;  i               2    8[BANK1 ] int 
 11190 ;;  scaler          4    0[BANK1 ] float 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  1    wreg      void 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11200 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;Total ram usage:       21 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:    3
 11207 ;; This function calls:
 11208 ;;		_I2C_writeRegister
 11209 ;;		___fldiv
 11210 ;;		___flge
 11211 ;;		___flmul
 11212 ;;		___xxtofl
 11213 ;; This function is called by:
 11214 ;;		_init_AFE
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           
 11219                           ;psect for function _setOverCurrentDischargeProtection
 11220  1920                     _setOverCurrentDischargeProtection:	
 11221                           
 11222                           ;BQ76920.c: 106:     float scaler = 1000.0;
 11223                           
 11224                           ;incstack = 0
 11225                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11226  1920  3044               	movlw	68
 11227  1921  0021               	movlb	1	; select bank1
 11228  1922  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11229  1923  307A               	movlw	122
 11230  1924  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11231  1925  3000               	movlw	0
 11232  1926  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11233  1927  3000               	movlw	0
 11234  1928  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11235                           
 11236                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 11237  1929  30F0               	movlw	-16
 11238  192A  0022               	movlb	2	; select bank2
 11239  192B  05E9               	andwf	BQ76920@protect2^(0+256),f
 11240                           
 11241                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11242  192C  0021               	movlb	1	; select bank1
 11243  192D  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11244  192E  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11245  192F                     l7941:	
 11246                           
 11247                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11248  192F  0023               	movlb	3	; select bank3
 11249  1930  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11250  1931  0020               	movlb	0	; select bank0
 11251  1932  00A9               	movwf	___flmul@b+3
 11252  1933  0023               	movlb	3	; select bank3
 11253  1934  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11254  1935  0020               	movlb	0	; select bank0
 11255  1936  00A8               	movwf	___flmul@b+2
 11256  1937  0023               	movlb	3	; select bank3
 11257  1938  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11258  1939  0020               	movlb	0	; select bank0
 11259  193A  00A7               	movwf	___flmul@b+1
 11260  193B  0023               	movlb	3	; select bank3
 11261  193C  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11262  193D  0020               	movlb	0	; select bank0
 11263  193E  00A6               	movwf	___flmul@b
 11264  193F  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11265  1940  00F4               	movwf	___xxtofl@val+3
 11266  1941  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11267  1942  00F3               	movwf	___xxtofl@val+2
 11268  1943  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11269  1944  00F2               	movwf	___xxtofl@val+1
 11270  1945  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11271  1946  00F1               	movwf	___xxtofl@val
 11272  1947  3001               	movlw	1
 11273  1948  31AE  26C9  3199   	fcall	___xxtofl
 11274  194B  0874               	movf	?___xxtofl+3,w
 11275  194C  0020               	movlb	0	; select bank0
 11276  194D  00AD               	movwf	___flmul@a+3
 11277  194E  0873               	movf	?___xxtofl+2,w
 11278  194F  00AC               	movwf	___flmul@a+2
 11279  1950  0872               	movf	?___xxtofl+1,w
 11280  1951  00AB               	movwf	___flmul@a+1
 11281  1952  0871               	movf	?___xxtofl,w
 11282  1953  00AA               	movwf	___flmul@a
 11283  1954  3192  22FC  3199   	fcall	___flmul
 11284  1957  0020               	movlb	0	; select bank0
 11285  1958  0829               	movf	?___flmul+3,w
 11286  1959  0021               	movlb	1	; select bank1
 11287  195A  00A7               	movwf	(_setOverCurrentDischargeProtection$2024+3)^(0+128)
 11288  195B  0020               	movlb	0	; select bank0
 11289  195C  0828               	movf	?___flmul+2,w
 11290  195D  0021               	movlb	1	; select bank1
 11291  195E  00A6               	movwf	(_setOverCurrentDischargeProtection$2024+2)^(0+128)
 11292  195F  0020               	movlb	0	; select bank0
 11293  1960  0827               	movf	?___flmul+1,w
 11294  1961  0021               	movlb	1	; select bank1
 11295  1962  00A5               	movwf	(_setOverCurrentDischargeProtection$2024+1)^(0+128)
 11296  1963  0020               	movlb	0	; select bank0
 11297  1964  0826               	movf	?___flmul,w
 11298  1965  0021               	movlb	1	; select bank1
 11299  1966  00A4               	movwf	_setOverCurrentDischargeProtection$2024^(0+128)
 11300                           
 11301                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11302  1967  3044               	movlw	68
 11303  1968  0020               	movlb	0	; select bank0
 11304  1969  00C3               	movwf	___fldiv@a+3
 11305  196A  307A               	movlw	122
 11306  196B  00C2               	movwf	___fldiv@a+2
 11307  196C  3000               	movlw	0
 11308  196D  00C1               	movwf	___fldiv@a+1
 11309  196E  3000               	movlw	0
 11310  196F  00C0               	movwf	___fldiv@a
 11311  1970  0021               	movlb	1	; select bank1
 11312  1971  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11313  1972  0020               	movlb	0	; select bank0
 11314  1973  00A9               	movwf	___flmul@b+3
 11315  1974  0021               	movlb	1	; select bank1
 11316  1975  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11317  1976  0020               	movlb	0	; select bank0
 11318  1977  00A8               	movwf	___flmul@b+2
 11319  1978  0021               	movlb	1	; select bank1
 11320  1979  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11321  197A  0020               	movlb	0	; select bank0
 11322  197B  00A7               	movwf	___flmul@b+1
 11323  197C  0021               	movlb	1	; select bank1
 11324  197D  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11325  197E  0020               	movlb	0	; select bank0
 11326  197F  00A6               	movwf	___flmul@b
 11327  1980  0021               	movlb	1	; select bank1
 11328  1981  0827               	movf	(_setOverCurrentDischargeProtection$2024+3)^(0+128),w
 11329  1982  0020               	movlb	0	; select bank0
 11330  1983  00AD               	movwf	___flmul@a+3
 11331  1984  0021               	movlb	1	; select bank1
 11332  1985  0826               	movf	(_setOverCurrentDischargeProtection$2024+2)^(0+128),w
 11333  1986  0020               	movlb	0	; select bank0
 11334  1987  00AC               	movwf	___flmul@a+2
 11335  1988  0021               	movlb	1	; select bank1
 11336  1989  0825               	movf	(_setOverCurrentDischargeProtection$2024+1)^(0+128),w
 11337  198A  0020               	movlb	0	; select bank0
 11338  198B  00AB               	movwf	___flmul@a+1
 11339  198C  0021               	movlb	1	; select bank1
 11340  198D  0824               	movf	_setOverCurrentDischargeProtection$2024^(0+128),w
 11341  198E  0020               	movlb	0	; select bank0
 11342  198F  00AA               	movwf	___flmul@a
 11343  1990  3192  22FC  3199   	fcall	___flmul
 11344  1993  0020               	movlb	0	; select bank0
 11345  1994  0829               	movf	?___flmul+3,w
 11346  1995  00C7               	movwf	___fldiv@b+3
 11347  1996  0828               	movf	?___flmul+2,w
 11348  1997  00C6               	movwf	___fldiv@b+2
 11349  1998  0827               	movf	?___flmul+1,w
 11350  1999  00C5               	movwf	___fldiv@b+1
 11351  199A  0826               	movf	?___flmul,w
 11352  199B  00C4               	movwf	___fldiv@b
 11353  199C  319C  24E1  3199   	fcall	___fldiv
 11354  199F  0020               	movlb	0	; select bank0
 11355  19A0  0843               	movf	?___fldiv+3,w
 11356  19A1  00DD               	movwf	___flge@ff1+3
 11357  19A2  0842               	movf	?___fldiv+2,w
 11358  19A3  00DC               	movwf	___flge@ff1+2
 11359  19A4  0841               	movf	?___fldiv+1,w
 11360  19A5  00DB               	movwf	___flge@ff1+1
 11361  19A6  0840               	movf	?___fldiv,w
 11362  19A7  00DA               	movwf	___flge@ff1
 11363  19A8  0021               	movlb	1	; select bank1
 11364  19A9  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11365  19AA  0085               	movwf	5
 11366  19AB  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11367  19AC  0084               	movwf	4
 11368  19AD  3584               	lslf	4,f
 11369  19AE  0D85               	rlf	5,f
 11370  19AF  3065               	movlw	low (_OCD_threshold_setting| (0+32768))
 11371  19B0  0784               	addwf	4,f
 11372  19B1  30B0               	movlw	high (_OCD_threshold_setting| (0+32768))
 11373  19B2  3D85               	addwfc	5,f
 11374  19B3  3F00               	moviw [0]fsr0
 11375  19B4  0020               	movlb	0	; select bank0
 11376  19B5  00EC               	movwf	??_setOverCurrentDischargeProtection
 11377  19B6  3F01               	moviw [1]fsr0
 11378  19B7  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11379  19B8  086C               	movf	??_setOverCurrentDischargeProtection,w
 11380  19B9  00F1               	movwf	___xxtofl@val
 11381  19BA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11382  19BB  00F2               	movwf	___xxtofl@val+1
 11383  19BC  0D89               	rlf	9,f
 11384  19BD  3B89               	subwfb	9,f
 11385  19BE  0989               	comf	9,f
 11386  19BF  00F3               	movwf	___xxtofl@val+2
 11387  19C0  00F4               	movwf	___xxtofl@val+3
 11388  19C1  3001               	movlw	1
 11389  19C2  31AE  26C9  3199   	fcall	___xxtofl
 11390  19C5  0874               	movf	?___xxtofl+3,w
 11391  19C6  0020               	movlb	0	; select bank0
 11392  19C7  00E1               	movwf	___flge@ff2+3
 11393  19C8  0873               	movf	?___xxtofl+2,w
 11394  19C9  00E0               	movwf	___flge@ff2+2
 11395  19CA  0872               	movf	?___xxtofl+1,w
 11396  19CB  00DF               	movwf	___flge@ff2+1
 11397  19CC  0871               	movf	?___xxtofl,w
 11398  19CD  00DE               	movwf	___flge@ff2
 11399  19CE  31AD  2554  3199   	fcall	___flge
 11400  19D1  1C03               	btfss	3,0
 11401  19D2  29DB               	goto	l7947
 11402                           
 11403                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 11404  19D3  0022               	movlb	2	; select bank2
 11405  19D4  0869               	movf	BQ76920@protect2^(0+256),w
 11406  19D5  0021               	movlb	1	; select bank1
 11407  19D6  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11408  19D7  39F0               	andlw	-16
 11409  19D8  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11410  19D9  0022               	movlb	2	; select bank2
 11411  19DA  00E9               	movwf	BQ76920@protect2^(0+256)
 11412  19DB                     l7947:	
 11413                           
 11414                           ;BQ76920.c: 112:     }
 11415  19DB  3001               	movlw	1
 11416  19DC  0021               	movlb	1	; select bank1
 11417  19DD  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11418  19DE  3000               	movlw	0
 11419  19DF  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11420  19E0  3000               	movlw	0
 11421  19E1  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11422  19E2  300F               	movlw	15
 11423  19E3  1903               	skipnz
 11424  19E4  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11425  19E5  1C03               	skipc
 11426  19E6  292F               	goto	l7941
 11427                           
 11428                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 11429  19E7  308F               	movlw	-113
 11430  19E8  0022               	movlb	2	; select bank2
 11431  19E9  05E9               	andwf	BQ76920@protect2^(0+256),f
 11432                           
 11433                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11434  19EA  0021               	movlb	1	; select bank1
 11435  19EB  01AA               	clrf	setOverCurrentDischargeProtection@i_958^(0+128)
 11436  19EC  01AB               	clrf	(setOverCurrentDischargeProtection@i_958+1)^(0+128)
 11437  19ED                     l7959:	
 11438                           
 11439                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 11440  19ED  082B               	movf	(setOverCurrentDischargeProtection@i_958+1)^(0+128),w
 11441  19EE  0085               	movwf	5
 11442  19EF  082A               	movf	setOverCurrentDischargeProtection@i_958^(0+128),w
 11443  19F0  0084               	movwf	4
 11444  19F1  3584               	lslf	4,f
 11445  19F2  0D85               	rlf	5,f
 11446  19F3  30F4               	movlw	low (_OCD_delay_setting| (0+32768))
 11447  19F4  0784               	addwf	4,f
 11448  19F5  30B8               	movlw	high (_OCD_delay_setting| (0+32768))
 11449  19F6  3D85               	addwfc	5,f
 11450  19F7  3F00               	moviw [0]fsr0
 11451  19F8  0020               	movlb	0	; select bank0
 11452  19F9  00EC               	movwf	??_setOverCurrentDischargeProtection
 11453  19FA  3F01               	moviw [1]fsr0
 11454  19FB  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11455  19FC  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11456  19FD  3A80               	xorlw	128
 11457  19FE  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11458  19FF  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11459  1A00  3A80               	xorlw	128
 11460  1A01  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11461  1A02  1D03               	skipz
 11462  1A03  2A06               	goto	u11155
 11463  1A04  086C               	movf	??_setOverCurrentDischargeProtection,w
 11464  1A05  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11465  1A06                     u11155:	
 11466  1A06  1C03               	skipc
 11467  1A07  2A15               	goto	l7963
 11468                           
 11469                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 11470  1A08  0021               	movlb	1	; select bank1
 11471  1A09  082A               	movf	setOverCurrentDischargeProtection@i_958^(0+128),w
 11472  1A0A  0020               	movlb	0	; select bank0
 11473  1A0B  00EC               	movwf	??_setOverCurrentDischargeProtection
 11474  1A0C  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11475  1A0D  0022               	movlb	2	; select bank2
 11476  1A0E  0869               	movf	BQ76920@protect2^(0+256),w
 11477  1A0F  0020               	movlb	0	; select bank0
 11478  1A10  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11479  1A11  398F               	andlw	-113
 11480  1A12  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11481  1A13  0022               	movlb	2	; select bank2
 11482  1A14  00E9               	movwf	BQ76920@protect2^(0+256)
 11483  1A15                     l7963:	
 11484                           
 11485                           ;BQ76920.c: 119:     }
 11486  1A15  3001               	movlw	1
 11487  1A16  0021               	movlb	1	; select bank1
 11488  1A17  07AA               	addwf	setOverCurrentDischargeProtection@i_958^(0+128),f
 11489  1A18  3000               	movlw	0
 11490  1A19  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_958+1)^(0+128),f
 11491  1A1A  3000               	movlw	0
 11492  1A1B  022B               	subwf	(setOverCurrentDischargeProtection@i_958+1)^(0+128),w
 11493  1A1C  3007               	movlw	7
 11494  1A1D  1903               	skipnz
 11495  1A1E  022A               	subwf	setOverCurrentDischargeProtection@i_958^(0+128),w
 11496  1A1F  1C03               	skipc
 11497  1A20  29ED               	goto	l7959
 11498                           
 11499                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11500  1A21  3018               	movlw	24
 11501  1A22  00F5               	movwf	I2C_writeRegister@slaveAddress
 11502  1A23  3000               	movlw	0
 11503  1A24  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11504  1A25  3007               	movlw	7
 11505  1A26  00F7               	movwf	I2C_writeRegister@regAddress
 11506  1A27  3000               	movlw	0
 11507  1A28  00F8               	movwf	I2C_writeRegister@regAddress+1
 11508  1A29  0022               	movlb	2	; select bank2
 11509  1A2A  0869               	movf	BQ76920@protect2^(0+256),w
 11510  1A2B  0020               	movlb	0	; select bank0
 11511  1A2C  00EC               	movwf	??_setOverCurrentDischargeProtection
 11512  1A2D  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11513  1A2E  086C               	movf	??_setOverCurrentDischargeProtection,w
 11514  1A2F  00F9               	movwf	I2C_writeRegister@data
 11515  1A30  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11516  1A31  00FA               	movwf	I2C_writeRegister@data+1
 11517  1A32  31A8  205D         	fcall	_I2C_writeRegister
 11518  1A34  0008               	return
 11519  1A35                     __end_of_setOverCurrentDischargeProtection:	
 11520                           
 11521                           	psect	text41
 11522  2D54                     __ptext41:	
 11523 ;; *************** function ___flge *****************
 11524 ;; Defined at:
 11525 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  ff1             4   58[BANK0 ] void 
 11528 ;;  ff2             4   62[BANK0 ] void 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;		None
 11531 ;; Return value:  Size  Location     Type
 11532 ;;		None               void
 11533 ;; Registers used:
 11534 ;;		wreg, status,2, status,0
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11540 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;Total ram usage:       12 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    1
 11547 ;; This function calls:
 11548 ;;		Nothing
 11549 ;; This function is called by:
 11550 ;;		_setShortCircuitProtection
 11551 ;;		_setOverCurrentDischargeProtection
 11552 ;; This function uses a non-reentrant model
 11553 ;;
 11554                           
 11555                           
 11556                           ;psect for function ___flge
 11557  2D54                     ___flge:	
 11558                           
 11559                           ;incstack = 0
 11560                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11561  2D54  3000               	movlw	0
 11562  2D55  0020               	movlb	0	; select bank0
 11563  2D56  055A               	andwf	___flge@ff1,w
 11564  2D57  00E2               	movwf	??___flge
 11565  2D58  3000               	movlw	0
 11566  2D59  055B               	andwf	___flge@ff1+1,w
 11567  2D5A  00E3               	movwf	??___flge+1
 11568  2D5B  3080               	movlw	128
 11569  2D5C  055C               	andwf	___flge@ff1+2,w
 11570  2D5D  00E4               	movwf	??___flge+2
 11571  2D5E  307F               	movlw	127
 11572  2D5F  055D               	andwf	___flge@ff1+3,w
 11573  2D60  00E5               	movwf	??___flge+3
 11574  2D61  0865               	movf	??___flge+3,w
 11575  2D62  0464               	iorwf	??___flge+2,w
 11576  2D63  0463               	iorwf	??___flge+1,w
 11577  2D64  0462               	iorwf	??___flge,w
 11578  2D65  1D03               	skipz
 11579  2D66  2D6F               	goto	l1006
 11580  2D67  3000               	movlw	0
 11581  2D68  00DD               	movwf	___flge@ff1+3
 11582  2D69  3000               	movlw	0
 11583  2D6A  00DC               	movwf	___flge@ff1+2
 11584  2D6B  3000               	movlw	0
 11585  2D6C  00DB               	movwf	___flge@ff1+1
 11586  2D6D  3000               	movlw	0
 11587  2D6E  00DA               	movwf	___flge@ff1
 11588  2D6F                     l1006:	
 11589  2D6F  3000               	movlw	0
 11590  2D70  055E               	andwf	___flge@ff2,w
 11591  2D71  00E2               	movwf	??___flge
 11592  2D72  3000               	movlw	0
 11593  2D73  055F               	andwf	___flge@ff2+1,w
 11594  2D74  00E3               	movwf	??___flge+1
 11595  2D75  3080               	movlw	128
 11596  2D76  0560               	andwf	___flge@ff2+2,w
 11597  2D77  00E4               	movwf	??___flge+2
 11598  2D78  307F               	movlw	127
 11599  2D79  0561               	andwf	___flge@ff2+3,w
 11600  2D7A  00E5               	movwf	??___flge+3
 11601  2D7B  0865               	movf	??___flge+3,w
 11602  2D7C  0464               	iorwf	??___flge+2,w
 11603  2D7D  0463               	iorwf	??___flge+1,w
 11604  2D7E  0462               	iorwf	??___flge,w
 11605  2D7F  1D03               	skipz
 11606  2D80  2D89               	goto	l7789
 11607  2D81  3000               	movlw	0
 11608  2D82  00E1               	movwf	___flge@ff2+3
 11609  2D83  3000               	movlw	0
 11610  2D84  00E0               	movwf	___flge@ff2+2
 11611  2D85  3000               	movlw	0
 11612  2D86  00DF               	movwf	___flge@ff2+1
 11613  2D87  3000               	movlw	0
 11614  2D88  00DE               	movwf	___flge@ff2
 11615  2D89                     l7789:	
 11616  2D89  1FDD               	btfss	___flge@ff1+3,7
 11617  2D8A  2DA3               	goto	l7793
 11618  2D8B  3000               	movlw	0
 11619  2D8C  00E2               	movwf	??___flge
 11620  2D8D  3000               	movlw	0
 11621  2D8E  00E3               	movwf	??___flge+1
 11622  2D8F  3000               	movlw	0
 11623  2D90  00E4               	movwf	??___flge+2
 11624  2D91  3080               	movlw	128
 11625  2D92  00E5               	movwf	??___flge+3
 11626  2D93  085A               	movf	___flge@ff1,w
 11627  2D94  02E2               	subwf	??___flge,f
 11628  2D95  085B               	movf	___flge@ff1+1,w
 11629  2D96  3BE3               	subwfb	??___flge+1,f
 11630  2D97  085C               	movf	___flge@ff1+2,w
 11631  2D98  3BE4               	subwfb	??___flge+2,f
 11632  2D99  085D               	movf	___flge@ff1+3,w
 11633  2D9A  3BE5               	subwfb	??___flge+3,f
 11634  2D9B  0865               	movf	??___flge+3,w
 11635  2D9C  00DD               	movwf	___flge@ff1+3
 11636  2D9D  0864               	movf	??___flge+2,w
 11637  2D9E  00DC               	movwf	___flge@ff1+2
 11638  2D9F  0863               	movf	??___flge+1,w
 11639  2DA0  00DB               	movwf	___flge@ff1+1
 11640  2DA1  0862               	movf	??___flge,w
 11641  2DA2  00DA               	movwf	___flge@ff1
 11642  2DA3                     l7793:	
 11643  2DA3  1FE1               	btfss	___flge@ff2+3,7
 11644  2DA4  2DBD               	goto	l1009
 11645  2DA5  3000               	movlw	0
 11646  2DA6  00E2               	movwf	??___flge
 11647  2DA7  3000               	movlw	0
 11648  2DA8  00E3               	movwf	??___flge+1
 11649  2DA9  3000               	movlw	0
 11650  2DAA  00E4               	movwf	??___flge+2
 11651  2DAB  3080               	movlw	128
 11652  2DAC  00E5               	movwf	??___flge+3
 11653  2DAD  085E               	movf	___flge@ff2,w
 11654  2DAE  02E2               	subwf	??___flge,f
 11655  2DAF  085F               	movf	___flge@ff2+1,w
 11656  2DB0  3BE3               	subwfb	??___flge+1,f
 11657  2DB1  0860               	movf	___flge@ff2+2,w
 11658  2DB2  3BE4               	subwfb	??___flge+2,f
 11659  2DB3  0861               	movf	___flge@ff2+3,w
 11660  2DB4  3BE5               	subwfb	??___flge+3,f
 11661  2DB5  0865               	movf	??___flge+3,w
 11662  2DB6  00E1               	movwf	___flge@ff2+3
 11663  2DB7  0864               	movf	??___flge+2,w
 11664  2DB8  00E0               	movwf	___flge@ff2+2
 11665  2DB9  0863               	movf	??___flge+1,w
 11666  2DBA  00DF               	movwf	___flge@ff2+1
 11667  2DBB  0862               	movf	??___flge,w
 11668  2DBC  00DE               	movwf	___flge@ff2
 11669  2DBD                     l1009:	
 11670  2DBD  3080               	movlw	128
 11671  2DBE  06DD               	xorwf	___flge@ff1+3,f
 11672  2DBF  3080               	movlw	128
 11673  2DC0  06E1               	xorwf	___flge@ff2+3,f
 11674  2DC1  0861               	movf	___flge@ff2+3,w
 11675  2DC2  025D               	subwf	___flge@ff1+3,w
 11676  2DC3  1D03               	skipz
 11677  2DC4  0008               	return
 11678  2DC5  0860               	movf	___flge@ff2+2,w
 11679  2DC6  025C               	subwf	___flge@ff1+2,w
 11680  2DC7  1D03               	skipz
 11681  2DC8  0008               	return
 11682  2DC9  085F               	movf	___flge@ff2+1,w
 11683  2DCA  025B               	subwf	___flge@ff1+1,w
 11684  2DCB  1D03               	skipz
 11685  2DCC  0008               	return
 11686  2DCD  085E               	movf	___flge@ff2,w
 11687  2DCE  025A               	subwf	___flge@ff1,w
 11688  2DCF  0008               	return
 11689  2DD0                     __end_of___flge:	
 11690                           
 11691                           	psect	text42
 11692  2384                     __ptext42:	
 11693 ;; *************** function _setCellUndervoltageProtection *****************
 11694 ;; Defined at:
 11695 ;;		line 127 in file "BQ76920.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;  voltage_mV      2   18[BANK0 ] int 
 11698 ;;  delay_s         2   20[BANK0 ] int 
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;  i               2   37[BANK0 ] int 
 11701 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11712 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11713 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;Total ram usage:       21 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    3
 11718 ;; This function calls:
 11719 ;;		_I2C_writeRegister
 11720 ;;		___aldiv
 11721 ;;		___lmul
 11722 ;;		_readRegister
 11723 ;; This function is called by:
 11724 ;;		_init_AFE
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           
 11729                           ;psect for function _setCellUndervoltageProtection
 11730  2384                     _setCellUndervoltageProtection:	
 11731                           
 11732                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 11733                           
 11734                           ;incstack = 0
 11735                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 11736  2384  0020               	movlb	0	; select bank0
 11737  2385  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 11738  2386  0023               	movlb	3	; select bank3
 11739  2387  00C3               	movwf	(_minCellVoltage+1)^(0+384)
 11740  2388  0020               	movlb	0	; select bank0
 11741  2389  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 11742  238A  0023               	movlb	3	; select bank3
 11743  238B  00C2               	movwf	_minCellVoltage^(0+384)
 11744                           
 11745                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 11746  238C  3018               	movlw	24
 11747  238D  00F5               	movwf	readRegister@slaveAddress
 11748  238E  3000               	movlw	0
 11749  238F  00F6               	movwf	readRegister@slaveAddress+1
 11750  2390  3008               	movlw	8
 11751  2391  00F7               	movwf	readRegister@regAddress
 11752  2392  3000               	movlw	0
 11753  2393  00F8               	movwf	readRegister@regAddress+1
 11754  2394  31A9  21FA  31A3   	fcall	_readRegister
 11755  2397  0875               	movf	?_readRegister,w
 11756  2398  0020               	movlb	0	; select bank0
 11757  2399  00B6               	movwf	??_setCellUndervoltageProtection
 11758  239A  0836               	movf	??_setCellUndervoltageProtection,w
 11759  239B  0022               	movlb	2	; select bank2
 11760  239C  00E8               	movwf	BQ76920@protect3^(0+256)
 11761                           
 11762                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 11763  239D  086E               	movf	_adcGain^(0+256),w
 11764  239E  0020               	movlb	0	; select bank0
 11765  239F  00A4               	movwf	___aldiv@divisor
 11766  23A0  0022               	movlb	2	; select bank2
 11767  23A1  086F               	movf	(_adcGain+1)^(0+256),w
 11768  23A2  0020               	movlb	0	; select bank0
 11769  23A3  00A5               	movwf	___aldiv@divisor+1
 11770  23A4  0D89               	rlf	9,f
 11771  23A5  3B89               	subwfb	9,f
 11772  23A6  0989               	comf	9,f
 11773  23A7  00A6               	movwf	___aldiv@divisor+2
 11774  23A8  00A7               	movwf	___aldiv@divisor+3
 11775  23A9  0022               	movlb	2	; select bank2
 11776  23AA  0866               	movf	_adcOffset^(0+256),w
 11777  23AB  0020               	movlb	0	; select bank0
 11778  23AC  00B6               	movwf	??_setCellUndervoltageProtection
 11779  23AD  0022               	movlb	2	; select bank2
 11780  23AE  0867               	movf	(_adcOffset+1)^(0+256),w
 11781  23AF  0020               	movlb	0	; select bank0
 11782  23B0  00B7               	movwf	??_setCellUndervoltageProtection+1
 11783  23B1  3000               	movlw	0
 11784  23B2  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 11785  23B3  30FF               	movlw	255
 11786  23B4  00B8               	movwf	??_setCellUndervoltageProtection+2
 11787  23B5  00B9               	movwf	??_setCellUndervoltageProtection+3
 11788  23B6  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 11789  23B7  00BA               	movwf	??_setCellUndervoltageProtection+4
 11790  23B8  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 11791  23B9  00BB               	movwf	??_setCellUndervoltageProtection+5
 11792  23BA  3000               	movlw	0
 11793  23BB  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 11794  23BC  30FF               	movlw	255
 11795  23BD  00BC               	movwf	??_setCellUndervoltageProtection+6
 11796  23BE  00BD               	movwf	??_setCellUndervoltageProtection+7
 11797  23BF  0836               	movf	??_setCellUndervoltageProtection,w
 11798  23C0  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 11799  23C1  0837               	movf	??_setCellUndervoltageProtection+1,w
 11800  23C2  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 11801  23C3  0838               	movf	??_setCellUndervoltageProtection+2,w
 11802  23C4  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 11803  23C5  0839               	movf	??_setCellUndervoltageProtection+3,w
 11804  23C6  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 11805  23C7  083D               	movf	??_setCellUndervoltageProtection+7,w
 11806  23C8  00F4               	movwf	___lmul@multiplier+3
 11807  23C9  083C               	movf	??_setCellUndervoltageProtection+6,w
 11808  23CA  00F3               	movwf	___lmul@multiplier+2
 11809  23CB  083B               	movf	??_setCellUndervoltageProtection+5,w
 11810  23CC  00F2               	movwf	___lmul@multiplier+1
 11811  23CD  083A               	movf	??_setCellUndervoltageProtection+4,w
 11812  23CE  00F1               	movwf	___lmul@multiplier
 11813  23CF  3000               	movlw	0
 11814  23D0  00F8               	movwf	___lmul@multiplicand+3
 11815  23D1  3000               	movlw	0
 11816  23D2  00F7               	movwf	___lmul@multiplicand+2
 11817  23D3  3003               	movlw	3
 11818  23D4  00F6               	movwf	___lmul@multiplicand+1
 11819  23D5  30E8               	movlw	232
 11820  23D6  00F5               	movwf	___lmul@multiplicand
 11821  23D7  31A9  2161  31A3   	fcall	___lmul
 11822  23DA  0874               	movf	?___lmul+3,w
 11823  23DB  0020               	movlb	0	; select bank0
 11824  23DC  00AB               	movwf	___aldiv@dividend+3
 11825  23DD  0873               	movf	?___lmul+2,w
 11826  23DE  00AA               	movwf	___aldiv@dividend+2
 11827  23DF  0872               	movf	?___lmul+1,w
 11828  23E0  00A9               	movwf	___aldiv@dividend+1
 11829  23E1  0871               	movf	?___lmul,w
 11830  23E2  00A8               	movwf	___aldiv@dividend
 11831  23E3  31A0  200C  31A3   	fcall	___aldiv
 11832  23E6  0020               	movlb	0	; select bank0
 11833  23E7  0824               	movf	?___aldiv,w
 11834  23E8  00BE               	movwf	??_setCellUndervoltageProtection+8
 11835  23E9  0825               	movf	?___aldiv+1,w
 11836  23EA  00BF               	movwf	??_setCellUndervoltageProtection+9
 11837  23EB  0826               	movf	?___aldiv+2,w
 11838  23EC  00C0               	movwf	??_setCellUndervoltageProtection+10
 11839  23ED  0827               	movf	?___aldiv+3,w
 11840  23EE  00C1               	movwf	??_setCellUndervoltageProtection+11
 11841  23EF  3004               	movlw	4
 11842  23F0  00C2               	movwf	??_setCellUndervoltageProtection+12
 11843  23F1                     u11175:	
 11844  23F1  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 11845  23F2  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 11846  23F3  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 11847  23F4  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 11848  23F5  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 11849  23F6  2BF1               	goto	u11175
 11850  23F7  083E               	movf	??_setCellUndervoltageProtection+8,w
 11851  23F8  00C3               	movwf	??_setCellUndervoltageProtection+13
 11852  23F9  0843               	movf	??_setCellUndervoltageProtection+13,w
 11853  23FA  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 11854                           
 11855                           ;BQ76920.c: 133:     uv_trip += 1;
 11856  23FB  3001               	movlw	1
 11857  23FC  00B6               	movwf	??_setCellUndervoltageProtection
 11858  23FD  0836               	movf	??_setCellUndervoltageProtection,w
 11859  23FE  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 11860                           
 11861                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 11862  23FF  3018               	movlw	24
 11863  2400  00F5               	movwf	I2C_writeRegister@slaveAddress
 11864  2401  3000               	movlw	0
 11865  2402  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11866  2403  300A               	movlw	10
 11867  2404  00F7               	movwf	I2C_writeRegister@regAddress
 11868  2405  3000               	movlw	0
 11869  2406  00F8               	movwf	I2C_writeRegister@regAddress+1
 11870  2407  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 11871  2408  00B6               	movwf	??_setCellUndervoltageProtection
 11872  2409  01B7               	clrf	??_setCellUndervoltageProtection+1
 11873  240A  0836               	movf	??_setCellUndervoltageProtection,w
 11874  240B  00F9               	movwf	I2C_writeRegister@data
 11875  240C  0837               	movf	??_setCellUndervoltageProtection+1,w
 11876  240D  00FA               	movwf	I2C_writeRegister@data+1
 11877  240E  31A8  205D  31A3   	fcall	_I2C_writeRegister
 11878                           
 11879                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 11880  2411  303F               	movlw	-193
 11881  2412  0022               	movlb	2	; select bank2
 11882  2413  05E8               	andwf	BQ76920@protect3^(0+256),f
 11883                           
 11884                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 11885  2414  0020               	movlb	0	; select bank0
 11886  2415  01C5               	clrf	setCellUndervoltageProtection@i
 11887  2416  01C6               	clrf	setCellUndervoltageProtection@i+1
 11888  2417                     l7989:	
 11889                           
 11890                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 11891  2417  0846               	movf	setCellUndervoltageProtection@i+1,w
 11892  2418  0085               	movwf	5
 11893  2419  0845               	movf	setCellUndervoltageProtection@i,w
 11894  241A  0084               	movwf	4
 11895  241B  3584               	lslf	4,f
 11896  241C  0D85               	rlf	5,f
 11897  241D  301C               	movlw	low (_UV_delay_setting| (0+32768))
 11898  241E  0784               	addwf	4,f
 11899  241F  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 11900  2420  3D85               	addwfc	5,f
 11901  2421  3F00               	moviw [0]fsr0
 11902  2422  00B6               	movwf	??_setCellUndervoltageProtection
 11903  2423  3F01               	moviw [1]fsr0
 11904  2424  00B7               	movwf	??_setCellUndervoltageProtection+1
 11905  2425  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 11906  2426  3A80               	xorlw	128
 11907  2427  00B8               	movwf	??_setCellUndervoltageProtection+2
 11908  2428  0837               	movf	??_setCellUndervoltageProtection+1,w
 11909  2429  3A80               	xorlw	128
 11910  242A  0238               	subwf	??_setCellUndervoltageProtection+2,w
 11911  242B  1D03               	skipz
 11912  242C  2C2F               	goto	u11185
 11913  242D  0836               	movf	??_setCellUndervoltageProtection,w
 11914  242E  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 11915  242F                     u11185:	
 11916  242F  1C03               	skipc
 11917  2430  2C3F               	goto	l7993
 11918                           
 11919                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 11920  2431  0020               	movlb	0	; select bank0
 11921  2432  0845               	movf	setCellUndervoltageProtection@i,w
 11922  2433  00B6               	movwf	??_setCellUndervoltageProtection
 11923  2434  0EB6               	swapf	??_setCellUndervoltageProtection,f
 11924  2435  0DB6               	rlf	??_setCellUndervoltageProtection,f
 11925  2436  0DB6               	rlf	??_setCellUndervoltageProtection,f
 11926  2437  0022               	movlb	2	; select bank2
 11927  2438  0868               	movf	BQ76920@protect3^(0+256),w
 11928  2439  0020               	movlb	0	; select bank0
 11929  243A  0636               	xorwf	??_setCellUndervoltageProtection,w
 11930  243B  393F               	andlw	-193
 11931  243C  0636               	xorwf	??_setCellUndervoltageProtection,w
 11932  243D  0022               	movlb	2	; select bank2
 11933  243E  00E8               	movwf	BQ76920@protect3^(0+256)
 11934  243F                     l7993:	
 11935                           
 11936                           ;BQ76920.c: 141:     }
 11937  243F  3001               	movlw	1
 11938  2440  0020               	movlb	0	; select bank0
 11939  2441  07C5               	addwf	setCellUndervoltageProtection@i,f
 11940  2442  3000               	movlw	0
 11941  2443  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 11942  2444  3000               	movlw	0
 11943  2445  0246               	subwf	setCellUndervoltageProtection@i+1,w
 11944  2446  3003               	movlw	3
 11945  2447  1903               	skipnz
 11946  2448  0245               	subwf	setCellUndervoltageProtection@i,w
 11947  2449  1C03               	skipc
 11948  244A  2C17               	goto	l7989
 11949                           
 11950                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 11951  244B  3018               	movlw	24
 11952  244C  00F5               	movwf	I2C_writeRegister@slaveAddress
 11953  244D  3000               	movlw	0
 11954  244E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11955  244F  3008               	movlw	8
 11956  2450  00F7               	movwf	I2C_writeRegister@regAddress
 11957  2451  3000               	movlw	0
 11958  2452  00F8               	movwf	I2C_writeRegister@regAddress+1
 11959  2453  0022               	movlb	2	; select bank2
 11960  2454  0868               	movf	BQ76920@protect3^(0+256),w
 11961  2455  0020               	movlb	0	; select bank0
 11962  2456  00B6               	movwf	??_setCellUndervoltageProtection
 11963  2457  01B7               	clrf	??_setCellUndervoltageProtection+1
 11964  2458  0836               	movf	??_setCellUndervoltageProtection,w
 11965  2459  00F9               	movwf	I2C_writeRegister@data
 11966  245A  0837               	movf	??_setCellUndervoltageProtection+1,w
 11967  245B  00FA               	movwf	I2C_writeRegister@data+1
 11968  245C  31A8  205D         	fcall	_I2C_writeRegister
 11969  245E  0008               	return
 11970  245F                     __end_of_setCellUndervoltageProtection:	
 11971                           
 11972                           	psect	text43
 11973  22B0                     __ptext43:	
 11974 ;; *************** function _setCellOvervoltageProtection *****************
 11975 ;; Defined at:
 11976 ;;		line 148 in file "BQ76920.c"
 11977 ;; Parameters:    Size  Location     Type
 11978 ;;  voltage_mV      2   18[BANK0 ] int 
 11979 ;;  delay_s         2   20[BANK0 ] int 
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;  i               2   37[BANK0 ] int 
 11982 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11993 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11994 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11995 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11996 ;;Total ram usage:       21 bytes
 11997 ;; Hardware stack levels used:    1
 11998 ;; Hardware stack levels required when called:    3
 11999 ;; This function calls:
 12000 ;;		_I2C_writeRegister
 12001 ;;		___aldiv
 12002 ;;		___lmul
 12003 ;;		_readRegister
 12004 ;; This function is called by:
 12005 ;;		_init_AFE
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           
 12010                           ;psect for function _setCellOvervoltageProtection
 12011  22B0                     _setCellOvervoltageProtection:	
 12012                           
 12013                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 12014                           
 12015                           ;incstack = 0
 12016                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12017  22B0  0020               	movlb	0	; select bank0
 12018  22B1  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12019  22B2  0023               	movlb	3	; select bank3
 12020  22B3  00C5               	movwf	(_maxCellVoltage+1)^(0+384)
 12021  22B4  0020               	movlb	0	; select bank0
 12022  22B5  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12023  22B6  0023               	movlb	3	; select bank3
 12024  22B7  00C4               	movwf	_maxCellVoltage^(0+384)
 12025                           
 12026                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 12027  22B8  3018               	movlw	24
 12028  22B9  00F5               	movwf	readRegister@slaveAddress
 12029  22BA  3000               	movlw	0
 12030  22BB  00F6               	movwf	readRegister@slaveAddress+1
 12031  22BC  3008               	movlw	8
 12032  22BD  00F7               	movwf	readRegister@regAddress
 12033  22BE  3000               	movlw	0
 12034  22BF  00F8               	movwf	readRegister@regAddress+1
 12035  22C0  31A9  21FA  31A2   	fcall	_readRegister
 12036  22C3  0875               	movf	?_readRegister,w
 12037  22C4  0020               	movlb	0	; select bank0
 12038  22C5  00B6               	movwf	??_setCellOvervoltageProtection
 12039  22C6  0836               	movf	??_setCellOvervoltageProtection,w
 12040  22C7  0022               	movlb	2	; select bank2
 12041  22C8  00E8               	movwf	BQ76920@protect3^(0+256)
 12042                           
 12043                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12044  22C9  086E               	movf	_adcGain^(0+256),w
 12045  22CA  0020               	movlb	0	; select bank0
 12046  22CB  00A4               	movwf	___aldiv@divisor
 12047  22CC  0022               	movlb	2	; select bank2
 12048  22CD  086F               	movf	(_adcGain+1)^(0+256),w
 12049  22CE  0020               	movlb	0	; select bank0
 12050  22CF  00A5               	movwf	___aldiv@divisor+1
 12051  22D0  0D89               	rlf	9,f
 12052  22D1  3B89               	subwfb	9,f
 12053  22D2  0989               	comf	9,f
 12054  22D3  00A6               	movwf	___aldiv@divisor+2
 12055  22D4  00A7               	movwf	___aldiv@divisor+3
 12056  22D5  0022               	movlb	2	; select bank2
 12057  22D6  0866               	movf	_adcOffset^(0+256),w
 12058  22D7  0020               	movlb	0	; select bank0
 12059  22D8  00B6               	movwf	??_setCellOvervoltageProtection
 12060  22D9  0022               	movlb	2	; select bank2
 12061  22DA  0867               	movf	(_adcOffset+1)^(0+256),w
 12062  22DB  0020               	movlb	0	; select bank0
 12063  22DC  00B7               	movwf	??_setCellOvervoltageProtection+1
 12064  22DD  3000               	movlw	0
 12065  22DE  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12066  22DF  30FF               	movlw	255
 12067  22E0  00B8               	movwf	??_setCellOvervoltageProtection+2
 12068  22E1  00B9               	movwf	??_setCellOvervoltageProtection+3
 12069  22E2  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12070  22E3  00BA               	movwf	??_setCellOvervoltageProtection+4
 12071  22E4  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12072  22E5  00BB               	movwf	??_setCellOvervoltageProtection+5
 12073  22E6  3000               	movlw	0
 12074  22E7  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12075  22E8  30FF               	movlw	255
 12076  22E9  00BC               	movwf	??_setCellOvervoltageProtection+6
 12077  22EA  00BD               	movwf	??_setCellOvervoltageProtection+7
 12078  22EB  0836               	movf	??_setCellOvervoltageProtection,w
 12079  22EC  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12080  22ED  0837               	movf	??_setCellOvervoltageProtection+1,w
 12081  22EE  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12082  22EF  0838               	movf	??_setCellOvervoltageProtection+2,w
 12083  22F0  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12084  22F1  0839               	movf	??_setCellOvervoltageProtection+3,w
 12085  22F2  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12086  22F3  083D               	movf	??_setCellOvervoltageProtection+7,w
 12087  22F4  00F4               	movwf	___lmul@multiplier+3
 12088  22F5  083C               	movf	??_setCellOvervoltageProtection+6,w
 12089  22F6  00F3               	movwf	___lmul@multiplier+2
 12090  22F7  083B               	movf	??_setCellOvervoltageProtection+5,w
 12091  22F8  00F2               	movwf	___lmul@multiplier+1
 12092  22F9  083A               	movf	??_setCellOvervoltageProtection+4,w
 12093  22FA  00F1               	movwf	___lmul@multiplier
 12094  22FB  3000               	movlw	0
 12095  22FC  00F8               	movwf	___lmul@multiplicand+3
 12096  22FD  3000               	movlw	0
 12097  22FE  00F7               	movwf	___lmul@multiplicand+2
 12098  22FF  3003               	movlw	3
 12099  2300  00F6               	movwf	___lmul@multiplicand+1
 12100  2301  30E8               	movlw	232
 12101  2302  00F5               	movwf	___lmul@multiplicand
 12102  2303  31A9  2161  31A2   	fcall	___lmul
 12103  2306  0874               	movf	?___lmul+3,w
 12104  2307  0020               	movlb	0	; select bank0
 12105  2308  00AB               	movwf	___aldiv@dividend+3
 12106  2309  0873               	movf	?___lmul+2,w
 12107  230A  00AA               	movwf	___aldiv@dividend+2
 12108  230B  0872               	movf	?___lmul+1,w
 12109  230C  00A9               	movwf	___aldiv@dividend+1
 12110  230D  0871               	movf	?___lmul,w
 12111  230E  00A8               	movwf	___aldiv@dividend
 12112  230F  31A0  200C  31A2   	fcall	___aldiv
 12113  2312  0020               	movlb	0	; select bank0
 12114  2313  0824               	movf	?___aldiv,w
 12115  2314  00BE               	movwf	??_setCellOvervoltageProtection+8
 12116  2315  0825               	movf	?___aldiv+1,w
 12117  2316  00BF               	movwf	??_setCellOvervoltageProtection+9
 12118  2317  0826               	movf	?___aldiv+2,w
 12119  2318  00C0               	movwf	??_setCellOvervoltageProtection+10
 12120  2319  0827               	movf	?___aldiv+3,w
 12121  231A  00C1               	movwf	??_setCellOvervoltageProtection+11
 12122  231B  3004               	movlw	4
 12123  231C  00C2               	movwf	??_setCellOvervoltageProtection+12
 12124  231D                     u11205:	
 12125  231D  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12126  231E  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12127  231F  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12128  2320  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12129  2321  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12130  2322  2B1D               	goto	u11205
 12131  2323  083E               	movf	??_setCellOvervoltageProtection+8,w
 12132  2324  00C3               	movwf	??_setCellOvervoltageProtection+13
 12133  2325  0843               	movf	??_setCellOvervoltageProtection+13,w
 12134  2326  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12135                           
 12136                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12137  2327  3018               	movlw	24
 12138  2328  00F5               	movwf	I2C_writeRegister@slaveAddress
 12139  2329  3000               	movlw	0
 12140  232A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12141  232B  3009               	movlw	9
 12142  232C  00F7               	movwf	I2C_writeRegister@regAddress
 12143  232D  3000               	movlw	0
 12144  232E  00F8               	movwf	I2C_writeRegister@regAddress+1
 12145  232F  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12146  2330  00B6               	movwf	??_setCellOvervoltageProtection
 12147  2331  01B7               	clrf	??_setCellOvervoltageProtection+1
 12148  2332  0836               	movf	??_setCellOvervoltageProtection,w
 12149  2333  00F9               	movwf	I2C_writeRegister@data
 12150  2334  0837               	movf	??_setCellOvervoltageProtection+1,w
 12151  2335  00FA               	movwf	I2C_writeRegister@data+1
 12152  2336  31A8  205D  31A2   	fcall	_I2C_writeRegister
 12153                           
 12154                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12155  2339  0020               	movlb	0	; select bank0
 12156  233A  01C5               	clrf	setCellOvervoltageProtection@i
 12157  233B  01C6               	clrf	setCellOvervoltageProtection@i+1
 12158  233C                     l8015:	
 12159                           
 12160                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 12161  233C  0846               	movf	setCellOvervoltageProtection@i+1,w
 12162  233D  0085               	movwf	5
 12163  233E  0845               	movf	setCellOvervoltageProtection@i,w
 12164  233F  0084               	movwf	4
 12165  2340  3584               	lslf	4,f
 12166  2341  0D85               	rlf	5,f
 12167  2342  3014               	movlw	low (_OV_delay_setting| (0+32768))
 12168  2343  0784               	addwf	4,f
 12169  2344  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12170  2345  3D85               	addwfc	5,f
 12171  2346  3F00               	moviw [0]fsr0
 12172  2347  00B6               	movwf	??_setCellOvervoltageProtection
 12173  2348  3F01               	moviw [1]fsr0
 12174  2349  00B7               	movwf	??_setCellOvervoltageProtection+1
 12175  234A  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12176  234B  3A80               	xorlw	128
 12177  234C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12178  234D  0837               	movf	??_setCellOvervoltageProtection+1,w
 12179  234E  3A80               	xorlw	128
 12180  234F  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12181  2350  1D03               	skipz
 12182  2351  2B54               	goto	u11215
 12183  2352  0836               	movf	??_setCellOvervoltageProtection,w
 12184  2353  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12185  2354                     u11215:	
 12186  2354  1C03               	skipc
 12187  2355  2B64               	goto	l8019
 12188                           
 12189                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 12190  2356  0020               	movlb	0	; select bank0
 12191  2357  0845               	movf	setCellOvervoltageProtection@i,w
 12192  2358  00B6               	movwf	??_setCellOvervoltageProtection
 12193  2359  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12194  235A  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12195  235B  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12196  235C  0022               	movlb	2	; select bank2
 12197  235D  0868               	movf	BQ76920@protect3^(0+256),w
 12198  235E  0020               	movlb	0	; select bank0
 12199  235F  0636               	xorwf	??_setCellOvervoltageProtection,w
 12200  2360  393F               	andlw	-193
 12201  2361  0636               	xorwf	??_setCellOvervoltageProtection,w
 12202  2362  0022               	movlb	2	; select bank2
 12203  2363  00E8               	movwf	BQ76920@protect3^(0+256)
 12204  2364                     l8019:	
 12205                           
 12206                           ;BQ76920.c: 159:     }
 12207  2364  3001               	movlw	1
 12208  2365  0020               	movlb	0	; select bank0
 12209  2366  07C5               	addwf	setCellOvervoltageProtection@i,f
 12210  2367  3000               	movlw	0
 12211  2368  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12212  2369  3000               	movlw	0
 12213  236A  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12214  236B  3003               	movlw	3
 12215  236C  1903               	skipnz
 12216  236D  0245               	subwf	setCellOvervoltageProtection@i,w
 12217  236E  1C03               	skipc
 12218  236F  2B3C               	goto	l8015
 12219                           
 12220                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12221  2370  3018               	movlw	24
 12222  2371  00F5               	movwf	I2C_writeRegister@slaveAddress
 12223  2372  3000               	movlw	0
 12224  2373  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12225  2374  3008               	movlw	8
 12226  2375  00F7               	movwf	I2C_writeRegister@regAddress
 12227  2376  3000               	movlw	0
 12228  2377  00F8               	movwf	I2C_writeRegister@regAddress+1
 12229  2378  0022               	movlb	2	; select bank2
 12230  2379  0868               	movf	BQ76920@protect3^(0+256),w
 12231  237A  0020               	movlb	0	; select bank0
 12232  237B  00B6               	movwf	??_setCellOvervoltageProtection
 12233  237C  01B7               	clrf	??_setCellOvervoltageProtection+1
 12234  237D  0836               	movf	??_setCellOvervoltageProtection,w
 12235  237E  00F9               	movwf	I2C_writeRegister@data
 12236  237F  0837               	movf	??_setCellOvervoltageProtection+1,w
 12237  2380  00FA               	movwf	I2C_writeRegister@data+1
 12238  2381  31A8  205D         	fcall	_I2C_writeRegister
 12239  2383  0008               	return
 12240  2384                     __end_of_setCellOvervoltageProtection:	
 12241                           
 12242                           	psect	text44
 12243  2137                     __ptext44:	
 12244 ;; *************** function _beginAFEcommunication *****************
 12245 ;; Defined at:
 12246 ;;		line 23 in file "BQ76920.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;		None
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;  i               2   13[BANK0 ] int 
 12251 ;;  commSuccess     2   11[BANK0 ] int 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  2    0[BANK0 ] int 
 12254 ;; Registers used:
 12255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12263 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12264 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12265 ;;Total ram usage:       15 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    3
 12268 ;; This function calls:
 12269 ;;		_I2C_writeRegister
 12270 ;;		_readRegister
 12271 ;; This function is called by:
 12272 ;;		_statemachine
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _beginAFEcommunication
 12278  2137                     _beginAFEcommunication:	
 12279                           
 12280                           ;BQ76920.c: 25:     int commSuccess = 0;
 12281                           
 12282                           ;incstack = 0
 12283                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12284  2137  0020               	movlb	0	; select bank0
 12285  2138  01AB               	clrf	beginAFEcommunication@commSuccess
 12286  2139  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12287                           
 12288                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 12289  213A  01AD               	clrf	beginAFEcommunication@i
 12290  213B  01AE               	clrf	beginAFEcommunication@i+1
 12291  213C                     l8097:	
 12292                           
 12293                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 12294  213C  0020               	movlb	0	; select bank0
 12295  213D  352D               	lslf	beginAFEcommunication@i,w
 12296  213E  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12297  213F  0086               	movwf	6
 12298  2140  3001               	movlw	1	; select bank3/4
 12299  2141  0087               	movwf	7
 12300  2142  3000               	movlw	0
 12301  2143  3FC0               	movwi [0]fsr1
 12302  2144  3FC1               	movwi [1]fsr1
 12303                           
 12304                           ;BQ76920.c: 30:     }
 12305  2145  3001               	movlw	1
 12306  2146  07AD               	addwf	beginAFEcommunication@i,f
 12307  2147  3000               	movlw	0
 12308  2148  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12309  2149  082E               	movf	beginAFEcommunication@i+1,w
 12310  214A  3A80               	xorlw	128
 12311  214B  00A2               	movwf	??_beginAFEcommunication
 12312  214C  3080               	movlw	128
 12313  214D  0222               	subwf	??_beginAFEcommunication,w
 12314  214E  1D03               	skipz
 12315  214F  2952               	goto	u11285
 12316  2150  3004               	movlw	4
 12317  2151  022D               	subwf	beginAFEcommunication@i,w
 12318  2152                     u11285:	
 12319  2152  1C03               	skipc
 12320  2153  293C               	goto	l8097
 12321                           
 12322                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12323  2154  3018               	movlw	24
 12324  2155  00F5               	movwf	I2C_writeRegister@slaveAddress
 12325  2156  3000               	movlw	0
 12326  2157  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12327  2158  300B               	movlw	11
 12328  2159  00F7               	movwf	I2C_writeRegister@regAddress
 12329  215A  3000               	movlw	0
 12330  215B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12331  215C  3019               	movlw	25
 12332  215D  00F9               	movwf	I2C_writeRegister@data
 12333  215E  3000               	movlw	0
 12334  215F  00FA               	movwf	I2C_writeRegister@data+1
 12335  2160  31A8  205D  31A1   	fcall	_I2C_writeRegister
 12336                           
 12337                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 12338  2163  3018               	movlw	24
 12339  2164  00F5               	movwf	readRegister@slaveAddress
 12340  2165  3000               	movlw	0
 12341  2166  00F6               	movwf	readRegister@slaveAddress+1
 12342  2167  300B               	movlw	11
 12343  2168  00F7               	movwf	readRegister@regAddress
 12344  2169  3000               	movlw	0
 12345  216A  00F8               	movwf	readRegister@regAddress+1
 12346  216B  31A9  21FA  31A1   	fcall	_readRegister
 12347  216E  3019               	movlw	25
 12348  216F  0675               	xorwf	?_readRegister,w
 12349  2170  0476               	iorwf	?_readRegister+1,w
 12350  2171  1D03               	btfss	3,2
 12351  2172  29E5               	goto	l432
 12352                           
 12353                           ;BQ76920.c: 36:         commSuccess = 1;
 12354  2173  3001               	movlw	1
 12355  2174  0020               	movlb	0	; select bank0
 12356  2175  00AB               	movwf	beginAFEcommunication@commSuccess
 12357  2176  3000               	movlw	0
 12358  2177  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12359                           
 12360                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 12361  2178  3018               	movlw	24
 12362  2179  00F5               	movwf	I2C_writeRegister@slaveAddress
 12363  217A  3000               	movlw	0
 12364  217B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12365  217C  3004               	movlw	4
 12366  217D  00F7               	movwf	I2C_writeRegister@regAddress
 12367  217E  3000               	movlw	0
 12368  217F  00F8               	movwf	I2C_writeRegister@regAddress+1
 12369  2180  3018               	movlw	24
 12370  2181  00F9               	movwf	I2C_writeRegister@data
 12371  2182  3000               	movlw	0
 12372  2183  00FA               	movwf	I2C_writeRegister@data+1
 12373  2184  31A8  205D  31A1   	fcall	_I2C_writeRegister
 12374                           
 12375                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 12376  2187  3018               	movlw	24
 12377  2188  00F5               	movwf	I2C_writeRegister@slaveAddress
 12378  2189  3000               	movlw	0
 12379  218A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12380  218B  3005               	movlw	5
 12381  218C  00F7               	movwf	I2C_writeRegister@regAddress
 12382  218D  3000               	movlw	0
 12383  218E  00F8               	movwf	I2C_writeRegister@regAddress+1
 12384  218F  3040               	movlw	64
 12385  2190  00F9               	movwf	I2C_writeRegister@data
 12386  2191  3000               	movlw	0
 12387  2192  00FA               	movwf	I2C_writeRegister@data+1
 12388  2193  31A8  205D  31A1   	fcall	_I2C_writeRegister
 12389                           
 12390                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12391  2196  3018               	movlw	24
 12392  2197  00F5               	movwf	readRegister@slaveAddress
 12393  2198  3000               	movlw	0
 12394  2199  00F6               	movwf	readRegister@slaveAddress+1
 12395  219A  3051               	movlw	81
 12396  219B  00F7               	movwf	readRegister@regAddress
 12397  219C  3000               	movlw	0
 12398  219D  00F8               	movwf	readRegister@regAddress+1
 12399  219E  31A9  21FA  31A1   	fcall	_readRegister
 12400  21A1  0876               	movf	?_readRegister+1,w
 12401  21A2  0022               	movlb	2	; select bank2
 12402  21A3  00E7               	movwf	(_adcOffset+1)^(0+256)
 12403  21A4  0875               	movf	?_readRegister,w
 12404  21A5  00E6               	movwf	_adcOffset^(0+256)
 12405                           
 12406                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12407  21A6  3018               	movlw	24
 12408  21A7  00F5               	movwf	readRegister@slaveAddress
 12409  21A8  3000               	movlw	0
 12410  21A9  00F6               	movwf	readRegister@slaveAddress+1
 12411  21AA  3059               	movlw	89
 12412  21AB  00F7               	movwf	readRegister@regAddress
 12413  21AC  3000               	movlw	0
 12414  21AD  00F8               	movwf	readRegister@regAddress+1
 12415  21AE  31A9  21FA  31A1   	fcall	_readRegister
 12416  21B1  0875               	movf	?_readRegister,w
 12417  21B2  0020               	movlb	0	; select bank0
 12418  21B3  00A2               	movwf	??_beginAFEcommunication
 12419  21B4  0876               	movf	?_readRegister+1,w
 12420  21B5  00A3               	movwf	??_beginAFEcommunication+1
 12421  21B6  3005               	movlw	5
 12422  21B7  00A4               	movwf	??_beginAFEcommunication+2
 12423  21B8                     u11305:	
 12424  21B8  0D23               	rlf	??_beginAFEcommunication+1,w
 12425  21B9  0CA3               	rrf	??_beginAFEcommunication+1,f
 12426  21BA  0CA2               	rrf	??_beginAFEcommunication,f
 12427  21BB  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12428  21BC  29B8               	goto	u11305
 12429  21BD  3007               	movlw	7
 12430  21BE  0522               	andwf	??_beginAFEcommunication,w
 12431  21BF  00A5               	movwf	??_beginAFEcommunication+3
 12432  21C0  3000               	movlw	0
 12433  21C1  0523               	andwf	??_beginAFEcommunication+1,w
 12434  21C2  00A6               	movwf	??_beginAFEcommunication+4
 12435  21C3  3018               	movlw	24
 12436  21C4  00F5               	movwf	readRegister@slaveAddress
 12437  21C5  3000               	movlw	0
 12438  21C6  00F6               	movwf	readRegister@slaveAddress+1
 12439  21C7  3050               	movlw	80
 12440  21C8  00F7               	movwf	readRegister@regAddress
 12441  21C9  3000               	movlw	0
 12442  21CA  00F8               	movwf	readRegister@regAddress+1
 12443  21CB  31A9  21FA         	fcall	_readRegister
 12444  21CD  300C               	movlw	12
 12445  21CE  0575               	andwf	?_readRegister,w
 12446  21CF  0020               	movlb	0	; select bank0
 12447  21D0  00A7               	movwf	??_beginAFEcommunication+5
 12448  21D1  3000               	movlw	0
 12449  21D2  0576               	andwf	?_readRegister+1,w
 12450  21D3  00A8               	movwf	??_beginAFEcommunication+6
 12451  21D4  35A7               	lslf	??_beginAFEcommunication+5,f
 12452  21D5  0DA8               	rlf	??_beginAFEcommunication+6,f
 12453  21D6  0825               	movf	??_beginAFEcommunication+3,w
 12454  21D7  0427               	iorwf	??_beginAFEcommunication+5,w
 12455  21D8  00A9               	movwf	??_beginAFEcommunication+7
 12456  21D9  0826               	movf	??_beginAFEcommunication+4,w
 12457  21DA  0428               	iorwf	??_beginAFEcommunication+6,w
 12458  21DB  00AA               	movwf	??_beginAFEcommunication+8
 12459  21DC  0829               	movf	??_beginAFEcommunication+7,w
 12460  21DD  3E6D               	addlw	109
 12461  21DE  0022               	movlb	2	; select bank2
 12462  21DF  00EE               	movwf	_adcGain^(0+256)
 12463  21E0  3001               	movlw	1
 12464  21E1  0020               	movlb	0	; select bank0
 12465  21E2  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12466  21E3  0022               	movlb	2	; select bank2
 12467  21E4  00EF               	movwf	(_adcGain+1)^(0+256)
 12468  21E5                     l432:	
 12469                           ;BQ76920.c: 48:     }
 12470                           
 12471                           
 12472                           ;BQ76920.c: 49:     return commSuccess;
 12473  21E5  0020               	movlb	0	; select bank0
 12474  21E6  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12475  21E7  00A1               	movwf	?_beginAFEcommunication+1
 12476  21E8  082B               	movf	beginAFEcommunication@commSuccess,w
 12477  21E9  00A0               	movwf	?_beginAFEcommunication
 12478  21EA  0008               	return
 12479  21EB                     __end_of_beginAFEcommunication:	
 12480                           
 12481                           	psect	text45
 12482  285D                     __ptext45:	
 12483 ;; *************** function _I2C_writeRegister *****************
 12484 ;; Defined at:
 12485 ;;		line 104 in file "I2C.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  slaveAddress    2    5[COMMON] int 
 12488 ;;  regAddress      2    7[COMMON] int 
 12489 ;;  data            2    9[COMMON] int 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;		None
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  1    wreg      void 
 12494 ;; Registers used:
 12495 ;;		wreg, status,2, status,0, pclath, cstack
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12501 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12505 ;;Total ram usage:        6 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; Hardware stack levels required when called:    2
 12508 ;; This function calls:
 12509 ;;		_send_I2C_controlByte
 12510 ;;		_send_I2C_data
 12511 ;;		_send_I2C_startBit
 12512 ;;		_send_I2C_stopBit
 12513 ;; This function is called by:
 12514 ;;		_beginAFEcommunication
 12515 ;;		_setShortCircuitProtection
 12516 ;;		_setOverCurrentDischargeProtection
 12517 ;;		_setCellUndervoltageProtection
 12518 ;;		_setCellOvervoltageProtection
 12519 ;;		_updateCurrent
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           
 12524                           ;psect for function _I2C_writeRegister
 12525  285D                     _I2C_writeRegister:	
 12526                           
 12527                           ;I2C.c: 105:     send_I2C_startBit();
 12528                           
 12529                           ;incstack = 0
 12530                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 12531  285D  31B6  26D6  31A8   	fcall	_send_I2C_startBit
 12532                           
 12533                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 12534  2860  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 12535  2861  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 12536  2862  0875               	movf	I2C_writeRegister@slaveAddress,w
 12537  2863  00F1               	movwf	send_I2C_controlByte@BlockAddress
 12538  2864  3000               	movlw	0
 12539  2865  00F3               	movwf	send_I2C_controlByte@RW_bit
 12540  2866  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 12541  2867  31B7  2701  31A8   	fcall	_send_I2C_controlByte
 12542                           
 12543                           ;I2C.c: 107:     send_I2C_data(regAddress);
 12544  286A  0878               	movf	I2C_writeRegister@regAddress+1,w
 12545  286B  00F2               	movwf	send_I2C_data@databyte+1
 12546  286C  0877               	movf	I2C_writeRegister@regAddress,w
 12547  286D  00F1               	movwf	send_I2C_data@databyte
 12548  286E  31B6  26F8  31A8   	fcall	_send_I2C_data
 12549                           
 12550                           ;I2C.c: 108:     send_I2C_data(data);
 12551  2871  087A               	movf	I2C_writeRegister@data+1,w
 12552  2872  00F2               	movwf	send_I2C_data@databyte+1
 12553  2873  0879               	movf	I2C_writeRegister@data,w
 12554  2874  00F1               	movwf	send_I2C_data@databyte
 12555  2875  31B6  26F8  31A8   	fcall	_send_I2C_data
 12556                           
 12557                           ;I2C.c: 109:     send_I2C_stopBit();
 12558  2878  31B6  26DE         	fcall	_send_I2C_stopBit
 12559  287A  0008               	return
 12560  287B                     __end_of_I2C_writeRegister:	
 12561                           
 12562                           	psect	text46
 12563  28BB                     __ptext46:	
 12564 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12565 ;; Defined at:
 12566 ;;		line 43 in file "RGB.c"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;		None
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;		None
 12571 ;; Return value:  Size  Location     Type
 12572 ;;                  1    wreg      void 
 12573 ;; Registers used:
 12574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12575 ;; Tracked objects:
 12576 ;;		On entry : 0/0
 12577 ;;		On exit  : 0/0
 12578 ;;		Unchanged: 0/0
 12579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12584 ;;Total ram usage:        1 bytes
 12585 ;; Hardware stack levels used:    1
 12586 ;; Hardware stack levels required when called:    2
 12587 ;; This function calls:
 12588 ;;		_RGB_color
 12589 ;; This function is called by:
 12590 ;;		_statemachine
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           
 12595                           ;psect for function _RGB_AWAIT_AFE_CONN
 12596  28BB                     _RGB_AWAIT_AFE_CONN:	
 12597                           
 12598                           ;RGB.c: 45:     if (toggleColor) {
 12599                           
 12600                           ;incstack = 0
 12601                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12602  28BB  087C               	movf	_toggleColor,w
 12603  28BC  1903               	btfsc	3,2
 12604  28BD  28CD               	goto	l8087
 12605                           
 12606                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12607  28BE  087C               	movf	_toggleColor,w
 12608  28BF  1D03               	btfss	3,2
 12609  28C0  28C3               	goto	u11240
 12610  28C1  3001               	movlw	1
 12611  28C2  28C4               	goto	u11250
 12612  28C3                     u11240:	
 12613  28C3  3000               	movlw	0
 12614  28C4                     u11250:	
 12615  28C4  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12616  28C5  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12617  28C6  00FC               	movwf	_toggleColor
 12618                           
 12619                           ;RGB.c: 47:         RGB_color(0);
 12620  28C7  3000               	movlw	0
 12621  28C8  00F1               	movwf	RGB_color@color
 12622  28C9  00F2               	movwf	RGB_color@color+1
 12623  28CA  31A8  209A         	fcall	_RGB_color
 12624                           
 12625                           ;RGB.c: 48:     } else {
 12626  28CC  0008               	return
 12627  28CD                     l8087:	
 12628                           
 12629                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12630  28CD  087C               	movf	_toggleColor,w
 12631  28CE  1D03               	btfss	3,2
 12632  28CF  28D2               	goto	u11260
 12633  28D0  3001               	movlw	1
 12634  28D1  28D3               	goto	u11270
 12635  28D2                     u11260:	
 12636  28D2  3000               	movlw	0
 12637  28D3                     u11270:	
 12638  28D3  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12639  28D4  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12640  28D5  00FC               	movwf	_toggleColor
 12641                           
 12642                           ;RGB.c: 50:         RGB_color(1);
 12643  28D6  3001               	movlw	1
 12644  28D7  00F1               	movwf	RGB_color@color
 12645  28D8  3000               	movlw	0
 12646  28D9  00F2               	movwf	RGB_color@color+1
 12647  28DA  31A8  209A         	fcall	_RGB_color
 12648  28DC  0008               	return
 12649  28DD                     __end_of_RGB_AWAIT_AFE_CONN:	
 12650                           
 12651                           	psect	text47
 12652  289A                     __ptext47:	
 12653 ;; *************** function _RGB_color *****************
 12654 ;; Defined at:
 12655 ;;		line 17 in file "RGB.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  color           2    1[COMMON] int 
 12658 ;; Auto vars:     Size  Location     Type
 12659 ;;		None
 12660 ;; Return value:  Size  Location     Type
 12661 ;;                  1    wreg      void 
 12662 ;; Registers used:
 12663 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12664 ;; Tracked objects:
 12665 ;;		On entry : 0/0
 12666 ;;		On exit  : 0/0
 12667 ;;		Unchanged: 0/0
 12668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12673 ;;Total ram usage:        2 bytes
 12674 ;; Hardware stack levels used:    1
 12675 ;; Hardware stack levels required when called:    1
 12676 ;; This function calls:
 12677 ;;		Nothing
 12678 ;; This function is called by:
 12679 ;;		_statemachine
 12680 ;;		_RGB_AWAIT_AFE_CONN
 12681 ;;		_watchdog_timeout_shutdown
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           
 12686                           ;psect for function _RGB_color
 12687  289A                     _RGB_color:	
 12688                           
 12689                           ;RGB.c: 19:     switch (color) {
 12690                           
 12691                           ;incstack = 0
 12692                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12693  289A  28AA               	goto	l7875
 12694  289B                     l337:	
 12695                           ;RGB.c: 20:         case 0:
 12696                           
 12697                           
 12698                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12699  289B  0022               	movlb	2	; select bank2
 12700  289C  120C               	bcf	12,4	;volatile
 12701                           
 12702                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12703  289D  168C               	bsf	12,5	;volatile
 12704                           
 12705                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12706  289E  1410               	bsf	16,0	;volatile
 12707                           
 12708                           ;RGB.c: 24:             break;
 12709  289F  0008               	return
 12710  28A0                     l339:	
 12711                           ;RGB.c: 25:         case 1:
 12712                           
 12713                           
 12714                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12715  28A0  0022               	movlb	2	; select bank2
 12716  28A1  160C               	bsf	12,4	;volatile
 12717                           
 12718                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12719  28A2  128C               	bcf	12,5	;volatile
 12720                           
 12721                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12722  28A3  1410               	bsf	16,0	;volatile
 12723                           
 12724                           ;RGB.c: 29:             break;
 12725  28A4  0008               	return
 12726  28A5                     l340:	
 12727                           ;RGB.c: 30:         case 2:
 12728                           
 12729                           
 12730                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12731  28A5  0022               	movlb	2	; select bank2
 12732  28A6  160C               	bsf	12,4	;volatile
 12733                           
 12734                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12735  28A7  168C               	bsf	12,5	;volatile
 12736                           
 12737                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12738  28A8  1010               	bcf	16,0	;volatile
 12739                           
 12740                           ;RGB.c: 34:             break;
 12741  28A9  0008               	return
 12742  28AA                     l7875:	
 12743                           
 12744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12745                           ; Switch size 1, requested type "simple"
 12746                           ; Number of cases is 1, Range of values is 0 to 0
 12747                           ; switch strategies available:
 12748                           ; Name         Instructions Cycles
 12749                           ; simple_byte            4     3 (average)
 12750                           ; direct_byte            8     6 (fixed)
 12751                           ; jumptable            260     6 (fixed)
 12752                           ;	Chosen strategy is simple_byte
 12753  28AA  0872               	movf	RGB_color@color+1,w
 12754  28AB  3A00               	xorlw	0	; case 0
 12755  28AC  1903               	skipnz
 12756  28AD  28AF               	goto	l8413
 12757  28AE  28BA               	goto	l341
 12758  28AF                     l8413:	
 12759                           
 12760                           ; Switch size 1, requested type "simple"
 12761                           ; Number of cases is 3, Range of values is 0 to 2
 12762                           ; switch strategies available:
 12763                           ; Name         Instructions Cycles
 12764                           ; simple_byte           10     6 (average)
 12765                           ; direct_byte           12     6 (fixed)
 12766                           ; jumptable            260     6 (fixed)
 12767                           ;	Chosen strategy is simple_byte
 12768  28AF  0871               	movf	RGB_color@color,w
 12769  28B0  3A00               	xorlw	0	; case 0
 12770  28B1  1903               	skipnz
 12771  28B2  289B               	goto	l337
 12772  28B3  3A01               	xorlw	1	; case 1
 12773  28B4  1903               	skipnz
 12774  28B5  28A0               	goto	l339
 12775  28B6  3A03               	xorlw	3	; case 2
 12776  28B7  1903               	skipnz
 12777  28B8  28A5               	goto	l340
 12778  28B9  28BA               	goto	l341
 12779  28BA                     l341:	
 12780  28BA  0008               	return
 12781  28BB                     __end_of_RGB_color:	
 12782                           
 12783                           	psect	text48
 12784  07F9                     __ptext48:	
 12785 ;; *************** function _AFE_UPDATE *****************
 12786 ;; Defined at:
 12787 ;;		line 166 in file "BQ76920.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  1    wreg      void 
 12794 ;; Registers used:
 12795 ;;		wreg, status,2, status,0, pclath, cstack
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;Total ram usage:        0 bytes
 12806 ;; Hardware stack levels used:    1
 12807 ;; Hardware stack levels required when called:    5
 12808 ;; This function calls:
 12809 ;;		_updateTemperatures
 12810 ;;		_updateVoltages
 12811 ;; This function is called by:
 12812 ;;		_statemachine
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           
 12817                           ;psect for function _AFE_UPDATE
 12818  07F9                     _AFE_UPDATE:	
 12819                           
 12820                           ;BQ76920.c: 168:     updateVoltages();
 12821                           
 12822                           ;incstack = 0
 12823                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 12824  07F9  3195  2528  3187   	fcall	_updateVoltages
 12825                           
 12826                           ;BQ76920.c: 169:     updateTemperatures();
 12827  07FC  3185  25F9         	fcall	_updateTemperatures
 12828  07FE  0008               	return
 12829  07FF                     __end_of_AFE_UPDATE:	
 12830                           
 12831                           	psect	text49
 12832  1528                     __ptext49:	
 12833 ;; *************** function _updateVoltages *****************
 12834 ;; Defined at:
 12835 ;;		line 202 in file "BQ76920.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;		None
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;  adcVal          4   24[BANK1 ] long 
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  1    wreg      void 
 12842 ;; Registers used:
 12843 ;;		wreg, status,2, status,0, pclath, cstack
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12850 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12851 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12852 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12853 ;;Total ram usage:       11 bytes
 12854 ;; Hardware stack levels used:    1
 12855 ;; Hardware stack levels required when called:    3
 12856 ;; This function calls:
 12857 ;;		___aldiv
 12858 ;;		___fladd
 12859 ;;		___fldiv
 12860 ;;		___flmul
 12861 ;;		___fltol
 12862 ;;		___lmul
 12863 ;;		___xxtofl
 12864 ;;		_readRegister
 12865 ;; This function is called by:
 12866 ;;		_AFE_UPDATE
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           
 12871                           ;psect for function _updateVoltages
 12872  1528                     _updateVoltages:	
 12873                           
 12874                           ;BQ76920.c: 206:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 12875                           
 12876                           ;incstack = 0
 12877                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 12878  1528  3018               	movlw	24
 12879  1529  00F5               	movwf	readRegister@slaveAddress
 12880  152A  3000               	movlw	0
 12881  152B  00F6               	movwf	readRegister@slaveAddress+1
 12882  152C  302A               	movlw	42
 12883  152D  00F7               	movwf	readRegister@regAddress
 12884  152E  3000               	movlw	0
 12885  152F  00F8               	movwf	readRegister@regAddress+1
 12886  1530  31A9  21FA  3195   	fcall	_readRegister
 12887  1533  0875               	movf	?_readRegister,w
 12888  1534  0021               	movlb	1	; select bank1
 12889  1535  00B1               	movwf	??_updateVoltages^(0+128)
 12890  1536  0876               	movf	?_readRegister+1,w
 12891  1537  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 12892  1538  0831               	movf	??_updateVoltages^(0+128),w
 12893  1539  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 12894  153A  01B1               	clrf	??_updateVoltages^(0+128)
 12895  153B  3018               	movlw	24
 12896  153C  00F5               	movwf	readRegister@slaveAddress
 12897  153D  3000               	movlw	0
 12898  153E  00F6               	movwf	readRegister@slaveAddress+1
 12899  153F  302B               	movlw	43
 12900  1540  00F7               	movwf	readRegister@regAddress
 12901  1541  3000               	movlw	0
 12902  1542  00F8               	movwf	readRegister@regAddress+1
 12903  1543  31A9  21FA  3195   	fcall	_readRegister
 12904  1546  0875               	movf	?_readRegister,w
 12905  1547  0021               	movlb	1	; select bank1
 12906  1548  0431               	iorwf	??_updateVoltages^(0+128),w
 12907  1549  00B8               	movwf	updateVoltages@adcVal^(0+128)
 12908  154A  0876               	movf	?_readRegister+1,w
 12909  154B  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 12910  154C  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 12911  154D  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 12912  154E  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 12913  154F  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 12914  1550  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 12915  1551  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 12916                           
 12917                           ;BQ76920.c: 207:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 12918  1552  0022               	movlb	2	; select bank2
 12919  1553  086E               	movf	_adcGain^(0+256),w
 12920  1554  00F1               	movwf	___xxtofl@val
 12921  1555  086F               	movf	(_adcGain+1)^(0+256),w
 12922  1556  00F2               	movwf	___xxtofl@val+1
 12923  1557  0D89               	rlf	9,f
 12924  1558  3B89               	subwfb	9,f
 12925  1559  0989               	comf	9,f
 12926  155A  00F3               	movwf	___xxtofl@val+2
 12927  155B  00F4               	movwf	___xxtofl@val+3
 12928  155C  3001               	movlw	1
 12929  155D  31AE  26C9  3195   	fcall	___xxtofl
 12930  1560  0874               	movf	?___xxtofl+3,w
 12931  1561  0020               	movlb	0	; select bank0
 12932  1562  00AD               	movwf	___flmul@a+3
 12933  1563  0873               	movf	?___xxtofl+2,w
 12934  1564  00AC               	movwf	___flmul@a+2
 12935  1565  0872               	movf	?___xxtofl+1,w
 12936  1566  00AB               	movwf	___flmul@a+1
 12937  1567  0871               	movf	?___xxtofl,w
 12938  1568  00AA               	movwf	___flmul@a
 12939  1569  3040               	movlw	64
 12940  156A  00A9               	movwf	___flmul@b+3
 12941  156B  3080               	movlw	128
 12942  156C  00A8               	movwf	___flmul@b+2
 12943  156D  3000               	movlw	0
 12944  156E  00A7               	movwf	___flmul@b+1
 12945  156F  3000               	movlw	0
 12946  1570  00A6               	movwf	___flmul@b
 12947  1571  3192  22FC  3195   	fcall	___flmul
 12948  1574  0020               	movlb	0	; select bank0
 12949  1575  0829               	movf	?___flmul+3,w
 12950  1576  0021               	movlb	1	; select bank1
 12951  1577  00B7               	movwf	(_updateVoltages$2025+3)^(0+128)
 12952  1578  0020               	movlb	0	; select bank0
 12953  1579  0828               	movf	?___flmul+2,w
 12954  157A  0021               	movlb	1	; select bank1
 12955  157B  00B6               	movwf	(_updateVoltages$2025+2)^(0+128)
 12956  157C  0020               	movlb	0	; select bank0
 12957  157D  0827               	movf	?___flmul+1,w
 12958  157E  0021               	movlb	1	; select bank1
 12959  157F  00B5               	movwf	(_updateVoltages$2025+1)^(0+128)
 12960  1580  0020               	movlb	0	; select bank0
 12961  1581  0826               	movf	?___flmul,w
 12962  1582  0021               	movlb	1	; select bank1
 12963  1583  00B4               	movwf	_updateVoltages$2025^(0+128)
 12964                           
 12965                           ;BQ76920.c: 207:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 12966  1584  0837               	movf	(_updateVoltages$2025+3)^(0+128),w
 12967  1585  0020               	movlb	0	; select bank0
 12968  1586  00AD               	movwf	___flmul@a+3
 12969  1587  0021               	movlb	1	; select bank1
 12970  1588  0836               	movf	(_updateVoltages$2025+2)^(0+128),w
 12971  1589  0020               	movlb	0	; select bank0
 12972  158A  00AC               	movwf	___flmul@a+2
 12973  158B  0021               	movlb	1	; select bank1
 12974  158C  0835               	movf	(_updateVoltages$2025+1)^(0+128),w
 12975  158D  0020               	movlb	0	; select bank0
 12976  158E  00AB               	movwf	___flmul@a+1
 12977  158F  0021               	movlb	1	; select bank1
 12978  1590  0834               	movf	_updateVoltages$2025^(0+128),w
 12979  1591  0020               	movlb	0	; select bank0
 12980  1592  00AA               	movwf	___flmul@a
 12981  1593  0021               	movlb	1	; select bank1
 12982  1594  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 12983  1595  00F4               	movwf	___xxtofl@val+3
 12984  1596  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 12985  1597  00F3               	movwf	___xxtofl@val+2
 12986  1598  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 12987  1599  00F2               	movwf	___xxtofl@val+1
 12988  159A  0838               	movf	updateVoltages@adcVal^(0+128),w
 12989  159B  00F1               	movwf	___xxtofl@val
 12990  159C  3001               	movlw	1
 12991  159D  31AE  26C9  3195   	fcall	___xxtofl
 12992  15A0  0874               	movf	?___xxtofl+3,w
 12993  15A1  0020               	movlb	0	; select bank0
 12994  15A2  00A9               	movwf	___flmul@b+3
 12995  15A3  0873               	movf	?___xxtofl+2,w
 12996  15A4  00A8               	movwf	___flmul@b+2
 12997  15A5  0872               	movf	?___xxtofl+1,w
 12998  15A6  00A7               	movwf	___flmul@b+1
 12999  15A7  0871               	movf	?___xxtofl,w
 13000  15A8  00A6               	movwf	___flmul@b
 13001  15A9  3192  22FC  3195   	fcall	___flmul
 13002  15AC  0020               	movlb	0	; select bank0
 13003  15AD  0829               	movf	?___flmul+3,w
 13004  15AE  00C7               	movwf	___fldiv@b+3
 13005  15AF  0828               	movf	?___flmul+2,w
 13006  15B0  00C6               	movwf	___fldiv@b+2
 13007  15B1  0827               	movf	?___flmul+1,w
 13008  15B2  00C5               	movwf	___fldiv@b+1
 13009  15B3  0826               	movf	?___flmul,w
 13010  15B4  00C4               	movwf	___fldiv@b
 13011  15B5  3044               	movlw	68
 13012  15B6  00C3               	movwf	___fldiv@a+3
 13013  15B7  307A               	movlw	122
 13014  15B8  00C2               	movwf	___fldiv@a+2
 13015  15B9  3000               	movlw	0
 13016  15BA  00C1               	movwf	___fldiv@a+1
 13017  15BB  3000               	movlw	0
 13018  15BC  00C0               	movwf	___fldiv@a
 13019  15BD  319C  24E1  3195   	fcall	___fldiv
 13020  15C0  0020               	movlb	0	; select bank0
 13021  15C1  0843               	movf	?___fldiv+3,w
 13022  15C2  00E1               	movwf	___fladd@a+3
 13023  15C3  0842               	movf	?___fldiv+2,w
 13024  15C4  00E0               	movwf	___fladd@a+2
 13025  15C5  0841               	movf	?___fldiv+1,w
 13026  15C6  00DF               	movwf	___fladd@a+1
 13027  15C7  0840               	movf	?___fldiv,w
 13028  15C8  00DE               	movwf	___fladd@a
 13029  15C9  0022               	movlb	2	; select bank2
 13030  15CA  0867               	movf	(_adcOffset+1)^(0+256),w
 13031  15CB  0021               	movlb	1	; select bank1
 13032  15CC  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13033  15CD  0022               	movlb	2	; select bank2
 13034  15CE  0866               	movf	_adcOffset^(0+256),w
 13035  15CF  0021               	movlb	1	; select bank1
 13036  15D0  00B1               	movwf	??_updateVoltages^(0+128)
 13037  15D1  35B1               	lslf	??_updateVoltages^(0+128),f
 13038  15D2  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13039  15D3  35B1               	lslf	??_updateVoltages^(0+128),f
 13040  15D4  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13041  15D5  0831               	movf	??_updateVoltages^(0+128),w
 13042  15D6  00F1               	movwf	___xxtofl@val
 13043  15D7  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13044  15D8  00F2               	movwf	___xxtofl@val+1
 13045  15D9  0D89               	rlf	9,f
 13046  15DA  3B89               	subwfb	9,f
 13047  15DB  0989               	comf	9,f
 13048  15DC  00F3               	movwf	___xxtofl@val+2
 13049  15DD  00F4               	movwf	___xxtofl@val+3
 13050  15DE  3001               	movlw	1
 13051  15DF  31AE  26C9  3195   	fcall	___xxtofl
 13052  15E2  0874               	movf	?___xxtofl+3,w
 13053  15E3  0020               	movlb	0	; select bank0
 13054  15E4  00DD               	movwf	___fladd@b+3
 13055  15E5  0873               	movf	?___xxtofl+2,w
 13056  15E6  00DC               	movwf	___fladd@b+2
 13057  15E7  0872               	movf	?___xxtofl+1,w
 13058  15E8  00DB               	movwf	___fladd@b+1
 13059  15E9  0871               	movf	?___xxtofl,w
 13060  15EA  00DA               	movwf	___fladd@b
 13061  15EB  3191  211A  3195   	fcall	___fladd
 13062  15EE  0020               	movlb	0	; select bank0
 13063  15EF  085D               	movf	?___fladd+3,w
 13064  15F0  0021               	movlb	1	; select bank1
 13065  15F1  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13066  15F2  0020               	movlb	0	; select bank0
 13067  15F3  085C               	movf	?___fladd+2,w
 13068  15F4  0021               	movlb	1	; select bank1
 13069  15F5  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13070  15F6  0020               	movlb	0	; select bank0
 13071  15F7  085B               	movf	?___fladd+1,w
 13072  15F8  0021               	movlb	1	; select bank1
 13073  15F9  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13074  15FA  0020               	movlb	0	; select bank0
 13075  15FB  085A               	movf	?___fladd,w
 13076  15FC  0021               	movlb	1	; select bank1
 13077  15FD  00A8               	movwf	___fltol@f1^(0+128)
 13078  15FE  31AC  241E  3195   	fcall	___fltol
 13079  1601  0021               	movlb	1	; select bank1
 13080  1602  082B               	movf	(?___fltol+3)^(0+128),w
 13081  1603  0023               	movlb	3	; select bank3
 13082  1604  00BD               	movwf	(_batVoltage+3)^(0+384)
 13083  1605  0021               	movlb	1	; select bank1
 13084  1606  082A               	movf	(?___fltol+2)^(0+128),w
 13085  1607  0023               	movlb	3	; select bank3
 13086  1608  00BC               	movwf	(_batVoltage+2)^(0+384)
 13087  1609  0021               	movlb	1	; select bank1
 13088  160A  0829               	movf	(?___fltol+1)^(0+128),w
 13089  160B  0023               	movlb	3	; select bank3
 13090  160C  00BB               	movwf	(_batVoltage+1)^(0+384)
 13091  160D  0021               	movlb	1	; select bank1
 13092  160E  0828               	movf	?___fltol^(0+128),w
 13093  160F  0023               	movlb	3	; select bank3
 13094  1610  00BA               	movwf	_batVoltage^(0+384)
 13095                           
 13096                           ;BQ76920.c: 232:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13097  1611  3018               	movlw	24
 13098  1612  00F5               	movwf	readRegister@slaveAddress
 13099  1613  3000               	movlw	0
 13100  1614  00F6               	movwf	readRegister@slaveAddress+1
 13101  1615  300C               	movlw	12
 13102  1616  00F7               	movwf	readRegister@regAddress
 13103  1617  3000               	movlw	0
 13104  1618  00F8               	movwf	readRegister@regAddress+1
 13105  1619  31A9  21FA  3195   	fcall	_readRegister
 13106  161C  303F               	movlw	63
 13107  161D  0575               	andwf	?_readRegister,w
 13108  161E  0021               	movlb	1	; select bank1
 13109  161F  00B1               	movwf	??_updateVoltages^(0+128)
 13110  1620  3000               	movlw	0
 13111  1621  0576               	andwf	?_readRegister+1,w
 13112  1622  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13113  1623  0831               	movf	??_updateVoltages^(0+128),w
 13114  1624  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13115  1625  01B1               	clrf	??_updateVoltages^(0+128)
 13116  1626  3018               	movlw	24
 13117  1627  00F5               	movwf	readRegister@slaveAddress
 13118  1628  3000               	movlw	0
 13119  1629  00F6               	movwf	readRegister@slaveAddress+1
 13120  162A  300D               	movlw	13
 13121  162B  00F7               	movwf	readRegister@regAddress
 13122  162C  3000               	movlw	0
 13123  162D  00F8               	movwf	readRegister@regAddress+1
 13124  162E  31A9  21FA  3195   	fcall	_readRegister
 13125  1631  0875               	movf	?_readRegister,w
 13126  1632  0021               	movlb	1	; select bank1
 13127  1633  0431               	iorwf	??_updateVoltages^(0+128),w
 13128  1634  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13129  1635  0876               	movf	?_readRegister+1,w
 13130  1636  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13131  1637  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13132  1638  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13133  1639  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13134  163A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13135  163B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13136  163C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13137                           
 13138                           ;BQ76920.c: 233:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13139  163D  3000               	movlw	0
 13140  163E  0020               	movlb	0	; select bank0
 13141  163F  00A7               	movwf	___aldiv@divisor+3
 13142  1640  3000               	movlw	0
 13143  1641  00A6               	movwf	___aldiv@divisor+2
 13144  1642  3003               	movlw	3
 13145  1643  00A5               	movwf	___aldiv@divisor+1
 13146  1644  30E8               	movlw	232
 13147  1645  00A4               	movwf	___aldiv@divisor
 13148  1646  0022               	movlb	2	; select bank2
 13149  1647  086E               	movf	_adcGain^(0+256),w
 13150  1648  00F1               	movwf	___lmul@multiplier
 13151  1649  086F               	movf	(_adcGain+1)^(0+256),w
 13152  164A  00F2               	movwf	___lmul@multiplier+1
 13153  164B  0D89               	rlf	9,f
 13154  164C  3B89               	subwfb	9,f
 13155  164D  0989               	comf	9,f
 13156  164E  00F3               	movwf	___lmul@multiplier+2
 13157  164F  00F4               	movwf	___lmul@multiplier+3
 13158  1650  0021               	movlb	1	; select bank1
 13159  1651  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13160  1652  00F8               	movwf	___lmul@multiplicand+3
 13161  1653  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13162  1654  00F7               	movwf	___lmul@multiplicand+2
 13163  1655  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13164  1656  00F6               	movwf	___lmul@multiplicand+1
 13165  1657  0838               	movf	updateVoltages@adcVal^(0+128),w
 13166  1658  00F5               	movwf	___lmul@multiplicand
 13167  1659  31A9  2161  3195   	fcall	___lmul
 13168  165C  0874               	movf	?___lmul+3,w
 13169  165D  0020               	movlb	0	; select bank0
 13170  165E  00AB               	movwf	___aldiv@dividend+3
 13171  165F  0873               	movf	?___lmul+2,w
 13172  1660  00AA               	movwf	___aldiv@dividend+2
 13173  1661  0872               	movf	?___lmul+1,w
 13174  1662  00A9               	movwf	___aldiv@dividend+1
 13175  1663  0871               	movf	?___lmul,w
 13176  1664  00A8               	movwf	___aldiv@dividend
 13177  1665  31A0  200C  3195   	fcall	___aldiv
 13178  1668  0022               	movlb	2	; select bank2
 13179  1669  0866               	movf	_adcOffset^(0+256),w
 13180  166A  0020               	movlb	0	; select bank0
 13181  166B  0724               	addwf	?___aldiv,w
 13182  166C  0023               	movlb	3	; select bank3
 13183  166D  00A0               	movwf	_cellVoltages^(0+384)
 13184  166E  0022               	movlb	2	; select bank2
 13185  166F  0867               	movf	(_adcOffset+1)^(0+256),w
 13186  1670  0020               	movlb	0	; select bank0
 13187  1671  3D25               	addwfc	?___aldiv+1,w
 13188  1672  0023               	movlb	3	; select bank3
 13189  1673  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13190                           
 13191                           ;BQ76920.c: 234:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13192  1674  3018               	movlw	24
 13193  1675  00F5               	movwf	readRegister@slaveAddress
 13194  1676  3000               	movlw	0
 13195  1677  00F6               	movwf	readRegister@slaveAddress+1
 13196  1678  300E               	movlw	14
 13197  1679  00F7               	movwf	readRegister@regAddress
 13198  167A  3000               	movlw	0
 13199  167B  00F8               	movwf	readRegister@regAddress+1
 13200  167C  31A9  21FA  3195   	fcall	_readRegister
 13201  167F  303F               	movlw	63
 13202  1680  0575               	andwf	?_readRegister,w
 13203  1681  0021               	movlb	1	; select bank1
 13204  1682  00B1               	movwf	??_updateVoltages^(0+128)
 13205  1683  3000               	movlw	0
 13206  1684  0576               	andwf	?_readRegister+1,w
 13207  1685  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13208  1686  0831               	movf	??_updateVoltages^(0+128),w
 13209  1687  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13210  1688  01B1               	clrf	??_updateVoltages^(0+128)
 13211  1689  3018               	movlw	24
 13212  168A  00F5               	movwf	readRegister@slaveAddress
 13213  168B  3000               	movlw	0
 13214  168C  00F6               	movwf	readRegister@slaveAddress+1
 13215  168D  300F               	movlw	15
 13216  168E  00F7               	movwf	readRegister@regAddress
 13217  168F  3000               	movlw	0
 13218  1690  00F8               	movwf	readRegister@regAddress+1
 13219  1691  31A9  21FA  3195   	fcall	_readRegister
 13220  1694  0875               	movf	?_readRegister,w
 13221  1695  0021               	movlb	1	; select bank1
 13222  1696  0431               	iorwf	??_updateVoltages^(0+128),w
 13223  1697  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13224  1698  0876               	movf	?_readRegister+1,w
 13225  1699  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13226  169A  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13227  169B  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13228  169C  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13229  169D  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13230  169E  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13231  169F  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13232                           
 13233                           ;BQ76920.c: 235:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13234  16A0  3000               	movlw	0
 13235  16A1  0020               	movlb	0	; select bank0
 13236  16A2  00A7               	movwf	___aldiv@divisor+3
 13237  16A3  3000               	movlw	0
 13238  16A4  00A6               	movwf	___aldiv@divisor+2
 13239  16A5  3003               	movlw	3
 13240  16A6  00A5               	movwf	___aldiv@divisor+1
 13241  16A7  30E8               	movlw	232
 13242  16A8  00A4               	movwf	___aldiv@divisor
 13243  16A9  0022               	movlb	2	; select bank2
 13244  16AA  086E               	movf	_adcGain^(0+256),w
 13245  16AB  00F1               	movwf	___lmul@multiplier
 13246  16AC  086F               	movf	(_adcGain+1)^(0+256),w
 13247  16AD  00F2               	movwf	___lmul@multiplier+1
 13248  16AE  0D89               	rlf	9,f
 13249  16AF  3B89               	subwfb	9,f
 13250  16B0  0989               	comf	9,f
 13251  16B1  00F3               	movwf	___lmul@multiplier+2
 13252  16B2  00F4               	movwf	___lmul@multiplier+3
 13253  16B3  0021               	movlb	1	; select bank1
 13254  16B4  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13255  16B5  00F8               	movwf	___lmul@multiplicand+3
 13256  16B6  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13257  16B7  00F7               	movwf	___lmul@multiplicand+2
 13258  16B8  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13259  16B9  00F6               	movwf	___lmul@multiplicand+1
 13260  16BA  0838               	movf	updateVoltages@adcVal^(0+128),w
 13261  16BB  00F5               	movwf	___lmul@multiplicand
 13262  16BC  31A9  2161  3195   	fcall	___lmul
 13263  16BF  0874               	movf	?___lmul+3,w
 13264  16C0  0020               	movlb	0	; select bank0
 13265  16C1  00AB               	movwf	___aldiv@dividend+3
 13266  16C2  0873               	movf	?___lmul+2,w
 13267  16C3  00AA               	movwf	___aldiv@dividend+2
 13268  16C4  0872               	movf	?___lmul+1,w
 13269  16C5  00A9               	movwf	___aldiv@dividend+1
 13270  16C6  0871               	movf	?___lmul,w
 13271  16C7  00A8               	movwf	___aldiv@dividend
 13272  16C8  31A0  200C  3195   	fcall	___aldiv
 13273  16CB  0022               	movlb	2	; select bank2
 13274  16CC  0866               	movf	_adcOffset^(0+256),w
 13275  16CD  0020               	movlb	0	; select bank0
 13276  16CE  0724               	addwf	?___aldiv,w
 13277  16CF  0023               	movlb	3	; select bank3
 13278  16D0  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13279  16D1  0022               	movlb	2	; select bank2
 13280  16D2  0867               	movf	(_adcOffset+1)^(0+256),w
 13281  16D3  0020               	movlb	0	; select bank0
 13282  16D4  3D25               	addwfc	?___aldiv+1,w
 13283  16D5  0023               	movlb	3	; select bank3
 13284  16D6  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13285                           
 13286                           ;BQ76920.c: 236:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13287  16D7  3018               	movlw	24
 13288  16D8  00F5               	movwf	readRegister@slaveAddress
 13289  16D9  3000               	movlw	0
 13290  16DA  00F6               	movwf	readRegister@slaveAddress+1
 13291  16DB  3010               	movlw	16
 13292  16DC  00F7               	movwf	readRegister@regAddress
 13293  16DD  3000               	movlw	0
 13294  16DE  00F8               	movwf	readRegister@regAddress+1
 13295  16DF  31A9  21FA  3195   	fcall	_readRegister
 13296  16E2  303F               	movlw	63
 13297  16E3  0575               	andwf	?_readRegister,w
 13298  16E4  0021               	movlb	1	; select bank1
 13299  16E5  00B1               	movwf	??_updateVoltages^(0+128)
 13300  16E6  3000               	movlw	0
 13301  16E7  0576               	andwf	?_readRegister+1,w
 13302  16E8  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13303  16E9  0831               	movf	??_updateVoltages^(0+128),w
 13304  16EA  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13305  16EB  01B1               	clrf	??_updateVoltages^(0+128)
 13306  16EC  3018               	movlw	24
 13307  16ED  00F5               	movwf	readRegister@slaveAddress
 13308  16EE  3000               	movlw	0
 13309  16EF  00F6               	movwf	readRegister@slaveAddress+1
 13310  16F0  3011               	movlw	17
 13311  16F1  00F7               	movwf	readRegister@regAddress
 13312  16F2  3000               	movlw	0
 13313  16F3  00F8               	movwf	readRegister@regAddress+1
 13314  16F4  31A9  21FA  3195   	fcall	_readRegister
 13315  16F7  0875               	movf	?_readRegister,w
 13316  16F8  0021               	movlb	1	; select bank1
 13317  16F9  0431               	iorwf	??_updateVoltages^(0+128),w
 13318  16FA  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13319  16FB  0876               	movf	?_readRegister+1,w
 13320  16FC  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13321  16FD  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13322  16FE  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13323  16FF  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13324  1700  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13325  1701  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13326  1702  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13327                           
 13328                           ;BQ76920.c: 237:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13329  1703  3000               	movlw	0
 13330  1704  0020               	movlb	0	; select bank0
 13331  1705  00A7               	movwf	___aldiv@divisor+3
 13332  1706  3000               	movlw	0
 13333  1707  00A6               	movwf	___aldiv@divisor+2
 13334  1708  3003               	movlw	3
 13335  1709  00A5               	movwf	___aldiv@divisor+1
 13336  170A  30E8               	movlw	232
 13337  170B  00A4               	movwf	___aldiv@divisor
 13338  170C  0022               	movlb	2	; select bank2
 13339  170D  086E               	movf	_adcGain^(0+256),w
 13340  170E  00F1               	movwf	___lmul@multiplier
 13341  170F  086F               	movf	(_adcGain+1)^(0+256),w
 13342  1710  00F2               	movwf	___lmul@multiplier+1
 13343  1711  0D89               	rlf	9,f
 13344  1712  3B89               	subwfb	9,f
 13345  1713  0989               	comf	9,f
 13346  1714  00F3               	movwf	___lmul@multiplier+2
 13347  1715  00F4               	movwf	___lmul@multiplier+3
 13348  1716  0021               	movlb	1	; select bank1
 13349  1717  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13350  1718  00F8               	movwf	___lmul@multiplicand+3
 13351  1719  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13352  171A  00F7               	movwf	___lmul@multiplicand+2
 13353  171B  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13354  171C  00F6               	movwf	___lmul@multiplicand+1
 13355  171D  0838               	movf	updateVoltages@adcVal^(0+128),w
 13356  171E  00F5               	movwf	___lmul@multiplicand
 13357  171F  31A9  2161  3195   	fcall	___lmul
 13358  1722  0874               	movf	?___lmul+3,w
 13359  1723  0020               	movlb	0	; select bank0
 13360  1724  00AB               	movwf	___aldiv@dividend+3
 13361  1725  0873               	movf	?___lmul+2,w
 13362  1726  00AA               	movwf	___aldiv@dividend+2
 13363  1727  0872               	movf	?___lmul+1,w
 13364  1728  00A9               	movwf	___aldiv@dividend+1
 13365  1729  0871               	movf	?___lmul,w
 13366  172A  00A8               	movwf	___aldiv@dividend
 13367  172B  31A0  200C  3195   	fcall	___aldiv
 13368  172E  0022               	movlb	2	; select bank2
 13369  172F  0866               	movf	_adcOffset^(0+256),w
 13370  1730  0020               	movlb	0	; select bank0
 13371  1731  0724               	addwf	?___aldiv,w
 13372  1732  0023               	movlb	3	; select bank3
 13373  1733  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13374  1734  0022               	movlb	2	; select bank2
 13375  1735  0867               	movf	(_adcOffset+1)^(0+256),w
 13376  1736  0020               	movlb	0	; select bank0
 13377  1737  3D25               	addwfc	?___aldiv+1,w
 13378  1738  0023               	movlb	3	; select bank3
 13379  1739  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13380                           
 13381                           ;BQ76920.c: 238:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13382  173A  3018               	movlw	24
 13383  173B  00F5               	movwf	readRegister@slaveAddress
 13384  173C  3000               	movlw	0
 13385  173D  00F6               	movwf	readRegister@slaveAddress+1
 13386  173E  3012               	movlw	18
 13387  173F  00F7               	movwf	readRegister@regAddress
 13388  1740  3000               	movlw	0
 13389  1741  00F8               	movwf	readRegister@regAddress+1
 13390  1742  31A9  21FA  3195   	fcall	_readRegister
 13391  1745  303F               	movlw	63
 13392  1746  0575               	andwf	?_readRegister,w
 13393  1747  0021               	movlb	1	; select bank1
 13394  1748  00B1               	movwf	??_updateVoltages^(0+128)
 13395  1749  3000               	movlw	0
 13396  174A  0576               	andwf	?_readRegister+1,w
 13397  174B  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13398  174C  0831               	movf	??_updateVoltages^(0+128),w
 13399  174D  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13400  174E  01B1               	clrf	??_updateVoltages^(0+128)
 13401  174F  3018               	movlw	24
 13402  1750  00F5               	movwf	readRegister@slaveAddress
 13403  1751  3000               	movlw	0
 13404  1752  00F6               	movwf	readRegister@slaveAddress+1
 13405  1753  3013               	movlw	19
 13406  1754  00F7               	movwf	readRegister@regAddress
 13407  1755  3000               	movlw	0
 13408  1756  00F8               	movwf	readRegister@regAddress+1
 13409  1757  31A9  21FA  3195   	fcall	_readRegister
 13410  175A  0875               	movf	?_readRegister,w
 13411  175B  0021               	movlb	1	; select bank1
 13412  175C  0431               	iorwf	??_updateVoltages^(0+128),w
 13413  175D  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13414  175E  0876               	movf	?_readRegister+1,w
 13415  175F  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13416  1760  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13417  1761  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13418  1762  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13419  1763  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13420  1764  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13421  1765  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13422                           
 13423                           ;BQ76920.c: 239:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13424  1766  3000               	movlw	0
 13425  1767  0020               	movlb	0	; select bank0
 13426  1768  00A7               	movwf	___aldiv@divisor+3
 13427  1769  3000               	movlw	0
 13428  176A  00A6               	movwf	___aldiv@divisor+2
 13429  176B  3003               	movlw	3
 13430  176C  00A5               	movwf	___aldiv@divisor+1
 13431  176D  30E8               	movlw	232
 13432  176E  00A4               	movwf	___aldiv@divisor
 13433  176F  0022               	movlb	2	; select bank2
 13434  1770  086E               	movf	_adcGain^(0+256),w
 13435  1771  00F1               	movwf	___lmul@multiplier
 13436  1772  086F               	movf	(_adcGain+1)^(0+256),w
 13437  1773  00F2               	movwf	___lmul@multiplier+1
 13438  1774  0D89               	rlf	9,f
 13439  1775  3B89               	subwfb	9,f
 13440  1776  0989               	comf	9,f
 13441  1777  00F3               	movwf	___lmul@multiplier+2
 13442  1778  00F4               	movwf	___lmul@multiplier+3
 13443  1779  0021               	movlb	1	; select bank1
 13444  177A  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13445  177B  00F8               	movwf	___lmul@multiplicand+3
 13446  177C  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13447  177D  00F7               	movwf	___lmul@multiplicand+2
 13448  177E  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13449  177F  00F6               	movwf	___lmul@multiplicand+1
 13450  1780  0838               	movf	updateVoltages@adcVal^(0+128),w
 13451  1781  00F5               	movwf	___lmul@multiplicand
 13452  1782  31A9  2161  3195   	fcall	___lmul
 13453  1785  0874               	movf	?___lmul+3,w
 13454  1786  0020               	movlb	0	; select bank0
 13455  1787  00AB               	movwf	___aldiv@dividend+3
 13456  1788  0873               	movf	?___lmul+2,w
 13457  1789  00AA               	movwf	___aldiv@dividend+2
 13458  178A  0872               	movf	?___lmul+1,w
 13459  178B  00A9               	movwf	___aldiv@dividend+1
 13460  178C  0871               	movf	?___lmul,w
 13461  178D  00A8               	movwf	___aldiv@dividend
 13462  178E  31A0  200C  3195   	fcall	___aldiv
 13463  1791  0022               	movlb	2	; select bank2
 13464  1792  0866               	movf	_adcOffset^(0+256),w
 13465  1793  0020               	movlb	0	; select bank0
 13466  1794  0724               	addwf	?___aldiv,w
 13467  1795  0023               	movlb	3	; select bank3
 13468  1796  00A6               	movwf	(_cellVoltages^(0+384)+6)
 13469  1797  0022               	movlb	2	; select bank2
 13470  1798  0867               	movf	(_adcOffset+1)^(0+256),w
 13471  1799  0020               	movlb	0	; select bank0
 13472  179A  3D25               	addwfc	?___aldiv+1,w
 13473  179B  0023               	movlb	3	; select bank3
 13474  179C  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 13475                           
 13476                           ;BQ76920.c: 240:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13477  179D  3018               	movlw	24
 13478  179E  00F5               	movwf	readRegister@slaveAddress
 13479  179F  3000               	movlw	0
 13480  17A0  00F6               	movwf	readRegister@slaveAddress+1
 13481  17A1  3014               	movlw	20
 13482  17A2  00F7               	movwf	readRegister@regAddress
 13483  17A3  3000               	movlw	0
 13484  17A4  00F8               	movwf	readRegister@regAddress+1
 13485  17A5  31A9  21FA  3195   	fcall	_readRegister
 13486  17A8  303F               	movlw	63
 13487  17A9  0575               	andwf	?_readRegister,w
 13488  17AA  0021               	movlb	1	; select bank1
 13489  17AB  00B1               	movwf	??_updateVoltages^(0+128)
 13490  17AC  3000               	movlw	0
 13491  17AD  0576               	andwf	?_readRegister+1,w
 13492  17AE  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13493  17AF  0831               	movf	??_updateVoltages^(0+128),w
 13494  17B0  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13495  17B1  01B1               	clrf	??_updateVoltages^(0+128)
 13496  17B2  3018               	movlw	24
 13497  17B3  00F5               	movwf	readRegister@slaveAddress
 13498  17B4  3000               	movlw	0
 13499  17B5  00F6               	movwf	readRegister@slaveAddress+1
 13500  17B6  3015               	movlw	21
 13501  17B7  00F7               	movwf	readRegister@regAddress
 13502  17B8  3000               	movlw	0
 13503  17B9  00F8               	movwf	readRegister@regAddress+1
 13504  17BA  31A9  21FA  3195   	fcall	_readRegister
 13505  17BD  0875               	movf	?_readRegister,w
 13506  17BE  0021               	movlb	1	; select bank1
 13507  17BF  0431               	iorwf	??_updateVoltages^(0+128),w
 13508  17C0  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13509  17C1  0876               	movf	?_readRegister+1,w
 13510  17C2  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13511  17C3  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13512  17C4  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13513  17C5  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13514  17C6  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13515  17C7  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13516  17C8  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13517                           
 13518                           ;BQ76920.c: 241:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13519  17C9  3000               	movlw	0
 13520  17CA  0020               	movlb	0	; select bank0
 13521  17CB  00A7               	movwf	___aldiv@divisor+3
 13522  17CC  3000               	movlw	0
 13523  17CD  00A6               	movwf	___aldiv@divisor+2
 13524  17CE  3003               	movlw	3
 13525  17CF  00A5               	movwf	___aldiv@divisor+1
 13526  17D0  30E8               	movlw	232
 13527  17D1  00A4               	movwf	___aldiv@divisor
 13528  17D2  0022               	movlb	2	; select bank2
 13529  17D3  086E               	movf	_adcGain^(0+256),w
 13530  17D4  00F1               	movwf	___lmul@multiplier
 13531  17D5  086F               	movf	(_adcGain+1)^(0+256),w
 13532  17D6  00F2               	movwf	___lmul@multiplier+1
 13533  17D7  0D89               	rlf	9,f
 13534  17D8  3B89               	subwfb	9,f
 13535  17D9  0989               	comf	9,f
 13536  17DA  00F3               	movwf	___lmul@multiplier+2
 13537  17DB  00F4               	movwf	___lmul@multiplier+3
 13538  17DC  0021               	movlb	1	; select bank1
 13539  17DD  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13540  17DE  00F8               	movwf	___lmul@multiplicand+3
 13541  17DF  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13542  17E0  00F7               	movwf	___lmul@multiplicand+2
 13543  17E1  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13544  17E2  00F6               	movwf	___lmul@multiplicand+1
 13545  17E3  0838               	movf	updateVoltages@adcVal^(0+128),w
 13546  17E4  00F5               	movwf	___lmul@multiplicand
 13547  17E5  31A9  2161  3195   	fcall	___lmul
 13548  17E8  0874               	movf	?___lmul+3,w
 13549  17E9  0020               	movlb	0	; select bank0
 13550  17EA  00AB               	movwf	___aldiv@dividend+3
 13551  17EB  0873               	movf	?___lmul+2,w
 13552  17EC  00AA               	movwf	___aldiv@dividend+2
 13553  17ED  0872               	movf	?___lmul+1,w
 13554  17EE  00A9               	movwf	___aldiv@dividend+1
 13555  17EF  0871               	movf	?___lmul,w
 13556  17F0  00A8               	movwf	___aldiv@dividend
 13557  17F1  31A0  200C         	fcall	___aldiv
 13558  17F3  0022               	movlb	2	; select bank2
 13559  17F4  0866               	movf	_adcOffset^(0+256),w
 13560  17F5  0020               	movlb	0	; select bank0
 13561  17F6  0724               	addwf	?___aldiv,w
 13562  17F7  0023               	movlb	3	; select bank3
 13563  17F8  00A8               	movwf	(_cellVoltages^(0+384)+8)
 13564  17F9  0022               	movlb	2	; select bank2
 13565  17FA  0867               	movf	(_adcOffset+1)^(0+256),w
 13566  17FB  0020               	movlb	0	; select bank0
 13567  17FC  3D25               	addwfc	?___aldiv+1,w
 13568  17FD  0023               	movlb	3	; select bank3
 13569  17FE  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 13570  17FF  0008               	return
 13571  1800                     __end_of_updateVoltages:	
 13572                           
 13573                           	psect	text50
 13574  2961                     __ptext50:	
 13575 ;; *************** function ___lmul *****************
 13576 ;; Defined at:
 13577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13578 ;; Parameters:    Size  Location     Type
 13579 ;;  multiplier      4    1[COMMON] unsigned long 
 13580 ;;  multiplicand    4    5[COMMON] unsigned long 
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;  product         4    0[BANK0 ] unsigned long 
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  4    1[COMMON] unsigned long 
 13585 ;; Registers used:
 13586 ;;		wreg, status,2, status,0
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13595 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13596 ;;Total ram usage:       12 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:    1
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_setCellUndervoltageProtection
 13603 ;;		_setCellOvervoltageProtection
 13604 ;;		_updateVoltages
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           
 13609                           ;psect for function ___lmul
 13610  2961                     ___lmul:	
 13611                           
 13612                           ;incstack = 0
 13613                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13614  2961  3000               	movlw	0
 13615  2962  0020               	movlb	0	; select bank0
 13616  2963  00A3               	movwf	___lmul@product+3
 13617  2964  3000               	movlw	0
 13618  2965  00A2               	movwf	___lmul@product+2
 13619  2966  3000               	movlw	0
 13620  2967  00A1               	movwf	___lmul@product+1
 13621  2968  3000               	movlw	0
 13622  2969  00A0               	movwf	___lmul@product
 13623  296A                     l7731:	
 13624  296A  1C71               	btfss	___lmul@multiplier,0
 13625  296B  2975               	goto	l7735
 13626  296C  0875               	movf	___lmul@multiplicand,w
 13627  296D  0020               	movlb	0	; select bank0
 13628  296E  07A0               	addwf	___lmul@product,f
 13629  296F  0876               	movf	___lmul@multiplicand+1,w
 13630  2970  3DA1               	addwfc	___lmul@product+1,f
 13631  2971  0877               	movf	___lmul@multiplicand+2,w
 13632  2972  3DA2               	addwfc	___lmul@product+2,f
 13633  2973  0878               	movf	___lmul@multiplicand+3,w
 13634  2974  3DA3               	addwfc	___lmul@product+3,f
 13635  2975                     l7735:	
 13636  2975  3001               	movlw	1
 13637  2976                     u10755:	
 13638  2976  35F5               	lslf	___lmul@multiplicand,f
 13639  2977  0DF6               	rlf	___lmul@multiplicand+1,f
 13640  2978  0DF7               	rlf	___lmul@multiplicand+2,f
 13641  2979  0DF8               	rlf	___lmul@multiplicand+3,f
 13642  297A  0B89               	decfsz	9,f
 13643  297B  2976               	goto	u10755
 13644  297C  3001               	movlw	1
 13645  297D                     u10765:	
 13646  297D  36F4               	lsrf	___lmul@multiplier+3,f
 13647  297E  0CF3               	rrf	___lmul@multiplier+2,f
 13648  297F  0CF2               	rrf	___lmul@multiplier+1,f
 13649  2980  0CF1               	rrf	___lmul@multiplier,f
 13650  2981  0B89               	decfsz	9,f
 13651  2982  297D               	goto	u10765
 13652  2983  0874               	movf	___lmul@multiplier+3,w
 13653  2984  0473               	iorwf	___lmul@multiplier+2,w
 13654  2985  0472               	iorwf	___lmul@multiplier+1,w
 13655  2986  0471               	iorwf	___lmul@multiplier,w
 13656  2987  1D03               	skipz
 13657  2988  296A               	goto	l7731
 13658  2989  0020               	movlb	0	; select bank0
 13659  298A  0823               	movf	___lmul@product+3,w
 13660  298B  00F4               	movwf	?___lmul+3
 13661  298C  0822               	movf	___lmul@product+2,w
 13662  298D  00F3               	movwf	?___lmul+2
 13663  298E  0821               	movf	___lmul@product+1,w
 13664  298F  00F2               	movwf	?___lmul+1
 13665  2990  0820               	movf	___lmul@product,w
 13666  2991  00F1               	movwf	?___lmul
 13667  2992  0008               	return
 13668  2993                     __end_of___lmul:	
 13669                           
 13670                           	psect	text51
 13671  05F9                     __ptext51:	
 13672 ;; *************** function _updateTemperatures *****************
 13673 ;; Defined at:
 13674 ;;		line 245 in file "BQ76920.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;		None
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  rts             4   39[BANK1 ] unsigned long 
 13679 ;;  tmp             4   35[BANK1 ] float 
 13680 ;;  vtsx            2   45[BANK1 ] int 
 13681 ;;  adcVal          2   43[BANK1 ] int 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      void 
 13684 ;; Registers used:
 13685 ;;		wreg, status,2, status,0, pclath, cstack
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13692 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13693 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13694 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13695 ;;Total ram usage:       27 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:    4
 13698 ;; This function calls:
 13699 ;;		___fladd
 13700 ;;		___fldiv
 13701 ;;		___flmul
 13702 ;;		___flsub
 13703 ;;		___fltol
 13704 ;;		___xxtofl
 13705 ;;		_logf
 13706 ;;		_readRegister
 13707 ;; This function is called by:
 13708 ;;		_AFE_UPDATE
 13709 ;; This function uses a non-reentrant model
 13710 ;;
 13711                           
 13712                           
 13713                           ;psect for function _updateTemperatures
 13714  05F9                     _updateTemperatures:	
 13715                           
 13716                           ;BQ76920.c: 249:      unsigned long rts = 0;
 13717                           
 13718                           ;incstack = 0
 13719                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 13720  05F9  3000               	movlw	0
 13721  05FA  0021               	movlb	1	; select bank1
 13722  05FB  00CA               	movwf	(updateTemperatures@rts+3)^(0+128)
 13723  05FC  3000               	movlw	0
 13724  05FD  00C9               	movwf	(updateTemperatures@rts+2)^(0+128)
 13725  05FE  3000               	movlw	0
 13726  05FF  00C8               	movwf	(updateTemperatures@rts+1)^(0+128)
 13727  0600  3000               	movlw	0
 13728  0601  00C7               	movwf	updateTemperatures@rts^(0+128)
 13729                           
 13730                           ;BQ76920.c: 251:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 13731  0602  3018               	movlw	24
 13732  0603  00F5               	movwf	readRegister@slaveAddress
 13733  0604  3000               	movlw	0
 13734  0605  00F6               	movwf	readRegister@slaveAddress+1
 13735  0606  302C               	movlw	44
 13736  0607  00F7               	movwf	readRegister@regAddress
 13737  0608  3000               	movlw	0
 13738  0609  00F8               	movwf	readRegister@regAddress+1
 13739  060A  31A9  21FA  3185   	fcall	_readRegister
 13740  060D  303F               	movlw	63
 13741  060E  0575               	andwf	?_readRegister,w
 13742  060F  0021               	movlb	1	; select bank1
 13743  0610  00B4               	movwf	??_updateTemperatures^(0+128)
 13744  0611  3000               	movlw	0
 13745  0612  0576               	andwf	?_readRegister+1,w
 13746  0613  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 13747  0614  0834               	movf	??_updateTemperatures^(0+128),w
 13748  0615  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 13749  0616  01B4               	clrf	??_updateTemperatures^(0+128)
 13750  0617  3018               	movlw	24
 13751  0618  00F5               	movwf	readRegister@slaveAddress
 13752  0619  3000               	movlw	0
 13753  061A  00F6               	movwf	readRegister@slaveAddress+1
 13754  061B  302D               	movlw	45
 13755  061C  00F7               	movwf	readRegister@regAddress
 13756  061D  3000               	movlw	0
 13757  061E  00F8               	movwf	readRegister@regAddress+1
 13758  061F  31A9  21FA  3185   	fcall	_readRegister
 13759  0622  0875               	movf	?_readRegister,w
 13760  0623  0021               	movlb	1	; select bank1
 13761  0624  0434               	iorwf	??_updateTemperatures^(0+128),w
 13762  0625  00CB               	movwf	updateTemperatures@adcVal^(0+128)
 13763  0626  0876               	movf	?_readRegister+1,w
 13764  0627  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 13765  0628  00CC               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 13766                           
 13767                           ;BQ76920.c: 252:      vtsx = adcVal * 0.382;
 13768  0629  084B               	movf	updateTemperatures@adcVal^(0+128),w
 13769  062A  00F1               	movwf	___xxtofl@val
 13770  062B  084C               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 13771  062C  00F2               	movwf	___xxtofl@val+1
 13772  062D  0D89               	rlf	9,f
 13773  062E  3B89               	subwfb	9,f
 13774  062F  0989               	comf	9,f
 13775  0630  00F3               	movwf	___xxtofl@val+2
 13776  0631  00F4               	movwf	___xxtofl@val+3
 13777  0632  3001               	movlw	1
 13778  0633  31AE  26C9  3185   	fcall	___xxtofl
 13779  0636  0874               	movf	?___xxtofl+3,w
 13780  0637  0020               	movlb	0	; select bank0
 13781  0638  00AD               	movwf	___flmul@a+3
 13782  0639  0873               	movf	?___xxtofl+2,w
 13783  063A  00AC               	movwf	___flmul@a+2
 13784  063B  0872               	movf	?___xxtofl+1,w
 13785  063C  00AB               	movwf	___flmul@a+1
 13786  063D  0871               	movf	?___xxtofl,w
 13787  063E  00AA               	movwf	___flmul@a
 13788  063F  303E               	movlw	62
 13789  0640  00A9               	movwf	___flmul@b+3
 13790  0641  30C3               	movlw	195
 13791  0642  00A8               	movwf	___flmul@b+2
 13792  0643  3095               	movlw	149
 13793  0644  00A7               	movwf	___flmul@b+1
 13794  0645  3081               	movlw	129
 13795  0646  00A6               	movwf	___flmul@b
 13796  0647  3192  22FC  3185   	fcall	___flmul
 13797  064A  0020               	movlb	0	; select bank0
 13798  064B  0829               	movf	?___flmul+3,w
 13799  064C  0021               	movlb	1	; select bank1
 13800  064D  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13801  064E  0020               	movlb	0	; select bank0
 13802  064F  0828               	movf	?___flmul+2,w
 13803  0650  0021               	movlb	1	; select bank1
 13804  0651  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13805  0652  0020               	movlb	0	; select bank0
 13806  0653  0827               	movf	?___flmul+1,w
 13807  0654  0021               	movlb	1	; select bank1
 13808  0655  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13809  0656  0020               	movlb	0	; select bank0
 13810  0657  0826               	movf	?___flmul,w
 13811  0658  0021               	movlb	1	; select bank1
 13812  0659  00A8               	movwf	___fltol@f1^(0+128)
 13813  065A  31AC  241E  3185   	fcall	___fltol
 13814  065D  0021               	movlb	1	; select bank1
 13815  065E  0829               	movf	(?___fltol+1)^(0+128),w
 13816  065F  00CE               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 13817  0660  0828               	movf	?___fltol^(0+128),w
 13818  0661  00CD               	movwf	updateTemperatures@vtsx^(0+128)
 13819                           
 13820                           ;BQ76920.c: 253:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 13821  0662  084D               	movf	updateTemperatures@vtsx^(0+128),w
 13822  0663  00F1               	movwf	___xxtofl@val
 13823  0664  084E               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 13824  0665  00F2               	movwf	___xxtofl@val+1
 13825  0666  0D89               	rlf	9,f
 13826  0667  3B89               	subwfb	9,f
 13827  0668  0989               	comf	9,f
 13828  0669  00F3               	movwf	___xxtofl@val+2
 13829  066A  00F4               	movwf	___xxtofl@val+3
 13830  066B  3001               	movlw	1
 13831  066C  31AE  26C9  3185   	fcall	___xxtofl
 13832  066F  0874               	movf	?___xxtofl+3,w
 13833  0670  0020               	movlb	0	; select bank0
 13834  0671  00AD               	movwf	___flmul@a+3
 13835  0672  0873               	movf	?___xxtofl+2,w
 13836  0673  00AC               	movwf	___flmul@a+2
 13837  0674  0872               	movf	?___xxtofl+1,w
 13838  0675  00AB               	movwf	___flmul@a+1
 13839  0676  0871               	movf	?___xxtofl,w
 13840  0677  00AA               	movwf	___flmul@a
 13841  0678  3046               	movlw	70
 13842  0679  00A9               	movwf	___flmul@b+3
 13843  067A  301C               	movlw	28
 13844  067B  00A8               	movwf	___flmul@b+2
 13845  067C  3040               	movlw	64
 13846  067D  00A7               	movwf	___flmul@b+1
 13847  067E  3000               	movlw	0
 13848  067F  00A6               	movwf	___flmul@b
 13849  0680  3192  22FC  3185   	fcall	___flmul
 13850  0683  0020               	movlb	0	; select bank0
 13851  0684  0829               	movf	?___flmul+3,w
 13852  0685  00C7               	movwf	___fldiv@b+3
 13853  0686  0828               	movf	?___flmul+2,w
 13854  0687  00C6               	movwf	___fldiv@b+2
 13855  0688  0827               	movf	?___flmul+1,w
 13856  0689  00C5               	movwf	___fldiv@b+1
 13857  068A  0826               	movf	?___flmul,w
 13858  068B  00C4               	movwf	___fldiv@b
 13859  068C  3045               	movlw	69
 13860  068D  0021               	movlb	1	; select bank1
 13861  068E  00A7               	movwf	(___flsub@b+3)^(0+128)
 13862  068F  304E               	movlw	78
 13863  0690  00A6               	movwf	(___flsub@b+2)^(0+128)
 13864  0691  3040               	movlw	64
 13865  0692  00A5               	movwf	(___flsub@b+1)^(0+128)
 13866  0693  3000               	movlw	0
 13867  0694  00A4               	movwf	___flsub@b^(0+128)
 13868  0695  084D               	movf	updateTemperatures@vtsx^(0+128),w
 13869  0696  00F1               	movwf	___xxtofl@val
 13870  0697  084E               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 13871  0698  00F2               	movwf	___xxtofl@val+1
 13872  0699  0D89               	rlf	9,f
 13873  069A  3B89               	subwfb	9,f
 13874  069B  0989               	comf	9,f
 13875  069C  00F3               	movwf	___xxtofl@val+2
 13876  069D  00F4               	movwf	___xxtofl@val+3
 13877  069E  3001               	movlw	1
 13878  069F  31AE  26C9  3185   	fcall	___xxtofl
 13879  06A2  0874               	movf	?___xxtofl+3,w
 13880  06A3  0021               	movlb	1	; select bank1
 13881  06A4  00A3               	movwf	(___flsub@a+3)^(0+128)
 13882  06A5  0873               	movf	?___xxtofl+2,w
 13883  06A6  00A2               	movwf	(___flsub@a+2)^(0+128)
 13884  06A7  0872               	movf	?___xxtofl+1,w
 13885  06A8  00A1               	movwf	(___flsub@a+1)^(0+128)
 13886  06A9  0871               	movf	?___xxtofl,w
 13887  06AA  00A0               	movwf	___flsub@a^(0+128)
 13888  06AB  31A9  21C5  3185   	fcall	___flsub
 13889  06AE  0021               	movlb	1	; select bank1
 13890  06AF  0823               	movf	(?___flsub+3)^(0+128),w
 13891  06B0  0020               	movlb	0	; select bank0
 13892  06B1  00C3               	movwf	___fldiv@a+3
 13893  06B2  0021               	movlb	1	; select bank1
 13894  06B3  0822               	movf	(?___flsub+2)^(0+128),w
 13895  06B4  0020               	movlb	0	; select bank0
 13896  06B5  00C2               	movwf	___fldiv@a+2
 13897  06B6  0021               	movlb	1	; select bank1
 13898  06B7  0821               	movf	(?___flsub+1)^(0+128),w
 13899  06B8  0020               	movlb	0	; select bank0
 13900  06B9  00C1               	movwf	___fldiv@a+1
 13901  06BA  0021               	movlb	1	; select bank1
 13902  06BB  0820               	movf	?___flsub^(0+128),w
 13903  06BC  0020               	movlb	0	; select bank0
 13904  06BD  00C0               	movwf	___fldiv@a
 13905  06BE  319C  24E1  3185   	fcall	___fldiv
 13906  06C1  0020               	movlb	0	; select bank0
 13907  06C2  0843               	movf	?___fldiv+3,w
 13908  06C3  0021               	movlb	1	; select bank1
 13909  06C4  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13910  06C5  0020               	movlb	0	; select bank0
 13911  06C6  0842               	movf	?___fldiv+2,w
 13912  06C7  0021               	movlb	1	; select bank1
 13913  06C8  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13914  06C9  0020               	movlb	0	; select bank0
 13915  06CA  0841               	movf	?___fldiv+1,w
 13916  06CB  0021               	movlb	1	; select bank1
 13917  06CC  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13918  06CD  0020               	movlb	0	; select bank0
 13919  06CE  0840               	movf	?___fldiv,w
 13920  06CF  0021               	movlb	1	; select bank1
 13921  06D0  00A8               	movwf	___fltol@f1^(0+128)
 13922  06D1  31AC  241E  3185   	fcall	___fltol
 13923  06D4  0021               	movlb	1	; select bank1
 13924  06D5  082B               	movf	(?___fltol+3)^(0+128),w
 13925  06D6  00CA               	movwf	(updateTemperatures@rts+3)^(0+128)
 13926  06D7  082A               	movf	(?___fltol+2)^(0+128),w
 13927  06D8  00C9               	movwf	(updateTemperatures@rts+2)^(0+128)
 13928  06D9  0829               	movf	(?___fltol+1)^(0+128),w
 13929  06DA  00C8               	movwf	(updateTemperatures@rts+1)^(0+128)
 13930  06DB  0828               	movf	?___fltol^(0+128),w
 13931  06DC  00C7               	movwf	updateTemperatures@rts^(0+128)
 13932                           
 13933                           ;BQ76920.c: 257:      tmp = 1.0/(1.0/(273.15+25) + 1.0/thermistorBetaValue*logf(rts/1000
      +                          0.0));
 13934  06DD  3046               	movlw	70
 13935  06DE  0020               	movlb	0	; select bank0
 13936  06DF  00C3               	movwf	___fldiv@a+3
 13937  06E0  301C               	movlw	28
 13938  06E1  00C2               	movwf	___fldiv@a+2
 13939  06E2  3040               	movlw	64
 13940  06E3  00C1               	movwf	___fldiv@a+1
 13941  06E4  3000               	movlw	0
 13942  06E5  00C0               	movwf	___fldiv@a
 13943  06E6  0021               	movlb	1	; select bank1
 13944  06E7  084A               	movf	(updateTemperatures@rts+3)^(0+128),w
 13945  06E8  00F4               	movwf	___xxtofl@val+3
 13946  06E9  0849               	movf	(updateTemperatures@rts+2)^(0+128),w
 13947  06EA  00F3               	movwf	___xxtofl@val+2
 13948  06EB  0848               	movf	(updateTemperatures@rts+1)^(0+128),w
 13949  06EC  00F2               	movwf	___xxtofl@val+1
 13950  06ED  0847               	movf	updateTemperatures@rts^(0+128),w
 13951  06EE  00F1               	movwf	___xxtofl@val
 13952  06EF  3000               	movlw	0
 13953  06F0  31AE  26C9  3185   	fcall	___xxtofl
 13954  06F3  0874               	movf	?___xxtofl+3,w
 13955  06F4  0020               	movlb	0	; select bank0
 13956  06F5  00C7               	movwf	___fldiv@b+3
 13957  06F6  0873               	movf	?___xxtofl+2,w
 13958  06F7  00C6               	movwf	___fldiv@b+2
 13959  06F8  0872               	movf	?___xxtofl+1,w
 13960  06F9  00C5               	movwf	___fldiv@b+1
 13961  06FA  0871               	movf	?___xxtofl,w
 13962  06FB  00C4               	movwf	___fldiv@b
 13963  06FC  319C  24E1  3185   	fcall	___fldiv
 13964  06FF  0020               	movlb	0	; select bank0
 13965  0700  0843               	movf	?___fldiv+3,w
 13966  0701  0021               	movlb	1	; select bank1
 13967  0702  00BA               	movwf	(_updateTemperatures$2026+3)^(0+128)
 13968  0703  0020               	movlb	0	; select bank0
 13969  0704  0842               	movf	?___fldiv+2,w
 13970  0705  0021               	movlb	1	; select bank1
 13971  0706  00B9               	movwf	(_updateTemperatures$2026+2)^(0+128)
 13972  0707  0020               	movlb	0	; select bank0
 13973  0708  0841               	movf	?___fldiv+1,w
 13974  0709  0021               	movlb	1	; select bank1
 13975  070A  00B8               	movwf	(_updateTemperatures$2026+1)^(0+128)
 13976  070B  0020               	movlb	0	; select bank0
 13977  070C  0840               	movf	?___fldiv,w
 13978  070D  0021               	movlb	1	; select bank1
 13979  070E  00B7               	movwf	_updateTemperatures$2026^(0+128)
 13980                           
 13981                           ;BQ76920.c: 257:      tmp = 1.0/(1.0/(273.15+25) + 1.0/thermistorBetaValue*logf(rts/1000
      +                          0.0));
 13982  070F  083A               	movf	(_updateTemperatures$2026+3)^(0+128),w
 13983  0710  00AB               	movwf	(logf@x+3)^(0+128)
 13984  0711  0839               	movf	(_updateTemperatures$2026+2)^(0+128),w
 13985  0712  00AA               	movwf	(logf@x+2)^(0+128)
 13986  0713  0838               	movf	(_updateTemperatures$2026+1)^(0+128),w
 13987  0714  00A9               	movwf	(logf@x+1)^(0+128)
 13988  0715  0837               	movf	_updateTemperatures$2026^(0+128),w
 13989  0716  00A8               	movwf	logf@x^(0+128)
 13990  0717  3180  206F  3185   	fcall	_logf
 13991  071A  0021               	movlb	1	; select bank1
 13992  071B  082B               	movf	(?_logf+3)^(0+128),w
 13993  071C  00BE               	movwf	(_updateTemperatures$2027+3)^(0+128)
 13994  071D  082A               	movf	(?_logf+2)^(0+128),w
 13995  071E  00BD               	movwf	(_updateTemperatures$2027+2)^(0+128)
 13996  071F  0829               	movf	(?_logf+1)^(0+128),w
 13997  0720  00BC               	movwf	(_updateTemperatures$2027+1)^(0+128)
 13998  0721  0828               	movf	?_logf^(0+128),w
 13999  0722  00BB               	movwf	_updateTemperatures$2027^(0+128)
 14000                           
 14001                           ;BQ76920.c: 257:      tmp = 1.0/(1.0/(273.15+25) + 1.0/thermistorBetaValue*logf(rts/1000
      +                          0.0));
 14002  0723  303B               	movlw	59
 14003  0724  0020               	movlb	0	; select bank0
 14004  0725  00DD               	movwf	___fladd@b+3
 14005  0726  305B               	movlw	91
 14006  0727  00DC               	movwf	___fladd@b+2
 14007  0728  30CF               	movlw	207
 14008  0729  00DB               	movwf	___fladd@b+1
 14009  072A  300F               	movlw	15
 14010  072B  00DA               	movwf	___fladd@b
 14011  072C  0021               	movlb	1	; select bank1
 14012  072D  083E               	movf	(_updateTemperatures$2027+3)^(0+128),w
 14013  072E  0020               	movlb	0	; select bank0
 14014  072F  00A9               	movwf	___flmul@b+3
 14015  0730  0021               	movlb	1	; select bank1
 14016  0731  083D               	movf	(_updateTemperatures$2027+2)^(0+128),w
 14017  0732  0020               	movlb	0	; select bank0
 14018  0733  00A8               	movwf	___flmul@b+2
 14019  0734  0021               	movlb	1	; select bank1
 14020  0735  083C               	movf	(_updateTemperatures$2027+1)^(0+128),w
 14021  0736  0020               	movlb	0	; select bank0
 14022  0737  00A7               	movwf	___flmul@b+1
 14023  0738  0021               	movlb	1	; select bank1
 14024  0739  083B               	movf	_updateTemperatures$2027^(0+128),w
 14025  073A  0020               	movlb	0	; select bank0
 14026  073B  00A6               	movwf	___flmul@b
 14027  073C  0023               	movlb	3	; select bank3
 14028  073D  0857               	movf	_thermistorBetaValue^(0+384),w
 14029  073E  00F1               	movwf	___xxtofl@val
 14030  073F  0858               	movf	(_thermistorBetaValue+1)^(0+384),w
 14031  0740  00F2               	movwf	___xxtofl@val+1
 14032  0741  0D89               	rlf	9,f
 14033  0742  3B89               	subwfb	9,f
 14034  0743  0989               	comf	9,f
 14035  0744  00F3               	movwf	___xxtofl@val+2
 14036  0745  00F4               	movwf	___xxtofl@val+3
 14037  0746  3001               	movlw	1
 14038  0747  31AE  26C9  3185   	fcall	___xxtofl
 14039  074A  0874               	movf	?___xxtofl+3,w
 14040  074B  0020               	movlb	0	; select bank0
 14041  074C  00C3               	movwf	___fldiv@a+3
 14042  074D  0873               	movf	?___xxtofl+2,w
 14043  074E  00C2               	movwf	___fldiv@a+2
 14044  074F  0872               	movf	?___xxtofl+1,w
 14045  0750  00C1               	movwf	___fldiv@a+1
 14046  0751  0871               	movf	?___xxtofl,w
 14047  0752  00C0               	movwf	___fldiv@a
 14048  0753  303F               	movlw	63
 14049  0754  00C7               	movwf	___fldiv@b+3
 14050  0755  3080               	movlw	128
 14051  0756  00C6               	movwf	___fldiv@b+2
 14052  0757  3000               	movlw	0
 14053  0758  00C5               	movwf	___fldiv@b+1
 14054  0759  3000               	movlw	0
 14055  075A  00C4               	movwf	___fldiv@b
 14056  075B  319C  24E1  3185   	fcall	___fldiv
 14057  075E  0020               	movlb	0	; select bank0
 14058  075F  0843               	movf	?___fldiv+3,w
 14059  0760  00AD               	movwf	___flmul@a+3
 14060  0761  0842               	movf	?___fldiv+2,w
 14061  0762  00AC               	movwf	___flmul@a+2
 14062  0763  0841               	movf	?___fldiv+1,w
 14063  0764  00AB               	movwf	___flmul@a+1
 14064  0765  0840               	movf	?___fldiv,w
 14065  0766  00AA               	movwf	___flmul@a
 14066  0767  3192  22FC  3185   	fcall	___flmul
 14067  076A  0020               	movlb	0	; select bank0
 14068  076B  0829               	movf	?___flmul+3,w
 14069  076C  00E1               	movwf	___fladd@a+3
 14070  076D  0828               	movf	?___flmul+2,w
 14071  076E  00E0               	movwf	___fladd@a+2
 14072  076F  0827               	movf	?___flmul+1,w
 14073  0770  00DF               	movwf	___fladd@a+1
 14074  0771  0826               	movf	?___flmul,w
 14075  0772  00DE               	movwf	___fladd@a
 14076  0773  3191  211A  3185   	fcall	___fladd
 14077  0776  0020               	movlb	0	; select bank0
 14078  0777  085D               	movf	?___fladd+3,w
 14079  0778  0021               	movlb	1	; select bank1
 14080  0779  00C2               	movwf	(_updateTemperatures$2028+3)^(0+128)
 14081  077A  0020               	movlb	0	; select bank0
 14082  077B  085C               	movf	?___fladd+2,w
 14083  077C  0021               	movlb	1	; select bank1
 14084  077D  00C1               	movwf	(_updateTemperatures$2028+2)^(0+128)
 14085  077E  0020               	movlb	0	; select bank0
 14086  077F  085B               	movf	?___fladd+1,w
 14087  0780  0021               	movlb	1	; select bank1
 14088  0781  00C0               	movwf	(_updateTemperatures$2028+1)^(0+128)
 14089  0782  0020               	movlb	0	; select bank0
 14090  0783  085A               	movf	?___fladd,w
 14091  0784  0021               	movlb	1	; select bank1
 14092  0785  00BF               	movwf	_updateTemperatures$2028^(0+128)
 14093                           
 14094                           ;BQ76920.c: 257:      tmp = 1.0/(1.0/(273.15+25) + 1.0/thermistorBetaValue*logf(rts/1000
      +                          0.0));
 14095  0786  0842               	movf	(_updateTemperatures$2028+3)^(0+128),w
 14096  0787  0020               	movlb	0	; select bank0
 14097  0788  00C3               	movwf	___fldiv@a+3
 14098  0789  0021               	movlb	1	; select bank1
 14099  078A  0841               	movf	(_updateTemperatures$2028+2)^(0+128),w
 14100  078B  0020               	movlb	0	; select bank0
 14101  078C  00C2               	movwf	___fldiv@a+2
 14102  078D  0021               	movlb	1	; select bank1
 14103  078E  0840               	movf	(_updateTemperatures$2028+1)^(0+128),w
 14104  078F  0020               	movlb	0	; select bank0
 14105  0790  00C1               	movwf	___fldiv@a+1
 14106  0791  0021               	movlb	1	; select bank1
 14107  0792  083F               	movf	_updateTemperatures$2028^(0+128),w
 14108  0793  0020               	movlb	0	; select bank0
 14109  0794  00C0               	movwf	___fldiv@a
 14110  0795  303F               	movlw	63
 14111  0796  00C7               	movwf	___fldiv@b+3
 14112  0797  3080               	movlw	128
 14113  0798  00C6               	movwf	___fldiv@b+2
 14114  0799  3000               	movlw	0
 14115  079A  00C5               	movwf	___fldiv@b+1
 14116  079B  3000               	movlw	0
 14117  079C  00C4               	movwf	___fldiv@b
 14118  079D  319C  24E1  3185   	fcall	___fldiv
 14119  07A0  0020               	movlb	0	; select bank0
 14120  07A1  0843               	movf	?___fldiv+3,w
 14121  07A2  0021               	movlb	1	; select bank1
 14122  07A3  00C6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14123  07A4  0020               	movlb	0	; select bank0
 14124  07A5  0842               	movf	?___fldiv+2,w
 14125  07A6  0021               	movlb	1	; select bank1
 14126  07A7  00C5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14127  07A8  0020               	movlb	0	; select bank0
 14128  07A9  0841               	movf	?___fldiv+1,w
 14129  07AA  0021               	movlb	1	; select bank1
 14130  07AB  00C4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14131  07AC  0020               	movlb	0	; select bank0
 14132  07AD  0840               	movf	?___fldiv,w
 14133  07AE  0021               	movlb	1	; select bank1
 14134  07AF  00C3               	movwf	updateTemperatures@tmp^(0+128)
 14135                           
 14136                           ;BQ76920.c: 258:      temperatureThermistor = (tmp - 273.15) * 10.0;
 14137  07B0  0846               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14138  07B1  0020               	movlb	0	; select bank0
 14139  07B2  00E1               	movwf	___fladd@a+3
 14140  07B3  0021               	movlb	1	; select bank1
 14141  07B4  0845               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14142  07B5  0020               	movlb	0	; select bank0
 14143  07B6  00E0               	movwf	___fladd@a+2
 14144  07B7  0021               	movlb	1	; select bank1
 14145  07B8  0844               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14146  07B9  0020               	movlb	0	; select bank0
 14147  07BA  00DF               	movwf	___fladd@a+1
 14148  07BB  0021               	movlb	1	; select bank1
 14149  07BC  0843               	movf	updateTemperatures@tmp^(0+128),w
 14150  07BD  0020               	movlb	0	; select bank0
 14151  07BE  00DE               	movwf	___fladd@a
 14152  07BF  30C3               	movlw	195
 14153  07C0  00DD               	movwf	___fladd@b+3
 14154  07C1  3088               	movlw	136
 14155  07C2  00DC               	movwf	___fladd@b+2
 14156  07C3  3093               	movlw	147
 14157  07C4  00DB               	movwf	___fladd@b+1
 14158  07C5  3033               	movlw	51
 14159  07C6  00DA               	movwf	___fladd@b
 14160  07C7  3191  211A  3185   	fcall	___fladd
 14161  07CA  0020               	movlb	0	; select bank0
 14162  07CB  085D               	movf	?___fladd+3,w
 14163  07CC  00AD               	movwf	___flmul@a+3
 14164  07CD  085C               	movf	?___fladd+2,w
 14165  07CE  00AC               	movwf	___flmul@a+2
 14166  07CF  085B               	movf	?___fladd+1,w
 14167  07D0  00AB               	movwf	___flmul@a+1
 14168  07D1  085A               	movf	?___fladd,w
 14169  07D2  00AA               	movwf	___flmul@a
 14170  07D3  3041               	movlw	65
 14171  07D4  00A9               	movwf	___flmul@b+3
 14172  07D5  3020               	movlw	32
 14173  07D6  00A8               	movwf	___flmul@b+2
 14174  07D7  3000               	movlw	0
 14175  07D8  00A7               	movwf	___flmul@b+1
 14176  07D9  3000               	movlw	0
 14177  07DA  00A6               	movwf	___flmul@b
 14178  07DB  3192  22FC  3185   	fcall	___flmul
 14179  07DE  0020               	movlb	0	; select bank0
 14180  07DF  0829               	movf	?___flmul+3,w
 14181  07E0  0021               	movlb	1	; select bank1
 14182  07E1  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14183  07E2  0020               	movlb	0	; select bank0
 14184  07E3  0828               	movf	?___flmul+2,w
 14185  07E4  0021               	movlb	1	; select bank1
 14186  07E5  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14187  07E6  0020               	movlb	0	; select bank0
 14188  07E7  0827               	movf	?___flmul+1,w
 14189  07E8  0021               	movlb	1	; select bank1
 14190  07E9  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14191  07EA  0020               	movlb	0	; select bank0
 14192  07EB  0826               	movf	?___flmul,w
 14193  07EC  0021               	movlb	1	; select bank1
 14194  07ED  00A8               	movwf	___fltol@f1^(0+128)
 14195  07EE  31AC  241E         	fcall	___fltol
 14196  07F0  0021               	movlb	1	; select bank1
 14197  07F1  0829               	movf	(?___fltol+1)^(0+128),w
 14198  07F2  0023               	movlb	3	; select bank3
 14199  07F3  00C1               	movwf	(_temperatureThermistor+1)^(0+384)
 14200  07F4  0021               	movlb	1	; select bank1
 14201  07F5  0828               	movf	?___fltol^(0+128),w
 14202  07F6  0023               	movlb	3	; select bank3
 14203  07F7  00C0               	movwf	_temperatureThermistor^(0+384)
 14204  07F8  0008               	return
 14205  07F9                     __end_of_updateTemperatures:	
 14206                           
 14207                           	psect	text52
 14208  29FA                     __ptext52:	
 14209 ;; *************** function _readRegister *****************
 14210 ;; Defined at:
 14211 ;;		line 115 in file "I2C.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;  slaveAddress    2    5[COMMON] int 
 14214 ;;  regAddress      2    7[COMMON] int 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  recievedData    2    9[COMMON] int 
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  2    5[COMMON] int 
 14219 ;; Registers used:
 14220 ;;		wreg, status,2, status,0, pclath, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14230 ;;Total ram usage:        6 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; Hardware stack levels required when called:    2
 14233 ;; This function calls:
 14234 ;;		_read_I2C_data
 14235 ;;		_send_I2C_NACK
 14236 ;;		_send_I2C_controlByte
 14237 ;;		_send_I2C_data
 14238 ;;		_send_I2C_startBit
 14239 ;;		_send_I2C_stopBit
 14240 ;; This function is called by:
 14241 ;;		_beginAFEcommunication
 14242 ;;		_setCellUndervoltageProtection
 14243 ;;		_setCellOvervoltageProtection
 14244 ;;		_updateVoltages
 14245 ;;		_updateTemperatures
 14246 ;;		_updateCurrent
 14247 ;;		_printotAFERegisters
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           
 14252                           ;psect for function _readRegister
 14253  29FA                     _readRegister:	
 14254                           
 14255                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 14256                           
 14257                           ;incstack = 0
 14258                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 14259  29FA  31B6  26D6  31A9   	fcall	_send_I2C_startBit
 14260                           
 14261                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 14262  29FD  0876               	movf	readRegister@slaveAddress+1,w
 14263  29FE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 14264  29FF  0875               	movf	readRegister@slaveAddress,w
 14265  2A00  00F1               	movwf	send_I2C_controlByte@BlockAddress
 14266  2A01  3000               	movlw	0
 14267  2A02  00F3               	movwf	send_I2C_controlByte@RW_bit
 14268  2A03  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 14269  2A04  31B7  2701  31A9   	fcall	_send_I2C_controlByte
 14270                           
 14271                           ;I2C.c: 119:     send_I2C_data(regAddress);
 14272  2A07  0878               	movf	readRegister@regAddress+1,w
 14273  2A08  00F2               	movwf	send_I2C_data@databyte+1
 14274  2A09  0877               	movf	readRegister@regAddress,w
 14275  2A0A  00F1               	movwf	send_I2C_data@databyte
 14276  2A0B  31B6  26F8  31A9   	fcall	_send_I2C_data
 14277                           
 14278                           ;I2C.c: 120:     send_I2C_stopBit();
 14279  2A0E  31B6  26DE  31A9   	fcall	_send_I2C_stopBit
 14280                           
 14281                           ;I2C.c: 121:     send_I2C_startBit();
 14282  2A11  31B6  26D6  31A9   	fcall	_send_I2C_startBit
 14283                           
 14284                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 14285  2A14  0876               	movf	readRegister@slaveAddress+1,w
 14286  2A15  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 14287  2A16  0875               	movf	readRegister@slaveAddress,w
 14288  2A17  00F1               	movwf	send_I2C_controlByte@BlockAddress
 14289  2A18  3001               	movlw	1
 14290  2A19  00F3               	movwf	send_I2C_controlByte@RW_bit
 14291  2A1A  3000               	movlw	0
 14292  2A1B  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 14293  2A1C  31B7  2701  31A9   	fcall	_send_I2C_controlByte
 14294                           
 14295                           ;I2C.c: 123:     recievedData = read_I2C_data();
 14296  2A1F  31B7  2730  31A9   	fcall	_read_I2C_data
 14297  2A22  0872               	movf	?_read_I2C_data+1,w
 14298  2A23  00FA               	movwf	readRegister@recievedData+1
 14299  2A24  0871               	movf	?_read_I2C_data,w
 14300  2A25  00F9               	movwf	readRegister@recievedData
 14301                           
 14302                           ;I2C.c: 124:     send_I2C_NACK();
 14303  2A26  31B6  26EF  31A9   	fcall	_send_I2C_NACK
 14304                           
 14305                           ;I2C.c: 125:     send_I2C_stopBit();
 14306  2A29  31B6  26DE         	fcall	_send_I2C_stopBit
 14307                           
 14308                           ;I2C.c: 126:     return recievedData;
 14309  2A2B  087A               	movf	readRegister@recievedData+1,w
 14310  2A2C  00F6               	movwf	?_readRegister+1
 14311  2A2D  0879               	movf	readRegister@recievedData,w
 14312  2A2E  00F5               	movwf	?_readRegister
 14313  2A2F  0008               	return
 14314  2A30                     __end_of_readRegister:	
 14315                           
 14316                           	psect	text53
 14317  36DE                     __ptext53:	
 14318 ;; *************** function _send_I2C_stopBit *****************
 14319 ;; Defined at:
 14320 ;;		line 78 in file "I2C.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;		None
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;		None
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		None
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14338 ;;Total ram usage:        0 bytes
 14339 ;; Hardware stack levels used:    1
 14340 ;; Hardware stack levels required when called:    1
 14341 ;; This function calls:
 14342 ;;		Nothing
 14343 ;; This function is called by:
 14344 ;;		_I2C_writeRegister
 14345 ;;		_readRegister
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           
 14350                           ;psect for function _send_I2C_stopBit
 14351  36DE                     _send_I2C_stopBit:	
 14352                           
 14353                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 14354                           
 14355                           ;incstack = 0
 14356                           ; Regs used in _send_I2C_stopBit: []
 14357  36DE  0020               	movlb	0	; select bank0
 14358  36DF  1191               	bcf	17,3	;volatile
 14359                           
 14360                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 14361  36E0  0024               	movlb	4	; select bank4
 14362  36E1  1516               	bsf	22,2	;volatile
 14363  36E2                     l303:	
 14364                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 14365                           
 14366  36E2  0020               	movlb	0	; select bank0
 14367  36E3  1991               	btfsc	17,3	;volatile
 14368  36E4  0008               	return
 14369  36E5  2EE2               	goto	l303
 14370  36E6                     __end_of_send_I2C_stopBit:	
 14371                           
 14372                           	psect	text54
 14373  36D6                     __ptext54:	
 14374 ;; *************** function _send_I2C_startBit *****************
 14375 ;; Defined at:
 14376 ;;		line 65 in file "I2C.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;		None
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;		None
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      void 
 14383 ;; Registers used:
 14384 ;;		None
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14394 ;;Total ram usage:        0 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:    1
 14397 ;; This function calls:
 14398 ;;		Nothing
 14399 ;; This function is called by:
 14400 ;;		_I2C_writeRegister
 14401 ;;		_readRegister
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           
 14406                           ;psect for function _send_I2C_startBit
 14407  36D6                     _send_I2C_startBit:	
 14408                           
 14409                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 14410                           
 14411                           ;incstack = 0
 14412                           ; Regs used in _send_I2C_startBit: []
 14413  36D6  0020               	movlb	0	; select bank0
 14414  36D7  1191               	bcf	17,3	;volatile
 14415                           
 14416                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 14417  36D8  0024               	movlb	4	; select bank4
 14418  36D9  1416               	bsf	22,0	;volatile
 14419  36DA                     l291:	
 14420                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 14421                           
 14422  36DA  0020               	movlb	0	; select bank0
 14423  36DB  1991               	btfsc	17,3	;volatile
 14424  36DC  0008               	return
 14425  36DD  2EDA               	goto	l291
 14426  36DE                     __end_of_send_I2C_startBit:	
 14427                           
 14428                           	psect	text55
 14429  36F8                     __ptext55:	
 14430 ;; *************** function _send_I2C_data *****************
 14431 ;; Defined at:
 14432 ;;		line 33 in file "I2C.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  databyte        2    1[COMMON] unsigned int 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;		None
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      void 
 14439 ;; Registers used:
 14440 ;;		wreg
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14450 ;;Total ram usage:        2 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    1
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_I2C_writeRegister
 14457 ;;		_readRegister
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           
 14462                           ;psect for function _send_I2C_data
 14463  36F8                     _send_I2C_data:	
 14464                           
 14465                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 14466                           
 14467                           ;incstack = 0
 14468                           ; Regs used in _send_I2C_data: [wreg]
 14469  36F8  0020               	movlb	0	; select bank0
 14470  36F9  1191               	bcf	17,3	;volatile
 14471                           
 14472                           ;I2C.c: 35:     SSPBUF = databyte;
 14473  36FA  0871               	movf	send_I2C_data@databyte,w
 14474  36FB  0024               	movlb	4	; select bank4
 14475  36FC  0091               	movwf	17	;volatile
 14476  36FD                     l273:	
 14477                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 14478                           
 14479  36FD  0020               	movlb	0	; select bank0
 14480  36FE  1991               	btfsc	17,3	;volatile
 14481  36FF  0008               	return
 14482  3700  2EFD               	goto	l273
 14483  3701                     __end_of_send_I2C_data:	
 14484                           
 14485                           	psect	text56
 14486  3701                     __ptext56:	
 14487 ;; *************** function _send_I2C_controlByte *****************
 14488 ;; Defined at:
 14489 ;;		line 53 in file "I2C.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  BlockAddress    2    1[COMMON] unsigned int 
 14492 ;;  RW_bit          2    3[COMMON] unsigned int 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1    wreg      void 
 14497 ;; Registers used:
 14498 ;;		wreg, status,2, status,0
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14508 ;;Total ram usage:        4 bytes
 14509 ;; Hardware stack levels used:    1
 14510 ;; Hardware stack levels required when called:    1
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_I2C_writeRegister
 14515 ;;		_readRegister
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           
 14520                           ;psect for function _send_I2C_controlByte
 14521  3701                     _send_I2C_controlByte:	
 14522                           
 14523                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 14524                           
 14525                           ;incstack = 0
 14526                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 14527  3701  0020               	movlb	0	; select bank0
 14528  3702  1191               	bcf	17,3	;volatile
 14529                           
 14530                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 14531  3703  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 14532  3704  0773               	addwf	send_I2C_controlByte@RW_bit,w
 14533  3705  0024               	movlb	4	; select bank4
 14534  3706  0091               	movwf	17	;volatile
 14535  3707                     l285:	
 14536                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 14537                           
 14538  3707  0020               	movlb	0	; select bank0
 14539  3708  1991               	btfsc	17,3	;volatile
 14540  3709  0008               	return
 14541  370A  2F07               	goto	l285
 14542  370B                     __end_of_send_I2C_controlByte:	
 14543                           
 14544                           	psect	text57
 14545  36EF                     __ptext57:	
 14546 ;; *************** function _send_I2C_NACK *****************
 14547 ;; Defined at:
 14548 ;;		line 91 in file "I2C.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;		None
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;		None
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  1    wreg      void 
 14555 ;; Registers used:
 14556 ;;		None
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14566 ;;Total ram usage:        0 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    1
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		_readRegister
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           
 14577                           ;psect for function _send_I2C_NACK
 14578  36EF                     _send_I2C_NACK:	
 14579                           
 14580                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 14581                           
 14582                           ;incstack = 0
 14583                           ; Regs used in _send_I2C_NACK: []
 14584  36EF  0020               	movlb	0	; select bank0
 14585  36F0  1191               	bcf	17,3	;volatile
 14586                           
 14587                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 14588  36F1  0024               	movlb	4	; select bank4
 14589  36F2  1696               	bsf	22,5	;volatile
 14590                           
 14591                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 14592  36F3  1616               	bsf	22,4	;volatile
 14593  36F4                     l315:	
 14594                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 14595                           
 14596  36F4  0020               	movlb	0	; select bank0
 14597  36F5  1991               	btfsc	17,3	;volatile
 14598  36F6  0008               	return
 14599  36F7  2EF4               	goto	l315
 14600  36F8                     __end_of_send_I2C_NACK:	
 14601                           
 14602                           	psect	text58
 14603  3730                     __ptext58:	
 14604 ;; *************** function _read_I2C_data *****************
 14605 ;; Defined at:
 14606 ;;		line 43 in file "I2C.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;		None
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  2    1[COMMON] unsigned int 
 14613 ;; Registers used:
 14614 ;;		wreg
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14624 ;;Total ram usage:        4 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:    1
 14627 ;; This function calls:
 14628 ;;		Nothing
 14629 ;; This function is called by:
 14630 ;;		_readRegister
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           
 14635                           ;psect for function _read_I2C_data
 14636  3730                     _read_I2C_data:	
 14637                           
 14638                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 14639                           
 14640                           ;incstack = 0
 14641                           ; Regs used in _read_I2C_data: [wreg]
 14642  3730  0020               	movlb	0	; select bank0
 14643  3731  1191               	bcf	17,3	;volatile
 14644                           
 14645                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 14646  3732  0024               	movlb	4	; select bank4
 14647  3733  1596               	bsf	22,3	;volatile
 14648  3734                     l279:	
 14649                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 14650                           
 14651  3734  0020               	movlb	0	; select bank0
 14652  3735  1D91               	btfss	17,3	;volatile
 14653  3736  2F34               	goto	l279
 14654                           
 14655                           ;I2C.c: 47:     return (SSPBUF);
 14656  3737  0024               	movlb	4	; select bank4
 14657  3738  0811               	movf	17,w	;volatile
 14658  3739  00F3               	movwf	??_read_I2C_data
 14659  373A  01F4               	clrf	??_read_I2C_data+1
 14660  373B  0873               	movf	??_read_I2C_data,w
 14661  373C  00F1               	movwf	?_read_I2C_data
 14662  373D  0874               	movf	??_read_I2C_data+1,w
 14663  373E  00F2               	movwf	?_read_I2C_data+1
 14664  373F  0008               	return
 14665  3740                     __end_of_read_I2C_data:	
 14666                           
 14667                           	psect	text59
 14668  006F                     __ptext59:	
 14669 ;; *************** function _logf *****************
 14670 ;; Defined at:
 14671 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  x               4    8[BANK1 ] float 
 14674 ;; Auto vars:     Size  Location     Type
 14675 ;;  ix              4   62[BANK2 ] unsigned long 
 14676 ;;  f               4   58[BANK2 ] float 
 14677 ;;  u               4   54[BANK2 ] struct .
 14678 ;;  w               4   46[BANK2 ] float 
 14679 ;;  z               4   42[BANK2 ] float 
 14680 ;;  s               4   38[BANK2 ] float 
 14681 ;;  dk              4   34[BANK2 ] float 
 14682 ;;  hfsq            4   30[BANK2 ] float 
 14683 ;;  t2              4    8[BANK2 ] float 
 14684 ;;  t1              4    4[BANK2 ] float 
 14685 ;;  R               4    0[BANK2 ] float 
 14686 ;;  k               2   28[BANK2 ] int 
 14687 ;; Return value:  Size  Location     Type
 14688 ;;                  4    8[BANK1 ] float 
 14689 ;; Registers used:
 14690 ;;		wreg, status,2, status,0, pclath, cstack
 14691 ;; Tracked objects:
 14692 ;;		On entry : 0/0
 14693 ;;		On exit  : 0/0
 14694 ;;		Unchanged: 0/0
 14695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14696 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14697 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14698 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14699 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14700 ;;Total ram usage:       78 bytes
 14701 ;; Hardware stack levels used:    1
 14702 ;; Hardware stack levels required when called:    3
 14703 ;; This function calls:
 14704 ;;		___fladd
 14705 ;;		___fldiv
 14706 ;;		___flmul
 14707 ;;		___flsub
 14708 ;;		___xxtofl
 14709 ;; This function is called by:
 14710 ;;		_updateTemperatures
 14711 ;; This function uses a non-reentrant model
 14712 ;;
 14713                           
 14714                           
 14715                           ;psect for function _logf
 14716  006F                     _logf:	
 14717                           
 14718                           ;incstack = 0
 14719                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14720  006F  0023               	movlb	3	; select bank3
 14721  0070  082D               	movf	(logf@F469+3)^(0+384),w
 14722  0071  0022               	movlb	2	; select bank2
 14723  0072  00D9               	movwf	(logf@u+3)^(0+256)
 14724  0073  0023               	movlb	3	; select bank3
 14725  0074  082C               	movf	(logf@F469+2)^(0+384),w
 14726  0075  0022               	movlb	2	; select bank2
 14727  0076  00D8               	movwf	(logf@u+2)^(0+256)
 14728  0077  0023               	movlb	3	; select bank3
 14729  0078  082B               	movf	(logf@F469+1)^(0+384),w
 14730  0079  0022               	movlb	2	; select bank2
 14731  007A  00D7               	movwf	(logf@u+1)^(0+256)
 14732  007B  0023               	movlb	3	; select bank3
 14733  007C  082A               	movf	logf@F469^(0+384),w
 14734  007D  0022               	movlb	2	; select bank2
 14735  007E  00D6               	movwf	logf@u^(0+256)
 14736  007F  0021               	movlb	1	; select bank1
 14737  0080  082B               	movf	(logf@x+3)^(0+128),w
 14738  0081  0022               	movlb	2	; select bank2
 14739  0082  00D9               	movwf	(logf@u+3)^(0+256)
 14740  0083  0021               	movlb	1	; select bank1
 14741  0084  082A               	movf	(logf@x+2)^(0+128),w
 14742  0085  0022               	movlb	2	; select bank2
 14743  0086  00D8               	movwf	(logf@u+2)^(0+256)
 14744  0087  0021               	movlb	1	; select bank1
 14745  0088  0829               	movf	(logf@x+1)^(0+128),w
 14746  0089  0022               	movlb	2	; select bank2
 14747  008A  00D7               	movwf	(logf@u+1)^(0+256)
 14748  008B  0021               	movlb	1	; select bank1
 14749  008C  0828               	movf	logf@x^(0+128),w
 14750  008D  0022               	movlb	2	; select bank2
 14751  008E  00D6               	movwf	logf@u^(0+256)
 14752  008F  0859               	movf	(logf@u+3)^(0+256),w
 14753  0090  00E1               	movwf	(logf@ix+3)^(0+256)
 14754  0091  0858               	movf	(logf@u+2)^(0+256),w
 14755  0092  00E0               	movwf	(logf@ix+2)^(0+256)
 14756  0093  0857               	movf	(logf@u+1)^(0+256),w
 14757  0094  00DF               	movwf	(logf@ix+1)^(0+256)
 14758  0095  0856               	movf	logf@u^(0+256),w
 14759  0096  00DE               	movwf	logf@ix^(0+256)
 14760  0097  01BC               	clrf	logf@k^(0+256)
 14761  0098  01BD               	clrf	(logf@k+1)^(0+256)
 14762  0099  0861               	movf	(logf@ix+3)^(0+256),w
 14763  009A  1D03               	btfss	3,2
 14764  009B  28A0               	goto	l7649
 14765  009C  3080               	movlw	128
 14766  009D  0260               	subwf	(logf@ix+2)^(0+256),w
 14767  009E  1C03               	btfss	3,0
 14768  009F  28BC               	goto	l7651
 14769  00A0                     l7649:	
 14770  00A0  085E               	movf	logf@ix^(0+256),w
 14771  00A1  0021               	movlb	1	; select bank1
 14772  00A2  00AC               	movwf	??_logf^(0+128)
 14773  00A3  0022               	movlb	2	; select bank2
 14774  00A4  085F               	movf	(logf@ix+1)^(0+256),w
 14775  00A5  0021               	movlb	1	; select bank1
 14776  00A6  00AD               	movwf	(??_logf^(0+128)+1)
 14777  00A7  0022               	movlb	2	; select bank2
 14778  00A8  0860               	movf	(logf@ix+2)^(0+256),w
 14779  00A9  0021               	movlb	1	; select bank1
 14780  00AA  00AE               	movwf	(??_logf^(0+128)+2)
 14781  00AB  0022               	movlb	2	; select bank2
 14782  00AC  0861               	movf	(logf@ix+3)^(0+256),w
 14783  00AD  0021               	movlb	1	; select bank1
 14784  00AE  00AF               	movwf	(??_logf^(0+128)+3)
 14785  00AF  301F               	movlw	31
 14786  00B0                     u10655:	
 14787  00B0  36AF               	lsrf	(??_logf^(0+128)+3),f
 14788  00B1  0CAE               	rrf	(??_logf^(0+128)+2),f
 14789  00B2  0CAD               	rrf	(??_logf^(0+128)+1),f
 14790  00B3  0CAC               	rrf	??_logf^(0+128),f
 14791  00B4  0B89               	decfsz	9,f
 14792  00B5  28B0               	goto	u10655
 14793  00B6  082F               	movf	(??_logf+3)^(0+128),w
 14794  00B7  042E               	iorwf	(??_logf+2)^(0+128),w
 14795  00B8  042D               	iorwf	(??_logf+1)^(0+128),w
 14796  00B9  042C               	iorwf	??_logf^(0+128),w
 14797  00BA  1903               	skipnz
 14798  00BB  29C5               	goto	l7671
 14799  00BC                     l7651:	
 14800  00BC  0022               	movlb	2	; select bank2
 14801  00BD  085E               	movf	logf@ix^(0+256),w
 14802  00BE  0021               	movlb	1	; select bank1
 14803  00BF  00AC               	movwf	??_logf^(0+128)
 14804  00C0  0022               	movlb	2	; select bank2
 14805  00C1  085F               	movf	(logf@ix+1)^(0+256),w
 14806  00C2  0021               	movlb	1	; select bank1
 14807  00C3  00AD               	movwf	(??_logf^(0+128)+1)
 14808  00C4  0022               	movlb	2	; select bank2
 14809  00C5  0860               	movf	(logf@ix+2)^(0+256),w
 14810  00C6  0021               	movlb	1	; select bank1
 14811  00C7  00AE               	movwf	(??_logf^(0+128)+2)
 14812  00C8  0022               	movlb	2	; select bank2
 14813  00C9  0861               	movf	(logf@ix+3)^(0+256),w
 14814  00CA  0021               	movlb	1	; select bank1
 14815  00CB  00AF               	movwf	(??_logf^(0+128)+3)
 14816  00CC  3001               	movlw	1
 14817  00CD                     u10675:	
 14818  00CD  35AC               	lslf	??_logf^(0+128),f
 14819  00CE  0DAD               	rlf	(??_logf^(0+128)+1),f
 14820  00CF  0DAE               	rlf	(??_logf^(0+128)+2),f
 14821  00D0  0DAF               	rlf	(??_logf^(0+128)+3),f
 14822  00D1  0B89               	decfsz	9,f
 14823  00D2  28CD               	goto	u10675
 14824  00D3  082F               	movf	(??_logf+3)^(0+128),w
 14825  00D4  042E               	iorwf	(??_logf+2)^(0+128),w
 14826  00D5  042D               	iorwf	(??_logf+1)^(0+128),w
 14827  00D6  042C               	iorwf	??_logf^(0+128),w
 14828  00D7  1D03               	skipz
 14829  00D8  291F               	goto	l7657
 14830  00D9  082B               	movf	(logf@x+3)^(0+128),w
 14831  00DA  0020               	movlb	0	; select bank0
 14832  00DB  00A9               	movwf	___flmul@b+3
 14833  00DC  0021               	movlb	1	; select bank1
 14834  00DD  082A               	movf	(logf@x+2)^(0+128),w
 14835  00DE  0020               	movlb	0	; select bank0
 14836  00DF  00A8               	movwf	___flmul@b+2
 14837  00E0  0021               	movlb	1	; select bank1
 14838  00E1  0829               	movf	(logf@x+1)^(0+128),w
 14839  00E2  0020               	movlb	0	; select bank0
 14840  00E3  00A7               	movwf	___flmul@b+1
 14841  00E4  0021               	movlb	1	; select bank1
 14842  00E5  0828               	movf	logf@x^(0+128),w
 14843  00E6  0020               	movlb	0	; select bank0
 14844  00E7  00A6               	movwf	___flmul@b
 14845  00E8  0021               	movlb	1	; select bank1
 14846  00E9  082B               	movf	(logf@x+3)^(0+128),w
 14847  00EA  0020               	movlb	0	; select bank0
 14848  00EB  00AD               	movwf	___flmul@a+3
 14849  00EC  0021               	movlb	1	; select bank1
 14850  00ED  082A               	movf	(logf@x+2)^(0+128),w
 14851  00EE  0020               	movlb	0	; select bank0
 14852  00EF  00AC               	movwf	___flmul@a+2
 14853  00F0  0021               	movlb	1	; select bank1
 14854  00F1  0829               	movf	(logf@x+1)^(0+128),w
 14855  00F2  0020               	movlb	0	; select bank0
 14856  00F3  00AB               	movwf	___flmul@a+1
 14857  00F4  0021               	movlb	1	; select bank1
 14858  00F5  0828               	movf	logf@x^(0+128),w
 14859  00F6  0020               	movlb	0	; select bank0
 14860  00F7  00AA               	movwf	___flmul@a
 14861  00F8  3192  22FC  3180   	fcall	___flmul
 14862  00FB  0020               	movlb	0	; select bank0
 14863  00FC  0829               	movf	?___flmul+3,w
 14864  00FD  00C3               	movwf	___fldiv@a+3
 14865  00FE  0828               	movf	?___flmul+2,w
 14866  00FF  00C2               	movwf	___fldiv@a+2
 14867  0100  0827               	movf	?___flmul+1,w
 14868  0101  00C1               	movwf	___fldiv@a+1
 14869  0102  0826               	movf	?___flmul,w
 14870  0103  00C0               	movwf	___fldiv@a
 14871  0104  30BF               	movlw	191
 14872  0105  00C7               	movwf	___fldiv@b+3
 14873  0106  3080               	movlw	128
 14874  0107  00C6               	movwf	___fldiv@b+2
 14875  0108  3000               	movlw	0
 14876  0109  00C5               	movwf	___fldiv@b+1
 14877  010A  3000               	movlw	0
 14878  010B  00C4               	movwf	___fldiv@b
 14879  010C  319C  24E1         	fcall	___fldiv
 14880  010E  0020               	movlb	0	; select bank0
 14881  010F  0843               	movf	?___fldiv+3,w
 14882  0110  0021               	movlb	1	; select bank1
 14883  0111  00AB               	movwf	(?_logf+3)^(0+128)
 14884  0112  0020               	movlb	0	; select bank0
 14885  0113  0842               	movf	?___fldiv+2,w
 14886  0114  0021               	movlb	1	; select bank1
 14887  0115  00AA               	movwf	(?_logf+2)^(0+128)
 14888  0116  0020               	movlb	0	; select bank0
 14889  0117  0841               	movf	?___fldiv+1,w
 14890  0118  0021               	movlb	1	; select bank1
 14891  0119  00A9               	movwf	(?_logf+1)^(0+128)
 14892  011A  0020               	movlb	0	; select bank0
 14893  011B  0840               	movf	?___fldiv,w
 14894  011C  0021               	movlb	1	; select bank1
 14895  011D  00A8               	movwf	?_logf^(0+128)
 14896  011E  0008               	return
 14897  011F                     l7657:	
 14898  011F  0022               	movlb	2	; select bank2
 14899  0120  085E               	movf	logf@ix^(0+256),w
 14900  0121  0021               	movlb	1	; select bank1
 14901  0122  00AC               	movwf	??_logf^(0+128)
 14902  0123  0022               	movlb	2	; select bank2
 14903  0124  085F               	movf	(logf@ix+1)^(0+256),w
 14904  0125  0021               	movlb	1	; select bank1
 14905  0126  00AD               	movwf	(??_logf^(0+128)+1)
 14906  0127  0022               	movlb	2	; select bank2
 14907  0128  0860               	movf	(logf@ix+2)^(0+256),w
 14908  0129  0021               	movlb	1	; select bank1
 14909  012A  00AE               	movwf	(??_logf^(0+128)+2)
 14910  012B  0022               	movlb	2	; select bank2
 14911  012C  0861               	movf	(logf@ix+3)^(0+256),w
 14912  012D  0021               	movlb	1	; select bank1
 14913  012E  00AF               	movwf	(??_logf^(0+128)+3)
 14914  012F  301F               	movlw	31
 14915  0130                     u10695:	
 14916  0130  36AF               	lsrf	(??_logf^(0+128)+3),f
 14917  0131  0CAE               	rrf	(??_logf^(0+128)+2),f
 14918  0132  0CAD               	rrf	(??_logf^(0+128)+1),f
 14919  0133  0CAC               	rrf	??_logf^(0+128),f
 14920  0134  0B89               	decfsz	9,f
 14921  0135  2930               	goto	u10695
 14922  0136  082F               	movf	(??_logf+3)^(0+128),w
 14923  0137  042E               	iorwf	(??_logf+2)^(0+128),w
 14924  0138  042D               	iorwf	(??_logf+1)^(0+128),w
 14925  0139  042C               	iorwf	??_logf^(0+128),w
 14926  013A  1903               	skipnz
 14927  013B  297C               	goto	l7663
 14928  013C  3000               	movlw	0
 14929  013D  0020               	movlb	0	; select bank0
 14930  013E  00C3               	movwf	___fldiv@a+3
 14931  013F  3000               	movlw	0
 14932  0140  00C2               	movwf	___fldiv@a+2
 14933  0141  3000               	movlw	0
 14934  0142  00C1               	movwf	___fldiv@a+1
 14935  0143  3000               	movlw	0
 14936  0144  00C0               	movwf	___fldiv@a
 14937  0145  0021               	movlb	1	; select bank1
 14938  0146  082B               	movf	(logf@x+3)^(0+128),w
 14939  0147  00A3               	movwf	(___flsub@a+3)^(0+128)
 14940  0148  082A               	movf	(logf@x+2)^(0+128),w
 14941  0149  00A2               	movwf	(___flsub@a+2)^(0+128)
 14942  014A  0829               	movf	(logf@x+1)^(0+128),w
 14943  014B  00A1               	movwf	(___flsub@a+1)^(0+128)
 14944  014C  0828               	movf	logf@x^(0+128),w
 14945  014D  00A0               	movwf	___flsub@a^(0+128)
 14946  014E  082B               	movf	(logf@x+3)^(0+128),w
 14947  014F  00A7               	movwf	(___flsub@b+3)^(0+128)
 14948  0150  082A               	movf	(logf@x+2)^(0+128),w
 14949  0151  00A6               	movwf	(___flsub@b+2)^(0+128)
 14950  0152  0829               	movf	(logf@x+1)^(0+128),w
 14951  0153  00A5               	movwf	(___flsub@b+1)^(0+128)
 14952  0154  0828               	movf	logf@x^(0+128),w
 14953  0155  00A4               	movwf	___flsub@b^(0+128)
 14954  0156  31A9  21C5  3180   	fcall	___flsub
 14955  0159  0021               	movlb	1	; select bank1
 14956  015A  0823               	movf	(?___flsub+3)^(0+128),w
 14957  015B  0020               	movlb	0	; select bank0
 14958  015C  00C7               	movwf	___fldiv@b+3
 14959  015D  0021               	movlb	1	; select bank1
 14960  015E  0822               	movf	(?___flsub+2)^(0+128),w
 14961  015F  0020               	movlb	0	; select bank0
 14962  0160  00C6               	movwf	___fldiv@b+2
 14963  0161  0021               	movlb	1	; select bank1
 14964  0162  0821               	movf	(?___flsub+1)^(0+128),w
 14965  0163  0020               	movlb	0	; select bank0
 14966  0164  00C5               	movwf	___fldiv@b+1
 14967  0165  0021               	movlb	1	; select bank1
 14968  0166  0820               	movf	?___flsub^(0+128),w
 14969  0167  0020               	movlb	0	; select bank0
 14970  0168  00C4               	movwf	___fldiv@b
 14971  0169  319C  24E1         	fcall	___fldiv
 14972  016B  0020               	movlb	0	; select bank0
 14973  016C  0843               	movf	?___fldiv+3,w
 14974  016D  0021               	movlb	1	; select bank1
 14975  016E  00AB               	movwf	(?_logf+3)^(0+128)
 14976  016F  0020               	movlb	0	; select bank0
 14977  0170  0842               	movf	?___fldiv+2,w
 14978  0171  0021               	movlb	1	; select bank1
 14979  0172  00AA               	movwf	(?_logf+2)^(0+128)
 14980  0173  0020               	movlb	0	; select bank0
 14981  0174  0841               	movf	?___fldiv+1,w
 14982  0175  0021               	movlb	1	; select bank1
 14983  0176  00A9               	movwf	(?_logf+1)^(0+128)
 14984  0177  0020               	movlb	0	; select bank0
 14985  0178  0840               	movf	?___fldiv,w
 14986  0179  0021               	movlb	1	; select bank1
 14987  017A  00A8               	movwf	?_logf^(0+128)
 14988  017B  0008               	return
 14989  017C                     l7663:	
 14990  017C  30E7               	movlw	231
 14991  017D  0022               	movlb	2	; select bank2
 14992  017E  07BC               	addwf	logf@k^(0+256),f
 14993  017F  30FF               	movlw	255
 14994  0180  3DBD               	addwfc	(logf@k+1)^(0+256),f
 14995  0181  304C               	movlw	76
 14996  0182  0020               	movlb	0	; select bank0
 14997  0183  00A9               	movwf	___flmul@b+3
 14998  0184  3000               	movlw	0
 14999  0185  00A8               	movwf	___flmul@b+2
 15000  0186  3000               	movlw	0
 15001  0187  00A7               	movwf	___flmul@b+1
 15002  0188  3000               	movlw	0
 15003  0189  00A6               	movwf	___flmul@b
 15004  018A  0021               	movlb	1	; select bank1
 15005  018B  082B               	movf	(logf@x+3)^(0+128),w
 15006  018C  0020               	movlb	0	; select bank0
 15007  018D  00AD               	movwf	___flmul@a+3
 15008  018E  0021               	movlb	1	; select bank1
 15009  018F  082A               	movf	(logf@x+2)^(0+128),w
 15010  0190  0020               	movlb	0	; select bank0
 15011  0191  00AC               	movwf	___flmul@a+2
 15012  0192  0021               	movlb	1	; select bank1
 15013  0193  0829               	movf	(logf@x+1)^(0+128),w
 15014  0194  0020               	movlb	0	; select bank0
 15015  0195  00AB               	movwf	___flmul@a+1
 15016  0196  0021               	movlb	1	; select bank1
 15017  0197  0828               	movf	logf@x^(0+128),w
 15018  0198  0020               	movlb	0	; select bank0
 15019  0199  00AA               	movwf	___flmul@a
 15020  019A  3192  22FC  3180   	fcall	___flmul
 15021  019D  0020               	movlb	0	; select bank0
 15022  019E  0829               	movf	?___flmul+3,w
 15023  019F  0021               	movlb	1	; select bank1
 15024  01A0  00AB               	movwf	(logf@x+3)^(0+128)
 15025  01A1  0020               	movlb	0	; select bank0
 15026  01A2  0828               	movf	?___flmul+2,w
 15027  01A3  0021               	movlb	1	; select bank1
 15028  01A4  00AA               	movwf	(logf@x+2)^(0+128)
 15029  01A5  0020               	movlb	0	; select bank0
 15030  01A6  0827               	movf	?___flmul+1,w
 15031  01A7  0021               	movlb	1	; select bank1
 15032  01A8  00A9               	movwf	(logf@x+1)^(0+128)
 15033  01A9  0020               	movlb	0	; select bank0
 15034  01AA  0826               	movf	?___flmul,w
 15035  01AB  0021               	movlb	1	; select bank1
 15036  01AC  00A8               	movwf	logf@x^(0+128)
 15037  01AD  082B               	movf	(logf@x+3)^(0+128),w
 15038  01AE  0022               	movlb	2	; select bank2
 15039  01AF  00D9               	movwf	(logf@u+3)^(0+256)
 15040  01B0  0021               	movlb	1	; select bank1
 15041  01B1  082A               	movf	(logf@x+2)^(0+128),w
 15042  01B2  0022               	movlb	2	; select bank2
 15043  01B3  00D8               	movwf	(logf@u+2)^(0+256)
 15044  01B4  0021               	movlb	1	; select bank1
 15045  01B5  0829               	movf	(logf@x+1)^(0+128),w
 15046  01B6  0022               	movlb	2	; select bank2
 15047  01B7  00D7               	movwf	(logf@u+1)^(0+256)
 15048  01B8  0021               	movlb	1	; select bank1
 15049  01B9  0828               	movf	logf@x^(0+128),w
 15050  01BA  0022               	movlb	2	; select bank2
 15051  01BB  00D6               	movwf	logf@u^(0+256)
 15052  01BC  0859               	movf	(logf@u+3)^(0+256),w
 15053  01BD  00E1               	movwf	(logf@ix+3)^(0+256)
 15054  01BE  0858               	movf	(logf@u+2)^(0+256),w
 15055  01BF  00E0               	movwf	(logf@ix+2)^(0+256)
 15056  01C0  0857               	movf	(logf@u+1)^(0+256),w
 15057  01C1  00DF               	movwf	(logf@ix+1)^(0+256)
 15058  01C2  0856               	movf	logf@u^(0+256),w
 15059  01C3  00DE               	movwf	logf@ix^(0+256)
 15060  01C4  29DF               	goto	l7683
 15061  01C5                     l7671:	
 15062  01C5  3080               	movlw	128
 15063  01C6  0022               	movlb	2	; select bank2
 15064  01C7  0260               	subwf	(logf@ix+2)^(0+256),w
 15065  01C8  307F               	movlw	127
 15066  01C9  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15067  01CA  1803               	btfsc	3,0
 15068  01CB  0008               	return
 15069  01CC  3080               	movlw	128
 15070  01CD  0660               	xorwf	(logf@ix+2)^(0+256),w
 15071  01CE  303F               	movlw	63
 15072  01CF  1903               	skipnz
 15073  01D0  0661               	xorwf	(logf@ix+3)^(0+256),w
 15074  01D1  045E               	iorwf	logf@ix^(0+256),w
 15075  01D2  045F               	iorwf	(logf@ix+1)^(0+256),w
 15076  01D3  1D03               	btfss	3,2
 15077  01D4  29DF               	goto	l7683
 15078  01D5  3000               	movlw	0
 15079  01D6  0021               	movlb	1	; select bank1
 15080  01D7  00AB               	movwf	(?_logf+3)^(0+128)
 15081  01D8  3000               	movlw	0
 15082  01D9  00AA               	movwf	(?_logf+2)^(0+128)
 15083  01DA  3000               	movlw	0
 15084  01DB  00A9               	movwf	(?_logf+1)^(0+128)
 15085  01DC  3000               	movlw	0
 15086  01DD  00A8               	movwf	?_logf^(0+128)
 15087  01DE  0008               	return
 15088  01DF                     l7683:	
 15089  01DF  300D               	movlw	13
 15090  01E0  07DE               	addwf	logf@ix^(0+256),f
 15091  01E1  30FB               	movlw	251
 15092  01E2  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15093  01E3  304A               	movlw	74
 15094  01E4  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15095  01E5  3000               	movlw	0
 15096  01E6  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15097  01E7  085E               	movf	logf@ix^(0+256),w
 15098  01E8  0021               	movlb	1	; select bank1
 15099  01E9  00AC               	movwf	??_logf^(0+128)
 15100  01EA  0022               	movlb	2	; select bank2
 15101  01EB  085F               	movf	(logf@ix+1)^(0+256),w
 15102  01EC  0021               	movlb	1	; select bank1
 15103  01ED  00AD               	movwf	(??_logf^(0+128)+1)
 15104  01EE  0022               	movlb	2	; select bank2
 15105  01EF  0860               	movf	(logf@ix+2)^(0+256),w
 15106  01F0  0021               	movlb	1	; select bank1
 15107  01F1  00AE               	movwf	(??_logf^(0+128)+2)
 15108  01F2  0022               	movlb	2	; select bank2
 15109  01F3  0861               	movf	(logf@ix+3)^(0+256),w
 15110  01F4  0021               	movlb	1	; select bank1
 15111  01F5  00AF               	movwf	(??_logf^(0+128)+3)
 15112  01F6  3017               	movlw	23
 15113  01F7                     u10735:	
 15114  01F7  36AF               	lsrf	(??_logf^(0+128)+3),f
 15115  01F8  0CAE               	rrf	(??_logf^(0+128)+2),f
 15116  01F9  0CAD               	rrf	(??_logf^(0+128)+1),f
 15117  01FA  0CAC               	rrf	??_logf^(0+128),f
 15118  01FB  0B89               	decfsz	9,f
 15119  01FC  29F7               	goto	u10735
 15120  01FD  082C               	movf	??_logf^(0+128),w
 15121  01FE  3E81               	addlw	129
 15122  01FF  00B0               	movwf	(??_logf+4)^(0+128)
 15123  0200  30FF               	movlw	255
 15124  0201  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15125  0202  00B1               	movwf	(??_logf+5)^(0+128)
 15126  0203  0830               	movf	(??_logf+4)^(0+128),w
 15127  0204  0022               	movlb	2	; select bank2
 15128  0205  07BC               	addwf	logf@k^(0+256),f
 15129  0206  0021               	movlb	1	; select bank1
 15130  0207  0831               	movf	(??_logf+5)^(0+128),w
 15131  0208  0022               	movlb	2	; select bank2
 15132  0209  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15133  020A  30F3               	movlw	243
 15134  020B  0021               	movlb	1	; select bank1
 15135  020C  00AC               	movwf	??_logf^(0+128)
 15136  020D  3004               	movlw	4
 15137  020E  00AD               	movwf	(??_logf^(0+128)+1)
 15138  020F  3035               	movlw	53
 15139  0210  00AE               	movwf	(??_logf^(0+128)+2)
 15140  0211  303F               	movlw	63
 15141  0212  00AF               	movwf	(??_logf^(0+128)+3)
 15142  0213  30FF               	movlw	255
 15143  0214  0022               	movlb	2	; select bank2
 15144  0215  055E               	andwf	logf@ix^(0+256),w
 15145  0216  0021               	movlb	1	; select bank1
 15146  0217  00B0               	movwf	(??_logf+4)^(0+128)
 15147  0218  30FF               	movlw	255
 15148  0219  0022               	movlb	2	; select bank2
 15149  021A  055F               	andwf	(logf@ix+1)^(0+256),w
 15150  021B  0021               	movlb	1	; select bank1
 15151  021C  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15152  021D  307F               	movlw	127
 15153  021E  0022               	movlb	2	; select bank2
 15154  021F  0560               	andwf	(logf@ix+2)^(0+256),w
 15155  0220  0021               	movlb	1	; select bank1
 15156  0221  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15157  0222  3000               	movlw	0
 15158  0223  0022               	movlb	2	; select bank2
 15159  0224  0561               	andwf	(logf@ix+3)^(0+256),w
 15160  0225  0021               	movlb	1	; select bank1
 15161  0226  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15162  0227  0830               	movf	(??_logf+4)^(0+128),w
 15163  0228  07AC               	addwf	??_logf^(0+128),f
 15164  0229  0831               	movf	(??_logf+5)^(0+128),w
 15165  022A  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15166  022B  0832               	movf	(??_logf+6)^(0+128),w
 15167  022C  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15168  022D  0833               	movf	(??_logf+7)^(0+128),w
 15169  022E  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15170  022F  082F               	movf	(??_logf+3)^(0+128),w
 15171  0230  0022               	movlb	2	; select bank2
 15172  0231  00E1               	movwf	(logf@ix+3)^(0+256)
 15173  0232  0021               	movlb	1	; select bank1
 15174  0233  082E               	movf	(??_logf+2)^(0+128),w
 15175  0234  0022               	movlb	2	; select bank2
 15176  0235  00E0               	movwf	(logf@ix+2)^(0+256)
 15177  0236  0021               	movlb	1	; select bank1
 15178  0237  082D               	movf	(??_logf+1)^(0+128),w
 15179  0238  0022               	movlb	2	; select bank2
 15180  0239  00DF               	movwf	(logf@ix+1)^(0+256)
 15181  023A  0021               	movlb	1	; select bank1
 15182  023B  082C               	movf	??_logf^(0+128),w
 15183  023C  0022               	movlb	2	; select bank2
 15184  023D  00DE               	movwf	logf@ix^(0+256)
 15185  023E  0861               	movf	(logf@ix+3)^(0+256),w
 15186  023F  00D9               	movwf	(logf@u+3)^(0+256)
 15187  0240  0860               	movf	(logf@ix+2)^(0+256),w
 15188  0241  00D8               	movwf	(logf@u+2)^(0+256)
 15189  0242  085F               	movf	(logf@ix+1)^(0+256),w
 15190  0243  00D7               	movwf	(logf@u+1)^(0+256)
 15191  0244  085E               	movf	logf@ix^(0+256),w
 15192  0245  00D6               	movwf	logf@u^(0+256)
 15193  0246  0859               	movf	(logf@u+3)^(0+256),w
 15194  0247  0021               	movlb	1	; select bank1
 15195  0248  00AB               	movwf	(logf@x+3)^(0+128)
 15196  0249  0022               	movlb	2	; select bank2
 15197  024A  0858               	movf	(logf@u+2)^(0+256),w
 15198  024B  0021               	movlb	1	; select bank1
 15199  024C  00AA               	movwf	(logf@x+2)^(0+128)
 15200  024D  0022               	movlb	2	; select bank2
 15201  024E  0857               	movf	(logf@u+1)^(0+256),w
 15202  024F  0021               	movlb	1	; select bank1
 15203  0250  00A9               	movwf	(logf@x+1)^(0+128)
 15204  0251  0022               	movlb	2	; select bank2
 15205  0252  0856               	movf	logf@u^(0+256),w
 15206  0253  0021               	movlb	1	; select bank1
 15207  0254  00A8               	movwf	logf@x^(0+128)
 15208  0255  30BF               	movlw	191
 15209  0256  0020               	movlb	0	; select bank0
 15210  0257  00DD               	movwf	___fladd@b+3
 15211  0258  3080               	movlw	128
 15212  0259  00DC               	movwf	___fladd@b+2
 15213  025A  3000               	movlw	0
 15214  025B  00DB               	movwf	___fladd@b+1
 15215  025C  3000               	movlw	0
 15216  025D  00DA               	movwf	___fladd@b
 15217  025E  0021               	movlb	1	; select bank1
 15218  025F  082B               	movf	(logf@x+3)^(0+128),w
 15219  0260  0020               	movlb	0	; select bank0
 15220  0261  00E1               	movwf	___fladd@a+3
 15221  0262  0021               	movlb	1	; select bank1
 15222  0263  082A               	movf	(logf@x+2)^(0+128),w
 15223  0264  0020               	movlb	0	; select bank0
 15224  0265  00E0               	movwf	___fladd@a+2
 15225  0266  0021               	movlb	1	; select bank1
 15226  0267  0829               	movf	(logf@x+1)^(0+128),w
 15227  0268  0020               	movlb	0	; select bank0
 15228  0269  00DF               	movwf	___fladd@a+1
 15229  026A  0021               	movlb	1	; select bank1
 15230  026B  0828               	movf	logf@x^(0+128),w
 15231  026C  0020               	movlb	0	; select bank0
 15232  026D  00DE               	movwf	___fladd@a
 15233  026E  3191  211A  3180   	fcall	___fladd
 15234  0271  0020               	movlb	0	; select bank0
 15235  0272  085D               	movf	?___fladd+3,w
 15236  0273  0022               	movlb	2	; select bank2
 15237  0274  00DD               	movwf	(logf@f+3)^(0+256)
 15238  0275  0020               	movlb	0	; select bank0
 15239  0276  085C               	movf	?___fladd+2,w
 15240  0277  0022               	movlb	2	; select bank2
 15241  0278  00DC               	movwf	(logf@f+2)^(0+256)
 15242  0279  0020               	movlb	0	; select bank0
 15243  027A  085B               	movf	?___fladd+1,w
 15244  027B  0022               	movlb	2	; select bank2
 15245  027C  00DB               	movwf	(logf@f+1)^(0+256)
 15246  027D  0020               	movlb	0	; select bank0
 15247  027E  085A               	movf	?___fladd,w
 15248  027F  0022               	movlb	2	; select bank2
 15249  0280  00DA               	movwf	logf@f^(0+256)
 15250  0281  3040               	movlw	64
 15251  0282  0020               	movlb	0	; select bank0
 15252  0283  00DD               	movwf	___fladd@b+3
 15253  0284  3000               	movlw	0
 15254  0285  00DC               	movwf	___fladd@b+2
 15255  0286  3000               	movlw	0
 15256  0287  00DB               	movwf	___fladd@b+1
 15257  0288  3000               	movlw	0
 15258  0289  00DA               	movwf	___fladd@b
 15259  028A  0022               	movlb	2	; select bank2
 15260  028B  085D               	movf	(logf@f+3)^(0+256),w
 15261  028C  0020               	movlb	0	; select bank0
 15262  028D  00E1               	movwf	___fladd@a+3
 15263  028E  0022               	movlb	2	; select bank2
 15264  028F  085C               	movf	(logf@f+2)^(0+256),w
 15265  0290  0020               	movlb	0	; select bank0
 15266  0291  00E0               	movwf	___fladd@a+2
 15267  0292  0022               	movlb	2	; select bank2
 15268  0293  085B               	movf	(logf@f+1)^(0+256),w
 15269  0294  0020               	movlb	0	; select bank0
 15270  0295  00DF               	movwf	___fladd@a+1
 15271  0296  0022               	movlb	2	; select bank2
 15272  0297  085A               	movf	logf@f^(0+256),w
 15273  0298  0020               	movlb	0	; select bank0
 15274  0299  00DE               	movwf	___fladd@a
 15275  029A  3191  211A  3180   	fcall	___fladd
 15276  029D  0020               	movlb	0	; select bank0
 15277  029E  085D               	movf	?___fladd+3,w
 15278  029F  00C3               	movwf	___fldiv@a+3
 15279  02A0  085C               	movf	?___fladd+2,w
 15280  02A1  00C2               	movwf	___fldiv@a+2
 15281  02A2  085B               	movf	?___fladd+1,w
 15282  02A3  00C1               	movwf	___fldiv@a+1
 15283  02A4  085A               	movf	?___fladd,w
 15284  02A5  00C0               	movwf	___fldiv@a
 15285  02A6  0022               	movlb	2	; select bank2
 15286  02A7  085D               	movf	(logf@f+3)^(0+256),w
 15287  02A8  0020               	movlb	0	; select bank0
 15288  02A9  00C7               	movwf	___fldiv@b+3
 15289  02AA  0022               	movlb	2	; select bank2
 15290  02AB  085C               	movf	(logf@f+2)^(0+256),w
 15291  02AC  0020               	movlb	0	; select bank0
 15292  02AD  00C6               	movwf	___fldiv@b+2
 15293  02AE  0022               	movlb	2	; select bank2
 15294  02AF  085B               	movf	(logf@f+1)^(0+256),w
 15295  02B0  0020               	movlb	0	; select bank0
 15296  02B1  00C5               	movwf	___fldiv@b+1
 15297  02B2  0022               	movlb	2	; select bank2
 15298  02B3  085A               	movf	logf@f^(0+256),w
 15299  02B4  0020               	movlb	0	; select bank0
 15300  02B5  00C4               	movwf	___fldiv@b
 15301  02B6  319C  24E1  3180   	fcall	___fldiv
 15302  02B9  0020               	movlb	0	; select bank0
 15303  02BA  0843               	movf	?___fldiv+3,w
 15304  02BB  0022               	movlb	2	; select bank2
 15305  02BC  00C9               	movwf	(logf@s+3)^(0+256)
 15306  02BD  0020               	movlb	0	; select bank0
 15307  02BE  0842               	movf	?___fldiv+2,w
 15308  02BF  0022               	movlb	2	; select bank2
 15309  02C0  00C8               	movwf	(logf@s+2)^(0+256)
 15310  02C1  0020               	movlb	0	; select bank0
 15311  02C2  0841               	movf	?___fldiv+1,w
 15312  02C3  0022               	movlb	2	; select bank2
 15313  02C4  00C7               	movwf	(logf@s+1)^(0+256)
 15314  02C5  0020               	movlb	0	; select bank0
 15315  02C6  0840               	movf	?___fldiv,w
 15316  02C7  0022               	movlb	2	; select bank2
 15317  02C8  00C6               	movwf	logf@s^(0+256)
 15318  02C9  0849               	movf	(logf@s+3)^(0+256),w
 15319  02CA  0020               	movlb	0	; select bank0
 15320  02CB  00A9               	movwf	___flmul@b+3
 15321  02CC  0022               	movlb	2	; select bank2
 15322  02CD  0848               	movf	(logf@s+2)^(0+256),w
 15323  02CE  0020               	movlb	0	; select bank0
 15324  02CF  00A8               	movwf	___flmul@b+2
 15325  02D0  0022               	movlb	2	; select bank2
 15326  02D1  0847               	movf	(logf@s+1)^(0+256),w
 15327  02D2  0020               	movlb	0	; select bank0
 15328  02D3  00A7               	movwf	___flmul@b+1
 15329  02D4  0022               	movlb	2	; select bank2
 15330  02D5  0846               	movf	logf@s^(0+256),w
 15331  02D6  0020               	movlb	0	; select bank0
 15332  02D7  00A6               	movwf	___flmul@b
 15333  02D8  0022               	movlb	2	; select bank2
 15334  02D9  0849               	movf	(logf@s+3)^(0+256),w
 15335  02DA  0020               	movlb	0	; select bank0
 15336  02DB  00AD               	movwf	___flmul@a+3
 15337  02DC  0022               	movlb	2	; select bank2
 15338  02DD  0848               	movf	(logf@s+2)^(0+256),w
 15339  02DE  0020               	movlb	0	; select bank0
 15340  02DF  00AC               	movwf	___flmul@a+2
 15341  02E0  0022               	movlb	2	; select bank2
 15342  02E1  0847               	movf	(logf@s+1)^(0+256),w
 15343  02E2  0020               	movlb	0	; select bank0
 15344  02E3  00AB               	movwf	___flmul@a+1
 15345  02E4  0022               	movlb	2	; select bank2
 15346  02E5  0846               	movf	logf@s^(0+256),w
 15347  02E6  0020               	movlb	0	; select bank0
 15348  02E7  00AA               	movwf	___flmul@a
 15349  02E8  3192  22FC  3180   	fcall	___flmul
 15350  02EB  0020               	movlb	0	; select bank0
 15351  02EC  0829               	movf	?___flmul+3,w
 15352  02ED  0022               	movlb	2	; select bank2
 15353  02EE  00CD               	movwf	(logf@z+3)^(0+256)
 15354  02EF  0020               	movlb	0	; select bank0
 15355  02F0  0828               	movf	?___flmul+2,w
 15356  02F1  0022               	movlb	2	; select bank2
 15357  02F2  00CC               	movwf	(logf@z+2)^(0+256)
 15358  02F3  0020               	movlb	0	; select bank0
 15359  02F4  0827               	movf	?___flmul+1,w
 15360  02F5  0022               	movlb	2	; select bank2
 15361  02F6  00CB               	movwf	(logf@z+1)^(0+256)
 15362  02F7  0020               	movlb	0	; select bank0
 15363  02F8  0826               	movf	?___flmul,w
 15364  02F9  0022               	movlb	2	; select bank2
 15365  02FA  00CA               	movwf	logf@z^(0+256)
 15366  02FB  084D               	movf	(logf@z+3)^(0+256),w
 15367  02FC  0020               	movlb	0	; select bank0
 15368  02FD  00A9               	movwf	___flmul@b+3
 15369  02FE  0022               	movlb	2	; select bank2
 15370  02FF  084C               	movf	(logf@z+2)^(0+256),w
 15371  0300  0020               	movlb	0	; select bank0
 15372  0301  00A8               	movwf	___flmul@b+2
 15373  0302  0022               	movlb	2	; select bank2
 15374  0303  084B               	movf	(logf@z+1)^(0+256),w
 15375  0304  0020               	movlb	0	; select bank0
 15376  0305  00A7               	movwf	___flmul@b+1
 15377  0306  0022               	movlb	2	; select bank2
 15378  0307  084A               	movf	logf@z^(0+256),w
 15379  0308  0020               	movlb	0	; select bank0
 15380  0309  00A6               	movwf	___flmul@b
 15381  030A  0022               	movlb	2	; select bank2
 15382  030B  084D               	movf	(logf@z+3)^(0+256),w
 15383  030C  0020               	movlb	0	; select bank0
 15384  030D  00AD               	movwf	___flmul@a+3
 15385  030E  0022               	movlb	2	; select bank2
 15386  030F  084C               	movf	(logf@z+2)^(0+256),w
 15387  0310  0020               	movlb	0	; select bank0
 15388  0311  00AC               	movwf	___flmul@a+2
 15389  0312  0022               	movlb	2	; select bank2
 15390  0313  084B               	movf	(logf@z+1)^(0+256),w
 15391  0314  0020               	movlb	0	; select bank0
 15392  0315  00AB               	movwf	___flmul@a+1
 15393  0316  0022               	movlb	2	; select bank2
 15394  0317  084A               	movf	logf@z^(0+256),w
 15395  0318  0020               	movlb	0	; select bank0
 15396  0319  00AA               	movwf	___flmul@a
 15397  031A  3192  22FC  3180   	fcall	___flmul
 15398  031D  0020               	movlb	0	; select bank0
 15399  031E  0829               	movf	?___flmul+3,w
 15400  031F  0022               	movlb	2	; select bank2
 15401  0320  00D1               	movwf	(logf@w+3)^(0+256)
 15402  0321  0020               	movlb	0	; select bank0
 15403  0322  0828               	movf	?___flmul+2,w
 15404  0323  0022               	movlb	2	; select bank2
 15405  0324  00D0               	movwf	(logf@w+2)^(0+256)
 15406  0325  0020               	movlb	0	; select bank0
 15407  0326  0827               	movf	?___flmul+1,w
 15408  0327  0022               	movlb	2	; select bank2
 15409  0328  00CF               	movwf	(logf@w+1)^(0+256)
 15410  0329  0020               	movlb	0	; select bank0
 15411  032A  0826               	movf	?___flmul,w
 15412  032B  0022               	movlb	2	; select bank2
 15413  032C  00CE               	movwf	logf@w^(0+256)
 15414  032D  303E               	movlw	62
 15415  032E  0020               	movlb	0	; select bank0
 15416  032F  00DD               	movwf	___fladd@b+3
 15417  0330  30CC               	movlw	204
 15418  0331  00DC               	movwf	___fladd@b+2
 15419  0332  30CE               	movlw	206
 15420  0333  00DB               	movwf	___fladd@b+1
 15421  0334  3013               	movlw	19
 15422  0335  00DA               	movwf	___fladd@b
 15423  0336  303E               	movlw	62
 15424  0337  00A9               	movwf	___flmul@b+3
 15425  0338  3078               	movlw	120
 15426  0339  00A8               	movwf	___flmul@b+2
 15427  033A  309E               	movlw	158
 15428  033B  00A7               	movwf	___flmul@b+1
 15429  033C  3026               	movlw	38
 15430  033D  00A6               	movwf	___flmul@b
 15431  033E  0022               	movlb	2	; select bank2
 15432  033F  0851               	movf	(logf@w+3)^(0+256),w
 15433  0340  0020               	movlb	0	; select bank0
 15434  0341  00AD               	movwf	___flmul@a+3
 15435  0342  0022               	movlb	2	; select bank2
 15436  0343  0850               	movf	(logf@w+2)^(0+256),w
 15437  0344  0020               	movlb	0	; select bank0
 15438  0345  00AC               	movwf	___flmul@a+2
 15439  0346  0022               	movlb	2	; select bank2
 15440  0347  084F               	movf	(logf@w+1)^(0+256),w
 15441  0348  0020               	movlb	0	; select bank0
 15442  0349  00AB               	movwf	___flmul@a+1
 15443  034A  0022               	movlb	2	; select bank2
 15444  034B  084E               	movf	logf@w^(0+256),w
 15445  034C  0020               	movlb	0	; select bank0
 15446  034D  00AA               	movwf	___flmul@a
 15447  034E  3192  22FC  3180   	fcall	___flmul
 15448  0351  0020               	movlb	0	; select bank0
 15449  0352  0829               	movf	?___flmul+3,w
 15450  0353  00E1               	movwf	___fladd@a+3
 15451  0354  0828               	movf	?___flmul+2,w
 15452  0355  00E0               	movwf	___fladd@a+2
 15453  0356  0827               	movf	?___flmul+1,w
 15454  0357  00DF               	movwf	___fladd@a+1
 15455  0358  0826               	movf	?___flmul,w
 15456  0359  00DE               	movwf	___fladd@a
 15457  035A  3191  211A  3180   	fcall	___fladd
 15458  035D  0020               	movlb	0	; select bank0
 15459  035E  085D               	movf	?___fladd+3,w
 15460  035F  0022               	movlb	2	; select bank2
 15461  0360  00D5               	movwf	(_logf$2029+3)^(0+256)
 15462  0361  0020               	movlb	0	; select bank0
 15463  0362  085C               	movf	?___fladd+2,w
 15464  0363  0022               	movlb	2	; select bank2
 15465  0364  00D4               	movwf	(_logf$2029+2)^(0+256)
 15466  0365  0020               	movlb	0	; select bank0
 15467  0366  085B               	movf	?___fladd+1,w
 15468  0367  0022               	movlb	2	; select bank2
 15469  0368  00D3               	movwf	(_logf$2029+1)^(0+256)
 15470  0369  0020               	movlb	0	; select bank0
 15471  036A  085A               	movf	?___fladd,w
 15472  036B  0022               	movlb	2	; select bank2
 15473  036C  00D2               	movwf	_logf$2029^(0+256)
 15474  036D  0851               	movf	(logf@w+3)^(0+256),w
 15475  036E  0020               	movlb	0	; select bank0
 15476  036F  00A9               	movwf	___flmul@b+3
 15477  0370  0022               	movlb	2	; select bank2
 15478  0371  0850               	movf	(logf@w+2)^(0+256),w
 15479  0372  0020               	movlb	0	; select bank0
 15480  0373  00A8               	movwf	___flmul@b+2
 15481  0374  0022               	movlb	2	; select bank2
 15482  0375  084F               	movf	(logf@w+1)^(0+256),w
 15483  0376  0020               	movlb	0	; select bank0
 15484  0377  00A7               	movwf	___flmul@b+1
 15485  0378  0022               	movlb	2	; select bank2
 15486  0379  084E               	movf	logf@w^(0+256),w
 15487  037A  0020               	movlb	0	; select bank0
 15488  037B  00A6               	movwf	___flmul@b
 15489  037C  0022               	movlb	2	; select bank2
 15490  037D  0855               	movf	(_logf$2029+3)^(0+256),w
 15491  037E  0020               	movlb	0	; select bank0
 15492  037F  00AD               	movwf	___flmul@a+3
 15493  0380  0022               	movlb	2	; select bank2
 15494  0381  0854               	movf	(_logf$2029+2)^(0+256),w
 15495  0382  0020               	movlb	0	; select bank0
 15496  0383  00AC               	movwf	___flmul@a+2
 15497  0384  0022               	movlb	2	; select bank2
 15498  0385  0853               	movf	(_logf$2029+1)^(0+256),w
 15499  0386  0020               	movlb	0	; select bank0
 15500  0387  00AB               	movwf	___flmul@a+1
 15501  0388  0022               	movlb	2	; select bank2
 15502  0389  0852               	movf	_logf$2029^(0+256),w
 15503  038A  0020               	movlb	0	; select bank0
 15504  038B  00AA               	movwf	___flmul@a
 15505  038C  3192  22FC  3180   	fcall	___flmul
 15506  038F  0020               	movlb	0	; select bank0
 15507  0390  0829               	movf	?___flmul+3,w
 15508  0391  0022               	movlb	2	; select bank2
 15509  0392  00A7               	movwf	(logf@t1+3)^(0+256)
 15510  0393  0020               	movlb	0	; select bank0
 15511  0394  0828               	movf	?___flmul+2,w
 15512  0395  0022               	movlb	2	; select bank2
 15513  0396  00A6               	movwf	(logf@t1+2)^(0+256)
 15514  0397  0020               	movlb	0	; select bank0
 15515  0398  0827               	movf	?___flmul+1,w
 15516  0399  0022               	movlb	2	; select bank2
 15517  039A  00A5               	movwf	(logf@t1+1)^(0+256)
 15518  039B  0020               	movlb	0	; select bank0
 15519  039C  0826               	movf	?___flmul,w
 15520  039D  0022               	movlb	2	; select bank2
 15521  039E  00A4               	movwf	logf@t1^(0+256)
 15522  039F  303F               	movlw	63
 15523  03A0  0020               	movlb	0	; select bank0
 15524  03A1  00DD               	movwf	___fladd@b+3
 15525  03A2  302A               	movlw	42
 15526  03A3  00DC               	movwf	___fladd@b+2
 15527  03A4  30AA               	movlw	170
 15528  03A5  00DB               	movwf	___fladd@b+1
 15529  03A6  30AA               	movlw	170
 15530  03A7  00DA               	movwf	___fladd@b
 15531  03A8  303E               	movlw	62
 15532  03A9  00A9               	movwf	___flmul@b+3
 15533  03AA  3091               	movlw	145
 15534  03AB  00A8               	movwf	___flmul@b+2
 15535  03AC  30E9               	movlw	233
 15536  03AD  00A7               	movwf	___flmul@b+1
 15537  03AE  30EE               	movlw	238
 15538  03AF  00A6               	movwf	___flmul@b
 15539  03B0  0022               	movlb	2	; select bank2
 15540  03B1  0851               	movf	(logf@w+3)^(0+256),w
 15541  03B2  0020               	movlb	0	; select bank0
 15542  03B3  00AD               	movwf	___flmul@a+3
 15543  03B4  0022               	movlb	2	; select bank2
 15544  03B5  0850               	movf	(logf@w+2)^(0+256),w
 15545  03B6  0020               	movlb	0	; select bank0
 15546  03B7  00AC               	movwf	___flmul@a+2
 15547  03B8  0022               	movlb	2	; select bank2
 15548  03B9  084F               	movf	(logf@w+1)^(0+256),w
 15549  03BA  0020               	movlb	0	; select bank0
 15550  03BB  00AB               	movwf	___flmul@a+1
 15551  03BC  0022               	movlb	2	; select bank2
 15552  03BD  084E               	movf	logf@w^(0+256),w
 15553  03BE  0020               	movlb	0	; select bank0
 15554  03BF  00AA               	movwf	___flmul@a
 15555  03C0  3192  22FC  3180   	fcall	___flmul
 15556  03C3  0020               	movlb	0	; select bank0
 15557  03C4  0829               	movf	?___flmul+3,w
 15558  03C5  00E1               	movwf	___fladd@a+3
 15559  03C6  0828               	movf	?___flmul+2,w
 15560  03C7  00E0               	movwf	___fladd@a+2
 15561  03C8  0827               	movf	?___flmul+1,w
 15562  03C9  00DF               	movwf	___fladd@a+1
 15563  03CA  0826               	movf	?___flmul,w
 15564  03CB  00DE               	movwf	___fladd@a
 15565  03CC  3191  211A  3180   	fcall	___fladd
 15566  03CF  0020               	movlb	0	; select bank0
 15567  03D0  085D               	movf	?___fladd+3,w
 15568  03D1  0022               	movlb	2	; select bank2
 15569  03D2  00D5               	movwf	(_logf$2029+3)^(0+256)
 15570  03D3  0020               	movlb	0	; select bank0
 15571  03D4  085C               	movf	?___fladd+2,w
 15572  03D5  0022               	movlb	2	; select bank2
 15573  03D6  00D4               	movwf	(_logf$2029+2)^(0+256)
 15574  03D7  0020               	movlb	0	; select bank0
 15575  03D8  085B               	movf	?___fladd+1,w
 15576  03D9  0022               	movlb	2	; select bank2
 15577  03DA  00D3               	movwf	(_logf$2029+1)^(0+256)
 15578  03DB  0020               	movlb	0	; select bank0
 15579  03DC  085A               	movf	?___fladd,w
 15580  03DD  0022               	movlb	2	; select bank2
 15581  03DE  00D2               	movwf	_logf$2029^(0+256)
 15582  03DF  084D               	movf	(logf@z+3)^(0+256),w
 15583  03E0  0020               	movlb	0	; select bank0
 15584  03E1  00A9               	movwf	___flmul@b+3
 15585  03E2  0022               	movlb	2	; select bank2
 15586  03E3  084C               	movf	(logf@z+2)^(0+256),w
 15587  03E4  0020               	movlb	0	; select bank0
 15588  03E5  00A8               	movwf	___flmul@b+2
 15589  03E6  0022               	movlb	2	; select bank2
 15590  03E7  084B               	movf	(logf@z+1)^(0+256),w
 15591  03E8  0020               	movlb	0	; select bank0
 15592  03E9  00A7               	movwf	___flmul@b+1
 15593  03EA  0022               	movlb	2	; select bank2
 15594  03EB  084A               	movf	logf@z^(0+256),w
 15595  03EC  0020               	movlb	0	; select bank0
 15596  03ED  00A6               	movwf	___flmul@b
 15597  03EE  0022               	movlb	2	; select bank2
 15598  03EF  0855               	movf	(_logf$2029+3)^(0+256),w
 15599  03F0  0020               	movlb	0	; select bank0
 15600  03F1  00AD               	movwf	___flmul@a+3
 15601  03F2  0022               	movlb	2	; select bank2
 15602  03F3  0854               	movf	(_logf$2029+2)^(0+256),w
 15603  03F4  0020               	movlb	0	; select bank0
 15604  03F5  00AC               	movwf	___flmul@a+2
 15605  03F6  0022               	movlb	2	; select bank2
 15606  03F7  0853               	movf	(_logf$2029+1)^(0+256),w
 15607  03F8  0020               	movlb	0	; select bank0
 15608  03F9  00AB               	movwf	___flmul@a+1
 15609  03FA  0022               	movlb	2	; select bank2
 15610  03FB  0852               	movf	_logf$2029^(0+256),w
 15611  03FC  0020               	movlb	0	; select bank0
 15612  03FD  00AA               	movwf	___flmul@a
 15613  03FE  3192  22FC  3180   	fcall	___flmul
 15614  0401  0020               	movlb	0	; select bank0
 15615  0402  0829               	movf	?___flmul+3,w
 15616  0403  0022               	movlb	2	; select bank2
 15617  0404  00AB               	movwf	(logf@t2+3)^(0+256)
 15618  0405  0020               	movlb	0	; select bank0
 15619  0406  0828               	movf	?___flmul+2,w
 15620  0407  0022               	movlb	2	; select bank2
 15621  0408  00AA               	movwf	(logf@t2+2)^(0+256)
 15622  0409  0020               	movlb	0	; select bank0
 15623  040A  0827               	movf	?___flmul+1,w
 15624  040B  0022               	movlb	2	; select bank2
 15625  040C  00A9               	movwf	(logf@t2+1)^(0+256)
 15626  040D  0020               	movlb	0	; select bank0
 15627  040E  0826               	movf	?___flmul,w
 15628  040F  0022               	movlb	2	; select bank2
 15629  0410  00A8               	movwf	logf@t2^(0+256)
 15630  0411  0827               	movf	(logf@t1+3)^(0+256),w
 15631  0412  0020               	movlb	0	; select bank0
 15632  0413  00DD               	movwf	___fladd@b+3
 15633  0414  0022               	movlb	2	; select bank2
 15634  0415  0826               	movf	(logf@t1+2)^(0+256),w
 15635  0416  0020               	movlb	0	; select bank0
 15636  0417  00DC               	movwf	___fladd@b+2
 15637  0418  0022               	movlb	2	; select bank2
 15638  0419  0825               	movf	(logf@t1+1)^(0+256),w
 15639  041A  0020               	movlb	0	; select bank0
 15640  041B  00DB               	movwf	___fladd@b+1
 15641  041C  0022               	movlb	2	; select bank2
 15642  041D  0824               	movf	logf@t1^(0+256),w
 15643  041E  0020               	movlb	0	; select bank0
 15644  041F  00DA               	movwf	___fladd@b
 15645  0420  0022               	movlb	2	; select bank2
 15646  0421  082B               	movf	(logf@t2+3)^(0+256),w
 15647  0422  0020               	movlb	0	; select bank0
 15648  0423  00E1               	movwf	___fladd@a+3
 15649  0424  0022               	movlb	2	; select bank2
 15650  0425  082A               	movf	(logf@t2+2)^(0+256),w
 15651  0426  0020               	movlb	0	; select bank0
 15652  0427  00E0               	movwf	___fladd@a+2
 15653  0428  0022               	movlb	2	; select bank2
 15654  0429  0829               	movf	(logf@t2+1)^(0+256),w
 15655  042A  0020               	movlb	0	; select bank0
 15656  042B  00DF               	movwf	___fladd@a+1
 15657  042C  0022               	movlb	2	; select bank2
 15658  042D  0828               	movf	logf@t2^(0+256),w
 15659  042E  0020               	movlb	0	; select bank0
 15660  042F  00DE               	movwf	___fladd@a
 15661  0430  3191  211A  3180   	fcall	___fladd
 15662  0433  0020               	movlb	0	; select bank0
 15663  0434  085D               	movf	?___fladd+3,w
 15664  0435  0022               	movlb	2	; select bank2
 15665  0436  00A3               	movwf	(logf@R+3)^(0+256)
 15666  0437  0020               	movlb	0	; select bank0
 15667  0438  085C               	movf	?___fladd+2,w
 15668  0439  0022               	movlb	2	; select bank2
 15669  043A  00A2               	movwf	(logf@R+2)^(0+256)
 15670  043B  0020               	movlb	0	; select bank0
 15671  043C  085B               	movf	?___fladd+1,w
 15672  043D  0022               	movlb	2	; select bank2
 15673  043E  00A1               	movwf	(logf@R+1)^(0+256)
 15674  043F  0020               	movlb	0	; select bank0
 15675  0440  085A               	movf	?___fladd,w
 15676  0441  0022               	movlb	2	; select bank2
 15677  0442  00A0               	movwf	logf@R^(0+256)
 15678  0443  303F               	movlw	63
 15679  0444  0020               	movlb	0	; select bank0
 15680  0445  00A9               	movwf	___flmul@b+3
 15681  0446  3000               	movlw	0
 15682  0447  00A8               	movwf	___flmul@b+2
 15683  0448  3000               	movlw	0
 15684  0449  00A7               	movwf	___flmul@b+1
 15685  044A  3000               	movlw	0
 15686  044B  00A6               	movwf	___flmul@b
 15687  044C  0022               	movlb	2	; select bank2
 15688  044D  085D               	movf	(logf@f+3)^(0+256),w
 15689  044E  0020               	movlb	0	; select bank0
 15690  044F  00AD               	movwf	___flmul@a+3
 15691  0450  0022               	movlb	2	; select bank2
 15692  0451  085C               	movf	(logf@f+2)^(0+256),w
 15693  0452  0020               	movlb	0	; select bank0
 15694  0453  00AC               	movwf	___flmul@a+2
 15695  0454  0022               	movlb	2	; select bank2
 15696  0455  085B               	movf	(logf@f+1)^(0+256),w
 15697  0456  0020               	movlb	0	; select bank0
 15698  0457  00AB               	movwf	___flmul@a+1
 15699  0458  0022               	movlb	2	; select bank2
 15700  0459  085A               	movf	logf@f^(0+256),w
 15701  045A  0020               	movlb	0	; select bank0
 15702  045B  00AA               	movwf	___flmul@a
 15703  045C  3192  22FC  3180   	fcall	___flmul
 15704  045F  0020               	movlb	0	; select bank0
 15705  0460  0829               	movf	?___flmul+3,w
 15706  0461  0022               	movlb	2	; select bank2
 15707  0462  00D5               	movwf	(_logf$2029+3)^(0+256)
 15708  0463  0020               	movlb	0	; select bank0
 15709  0464  0828               	movf	?___flmul+2,w
 15710  0465  0022               	movlb	2	; select bank2
 15711  0466  00D4               	movwf	(_logf$2029+2)^(0+256)
 15712  0467  0020               	movlb	0	; select bank0
 15713  0468  0827               	movf	?___flmul+1,w
 15714  0469  0022               	movlb	2	; select bank2
 15715  046A  00D3               	movwf	(_logf$2029+1)^(0+256)
 15716  046B  0020               	movlb	0	; select bank0
 15717  046C  0826               	movf	?___flmul,w
 15718  046D  0022               	movlb	2	; select bank2
 15719  046E  00D2               	movwf	_logf$2029^(0+256)
 15720  046F  085D               	movf	(logf@f+3)^(0+256),w
 15721  0470  0020               	movlb	0	; select bank0
 15722  0471  00A9               	movwf	___flmul@b+3
 15723  0472  0022               	movlb	2	; select bank2
 15724  0473  085C               	movf	(logf@f+2)^(0+256),w
 15725  0474  0020               	movlb	0	; select bank0
 15726  0475  00A8               	movwf	___flmul@b+2
 15727  0476  0022               	movlb	2	; select bank2
 15728  0477  085B               	movf	(logf@f+1)^(0+256),w
 15729  0478  0020               	movlb	0	; select bank0
 15730  0479  00A7               	movwf	___flmul@b+1
 15731  047A  0022               	movlb	2	; select bank2
 15732  047B  085A               	movf	logf@f^(0+256),w
 15733  047C  0020               	movlb	0	; select bank0
 15734  047D  00A6               	movwf	___flmul@b
 15735  047E  0022               	movlb	2	; select bank2
 15736  047F  0855               	movf	(_logf$2029+3)^(0+256),w
 15737  0480  0020               	movlb	0	; select bank0
 15738  0481  00AD               	movwf	___flmul@a+3
 15739  0482  0022               	movlb	2	; select bank2
 15740  0483  0854               	movf	(_logf$2029+2)^(0+256),w
 15741  0484  0020               	movlb	0	; select bank0
 15742  0485  00AC               	movwf	___flmul@a+2
 15743  0486  0022               	movlb	2	; select bank2
 15744  0487  0853               	movf	(_logf$2029+1)^(0+256),w
 15745  0488  0020               	movlb	0	; select bank0
 15746  0489  00AB               	movwf	___flmul@a+1
 15747  048A  0022               	movlb	2	; select bank2
 15748  048B  0852               	movf	_logf$2029^(0+256),w
 15749  048C  0020               	movlb	0	; select bank0
 15750  048D  00AA               	movwf	___flmul@a
 15751  048E  3192  22FC  3180   	fcall	___flmul
 15752  0491  0020               	movlb	0	; select bank0
 15753  0492  0829               	movf	?___flmul+3,w
 15754  0493  0022               	movlb	2	; select bank2
 15755  0494  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15756  0495  0020               	movlb	0	; select bank0
 15757  0496  0828               	movf	?___flmul+2,w
 15758  0497  0022               	movlb	2	; select bank2
 15759  0498  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15760  0499  0020               	movlb	0	; select bank0
 15761  049A  0827               	movf	?___flmul+1,w
 15762  049B  0022               	movlb	2	; select bank2
 15763  049C  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15764  049D  0020               	movlb	0	; select bank0
 15765  049E  0826               	movf	?___flmul,w
 15766  049F  0022               	movlb	2	; select bank2
 15767  04A0  00BE               	movwf	logf@hfsq^(0+256)
 15768  04A1  083C               	movf	logf@k^(0+256),w
 15769  04A2  00F1               	movwf	___xxtofl@val
 15770  04A3  083D               	movf	(logf@k+1)^(0+256),w
 15771  04A4  00F2               	movwf	___xxtofl@val+1
 15772  04A5  0D89               	rlf	9,f
 15773  04A6  3B89               	subwfb	9,f
 15774  04A7  0989               	comf	9,f
 15775  04A8  00F3               	movwf	___xxtofl@val+2
 15776  04A9  00F4               	movwf	___xxtofl@val+3
 15777  04AA  3001               	movlw	1
 15778  04AB  31AE  26C9  3180   	fcall	___xxtofl
 15779  04AE  0874               	movf	?___xxtofl+3,w
 15780  04AF  0022               	movlb	2	; select bank2
 15781  04B0  00C5               	movwf	(logf@dk+3)^(0+256)
 15782  04B1  0873               	movf	?___xxtofl+2,w
 15783  04B2  00C4               	movwf	(logf@dk+2)^(0+256)
 15784  04B3  0872               	movf	?___xxtofl+1,w
 15785  04B4  00C3               	movwf	(logf@dk+1)^(0+256)
 15786  04B5  0871               	movf	?___xxtofl,w
 15787  04B6  00C2               	movwf	logf@dk^(0+256)
 15788  04B7  0849               	movf	(logf@s+3)^(0+256),w
 15789  04B8  0020               	movlb	0	; select bank0
 15790  04B9  00A9               	movwf	___flmul@b+3
 15791  04BA  0022               	movlb	2	; select bank2
 15792  04BB  0848               	movf	(logf@s+2)^(0+256),w
 15793  04BC  0020               	movlb	0	; select bank0
 15794  04BD  00A8               	movwf	___flmul@b+2
 15795  04BE  0022               	movlb	2	; select bank2
 15796  04BF  0847               	movf	(logf@s+1)^(0+256),w
 15797  04C0  0020               	movlb	0	; select bank0
 15798  04C1  00A7               	movwf	___flmul@b+1
 15799  04C2  0022               	movlb	2	; select bank2
 15800  04C3  0846               	movf	logf@s^(0+256),w
 15801  04C4  0020               	movlb	0	; select bank0
 15802  04C5  00A6               	movwf	___flmul@b
 15803  04C6  0022               	movlb	2	; select bank2
 15804  04C7  0823               	movf	(logf@R+3)^(0+256),w
 15805  04C8  0020               	movlb	0	; select bank0
 15806  04C9  00DD               	movwf	___fladd@b+3
 15807  04CA  0022               	movlb	2	; select bank2
 15808  04CB  0822               	movf	(logf@R+2)^(0+256),w
 15809  04CC  0020               	movlb	0	; select bank0
 15810  04CD  00DC               	movwf	___fladd@b+2
 15811  04CE  0022               	movlb	2	; select bank2
 15812  04CF  0821               	movf	(logf@R+1)^(0+256),w
 15813  04D0  0020               	movlb	0	; select bank0
 15814  04D1  00DB               	movwf	___fladd@b+1
 15815  04D2  0022               	movlb	2	; select bank2
 15816  04D3  0820               	movf	logf@R^(0+256),w
 15817  04D4  0020               	movlb	0	; select bank0
 15818  04D5  00DA               	movwf	___fladd@b
 15819  04D6  0022               	movlb	2	; select bank2
 15820  04D7  0841               	movf	(logf@hfsq+3)^(0+256),w
 15821  04D8  0020               	movlb	0	; select bank0
 15822  04D9  00E1               	movwf	___fladd@a+3
 15823  04DA  0022               	movlb	2	; select bank2
 15824  04DB  0840               	movf	(logf@hfsq+2)^(0+256),w
 15825  04DC  0020               	movlb	0	; select bank0
 15826  04DD  00E0               	movwf	___fladd@a+2
 15827  04DE  0022               	movlb	2	; select bank2
 15828  04DF  083F               	movf	(logf@hfsq+1)^(0+256),w
 15829  04E0  0020               	movlb	0	; select bank0
 15830  04E1  00DF               	movwf	___fladd@a+1
 15831  04E2  0022               	movlb	2	; select bank2
 15832  04E3  083E               	movf	logf@hfsq^(0+256),w
 15833  04E4  0020               	movlb	0	; select bank0
 15834  04E5  00DE               	movwf	___fladd@a
 15835  04E6  3191  211A  3180   	fcall	___fladd
 15836  04E9  0020               	movlb	0	; select bank0
 15837  04EA  085D               	movf	?___fladd+3,w
 15838  04EB  00AD               	movwf	___flmul@a+3
 15839  04EC  085C               	movf	?___fladd+2,w
 15840  04ED  00AC               	movwf	___flmul@a+2
 15841  04EE  085B               	movf	?___fladd+1,w
 15842  04EF  00AB               	movwf	___flmul@a+1
 15843  04F0  085A               	movf	?___fladd,w
 15844  04F1  00AA               	movwf	___flmul@a
 15845  04F2  3192  22FC  3180   	fcall	___flmul
 15846  04F5  0020               	movlb	0	; select bank0
 15847  04F6  0829               	movf	?___flmul+3,w
 15848  04F7  0022               	movlb	2	; select bank2
 15849  04F8  00AF               	movwf	(_logf$2030+3)^(0+256)
 15850  04F9  0020               	movlb	0	; select bank0
 15851  04FA  0828               	movf	?___flmul+2,w
 15852  04FB  0022               	movlb	2	; select bank2
 15853  04FC  00AE               	movwf	(_logf$2030+2)^(0+256)
 15854  04FD  0020               	movlb	0	; select bank0
 15855  04FE  0827               	movf	?___flmul+1,w
 15856  04FF  0022               	movlb	2	; select bank2
 15857  0500  00AD               	movwf	(_logf$2030+1)^(0+256)
 15858  0501  0020               	movlb	0	; select bank0
 15859  0502  0826               	movf	?___flmul,w
 15860  0503  0022               	movlb	2	; select bank2
 15861  0504  00AC               	movwf	_logf$2030^(0+256)
 15862  0505  3037               	movlw	55
 15863  0506  0020               	movlb	0	; select bank0
 15864  0507  00A9               	movwf	___flmul@b+3
 15865  0508  3017               	movlw	23
 15866  0509  00A8               	movwf	___flmul@b+2
 15867  050A  30F7               	movlw	247
 15868  050B  00A7               	movwf	___flmul@b+1
 15869  050C  30D1               	movlw	209
 15870  050D  00A6               	movwf	___flmul@b
 15871  050E  0022               	movlb	2	; select bank2
 15872  050F  0845               	movf	(logf@dk+3)^(0+256),w
 15873  0510  0020               	movlb	0	; select bank0
 15874  0511  00AD               	movwf	___flmul@a+3
 15875  0512  0022               	movlb	2	; select bank2
 15876  0513  0844               	movf	(logf@dk+2)^(0+256),w
 15877  0514  0020               	movlb	0	; select bank0
 15878  0515  00AC               	movwf	___flmul@a+2
 15879  0516  0022               	movlb	2	; select bank2
 15880  0517  0843               	movf	(logf@dk+1)^(0+256),w
 15881  0518  0020               	movlb	0	; select bank0
 15882  0519  00AB               	movwf	___flmul@a+1
 15883  051A  0022               	movlb	2	; select bank2
 15884  051B  0842               	movf	logf@dk^(0+256),w
 15885  051C  0020               	movlb	0	; select bank0
 15886  051D  00AA               	movwf	___flmul@a
 15887  051E  3192  22FC  3180   	fcall	___flmul
 15888  0521  0020               	movlb	0	; select bank0
 15889  0522  0829               	movf	?___flmul+3,w
 15890  0523  00DD               	movwf	___fladd@b+3
 15891  0524  0828               	movf	?___flmul+2,w
 15892  0525  00DC               	movwf	___fladd@b+2
 15893  0526  0827               	movf	?___flmul+1,w
 15894  0527  00DB               	movwf	___fladd@b+1
 15895  0528  0826               	movf	?___flmul,w
 15896  0529  00DA               	movwf	___fladd@b
 15897  052A  0022               	movlb	2	; select bank2
 15898  052B  082F               	movf	(_logf$2030+3)^(0+256),w
 15899  052C  0020               	movlb	0	; select bank0
 15900  052D  00E1               	movwf	___fladd@a+3
 15901  052E  0022               	movlb	2	; select bank2
 15902  052F  082E               	movf	(_logf$2030+2)^(0+256),w
 15903  0530  0020               	movlb	0	; select bank0
 15904  0531  00E0               	movwf	___fladd@a+2
 15905  0532  0022               	movlb	2	; select bank2
 15906  0533  082D               	movf	(_logf$2030+1)^(0+256),w
 15907  0534  0020               	movlb	0	; select bank0
 15908  0535  00DF               	movwf	___fladd@a+1
 15909  0536  0022               	movlb	2	; select bank2
 15910  0537  082C               	movf	_logf$2030^(0+256),w
 15911  0538  0020               	movlb	0	; select bank0
 15912  0539  00DE               	movwf	___fladd@a
 15913  053A  3191  211A  3180   	fcall	___fladd
 15914  053D  0020               	movlb	0	; select bank0
 15915  053E  085D               	movf	?___fladd+3,w
 15916  053F  0022               	movlb	2	; select bank2
 15917  0540  00B3               	movwf	(_logf$2031+3)^(0+256)
 15918  0541  0020               	movlb	0	; select bank0
 15919  0542  085C               	movf	?___fladd+2,w
 15920  0543  0022               	movlb	2	; select bank2
 15921  0544  00B2               	movwf	(_logf$2031+2)^(0+256)
 15922  0545  0020               	movlb	0	; select bank0
 15923  0546  085B               	movf	?___fladd+1,w
 15924  0547  0022               	movlb	2	; select bank2
 15925  0548  00B1               	movwf	(_logf$2031+1)^(0+256)
 15926  0549  0020               	movlb	0	; select bank0
 15927  054A  085A               	movf	?___fladd,w
 15928  054B  0022               	movlb	2	; select bank2
 15929  054C  00B0               	movwf	_logf$2031^(0+256)
 15930  054D  0841               	movf	(logf@hfsq+3)^(0+256),w
 15931  054E  0021               	movlb	1	; select bank1
 15932  054F  00A3               	movwf	(___flsub@a+3)^(0+128)
 15933  0550  0022               	movlb	2	; select bank2
 15934  0551  0840               	movf	(logf@hfsq+2)^(0+256),w
 15935  0552  0021               	movlb	1	; select bank1
 15936  0553  00A2               	movwf	(___flsub@a+2)^(0+128)
 15937  0554  0022               	movlb	2	; select bank2
 15938  0555  083F               	movf	(logf@hfsq+1)^(0+256),w
 15939  0556  0021               	movlb	1	; select bank1
 15940  0557  00A1               	movwf	(___flsub@a+1)^(0+128)
 15941  0558  0022               	movlb	2	; select bank2
 15942  0559  083E               	movf	logf@hfsq^(0+256),w
 15943  055A  0021               	movlb	1	; select bank1
 15944  055B  00A0               	movwf	___flsub@a^(0+128)
 15945  055C  0022               	movlb	2	; select bank2
 15946  055D  0833               	movf	(_logf$2031+3)^(0+256),w
 15947  055E  0021               	movlb	1	; select bank1
 15948  055F  00A7               	movwf	(___flsub@b+3)^(0+128)
 15949  0560  0022               	movlb	2	; select bank2
 15950  0561  0832               	movf	(_logf$2031+2)^(0+256),w
 15951  0562  0021               	movlb	1	; select bank1
 15952  0563  00A6               	movwf	(___flsub@b+2)^(0+128)
 15953  0564  0022               	movlb	2	; select bank2
 15954  0565  0831               	movf	(_logf$2031+1)^(0+256),w
 15955  0566  0021               	movlb	1	; select bank1
 15956  0567  00A5               	movwf	(___flsub@b+1)^(0+128)
 15957  0568  0022               	movlb	2	; select bank2
 15958  0569  0830               	movf	_logf$2031^(0+256),w
 15959  056A  0021               	movlb	1	; select bank1
 15960  056B  00A4               	movwf	___flsub@b^(0+128)
 15961  056C  31A9  21C5  3180   	fcall	___flsub
 15962  056F  0021               	movlb	1	; select bank1
 15963  0570  0823               	movf	(?___flsub+3)^(0+128),w
 15964  0571  0022               	movlb	2	; select bank2
 15965  0572  00B7               	movwf	(_logf$2032+3)^(0+256)
 15966  0573  0021               	movlb	1	; select bank1
 15967  0574  0822               	movf	(?___flsub+2)^(0+128),w
 15968  0575  0022               	movlb	2	; select bank2
 15969  0576  00B6               	movwf	(_logf$2032+2)^(0+256)
 15970  0577  0021               	movlb	1	; select bank1
 15971  0578  0821               	movf	(?___flsub+1)^(0+128),w
 15972  0579  0022               	movlb	2	; select bank2
 15973  057A  00B5               	movwf	(_logf$2032+1)^(0+256)
 15974  057B  0021               	movlb	1	; select bank1
 15975  057C  0820               	movf	?___flsub^(0+128),w
 15976  057D  0022               	movlb	2	; select bank2
 15977  057E  00B4               	movwf	_logf$2032^(0+256)
 15978  057F  085D               	movf	(logf@f+3)^(0+256),w
 15979  0580  0020               	movlb	0	; select bank0
 15980  0581  00DD               	movwf	___fladd@b+3
 15981  0582  0022               	movlb	2	; select bank2
 15982  0583  085C               	movf	(logf@f+2)^(0+256),w
 15983  0584  0020               	movlb	0	; select bank0
 15984  0585  00DC               	movwf	___fladd@b+2
 15985  0586  0022               	movlb	2	; select bank2
 15986  0587  085B               	movf	(logf@f+1)^(0+256),w
 15987  0588  0020               	movlb	0	; select bank0
 15988  0589  00DB               	movwf	___fladd@b+1
 15989  058A  0022               	movlb	2	; select bank2
 15990  058B  085A               	movf	logf@f^(0+256),w
 15991  058C  0020               	movlb	0	; select bank0
 15992  058D  00DA               	movwf	___fladd@b
 15993  058E  0022               	movlb	2	; select bank2
 15994  058F  0837               	movf	(_logf$2032+3)^(0+256),w
 15995  0590  0020               	movlb	0	; select bank0
 15996  0591  00E1               	movwf	___fladd@a+3
 15997  0592  0022               	movlb	2	; select bank2
 15998  0593  0836               	movf	(_logf$2032+2)^(0+256),w
 15999  0594  0020               	movlb	0	; select bank0
 16000  0595  00E0               	movwf	___fladd@a+2
 16001  0596  0022               	movlb	2	; select bank2
 16002  0597  0835               	movf	(_logf$2032+1)^(0+256),w
 16003  0598  0020               	movlb	0	; select bank0
 16004  0599  00DF               	movwf	___fladd@a+1
 16005  059A  0022               	movlb	2	; select bank2
 16006  059B  0834               	movf	_logf$2032^(0+256),w
 16007  059C  0020               	movlb	0	; select bank0
 16008  059D  00DE               	movwf	___fladd@a
 16009  059E  3191  211A  3180   	fcall	___fladd
 16010  05A1  0020               	movlb	0	; select bank0
 16011  05A2  085D               	movf	?___fladd+3,w
 16012  05A3  0022               	movlb	2	; select bank2
 16013  05A4  00BB               	movwf	(_logf$2033+3)^(0+256)
 16014  05A5  0020               	movlb	0	; select bank0
 16015  05A6  085C               	movf	?___fladd+2,w
 16016  05A7  0022               	movlb	2	; select bank2
 16017  05A8  00BA               	movwf	(_logf$2033+2)^(0+256)
 16018  05A9  0020               	movlb	0	; select bank0
 16019  05AA  085B               	movf	?___fladd+1,w
 16020  05AB  0022               	movlb	2	; select bank2
 16021  05AC  00B9               	movwf	(_logf$2033+1)^(0+256)
 16022  05AD  0020               	movlb	0	; select bank0
 16023  05AE  085A               	movf	?___fladd,w
 16024  05AF  0022               	movlb	2	; select bank2
 16025  05B0  00B8               	movwf	_logf$2033^(0+256)
 16026  05B1  303F               	movlw	63
 16027  05B2  0020               	movlb	0	; select bank0
 16028  05B3  00A9               	movwf	___flmul@b+3
 16029  05B4  3031               	movlw	49
 16030  05B5  00A8               	movwf	___flmul@b+2
 16031  05B6  3071               	movlw	113
 16032  05B7  00A7               	movwf	___flmul@b+1
 16033  05B8  3080               	movlw	128
 16034  05B9  00A6               	movwf	___flmul@b
 16035  05BA  0022               	movlb	2	; select bank2
 16036  05BB  0845               	movf	(logf@dk+3)^(0+256),w
 16037  05BC  0020               	movlb	0	; select bank0
 16038  05BD  00AD               	movwf	___flmul@a+3
 16039  05BE  0022               	movlb	2	; select bank2
 16040  05BF  0844               	movf	(logf@dk+2)^(0+256),w
 16041  05C0  0020               	movlb	0	; select bank0
 16042  05C1  00AC               	movwf	___flmul@a+2
 16043  05C2  0022               	movlb	2	; select bank2
 16044  05C3  0843               	movf	(logf@dk+1)^(0+256),w
 16045  05C4  0020               	movlb	0	; select bank0
 16046  05C5  00AB               	movwf	___flmul@a+1
 16047  05C6  0022               	movlb	2	; select bank2
 16048  05C7  0842               	movf	logf@dk^(0+256),w
 16049  05C8  0020               	movlb	0	; select bank0
 16050  05C9  00AA               	movwf	___flmul@a
 16051  05CA  3192  22FC  3180   	fcall	___flmul
 16052  05CD  0020               	movlb	0	; select bank0
 16053  05CE  0829               	movf	?___flmul+3,w
 16054  05CF  00DD               	movwf	___fladd@b+3
 16055  05D0  0828               	movf	?___flmul+2,w
 16056  05D1  00DC               	movwf	___fladd@b+2
 16057  05D2  0827               	movf	?___flmul+1,w
 16058  05D3  00DB               	movwf	___fladd@b+1
 16059  05D4  0826               	movf	?___flmul,w
 16060  05D5  00DA               	movwf	___fladd@b
 16061  05D6  0022               	movlb	2	; select bank2
 16062  05D7  083B               	movf	(_logf$2033+3)^(0+256),w
 16063  05D8  0020               	movlb	0	; select bank0
 16064  05D9  00E1               	movwf	___fladd@a+3
 16065  05DA  0022               	movlb	2	; select bank2
 16066  05DB  083A               	movf	(_logf$2033+2)^(0+256),w
 16067  05DC  0020               	movlb	0	; select bank0
 16068  05DD  00E0               	movwf	___fladd@a+2
 16069  05DE  0022               	movlb	2	; select bank2
 16070  05DF  0839               	movf	(_logf$2033+1)^(0+256),w
 16071  05E0  0020               	movlb	0	; select bank0
 16072  05E1  00DF               	movwf	___fladd@a+1
 16073  05E2  0022               	movlb	2	; select bank2
 16074  05E3  0838               	movf	_logf$2033^(0+256),w
 16075  05E4  0020               	movlb	0	; select bank0
 16076  05E5  00DE               	movwf	___fladd@a
 16077  05E6  3191  211A         	fcall	___fladd
 16078  05E8  0020               	movlb	0	; select bank0
 16079  05E9  085D               	movf	?___fladd+3,w
 16080  05EA  0021               	movlb	1	; select bank1
 16081  05EB  00AB               	movwf	(?_logf+3)^(0+128)
 16082  05EC  0020               	movlb	0	; select bank0
 16083  05ED  085C               	movf	?___fladd+2,w
 16084  05EE  0021               	movlb	1	; select bank1
 16085  05EF  00AA               	movwf	(?_logf+2)^(0+128)
 16086  05F0  0020               	movlb	0	; select bank0
 16087  05F1  085B               	movf	?___fladd+1,w
 16088  05F2  0021               	movlb	1	; select bank1
 16089  05F3  00A9               	movwf	(?_logf+1)^(0+128)
 16090  05F4  0020               	movlb	0	; select bank0
 16091  05F5  085A               	movf	?___fladd,w
 16092  05F6  0021               	movlb	1	; select bank1
 16093  05F7  00A8               	movwf	?_logf^(0+128)
 16094  05F8  0008               	return
 16095  05F9                     __end_of_logf:	
 16096                           
 16097                           	psect	text60
 16098  2EC9                     __ptext60:	
 16099 ;; *************** function ___xxtofl *****************
 16100 ;; Defined at:
 16101 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 16102 ;; Parameters:    Size  Location     Type
 16103 ;;  sign            1    wreg     unsigned char 
 16104 ;;  val             4    1[COMMON] long 
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  sign            1    0[BANK0 ] unsigned char 
 16107 ;;  arg             4    2[BANK0 ] unsigned long 
 16108 ;;  exp             1    1[BANK0 ] unsigned char 
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  4    1[COMMON] unsigned char 
 16111 ;; Registers used:
 16112 ;;		wreg, status,2, status,0
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16119 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16121 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16122 ;;Total ram usage:       14 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:    1
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		_setShortCircuitProtection
 16129 ;;		_setOverCurrentDischargeProtection
 16130 ;;		_updateVoltages
 16131 ;;		_updateTemperatures
 16132 ;;		_logf
 16133 ;;		_updateCurrent
 16134 ;;		_AFE_getSetShortCircuitCurrent
 16135 ;;		_AFE_getOverCurrentDischargeCurrent
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           
 16140                           ;psect for function ___xxtofl
 16141  2EC9                     ___xxtofl:	
 16142                           
 16143                           ;incstack = 0
 16144                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16145                           ;___xxtofl@sign stored from wreg
 16146  2EC9  0020               	movlb	0	; select bank0
 16147  2ECA  00A0               	movwf	___xxtofl@sign
 16148  2ECB  0820               	movf	___xxtofl@sign,w
 16149  2ECC  1D03               	btfss	3,2
 16150  2ECD  1FF4               	btfss	___xxtofl@val+3,7
 16151  2ECE  2EDF               	goto	l7573
 16152  2ECF  0971               	comf	___xxtofl@val,w
 16153  2ED0  00A2               	movwf	___xxtofl@arg
 16154  2ED1  0972               	comf	___xxtofl@val+1,w
 16155  2ED2  00A3               	movwf	___xxtofl@arg+1
 16156  2ED3  0973               	comf	___xxtofl@val+2,w
 16157  2ED4  00A4               	movwf	___xxtofl@arg+2
 16158  2ED5  0974               	comf	___xxtofl@val+3,w
 16159  2ED6  00A5               	movwf	___xxtofl@arg+3
 16160  2ED7  0AA2               	incf	___xxtofl@arg,f
 16161  2ED8  1903               	skipnz
 16162  2ED9  0AA3               	incf	___xxtofl@arg+1,f
 16163  2EDA  1903               	skipnz
 16164  2EDB  0AA4               	incf	___xxtofl@arg+2,f
 16165  2EDC  1903               	skipnz
 16166  2EDD  0AA5               	incf	___xxtofl@arg+3,f
 16167  2EDE  2EE7               	goto	l1263
 16168  2EDF                     l7573:	
 16169  2EDF  0874               	movf	___xxtofl@val+3,w
 16170  2EE0  00A5               	movwf	___xxtofl@arg+3
 16171  2EE1  0873               	movf	___xxtofl@val+2,w
 16172  2EE2  00A4               	movwf	___xxtofl@arg+2
 16173  2EE3  0872               	movf	___xxtofl@val+1,w
 16174  2EE4  00A3               	movwf	___xxtofl@arg+1
 16175  2EE5  0871               	movf	___xxtofl@val,w
 16176  2EE6  00A2               	movwf	___xxtofl@arg
 16177  2EE7                     l1263:	
 16178  2EE7  0874               	movf	___xxtofl@val+3,w
 16179  2EE8  0473               	iorwf	___xxtofl@val+2,w
 16180  2EE9  0472               	iorwf	___xxtofl@val+1,w
 16181  2EEA  0471               	iorwf	___xxtofl@val,w
 16182  2EEB  1D03               	skipz
 16183  2EEC  2EF6               	goto	l7579
 16184  2EED  3000               	movlw	0
 16185  2EEE  00F4               	movwf	?___xxtofl+3
 16186  2EEF  3000               	movlw	0
 16187  2EF0  00F3               	movwf	?___xxtofl+2
 16188  2EF1  3000               	movlw	0
 16189  2EF2  00F2               	movwf	?___xxtofl+1
 16190  2EF3  3000               	movlw	0
 16191  2EF4  00F1               	movwf	?___xxtofl
 16192  2EF5  0008               	return
 16193  2EF6                     l7579:	
 16194  2EF6  3096               	movlw	150
 16195  2EF7  00F5               	movwf	??___xxtofl
 16196  2EF8  0875               	movf	??___xxtofl,w
 16197  2EF9  00A1               	movwf	___xxtofl@exp
 16198  2EFA                     l7583:	
 16199  2EFA  30FE               	movlw	254
 16200  2EFB  0525               	andwf	___xxtofl@arg+3,w
 16201  2EFC  1903               	btfsc	3,2
 16202  2EFD  2F1D               	goto	l1269
 16203  2EFE  3001               	movlw	1
 16204  2EFF  00F5               	movwf	??___xxtofl
 16205  2F00  0875               	movf	??___xxtofl,w
 16206  2F01  07A1               	addwf	___xxtofl@exp,f
 16207  2F02  3001               	movlw	1
 16208  2F03                     u10525:	
 16209  2F03  36A5               	lsrf	___xxtofl@arg+3,f
 16210  2F04  0CA4               	rrf	___xxtofl@arg+2,f
 16211  2F05  0CA3               	rrf	___xxtofl@arg+1,f
 16212  2F06  0CA2               	rrf	___xxtofl@arg,f
 16213  2F07  0B89               	decfsz	9,f
 16214  2F08  2F03               	goto	u10525
 16215  2F09  2EFA               	goto	l7583
 16216  2F0A                     l7585:	
 16217  2F0A  3001               	movlw	1
 16218  2F0B  00F5               	movwf	??___xxtofl
 16219  2F0C  0875               	movf	??___xxtofl,w
 16220  2F0D  07A1               	addwf	___xxtofl@exp,f
 16221  2F0E  3001               	movlw	1
 16222  2F0F  07A2               	addwf	___xxtofl@arg,f
 16223  2F10  3000               	movlw	0
 16224  2F11  3DA3               	addwfc	___xxtofl@arg+1,f
 16225  2F12  3000               	movlw	0
 16226  2F13  3DA4               	addwfc	___xxtofl@arg+2,f
 16227  2F14  3000               	movlw	0
 16228  2F15  3DA5               	addwfc	___xxtofl@arg+3,f
 16229  2F16  3001               	movlw	1
 16230  2F17                     u10545:	
 16231  2F17  36A5               	lsrf	___xxtofl@arg+3,f
 16232  2F18  0CA4               	rrf	___xxtofl@arg+2,f
 16233  2F19  0CA3               	rrf	___xxtofl@arg+1,f
 16234  2F1A  0CA2               	rrf	___xxtofl@arg,f
 16235  2F1B  0B89               	decfsz	9,f
 16236  2F1C  2F17               	goto	u10545
 16237  2F1D                     l1269:	
 16238  2F1D  30FF               	movlw	255
 16239  2F1E  0525               	andwf	___xxtofl@arg+3,w
 16240  2F1F  1903               	btfsc	3,2
 16241  2F20  2F2F               	goto	l7593
 16242  2F21  2F0A               	goto	l7585
 16243  2F22                     l7595:	
 16244  2F22  3002               	movlw	2
 16245  2F23  0221               	subwf	___xxtofl@exp,w
 16246  2F24  1C03               	btfss	3,0
 16247  2F25  2F31               	goto	l1276
 16248  2F26  3001               	movlw	1
 16249  2F27  02A1               	subwf	___xxtofl@exp,f
 16250  2F28  3001               	movlw	1
 16251  2F29                     u10565:	
 16252  2F29  35A2               	lslf	___xxtofl@arg,f
 16253  2F2A  0DA3               	rlf	___xxtofl@arg+1,f
 16254  2F2B  0DA4               	rlf	___xxtofl@arg+2,f
 16255  2F2C  0DA5               	rlf	___xxtofl@arg+3,f
 16256  2F2D  0B89               	decfsz	9,f
 16257  2F2E  2F29               	goto	u10565
 16258  2F2F                     l7593:	
 16259  2F2F  1FA4               	btfss	___xxtofl@arg+2,7
 16260  2F30  2F22               	goto	l7595
 16261  2F31                     l1276:	
 16262  2F31  1821               	btfsc	___xxtofl@exp,0
 16263  2F32  2F3B               	goto	l1277
 16264  2F33  30FF               	movlw	255
 16265  2F34  05A2               	andwf	___xxtofl@arg,f
 16266  2F35  30FF               	movlw	255
 16267  2F36  05A3               	andwf	___xxtofl@arg+1,f
 16268  2F37  307F               	movlw	127
 16269  2F38  05A4               	andwf	___xxtofl@arg+2,f
 16270  2F39  30FF               	movlw	255
 16271  2F3A  05A5               	andwf	___xxtofl@arg+3,f
 16272  2F3B                     l1277:	
 16273  2F3B  1003               	clrc
 16274  2F3C  0CA1               	rrf	___xxtofl@exp,f
 16275  2F3D  0821               	movf	___xxtofl@exp,w
 16276  2F3E  00F5               	movwf	??___xxtofl
 16277  2F3F  01F6               	clrf	??___xxtofl+1
 16278  2F40  01F7               	clrf	??___xxtofl+2
 16279  2F41  01F8               	clrf	??___xxtofl+3
 16280  2F42  3018               	movlw	24
 16281  2F43                     u10605:	
 16282  2F43  35F5               	lslf	??___xxtofl,f
 16283  2F44  0DF6               	rlf	??___xxtofl+1,f
 16284  2F45  0DF7               	rlf	??___xxtofl+2,f
 16285  2F46  0DF8               	rlf	??___xxtofl+3,f
 16286  2F47  0B89               	decfsz	9,f
 16287  2F48  2F43               	goto	u10605
 16288  2F49  0875               	movf	??___xxtofl,w
 16289  2F4A  04A2               	iorwf	___xxtofl@arg,f
 16290  2F4B  0876               	movf	??___xxtofl+1,w
 16291  2F4C  04A3               	iorwf	___xxtofl@arg+1,f
 16292  2F4D  0877               	movf	??___xxtofl+2,w
 16293  2F4E  04A4               	iorwf	___xxtofl@arg+2,f
 16294  2F4F  0878               	movf	??___xxtofl+3,w
 16295  2F50  04A5               	iorwf	___xxtofl@arg+3,f
 16296  2F51  0820               	movf	___xxtofl@sign,w
 16297  2F52  1D03               	btfss	3,2
 16298  2F53  1FF4               	btfss	___xxtofl@val+3,7
 16299  2F54  2F56               	goto	l7607
 16300  2F55  17A5               	bsf	___xxtofl@arg+3,7
 16301  2F56                     l7607:	
 16302  2F56  0825               	movf	___xxtofl@arg+3,w
 16303  2F57  00F4               	movwf	?___xxtofl+3
 16304  2F58  0824               	movf	___xxtofl@arg+2,w
 16305  2F59  00F3               	movwf	?___xxtofl+2
 16306  2F5A  0823               	movf	___xxtofl@arg+1,w
 16307  2F5B  00F2               	movwf	?___xxtofl+1
 16308  2F5C  0822               	movf	___xxtofl@arg,w
 16309  2F5D  00F1               	movwf	?___xxtofl
 16310  2F5E  0008               	return
 16311  2F5F                     __end_of___xxtofl:	
 16312                           
 16313                           	psect	text61
 16314  29C5                     __ptext61:	
 16315 ;; *************** function ___flsub *****************
 16316 ;; Defined at:
 16317 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;  a               4    0[BANK1 ] unsigned char 
 16320 ;;  b               4    4[BANK1 ] unsigned char 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;		None
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  4    0[BANK1 ] unsigned char 
 16325 ;; Registers used:
 16326 ;;		wreg, status,2, status,0, pclath, cstack
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16332 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16335 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16336 ;;Total ram usage:        8 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; Hardware stack levels required when called:    2
 16339 ;; This function calls:
 16340 ;;		___fladd
 16341 ;; This function is called by:
 16342 ;;		_updateTemperatures
 16343 ;;		_logf
 16344 ;; This function uses a non-reentrant model
 16345 ;;
 16346                           
 16347                           
 16348                           ;psect for function ___flsub
 16349  29C5                     ___flsub:	
 16350                           
 16351                           ;incstack = 0
 16352                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16353  29C5  3080               	movlw	128
 16354  29C6  0021               	movlb	1	; select bank1
 16355  29C7  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16356  29C8  0827               	movf	(___flsub@b+3)^(0+128),w
 16357  29C9  0020               	movlb	0	; select bank0
 16358  29CA  00DD               	movwf	___fladd@b+3
 16359  29CB  0021               	movlb	1	; select bank1
 16360  29CC  0826               	movf	(___flsub@b+2)^(0+128),w
 16361  29CD  0020               	movlb	0	; select bank0
 16362  29CE  00DC               	movwf	___fladd@b+2
 16363  29CF  0021               	movlb	1	; select bank1
 16364  29D0  0825               	movf	(___flsub@b+1)^(0+128),w
 16365  29D1  0020               	movlb	0	; select bank0
 16366  29D2  00DB               	movwf	___fladd@b+1
 16367  29D3  0021               	movlb	1	; select bank1
 16368  29D4  0824               	movf	___flsub@b^(0+128),w
 16369  29D5  0020               	movlb	0	; select bank0
 16370  29D6  00DA               	movwf	___fladd@b
 16371  29D7  0021               	movlb	1	; select bank1
 16372  29D8  0823               	movf	(___flsub@a+3)^(0+128),w
 16373  29D9  0020               	movlb	0	; select bank0
 16374  29DA  00E1               	movwf	___fladd@a+3
 16375  29DB  0021               	movlb	1	; select bank1
 16376  29DC  0822               	movf	(___flsub@a+2)^(0+128),w
 16377  29DD  0020               	movlb	0	; select bank0
 16378  29DE  00E0               	movwf	___fladd@a+2
 16379  29DF  0021               	movlb	1	; select bank1
 16380  29E0  0821               	movf	(___flsub@a+1)^(0+128),w
 16381  29E1  0020               	movlb	0	; select bank0
 16382  29E2  00DF               	movwf	___fladd@a+1
 16383  29E3  0021               	movlb	1	; select bank1
 16384  29E4  0820               	movf	___flsub@a^(0+128),w
 16385  29E5  0020               	movlb	0	; select bank0
 16386  29E6  00DE               	movwf	___fladd@a
 16387  29E7  3191  211A         	fcall	___fladd
 16388  29E9  0020               	movlb	0	; select bank0
 16389  29EA  085D               	movf	?___fladd+3,w
 16390  29EB  0021               	movlb	1	; select bank1
 16391  29EC  00A3               	movwf	(?___flsub+3)^(0+128)
 16392  29ED  0020               	movlb	0	; select bank0
 16393  29EE  085C               	movf	?___fladd+2,w
 16394  29EF  0021               	movlb	1	; select bank1
 16395  29F0  00A2               	movwf	(?___flsub+2)^(0+128)
 16396  29F1  0020               	movlb	0	; select bank0
 16397  29F2  085B               	movf	?___fladd+1,w
 16398  29F3  0021               	movlb	1	; select bank1
 16399  29F4  00A1               	movwf	(?___flsub+1)^(0+128)
 16400  29F5  0020               	movlb	0	; select bank0
 16401  29F6  085A               	movf	?___fladd,w
 16402  29F7  0021               	movlb	1	; select bank1
 16403  29F8  00A0               	movwf	?___flsub^(0+128)
 16404  29F9  0008               	return
 16405  29FA                     __end_of___flsub:	
 16406                           
 16407                           	psect	text62
 16408  111A                     __ptext62:	
 16409 ;; *************** function ___fladd *****************
 16410 ;; Defined at:
 16411 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;  b               4   58[BANK0 ] unsigned char 
 16414 ;;  a               4   62[BANK0 ] unsigned char 
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  grs             1   77[BANK0 ] unsigned char 
 16417 ;;  bexp            1   76[BANK0 ] unsigned char 
 16418 ;;  aexp            1   75[BANK0 ] unsigned char 
 16419 ;;  signs           1   74[BANK0 ] unsigned char 
 16420 ;; Return value:  Size  Location     Type
 16421 ;;                  4   58[BANK0 ] unsigned char 
 16422 ;; Registers used:
 16423 ;;		wreg, status,2, status,0
 16424 ;; Tracked objects:
 16425 ;;		On entry : 0/0
 16426 ;;		On exit  : 0/0
 16427 ;;		Unchanged: 0/0
 16428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16431 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16432 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16433 ;;Total ram usage:       20 bytes
 16434 ;; Hardware stack levels used:    1
 16435 ;; Hardware stack levels required when called:    1
 16436 ;; This function calls:
 16437 ;;		Nothing
 16438 ;; This function is called by:
 16439 ;;		_updateVoltages
 16440 ;;		_updateTemperatures
 16441 ;;		___flsub
 16442 ;;		_logf
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           
 16447                           ;psect for function ___fladd
 16448  111A                     ___fladd:	
 16449                           
 16450                           ;incstack = 0
 16451                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16452  111A  0020               	movlb	0	; select bank0
 16453  111B  085D               	movf	___fladd@b+3,w
 16454  111C  3980               	andlw	128
 16455  111D  00E2               	movwf	??___fladd
 16456  111E  0862               	movf	??___fladd,w
 16457  111F  00EA               	movwf	___fladd@signs
 16458  1120  355D               	lslf	___fladd@b+3,w
 16459  1121  00E2               	movwf	??___fladd
 16460  1122  0862               	movf	??___fladd,w
 16461  1123  00EC               	movwf	___fladd@bexp
 16462  1124  1BDC               	btfsc	___fladd@b+2,7
 16463  1125  146C               	bsf	___fladd@bexp,0
 16464  1126  086C               	movf	___fladd@bexp,w
 16465  1127  1903               	btfsc	3,2
 16466  1128  2937               	goto	l7059
 16467  1129  0A6C               	incf	___fladd@bexp,w
 16468  112A  1D03               	btfss	3,2
 16469  112B  2934               	goto	l7055
 16470  112C  3000               	movlw	0
 16471  112D  00DD               	movwf	___fladd@b+3
 16472  112E  3000               	movlw	0
 16473  112F  00DC               	movwf	___fladd@b+2
 16474  1130  3000               	movlw	0
 16475  1131  00DB               	movwf	___fladd@b+1
 16476  1132  3000               	movlw	0
 16477  1133  00DA               	movwf	___fladd@b
 16478  1134                     l7055:	
 16479  1134  17DC               	bsf	___fladd@b+2,7
 16480  1135  01DD               	clrf	___fladd@b+3
 16481  1136  293F               	goto	l7061
 16482  1137                     l7059:	
 16483  1137  3000               	movlw	0
 16484  1138  00DD               	movwf	___fladd@b+3
 16485  1139  3000               	movlw	0
 16486  113A  00DC               	movwf	___fladd@b+2
 16487  113B  3000               	movlw	0
 16488  113C  00DB               	movwf	___fladd@b+1
 16489  113D  3000               	movlw	0
 16490  113E  00DA               	movwf	___fladd@b
 16491  113F                     l7061:	
 16492  113F  0861               	movf	___fladd@a+3,w
 16493  1140  3980               	andlw	128
 16494  1141  00E2               	movwf	??___fladd
 16495  1142  0862               	movf	??___fladd,w
 16496  1143  00EB               	movwf	___fladd@aexp
 16497  1144  086B               	movf	___fladd@aexp,w
 16498  1145  066A               	xorwf	___fladd@signs,w
 16499  1146  1D03               	btfss	3,2
 16500  1147  176A               	bsf	___fladd@signs,6
 16501  1148  3561               	lslf	___fladd@a+3,w
 16502  1149  00E2               	movwf	??___fladd
 16503  114A  0862               	movf	??___fladd,w
 16504  114B  00EB               	movwf	___fladd@aexp
 16505  114C  1BE0               	btfsc	___fladd@a+2,7
 16506  114D  146B               	bsf	___fladd@aexp,0
 16507  114E  086B               	movf	___fladd@aexp,w
 16508  114F  1903               	btfsc	3,2
 16509  1150  295F               	goto	l7083
 16510  1151  0A6B               	incf	___fladd@aexp,w
 16511  1152  1D03               	btfss	3,2
 16512  1153  295C               	goto	l7079
 16513  1154  3000               	movlw	0
 16514  1155  00E1               	movwf	___fladd@a+3
 16515  1156  3000               	movlw	0
 16516  1157  00E0               	movwf	___fladd@a+2
 16517  1158  3000               	movlw	0
 16518  1159  00DF               	movwf	___fladd@a+1
 16519  115A  3000               	movlw	0
 16520  115B  00DE               	movwf	___fladd@a
 16521  115C                     l7079:	
 16522  115C  17E0               	bsf	___fladd@a+2,7
 16523  115D  01E1               	clrf	___fladd@a+3
 16524  115E  2967               	goto	l1129
 16525  115F                     l7083:	
 16526  115F  3000               	movlw	0
 16527  1160  00E1               	movwf	___fladd@a+3
 16528  1161  3000               	movlw	0
 16529  1162  00E0               	movwf	___fladd@a+2
 16530  1163  3000               	movlw	0
 16531  1164  00DF               	movwf	___fladd@a+1
 16532  1165  3000               	movlw	0
 16533  1166  00DE               	movwf	___fladd@a
 16534  1167                     l1129:	
 16535  1167  086C               	movf	___fladd@bexp,w
 16536  1168  026B               	subwf	___fladd@aexp,w
 16537  1169  1803               	skipnc
 16538  116A  29AD               	goto	l7119
 16539  116B  1F6A               	btfss	___fladd@signs,6
 16540  116C  2971               	goto	l7089
 16541  116D  3080               	movlw	128
 16542  116E  00E2               	movwf	??___fladd
 16543  116F  0862               	movf	??___fladd,w
 16544  1170  06EA               	xorwf	___fladd@signs,f
 16545  1171                     l7089:	
 16546  1171  086C               	movf	___fladd@bexp,w
 16547  1172  00E2               	movwf	??___fladd
 16548  1173  0862               	movf	??___fladd,w
 16549  1174  00ED               	movwf	___fladd@grs
 16550  1175  086B               	movf	___fladd@aexp,w
 16551  1176  00E2               	movwf	??___fladd
 16552  1177  0862               	movf	??___fladd,w
 16553  1178  00EC               	movwf	___fladd@bexp
 16554  1179  086D               	movf	___fladd@grs,w
 16555  117A  00E2               	movwf	??___fladd
 16556  117B  0862               	movf	??___fladd,w
 16557  117C  00EB               	movwf	___fladd@aexp
 16558  117D  085A               	movf	___fladd@b,w
 16559  117E  00E2               	movwf	??___fladd
 16560  117F  0862               	movf	??___fladd,w
 16561  1180  00ED               	movwf	___fladd@grs
 16562  1181  085E               	movf	___fladd@a,w
 16563  1182  00E2               	movwf	??___fladd
 16564  1183  0862               	movf	??___fladd,w
 16565  1184  00DA               	movwf	___fladd@b
 16566  1185  086D               	movf	___fladd@grs,w
 16567  1186  00E2               	movwf	??___fladd
 16568  1187  0862               	movf	??___fladd,w
 16569  1188  00DE               	movwf	___fladd@a
 16570  1189  085B               	movf	___fladd@b+1,w
 16571  118A  00E2               	movwf	??___fladd
 16572  118B  0862               	movf	??___fladd,w
 16573  118C  00ED               	movwf	___fladd@grs
 16574  118D  085F               	movf	___fladd@a+1,w
 16575  118E  00E2               	movwf	??___fladd
 16576  118F  0862               	movf	??___fladd,w
 16577  1190  00DB               	movwf	___fladd@b+1
 16578  1191  086D               	movf	___fladd@grs,w
 16579  1192  00E2               	movwf	??___fladd
 16580  1193  0862               	movf	??___fladd,w
 16581  1194  00DF               	movwf	___fladd@a+1
 16582  1195  085C               	movf	___fladd@b+2,w
 16583  1196  00E2               	movwf	??___fladd
 16584  1197  0862               	movf	??___fladd,w
 16585  1198  00ED               	movwf	___fladd@grs
 16586  1199  0860               	movf	___fladd@a+2,w
 16587  119A  00E2               	movwf	??___fladd
 16588  119B  0862               	movf	??___fladd,w
 16589  119C  00DC               	movwf	___fladd@b+2
 16590  119D  086D               	movf	___fladd@grs,w
 16591  119E  00E2               	movwf	??___fladd
 16592  119F  0862               	movf	??___fladd,w
 16593  11A0  00E0               	movwf	___fladd@a+2
 16594  11A1  085D               	movf	___fladd@b+3,w
 16595  11A2  00E2               	movwf	??___fladd
 16596  11A3  0862               	movf	??___fladd,w
 16597  11A4  00ED               	movwf	___fladd@grs
 16598  11A5  0861               	movf	___fladd@a+3,w
 16599  11A6  00E2               	movwf	??___fladd
 16600  11A7  0862               	movf	??___fladd,w
 16601  11A8  00DD               	movwf	___fladd@b+3
 16602  11A9  086D               	movf	___fladd@grs,w
 16603  11AA  00E2               	movwf	??___fladd
 16604  11AB  0862               	movf	??___fladd,w
 16605  11AC  00E1               	movwf	___fladd@a+3
 16606  11AD                     l7119:	
 16607  11AD  01ED               	clrf	___fladd@grs
 16608  11AE  086B               	movf	___fladd@aexp,w
 16609  11AF  00E2               	movwf	??___fladd
 16610  11B0  01E3               	clrf	??___fladd+1
 16611  11B1  0863               	movf	??___fladd+1,w
 16612  11B2  00E5               	movwf	??___fladd+3
 16613  11B3  086C               	movf	___fladd@bexp,w
 16614  11B4  0262               	subwf	??___fladd,w
 16615  11B5  00E4               	movwf	??___fladd+2
 16616  11B6  1C03               	skipc
 16617  11B7  03E5               	decf	??___fladd+3,f
 16618  11B8  0865               	movf	??___fladd+3,w
 16619  11B9  3A80               	xorlw	128
 16620  11BA  00E6               	movwf	??___fladd+4
 16621  11BB  3080               	movlw	128
 16622  11BC  0266               	subwf	??___fladd+4,w
 16623  11BD  1D03               	skipz
 16624  11BE  29C1               	goto	u9505
 16625  11BF  301A               	movlw	26
 16626  11C0  0264               	subwf	??___fladd+2,w
 16627  11C1                     u9505:	
 16628  11C1  1C03               	skipc
 16629  11C2  29F5               	goto	l7137
 16630  11C3  0020               	movlb	0	; select bank0
 16631  11C4  085D               	movf	___fladd@b+3,w
 16632  11C5  045C               	iorwf	___fladd@b+2,w
 16633  11C6  045B               	iorwf	___fladd@b+1,w
 16634  11C7  045A               	iorwf	___fladd@b,w
 16635  11C8  1903               	btfsc	3,2
 16636  11C9  29CC               	goto	u9510
 16637  11CA  3001               	movlw	1
 16638  11CB  29CD               	goto	u9520
 16639  11CC                     u9510:	
 16640  11CC  3000               	movlw	0
 16641  11CD                     u9520:	
 16642  11CD  00E2               	movwf	??___fladd
 16643  11CE  0862               	movf	??___fladd,w
 16644  11CF  00ED               	movwf	___fladd@grs
 16645  11D0  3000               	movlw	0
 16646  11D1  00DD               	movwf	___fladd@b+3
 16647  11D2  3000               	movlw	0
 16648  11D3  00DC               	movwf	___fladd@b+2
 16649  11D4  3000               	movlw	0
 16650  11D5  00DB               	movwf	___fladd@b+1
 16651  11D6  3000               	movlw	0
 16652  11D7  00DA               	movwf	___fladd@b
 16653  11D8  086B               	movf	___fladd@aexp,w
 16654  11D9  00E2               	movwf	??___fladd
 16655  11DA  0862               	movf	??___fladd,w
 16656  11DB  00EC               	movwf	___fladd@bexp
 16657  11DC  29FA               	goto	l1133
 16658  11DD                     l1135:	
 16659  11DD  1C6D               	btfss	___fladd@grs,0
 16660  11DE  29E5               	goto	l7127
 16661  11DF  366D               	lsrf	___fladd@grs,w
 16662  11E0  3801               	iorlw	1
 16663  11E1  00E2               	movwf	??___fladd
 16664  11E2  0862               	movf	??___fladd,w
 16665  11E3  00ED               	movwf	___fladd@grs
 16666  11E4  29E7               	goto	l7129
 16667  11E5                     l7127:	
 16668  11E5  1003               	clrc
 16669  11E6  0CED               	rrf	___fladd@grs,f
 16670  11E7                     l7129:	
 16671  11E7  185A               	btfsc	___fladd@b,0
 16672  11E8  17ED               	bsf	___fladd@grs,7
 16673  11E9  3001               	movlw	1
 16674  11EA  00E2               	movwf	??___fladd
 16675  11EB                     u9555:	
 16676  11EB  37DD               	asrf	___fladd@b+3,f
 16677  11EC  0CDC               	rrf	___fladd@b+2,f
 16678  11ED  0CDB               	rrf	___fladd@b+1,f
 16679  11EE  0CDA               	rrf	___fladd@b,f
 16680  11EF  0BE2               	decfsz	??___fladd& (0+127),f
 16681  11F0  29EB               	goto	u9555
 16682  11F1  3001               	movlw	1
 16683  11F2  00E2               	movwf	??___fladd
 16684  11F3  0862               	movf	??___fladd,w
 16685  11F4  07EC               	addwf	___fladd@bexp,f
 16686  11F5                     l7137:	
 16687  11F5  0020               	movlb	0	; select bank0
 16688  11F6  086B               	movf	___fladd@aexp,w
 16689  11F7  026C               	subwf	___fladd@bexp,w
 16690  11F8  1C03               	skipc
 16691  11F9  29DD               	goto	l1135
 16692  11FA                     l1133:	
 16693  11FA  1B6A               	btfsc	___fladd@signs,6
 16694  11FB  2A2B               	goto	l7163
 16695  11FC  086C               	movf	___fladd@bexp,w
 16696  11FD  1D03               	btfss	3,2
 16697  11FE  2A08               	goto	l7145
 16698  11FF  3000               	movlw	0
 16699  1200  00DD               	movwf	?___fladd+3
 16700  1201  3000               	movlw	0
 16701  1202  00DC               	movwf	?___fladd+2
 16702  1203  3000               	movlw	0
 16703  1204  00DB               	movwf	?___fladd+1
 16704  1205  3000               	movlw	0
 16705  1206  00DA               	movwf	?___fladd
 16706  1207  0008               	return
 16707  1208                     l7145:	
 16708  1208  085E               	movf	___fladd@a,w
 16709  1209  07DA               	addwf	___fladd@b,f
 16710  120A  085F               	movf	___fladd@a+1,w
 16711  120B  3DDB               	addwfc	___fladd@b+1,f
 16712  120C  0860               	movf	___fladd@a+2,w
 16713  120D  3DDC               	addwfc	___fladd@b+2,f
 16714  120E  0861               	movf	___fladd@a+3,w
 16715  120F  3DDD               	addwfc	___fladd@b+3,f
 16716  1210  1C5D               	btfss	___fladd@b+3,0
 16717  1211  2AA5               	goto	l7197
 16718  1212  1C6D               	btfss	___fladd@grs,0
 16719  1213  2A1A               	goto	l7153
 16720  1214  366D               	lsrf	___fladd@grs,w
 16721  1215  3801               	iorlw	1
 16722  1216  00E2               	movwf	??___fladd
 16723  1217  0862               	movf	??___fladd,w
 16724  1218  00ED               	movwf	___fladd@grs
 16725  1219  2A1C               	goto	l7155
 16726  121A                     l7153:	
 16727  121A  1003               	clrc
 16728  121B  0CED               	rrf	___fladd@grs,f
 16729  121C                     l7155:	
 16730  121C  185A               	btfsc	___fladd@b,0
 16731  121D  17ED               	bsf	___fladd@grs,7
 16732  121E  3001               	movlw	1
 16733  121F  00E2               	movwf	??___fladd
 16734  1220                     u9625:	
 16735  1220  37DD               	asrf	___fladd@b+3,f
 16736  1221  0CDC               	rrf	___fladd@b+2,f
 16737  1222  0CDB               	rrf	___fladd@b+1,f
 16738  1223  0CDA               	rrf	___fladd@b,f
 16739  1224  0BE2               	decfsz	??___fladd& (0+127),f
 16740  1225  2A20               	goto	u9625
 16741  1226  3001               	movlw	1
 16742  1227  00E2               	movwf	??___fladd
 16743  1228  0862               	movf	??___fladd,w
 16744  1229  07EC               	addwf	___fladd@bexp,f
 16745  122A  2AA5               	goto	l7197
 16746  122B                     l7163:	
 16747  122B  085D               	movf	___fladd@b+3,w
 16748  122C  3A80               	xorlw	128
 16749  122D  00E2               	movwf	??___fladd
 16750  122E  0861               	movf	___fladd@a+3,w
 16751  122F  3A80               	xorlw	128
 16752  1230  0262               	subwf	??___fladd,w
 16753  1231  1D03               	skipz
 16754  1232  2A3D               	goto	u9633
 16755  1233  0860               	movf	___fladd@a+2,w
 16756  1234  025C               	subwf	___fladd@b+2,w
 16757  1235  1D03               	skipz
 16758  1236  2A3D               	goto	u9633
 16759  1237  085F               	movf	___fladd@a+1,w
 16760  1238  025B               	subwf	___fladd@b+1,w
 16761  1239  1D03               	skipz
 16762  123A  2A3D               	goto	u9633
 16763  123B  085E               	movf	___fladd@a,w
 16764  123C  025A               	subwf	___fladd@b,w
 16765  123D                     u9633:	
 16766  123D  1803               	skipnc
 16767  123E  2A75               	goto	l7173
 16768  123F  30FF               	movlw	255
 16769  1240  00E2               	movwf	??___fladd
 16770  1241  30FF               	movlw	255
 16771  1242  00E3               	movwf	??___fladd+1
 16772  1243  30FF               	movlw	255
 16773  1244  00E4               	movwf	??___fladd+2
 16774  1245  30FF               	movlw	255
 16775  1246  00E5               	movwf	??___fladd+3
 16776  1247  085A               	movf	___fladd@b,w
 16777  1248  025E               	subwf	___fladd@a,w
 16778  1249  00E6               	movwf	??___fladd+4
 16779  124A  085B               	movf	___fladd@b+1,w
 16780  124B  3B5F               	subwfb	___fladd@a+1,w
 16781  124C  00E7               	movwf	??___fladd+5
 16782  124D  085C               	movf	___fladd@b+2,w
 16783  124E  3B60               	subwfb	___fladd@a+2,w
 16784  124F  00E8               	movwf	??___fladd+6
 16785  1250  085D               	movf	___fladd@b+3,w
 16786  1251  3B61               	subwfb	___fladd@a+3,w
 16787  1252  00E9               	movwf	??___fladd+7
 16788  1253  0866               	movf	??___fladd+4,w
 16789  1254  07E2               	addwf	??___fladd,f
 16790  1255  0867               	movf	??___fladd+5,w
 16791  1256  3DE3               	addwfc	??___fladd+1,f
 16792  1257  0868               	movf	??___fladd+6,w
 16793  1258  3DE4               	addwfc	??___fladd+2,f
 16794  1259  0869               	movf	??___fladd+7,w
 16795  125A  3DE5               	addwfc	??___fladd+3,f
 16796  125B  0865               	movf	??___fladd+3,w
 16797  125C  00DD               	movwf	___fladd@b+3
 16798  125D  0864               	movf	??___fladd+2,w
 16799  125E  00DC               	movwf	___fladd@b+2
 16800  125F  0863               	movf	??___fladd+1,w
 16801  1260  00DB               	movwf	___fladd@b+1
 16802  1261  0862               	movf	??___fladd,w
 16803  1262  00DA               	movwf	___fladd@b
 16804  1263  3080               	movlw	128
 16805  1264  00E2               	movwf	??___fladd
 16806  1265  0862               	movf	??___fladd,w
 16807  1266  06EA               	xorwf	___fladd@signs,f
 16808  1267  09ED               	comf	___fladd@grs,f
 16809  1268  0AED               	incf	___fladd@grs,f
 16810  1269  086D               	movf	___fladd@grs,w
 16811  126A  1D03               	btfss	3,2
 16812  126B  2A7D               	goto	l1150
 16813  126C  3001               	movlw	1
 16814  126D  07DA               	addwf	___fladd@b,f
 16815  126E  3000               	movlw	0
 16816  126F  3DDB               	addwfc	___fladd@b+1,f
 16817  1270  3000               	movlw	0
 16818  1271  3DDC               	addwfc	___fladd@b+2,f
 16819  1272  3000               	movlw	0
 16820  1273  3DDD               	addwfc	___fladd@b+3,f
 16821  1274  2A7D               	goto	l1150
 16822  1275                     l7173:	
 16823  1275  085E               	movf	___fladd@a,w
 16824  1276  02DA               	subwf	___fladd@b,f
 16825  1277  085F               	movf	___fladd@a+1,w
 16826  1278  3BDB               	subwfb	___fladd@b+1,f
 16827  1279  0860               	movf	___fladd@a+2,w
 16828  127A  3BDC               	subwfb	___fladd@b+2,f
 16829  127B  0861               	movf	___fladd@a+3,w
 16830  127C  3BDD               	subwfb	___fladd@b+3,f
 16831  127D                     l1150:	
 16832  127D  085D               	movf	___fladd@b+3,w
 16833  127E  045C               	iorwf	___fladd@b+2,w
 16834  127F  045B               	iorwf	___fladd@b+1,w
 16835  1280  045A               	iorwf	___fladd@b,w
 16836  1281  1D03               	skipz
 16837  1282  2AA3               	goto	l7195
 16838  1283  086D               	movf	___fladd@grs,w
 16839  1284  1D03               	btfss	3,2
 16840  1285  2AA3               	goto	l7195
 16841  1286  3000               	movlw	0
 16842  1287  00DD               	movwf	?___fladd+3
 16843  1288  3000               	movlw	0
 16844  1289  00DC               	movwf	?___fladd+2
 16845  128A  3000               	movlw	0
 16846  128B  00DB               	movwf	?___fladd+1
 16847  128C  3000               	movlw	0
 16848  128D  00DA               	movwf	?___fladd
 16849  128E  0008               	return
 16850  128F                     l7181:	
 16851  128F  3001               	movlw	1
 16852  1290                     u9675:	
 16853  1290  35DA               	lslf	___fladd@b,f
 16854  1291  0DDB               	rlf	___fladd@b+1,f
 16855  1292  0DDC               	rlf	___fladd@b+2,f
 16856  1293  0DDD               	rlf	___fladd@b+3,f
 16857  1294  0B89               	decfsz	9,f
 16858  1295  2A90               	goto	u9675
 16859  1296  1BED               	btfsc	___fladd@grs,7
 16860  1297  145A               	bsf	___fladd@b,0
 16861  1298  1C6D               	btfss	___fladd@grs,0
 16862  1299  2A9C               	goto	l7189
 16863  129A  1403               	setc
 16864  129B  2A9D               	goto	L4
 16865  129C                     l7189:	
 16866  129C  1003               	clrc
 16867  129D                     L4:	
 16868  129D  0DED               	rlf	___fladd@grs,f
 16869  129E  086C               	movf	___fladd@bexp,w
 16870  129F  1903               	btfsc	3,2
 16871  12A0  2AA3               	goto	l7195
 16872  12A1  3001               	movlw	1
 16873  12A2  02EC               	subwf	___fladd@bexp,f
 16874  12A3                     l7195:	
 16875  12A3  1FDC               	btfss	___fladd@b+2,7
 16876  12A4  2A8F               	goto	l7181
 16877  12A5                     l7197:	
 16878  12A5  01EB               	clrf	___fladd@aexp
 16879  12A6  1FED               	btfss	___fladd@grs,7
 16880  12A7  2AB0               	goto	l7207
 16881  12A8  086D               	movf	___fladd@grs,w
 16882  12A9  397F               	andlw	127
 16883  12AA  1903               	btfsc	3,2
 16884  12AB  185A               	btfsc	___fladd@b,0
 16885  12AC  2AAE               	goto	l7203
 16886  12AD  2AB0               	goto	l7207
 16887  12AE                     l7203:	
 16888  12AE  01EB               	clrf	___fladd@aexp
 16889  12AF  0AEB               	incf	___fladd@aexp,f
 16890  12B0                     l7207:	
 16891  12B0  086B               	movf	___fladd@aexp,w
 16892  12B1  1903               	btfsc	3,2
 16893  12B2  2ADC               	goto	l1163
 16894  12B3  3001               	movlw	1
 16895  12B4  07DA               	addwf	___fladd@b,f
 16896  12B5  3000               	movlw	0
 16897  12B6  3DDB               	addwfc	___fladd@b+1,f
 16898  12B7  3000               	movlw	0
 16899  12B8  3DDC               	addwfc	___fladd@b+2,f
 16900  12B9  3000               	movlw	0
 16901  12BA  3DDD               	addwfc	___fladd@b+3,f
 16902  12BB  1C5D               	btfss	___fladd@b+3,0
 16903  12BC  2ADC               	goto	l1163
 16904  12BD  085A               	movf	___fladd@b,w
 16905  12BE  00E2               	movwf	??___fladd
 16906  12BF  085B               	movf	___fladd@b+1,w
 16907  12C0  00E3               	movwf	??___fladd+1
 16908  12C1  085C               	movf	___fladd@b+2,w
 16909  12C2  00E4               	movwf	??___fladd+2
 16910  12C3  085D               	movf	___fladd@b+3,w
 16911  12C4  00E5               	movwf	??___fladd+3
 16912  12C5  3001               	movlw	1
 16913  12C6  00E6               	movwf	??___fladd+4
 16914  12C7                     u9775:	
 16915  12C7  37E5               	asrf	??___fladd+3,f
 16916  12C8  0CE4               	rrf	??___fladd+2,f
 16917  12C9  0CE3               	rrf	??___fladd+1,f
 16918  12CA  0CE2               	rrf	??___fladd,f
 16919  12CB  0BE6               	decfsz	??___fladd+4,f
 16920  12CC  2AC7               	goto	u9775
 16921  12CD  0865               	movf	??___fladd+3,w
 16922  12CE  00DD               	movwf	___fladd@b+3
 16923  12CF  0864               	movf	??___fladd+2,w
 16924  12D0  00DC               	movwf	___fladd@b+2
 16925  12D1  0863               	movf	??___fladd+1,w
 16926  12D2  00DB               	movwf	___fladd@b+1
 16927  12D3  0862               	movf	??___fladd,w
 16928  12D4  00DA               	movwf	___fladd@b
 16929  12D5  0A6C               	incf	___fladd@bexp,w
 16930  12D6  1903               	btfsc	3,2
 16931  12D7  2ADC               	goto	l1163
 16932  12D8  3001               	movlw	1
 16933  12D9  00E2               	movwf	??___fladd
 16934  12DA  0862               	movf	??___fladd,w
 16935  12DB  07EC               	addwf	___fladd@bexp,f
 16936  12DC                     l1163:	
 16937  12DC  0A6C               	incf	___fladd@bexp,w
 16938  12DD  1D03               	btfss	3,2
 16939  12DE  086C               	movf	___fladd@bexp,w
 16940  12DF  1D03               	btfss	3,2
 16941  12E0  2AEC               	goto	l7225
 16942  12E1  3000               	movlw	0
 16943  12E2  00DD               	movwf	___fladd@b+3
 16944  12E3  3000               	movlw	0
 16945  12E4  00DC               	movwf	___fladd@b+2
 16946  12E5  3000               	movlw	0
 16947  12E6  00DB               	movwf	___fladd@b+1
 16948  12E7  3000               	movlw	0
 16949  12E8  00DA               	movwf	___fladd@b
 16950  12E9  086C               	movf	___fladd@bexp,w
 16951  12EA  1903               	btfsc	3,2
 16952  12EB  01EA               	clrf	___fladd@signs
 16953  12EC                     l7225:	
 16954  12EC  1C6C               	btfss	___fladd@bexp,0
 16955  12ED  2AF0               	goto	l7229
 16956  12EE  17DC               	bsf	___fladd@b+2,7
 16957  12EF  2AF4               	goto	l1171
 16958  12F0                     l7229:	
 16959  12F0  307F               	movlw	127
 16960  12F1  00E2               	movwf	??___fladd
 16961  12F2  0862               	movf	??___fladd,w
 16962  12F3  05DC               	andwf	___fladd@b+2,f
 16963  12F4                     l1171:	
 16964  12F4  366C               	lsrf	___fladd@bexp,w
 16965  12F5  00E2               	movwf	??___fladd
 16966  12F6  0862               	movf	??___fladd,w
 16967  12F7  00DD               	movwf	___fladd@b+3
 16968  12F8  1FEA               	btfss	___fladd@signs,7
 16969  12F9  0008               	return
 16970  12FA  17DD               	bsf	___fladd@b+3,7
 16971  12FB  0008               	return
 16972  12FC                     __end_of___fladd:	
 16973                           
 16974                           	psect	text63
 16975  12FC                     __ptext63:	
 16976 ;; *************** function ___flmul *****************
 16977 ;; Defined at:
 16978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;  b               4    6[BANK0 ] unsigned char 
 16981 ;;  a               4   10[BANK0 ] unsigned char 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  prod            4   26[BANK0 ] struct .
 16984 ;;  grs             4   21[BANK0 ] unsigned long 
 16985 ;;  temp            2   30[BANK0 ] struct .
 16986 ;;  bexp            1   25[BANK0 ] unsigned char 
 16987 ;;  aexp            1   20[BANK0 ] unsigned char 
 16988 ;;  sign            1   19[BANK0 ] unsigned char 
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  4    6[BANK0 ] unsigned char 
 16991 ;; Registers used:
 16992 ;;		wreg, status,2, status,0, pclath, cstack
 16993 ;; Tracked objects:
 16994 ;;		On entry : 0/0
 16995 ;;		On exit  : 0/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16998 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16999 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17000 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17001 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17002 ;;Total ram usage:       26 bytes
 17003 ;; Hardware stack levels used:    1
 17004 ;; Hardware stack levels required when called:    2
 17005 ;; This function calls:
 17006 ;;		__Umul8_16
 17007 ;; This function is called by:
 17008 ;;		_setShortCircuitProtection
 17009 ;;		_setOverCurrentDischargeProtection
 17010 ;;		_updateVoltages
 17011 ;;		_updateTemperatures
 17012 ;;		_logf
 17013 ;;		_updateCurrent
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           
 17018                           ;psect for function ___flmul
 17019  12FC                     ___flmul:	
 17020                           
 17021                           ;incstack = 0
 17022                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17023  12FC  0020               	movlb	0	; select bank0
 17024  12FD  0829               	movf	___flmul@b+3,w
 17025  12FE  3980               	andlw	128
 17026  12FF  00AE               	movwf	??___flmul
 17027  1300  082E               	movf	??___flmul,w
 17028  1301  00B3               	movwf	___flmul@sign
 17029  1302  3529               	lslf	___flmul@b+3,w
 17030  1303  00AE               	movwf	??___flmul
 17031  1304  082E               	movf	??___flmul,w
 17032  1305  00B9               	movwf	___flmul@bexp
 17033  1306  1BA8               	btfsc	___flmul@b+2,7
 17034  1307  1439               	bsf	___flmul@bexp,0
 17035  1308  0839               	movf	___flmul@bexp,w
 17036  1309  1903               	btfsc	3,2
 17037  130A  2B18               	goto	l7443
 17038  130B  0A39               	incf	___flmul@bexp,w
 17039  130C  1D03               	btfss	3,2
 17040  130D  2B16               	goto	l7441
 17041  130E  3000               	movlw	0
 17042  130F  00A9               	movwf	___flmul@b+3
 17043  1310  3000               	movlw	0
 17044  1311  00A8               	movwf	___flmul@b+2
 17045  1312  3000               	movlw	0
 17046  1313  00A7               	movwf	___flmul@b+1
 17047  1314  3000               	movlw	0
 17048  1315  00A6               	movwf	___flmul@b
 17049  1316                     l7441:	
 17050  1316  17A8               	bsf	___flmul@b+2,7
 17051  1317  2B20               	goto	l7445
 17052  1318                     l7443:	
 17053  1318  3000               	movlw	0
 17054  1319  00A9               	movwf	___flmul@b+3
 17055  131A  3000               	movlw	0
 17056  131B  00A8               	movwf	___flmul@b+2
 17057  131C  3000               	movlw	0
 17058  131D  00A7               	movwf	___flmul@b+1
 17059  131E  3000               	movlw	0
 17060  131F  00A6               	movwf	___flmul@b
 17061  1320                     l7445:	
 17062  1320  082D               	movf	___flmul@a+3,w
 17063  1321  3980               	andlw	128
 17064  1322  00AE               	movwf	??___flmul
 17065  1323  082E               	movf	??___flmul,w
 17066  1324  06B3               	xorwf	___flmul@sign,f
 17067  1325  352D               	lslf	___flmul@a+3,w
 17068  1326  00AE               	movwf	??___flmul
 17069  1327  082E               	movf	??___flmul,w
 17070  1328  00B4               	movwf	___flmul@aexp
 17071  1329  1BAC               	btfsc	___flmul@a+2,7
 17072  132A  1434               	bsf	___flmul@aexp,0
 17073  132B  0834               	movf	___flmul@aexp,w
 17074  132C  1903               	btfsc	3,2
 17075  132D  2B3B               	goto	l7461
 17076  132E  0A34               	incf	___flmul@aexp,w
 17077  132F  1D03               	btfss	3,2
 17078  1330  2B39               	goto	l7459
 17079  1331  3000               	movlw	0
 17080  1332  00AD               	movwf	___flmul@a+3
 17081  1333  3000               	movlw	0
 17082  1334  00AC               	movwf	___flmul@a+2
 17083  1335  3000               	movlw	0
 17084  1336  00AB               	movwf	___flmul@a+1
 17085  1337  3000               	movlw	0
 17086  1338  00AA               	movwf	___flmul@a
 17087  1339                     l7459:	
 17088  1339  17AC               	bsf	___flmul@a+2,7
 17089  133A  2B43               	goto	l7463
 17090  133B                     l7461:	
 17091  133B  3000               	movlw	0
 17092  133C  00AD               	movwf	___flmul@a+3
 17093  133D  3000               	movlw	0
 17094  133E  00AC               	movwf	___flmul@a+2
 17095  133F  3000               	movlw	0
 17096  1340  00AB               	movwf	___flmul@a+1
 17097  1341  3000               	movlw	0
 17098  1342  00AA               	movwf	___flmul@a
 17099  1343                     l7463:	
 17100  1343  0834               	movf	___flmul@aexp,w
 17101  1344  1D03               	btfss	3,2
 17102  1345  0839               	movf	___flmul@bexp,w
 17103  1346  1D03               	btfss	3,2
 17104  1347  2B51               	goto	l7471
 17105  1348  3000               	movlw	0
 17106  1349  00A9               	movwf	?___flmul+3
 17107  134A  3000               	movlw	0
 17108  134B  00A8               	movwf	?___flmul+2
 17109  134C  3000               	movlw	0
 17110  134D  00A7               	movwf	?___flmul+1
 17111  134E  3000               	movlw	0
 17112  134F  00A6               	movwf	?___flmul
 17113  1350  0008               	return
 17114  1351                     l7471:	
 17115  1351  0826               	movf	___flmul@b,w
 17116  1352  00AE               	movwf	??___flmul
 17117  1353  082E               	movf	??___flmul,w
 17118  1354  00F1               	movwf	__Umul8_16@multiplicand
 17119  1355  082C               	movf	___flmul@a+2,w
 17120  1356  31A8  207B  3192   	fcall	__Umul8_16
 17121  1359  0872               	movf	?__Umul8_16+1,w
 17122  135A  0020               	movlb	0	; select bank0
 17123  135B  00BF               	movwf	___flmul@temp+1
 17124  135C  0871               	movf	?__Umul8_16,w
 17125  135D  00BE               	movwf	___flmul@temp
 17126  135E  083E               	movf	___flmul@temp,w
 17127  135F  00AE               	movwf	??___flmul
 17128  1360  01AF               	clrf	??___flmul+1
 17129  1361  01B0               	clrf	??___flmul+2
 17130  1362  01B1               	clrf	??___flmul+3
 17131  1363  0831               	movf	??___flmul+3,w
 17132  1364  00B8               	movwf	___flmul@grs+3
 17133  1365  0830               	movf	??___flmul+2,w
 17134  1366  00B7               	movwf	___flmul@grs+2
 17135  1367  082F               	movf	??___flmul+1,w
 17136  1368  00B6               	movwf	___flmul@grs+1
 17137  1369  082E               	movf	??___flmul,w
 17138  136A  00B5               	movwf	___flmul@grs
 17139  136B  083F               	movf	___flmul@temp+1,w
 17140  136C  00AE               	movwf	??___flmul
 17141  136D  01AF               	clrf	??___flmul+1
 17142  136E  01B0               	clrf	??___flmul+2
 17143  136F  01B1               	clrf	??___flmul+3
 17144  1370  0831               	movf	??___flmul+3,w
 17145  1371  00BD               	movwf	___flmul@prod+3
 17146  1372  0830               	movf	??___flmul+2,w
 17147  1373  00BC               	movwf	___flmul@prod+2
 17148  1374  082F               	movf	??___flmul+1,w
 17149  1375  00BB               	movwf	___flmul@prod+1
 17150  1376  082E               	movf	??___flmul,w
 17151  1377  00BA               	movwf	___flmul@prod
 17152  1378  0827               	movf	___flmul@b+1,w
 17153  1379  00AE               	movwf	??___flmul
 17154  137A  082E               	movf	??___flmul,w
 17155  137B  00F1               	movwf	__Umul8_16@multiplicand
 17156  137C  082B               	movf	___flmul@a+1,w
 17157  137D  31A8  207B  3192   	fcall	__Umul8_16
 17158  1380  0872               	movf	?__Umul8_16+1,w
 17159  1381  0020               	movlb	0	; select bank0
 17160  1382  00BF               	movwf	___flmul@temp+1
 17161  1383  0871               	movf	?__Umul8_16,w
 17162  1384  00BE               	movwf	___flmul@temp
 17163  1385  083E               	movf	___flmul@temp,w
 17164  1386  00AE               	movwf	??___flmul
 17165  1387  01AF               	clrf	??___flmul+1
 17166  1388  01B0               	clrf	??___flmul+2
 17167  1389  01B1               	clrf	??___flmul+3
 17168  138A  082E               	movf	??___flmul,w
 17169  138B  07B5               	addwf	___flmul@grs,f
 17170  138C  082F               	movf	??___flmul+1,w
 17171  138D  3DB6               	addwfc	___flmul@grs+1,f
 17172  138E  0830               	movf	??___flmul+2,w
 17173  138F  3DB7               	addwfc	___flmul@grs+2,f
 17174  1390  0831               	movf	??___flmul+3,w
 17175  1391  3DB8               	addwfc	___flmul@grs+3,f
 17176  1392  083F               	movf	___flmul@temp+1,w
 17177  1393  00AE               	movwf	??___flmul
 17178  1394  01AF               	clrf	??___flmul+1
 17179  1395  01B0               	clrf	??___flmul+2
 17180  1396  01B1               	clrf	??___flmul+3
 17181  1397  082E               	movf	??___flmul,w
 17182  1398  07BA               	addwf	___flmul@prod,f
 17183  1399  082F               	movf	??___flmul+1,w
 17184  139A  3DBB               	addwfc	___flmul@prod+1,f
 17185  139B  0830               	movf	??___flmul+2,w
 17186  139C  3DBC               	addwfc	___flmul@prod+2,f
 17187  139D  0831               	movf	??___flmul+3,w
 17188  139E  3DBD               	addwfc	___flmul@prod+3,f
 17189  139F  0828               	movf	___flmul@b+2,w
 17190  13A0  00AE               	movwf	??___flmul
 17191  13A1  082E               	movf	??___flmul,w
 17192  13A2  00F1               	movwf	__Umul8_16@multiplicand
 17193  13A3  082A               	movf	___flmul@a,w
 17194  13A4  31A8  207B  3192   	fcall	__Umul8_16
 17195  13A7  0872               	movf	?__Umul8_16+1,w
 17196  13A8  0020               	movlb	0	; select bank0
 17197  13A9  00BF               	movwf	___flmul@temp+1
 17198  13AA  0871               	movf	?__Umul8_16,w
 17199  13AB  00BE               	movwf	___flmul@temp
 17200  13AC  083E               	movf	___flmul@temp,w
 17201  13AD  00AE               	movwf	??___flmul
 17202  13AE  01AF               	clrf	??___flmul+1
 17203  13AF  01B0               	clrf	??___flmul+2
 17204  13B0  01B1               	clrf	??___flmul+3
 17205  13B1  082E               	movf	??___flmul,w
 17206  13B2  07B5               	addwf	___flmul@grs,f
 17207  13B3  082F               	movf	??___flmul+1,w
 17208  13B4  3DB6               	addwfc	___flmul@grs+1,f
 17209  13B5  0830               	movf	??___flmul+2,w
 17210  13B6  3DB7               	addwfc	___flmul@grs+2,f
 17211  13B7  0831               	movf	??___flmul+3,w
 17212  13B8  3DB8               	addwfc	___flmul@grs+3,f
 17213  13B9  083F               	movf	___flmul@temp+1,w
 17214  13BA  00AE               	movwf	??___flmul
 17215  13BB  01AF               	clrf	??___flmul+1
 17216  13BC  01B0               	clrf	??___flmul+2
 17217  13BD  01B1               	clrf	??___flmul+3
 17218  13BE  082E               	movf	??___flmul,w
 17219  13BF  07BA               	addwf	___flmul@prod,f
 17220  13C0  082F               	movf	??___flmul+1,w
 17221  13C1  3DBB               	addwfc	___flmul@prod+1,f
 17222  13C2  0830               	movf	??___flmul+2,w
 17223  13C3  3DBC               	addwfc	___flmul@prod+2,f
 17224  13C4  0831               	movf	??___flmul+3,w
 17225  13C5  3DBD               	addwfc	___flmul@prod+3,f
 17226  13C6  3008               	movlw	8
 17227  13C7                     u10315:	
 17228  13C7  35B5               	lslf	___flmul@grs,f
 17229  13C8  0DB6               	rlf	___flmul@grs+1,f
 17230  13C9  0DB7               	rlf	___flmul@grs+2,f
 17231  13CA  0DB8               	rlf	___flmul@grs+3,f
 17232  13CB  0B89               	decfsz	9,f
 17233  13CC  2BC7               	goto	u10315
 17234  13CD  0827               	movf	___flmul@b+1,w
 17235  13CE  00AE               	movwf	??___flmul
 17236  13CF  082E               	movf	??___flmul,w
 17237  13D0  00F1               	movwf	__Umul8_16@multiplicand
 17238  13D1  082A               	movf	___flmul@a,w
 17239  13D2  31A8  207B  3192   	fcall	__Umul8_16
 17240  13D5  0872               	movf	?__Umul8_16+1,w
 17241  13D6  0020               	movlb	0	; select bank0
 17242  13D7  00BF               	movwf	___flmul@temp+1
 17243  13D8  0871               	movf	?__Umul8_16,w
 17244  13D9  00BE               	movwf	___flmul@temp
 17245  13DA  083E               	movf	___flmul@temp,w
 17246  13DB  07B5               	addwf	___flmul@grs,f
 17247  13DC  083F               	movf	___flmul@temp+1,w
 17248  13DD  3DB6               	addwfc	___flmul@grs+1,f
 17249  13DE  3000               	movlw	0
 17250  13DF  3DB7               	addwfc	___flmul@grs+2,f
 17251  13E0  3DB8               	addwfc	___flmul@grs+3,f
 17252  13E1  0826               	movf	___flmul@b,w
 17253  13E2  00AE               	movwf	??___flmul
 17254  13E3  082E               	movf	??___flmul,w
 17255  13E4  00F1               	movwf	__Umul8_16@multiplicand
 17256  13E5  082B               	movf	___flmul@a+1,w
 17257  13E6  31A8  207B  3192   	fcall	__Umul8_16
 17258  13E9  0872               	movf	?__Umul8_16+1,w
 17259  13EA  0020               	movlb	0	; select bank0
 17260  13EB  00BF               	movwf	___flmul@temp+1
 17261  13EC  0871               	movf	?__Umul8_16,w
 17262  13ED  00BE               	movwf	___flmul@temp
 17263  13EE  083E               	movf	___flmul@temp,w
 17264  13EF  07B5               	addwf	___flmul@grs,f
 17265  13F0  083F               	movf	___flmul@temp+1,w
 17266  13F1  3DB6               	addwfc	___flmul@grs+1,f
 17267  13F2  3000               	movlw	0
 17268  13F3  3DB7               	addwfc	___flmul@grs+2,f
 17269  13F4  3DB8               	addwfc	___flmul@grs+3,f
 17270  13F5  3008               	movlw	8
 17271  13F6                     u10325:	
 17272  13F6  35B5               	lslf	___flmul@grs,f
 17273  13F7  0DB6               	rlf	___flmul@grs+1,f
 17274  13F8  0DB7               	rlf	___flmul@grs+2,f
 17275  13F9  0DB8               	rlf	___flmul@grs+3,f
 17276  13FA  0B89               	decfsz	9,f
 17277  13FB  2BF6               	goto	u10325
 17278  13FC  0826               	movf	___flmul@b,w
 17279  13FD  00AE               	movwf	??___flmul
 17280  13FE  082E               	movf	??___flmul,w
 17281  13FF  00F1               	movwf	__Umul8_16@multiplicand
 17282  1400  082A               	movf	___flmul@a,w
 17283  1401  31A8  207B  3192   	fcall	__Umul8_16
 17284  1404  0872               	movf	?__Umul8_16+1,w
 17285  1405  0020               	movlb	0	; select bank0
 17286  1406  00BF               	movwf	___flmul@temp+1
 17287  1407  0871               	movf	?__Umul8_16,w
 17288  1408  00BE               	movwf	___flmul@temp
 17289  1409  083E               	movf	___flmul@temp,w
 17290  140A  07B5               	addwf	___flmul@grs,f
 17291  140B  083F               	movf	___flmul@temp+1,w
 17292  140C  3DB6               	addwfc	___flmul@grs+1,f
 17293  140D  3000               	movlw	0
 17294  140E  3DB7               	addwfc	___flmul@grs+2,f
 17295  140F  3DB8               	addwfc	___flmul@grs+3,f
 17296  1410  0827               	movf	___flmul@b+1,w
 17297  1411  00AE               	movwf	??___flmul
 17298  1412  082E               	movf	??___flmul,w
 17299  1413  00F1               	movwf	__Umul8_16@multiplicand
 17300  1414  082C               	movf	___flmul@a+2,w
 17301  1415  31A8  207B  3192   	fcall	__Umul8_16
 17302  1418  0872               	movf	?__Umul8_16+1,w
 17303  1419  0020               	movlb	0	; select bank0
 17304  141A  00BF               	movwf	___flmul@temp+1
 17305  141B  0871               	movf	?__Umul8_16,w
 17306  141C  00BE               	movwf	___flmul@temp
 17307  141D  083E               	movf	___flmul@temp,w
 17308  141E  07BA               	addwf	___flmul@prod,f
 17309  141F  083F               	movf	___flmul@temp+1,w
 17310  1420  3DBB               	addwfc	___flmul@prod+1,f
 17311  1421  3000               	movlw	0
 17312  1422  3DBC               	addwfc	___flmul@prod+2,f
 17313  1423  3DBD               	addwfc	___flmul@prod+3,f
 17314  1424  0828               	movf	___flmul@b+2,w
 17315  1425  00AE               	movwf	??___flmul
 17316  1426  082E               	movf	??___flmul,w
 17317  1427  00F1               	movwf	__Umul8_16@multiplicand
 17318  1428  082B               	movf	___flmul@a+1,w
 17319  1429  31A8  207B  3192   	fcall	__Umul8_16
 17320  142C  0872               	movf	?__Umul8_16+1,w
 17321  142D  0020               	movlb	0	; select bank0
 17322  142E  00BF               	movwf	___flmul@temp+1
 17323  142F  0871               	movf	?__Umul8_16,w
 17324  1430  00BE               	movwf	___flmul@temp
 17325  1431  083E               	movf	___flmul@temp,w
 17326  1432  07BA               	addwf	___flmul@prod,f
 17327  1433  083F               	movf	___flmul@temp+1,w
 17328  1434  3DBB               	addwfc	___flmul@prod+1,f
 17329  1435  3000               	movlw	0
 17330  1436  3DBC               	addwfc	___flmul@prod+2,f
 17331  1437  3DBD               	addwfc	___flmul@prod+3,f
 17332  1438  0828               	movf	___flmul@b+2,w
 17333  1439  00AE               	movwf	??___flmul
 17334  143A  082E               	movf	??___flmul,w
 17335  143B  00F1               	movwf	__Umul8_16@multiplicand
 17336  143C  082C               	movf	___flmul@a+2,w
 17337  143D  31A8  207B  3192   	fcall	__Umul8_16
 17338  1440  0872               	movf	?__Umul8_16+1,w
 17339  1441  0020               	movlb	0	; select bank0
 17340  1442  00BF               	movwf	___flmul@temp+1
 17341  1443  0871               	movf	?__Umul8_16,w
 17342  1444  00BE               	movwf	___flmul@temp
 17343  1445  083E               	movf	___flmul@temp,w
 17344  1446  00AE               	movwf	??___flmul
 17345  1447  083F               	movf	___flmul@temp+1,w
 17346  1448  00AF               	movwf	??___flmul+1
 17347  1449  01B0               	clrf	??___flmul+2
 17348  144A  01B1               	clrf	??___flmul+3
 17349  144B  3008               	movlw	8
 17350  144C                     u10335:	
 17351  144C  35AE               	lslf	??___flmul,f
 17352  144D  0DAF               	rlf	??___flmul+1,f
 17353  144E  0DB0               	rlf	??___flmul+2,f
 17354  144F  0DB1               	rlf	??___flmul+3,f
 17355  1450  0B89               	decfsz	9,f
 17356  1451  2C4C               	goto	u10335
 17357  1452  082E               	movf	??___flmul,w
 17358  1453  07BA               	addwf	___flmul@prod,f
 17359  1454  082F               	movf	??___flmul+1,w
 17360  1455  3DBB               	addwfc	___flmul@prod+1,f
 17361  1456  0830               	movf	??___flmul+2,w
 17362  1457  3DBC               	addwfc	___flmul@prod+2,f
 17363  1458  0831               	movf	??___flmul+3,w
 17364  1459  3DBD               	addwfc	___flmul@prod+3,f
 17365  145A  0835               	movf	___flmul@grs,w
 17366  145B  00AE               	movwf	??___flmul
 17367  145C  0836               	movf	___flmul@grs+1,w
 17368  145D  00AF               	movwf	??___flmul+1
 17369  145E  0837               	movf	___flmul@grs+2,w
 17370  145F  00B0               	movwf	??___flmul+2
 17371  1460  0838               	movf	___flmul@grs+3,w
 17372  1461  00B1               	movwf	??___flmul+3
 17373  1462  3018               	movlw	24
 17374  1463                     u10345:	
 17375  1463  36B1               	lsrf	??___flmul+3,f
 17376  1464  0CB0               	rrf	??___flmul+2,f
 17377  1465  0CAF               	rrf	??___flmul+1,f
 17378  1466  0CAE               	rrf	??___flmul,f
 17379  1467  0B89               	decfsz	9,f
 17380  1468  2C63               	goto	u10345
 17381  1469  082E               	movf	??___flmul,w
 17382  146A  07BA               	addwf	___flmul@prod,f
 17383  146B  082F               	movf	??___flmul+1,w
 17384  146C  3DBB               	addwfc	___flmul@prod+1,f
 17385  146D  0830               	movf	??___flmul+2,w
 17386  146E  3DBC               	addwfc	___flmul@prod+2,f
 17387  146F  0831               	movf	??___flmul+3,w
 17388  1470  3DBD               	addwfc	___flmul@prod+3,f
 17389  1471  3008               	movlw	8
 17390  1472                     u10355:	
 17391  1472  35B5               	lslf	___flmul@grs,f
 17392  1473  0DB6               	rlf	___flmul@grs+1,f
 17393  1474  0DB7               	rlf	___flmul@grs+2,f
 17394  1475  0DB8               	rlf	___flmul@grs+3,f
 17395  1476  0B89               	decfsz	9,f
 17396  1477  2C72               	goto	u10355
 17397  1478  0839               	movf	___flmul@bexp,w
 17398  1479  0734               	addwf	___flmul@aexp,w
 17399  147A  00AE               	movwf	??___flmul
 17400  147B  01AF               	clrf	??___flmul+1
 17401  147C  0DAF               	rlf	??___flmul+1,f
 17402  147D  082E               	movf	??___flmul,w
 17403  147E  3E82               	addlw	130
 17404  147F  00BE               	movwf	___flmul@temp
 17405  1480  30FF               	movlw	255
 17406  1481  3D2F               	addwfc	??___flmul+1,w
 17407  1482  00BF               	movwf	___flmul@temp+1
 17408  1483                     l7523:	
 17409  1483  1BBC               	btfsc	___flmul@prod+2,7
 17410  1484  2C9A               	goto	l7525
 17411  1485  3001               	movlw	1
 17412  1486                     u10365:	
 17413  1486  35BA               	lslf	___flmul@prod,f
 17414  1487  0DBB               	rlf	___flmul@prod+1,f
 17415  1488  0DBC               	rlf	___flmul@prod+2,f
 17416  1489  0DBD               	rlf	___flmul@prod+3,f
 17417  148A  0B89               	decfsz	9,f
 17418  148B  2C86               	goto	u10365
 17419  148C  1BB8               	btfsc	___flmul@grs+3,7
 17420  148D  143A               	bsf	___flmul@prod,0
 17421  148E  3001               	movlw	1
 17422  148F                     u10385:	
 17423  148F  35B5               	lslf	___flmul@grs,f
 17424  1490  0DB6               	rlf	___flmul@grs+1,f
 17425  1491  0DB7               	rlf	___flmul@grs+2,f
 17426  1492  0DB8               	rlf	___flmul@grs+3,f
 17427  1493  0B89               	decfsz	9,f
 17428  1494  2C8F               	goto	u10385
 17429  1495  30FF               	movlw	255
 17430  1496  07BE               	addwf	___flmul@temp,f
 17431  1497  30FF               	movlw	255
 17432  1498  3DBF               	addwfc	___flmul@temp+1,f
 17433  1499  2C83               	goto	l7523
 17434  149A                     l7525:	
 17435  149A  01B4               	clrf	___flmul@aexp
 17436  149B  1FB8               	btfss	___flmul@grs+3,7
 17437  149C  2CB3               	goto	l7535
 17438  149D  30FF               	movlw	255
 17439  149E  0535               	andwf	___flmul@grs,w
 17440  149F  00AE               	movwf	??___flmul
 17441  14A0  30FF               	movlw	255
 17442  14A1  0536               	andwf	___flmul@grs+1,w
 17443  14A2  00AF               	movwf	??___flmul+1
 17444  14A3  30FF               	movlw	255
 17445  14A4  0537               	andwf	___flmul@grs+2,w
 17446  14A5  00B0               	movwf	??___flmul+2
 17447  14A6  307F               	movlw	127
 17448  14A7  0538               	andwf	___flmul@grs+3,w
 17449  14A8  00B1               	movwf	??___flmul+3
 17450  14A9  0831               	movf	??___flmul+3,w
 17451  14AA  0430               	iorwf	??___flmul+2,w
 17452  14AB  042F               	iorwf	??___flmul+1,w
 17453  14AC  042E               	iorwf	??___flmul,w
 17454  14AD  1903               	skipnz
 17455  14AE  183A               	btfsc	___flmul@prod,0
 17456  14AF  2CB1               	goto	l7531
 17457  14B0  2CB3               	goto	l7535
 17458  14B1                     l7531:	
 17459  14B1  01B4               	clrf	___flmul@aexp
 17460  14B2  0AB4               	incf	___flmul@aexp,f
 17461  14B3                     l7535:	
 17462  14B3  0834               	movf	___flmul@aexp,w
 17463  14B4  1903               	btfsc	3,2
 17464  14B5  2CDC               	goto	l7545
 17465  14B6  3001               	movlw	1
 17466  14B7  07BA               	addwf	___flmul@prod,f
 17467  14B8  3000               	movlw	0
 17468  14B9  3DBB               	addwfc	___flmul@prod+1,f
 17469  14BA  3000               	movlw	0
 17470  14BB  3DBC               	addwfc	___flmul@prod+2,f
 17471  14BC  3000               	movlw	0
 17472  14BD  3DBD               	addwfc	___flmul@prod+3,f
 17473  14BE  1C3D               	btfss	___flmul@prod+3,0
 17474  14BF  2CDC               	goto	l7545
 17475  14C0  083A               	movf	___flmul@prod,w
 17476  14C1  00AE               	movwf	??___flmul
 17477  14C2  083B               	movf	___flmul@prod+1,w
 17478  14C3  00AF               	movwf	??___flmul+1
 17479  14C4  083C               	movf	___flmul@prod+2,w
 17480  14C5  00B0               	movwf	??___flmul+2
 17481  14C6  083D               	movf	___flmul@prod+3,w
 17482  14C7  00B1               	movwf	??___flmul+3
 17483  14C8  3001               	movlw	1
 17484  14C9  00B2               	movwf	??___flmul+4
 17485  14CA                     u10455:	
 17486  14CA  37B1               	asrf	??___flmul+3,f
 17487  14CB  0CB0               	rrf	??___flmul+2,f
 17488  14CC  0CAF               	rrf	??___flmul+1,f
 17489  14CD  0CAE               	rrf	??___flmul,f
 17490  14CE  0BB2               	decfsz	??___flmul+4,f
 17491  14CF  2CCA               	goto	u10455
 17492  14D0  0831               	movf	??___flmul+3,w
 17493  14D1  00BD               	movwf	___flmul@prod+3
 17494  14D2  0830               	movf	??___flmul+2,w
 17495  14D3  00BC               	movwf	___flmul@prod+2
 17496  14D4  082F               	movf	??___flmul+1,w
 17497  14D5  00BB               	movwf	___flmul@prod+1
 17498  14D6  082E               	movf	??___flmul,w
 17499  14D7  00BA               	movwf	___flmul@prod
 17500  14D8  3001               	movlw	1
 17501  14D9  07BE               	addwf	___flmul@temp,f
 17502  14DA  3000               	movlw	0
 17503  14DB  3DBF               	addwfc	___flmul@temp+1,f
 17504  14DC                     l7545:	
 17505  14DC  083F               	movf	___flmul@temp+1,w
 17506  14DD  3A80               	xorlw	128
 17507  14DE  00AE               	movwf	??___flmul
 17508  14DF  3080               	movlw	128
 17509  14E0  022E               	subwf	??___flmul,w
 17510  14E1  1D03               	skipz
 17511  14E2  2CE5               	goto	u10465
 17512  14E3  30FF               	movlw	255
 17513  14E4  023E               	subwf	___flmul@temp,w
 17514  14E5                     u10465:	
 17515  14E5  1C03               	skipc
 17516  14E6  2CF1               	goto	l7549
 17517  14E7  307F               	movlw	127
 17518  14E8  0020               	movlb	0	; select bank0
 17519  14E9  00BD               	movwf	___flmul@prod+3
 17520  14EA  3080               	movlw	128
 17521  14EB  00BC               	movwf	___flmul@prod+2
 17522  14EC  3000               	movlw	0
 17523  14ED  00BB               	movwf	___flmul@prod+1
 17524  14EE  3000               	movlw	0
 17525  14EF  00BA               	movwf	___flmul@prod
 17526  14F0  2D1B               	goto	l1237
 17527  14F1                     l7549:	
 17528  14F1  0020               	movlb	0	; select bank0
 17529  14F2  083F               	movf	___flmul@temp+1,w
 17530  14F3  3A80               	xorlw	128
 17531  14F4  00AE               	movwf	??___flmul
 17532  14F5  3080               	movlw	128
 17533  14F6  022E               	subwf	??___flmul,w
 17534  14F7  1D03               	skipz
 17535  14F8  2CFB               	goto	u10475
 17536  14F9  3001               	movlw	1
 17537  14FA  023E               	subwf	___flmul@temp,w
 17538  14FB                     u10475:	
 17539  14FB  1803               	skipnc
 17540  14FC  2D08               	goto	l7555
 17541  14FD  3000               	movlw	0
 17542  14FE  0020               	movlb	0	; select bank0
 17543  14FF  00BD               	movwf	___flmul@prod+3
 17544  1500  3000               	movlw	0
 17545  1501  00BC               	movwf	___flmul@prod+2
 17546  1502  3000               	movlw	0
 17547  1503  00BB               	movwf	___flmul@prod+1
 17548  1504  3000               	movlw	0
 17549  1505  00BA               	movwf	___flmul@prod
 17550  1506  01B3               	clrf	___flmul@sign
 17551  1507  2D1B               	goto	l1237
 17552  1508                     l7555:	
 17553  1508  0020               	movlb	0	; select bank0
 17554  1509  083E               	movf	___flmul@temp,w
 17555  150A  00AE               	movwf	??___flmul
 17556  150B  082E               	movf	??___flmul,w
 17557  150C  00B9               	movwf	___flmul@bexp
 17558  150D  30FF               	movlw	255
 17559  150E  05BA               	andwf	___flmul@prod,f
 17560  150F  30FF               	movlw	255
 17561  1510  05BB               	andwf	___flmul@prod+1,f
 17562  1511  307F               	movlw	127
 17563  1512  05BC               	andwf	___flmul@prod+2,f
 17564  1513  3000               	movlw	0
 17565  1514  05BD               	andwf	___flmul@prod+3,f
 17566  1515  1839               	btfsc	___flmul@bexp,0
 17567  1516  17BC               	bsf	___flmul@prod+2,7
 17568  1517  3639               	lsrf	___flmul@bexp,w
 17569  1518  00AE               	movwf	??___flmul
 17570  1519  082E               	movf	??___flmul,w
 17571  151A  00BD               	movwf	___flmul@prod+3
 17572  151B                     l1237:	
 17573  151B  0833               	movf	___flmul@sign,w
 17574  151C  00AE               	movwf	??___flmul
 17575  151D  082E               	movf	??___flmul,w
 17576  151E  04BD               	iorwf	___flmul@prod+3,f
 17577  151F  083D               	movf	___flmul@prod+3,w
 17578  1520  00A9               	movwf	?___flmul+3
 17579  1521  083C               	movf	___flmul@prod+2,w
 17580  1522  00A8               	movwf	?___flmul+2
 17581  1523  083B               	movf	___flmul@prod+1,w
 17582  1524  00A7               	movwf	?___flmul+1
 17583  1525  083A               	movf	___flmul@prod,w
 17584  1526  00A6               	movwf	?___flmul
 17585  1527  0008               	return
 17586  1528                     __end_of___flmul:	
 17587                           
 17588                           	psect	text64
 17589  287B                     __ptext64:	
 17590 ;; *************** function __Umul8_16 *****************
 17591 ;; Defined at:
 17592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  multiplier      1    wreg     unsigned char 
 17595 ;;  multiplicand    1    1[COMMON] unsigned char 
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;  multiplier      1    9[COMMON] unsigned char 
 17598 ;;  word_mpld       2    7[COMMON] unsigned int 
 17599 ;;  product         2    5[COMMON] unsigned int 
 17600 ;; Return value:  Size  Location     Type
 17601 ;;                  2    1[COMMON] unsigned int 
 17602 ;; Registers used:
 17603 ;;		wreg, status,2, status,0
 17604 ;; Tracked objects:
 17605 ;;		On entry : 0/0
 17606 ;;		On exit  : 0/0
 17607 ;;		Unchanged: 0/0
 17608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17610 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17612 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17613 ;;Total ram usage:        9 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:    1
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		___flmul
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           
 17624                           ;psect for function __Umul8_16
 17625  287B                     __Umul8_16:	
 17626                           
 17627                           ;incstack = 0
 17628                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17629                           ;__Umul8_16@multiplier stored from wreg
 17630  287B  00F9               	movwf	__Umul8_16@multiplier
 17631  287C  01F5               	clrf	__Umul8_16@product
 17632  287D  01F6               	clrf	__Umul8_16@product+1
 17633  287E  0871               	movf	__Umul8_16@multiplicand,w
 17634  287F  00F3               	movwf	??__Umul8_16
 17635  2880  01F4               	clrf	??__Umul8_16+1
 17636  2881  0873               	movf	??__Umul8_16,w
 17637  2882  00F7               	movwf	__Umul8_16@word_mpld
 17638  2883  0874               	movf	??__Umul8_16+1,w
 17639  2884  00F8               	movwf	__Umul8_16@word_mpld+1
 17640  2885                     l7239:	
 17641  2885  1C79               	btfss	__Umul8_16@multiplier,0
 17642  2886  288B               	goto	l1430
 17643  2887  0877               	movf	__Umul8_16@word_mpld,w
 17644  2888  07F5               	addwf	__Umul8_16@product,f
 17645  2889  0878               	movf	__Umul8_16@word_mpld+1,w
 17646  288A  3DF6               	addwfc	__Umul8_16@product+1,f
 17647  288B                     l1430:	
 17648  288B  3001               	movlw	1
 17649  288C                     u9855:	
 17650  288C  35F7               	lslf	__Umul8_16@word_mpld,f
 17651  288D  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 17652  288E  0B89               	decfsz	9,f
 17653  288F  288C               	goto	u9855
 17654  2890  1003               	clrc
 17655  2891  0CF9               	rrf	__Umul8_16@multiplier,f
 17656  2892  0879               	movf	__Umul8_16@multiplier,w
 17657  2893  1D03               	btfss	3,2
 17658  2894  2885               	goto	l7239
 17659  2895  0876               	movf	__Umul8_16@product+1,w
 17660  2896  00F2               	movwf	?__Umul8_16+1
 17661  2897  0875               	movf	__Umul8_16@product,w
 17662  2898  00F1               	movwf	?__Umul8_16
 17663  2899  0008               	return
 17664  289A                     __end_of__Umul8_16:	
 17665                           
 17666                           	psect	text65
 17667  1CE1                     __ptext65:	
 17668 ;; *************** function ___fldiv *****************
 17669 ;; Defined at:
 17670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;  a               4   32[BANK0 ] unsigned int 
 17673 ;;  b               4   36[BANK0 ] unsigned int 
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;  grs             4   52[BANK0 ] unsigned long 
 17676 ;;  rem             4   45[BANK0 ] unsigned long 
 17677 ;;  new_exp         2   50[BANK0 ] int 
 17678 ;;  aexp            1   57[BANK0 ] unsigned char 
 17679 ;;  bexp            1   56[BANK0 ] unsigned char 
 17680 ;;  sign            1   49[BANK0 ] unsigned char 
 17681 ;; Return value:  Size  Location     Type
 17682 ;;                  4   32[BANK0 ] unsigned char 
 17683 ;; Registers used:
 17684 ;;		wreg, status,2, status,0
 17685 ;; Tracked objects:
 17686 ;;		On entry : 0/0
 17687 ;;		On exit  : 0/0
 17688 ;;		Unchanged: 0/0
 17689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17693 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17694 ;;Total ram usage:       26 bytes
 17695 ;; Hardware stack levels used:    1
 17696 ;; Hardware stack levels required when called:    1
 17697 ;; This function calls:
 17698 ;;		Nothing
 17699 ;; This function is called by:
 17700 ;;		_setShortCircuitProtection
 17701 ;;		_setOverCurrentDischargeProtection
 17702 ;;		_updateVoltages
 17703 ;;		_updateTemperatures
 17704 ;;		_logf
 17705 ;;		_updateCurrent
 17706 ;;		_AFE_getSetShortCircuitCurrent
 17707 ;;		_AFE_getOverCurrentDischargeCurrent
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           
 17712                           ;psect for function ___fldiv
 17713  1CE1                     ___fldiv:	
 17714                           
 17715                           ;incstack = 0
 17716                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17717  1CE1  0020               	movlb	0	; select bank0
 17718  1CE2  0847               	movf	___fldiv@b+3,w
 17719  1CE3  3980               	andlw	128
 17720  1CE4  00C8               	movwf	??___fldiv
 17721  1CE5  0848               	movf	??___fldiv,w
 17722  1CE6  00D1               	movwf	___fldiv@sign
 17723  1CE7  3547               	lslf	___fldiv@b+3,w
 17724  1CE8  00C8               	movwf	??___fldiv
 17725  1CE9  0848               	movf	??___fldiv,w
 17726  1CEA  00D8               	movwf	___fldiv@bexp
 17727  1CEB  1BC6               	btfsc	___fldiv@b+2,7
 17728  1CEC  1458               	bsf	___fldiv@bexp,0
 17729  1CED  0858               	movf	___fldiv@bexp,w
 17730  1CEE  1903               	btfsc	3,2
 17731  1CEF  2CFE               	goto	l7305
 17732  1CF0  0A58               	incf	___fldiv@bexp,w
 17733  1CF1  1D03               	btfss	3,2
 17734  1CF2  2CFB               	goto	l7301
 17735  1CF3  3000               	movlw	0
 17736  1CF4  00C7               	movwf	___fldiv@b+3
 17737  1CF5  3000               	movlw	0
 17738  1CF6  00C6               	movwf	___fldiv@b+2
 17739  1CF7  3000               	movlw	0
 17740  1CF8  00C5               	movwf	___fldiv@b+1
 17741  1CF9  3000               	movlw	0
 17742  1CFA  00C4               	movwf	___fldiv@b
 17743  1CFB                     l7301:	
 17744  1CFB  17C6               	bsf	___fldiv@b+2,7
 17745  1CFC  01C7               	clrf	___fldiv@b+3
 17746  1CFD  2D06               	goto	l7307
 17747  1CFE                     l7305:	
 17748  1CFE  3000               	movlw	0
 17749  1CFF  00C7               	movwf	___fldiv@b+3
 17750  1D00  3000               	movlw	0
 17751  1D01  00C6               	movwf	___fldiv@b+2
 17752  1D02  3000               	movlw	0
 17753  1D03  00C5               	movwf	___fldiv@b+1
 17754  1D04  3000               	movlw	0
 17755  1D05  00C4               	movwf	___fldiv@b
 17756  1D06                     l7307:	
 17757  1D06  0843               	movf	___fldiv@a+3,w
 17758  1D07  3980               	andlw	128
 17759  1D08  00C8               	movwf	??___fldiv
 17760  1D09  0848               	movf	??___fldiv,w
 17761  1D0A  06D1               	xorwf	___fldiv@sign,f
 17762  1D0B  3543               	lslf	___fldiv@a+3,w
 17763  1D0C  00C8               	movwf	??___fldiv
 17764  1D0D  0848               	movf	??___fldiv,w
 17765  1D0E  00D9               	movwf	___fldiv@aexp
 17766  1D0F  1BC2               	btfsc	___fldiv@a+2,7
 17767  1D10  1459               	bsf	___fldiv@aexp,0
 17768  1D11  0859               	movf	___fldiv@aexp,w
 17769  1D12  1903               	btfsc	3,2
 17770  1D13  2D22               	goto	l7325
 17771  1D14  0A59               	incf	___fldiv@aexp,w
 17772  1D15  1D03               	btfss	3,2
 17773  1D16  2D1F               	goto	l7321
 17774  1D17  3000               	movlw	0
 17775  1D18  00C3               	movwf	___fldiv@a+3
 17776  1D19  3000               	movlw	0
 17777  1D1A  00C2               	movwf	___fldiv@a+2
 17778  1D1B  3000               	movlw	0
 17779  1D1C  00C1               	movwf	___fldiv@a+1
 17780  1D1D  3000               	movlw	0
 17781  1D1E  00C0               	movwf	___fldiv@a
 17782  1D1F                     l7321:	
 17783  1D1F  17C2               	bsf	___fldiv@a+2,7
 17784  1D20  01C3               	clrf	___fldiv@a+3
 17785  1D21  2D2A               	goto	l1185
 17786  1D22                     l7325:	
 17787  1D22  3000               	movlw	0
 17788  1D23  00C3               	movwf	___fldiv@a+3
 17789  1D24  3000               	movlw	0
 17790  1D25  00C2               	movwf	___fldiv@a+2
 17791  1D26  3000               	movlw	0
 17792  1D27  00C1               	movwf	___fldiv@a+1
 17793  1D28  3000               	movlw	0
 17794  1D29  00C0               	movwf	___fldiv@a
 17795  1D2A                     l1185:	
 17796  1D2A  0843               	movf	___fldiv@a+3,w
 17797  1D2B  0442               	iorwf	___fldiv@a+2,w
 17798  1D2C  0441               	iorwf	___fldiv@a+1,w
 17799  1D2D  0440               	iorwf	___fldiv@a,w
 17800  1D2E  1D03               	skipz
 17801  1D2F  2D49               	goto	l7335
 17802  1D30  3000               	movlw	0
 17803  1D31  00C7               	movwf	___fldiv@b+3
 17804  1D32  3000               	movlw	0
 17805  1D33  00C6               	movwf	___fldiv@b+2
 17806  1D34  3000               	movlw	0
 17807  1D35  00C5               	movwf	___fldiv@b+1
 17808  1D36  3000               	movlw	0
 17809  1D37  00C4               	movwf	___fldiv@b
 17810  1D38  3080               	movlw	128
 17811  1D39  04C6               	iorwf	___fldiv@b+2,f
 17812  1D3A  307F               	movlw	127
 17813  1D3B  04C7               	iorwf	___fldiv@b+3,f
 17814  1D3C                     L5:	
 17815  1D3C  0851               	movf	___fldiv@sign,w
 17816  1D3D  00C8               	movwf	??___fldiv
 17817  1D3E  0848               	movf	??___fldiv,w
 17818  1D3F  04C7               	iorwf	___fldiv@b+3,f
 17819  1D40  0847               	movf	___fldiv@b+3,w
 17820  1D41  00C3               	movwf	?___fldiv+3
 17821  1D42  0846               	movf	___fldiv@b+2,w
 17822  1D43  00C2               	movwf	?___fldiv+2
 17823  1D44  0845               	movf	___fldiv@b+1,w
 17824  1D45  00C1               	movwf	?___fldiv+1
 17825  1D46  0844               	movf	___fldiv@b,w
 17826  1D47  00C0               	movwf	?___fldiv
 17827  1D48  0008               	return
 17828  1D49                     l7335:	
 17829  1D49  0858               	movf	___fldiv@bexp,w
 17830  1D4A  1D03               	btfss	3,2
 17831  1D4B  2D55               	goto	l7341
 17832  1D4C  3000               	movlw	0
 17833  1D4D  00C3               	movwf	?___fldiv+3
 17834  1D4E  3000               	movlw	0
 17835  1D4F  00C2               	movwf	?___fldiv+2
 17836  1D50  3000               	movlw	0
 17837  1D51  00C1               	movwf	?___fldiv+1
 17838  1D52  3000               	movlw	0
 17839  1D53  00C0               	movwf	?___fldiv
 17840  1D54  0008               	return
 17841  1D55                     l7341:	
 17842  1D55  0858               	movf	___fldiv@bexp,w
 17843  1D56  00C8               	movwf	??___fldiv
 17844  1D57  01C9               	clrf	??___fldiv+1
 17845  1D58  0849               	movf	??___fldiv+1,w
 17846  1D59  00CB               	movwf	??___fldiv+3
 17847  1D5A  0859               	movf	___fldiv@aexp,w
 17848  1D5B  0248               	subwf	??___fldiv,w
 17849  1D5C  00CA               	movwf	??___fldiv+2
 17850  1D5D  1C03               	skipc
 17851  1D5E  03CB               	decf	??___fldiv+3,f
 17852  1D5F  084A               	movf	??___fldiv+2,w
 17853  1D60  3E7F               	addlw	127
 17854  1D61  00D2               	movwf	___fldiv@new_exp
 17855  1D62  3000               	movlw	0
 17856  1D63  3D4B               	addwfc	??___fldiv+3,w
 17857  1D64  00D3               	movwf	___fldiv@new_exp+1
 17858  1D65  0847               	movf	___fldiv@b+3,w
 17859  1D66  00D0               	movwf	___fldiv@rem+3
 17860  1D67  0846               	movf	___fldiv@b+2,w
 17861  1D68  00CF               	movwf	___fldiv@rem+2
 17862  1D69  0845               	movf	___fldiv@b+1,w
 17863  1D6A  00CE               	movwf	___fldiv@rem+1
 17864  1D6B  0844               	movf	___fldiv@b,w
 17865  1D6C  00CD               	movwf	___fldiv@rem
 17866  1D6D  3000               	movlw	0
 17867  1D6E  00C7               	movwf	___fldiv@b+3
 17868  1D6F  3000               	movlw	0
 17869  1D70  00C6               	movwf	___fldiv@b+2
 17870  1D71  3000               	movlw	0
 17871  1D72  00C5               	movwf	___fldiv@b+1
 17872  1D73  3000               	movlw	0
 17873  1D74  00C4               	movwf	___fldiv@b
 17874  1D75  3000               	movlw	0
 17875  1D76  00D7               	movwf	___fldiv@grs+3
 17876  1D77  3000               	movlw	0
 17877  1D78  00D6               	movwf	___fldiv@grs+2
 17878  1D79  3000               	movlw	0
 17879  1D7A  00D5               	movwf	___fldiv@grs+1
 17880  1D7B  3000               	movlw	0
 17881  1D7C  00D4               	movwf	___fldiv@grs
 17882  1D7D  01D9               	clrf	___fldiv@aexp
 17883  1D7E                     l7369:	
 17884  1D7E  301A               	movlw	26
 17885  1D7F  0259               	subwf	___fldiv@aexp,w
 17886  1D80  1803               	btfsc	3,0
 17887  1D81  2DBA               	goto	l7371
 17888  1D82  0859               	movf	___fldiv@aexp,w
 17889  1D83  1903               	btfsc	3,2
 17890  1D84  2D9C               	goto	l7361
 17891  1D85  3001               	movlw	1
 17892  1D86                     u10035:	
 17893  1D86  35CD               	lslf	___fldiv@rem,f
 17894  1D87  0DCE               	rlf	___fldiv@rem+1,f
 17895  1D88  0DCF               	rlf	___fldiv@rem+2,f
 17896  1D89  0DD0               	rlf	___fldiv@rem+3,f
 17897  1D8A  0B89               	decfsz	9,f
 17898  1D8B  2D86               	goto	u10035
 17899  1D8C  3001               	movlw	1
 17900  1D8D                     u10045:	
 17901  1D8D  35C4               	lslf	___fldiv@b,f
 17902  1D8E  0DC5               	rlf	___fldiv@b+1,f
 17903  1D8F  0DC6               	rlf	___fldiv@b+2,f
 17904  1D90  0DC7               	rlf	___fldiv@b+3,f
 17905  1D91  0B89               	decfsz	9,f
 17906  1D92  2D8D               	goto	u10045
 17907  1D93  1BD7               	btfsc	___fldiv@grs+3,7
 17908  1D94  1444               	bsf	___fldiv@b,0
 17909  1D95  3001               	movlw	1
 17910  1D96                     u10065:	
 17911  1D96  35D4               	lslf	___fldiv@grs,f
 17912  1D97  0DD5               	rlf	___fldiv@grs+1,f
 17913  1D98  0DD6               	rlf	___fldiv@grs+2,f
 17914  1D99  0DD7               	rlf	___fldiv@grs+3,f
 17915  1D9A  0B89               	decfsz	9,f
 17916  1D9B  2D96               	goto	u10065
 17917  1D9C                     l7361:	
 17918  1D9C  0843               	movf	___fldiv@a+3,w
 17919  1D9D  0250               	subwf	___fldiv@rem+3,w
 17920  1D9E  1D03               	skipz
 17921  1D9F  2DAA               	goto	u10075
 17922  1DA0  0842               	movf	___fldiv@a+2,w
 17923  1DA1  024F               	subwf	___fldiv@rem+2,w
 17924  1DA2  1D03               	skipz
 17925  1DA3  2DAA               	goto	u10075
 17926  1DA4  0841               	movf	___fldiv@a+1,w
 17927  1DA5  024E               	subwf	___fldiv@rem+1,w
 17928  1DA6  1D03               	skipz
 17929  1DA7  2DAA               	goto	u10075
 17930  1DA8  0840               	movf	___fldiv@a,w
 17931  1DA9  024D               	subwf	___fldiv@rem,w
 17932  1DAA                     u10075:	
 17933  1DAA  1C03               	skipc
 17934  1DAB  2DB5               	goto	l7367
 17935  1DAC  1757               	bsf	___fldiv@grs+3,6
 17936  1DAD  0840               	movf	___fldiv@a,w
 17937  1DAE  02CD               	subwf	___fldiv@rem,f
 17938  1DAF  0841               	movf	___fldiv@a+1,w
 17939  1DB0  3BCE               	subwfb	___fldiv@rem+1,f
 17940  1DB1  0842               	movf	___fldiv@a+2,w
 17941  1DB2  3BCF               	subwfb	___fldiv@rem+2,f
 17942  1DB3  0843               	movf	___fldiv@a+3,w
 17943  1DB4  3BD0               	subwfb	___fldiv@rem+3,f
 17944  1DB5                     l7367:	
 17945  1DB5  3001               	movlw	1
 17946  1DB6  00C8               	movwf	??___fldiv
 17947  1DB7  0848               	movf	??___fldiv,w
 17948  1DB8  07D9               	addwf	___fldiv@aexp,f
 17949  1DB9  2D7E               	goto	l7369
 17950  1DBA                     l7371:	
 17951  1DBA  0850               	movf	___fldiv@rem+3,w
 17952  1DBB  044F               	iorwf	___fldiv@rem+2,w
 17953  1DBC  044E               	iorwf	___fldiv@rem+1,w
 17954  1DBD  044D               	iorwf	___fldiv@rem,w
 17955  1DBE  1D03               	btfss	3,2
 17956  1DBF  1454               	bsf	___fldiv@grs,0
 17957  1DC0                     l7385:	
 17958  1DC0  1BC6               	btfsc	___fldiv@b+2,7
 17959  1DC1  2DD7               	goto	l7387
 17960  1DC2  3001               	movlw	1
 17961  1DC3                     u10105:	
 17962  1DC3  35C4               	lslf	___fldiv@b,f
 17963  1DC4  0DC5               	rlf	___fldiv@b+1,f
 17964  1DC5  0DC6               	rlf	___fldiv@b+2,f
 17965  1DC6  0DC7               	rlf	___fldiv@b+3,f
 17966  1DC7  0B89               	decfsz	9,f
 17967  1DC8  2DC3               	goto	u10105
 17968  1DC9  1BD7               	btfsc	___fldiv@grs+3,7
 17969  1DCA  1444               	bsf	___fldiv@b,0
 17970  1DCB  3001               	movlw	1
 17971  1DCC                     u10125:	
 17972  1DCC  35D4               	lslf	___fldiv@grs,f
 17973  1DCD  0DD5               	rlf	___fldiv@grs+1,f
 17974  1DCE  0DD6               	rlf	___fldiv@grs+2,f
 17975  1DCF  0DD7               	rlf	___fldiv@grs+3,f
 17976  1DD0  0B89               	decfsz	9,f
 17977  1DD1  2DCC               	goto	u10125
 17978  1DD2  30FF               	movlw	255
 17979  1DD3  07D2               	addwf	___fldiv@new_exp,f
 17980  1DD4  30FF               	movlw	255
 17981  1DD5  3DD3               	addwfc	___fldiv@new_exp+1,f
 17982  1DD6  2DC0               	goto	l7385
 17983  1DD7                     l7387:	
 17984  1DD7  01D9               	clrf	___fldiv@aexp
 17985  1DD8  1FD7               	btfss	___fldiv@grs+3,7
 17986  1DD9  2DF0               	goto	l7397
 17987  1DDA  30FF               	movlw	255
 17988  1DDB  0554               	andwf	___fldiv@grs,w
 17989  1DDC  00C8               	movwf	??___fldiv
 17990  1DDD  30FF               	movlw	255
 17991  1DDE  0555               	andwf	___fldiv@grs+1,w
 17992  1DDF  00C9               	movwf	??___fldiv+1
 17993  1DE0  30FF               	movlw	255
 17994  1DE1  0556               	andwf	___fldiv@grs+2,w
 17995  1DE2  00CA               	movwf	??___fldiv+2
 17996  1DE3  307F               	movlw	127
 17997  1DE4  0557               	andwf	___fldiv@grs+3,w
 17998  1DE5  00CB               	movwf	??___fldiv+3
 17999  1DE6  084B               	movf	??___fldiv+3,w
 18000  1DE7  044A               	iorwf	??___fldiv+2,w
 18001  1DE8  0449               	iorwf	??___fldiv+1,w
 18002  1DE9  0448               	iorwf	??___fldiv,w
 18003  1DEA  1903               	skipnz
 18004  1DEB  1844               	btfsc	___fldiv@b,0
 18005  1DEC  2DEE               	goto	l7393
 18006  1DED  2DF0               	goto	l7397
 18007  1DEE                     l7393:	
 18008  1DEE  01D9               	clrf	___fldiv@aexp
 18009  1DEF  0AD9               	incf	___fldiv@aexp,f
 18010  1DF0                     l7397:	
 18011  1DF0  0859               	movf	___fldiv@aexp,w
 18012  1DF1  1903               	btfsc	3,2
 18013  1DF2  2E19               	goto	l7407
 18014  1DF3  3001               	movlw	1
 18015  1DF4  07C4               	addwf	___fldiv@b,f
 18016  1DF5  3000               	movlw	0
 18017  1DF6  3DC5               	addwfc	___fldiv@b+1,f
 18018  1DF7  3000               	movlw	0
 18019  1DF8  3DC6               	addwfc	___fldiv@b+2,f
 18020  1DF9  3000               	movlw	0
 18021  1DFA  3DC7               	addwfc	___fldiv@b+3,f
 18022  1DFB  1C47               	btfss	___fldiv@b+3,0
 18023  1DFC  2E19               	goto	l7407
 18024  1DFD  0844               	movf	___fldiv@b,w
 18025  1DFE  00C8               	movwf	??___fldiv
 18026  1DFF  0845               	movf	___fldiv@b+1,w
 18027  1E00  00C9               	movwf	??___fldiv+1
 18028  1E01  0846               	movf	___fldiv@b+2,w
 18029  1E02  00CA               	movwf	??___fldiv+2
 18030  1E03  0847               	movf	___fldiv@b+3,w
 18031  1E04  00CB               	movwf	??___fldiv+3
 18032  1E05  3001               	movlw	1
 18033  1E06  00CC               	movwf	??___fldiv+4
 18034  1E07                     u10195:	
 18035  1E07  37CB               	asrf	??___fldiv+3,f
 18036  1E08  0CCA               	rrf	??___fldiv+2,f
 18037  1E09  0CC9               	rrf	??___fldiv+1,f
 18038  1E0A  0CC8               	rrf	??___fldiv,f
 18039  1E0B  0BCC               	decfsz	??___fldiv+4,f
 18040  1E0C  2E07               	goto	u10195
 18041  1E0D  084B               	movf	??___fldiv+3,w
 18042  1E0E  00C7               	movwf	___fldiv@b+3
 18043  1E0F  084A               	movf	??___fldiv+2,w
 18044  1E10  00C6               	movwf	___fldiv@b+2
 18045  1E11  0849               	movf	??___fldiv+1,w
 18046  1E12  00C5               	movwf	___fldiv@b+1
 18047  1E13  0848               	movf	??___fldiv,w
 18048  1E14  00C4               	movwf	___fldiv@b
 18049  1E15  3001               	movlw	1
 18050  1E16  07D2               	addwf	___fldiv@new_exp,f
 18051  1E17  3000               	movlw	0
 18052  1E18  3DD3               	addwfc	___fldiv@new_exp+1,f
 18053  1E19                     l7407:	
 18054  1E19  0853               	movf	___fldiv@new_exp+1,w
 18055  1E1A  3A80               	xorlw	128
 18056  1E1B  00C8               	movwf	??___fldiv
 18057  1E1C  3080               	movlw	128
 18058  1E1D  0248               	subwf	??___fldiv,w
 18059  1E1E  1D03               	skipz
 18060  1E1F  2E22               	goto	u10205
 18061  1E20  30FF               	movlw	255
 18062  1E21  0252               	subwf	___fldiv@new_exp,w
 18063  1E22                     u10205:	
 18064  1E22  1C03               	skipc
 18065  1E23  2E31               	goto	l1206
 18066  1E24  30FF               	movlw	255
 18067  1E25  0020               	movlb	0	; select bank0
 18068  1E26  00D2               	movwf	___fldiv@new_exp
 18069  1E27  3000               	movlw	0
 18070  1E28  00D3               	movwf	___fldiv@new_exp+1
 18071  1E29  3000               	movlw	0
 18072  1E2A  00C7               	movwf	___fldiv@b+3
 18073  1E2B  3000               	movlw	0
 18074  1E2C  00C6               	movwf	___fldiv@b+2
 18075  1E2D  3000               	movlw	0
 18076  1E2E  00C5               	movwf	___fldiv@b+1
 18077  1E2F  3000               	movlw	0
 18078  1E30  00C4               	movwf	___fldiv@b
 18079  1E31                     l1206:	
 18080  1E31  0020               	movlb	0	; select bank0
 18081  1E32  0853               	movf	___fldiv@new_exp+1,w
 18082  1E33  3A80               	xorlw	128
 18083  1E34  00C8               	movwf	??___fldiv
 18084  1E35  3080               	movlw	128
 18085  1E36  0248               	subwf	??___fldiv,w
 18086  1E37  1D03               	skipz
 18087  1E38  2E3B               	goto	u10215
 18088  1E39  3001               	movlw	1
 18089  1E3A  0252               	subwf	___fldiv@new_exp,w
 18090  1E3B                     u10215:	
 18091  1E3B  1803               	skipnc
 18092  1E3C  2E49               	goto	l1207
 18093  1E3D  0020               	movlb	0	; select bank0
 18094  1E3E  01D2               	clrf	___fldiv@new_exp
 18095  1E3F  01D3               	clrf	___fldiv@new_exp+1
 18096  1E40  3000               	movlw	0
 18097  1E41  00C7               	movwf	___fldiv@b+3
 18098  1E42  3000               	movlw	0
 18099  1E43  00C6               	movwf	___fldiv@b+2
 18100  1E44  3000               	movlw	0
 18101  1E45  00C5               	movwf	___fldiv@b+1
 18102  1E46  3000               	movlw	0
 18103  1E47  00C4               	movwf	___fldiv@b
 18104  1E48  01D1               	clrf	___fldiv@sign
 18105  1E49                     l1207:	
 18106  1E49  0020               	movlb	0	; select bank0
 18107  1E4A  0852               	movf	___fldiv@new_exp,w
 18108  1E4B  00C8               	movwf	??___fldiv
 18109  1E4C  0848               	movf	??___fldiv,w
 18110  1E4D  00D8               	movwf	___fldiv@bexp
 18111  1E4E  1C58               	btfss	___fldiv@bexp,0
 18112  1E4F  2E52               	goto	l7421
 18113  1E50  17C6               	bsf	___fldiv@b+2,7
 18114  1E51  2E56               	goto	l1209
 18115  1E52                     l7421:	
 18116  1E52  307F               	movlw	127
 18117  1E53  00C8               	movwf	??___fldiv
 18118  1E54  0848               	movf	??___fldiv,w
 18119  1E55  05C6               	andwf	___fldiv@b+2,f
 18120  1E56                     l1209:	
 18121  1E56  3658               	lsrf	___fldiv@bexp,w
 18122  1E57  00C8               	movwf	??___fldiv
 18123  1E58  0848               	movf	??___fldiv,w
 18124  1E59  00C7               	movwf	___fldiv@b+3
 18125  1E5A  2D3C               	goto	L5
 18126  1E5B                     __end_of___fldiv:	
 18127                           
 18128                           	psect	text66
 18129  2C1E                     __ptext66:	
 18130 ;; *************** function ___fltol *****************
 18131 ;; Defined at:
 18132 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  f1              4    8[BANK1 ] unsigned char 
 18135 ;; Auto vars:     Size  Location     Type
 18136 ;;  exp1            1   11[COMMON] unsigned char 
 18137 ;;  sign1           1   10[COMMON] unsigned char 
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  4    8[BANK1 ] long 
 18140 ;; Registers used:
 18141 ;;		wreg, status,2, status,0
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18147 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;Total ram usage:       11 bytes
 18152 ;; Hardware stack levels used:    1
 18153 ;; Hardware stack levels required when called:    1
 18154 ;; This function calls:
 18155 ;;		Nothing
 18156 ;; This function is called by:
 18157 ;;		_updateVoltages
 18158 ;;		_updateTemperatures
 18159 ;;		_updateCurrent
 18160 ;;		_AFE_getSetShortCircuitCurrent
 18161 ;;		_AFE_getOverCurrentDischargeCurrent
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           
 18166                           ;psect for function ___fltol
 18167  2C1E                     ___fltol:	
 18168                           
 18169                           ;incstack = 0
 18170                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18171  2C1E  1003               	clrc
 18172  2C1F  0021               	movlb	1	; select bank1
 18173  2C20  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18174  2C21  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18175  2C22  00AC               	movwf	??___fltol^(0+128)
 18176  2C23  082C               	movf	??___fltol^(0+128),w
 18177  2C24  00FB               	movwf	___fltol@exp1
 18178  2C25  087B               	movf	___fltol@exp1,w
 18179  2C26  1D03               	btfss	3,2
 18180  2C27  2C31               	goto	l7809
 18181  2C28                     l7805:	
 18182  2C28  3000               	movlw	0
 18183  2C29  00AB               	movwf	(?___fltol+3)^(0+128)
 18184  2C2A  3000               	movlw	0
 18185  2C2B  00AA               	movwf	(?___fltol+2)^(0+128)
 18186  2C2C  3000               	movlw	0
 18187  2C2D  00A9               	movwf	(?___fltol+1)^(0+128)
 18188  2C2E  3000               	movlw	0
 18189  2C2F  00A8               	movwf	?___fltol^(0+128)
 18190  2C30  0008               	return
 18191  2C31                     l7809:	
 18192  2C31  0828               	movf	___fltol@f1^(0+128),w
 18193  2C32  00AC               	movwf	??___fltol^(0+128)
 18194  2C33  0829               	movf	(___fltol@f1+1)^(0+128),w
 18195  2C34  00AD               	movwf	(??___fltol^(0+128)+1)
 18196  2C35  082A               	movf	(___fltol@f1+2)^(0+128),w
 18197  2C36  00AE               	movwf	(??___fltol^(0+128)+2)
 18198  2C37  082B               	movf	(___fltol@f1+3)^(0+128),w
 18199  2C38  00AF               	movwf	(??___fltol^(0+128)+3)
 18200  2C39  301F               	movlw	31
 18201  2C3A                     u10945:	
 18202  2C3A  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18203  2C3B  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18204  2C3C  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18205  2C3D  0CAC               	rrf	??___fltol^(0+128),f
 18206  2C3E  0B89               	decfsz	9,f
 18207  2C3F  2C3A               	goto	u10945
 18208  2C40  082C               	movf	??___fltol^(0+128),w
 18209  2C41  00B0               	movwf	(??___fltol+4)^(0+128)
 18210  2C42  0830               	movf	(??___fltol+4)^(0+128),w
 18211  2C43  00FA               	movwf	___fltol@sign1
 18212  2C44  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18213  2C45  30FF               	movlw	255
 18214  2C46  05A8               	andwf	___fltol@f1^(0+128),f
 18215  2C47  30FF               	movlw	255
 18216  2C48  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18217  2C49  30FF               	movlw	255
 18218  2C4A  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18219  2C4B  3000               	movlw	0
 18220  2C4C  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18221  2C4D  3096               	movlw	150
 18222  2C4E  02FB               	subwf	___fltol@exp1,f
 18223  2C4F  1FFB               	btfss	___fltol@exp1,7
 18224  2C50  2C64               	goto	l7827
 18225  2C51  087B               	movf	___fltol@exp1,w
 18226  2C52  3A80               	xorlw	128
 18227  2C53  3E97               	addlw	151
 18228  2C54  1C03               	btfss	3,0
 18229  2C55  2C28               	goto	l7805
 18230  2C56                     l7825:	
 18231  2C56  3001               	movlw	1
 18232  2C57                     u10975:	
 18233  2C57  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18234  2C58  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18235  2C59  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18236  2C5A  0CA8               	rrf	___fltol@f1^(0+128),f
 18237  2C5B  0B89               	decfsz	9,f
 18238  2C5C  2C57               	goto	u10975
 18239  2C5D  3001               	movlw	1
 18240  2C5E  00AC               	movwf	??___fltol^(0+128)
 18241  2C5F  082C               	movf	??___fltol^(0+128),w
 18242  2C60  07FB               	addwf	___fltol@exp1,f
 18243  2C61  1903               	btfsc	3,2
 18244  2C62  2C75               	goto	l7835
 18245  2C63  2C56               	goto	l7825
 18246  2C64                     l7827:	
 18247  2C64  3020               	movlw	32
 18248  2C65  027B               	subwf	___fltol@exp1,w
 18249  2C66  1803               	btfsc	3,0
 18250  2C67  2C28               	goto	l7805
 18251  2C68                     l1029:	
 18252  2C68  087B               	movf	___fltol@exp1,w
 18253  2C69  1903               	btfsc	3,2
 18254  2C6A  2C75               	goto	l7835
 18255  2C6B  3001               	movlw	1
 18256  2C6C                     u11005:	
 18257  2C6C  35A8               	lslf	___fltol@f1^(0+128),f
 18258  2C6D  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18259  2C6E  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18260  2C6F  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18261  2C70  0B89               	decfsz	9,f
 18262  2C71  2C6C               	goto	u11005
 18263  2C72  3001               	movlw	1
 18264  2C73  02FB               	subwf	___fltol@exp1,f
 18265  2C74  2C68               	goto	l1029
 18266  2C75                     l7835:	
 18267  2C75  087A               	movf	___fltol@sign1,w
 18268  2C76  1903               	btfsc	3,2
 18269  2C77  0008               	return
 18270  2C78  09A8               	comf	___fltol@f1^(0+128),f
 18271  2C79  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18272  2C7A  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18273  2C7B  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18274  2C7C  0AA8               	incf	___fltol@f1^(0+128),f
 18275  2C7D  1903               	skipnz
 18276  2C7E  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18277  2C7F  1903               	skipnz
 18278  2C80  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18279  2C81  1903               	skipnz
 18280  2C82  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18281  2C83  0008               	return
 18282  2C84                     __end_of___fltol:	
 18283                           
 18284                           	psect	text67
 18285  3715                     __ptext67:	
 18286 ;; *************** function _init_TMR1 *****************
 18287 ;; Defined at:
 18288 ;;		line 187 in file "main.c"
 18289 ;; Parameters:    Size  Location     Type
 18290 ;;		None
 18291 ;; Auto vars:     Size  Location     Type
 18292 ;;		None
 18293 ;; Return value:  Size  Location     Type
 18294 ;;                  1    wreg      void 
 18295 ;; Registers used:
 18296 ;;		wreg, status,2, status,0
 18297 ;; Tracked objects:
 18298 ;;		On entry : 0/0
 18299 ;;		On exit  : 0/0
 18300 ;;		Unchanged: 0/0
 18301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18306 ;;Total ram usage:        0 bytes
 18307 ;; Hardware stack levels used:    1
 18308 ;; Hardware stack levels required when called:    1
 18309 ;; This function calls:
 18310 ;;		Nothing
 18311 ;; This function is called by:
 18312 ;;		_main
 18313 ;; This function uses a non-reentrant model
 18314 ;;
 18315                           
 18316                           
 18317                           ;psect for function _init_TMR1
 18318  3715                     _init_TMR1:	
 18319                           
 18320                           ;main.c: 190:     T1CONbits.T1CKPS = 0b00;
 18321                           
 18322                           ;incstack = 0
 18323                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 18324  3715  30CF               	movlw	-49
 18325  3716  0020               	movlb	0	; select bank0
 18326  3717  0598               	andwf	24,f	;volatile
 18327                           
 18328                           ;main.c: 192:     TMR1 = 0;
 18329  3718  0196               	clrf	22	;volatile
 18330  3719  0197               	clrf	23	;volatile
 18331                           
 18332                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
 18333  371A  1418               	bsf	24,0	;volatile
 18334                           
 18335                           ;main.c: 196:     PIE1bits.TMR1IE = 1;
 18336  371B  0021               	movlb	1	; select bank1
 18337  371C  1411               	bsf	17,0	;volatile
 18338                           
 18339                           ;main.c: 198:     INTCONbits.PEIE = 1;
 18340  371D  170B               	bsf	11,6	;volatile
 18341                           
 18342                           ;main.c: 200:     (INTCONbits.GIE = 1);
 18343  371E  178B               	bsf	11,7	;volatile
 18344  371F  0008               	return
 18345  3720                     __end_of_init_TMR1:	
 18346                           
 18347                           	psect	text68
 18348  36CB                     __ptext68:	
 18349 ;; *************** function _init_RGB *****************
 18350 ;; Defined at:
 18351 ;;		line 6 in file "RGB.c"
 18352 ;; Parameters:    Size  Location     Type
 18353 ;;		None
 18354 ;; Auto vars:     Size  Location     Type
 18355 ;;		None
 18356 ;; Return value:  Size  Location     Type
 18357 ;;                  1    wreg      void 
 18358 ;; Registers used:
 18359 ;;		None
 18360 ;; Tracked objects:
 18361 ;;		On entry : 0/0
 18362 ;;		On exit  : 0/0
 18363 ;;		Unchanged: 0/0
 18364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18369 ;;Total ram usage:        0 bytes
 18370 ;; Hardware stack levels used:    1
 18371 ;; Hardware stack levels required when called:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		_main
 18376 ;; This function uses a non-reentrant model
 18377 ;;
 18378                           
 18379                           
 18380                           ;psect for function _init_RGB
 18381  36CB                     _init_RGB:	
 18382                           
 18383                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 18384                           
 18385                           ;incstack = 0
 18386                           ; Regs used in _init_RGB: []
 18387  36CB  0022               	movlb	2	; select bank2
 18388  36CC  160C               	bsf	12,4	;volatile
 18389                           
 18390                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 18391  36CD  168C               	bsf	12,5	;volatile
 18392                           
 18393                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 18394  36CE  1410               	bsf	16,0	;volatile
 18395  36CF  0008               	return
 18396  36D0                     __end_of_init_RGB:	
 18397                           
 18398                           	psect	text69
 18399  3720                     __ptext69:	
 18400 ;; *************** function _init_I2C *****************
 18401 ;; Defined at:
 18402 ;;		line 10 in file "I2C.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;		None
 18405 ;; Auto vars:     Size  Location     Type
 18406 ;;		None
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  1    wreg      void 
 18409 ;; Registers used:
 18410 ;;		wreg, status,2, status,0
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;Total ram usage:        1 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; Hardware stack levels required when called:    1
 18423 ;; This function calls:
 18424 ;;		Nothing
 18425 ;; This function is called by:
 18426 ;;		_main
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           
 18431                           ;psect for function _init_I2C
 18432  3720                     _init_I2C:	
 18433                           
 18434                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 18435                           
 18436                           ;incstack = 0
 18437                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 18438  3720  0024               	movlb	4	; select bank4
 18439  3721  0815               	movf	21,w	;volatile
 18440  3722  39F0               	andlw	-16
 18441  3723  3808               	iorlw	8
 18442  3724  0095               	movwf	21	;volatile
 18443                           
 18444                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 18445  3725  1695               	bsf	21,5	;volatile
 18446                           
 18447                           ;I2C.c: 24:     SSPADD = 39;
 18448  3726  3027               	movlw	39
 18449  3727  0092               	movwf	18	;volatile
 18450                           
 18451                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 18452  3728  3034               	movlw	52
 18453  3729  00F1               	movwf	??_init_I2C
 18454  372A  30F2               	movlw	242
 18455  372B                     u11467:	
 18456  372B  0B89               	decfsz	9,f
 18457  372C  2F2B               	goto	u11467
 18458  372D  0BF1               	decfsz	??_init_I2C,f
 18459  372E  2F2B               	goto	u11467
 18460  372F  0008               	return
 18461  3730                     __end_of_init_I2C:	
 18462                           
 18463                           	psect	text70
 18464  0808                     __ptext70:	
 18465 ;; *************** function _init_GPIO *****************
 18466 ;; Defined at:
 18467 ;;		line 204 in file "main.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;		None
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;		None
 18472 ;; Return value:  Size  Location     Type
 18473 ;;                  1    wreg      void 
 18474 ;; Registers used:
 18475 ;;		wreg, status,2, status,0
 18476 ;; Tracked objects:
 18477 ;;		On entry : 0/0
 18478 ;;		On exit  : 0/0
 18479 ;;		Unchanged: 0/0
 18480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18485 ;;Total ram usage:        0 bytes
 18486 ;; Hardware stack levels used:    1
 18487 ;; Hardware stack levels required when called:    1
 18488 ;; This function calls:
 18489 ;;		Nothing
 18490 ;; This function is called by:
 18491 ;;		_main
 18492 ;; This function uses a non-reentrant model
 18493 ;;
 18494                           
 18495                           
 18496                           ;psect for function _init_GPIO
 18497  0808                     _init_GPIO:	
 18498                           
 18499                           ;main.c: 210:     TRISBbits.TRISB2 = 0;
 18500                           
 18501                           ;incstack = 0
 18502                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 18503  0808  0021               	movlb	1	; select bank1
 18504  0809  110D               	bcf	13,2	;volatile
 18505                           
 18506                           ;main.c: 211:     ANSELBbits.ANSB2 = 0;
 18507  080A  0023               	movlb	3	; select bank3
 18508  080B  110D               	bcf	13,2	;volatile
 18509                           
 18510                           ;main.c: 212:     TRISBbits.TRISB3 = 1;
 18511  080C  0021               	movlb	1	; select bank1
 18512  080D  158D               	bsf	13,3	;volatile
 18513                           
 18514                           ;main.c: 213:     ANSELBbits.ANSB3 = 0;
 18515  080E  0023               	movlb	3	; select bank3
 18516  080F  118D               	bcf	13,3	;volatile
 18517                           
 18518                           ;main.c: 218:     ANSELCbits.ANSC4 = 0;
 18519  0810  120E               	bcf	14,4	;volatile
 18520                           
 18521                           ;main.c: 219:     ANSELCbits.ANSC5 = 0;
 18522  0811  128E               	bcf	14,5	;volatile
 18523                           
 18524                           ;main.c: 220:     TRISCbits.TRISC4 = 1;
 18525  0812  0021               	movlb	1	; select bank1
 18526  0813  160E               	bsf	14,4	;volatile
 18527                           
 18528                           ;main.c: 221:     TRISCbits.TRISC5 = 1;
 18529  0814  168E               	bsf	14,5	;volatile
 18530                           
 18531                           ;main.c: 230:     TRISAbits.TRISA4 = 0;
 18532  0815  120C               	bcf	12,4	;volatile
 18533                           
 18534                           ;main.c: 231:     TRISAbits.TRISA5 = 0;
 18535  0816  128C               	bcf	12,5	;volatile
 18536                           
 18537                           ;main.c: 232:     TRISEbits.TRISE0 = 0;
 18538  0817  1010               	bcf	16,0	;volatile
 18539                           
 18540                           ;main.c: 237:     TRISAbits.TRISA3 = 0;
 18541  0818  118C               	bcf	12,3	;volatile
 18542                           
 18543                           ;main.c: 238:     LATAbits.LATA3 = 0;
 18544  0819  0022               	movlb	2	; select bank2
 18545  081A  118C               	bcf	12,3	;volatile
 18546                           
 18547                           ;main.c: 244:     PPSLOCK = 0x55;
 18548  081B  3055               	movlw	85
 18549  081C  003C               	movlb	28	; select bank28
 18550  081D  008F               	movwf	15	;volsfr
 18551                           
 18552                           ;main.c: 245:     PPSLOCK = 0xAA;
 18553  081E  30AA               	movlw	170
 18554  081F  008F               	movwf	15	;volsfr
 18555                           
 18556                           ;main.c: 246:     PPSLOCKbits.PPSLOCKED = 0x00;
 18557  0820  100F               	bcf	15,0	;volsfr
 18558                           
 18559                           ;main.c: 250:     RC4PPSbits.RC4PPS = 0x0011;
 18560  0821  003D               	movlb	29	; select bank29
 18561  0822  0824               	movf	36,w	;volatile
 18562  0823  39E0               	andlw	-32
 18563  0824  3811               	iorlw	17
 18564  0825  00A4               	movwf	36	;volatile
 18565                           
 18566                           ;main.c: 251:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 18567  0826  003C               	movlb	28	; select bank28
 18568  0827  0821               	movf	33,w	;volatile
 18569  0828  39E0               	andlw	-32
 18570  0829  3814               	iorlw	20
 18571  082A  00A1               	movwf	33	;volatile
 18572                           
 18573                           ;main.c: 252:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 18574  082B  0820               	movf	32,w	;volatile
 18575  082C  39E0               	andlw	-32
 18576  082D  3815               	iorlw	21
 18577  082E  00A0               	movwf	32	;volatile
 18578                           
 18579                           ;main.c: 253:     RC5PPSbits.RC5PPS = 0x0010;
 18580  082F  003D               	movlb	29	; select bank29
 18581  0830  0825               	movf	37,w	;volatile
 18582  0831  39E0               	andlw	-32
 18583  0832  3810               	iorlw	16
 18584  0833  00A5               	movwf	37	;volatile
 18585                           
 18586                           ;main.c: 256:     RB2PPSbits.RB2PPS = 0x14;
 18587  0834  081A               	movf	26,w	;volatile
 18588  0835  39E0               	andlw	-32
 18589  0836  3814               	iorlw	20
 18590  0837  009A               	movwf	26	;volatile
 18591                           
 18592                           ;main.c: 257:     RXPPSbits.RXPPS = 0x0B;
 18593  0838  003C               	movlb	28	; select bank28
 18594  0839  0824               	movf	36,w	;volatile
 18595  083A  39E0               	andlw	-32
 18596  083B  380B               	iorlw	11
 18597  083C  00A4               	movwf	36	;volatile
 18598                           
 18599                           ;main.c: 259:     PPSLOCK = 0x55;
 18600  083D  3055               	movlw	85
 18601  083E  008F               	movwf	15	;volsfr
 18602                           
 18603                           ;main.c: 260:     PPSLOCK = 0xAA;
 18604  083F  30AA               	movlw	170
 18605  0840  008F               	movwf	15	;volsfr
 18606                           
 18607                           ;main.c: 261:     PPSLOCKbits.PPSLOCKED = 0x01;
 18608  0841  140F               	bsf	15,0	;volsfr
 18609  0842  0008               	return
 18610  0843                     __end_of_init_GPIO:	
 18611                           
 18612                           	psect	text71
 18613  36D0                     __ptext71:	
 18614 ;; *************** function _initWDT *****************
 18615 ;; Defined at:
 18616 ;;		line 265 in file "main.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;		None
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;		None
 18621 ;; Return value:  Size  Location     Type
 18622 ;;                  1    wreg      void 
 18623 ;; Registers used:
 18624 ;;		wreg, status,2, status,0
 18625 ;; Tracked objects:
 18626 ;;		On entry : 0/0
 18627 ;;		On exit  : 0/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18634 ;;Total ram usage:        0 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:    1
 18637 ;; This function calls:
 18638 ;;		Nothing
 18639 ;; This function is called by:
 18640 ;;		_main
 18641 ;; This function uses a non-reentrant model
 18642 ;;
 18643                           
 18644                           
 18645                           ;psect for function _initWDT
 18646  36D0                     _initWDT:	
 18647                           
 18648                           ;main.c: 267:     WDTCONbits.WDTPS = 0b01101;
 18649                           
 18650                           ;incstack = 0
 18651                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 18652  36D0  0021               	movlb	1	; select bank1
 18653  36D1  0817               	movf	23,w	;volatile
 18654  36D2  39C1               	andlw	-63
 18655  36D3  381A               	iorlw	26
 18656  36D4  0097               	movwf	23	;volatile
 18657  36D5  0008               	return
 18658  36D6                     __end_of_initWDT:	
 18659                           
 18660                           	psect	text72
 18661  36C8                     __ptext72:	
 18662 ;; *************** function _initClock *****************
 18663 ;; Defined at:
 18664 ;;		line 178 in file "main.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;		None
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;		None
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  1    wreg      void 
 18671 ;; Registers used:
 18672 ;;		status,2, status,0, pclath, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/0
 18675 ;;		On exit  : 0/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18682 ;;Total ram usage:        0 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; Hardware stack levels required when called:    2
 18685 ;; This function calls:
 18686 ;;		_internal_16
 18687 ;; This function is called by:
 18688 ;;		_main
 18689 ;; This function uses a non-reentrant model
 18690 ;;
 18691                           
 18692                           
 18693                           ;psect for function _initClock
 18694  36C8                     _initClock:	
 18695                           
 18696                           ;main.c: 180:     internal_16();
 18697                           
 18698                           ;incstack = 0
 18699                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 18700  36C8  31B6  26E6         	fcall	_internal_16
 18701  36CA  0008               	return
 18702  36CB                     __end_of_initClock:	
 18703                           
 18704                           	psect	text73
 18705  36E6                     __ptext73:	
 18706 ;; *************** function _internal_16 *****************
 18707 ;; Defined at:
 18708 ;;		line 26 in file "pic16f1719_internals.c"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;		None
 18711 ;; Auto vars:     Size  Location     Type
 18712 ;;		None
 18713 ;; Return value:  Size  Location     Type
 18714 ;;                  1    wreg      void 
 18715 ;; Registers used:
 18716 ;;		None
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18726 ;;Total ram usage:        0 bytes
 18727 ;; Hardware stack levels used:    1
 18728 ;; Hardware stack levels required when called:    1
 18729 ;; This function calls:
 18730 ;;		Nothing
 18731 ;; This function is called by:
 18732 ;;		_initClock
 18733 ;; This function uses a non-reentrant model
 18734 ;;
 18735                           
 18736                           
 18737                           ;psect for function _internal_16
 18738  36E6                     _internal_16:	
 18739                           
 18740                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 18741                           
 18742                           ;incstack = 0
 18743                           ; Regs used in _internal_16: []
 18744  36E6  0021               	movlb	1	; select bank1
 18745  36E7  1019               	bcf	25,0	;volatile
 18746                           
 18747                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 18748  36E8  1099               	bcf	25,1	;volatile
 18749                           
 18750                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 18751  36E9  1599               	bsf	25,3	;volatile
 18752                           
 18753                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 18754  36EA  1619               	bsf	25,4	;volatile
 18755                           
 18756                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 18757  36EB  1699               	bsf	25,5	;volatile
 18758                           
 18759                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 18760  36EC  1719               	bsf	25,6	;volatile
 18761                           
 18762                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 18763  36ED  1399               	bcf	25,7	;volatile
 18764  36EE  0008               	return
 18765  36EF                     __end_of_internal_16:	
 18766                           
 18767                           	psect	text74
 18768  208E                     __ptext74:	
 18769 ;; *************** function _EUSART_Initialize *****************
 18770 ;; Defined at:
 18771 ;;		line 6 in file "EUSART.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  baudrate        4   18[BANK0 ] const long 
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;  x               2   10[COMMON] unsigned int 
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  1    wreg      unsigned char 
 18778 ;; Registers used:
 18779 ;;		wreg, status,2, status,0, pclath, cstack
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/0
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18787 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18788 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18789 ;;Total ram usage:       18 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    2
 18792 ;; This function calls:
 18793 ;;		___aldiv
 18794 ;; This function is called by:
 18795 ;;		_main
 18796 ;; This function uses a non-reentrant model
 18797 ;;
 18798                           
 18799                           
 18800                           ;psect for function _EUSART_Initialize
 18801  208E                     _EUSART_Initialize:	
 18802                           
 18803                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 18804                           
 18805                           ;incstack = 0
 18806                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18807  208E  0020               	movlb	0	; select bank0
 18808  208F  0832               	movf	EUSART_Initialize@baudrate,w
 18809  2090  00B6               	movwf	??_EUSART_Initialize
 18810  2091  0833               	movf	EUSART_Initialize@baudrate+1,w
 18811  2092  00B7               	movwf	??_EUSART_Initialize+1
 18812  2093  0834               	movf	EUSART_Initialize@baudrate+2,w
 18813  2094  00B8               	movwf	??_EUSART_Initialize+2
 18814  2095  0835               	movf	EUSART_Initialize@baudrate+3,w
 18815  2096  00B9               	movwf	??_EUSART_Initialize+3
 18816  2097  3006               	movlw	6
 18817  2098                     u11315:	
 18818  2098  35B6               	lslf	??_EUSART_Initialize,f
 18819  2099  0DB7               	rlf	??_EUSART_Initialize+1,f
 18820  209A  0DB8               	rlf	??_EUSART_Initialize+2,f
 18821  209B  0DB9               	rlf	??_EUSART_Initialize+3,f
 18822  209C  0B89               	decfsz	9,f
 18823  209D  2898               	goto	u11315
 18824  209E  0839               	movf	??_EUSART_Initialize+3,w
 18825  209F  00A7               	movwf	___aldiv@divisor+3
 18826  20A0  0838               	movf	??_EUSART_Initialize+2,w
 18827  20A1  00A6               	movwf	___aldiv@divisor+2
 18828  20A2  0837               	movf	??_EUSART_Initialize+1,w
 18829  20A3  00A5               	movwf	___aldiv@divisor+1
 18830  20A4  0836               	movf	??_EUSART_Initialize,w
 18831  20A5  00A4               	movwf	___aldiv@divisor
 18832  20A6  0832               	movf	EUSART_Initialize@baudrate,w
 18833  20A7  00BA               	movwf	??_EUSART_Initialize+4
 18834  20A8  0833               	movf	EUSART_Initialize@baudrate+1,w
 18835  20A9  00BB               	movwf	??_EUSART_Initialize+5
 18836  20AA  0834               	movf	EUSART_Initialize@baudrate+2,w
 18837  20AB  00BC               	movwf	??_EUSART_Initialize+6
 18838  20AC  0835               	movf	EUSART_Initialize@baudrate+3,w
 18839  20AD  00BD               	movwf	??_EUSART_Initialize+7
 18840  20AE  3006               	movlw	6
 18841  20AF                     u11325:	
 18842  20AF  35BA               	lslf	??_EUSART_Initialize+4,f
 18843  20B0  0DBB               	rlf	??_EUSART_Initialize+5,f
 18844  20B1  0DBC               	rlf	??_EUSART_Initialize+6,f
 18845  20B2  0DBD               	rlf	??_EUSART_Initialize+7,f
 18846  20B3  0B89               	decfsz	9,f
 18847  20B4  28AF               	goto	u11325
 18848  20B5  3000               	movlw	0
 18849  20B6  00BE               	movwf	??_EUSART_Initialize+8
 18850  20B7  3024               	movlw	36
 18851  20B8  00BF               	movwf	??_EUSART_Initialize+9
 18852  20B9  30F4               	movlw	244
 18853  20BA  00C0               	movwf	??_EUSART_Initialize+10
 18854  20BB  3000               	movlw	0
 18855  20BC  00C1               	movwf	??_EUSART_Initialize+11
 18856  20BD  083A               	movf	??_EUSART_Initialize+4,w
 18857  20BE  02BE               	subwf	??_EUSART_Initialize+8,f
 18858  20BF  083B               	movf	??_EUSART_Initialize+5,w
 18859  20C0  3BBF               	subwfb	??_EUSART_Initialize+9,f
 18860  20C1  083C               	movf	??_EUSART_Initialize+6,w
 18861  20C2  3BC0               	subwfb	??_EUSART_Initialize+10,f
 18862  20C3  083D               	movf	??_EUSART_Initialize+7,w
 18863  20C4  3BC1               	subwfb	??_EUSART_Initialize+11,f
 18864  20C5  0841               	movf	??_EUSART_Initialize+11,w
 18865  20C6  00AB               	movwf	___aldiv@dividend+3
 18866  20C7  0840               	movf	??_EUSART_Initialize+10,w
 18867  20C8  00AA               	movwf	___aldiv@dividend+2
 18868  20C9  083F               	movf	??_EUSART_Initialize+9,w
 18869  20CA  00A9               	movwf	___aldiv@dividend+1
 18870  20CB  083E               	movf	??_EUSART_Initialize+8,w
 18871  20CC  00A8               	movwf	___aldiv@dividend
 18872  20CD  31A0  200C  31A0   	fcall	___aldiv
 18873  20D0  0020               	movlb	0	; select bank0
 18874  20D1  0825               	movf	?___aldiv+1,w
 18875  20D2  00FB               	movwf	EUSART_Initialize@x+1
 18876  20D3  0824               	movf	?___aldiv,w
 18877  20D4  00FA               	movwf	EUSART_Initialize@x
 18878                           
 18879                           ;EUSART.c: 10:  if(x>255)
 18880  20D5  3001               	movlw	1
 18881  20D6  027B               	subwf	EUSART_Initialize@x+1,w
 18882  20D7  3000               	movlw	0
 18883  20D8  1903               	skipnz
 18884  20D9  027A               	subwf	EUSART_Initialize@x,w
 18885  20DA  1C03               	skipc
 18886  20DB  2924               	goto	l8141
 18887                           
 18888                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 18889  20DC  0832               	movf	EUSART_Initialize@baudrate,w
 18890  20DD  00B6               	movwf	??_EUSART_Initialize
 18891  20DE  0833               	movf	EUSART_Initialize@baudrate+1,w
 18892  20DF  00B7               	movwf	??_EUSART_Initialize+1
 18893  20E0  0834               	movf	EUSART_Initialize@baudrate+2,w
 18894  20E1  00B8               	movwf	??_EUSART_Initialize+2
 18895  20E2  0835               	movf	EUSART_Initialize@baudrate+3,w
 18896  20E3  00B9               	movwf	??_EUSART_Initialize+3
 18897  20E4  3004               	movlw	4
 18898  20E5                     u11345:	
 18899  20E5  35B6               	lslf	??_EUSART_Initialize,f
 18900  20E6  0DB7               	rlf	??_EUSART_Initialize+1,f
 18901  20E7  0DB8               	rlf	??_EUSART_Initialize+2,f
 18902  20E8  0DB9               	rlf	??_EUSART_Initialize+3,f
 18903  20E9  0B89               	decfsz	9,f
 18904  20EA  28E5               	goto	u11345
 18905  20EB  0839               	movf	??_EUSART_Initialize+3,w
 18906  20EC  00A7               	movwf	___aldiv@divisor+3
 18907  20ED  0838               	movf	??_EUSART_Initialize+2,w
 18908  20EE  00A6               	movwf	___aldiv@divisor+2
 18909  20EF  0837               	movf	??_EUSART_Initialize+1,w
 18910  20F0  00A5               	movwf	___aldiv@divisor+1
 18911  20F1  0836               	movf	??_EUSART_Initialize,w
 18912  20F2  00A4               	movwf	___aldiv@divisor
 18913  20F3  0832               	movf	EUSART_Initialize@baudrate,w
 18914  20F4  00BA               	movwf	??_EUSART_Initialize+4
 18915  20F5  0833               	movf	EUSART_Initialize@baudrate+1,w
 18916  20F6  00BB               	movwf	??_EUSART_Initialize+5
 18917  20F7  0834               	movf	EUSART_Initialize@baudrate+2,w
 18918  20F8  00BC               	movwf	??_EUSART_Initialize+6
 18919  20F9  0835               	movf	EUSART_Initialize@baudrate+3,w
 18920  20FA  00BD               	movwf	??_EUSART_Initialize+7
 18921  20FB  3004               	movlw	4
 18922  20FC                     u11355:	
 18923  20FC  35BA               	lslf	??_EUSART_Initialize+4,f
 18924  20FD  0DBB               	rlf	??_EUSART_Initialize+5,f
 18925  20FE  0DBC               	rlf	??_EUSART_Initialize+6,f
 18926  20FF  0DBD               	rlf	??_EUSART_Initialize+7,f
 18927  2100  0B89               	decfsz	9,f
 18928  2101  28FC               	goto	u11355
 18929  2102  3000               	movlw	0
 18930  2103  00BE               	movwf	??_EUSART_Initialize+8
 18931  2104  3024               	movlw	36
 18932  2105  00BF               	movwf	??_EUSART_Initialize+9
 18933  2106  30F4               	movlw	244
 18934  2107  00C0               	movwf	??_EUSART_Initialize+10
 18935  2108  3000               	movlw	0
 18936  2109  00C1               	movwf	??_EUSART_Initialize+11
 18937  210A  083A               	movf	??_EUSART_Initialize+4,w
 18938  210B  02BE               	subwf	??_EUSART_Initialize+8,f
 18939  210C  083B               	movf	??_EUSART_Initialize+5,w
 18940  210D  3BBF               	subwfb	??_EUSART_Initialize+9,f
 18941  210E  083C               	movf	??_EUSART_Initialize+6,w
 18942  210F  3BC0               	subwfb	??_EUSART_Initialize+10,f
 18943  2110  083D               	movf	??_EUSART_Initialize+7,w
 18944  2111  3BC1               	subwfb	??_EUSART_Initialize+11,f
 18945  2112  0841               	movf	??_EUSART_Initialize+11,w
 18946  2113  00AB               	movwf	___aldiv@dividend+3
 18947  2114  0840               	movf	??_EUSART_Initialize+10,w
 18948  2115  00AA               	movwf	___aldiv@dividend+2
 18949  2116  083F               	movf	??_EUSART_Initialize+9,w
 18950  2117  00A9               	movwf	___aldiv@dividend+1
 18951  2118  083E               	movf	??_EUSART_Initialize+8,w
 18952  2119  00A8               	movwf	___aldiv@dividend
 18953  211A  31A0  200C  31A0   	fcall	___aldiv
 18954  211D  0020               	movlb	0	; select bank0
 18955  211E  0825               	movf	?___aldiv+1,w
 18956  211F  00FB               	movwf	EUSART_Initialize@x+1
 18957  2120  0824               	movf	?___aldiv,w
 18958  2121  00FA               	movwf	EUSART_Initialize@x
 18959                           
 18960                           ;EUSART.c: 13:   BRGH = 1;
 18961  2122  0023               	movlb	3	; select bank3
 18962  2123  151E               	bsf	30,2	;volatile
 18963  2124                     l8141:	
 18964                           
 18965                           ;EUSART.c: 15:  if(x<256)
 18966  2124  3001               	movlw	1
 18967  2125  027B               	subwf	EUSART_Initialize@x+1,w
 18968  2126  3000               	movlw	0
 18969  2127  1903               	skipnz
 18970  2128  027A               	subwf	EUSART_Initialize@x,w
 18971  2129  1803               	skipnc
 18972  212A  0008               	return
 18973                           
 18974                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 18975  212B  087A               	movf	EUSART_Initialize@x,w
 18976  212C  0023               	movlb	3	; select bank3
 18977  212D  009B               	movwf	27	;volatile
 18978                           
 18979                           ;EUSART.c: 18:    SYNC = 0;
 18980  212E  121E               	bcf	30,4	;volatile
 18981                           
 18982                           ;EUSART.c: 19:    SPEN = 1;
 18983  212F  179D               	bsf	29,7	;volatile
 18984                           
 18985                           ;EUSART.c: 20:           TRISC7 = 1;
 18986  2130  0021               	movlb	1	; select bank1
 18987  2131  178E               	bsf	14,7	;volatile
 18988                           
 18989                           ;EUSART.c: 21:           TRISC6 = 1;
 18990  2132  170E               	bsf	14,6	;volatile
 18991                           
 18992                           ;EUSART.c: 22:           CREN = 1;
 18993  2133  0023               	movlb	3	; select bank3
 18994  2134  161D               	bsf	29,4	;volatile
 18995                           
 18996                           ;EUSART.c: 23:           TXEN = 1;
 18997  2135  169E               	bsf	30,5	;volatile
 18998  2136  0008               	return
 18999  2137                     __end_of_EUSART_Initialize:	
 19000                           
 19001                           	psect	text75
 19002  200C                     __ptext75:	
 19003 ;; *************** function ___aldiv *****************
 19004 ;; Defined at:
 19005 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 19006 ;; Parameters:    Size  Location     Type
 19007 ;;  divisor         4    4[BANK0 ] long 
 19008 ;;  dividend        4    8[BANK0 ] long 
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;  quotient        4   14[BANK0 ] long 
 19011 ;;  sign            1   13[BANK0 ] unsigned char 
 19012 ;;  counter         1   12[BANK0 ] unsigned char 
 19013 ;; Return value:  Size  Location     Type
 19014 ;;                  4    4[BANK0 ] long 
 19015 ;; Registers used:
 19016 ;;		wreg, status,2, status,0
 19017 ;; Tracked objects:
 19018 ;;		On entry : 0/0
 19019 ;;		On exit  : 0/0
 19020 ;;		Unchanged: 0/0
 19021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19022 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19023 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19025 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19026 ;;Total ram usage:       15 bytes
 19027 ;; Hardware stack levels used:    1
 19028 ;; Hardware stack levels required when called:    1
 19029 ;; This function calls:
 19030 ;;		Nothing
 19031 ;; This function is called by:
 19032 ;;		_EUSART_Initialize
 19033 ;;		_setCellUndervoltageProtection
 19034 ;;		_setCellOvervoltageProtection
 19035 ;;		_updateVoltages
 19036 ;; This function uses a non-reentrant model
 19037 ;;
 19038                           
 19039                           
 19040                           ;psect for function ___aldiv
 19041  200C                     ___aldiv:	
 19042                           
 19043                           ;incstack = 0
 19044                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 19045  200C  0020               	movlb	0	; select bank0
 19046  200D  01AD               	clrf	___aldiv@sign
 19047  200E  1FA7               	btfss	___aldiv@divisor+3,7
 19048  200F  281D               	goto	l893
 19049  2010  09A4               	comf	___aldiv@divisor,f
 19050  2011  09A5               	comf	___aldiv@divisor+1,f
 19051  2012  09A6               	comf	___aldiv@divisor+2,f
 19052  2013  09A7               	comf	___aldiv@divisor+3,f
 19053  2014  0AA4               	incf	___aldiv@divisor,f
 19054  2015  1903               	skipnz
 19055  2016  0AA5               	incf	___aldiv@divisor+1,f
 19056  2017  1903               	skipnz
 19057  2018  0AA6               	incf	___aldiv@divisor+2,f
 19058  2019  1903               	skipnz
 19059  201A  0AA7               	incf	___aldiv@divisor+3,f
 19060  201B  01AD               	clrf	___aldiv@sign
 19061  201C  0AAD               	incf	___aldiv@sign,f
 19062  201D                     l893:	
 19063  201D  1FAB               	btfss	___aldiv@dividend+3,7
 19064  201E  282E               	goto	l7753
 19065  201F  09A8               	comf	___aldiv@dividend,f
 19066  2020  09A9               	comf	___aldiv@dividend+1,f
 19067  2021  09AA               	comf	___aldiv@dividend+2,f
 19068  2022  09AB               	comf	___aldiv@dividend+3,f
 19069  2023  0AA8               	incf	___aldiv@dividend,f
 19070  2024  1903               	skipnz
 19071  2025  0AA9               	incf	___aldiv@dividend+1,f
 19072  2026  1903               	skipnz
 19073  2027  0AAA               	incf	___aldiv@dividend+2,f
 19074  2028  1903               	skipnz
 19075  2029  0AAB               	incf	___aldiv@dividend+3,f
 19076  202A  3001               	movlw	1
 19077  202B  00F9               	movwf	??___aldiv
 19078  202C  0879               	movf	??___aldiv,w
 19079  202D  06AD               	xorwf	___aldiv@sign,f
 19080  202E                     l7753:	
 19081  202E  3000               	movlw	0
 19082  202F  00B1               	movwf	___aldiv@quotient+3
 19083  2030  3000               	movlw	0
 19084  2031  00B0               	movwf	___aldiv@quotient+2
 19085  2032  3000               	movlw	0
 19086  2033  00AF               	movwf	___aldiv@quotient+1
 19087  2034  3000               	movlw	0
 19088  2035  00AE               	movwf	___aldiv@quotient
 19089  2036  0827               	movf	___aldiv@divisor+3,w
 19090  2037  0426               	iorwf	___aldiv@divisor+2,w
 19091  2038  0425               	iorwf	___aldiv@divisor+1,w
 19092  2039  0424               	iorwf	___aldiv@divisor,w
 19093  203A  1903               	skipnz
 19094  203B  2877               	goto	l7775
 19095  203C  01AC               	clrf	___aldiv@counter
 19096  203D  0AAC               	incf	___aldiv@counter,f
 19097  203E                     l7761:	
 19098  203E  1BA7               	btfsc	___aldiv@divisor+3,7
 19099  203F  284C               	goto	l7763
 19100  2040  3001               	movlw	1
 19101  2041                     u10815:	
 19102  2041  35A4               	lslf	___aldiv@divisor,f
 19103  2042  0DA5               	rlf	___aldiv@divisor+1,f
 19104  2043  0DA6               	rlf	___aldiv@divisor+2,f
 19105  2044  0DA7               	rlf	___aldiv@divisor+3,f
 19106  2045  0B89               	decfsz	9,f
 19107  2046  2841               	goto	u10815
 19108  2047  3001               	movlw	1
 19109  2048  00F9               	movwf	??___aldiv
 19110  2049  0879               	movf	??___aldiv,w
 19111  204A  07AC               	addwf	___aldiv@counter,f
 19112  204B  283E               	goto	l7761
 19113  204C                     l7763:	
 19114  204C  3001               	movlw	1
 19115  204D                     u10835:	
 19116  204D  35AE               	lslf	___aldiv@quotient,f
 19117  204E  0DAF               	rlf	___aldiv@quotient+1,f
 19118  204F  0DB0               	rlf	___aldiv@quotient+2,f
 19119  2050  0DB1               	rlf	___aldiv@quotient+3,f
 19120  2051  0B89               	decfsz	9,f
 19121  2052  284D               	goto	u10835
 19122  2053  0827               	movf	___aldiv@divisor+3,w
 19123  2054  022B               	subwf	___aldiv@dividend+3,w
 19124  2055  1D03               	skipz
 19125  2056  2861               	goto	u10845
 19126  2057  0826               	movf	___aldiv@divisor+2,w
 19127  2058  022A               	subwf	___aldiv@dividend+2,w
 19128  2059  1D03               	skipz
 19129  205A  2861               	goto	u10845
 19130  205B  0825               	movf	___aldiv@divisor+1,w
 19131  205C  0229               	subwf	___aldiv@dividend+1,w
 19132  205D  1D03               	skipz
 19133  205E  2861               	goto	u10845
 19134  205F  0824               	movf	___aldiv@divisor,w
 19135  2060  0228               	subwf	___aldiv@dividend,w
 19136  2061                     u10845:	
 19137  2061  1C03               	skipc
 19138  2062  286C               	goto	l7771
 19139  2063  0824               	movf	___aldiv@divisor,w
 19140  2064  02A8               	subwf	___aldiv@dividend,f
 19141  2065  0825               	movf	___aldiv@divisor+1,w
 19142  2066  3BA9               	subwfb	___aldiv@dividend+1,f
 19143  2067  0826               	movf	___aldiv@divisor+2,w
 19144  2068  3BAA               	subwfb	___aldiv@dividend+2,f
 19145  2069  0827               	movf	___aldiv@divisor+3,w
 19146  206A  3BAB               	subwfb	___aldiv@dividend+3,f
 19147  206B  142E               	bsf	___aldiv@quotient,0
 19148  206C                     l7771:	
 19149  206C  3001               	movlw	1
 19150  206D                     u10855:	
 19151  206D  36A7               	lsrf	___aldiv@divisor+3,f
 19152  206E  0CA6               	rrf	___aldiv@divisor+2,f
 19153  206F  0CA5               	rrf	___aldiv@divisor+1,f
 19154  2070  0CA4               	rrf	___aldiv@divisor,f
 19155  2071  0B89               	decfsz	9,f
 19156  2072  286D               	goto	u10855
 19157  2073  3001               	movlw	1
 19158  2074  02AC               	subwf	___aldiv@counter,f
 19159  2075  1D03               	btfss	3,2
 19160  2076  284C               	goto	l7763
 19161  2077                     l7775:	
 19162  2077  082D               	movf	___aldiv@sign,w
 19163  2078  1903               	btfsc	3,2
 19164  2079  2885               	goto	l7779
 19165  207A  09AE               	comf	___aldiv@quotient,f
 19166  207B  09AF               	comf	___aldiv@quotient+1,f
 19167  207C  09B0               	comf	___aldiv@quotient+2,f
 19168  207D  09B1               	comf	___aldiv@quotient+3,f
 19169  207E  0AAE               	incf	___aldiv@quotient,f
 19170  207F  1903               	skipnz
 19171  2080  0AAF               	incf	___aldiv@quotient+1,f
 19172  2081  1903               	skipnz
 19173  2082  0AB0               	incf	___aldiv@quotient+2,f
 19174  2083  1903               	skipnz
 19175  2084  0AB1               	incf	___aldiv@quotient+3,f
 19176  2085                     l7779:	
 19177  2085  0831               	movf	___aldiv@quotient+3,w
 19178  2086  00A7               	movwf	?___aldiv+3
 19179  2087  0830               	movf	___aldiv@quotient+2,w
 19180  2088  00A6               	movwf	?___aldiv+2
 19181  2089  082F               	movf	___aldiv@quotient+1,w
 19182  208A  00A5               	movwf	?___aldiv+1
 19183  208B  082E               	movf	___aldiv@quotient,w
 19184  208C  00A4               	movwf	?___aldiv
 19185  208D  0008               	return
 19186  208E                     __end_of___aldiv:	
 19187                           
 19188                           	psect	intentry
 19189  0004                     __pintentry:	
 19190 ;; *************** function _myIsr *****************
 19191 ;; Defined at:
 19192 ;;		line 59 in file "main.c"
 19193 ;; Parameters:    Size  Location     Type
 19194 ;;		None
 19195 ;; Auto vars:     Size  Location     Type
 19196 ;;		None
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  1    wreg      void 
 19199 ;; Registers used:
 19200 ;;		wreg, status,2, status,0
 19201 ;; Tracked objects:
 19202 ;;		On entry : 0/0
 19203 ;;		On exit  : 0/0
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19210 ;;Total ram usage:        1 bytes
 19211 ;; Hardware stack levels used:    1
 19212 ;; This function calls:
 19213 ;;		Nothing
 19214 ;; This function is called by:
 19215 ;;		Interrupt level 1
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219  0004                     _myIsr:	
 19220                           
 19221                           ;incstack = 0
 19222  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19223                           
 19224                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 19225  0005  3180               	pagesel	$
 19226                           
 19227                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 19228  0006  0020               	movlb	0	; select bank0
 19229  0007  1C11               	btfss	17,0	;volatile
 19230  0008  281E               	goto	i1l141
 19231  0009  0021               	movlb	1	; select bank1
 19232  000A  1C11               	btfss	17,0	;volatile
 19233  000B  281E               	goto	i1l141
 19234                           
 19235                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 19236  000C  0020               	movlb	0	; select bank0
 19237  000D  1011               	bcf	17,0	;volatile
 19238                           
 19239                           ;main.c: 65:         count++;
 19240  000E  3001               	movlw	1
 19241  000F  00F0               	movwf	??_myIsr
 19242  0010  0870               	movf	??_myIsr,w
 19243  0011  0022               	movlb	2	; select bank2
 19244  0012  07EB               	addwf	myIsr@count^(0+256),f
 19245                           
 19246                           ;main.c: 68:         if (count == 61) {
 19247  0013  303D               	movlw	61
 19248  0014  066B               	xorwf	myIsr@count^(0+256),w
 19249  0015  1D03               	btfss	3,2
 19250  0016  281E               	goto	i1l141
 19251                           
 19252                           ;main.c: 69:             tmr1_flag = 1;
 19253  0017  3001               	movlw	1
 19254  0018  00F0               	movwf	??_myIsr
 19255  0019  0870               	movf	??_myIsr,w
 19256  001A  0021               	movlb	1	; select bank1
 19257  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 19258                           
 19259                           ;main.c: 70:             count = 0;
 19260  001C  0022               	movlb	2	; select bank2
 19261  001D  01EB               	clrf	myIsr@count^(0+256)
 19262  001E                     i1l141:	
 19263  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19264  001F  0009               	retfie
 19265  0020                     __end_of_myIsr:	
 19266  007E                     btemp	set	126	;btemp
 19267  007E                     int$flags	set	126
 19268  007E                     wtemp0	set	126
 19269  2771                     
 19270                           	psect	text8_split_1
 19271  1826                     l6761:	
 19272                           
 19273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 19274  1826  0859               	movf	vfpfcnvrt@fmt,w
 19275  1827  0086               	movwf	6
 19276  1828  0187               	clrf	7
 19277  1829  3F40               	moviw [0]fsr1
 19278  182A  00F1               	movwf	strncmp@_l
 19279  182B  3F41               	moviw [1]fsr1
 19280  182C  00F2               	movwf	strncmp@_l+1
 19281  182D  3048               	movlw	low (STR_17| (0+32768))
 19282  182E  00F3               	movwf	strncmp@_r
 19283  182F  30B9               	movlw	high (STR_17| (0+32768))
 19284  1830  00F4               	movwf	strncmp@_r+1
 19285  1831  3003               	movlw	3
 19286  1832  00F5               	movwf	strncmp@n
 19287  1833  3000               	movlw	0
 19288  1834  00F6               	movwf	strncmp@n+1
 19289  1835  31AA  22C5  3198   	fcall	_strncmp
 19290  1838  0871               	movf	?_strncmp,w
 19291  1839  0472               	iorwf	?_strncmp+1,w
 19292  183A  1903               	btfsc	3,2
 19293  183B  2853               	goto	l6765
 19294  183C  0020               	movlb	0	; select bank0
 19295  183D  0859               	movf	vfpfcnvrt@fmt,w
 19296  183E  0086               	movwf	6
 19297  183F  0187               	clrf	7
 19298  1840  3F40               	moviw [0]fsr1
 19299  1841  00F1               	movwf	strncmp@_l
 19300  1842  3F41               	moviw [1]fsr1
 19301  1843  00F2               	movwf	strncmp@_l+1
 19302  1844  304C               	movlw	low (STR_21| (0+32768))
 19303  1845  00F3               	movwf	strncmp@_r
 19304  1846  30B9               	movlw	high (STR_21| (0+32768))
 19305  1847  00F4               	movwf	strncmp@_r+1
 19306  1848  3003               	movlw	3
 19307  1849  00F5               	movwf	strncmp@n
 19308  184A  3000               	movlw	0
 19309  184B  00F6               	movwf	strncmp@n+1
 19310  184C  31AA  22C5  3198   	fcall	_strncmp
 19311  184F  0871               	movf	?_strncmp,w
 19312  1850  0472               	iorwf	?_strncmp+1,w
 19313  1851  1D03               	btfss	3,2
 19314  1852  289E               	goto	l6773
 19315  1853                     l6765:	
 19316                           
 19317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 19318  1853  0020               	movlb	0	; select bank0
 19319  1854  0859               	movf	vfpfcnvrt@fmt,w
 19320  1855  0086               	movwf	6
 19321  1856  0187               	clrf	7
 19322  1857  3003               	movlw	3
 19323  1858  0781               	addwf	1,f
 19324  1859  3141               	addfsr 1,1
 19325  185A  1803               	skipnc
 19326  185B  0A81               	incf	1,f
 19327                           
 19328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19329  185C  085A               	movf	vfpfcnvrt@ap,w
 19330  185D  0086               	movwf	6
 19331  185E  0187               	clrf	7
 19332  185F  0801               	movf	1,w
 19333  1860  0084               	movwf	4
 19334  1861  0185               	clrf	5
 19335  1862  3002               	movlw	2
 19336  1863  0781               	addwf	1,f
 19337  1864  0800               	movf	0,w
 19338  1865  0021               	movlb	1	; select bank1
 19339  1866  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 19340  1867  3980               	andlw	128
 19341  1868  1D03               	skipz
 19342  1869  30FF               	movlw	255
 19343  186A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 19344  186B  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 19345  186C  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 19346  186D  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 19347  186E  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 19348  186F  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 19349  1870  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 19350                           
 19351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 19352  1871  0020               	movlb	0	; select bank0
 19353  1872  0858               	movf	vfpfcnvrt@fp+1,w
 19354  1873  00B1               	movwf	dtoa@fp+1
 19355  1874  0857               	movf	vfpfcnvrt@fp,w
 19356  1875  00B0               	movwf	dtoa@fp
 19357  1876  0021               	movlb	1	; select bank1
 19358  1877  0828               	movf	vfpfcnvrt@ll^(0+128),w
 19359  1878  0020               	movlb	0	; select bank0
 19360  1879  00B2               	movwf	dtoa@d
 19361  187A  0021               	movlb	1	; select bank1
 19362  187B  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 19363  187C  0020               	movlb	0	; select bank0
 19364  187D  00B3               	movwf	dtoa@d+1
 19365  187E  0021               	movlb	1	; select bank1
 19366  187F  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 19367  1880  0020               	movlb	0	; select bank0
 19368  1881  00B4               	movwf	dtoa@d+2
 19369  1882  0021               	movlb	1	; select bank1
 19370  1883  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 19371  1884  0020               	movlb	0	; select bank0
 19372  1885  00B5               	movwf	dtoa@d+3
 19373  1886  0021               	movlb	1	; select bank1
 19374  1887  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 19375  1888  0020               	movlb	0	; select bank0
 19376  1889  00B6               	movwf	dtoa@d+4
 19377  188A  0021               	movlb	1	; select bank1
 19378  188B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 19379  188C  0020               	movlb	0	; select bank0
 19380  188D  00B7               	movwf	dtoa@d+5
 19381  188E  0021               	movlb	1	; select bank1
 19382  188F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 19383  1890  0020               	movlb	0	; select bank0
 19384  1891  00B8               	movwf	dtoa@d+6
 19385  1892  0021               	movlb	1	; select bank1
 19386  1893  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 19387  1894  0020               	movlb	0	; select bank0
 19388  1895  00B9               	movwf	dtoa@d+7
 19389  1896  319A  2235         	fcall	_dtoa
 19390  1898  0020               	movlb	0	; select bank0
 19391  1899  0831               	movf	?_dtoa+1,w
 19392  189A  00D8               	movwf	?_vfpfcnvrt+1
 19393  189B  0830               	movf	?_dtoa,w
 19394  189C  00D7               	movwf	?_vfpfcnvrt
 19395  189D  0008               	return
 19396  189E                     l6773:	
 19397                           
 19398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 19399  189E  0020               	movlb	0	; select bank0
 19400  189F  0859               	movf	vfpfcnvrt@fmt,w
 19401  18A0  0086               	movwf	6
 19402  18A1  0187               	clrf	7
 19403  18A2  3F40               	moviw [0]fsr1
 19404  18A3  00F1               	movwf	strncmp@_l
 19405  18A4  3F41               	moviw [1]fsr1
 19406  18A5  00F2               	movwf	strncmp@_l+1
 19407  18A6  3049               	movlw	low ((STR_17+1)| (0+32768))
 19408  18A7  00F3               	movwf	strncmp@_r
 19409  18A8  30B9               	movlw	high ((STR_17+1)| (0+32768))
 19410  18A9  00F4               	movwf	strncmp@_r+1
 19411  18AA  3002               	movlw	2
 19412  18AB  00F5               	movwf	strncmp@n
 19413  18AC  3000               	movlw	0
 19414  18AD  00F6               	movwf	strncmp@n+1
 19415  18AE  31AA  22C5  3198   	fcall	_strncmp
 19416  18B1  0871               	movf	?_strncmp,w
 19417  18B2  0472               	iorwf	?_strncmp+1,w
 19418  18B3  1903               	btfsc	3,2
 19419  18B4  28CC               	goto	l6777
 19420  18B5  0020               	movlb	0	; select bank0
 19421  18B6  0859               	movf	vfpfcnvrt@fmt,w
 19422  18B7  0086               	movwf	6
 19423  18B8  0187               	clrf	7
 19424  18B9  3F40               	moviw [0]fsr1
 19425  18BA  00F1               	movwf	strncmp@_l
 19426  18BB  3F41               	moviw [1]fsr1
 19427  18BC  00F2               	movwf	strncmp@_l+1
 19428  18BD  304D               	movlw	low ((STR_21+1)| (0+32768))
 19429  18BE  00F3               	movwf	strncmp@_r
 19430  18BF  30B9               	movlw	high ((STR_21+1)| (0+32768))
 19431  18C0  00F4               	movwf	strncmp@_r+1
 19432  18C1  3002               	movlw	2
 19433  18C2  00F5               	movwf	strncmp@n
 19434  18C3  3000               	movlw	0
 19435  18C4  00F6               	movwf	strncmp@n+1
 19436  18C5  31AA  22C5  3198   	fcall	_strncmp
 19437  18C8  0871               	movf	?_strncmp,w
 19438  18C9  0472               	iorwf	?_strncmp+1,w
 19439  18CA  1D03               	btfss	3,2
 19440  18CB  291E               	goto	L9
 19441  18CC                     l6777:	
 19442                           
 19443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 19444  18CC  0020               	movlb	0	; select bank0
 19445  18CD  0859               	movf	vfpfcnvrt@fmt,w
 19446  18CE  0086               	movwf	6
 19447  18CF  0187               	clrf	7
 19448  18D0  3002               	movlw	2
 19449  18D1  0781               	addwf	1,f
 19450  18D2  3141               	addfsr 1,1
 19451  18D3  1803               	skipnc
 19452  18D4  0A81               	incf	1,f
 19453                           
 19454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19455  18D5  085A               	movf	vfpfcnvrt@ap,w
 19456  18D6  0086               	movwf	6
 19457  18D7  0187               	clrf	7
 19458  18D8  0801               	movf	1,w
 19459  18D9  0084               	movwf	4
 19460  18DA  0185               	clrf	5
 19461  18DB  3002               	movlw	2
 19462  18DC  0781               	addwf	1,f
 19463  18DD  3F00               	moviw [0]fsr0
 19464  18DE  00DB               	movwf	??_vfpfcnvrt
 19465  18DF  3F01               	moviw [1]fsr0
 19466  18E0  00DC               	movwf	??_vfpfcnvrt+1
 19467  18E1  085B               	movf	??_vfpfcnvrt,w
 19468  18E2  0021               	movlb	1	; select bank1
 19469  18E3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 19470  18E4  0020               	movlb	0	; select bank0
 19471  18E5  085C               	movf	??_vfpfcnvrt+1,w
 19472  18E6  0021               	movlb	1	; select bank1
 19473  18E7  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 19474  18E8  0D89               	rlf	9,f
 19475  18E9  3B89               	subwfb	9,f
 19476  18EA  0989               	comf	9,f
 19477  18EB  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 19478  18EC  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 19479  18ED  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 19480  18EE  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 19481  18EF  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 19482  18F0  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 19483                           
 19484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 19485  18F1  0020               	movlb	0	; select bank0
 19486  18F2  0858               	movf	vfpfcnvrt@fp+1,w
 19487  18F3  00B1               	movwf	dtoa@fp+1
 19488  18F4  0857               	movf	vfpfcnvrt@fp,w
 19489  18F5  00B0               	movwf	dtoa@fp
 19490  18F6  0021               	movlb	1	; select bank1
 19491  18F7  0828               	movf	vfpfcnvrt@ll^(0+128),w
 19492  18F8  0020               	movlb	0	; select bank0
 19493  18F9  00B2               	movwf	dtoa@d
 19494  18FA  0021               	movlb	1	; select bank1
 19495  18FB  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 19496  18FC  0020               	movlb	0	; select bank0
 19497  18FD  00B3               	movwf	dtoa@d+1
 19498  18FE  0021               	movlb	1	; select bank1
 19499  18FF  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 19500  1900  0020               	movlb	0	; select bank0
 19501  1901  00B4               	movwf	dtoa@d+2
 19502  1902  0021               	movlb	1	; select bank1
 19503  1903  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 19504  1904  0020               	movlb	0	; select bank0
 19505  1905  00B5               	movwf	dtoa@d+3
 19506  1906  0021               	movlb	1	; select bank1
 19507  1907  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 19508  1908  0020               	movlb	0	; select bank0
 19509  1909  00B6               	movwf	dtoa@d+4
 19510  190A  0021               	movlb	1	; select bank1
 19511  190B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 19512  190C  0020               	movlb	0	; select bank0
 19513  190D  00B7               	movwf	dtoa@d+5
 19514  190E  0021               	movlb	1	; select bank1
 19515  190F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 19516  1910  0020               	movlb	0	; select bank0
 19517  1911  00B8               	movwf	dtoa@d+6
 19518  1912  0021               	movlb	1	; select bank1
 19519  1913  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 19520  1914  0020               	movlb	0	; select bank0
 19521  1915  00B9               	movwf	dtoa@d+7
 19522  1916  319A  2235         	fcall	_dtoa
 19523  1918  0020               	movlb	0	; select bank0
 19524  1919  0831               	movf	?_dtoa+1,w
 19525  191A  00D8               	movwf	?_vfpfcnvrt+1
 19526  191B  0830               	movf	?_dtoa,w
 19527  191C  00D7               	movwf	?_vfpfcnvrt
 19528  191D  0008               	return
 19529  191E                     L9:	
 19530  191E                     L8:	
 19531  191E  3188  2843         	ljmp	l6785
 19532                           
 19533                           	psect	text8_split_2
 19534  0843                     l6785:	
 19535                           
 19536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 19537  0843  0020               	movlb	0	; select bank0
 19538  0844  0859               	movf	vfpfcnvrt@fmt,w
 19539  0845  0086               	movwf	6
 19540  0846  0187               	clrf	7
 19541  0847  3F40               	moviw [0]fsr1
 19542  0848  00DB               	movwf	??_vfpfcnvrt
 19543  0849  3F41               	moviw [1]fsr1
 19544  084A  00DC               	movwf	??_vfpfcnvrt+1
 19545  084B  085B               	movf	??_vfpfcnvrt,w
 19546  084C  0084               	movwf	4
 19547  084D  085C               	movf	??_vfpfcnvrt+1,w
 19548  084E  0085               	movwf	5
 19549  084F  0012               	moviw fsr0++
 19550  0850  3A64               	xorlw	100
 19551  0851  1903               	btfsc	3,2
 19552  0852  2862               	goto	l6789
 19553  0853  0859               	movf	vfpfcnvrt@fmt,w
 19554  0854  0086               	movwf	6
 19555  0855  0187               	clrf	7
 19556  0856  3F40               	moviw [0]fsr1
 19557  0857  00DB               	movwf	??_vfpfcnvrt
 19558  0858  3F41               	moviw [1]fsr1
 19559  0859  00DC               	movwf	??_vfpfcnvrt+1
 19560  085A  085B               	movf	??_vfpfcnvrt,w
 19561  085B  0084               	movwf	4
 19562  085C  085C               	movf	??_vfpfcnvrt+1,w
 19563  085D  0085               	movwf	5
 19564  085E  0012               	moviw fsr0++
 19565  085F  3A69               	xorlw	105
 19566  0860  1D03               	btfss	3,2
 19567  0861  28B3               	goto	l6797
 19568  0862                     l6789:	
 19569                           
 19570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 19571  0862  0859               	movf	vfpfcnvrt@fmt,w
 19572  0863  0086               	movwf	6
 19573  0864  0187               	clrf	7
 19574  0865  3001               	movlw	1
 19575  0866  0781               	addwf	1,f
 19576  0867  3141               	addfsr 1,1
 19577  0868  1803               	skipnc
 19578  0869  0A81               	incf	1,f
 19579                           
 19580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 19581  086A  085A               	movf	vfpfcnvrt@ap,w
 19582  086B  0086               	movwf	6
 19583  086C  0187               	clrf	7
 19584  086D  0801               	movf	1,w
 19585  086E  0084               	movwf	4
 19586  086F  0185               	clrf	5
 19587  0870  3002               	movlw	2
 19588  0871  0781               	addwf	1,f
 19589  0872  3F00               	moviw [0]fsr0
 19590  0873  00DB               	movwf	??_vfpfcnvrt
 19591  0874  3F01               	moviw [1]fsr0
 19592  0875  00DC               	movwf	??_vfpfcnvrt+1
 19593  0876  085B               	movf	??_vfpfcnvrt,w
 19594  0877  0021               	movlb	1	; select bank1
 19595  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 19596  0879  0020               	movlb	0	; select bank0
 19597  087A  085C               	movf	??_vfpfcnvrt+1,w
 19598  087B  0021               	movlb	1	; select bank1
 19599  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 19600  087D  0D89               	rlf	9,f
 19601  087E  3B89               	subwfb	9,f
 19602  087F  0989               	comf	9,f
 19603  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 19604  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 19605  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 19606  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 19607  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 19608  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 19609                           
 19610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 19611  0886  0020               	movlb	0	; select bank0
 19612  0887  0858               	movf	vfpfcnvrt@fp+1,w
 19613  0888  00B1               	movwf	dtoa@fp+1
 19614  0889  0857               	movf	vfpfcnvrt@fp,w
 19615  088A  00B0               	movwf	dtoa@fp
 19616  088B  0021               	movlb	1	; select bank1
 19617  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 19618  088D  0020               	movlb	0	; select bank0
 19619  088E  00B2               	movwf	dtoa@d
 19620  088F  0021               	movlb	1	; select bank1
 19621  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 19622  0891  0020               	movlb	0	; select bank0
 19623  0892  00B3               	movwf	dtoa@d+1
 19624  0893  0021               	movlb	1	; select bank1
 19625  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 19626  0895  0020               	movlb	0	; select bank0
 19627  0896  00B4               	movwf	dtoa@d+2
 19628  0897  0021               	movlb	1	; select bank1
 19629  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 19630  0899  0020               	movlb	0	; select bank0
 19631  089A  00B5               	movwf	dtoa@d+3
 19632  089B  0021               	movlb	1	; select bank1
 19633  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 19634  089D  0020               	movlb	0	; select bank0
 19635  089E  00B6               	movwf	dtoa@d+4
 19636  089F  0021               	movlb	1	; select bank1
 19637  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 19638  08A1  0020               	movlb	0	; select bank0
 19639  08A2  00B7               	movwf	dtoa@d+5
 19640  08A3  0021               	movlb	1	; select bank1
 19641  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 19642  08A5  0020               	movlb	0	; select bank0
 19643  08A6  00B8               	movwf	dtoa@d+6
 19644  08A7  0021               	movlb	1	; select bank1
 19645  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 19646  08A9  0020               	movlb	0	; select bank0
 19647  08AA  00B9               	movwf	dtoa@d+7
 19648  08AB  319A  2235         	fcall	_dtoa
 19649  08AD  0020               	movlb	0	; select bank0
 19650  08AE  0831               	movf	?_dtoa+1,w
 19651  08AF  00D8               	movwf	?_vfpfcnvrt+1
 19652  08B0  0830               	movf	?_dtoa,w
 19653  08B1  00D7               	movwf	?_vfpfcnvrt
 19654  08B2  0008               	return
 19655  08B3                     l6797:	
 19656                           
 19657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 19658  08B3  0859               	movf	vfpfcnvrt@fmt,w
 19659  08B4  0086               	movwf	6
 19660  08B5  0187               	clrf	7
 19661  08B6  3F40               	moviw [0]fsr1
 19662  08B7  00F1               	movwf	strncmp@_l
 19663  08B8  3F41               	moviw [1]fsr1
 19664  08B9  00F2               	movwf	strncmp@_l+1
 19665  08BA  3063               	movlw	low (STR_35| (0+32768))
 19666  08BB  00F3               	movwf	strncmp@_r
 19667  08BC  30B9               	movlw	high (STR_35| (0+32768))
 19668  08BD  00F4               	movwf	strncmp@_r+1
 19669  08BE  3002               	movlw	2
 19670  08BF  00F5               	movwf	strncmp@n
 19671  08C0  3000               	movlw	0
 19672  08C1  00F6               	movwf	strncmp@n+1
 19673  08C2  31AA  22C5  3188   	fcall	_strncmp
 19674  08C5  0871               	movf	?_strncmp,w
 19675  08C6  0472               	iorwf	?_strncmp+1,w
 19676  08C7  1903               	btfsc	3,2
 19677  08C8  28E0               	goto	l6801
 19678  08C9  0020               	movlb	0	; select bank0
 19679  08CA  0859               	movf	vfpfcnvrt@fmt,w
 19680  08CB  0086               	movwf	6
 19681  08CC  0187               	clrf	7
 19682  08CD  3F40               	moviw [0]fsr1
 19683  08CE  00F1               	movwf	strncmp@_l
 19684  08CF  3F41               	moviw [1]fsr1
 19685  08D0  00F2               	movwf	strncmp@_l+1
 19686  08D1  3066               	movlw	low (STR_39| (0+32768))
 19687  08D2  00F3               	movwf	strncmp@_r
 19688  08D3  30B9               	movlw	high (STR_39| (0+32768))
 19689  08D4  00F4               	movwf	strncmp@_r+1
 19690  08D5  3002               	movlw	2
 19691  08D6  00F5               	movwf	strncmp@n
 19692  08D7  3000               	movlw	0
 19693  08D8  00F6               	movwf	strncmp@n+1
 19694  08D9  31AA  22C5  3188   	fcall	_strncmp
 19695  08DC  0871               	movf	?_strncmp,w
 19696  08DD  0472               	iorwf	?_strncmp+1,w
 19697  08DE  1D03               	btfss	3,2
 19698  08DF  2929               	goto	l6809
 19699  08E0                     l6801:	
 19700                           
 19701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 19702  08E0  0020               	movlb	0	; select bank0
 19703  08E1  0859               	movf	vfpfcnvrt@fmt,w
 19704  08E2  0086               	movwf	6
 19705  08E3  0187               	clrf	7
 19706  08E4  3002               	movlw	2
 19707  08E5  0781               	addwf	1,f
 19708  08E6  3141               	addfsr 1,1
 19709  08E7  1803               	skipnc
 19710  08E8  0A81               	incf	1,f
 19711                           
 19712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19713  08E9  085A               	movf	vfpfcnvrt@ap,w
 19714  08EA  0086               	movwf	6
 19715  08EB  0187               	clrf	7
 19716  08EC  0801               	movf	1,w
 19717  08ED  0084               	movwf	4
 19718  08EE  0185               	clrf	5
 19719  08EF  3002               	movlw	2
 19720  08F0  0781               	addwf	1,f
 19721  08F1  3F00               	moviw [0]fsr0
 19722  08F2  0021               	movlb	1	; select bank1
 19723  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 19724  08F4  3F01               	moviw [1]fsr0
 19725  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 19726  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 19727  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 19728  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 19729  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 19730  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 19731  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 19732                           
 19733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 19734  08FC  0020               	movlb	0	; select bank0
 19735  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 19736  08FE  00B1               	movwf	dtoa@fp+1
 19737  08FF  0857               	movf	vfpfcnvrt@fp,w
 19738  0900  00B0               	movwf	dtoa@fp
 19739  0901  0021               	movlb	1	; select bank1
 19740  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 19741  0903  0020               	movlb	0	; select bank0
 19742  0904  00B2               	movwf	dtoa@d
 19743  0905  0021               	movlb	1	; select bank1
 19744  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 19745  0907  0020               	movlb	0	; select bank0
 19746  0908  00B3               	movwf	dtoa@d+1
 19747  0909  0021               	movlb	1	; select bank1
 19748  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 19749  090B  0020               	movlb	0	; select bank0
 19750  090C  00B4               	movwf	dtoa@d+2
 19751  090D  0021               	movlb	1	; select bank1
 19752  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 19753  090F  0020               	movlb	0	; select bank0
 19754  0910  00B5               	movwf	dtoa@d+3
 19755  0911  0021               	movlb	1	; select bank1
 19756  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 19757  0913  0020               	movlb	0	; select bank0
 19758  0914  00B6               	movwf	dtoa@d+4
 19759  0915  0021               	movlb	1	; select bank1
 19760  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 19761  0917  0020               	movlb	0	; select bank0
 19762  0918  00B7               	movwf	dtoa@d+5
 19763  0919  0021               	movlb	1	; select bank1
 19764  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 19765  091B  0020               	movlb	0	; select bank0
 19766  091C  00B8               	movwf	dtoa@d+6
 19767  091D  0021               	movlb	1	; select bank1
 19768  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 19769  091F  0020               	movlb	0	; select bank0
 19770  0920  00B9               	movwf	dtoa@d+7
 19771  0921  319A  2235         	fcall	_dtoa
 19772  0923  0020               	movlb	0	; select bank0
 19773  0924  0831               	movf	?_dtoa+1,w
 19774  0925  00D8               	movwf	?_vfpfcnvrt+1
 19775  0926  0830               	movf	?_dtoa,w
 19776  0927  00D7               	movwf	?_vfpfcnvrt
 19777  0928  0008               	return
 19778  0929                     l6809:	
 19779                           
 19780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 19781  0929  0020               	movlb	0	; select bank0
 19782  092A  0859               	movf	vfpfcnvrt@fmt,w
 19783  092B  0086               	movwf	6
 19784  092C  0187               	clrf	7
 19785  092D  3F40               	moviw [0]fsr1
 19786  092E  00F1               	movwf	strncmp@_l
 19787  092F  3F41               	moviw [1]fsr1
 19788  0930  00F2               	movwf	strncmp@_l+1
 19789  0931  3054               	movlw	low (STR_44| (0+32768))
 19790  0932  00F3               	movwf	strncmp@_r
 19791  0933  30B9               	movlw	high (STR_44| (0+32768))
 19792  0934  00F4               	movwf	strncmp@_r+1
 19793  0935  3003               	movlw	3
 19794  0936  00F5               	movwf	strncmp@n
 19795  0937  3000               	movlw	0
 19796  0938  00F6               	movwf	strncmp@n+1
 19797  0939  31AA  22C5  3188   	fcall	_strncmp
 19798  093C  0871               	movf	?_strncmp,w
 19799  093D  0472               	iorwf	?_strncmp+1,w
 19800  093E  1D03               	btfss	3,2
 19801  093F  2988               	goto	l6819
 19802                           
 19803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 19804  0940  0020               	movlb	0	; select bank0
 19805  0941  0859               	movf	vfpfcnvrt@fmt,w
 19806  0942  0086               	movwf	6
 19807  0943  0187               	clrf	7
 19808  0944  3003               	movlw	3
 19809  0945  0781               	addwf	1,f
 19810  0946  3141               	addfsr 1,1
 19811  0947  1803               	skipnc
 19812  0948  0A81               	incf	1,f
 19813                           
 19814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19815  0949  085A               	movf	vfpfcnvrt@ap,w
 19816  094A  0086               	movwf	6
 19817  094B  0187               	clrf	7
 19818  094C  0801               	movf	1,w
 19819  094D  0084               	movwf	4
 19820  094E  0185               	clrf	5
 19821  094F  3002               	movlw	2
 19822  0950  0781               	addwf	1,f
 19823  0951  0800               	movf	0,w
 19824  0952  0021               	movlb	1	; select bank1
 19825  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19826  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 19827  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19828  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19829  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19830  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19831  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19832  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19833                           
 19834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 19835  095B  0020               	movlb	0	; select bank0
 19836  095C  0858               	movf	vfpfcnvrt@fp+1,w
 19837  095D  00B1               	movwf	otoa@fp+1
 19838  095E  0857               	movf	vfpfcnvrt@fp,w
 19839  095F  00B0               	movwf	otoa@fp
 19840  0960  0021               	movlb	1	; select bank1
 19841  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19842  0962  0020               	movlb	0	; select bank0
 19843  0963  00B2               	movwf	otoa@d
 19844  0964  0021               	movlb	1	; select bank1
 19845  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19846  0966  0020               	movlb	0	; select bank0
 19847  0967  00B3               	movwf	otoa@d+1
 19848  0968  0021               	movlb	1	; select bank1
 19849  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19850  096A  0020               	movlb	0	; select bank0
 19851  096B  00B4               	movwf	otoa@d+2
 19852  096C  0021               	movlb	1	; select bank1
 19853  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19854  096E  0020               	movlb	0	; select bank0
 19855  096F  00B5               	movwf	otoa@d+3
 19856  0970  0021               	movlb	1	; select bank1
 19857  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19858  0972  0020               	movlb	0	; select bank0
 19859  0973  00B6               	movwf	otoa@d+4
 19860  0974  0021               	movlb	1	; select bank1
 19861  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19862  0976  0020               	movlb	0	; select bank0
 19863  0977  00B7               	movwf	otoa@d+5
 19864  0978  0021               	movlb	1	; select bank1
 19865  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19866  097A  0020               	movlb	0	; select bank0
 19867  097B  00B8               	movwf	otoa@d+6
 19868  097C  0021               	movlb	1	; select bank1
 19869  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19870  097E  0020               	movlb	0	; select bank0
 19871  097F  00B9               	movwf	otoa@d+7
 19872  0980  31A6  261C         	fcall	_otoa
 19873  0982  0020               	movlb	0	; select bank0
 19874  0983  0831               	movf	?_otoa+1,w
 19875  0984  00D8               	movwf	?_vfpfcnvrt+1
 19876  0985  0830               	movf	?_otoa,w
 19877  0986  00D7               	movwf	?_vfpfcnvrt
 19878  0987  0008               	return
 19879  0988                     l6819:	
 19880                           
 19881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 19882  0988  0020               	movlb	0	; select bank0
 19883  0989  0859               	movf	vfpfcnvrt@fmt,w
 19884  098A  0086               	movwf	6
 19885  098B  0187               	clrf	7
 19886  098C  3F40               	moviw [0]fsr1
 19887  098D  00F1               	movwf	strncmp@_l
 19888  098E  3F41               	moviw [1]fsr1
 19889  098F  00F2               	movwf	strncmp@_l+1
 19890  0990  3055               	movlw	low ((STR_44+1)| (0+32768))
 19891  0991  00F3               	movwf	strncmp@_r
 19892  0992  30B9               	movlw	high ((STR_44+1)| (0+32768))
 19893  0993  00F4               	movwf	strncmp@_r+1
 19894  0994  3002               	movlw	2
 19895  0995  00F5               	movwf	strncmp@n
 19896  0996  3000               	movlw	0
 19897  0997  00F6               	movwf	strncmp@n+1
 19898  0998  31AA  22C5  3188   	fcall	_strncmp
 19899  099B  0871               	movf	?_strncmp,w
 19900  099C  0472               	iorwf	?_strncmp+1,w
 19901  099D  1D03               	btfss	3,2
 19902  099E  29E8               	goto	l6829
 19903                           
 19904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 19905  099F  0020               	movlb	0	; select bank0
 19906  09A0  0859               	movf	vfpfcnvrt@fmt,w
 19907  09A1  0086               	movwf	6
 19908  09A2  0187               	clrf	7
 19909  09A3  3002               	movlw	2
 19910  09A4  0781               	addwf	1,f
 19911  09A5  3141               	addfsr 1,1
 19912  09A6  1803               	skipnc
 19913  09A7  0A81               	incf	1,f
 19914                           
 19915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19916  09A8  085A               	movf	vfpfcnvrt@ap,w
 19917  09A9  0086               	movwf	6
 19918  09AA  0187               	clrf	7
 19919  09AB  0801               	movf	1,w
 19920  09AC  0084               	movwf	4
 19921  09AD  0185               	clrf	5
 19922  09AE  3002               	movlw	2
 19923  09AF  0781               	addwf	1,f
 19924  09B0  3F00               	moviw [0]fsr0
 19925  09B1  0021               	movlb	1	; select bank1
 19926  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 19927  09B3  3F01               	moviw [1]fsr0
 19928  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 19929  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 19930  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 19931  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 19932  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 19933  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 19934  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 19935                           
 19936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 19937  09BB  0020               	movlb	0	; select bank0
 19938  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 19939  09BD  00B1               	movwf	otoa@fp+1
 19940  09BE  0857               	movf	vfpfcnvrt@fp,w
 19941  09BF  00B0               	movwf	otoa@fp
 19942  09C0  0021               	movlb	1	; select bank1
 19943  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 19944  09C2  0020               	movlb	0	; select bank0
 19945  09C3  00B2               	movwf	otoa@d
 19946  09C4  0021               	movlb	1	; select bank1
 19947  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 19948  09C6  0020               	movlb	0	; select bank0
 19949  09C7  00B3               	movwf	otoa@d+1
 19950  09C8  0021               	movlb	1	; select bank1
 19951  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 19952  09CA  0020               	movlb	0	; select bank0
 19953  09CB  00B4               	movwf	otoa@d+2
 19954  09CC  0021               	movlb	1	; select bank1
 19955  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 19956  09CE  0020               	movlb	0	; select bank0
 19957  09CF  00B5               	movwf	otoa@d+3
 19958  09D0  0021               	movlb	1	; select bank1
 19959  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 19960  09D2  0020               	movlb	0	; select bank0
 19961  09D3  00B6               	movwf	otoa@d+4
 19962  09D4  0021               	movlb	1	; select bank1
 19963  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 19964  09D6  0020               	movlb	0	; select bank0
 19965  09D7  00B7               	movwf	otoa@d+5
 19966  09D8  0021               	movlb	1	; select bank1
 19967  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 19968  09DA  0020               	movlb	0	; select bank0
 19969  09DB  00B8               	movwf	otoa@d+6
 19970  09DC  0021               	movlb	1	; select bank1
 19971  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 19972  09DE  0020               	movlb	0	; select bank0
 19973  09DF  00B9               	movwf	otoa@d+7
 19974  09E0  31A6  261C         	fcall	_otoa
 19975  09E2  0020               	movlb	0	; select bank0
 19976  09E3  0831               	movf	?_otoa+1,w
 19977  09E4  00D8               	movwf	?_vfpfcnvrt+1
 19978  09E5  0830               	movf	?_otoa,w
 19979  09E6  00D7               	movwf	?_vfpfcnvrt
 19980  09E7  0008               	return
 19981  09E8                     l6829:	
 19982                           
 19983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 19984  09E8  0020               	movlb	0	; select bank0
 19985  09E9  0859               	movf	vfpfcnvrt@fmt,w
 19986  09EA  0086               	movwf	6
 19987  09EB  0187               	clrf	7
 19988  09EC  3F40               	moviw [0]fsr1
 19989  09ED  00DB               	movwf	??_vfpfcnvrt
 19990  09EE  3F41               	moviw [1]fsr1
 19991  09EF  00DC               	movwf	??_vfpfcnvrt+1
 19992  09F0  085B               	movf	??_vfpfcnvrt,w
 19993  09F1  0084               	movwf	4
 19994  09F2  085C               	movf	??_vfpfcnvrt+1,w
 19995  09F3  0085               	movwf	5
 19996  09F4  0012               	moviw fsr0++
 19997  09F5  3A6F               	xorlw	111
 19998  09F6  1D03               	btfss	3,2
 19999  09F7  2A40               	goto	l6839
 20000                           
 20001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 20002  09F8  0859               	movf	vfpfcnvrt@fmt,w
 20003  09F9  0086               	movwf	6
 20004  09FA  0187               	clrf	7
 20005  09FB  3001               	movlw	1
 20006  09FC  0781               	addwf	1,f
 20007  09FD  3141               	addfsr 1,1
 20008  09FE  1803               	skipnc
 20009  09FF  0A81               	incf	1,f
 20010                           
 20011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 20012  0A00  085A               	movf	vfpfcnvrt@ap,w
 20013  0A01  0086               	movwf	6
 20014  0A02  0187               	clrf	7
 20015  0A03  0801               	movf	1,w
 20016  0A04  0084               	movwf	4
 20017  0A05  0185               	clrf	5
 20018  0A06  3002               	movlw	2
 20019  0A07  0781               	addwf	1,f
 20020  0A08  3F00               	moviw [0]fsr0
 20021  0A09  0021               	movlb	1	; select bank1
 20022  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20023  0A0B  3F01               	moviw [1]fsr0
 20024  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20025  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20026  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20027  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20028  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20029  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20030  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20031                           
 20032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 20033  0A13  0020               	movlb	0	; select bank0
 20034  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 20035  0A15  00B1               	movwf	otoa@fp+1
 20036  0A16  0857               	movf	vfpfcnvrt@fp,w
 20037  0A17  00B0               	movwf	otoa@fp
 20038  0A18  0021               	movlb	1	; select bank1
 20039  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20040  0A1A  0020               	movlb	0	; select bank0
 20041  0A1B  00B2               	movwf	otoa@d
 20042  0A1C  0021               	movlb	1	; select bank1
 20043  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20044  0A1E  0020               	movlb	0	; select bank0
 20045  0A1F  00B3               	movwf	otoa@d+1
 20046  0A20  0021               	movlb	1	; select bank1
 20047  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20048  0A22  0020               	movlb	0	; select bank0
 20049  0A23  00B4               	movwf	otoa@d+2
 20050  0A24  0021               	movlb	1	; select bank1
 20051  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20052  0A26  0020               	movlb	0	; select bank0
 20053  0A27  00B5               	movwf	otoa@d+3
 20054  0A28  0021               	movlb	1	; select bank1
 20055  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20056  0A2A  0020               	movlb	0	; select bank0
 20057  0A2B  00B6               	movwf	otoa@d+4
 20058  0A2C  0021               	movlb	1	; select bank1
 20059  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20060  0A2E  0020               	movlb	0	; select bank0
 20061  0A2F  00B7               	movwf	otoa@d+5
 20062  0A30  0021               	movlb	1	; select bank1
 20063  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20064  0A32  0020               	movlb	0	; select bank0
 20065  0A33  00B8               	movwf	otoa@d+6
 20066  0A34  0021               	movlb	1	; select bank1
 20067  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20068  0A36  0020               	movlb	0	; select bank0
 20069  0A37  00B9               	movwf	otoa@d+7
 20070  0A38  31A6  261C         	fcall	_otoa
 20071  0A3A  0020               	movlb	0	; select bank0
 20072  0A3B  0831               	movf	?_otoa+1,w
 20073  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 20074  0A3D  0830               	movf	?_otoa,w
 20075  0A3E  00D7               	movwf	?_vfpfcnvrt
 20076  0A3F  0008               	return
 20077  0A40                     l6839:	
 20078                           
 20079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 20080  0A40  0859               	movf	vfpfcnvrt@fmt,w
 20081  0A41  0086               	movwf	6
 20082  0A42  0187               	clrf	7
 20083  0A43  3F40               	moviw [0]fsr1
 20084  0A44  00F1               	movwf	strncmp@_l
 20085  0A45  3F41               	moviw [1]fsr1
 20086  0A46  00F2               	movwf	strncmp@_l+1
 20087  0A47  306C               	movlw	low (STR_54| (0+32768))
 20088  0A48  00F3               	movwf	strncmp@_r
 20089  0A49  30B9               	movlw	high (STR_54| (0+32768))
 20090  0A4A  00F4               	movwf	strncmp@_r+1
 20091  0A4B  3002               	movlw	2
 20092  0A4C  00F5               	movwf	strncmp@n
 20093  0A4D  3000               	movlw	0
 20094  0A4E  00F6               	movwf	strncmp@n+1
 20095  0A4F  31AA  22C5  3188   	fcall	_strncmp
 20096  0A52  0871               	movf	?_strncmp,w
 20097  0A53  0472               	iorwf	?_strncmp+1,w
 20098  0A54  1D03               	btfss	3,2
 20099  0A55  2A9F               	goto	l6849
 20100                           
 20101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 20102  0A56  0020               	movlb	0	; select bank0
 20103  0A57  0859               	movf	vfpfcnvrt@fmt,w
 20104  0A58  0086               	movwf	6
 20105  0A59  0187               	clrf	7
 20106  0A5A  3002               	movlw	2
 20107  0A5B  0781               	addwf	1,f
 20108  0A5C  3141               	addfsr 1,1
 20109  0A5D  1803               	skipnc
 20110  0A5E  0A81               	incf	1,f
 20111                           
 20112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20113  0A5F  085A               	movf	vfpfcnvrt@ap,w
 20114  0A60  0086               	movwf	6
 20115  0A61  0187               	clrf	7
 20116  0A62  0801               	movf	1,w
 20117  0A63  0084               	movwf	4
 20118  0A64  0185               	clrf	5
 20119  0A65  3002               	movlw	2
 20120  0A66  0781               	addwf	1,f
 20121  0A67  3F00               	moviw [0]fsr0
 20122  0A68  0021               	movlb	1	; select bank1
 20123  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20124  0A6A  3F01               	moviw [1]fsr0
 20125  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20126  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20127  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20128  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20129  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20130  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20131  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20132                           
 20133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 20134  0A72  0020               	movlb	0	; select bank0
 20135  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 20136  0A74  00B1               	movwf	otoa@fp+1
 20137  0A75  0857               	movf	vfpfcnvrt@fp,w
 20138  0A76  00B0               	movwf	otoa@fp
 20139  0A77  0021               	movlb	1	; select bank1
 20140  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20141  0A79  0020               	movlb	0	; select bank0
 20142  0A7A  00B2               	movwf	otoa@d
 20143  0A7B  0021               	movlb	1	; select bank1
 20144  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20145  0A7D  0020               	movlb	0	; select bank0
 20146  0A7E  00B3               	movwf	otoa@d+1
 20147  0A7F  0021               	movlb	1	; select bank1
 20148  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20149  0A81  0020               	movlb	0	; select bank0
 20150  0A82  00B4               	movwf	otoa@d+2
 20151  0A83  0021               	movlb	1	; select bank1
 20152  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20153  0A85  0020               	movlb	0	; select bank0
 20154  0A86  00B5               	movwf	otoa@d+3
 20155  0A87  0021               	movlb	1	; select bank1
 20156  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20157  0A89  0020               	movlb	0	; select bank0
 20158  0A8A  00B6               	movwf	otoa@d+4
 20159  0A8B  0021               	movlb	1	; select bank1
 20160  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20161  0A8D  0020               	movlb	0	; select bank0
 20162  0A8E  00B7               	movwf	otoa@d+5
 20163  0A8F  0021               	movlb	1	; select bank1
 20164  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20165  0A91  0020               	movlb	0	; select bank0
 20166  0A92  00B8               	movwf	otoa@d+6
 20167  0A93  0021               	movlb	1	; select bank1
 20168  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20169  0A95  0020               	movlb	0	; select bank0
 20170  0A96  00B9               	movwf	otoa@d+7
 20171  0A97  31A6  261C         	fcall	_otoa
 20172  0A99  0020               	movlb	0	; select bank0
 20173  0A9A  0831               	movf	?_otoa+1,w
 20174  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 20175  0A9C  0830               	movf	?_otoa,w
 20176  0A9D  00D7               	movwf	?_vfpfcnvrt
 20177  0A9E  0008               	return
 20178  0A9F                     l6849:	
 20179                           
 20180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 20181  0A9F  0020               	movlb	0	; select bank0
 20182  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 20183  0AA1  0086               	movwf	6
 20184  0AA2  0187               	clrf	7
 20185  0AA3  3F40               	moviw [0]fsr1
 20186  0AA4  00F1               	movwf	strncmp@_l
 20187  0AA5  3F41               	moviw [1]fsr1
 20188  0AA6  00F2               	movwf	strncmp@_l+1
 20189  0AA7  3050               	movlw	low (STR_59| (0+32768))
 20190  0AA8  00F3               	movwf	strncmp@_r
 20191  0AA9  30B9               	movlw	high (STR_59| (0+32768))
 20192  0AAA  00F4               	movwf	strncmp@_r+1
 20193  0AAB  3003               	movlw	3
 20194  0AAC  00F5               	movwf	strncmp@n
 20195  0AAD  3000               	movlw	0
 20196  0AAE  00F6               	movwf	strncmp@n+1
 20197  0AAF  31AA  22C5  3188   	fcall	_strncmp
 20198  0AB2  0871               	movf	?_strncmp,w
 20199  0AB3  0472               	iorwf	?_strncmp+1,w
 20200  0AB4  1D03               	btfss	3,2
 20201  0AB5  2B36               	goto	l6861
 20202                           
 20203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 20204  0AB6  0020               	movlb	0	; select bank0
 20205  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 20206  0AB8  0086               	movwf	6
 20207  0AB9  0187               	clrf	7
 20208  0ABA  3003               	movlw	3
 20209  0ABB  0781               	addwf	1,f
 20210  0ABC  3141               	addfsr 1,1
 20211  0ABD  1803               	skipnc
 20212  0ABE  0A81               	incf	1,f
 20213                           
 20214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20215  0ABF  085A               	movf	vfpfcnvrt@ap,w
 20216  0AC0  0086               	movwf	6
 20217  0AC1  0187               	clrf	7
 20218  0AC2  0801               	movf	1,w
 20219  0AC3  0084               	movwf	4
 20220  0AC4  0185               	clrf	5
 20221  0AC5  3002               	movlw	2
 20222  0AC6  0781               	addwf	1,f
 20223  0AC7  3F00               	moviw [0]fsr0
 20224  0AC8  0021               	movlb	1	; select bank1
 20225  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20226  0ACA  3F01               	moviw [1]fsr0
 20227  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20228                           
 20229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 20230  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20231  0ACD  0086               	movwf	6
 20232  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20233  0ACF  0087               	movwf	7
 20234  0AD0  0022               	movlb	2	; select bank2
 20235  0AD1  0862               	movf	_nout^(0+256),w
 20236  0AD2  0081               	movwf	1
 20237  0AD3  2B32               	goto	l6857
 20238  0AD4                     l6863:	
 20239                           
 20240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 20241  0AD4  0020               	movlb	0	; select bank0
 20242  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 20243  0AD6  0086               	movwf	6
 20244  0AD7  0187               	clrf	7
 20245  0AD8  3002               	movlw	2
 20246  0AD9  0781               	addwf	1,f
 20247  0ADA  3141               	addfsr 1,1
 20248  0ADB  1803               	skipnc
 20249  0ADC  0A81               	incf	1,f
 20250                           
 20251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 20252  0ADD  085A               	movf	vfpfcnvrt@ap,w
 20253  0ADE  0086               	movwf	6
 20254  0ADF  0187               	clrf	7
 20255  0AE0  0801               	movf	1,w
 20256  0AE1  0084               	movwf	4
 20257  0AE2  0185               	clrf	5
 20258  0AE3  3002               	movlw	2
 20259  0AE4  0781               	addwf	1,f
 20260  0AE5  3F00               	moviw [0]fsr0
 20261  0AE6  0021               	movlb	1	; select bank1
 20262  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20263  0AE8  3F01               	moviw [1]fsr0
 20264  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20265                           
 20266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 20267  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20268  0AEB  0086               	movwf	6
 20269  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20270  0AED  0087               	movwf	7
 20271  0AEE  0022               	movlb	2	; select bank2
 20272  0AEF  0862               	movf	_nout^(0+256),w
 20273  0AF0  3FC0               	movwi [0]fsr1
 20274  0AF1  0863               	movf	(_nout+1)^(0+256),w
 20275  0AF2  3FC1               	movwi [1]fsr1
 20276  0AF3  2B32               	goto	l6857
 20277  0AF4                     l6875:	
 20278                           
 20279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 20280  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 20281  0AF5  0086               	movwf	6
 20282  0AF6  0187               	clrf	7
 20283  0AF7  3001               	movlw	1
 20284  0AF8  0781               	addwf	1,f
 20285  0AF9  3141               	addfsr 1,1
 20286  0AFA  1803               	skipnc
 20287  0AFB  0A81               	incf	1,f
 20288                           
 20289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 20290  0AFC  085A               	movf	vfpfcnvrt@ap,w
 20291  0AFD  0086               	movwf	6
 20292  0AFE  0187               	clrf	7
 20293  0AFF  0801               	movf	1,w
 20294  0B00  0084               	movwf	4
 20295  0B01  0185               	clrf	5
 20296  0B02  3002               	movlw	2
 20297  0B03  0781               	addwf	1,f
 20298  0B04  3F00               	moviw [0]fsr0
 20299  0B05  0021               	movlb	1	; select bank1
 20300  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20301  0B07  3F01               	moviw [1]fsr0
 20302  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20303                           
 20304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 20305  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20306  0B0A  0086               	movwf	6
 20307  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20308  0B0C  0087               	movwf	7
 20309  0B0D  0022               	movlb	2	; select bank2
 20310  0B0E  0862               	movf	_nout^(0+256),w
 20311  0B0F  3FC0               	movwi [0]fsr1
 20312  0B10  0863               	movf	(_nout+1)^(0+256),w
 20313  0B11  3FC1               	movwi [1]fsr1
 20314  0B12  2B32               	goto	l6857
 20315  0B13                     l6887:	
 20316                           
 20317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 20318  0B13  0020               	movlb	0	; select bank0
 20319  0B14  0859               	movf	vfpfcnvrt@fmt,w
 20320  0B15  0086               	movwf	6
 20321  0B16  0187               	clrf	7
 20322  0B17  3002               	movlw	2
 20323  0B18  0781               	addwf	1,f
 20324  0B19  3141               	addfsr 1,1
 20325  0B1A  1803               	skipnc
 20326  0B1B  0A81               	incf	1,f
 20327                           
 20328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 20329  0B1C  085A               	movf	vfpfcnvrt@ap,w
 20330  0B1D  0086               	movwf	6
 20331  0B1E  0187               	clrf	7
 20332  0B1F  0801               	movf	1,w
 20333  0B20  0084               	movwf	4
 20334  0B21  0185               	clrf	5
 20335  0B22  3002               	movlw	2
 20336  0B23  0781               	addwf	1,f
 20337  0B24  3F00               	moviw [0]fsr0
 20338  0B25  0021               	movlb	1	; select bank1
 20339  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20340  0B27  3F01               	moviw [1]fsr0
 20341  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20342                           
 20343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 20344  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20345  0B2A  0086               	movwf	6
 20346  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20347  0B2C  0087               	movwf	7
 20348  0B2D  0022               	movlb	2	; select bank2
 20349  0B2E  0862               	movf	_nout^(0+256),w
 20350  0B2F  3FC0               	movwi [0]fsr1
 20351  0B30  0863               	movf	(_nout+1)^(0+256),w
 20352  0B31  3FC1               	movwi [1]fsr1
 20353  0B32                     l6857:	
 20354                           
 20355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 20356  0B32  0020               	movlb	0	; select bank0
 20357  0B33  01D7               	clrf	?_vfpfcnvrt
 20358  0B34  01D8               	clrf	?_vfpfcnvrt+1
 20359  0B35  0008               	return
 20360  0B36                     l6861:	
 20361                           
 20362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 20363  0B36  0020               	movlb	0	; select bank0
 20364  0B37  0859               	movf	vfpfcnvrt@fmt,w
 20365  0B38  0086               	movwf	6
 20366  0B39  0187               	clrf	7
 20367  0B3A  3F40               	moviw [0]fsr1
 20368  0B3B  00F1               	movwf	strncmp@_l
 20369  0B3C  3F41               	moviw [1]fsr1
 20370  0B3D  00F2               	movwf	strncmp@_l+1
 20371  0B3E  3051               	movlw	low ((STR_59+1)| (0+32768))
 20372  0B3F  00F3               	movwf	strncmp@_r
 20373  0B40  30B9               	movlw	high ((STR_59+1)| (0+32768))
 20374  0B41  00F4               	movwf	strncmp@_r+1
 20375  0B42  3002               	movlw	2
 20376  0B43  00F5               	movwf	strncmp@n
 20377  0B44  3000               	movlw	0
 20378  0B45  00F6               	movwf	strncmp@n+1
 20379  0B46  31AA  22C5  3188   	fcall	_strncmp
 20380  0B49  0871               	movf	?_strncmp,w
 20381  0B4A  0472               	iorwf	?_strncmp+1,w
 20382  0B4B  1903               	btfsc	3,2
 20383  0B4C  2AD4               	goto	l6863
 20384                           
 20385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 20386  0B4D  0020               	movlb	0	; select bank0
 20387  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 20388  0B4F  0086               	movwf	6
 20389  0B50  0187               	clrf	7
 20390  0B51  3F40               	moviw [0]fsr1
 20391  0B52  00DB               	movwf	??_vfpfcnvrt
 20392  0B53  3F41               	moviw [1]fsr1
 20393  0B54  00DC               	movwf	??_vfpfcnvrt+1
 20394  0B55  085B               	movf	??_vfpfcnvrt,w
 20395  0B56  0084               	movwf	4
 20396  0B57  085C               	movf	??_vfpfcnvrt+1,w
 20397  0B58  0085               	movwf	5
 20398  0B59  0012               	moviw fsr0++
 20399  0B5A  3A6E               	xorlw	110
 20400  0B5B  1903               	btfsc	3,2
 20401  0B5C  2AF4               	goto	l6875
 20402                           
 20403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 20404  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 20405  0B5E  0086               	movwf	6
 20406  0B5F  0187               	clrf	7
 20407  0B60  3F40               	moviw [0]fsr1
 20408  0B61  00F1               	movwf	strncmp@_l
 20409  0B62  3F41               	moviw [1]fsr1
 20410  0B63  00F2               	movwf	strncmp@_l+1
 20411  0B64  3069               	movlw	low (STR_69| (0+32768))
 20412  0B65  00F3               	movwf	strncmp@_r
 20413  0B66  30B9               	movlw	high (STR_69| (0+32768))
 20414  0B67  00F4               	movwf	strncmp@_r+1
 20415  0B68  3002               	movlw	2
 20416  0B69  00F5               	movwf	strncmp@n
 20417  0B6A  3000               	movlw	0
 20418  0B6B  00F6               	movwf	strncmp@n+1
 20419  0B6C  31AA  22C5  3188   	fcall	_strncmp
 20420  0B6F  0871               	movf	?_strncmp,w
 20421  0B70  0472               	iorwf	?_strncmp+1,w
 20422  0B71  1903               	btfsc	3,2
 20423  0B72  2B13               	goto	l6887
 20424                           
 20425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 20426  0B73  0020               	movlb	0	; select bank0
 20427  0B74  0859               	movf	vfpfcnvrt@fmt,w
 20428  0B75  0086               	movwf	6
 20429  0B76  0187               	clrf	7
 20430  0B77  3F40               	moviw [0]fsr1
 20431  0B78  00DB               	movwf	??_vfpfcnvrt
 20432  0B79  3F41               	moviw [1]fsr1
 20433  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 20434  0B7B  085B               	movf	??_vfpfcnvrt,w
 20435  0B7C  0084               	movwf	4
 20436  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 20437  0B7E  0085               	movwf	5
 20438  0B7F  0012               	moviw fsr0++
 20439  0B80  3A70               	xorlw	112
 20440  0B81  1D03               	btfss	3,2
 20441  0B82  2BCF               	goto	l6907
 20442                           
 20443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 20444  0B83  0859               	movf	vfpfcnvrt@fmt,w
 20445  0B84  0086               	movwf	6
 20446  0B85  0187               	clrf	7
 20447  0B86  3001               	movlw	1
 20448  0B87  0781               	addwf	1,f
 20449  0B88  3141               	addfsr 1,1
 20450  0B89  1803               	skipnc
 20451  0B8A  0A81               	incf	1,f
 20452                           
 20453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 20454  0B8B  085A               	movf	vfpfcnvrt@ap,w
 20455  0B8C  0086               	movwf	6
 20456  0B8D  0187               	clrf	7
 20457  0B8E  0801               	movf	1,w
 20458  0B8F  0084               	movwf	4
 20459  0B90  0185               	clrf	5
 20460  0B91  3002               	movlw	2
 20461  0B92  0781               	addwf	1,f
 20462  0B93  3F00               	moviw [0]fsr0
 20463  0B94  0021               	movlb	1	; select bank1
 20464  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20465  0B96  3F01               	moviw [1]fsr0
 20466  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20467  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20468  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20469  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20470  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20471  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20472  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20473                           
 20474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 20475  0B9E  0020               	movlb	0	; select bank0
 20476  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 20477  0BA0  00B1               	movwf	xtoa@fp+1
 20478  0BA1  0857               	movf	vfpfcnvrt@fp,w
 20479  0BA2  00B0               	movwf	xtoa@fp
 20480  0BA3  0021               	movlb	1	; select bank1
 20481  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20482  0BA5  0020               	movlb	0	; select bank0
 20483  0BA6  00B2               	movwf	xtoa@d
 20484  0BA7  0021               	movlb	1	; select bank1
 20485  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20486  0BA9  0020               	movlb	0	; select bank0
 20487  0BAA  00B3               	movwf	xtoa@d+1
 20488  0BAB  0021               	movlb	1	; select bank1
 20489  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20490  0BAD  0020               	movlb	0	; select bank0
 20491  0BAE  00B4               	movwf	xtoa@d+2
 20492  0BAF  0021               	movlb	1	; select bank1
 20493  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20494  0BB1  0020               	movlb	0	; select bank0
 20495  0BB2  00B5               	movwf	xtoa@d+3
 20496  0BB3  0021               	movlb	1	; select bank1
 20497  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20498  0BB5  0020               	movlb	0	; select bank0
 20499  0BB6  00B6               	movwf	xtoa@d+4
 20500  0BB7  0021               	movlb	1	; select bank1
 20501  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20502  0BB9  0020               	movlb	0	; select bank0
 20503  0BBA  00B7               	movwf	xtoa@d+5
 20504  0BBB  0021               	movlb	1	; select bank1
 20505  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20506  0BBD  0020               	movlb	0	; select bank0
 20507  0BBE  00B8               	movwf	xtoa@d+6
 20508  0BBF  0021               	movlb	1	; select bank1
 20509  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20510  0BC1  0020               	movlb	0	; select bank0
 20511  0BC2  00B9               	movwf	xtoa@d+7
 20512  0BC3  3078               	movlw	120
 20513  0BC4  00DB               	movwf	??_vfpfcnvrt
 20514  0BC5  085B               	movf	??_vfpfcnvrt,w
 20515  0BC6  00BA               	movwf	xtoa@x
 20516  0BC7  319B  2388         	fcall	_xtoa
 20517  0BC9  0020               	movlb	0	; select bank0
 20518  0BCA  0831               	movf	?_xtoa+1,w
 20519  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 20520  0BCC  0830               	movf	?_xtoa,w
 20521  0BCD  00D7               	movwf	?_vfpfcnvrt
 20522  0BCE  0008               	return
 20523  0BCF                     l6907:	
 20524                           
 20525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20526  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 20527  0BD0  0086               	movwf	6
 20528  0BD1  0187               	clrf	7
 20529  0BD2  3F40               	moviw [0]fsr1
 20530  0BD3  00DB               	movwf	??_vfpfcnvrt
 20531  0BD4  3F41               	moviw [1]fsr1
 20532  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 20533  0BD6  085B               	movf	??_vfpfcnvrt,w
 20534  0BD7  0084               	movwf	4
 20535  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 20536  0BD9  0085               	movwf	5
 20537  0BDA  0012               	moviw fsr0++
 20538  0BDB  3A73               	xorlw	115
 20539  0BDC  1D03               	btfss	3,2
 20540  0BDD  2C08               	goto	l6917
 20541                           
 20542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20543  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 20544  0BDF  0086               	movwf	6
 20545  0BE0  0187               	clrf	7
 20546  0BE1  3001               	movlw	1
 20547  0BE2  0781               	addwf	1,f
 20548  0BE3  3141               	addfsr 1,1
 20549  0BE4  1803               	skipnc
 20550  0BE5  0A81               	incf	1,f
 20551                           
 20552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20553  0BE6  085A               	movf	vfpfcnvrt@ap,w
 20554  0BE7  0086               	movwf	6
 20555  0BE8  0187               	clrf	7
 20556  0BE9  0801               	movf	1,w
 20557  0BEA  0084               	movwf	4
 20558  0BEB  0185               	clrf	5
 20559  0BEC  3002               	movlw	2
 20560  0BED  0781               	addwf	1,f
 20561  0BEE  3F00               	moviw [0]fsr0
 20562  0BEF  0021               	movlb	1	; select bank1
 20563  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 20564  0BF1  3F01               	moviw [1]fsr0
 20565  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 20566                           
 20567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20568  0BF3  0020               	movlb	0	; select bank0
 20569  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 20570  0BF5  00A1               	movwf	stoa@fp+1
 20571  0BF6  0857               	movf	vfpfcnvrt@fp,w
 20572  0BF7  00A0               	movwf	stoa@fp
 20573  0BF8  0021               	movlb	1	; select bank1
 20574  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 20575  0BFA  0020               	movlb	0	; select bank0
 20576  0BFB  00A3               	movwf	stoa@s+1
 20577  0BFC  0021               	movlb	1	; select bank1
 20578  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 20579  0BFE  0020               	movlb	0	; select bank0
 20580  0BFF  00A2               	movwf	stoa@s
 20581  0C00  31A1  21EB         	fcall	_stoa
 20582  0C02  0020               	movlb	0	; select bank0
 20583  0C03  0821               	movf	?_stoa+1,w
 20584  0C04  00D8               	movwf	?_vfpfcnvrt+1
 20585  0C05  0820               	movf	?_stoa,w
 20586  0C06  00D7               	movwf	?_vfpfcnvrt
 20587  0C07  0008               	return
 20588  0C08                     l6917:	
 20589                           
 20590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 20591  0C08  0859               	movf	vfpfcnvrt@fmt,w
 20592  0C09  0086               	movwf	6
 20593  0C0A  0187               	clrf	7
 20594  0C0B  3F40               	moviw [0]fsr1
 20595  0C0C  00F1               	movwf	strncmp@_l
 20596  0C0D  3F41               	moviw [1]fsr1
 20597  0C0E  00F2               	movwf	strncmp@_l+1
 20598  0C0F  3058               	movlw	low (STR_74| (0+32768))
 20599  0C10  00F3               	movwf	strncmp@_r
 20600  0C11  30B9               	movlw	high (STR_74| (0+32768))
 20601  0C12  00F4               	movwf	strncmp@_r+1
 20602  0C13  3003               	movlw	3
 20603  0C14  00F5               	movwf	strncmp@n
 20604  0C15  3000               	movlw	0
 20605  0C16  00F6               	movwf	strncmp@n+1
 20606  0C17  31AA  22C5  3188   	fcall	_strncmp
 20607  0C1A  0871               	movf	?_strncmp,w
 20608  0C1B  0472               	iorwf	?_strncmp+1,w
 20609  0C1C  1D03               	btfss	3,2
 20610  0C1D  2C66               	goto	l6927
 20611                           
 20612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 20613  0C1E  0020               	movlb	0	; select bank0
 20614  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 20615  0C20  0086               	movwf	6
 20616  0C21  0187               	clrf	7
 20617  0C22  3003               	movlw	3
 20618  0C23  0781               	addwf	1,f
 20619  0C24  3141               	addfsr 1,1
 20620  0C25  1803               	skipnc
 20621  0C26  0A81               	incf	1,f
 20622                           
 20623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20624  0C27  085A               	movf	vfpfcnvrt@ap,w
 20625  0C28  0086               	movwf	6
 20626  0C29  0187               	clrf	7
 20627  0C2A  0801               	movf	1,w
 20628  0C2B  0084               	movwf	4
 20629  0C2C  0185               	clrf	5
 20630  0C2D  3002               	movlw	2
 20631  0C2E  0781               	addwf	1,f
 20632  0C2F  0800               	movf	0,w
 20633  0C30  0021               	movlb	1	; select bank1
 20634  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20635  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 20636  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20637  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20638  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20639  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20640  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20641  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20642                           
 20643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 20644  0C39  0020               	movlb	0	; select bank0
 20645  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 20646  0C3B  00B1               	movwf	utoa@fp+1
 20647  0C3C  0857               	movf	vfpfcnvrt@fp,w
 20648  0C3D  00B0               	movwf	utoa@fp
 20649  0C3E  0021               	movlb	1	; select bank1
 20650  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20651  0C40  0020               	movlb	0	; select bank0
 20652  0C41  00B2               	movwf	utoa@d
 20653  0C42  0021               	movlb	1	; select bank1
 20654  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20655  0C44  0020               	movlb	0	; select bank0
 20656  0C45  00B3               	movwf	utoa@d+1
 20657  0C46  0021               	movlb	1	; select bank1
 20658  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20659  0C48  0020               	movlb	0	; select bank0
 20660  0C49  00B4               	movwf	utoa@d+2
 20661  0C4A  0021               	movlb	1	; select bank1
 20662  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20663  0C4C  0020               	movlb	0	; select bank0
 20664  0C4D  00B5               	movwf	utoa@d+3
 20665  0C4E  0021               	movlb	1	; select bank1
 20666  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20667  0C50  0020               	movlb	0	; select bank0
 20668  0C51  00B6               	movwf	utoa@d+4
 20669  0C52  0021               	movlb	1	; select bank1
 20670  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20671  0C54  0020               	movlb	0	; select bank0
 20672  0C55  00B7               	movwf	utoa@d+5
 20673  0C56  0021               	movlb	1	; select bank1
 20674  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20675  0C58  0020               	movlb	0	; select bank0
 20676  0C59  00B8               	movwf	utoa@d+6
 20677  0C5A  0021               	movlb	1	; select bank1
 20678  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20679  0C5C  0020               	movlb	0	; select bank0
 20680  0C5D  00B9               	movwf	utoa@d+7
 20681  0C5E  31A5  253B         	fcall	_utoa
 20682  0C60  0020               	movlb	0	; select bank0
 20683  0C61  0831               	movf	?_utoa+1,w
 20684  0C62  00D8               	movwf	?_vfpfcnvrt+1
 20685  0C63  0830               	movf	?_utoa,w
 20686  0C64  00D7               	movwf	?_vfpfcnvrt
 20687  0C65  0008               	return
 20688  0C66                     l6927:	
 20689                           
 20690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 20691  0C66  0020               	movlb	0	; select bank0
 20692  0C67  0859               	movf	vfpfcnvrt@fmt,w
 20693  0C68  0086               	movwf	6
 20694  0C69  0187               	clrf	7
 20695  0C6A  3F40               	moviw [0]fsr1
 20696  0C6B  00F1               	movwf	strncmp@_l
 20697  0C6C  3F41               	moviw [1]fsr1
 20698  0C6D  00F2               	movwf	strncmp@_l+1
 20699  0C6E  3059               	movlw	low ((STR_74+1)| (0+32768))
 20700  0C6F  00F3               	movwf	strncmp@_r
 20701  0C70  30B9               	movlw	high ((STR_74+1)| (0+32768))
 20702  0C71  00F4               	movwf	strncmp@_r+1
 20703  0C72  3002               	movlw	2
 20704  0C73  00F5               	movwf	strncmp@n
 20705  0C74  3000               	movlw	0
 20706  0C75  00F6               	movwf	strncmp@n+1
 20707  0C76  31AA  22C5  3188   	fcall	_strncmp
 20708  0C79  0871               	movf	?_strncmp,w
 20709  0C7A  0472               	iorwf	?_strncmp+1,w
 20710  0C7B  1D03               	btfss	3,2
 20711  0C7C  2CC6               	goto	l6937
 20712                           
 20713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 20714  0C7D  0020               	movlb	0	; select bank0
 20715  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 20716  0C7F  0086               	movwf	6
 20717  0C80  0187               	clrf	7
 20718  0C81  3002               	movlw	2
 20719  0C82  0781               	addwf	1,f
 20720  0C83  3141               	addfsr 1,1
 20721  0C84  1803               	skipnc
 20722  0C85  0A81               	incf	1,f
 20723                           
 20724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 20725  0C86  085A               	movf	vfpfcnvrt@ap,w
 20726  0C87  0086               	movwf	6
 20727  0C88  0187               	clrf	7
 20728  0C89  0801               	movf	1,w
 20729  0C8A  0084               	movwf	4
 20730  0C8B  0185               	clrf	5
 20731  0C8C  3002               	movlw	2
 20732  0C8D  0781               	addwf	1,f
 20733  0C8E  3F00               	moviw [0]fsr0
 20734  0C8F  0021               	movlb	1	; select bank1
 20735  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20736  0C91  3F01               	moviw [1]fsr0
 20737  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20738  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20739  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20740  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20741  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20742  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20743  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20744                           
 20745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 20746  0C99  0020               	movlb	0	; select bank0
 20747  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 20748  0C9B  00B1               	movwf	utoa@fp+1
 20749  0C9C  0857               	movf	vfpfcnvrt@fp,w
 20750  0C9D  00B0               	movwf	utoa@fp
 20751  0C9E  0021               	movlb	1	; select bank1
 20752  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20753  0CA0  0020               	movlb	0	; select bank0
 20754  0CA1  00B2               	movwf	utoa@d
 20755  0CA2  0021               	movlb	1	; select bank1
 20756  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20757  0CA4  0020               	movlb	0	; select bank0
 20758  0CA5  00B3               	movwf	utoa@d+1
 20759  0CA6  0021               	movlb	1	; select bank1
 20760  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20761  0CA8  0020               	movlb	0	; select bank0
 20762  0CA9  00B4               	movwf	utoa@d+2
 20763  0CAA  0021               	movlb	1	; select bank1
 20764  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20765  0CAC  0020               	movlb	0	; select bank0
 20766  0CAD  00B5               	movwf	utoa@d+3
 20767  0CAE  0021               	movlb	1	; select bank1
 20768  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20769  0CB0  0020               	movlb	0	; select bank0
 20770  0CB1  00B6               	movwf	utoa@d+4
 20771  0CB2  0021               	movlb	1	; select bank1
 20772  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20773  0CB4  0020               	movlb	0	; select bank0
 20774  0CB5  00B7               	movwf	utoa@d+5
 20775  0CB6  0021               	movlb	1	; select bank1
 20776  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20777  0CB8  0020               	movlb	0	; select bank0
 20778  0CB9  00B8               	movwf	utoa@d+6
 20779  0CBA  0021               	movlb	1	; select bank1
 20780  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20781  0CBC  0020               	movlb	0	; select bank0
 20782  0CBD  00B9               	movwf	utoa@d+7
 20783  0CBE  31A5  253B         	fcall	_utoa
 20784  0CC0  0020               	movlb	0	; select bank0
 20785  0CC1  0831               	movf	?_utoa+1,w
 20786  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 20787  0CC3  0830               	movf	?_utoa,w
 20788  0CC4  00D7               	movwf	?_vfpfcnvrt
 20789  0CC5  0008               	return
 20790  0CC6                     l6937:	
 20791                           
 20792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20793  0CC6  0020               	movlb	0	; select bank0
 20794  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 20795  0CC8  0086               	movwf	6
 20796  0CC9  0187               	clrf	7
 20797  0CCA  3F40               	moviw [0]fsr1
 20798  0CCB  00DB               	movwf	??_vfpfcnvrt
 20799  0CCC  3F41               	moviw [1]fsr1
 20800  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 20801  0CCE  085B               	movf	??_vfpfcnvrt,w
 20802  0CCF  0084               	movwf	4
 20803  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 20804  0CD1  0085               	movwf	5
 20805  0CD2  0012               	moviw fsr0++
 20806  0CD3  3A75               	xorlw	117
 20807  0CD4  1D03               	btfss	3,2
 20808  0CD5  2D1E               	goto	l6947
 20809                           
 20810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20811  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 20812  0CD7  0086               	movwf	6
 20813  0CD8  0187               	clrf	7
 20814  0CD9  3001               	movlw	1
 20815  0CDA  0781               	addwf	1,f
 20816  0CDB  3141               	addfsr 1,1
 20817  0CDC  1803               	skipnc
 20818  0CDD  0A81               	incf	1,f
 20819                           
 20820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20821  0CDE  085A               	movf	vfpfcnvrt@ap,w
 20822  0CDF  0086               	movwf	6
 20823  0CE0  0187               	clrf	7
 20824  0CE1  0801               	movf	1,w
 20825  0CE2  0084               	movwf	4
 20826  0CE3  0185               	clrf	5
 20827  0CE4  3002               	movlw	2
 20828  0CE5  0781               	addwf	1,f
 20829  0CE6  3F00               	moviw [0]fsr0
 20830  0CE7  0021               	movlb	1	; select bank1
 20831  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20832  0CE9  3F01               	moviw [1]fsr0
 20833  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20834  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20835  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20836  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20837  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20838  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20839  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20840                           
 20841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20842  0CF1  0020               	movlb	0	; select bank0
 20843  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 20844  0CF3  00B1               	movwf	utoa@fp+1
 20845  0CF4  0857               	movf	vfpfcnvrt@fp,w
 20846  0CF5  00B0               	movwf	utoa@fp
 20847  0CF6  0021               	movlb	1	; select bank1
 20848  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20849  0CF8  0020               	movlb	0	; select bank0
 20850  0CF9  00B2               	movwf	utoa@d
 20851  0CFA  0021               	movlb	1	; select bank1
 20852  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20853  0CFC  0020               	movlb	0	; select bank0
 20854  0CFD  00B3               	movwf	utoa@d+1
 20855  0CFE  0021               	movlb	1	; select bank1
 20856  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20857  0D00  0020               	movlb	0	; select bank0
 20858  0D01  00B4               	movwf	utoa@d+2
 20859  0D02  0021               	movlb	1	; select bank1
 20860  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20861  0D04  0020               	movlb	0	; select bank0
 20862  0D05  00B5               	movwf	utoa@d+3
 20863  0D06  0021               	movlb	1	; select bank1
 20864  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20865  0D08  0020               	movlb	0	; select bank0
 20866  0D09  00B6               	movwf	utoa@d+4
 20867  0D0A  0021               	movlb	1	; select bank1
 20868  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20869  0D0C  0020               	movlb	0	; select bank0
 20870  0D0D  00B7               	movwf	utoa@d+5
 20871  0D0E  0021               	movlb	1	; select bank1
 20872  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20873  0D10  0020               	movlb	0	; select bank0
 20874  0D11  00B8               	movwf	utoa@d+6
 20875  0D12  0021               	movlb	1	; select bank1
 20876  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20877  0D14  0020               	movlb	0	; select bank0
 20878  0D15  00B9               	movwf	utoa@d+7
 20879  0D16  31A5  253B         	fcall	_utoa
 20880  0D18  0020               	movlb	0	; select bank0
 20881  0D19  0831               	movf	?_utoa+1,w
 20882  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 20883  0D1B  0830               	movf	?_utoa,w
 20884  0D1C  00D7               	movwf	?_vfpfcnvrt
 20885  0D1D  0008               	return
 20886  0D1E                     l6947:	
 20887                           
 20888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 20889  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 20890  0D1F  0086               	movwf	6
 20891  0D20  0187               	clrf	7
 20892  0D21  3F40               	moviw [0]fsr1
 20893  0D22  00F1               	movwf	strncmp@_l
 20894  0D23  3F41               	moviw [1]fsr1
 20895  0D24  00F2               	movwf	strncmp@_l+1
 20896  0D25  306F               	movlw	low (STR_84| (0+32768))
 20897  0D26  00F3               	movwf	strncmp@_r
 20898  0D27  30B9               	movlw	high (STR_84| (0+32768))
 20899  0D28  00F4               	movwf	strncmp@_r+1
 20900  0D29  3002               	movlw	2
 20901  0D2A  00F5               	movwf	strncmp@n
 20902  0D2B  3000               	movlw	0
 20903  0D2C  00F6               	movwf	strncmp@n+1
 20904  0D2D  31AA  22C5  3188   	fcall	_strncmp
 20905  0D30  0871               	movf	?_strncmp,w
 20906  0D31  0472               	iorwf	?_strncmp+1,w
 20907  0D32  1D03               	btfss	3,2
 20908  0D33  2D7D               	goto	l6957
 20909                           
 20910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 20911  0D34  0020               	movlb	0	; select bank0
 20912  0D35  0859               	movf	vfpfcnvrt@fmt,w
 20913  0D36  0086               	movwf	6
 20914  0D37  0187               	clrf	7
 20915  0D38  3002               	movlw	2
 20916  0D39  0781               	addwf	1,f
 20917  0D3A  3141               	addfsr 1,1
 20918  0D3B  1803               	skipnc
 20919  0D3C  0A81               	incf	1,f
 20920                           
 20921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20922  0D3D  085A               	movf	vfpfcnvrt@ap,w
 20923  0D3E  0086               	movwf	6
 20924  0D3F  0187               	clrf	7
 20925  0D40  0801               	movf	1,w
 20926  0D41  0084               	movwf	4
 20927  0D42  0185               	clrf	5
 20928  0D43  3002               	movlw	2
 20929  0D44  0781               	addwf	1,f
 20930  0D45  3F00               	moviw [0]fsr0
 20931  0D46  0021               	movlb	1	; select bank1
 20932  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20933  0D48  3F01               	moviw [1]fsr0
 20934  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20935  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20936  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20937  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20938  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20939  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20940  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20941                           
 20942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 20943  0D50  0020               	movlb	0	; select bank0
 20944  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 20945  0D52  00B1               	movwf	utoa@fp+1
 20946  0D53  0857               	movf	vfpfcnvrt@fp,w
 20947  0D54  00B0               	movwf	utoa@fp
 20948  0D55  0021               	movlb	1	; select bank1
 20949  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20950  0D57  0020               	movlb	0	; select bank0
 20951  0D58  00B2               	movwf	utoa@d
 20952  0D59  0021               	movlb	1	; select bank1
 20953  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20954  0D5B  0020               	movlb	0	; select bank0
 20955  0D5C  00B3               	movwf	utoa@d+1
 20956  0D5D  0021               	movlb	1	; select bank1
 20957  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20958  0D5F  0020               	movlb	0	; select bank0
 20959  0D60  00B4               	movwf	utoa@d+2
 20960  0D61  0021               	movlb	1	; select bank1
 20961  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20962  0D63  0020               	movlb	0	; select bank0
 20963  0D64  00B5               	movwf	utoa@d+3
 20964  0D65  0021               	movlb	1	; select bank1
 20965  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20966  0D67  0020               	movlb	0	; select bank0
 20967  0D68  00B6               	movwf	utoa@d+4
 20968  0D69  0021               	movlb	1	; select bank1
 20969  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20970  0D6B  0020               	movlb	0	; select bank0
 20971  0D6C  00B7               	movwf	utoa@d+5
 20972  0D6D  0021               	movlb	1	; select bank1
 20973  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20974  0D6F  0020               	movlb	0	; select bank0
 20975  0D70  00B8               	movwf	utoa@d+6
 20976  0D71  0021               	movlb	1	; select bank1
 20977  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20978  0D73  0020               	movlb	0	; select bank0
 20979  0D74  00B9               	movwf	utoa@d+7
 20980  0D75  31A5  253B         	fcall	_utoa
 20981  0D77  0020               	movlb	0	; select bank0
 20982  0D78  0831               	movf	?_utoa+1,w
 20983  0D79  00D8               	movwf	?_vfpfcnvrt+1
 20984  0D7A  0830               	movf	?_utoa,w
 20985  0D7B  00D7               	movwf	?_vfpfcnvrt
 20986  0D7C  0008               	return
 20987  0D7D                     l6957:	
 20988                           
 20989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 20990  0D7D  0020               	movlb	0	; select bank0
 20991  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 20992  0D7F  0086               	movwf	6
 20993  0D80  0187               	clrf	7
 20994  0D81  3F40               	moviw [0]fsr1
 20995  0D82  00F1               	movwf	strncmp@_l
 20996  0D83  3F41               	moviw [1]fsr1
 20997  0D84  00F2               	movwf	strncmp@_l+1
 20998  0D85  305C               	movlw	low (STR_89| (0+32768))
 20999  0D86  00F3               	movwf	strncmp@_r
 21000  0D87  30B9               	movlw	high (STR_89| (0+32768))
 21001  0D88  00F4               	movwf	strncmp@_r+1
 21002  0D89  3003               	movlw	3
 21003  0D8A  00F5               	movwf	strncmp@n
 21004  0D8B  3000               	movlw	0
 21005  0D8C  00F6               	movwf	strncmp@n+1
 21006  0D8D  31AA  22C5  3188   	fcall	_strncmp
 21007  0D90  0871               	movf	?_strncmp,w
 21008  0D91  0472               	iorwf	?_strncmp+1,w
 21009  0D92  1903               	btfsc	3,2
 21010  0D93  2DAB               	goto	l6961
 21011  0D94  0020               	movlb	0	; select bank0
 21012  0D95  0859               	movf	vfpfcnvrt@fmt,w
 21013  0D96  0086               	movwf	6
 21014  0D97  0187               	clrf	7
 21015  0D98  3F40               	moviw [0]fsr1
 21016  0D99  00F1               	movwf	strncmp@_l
 21017  0D9A  3F41               	moviw [1]fsr1
 21018  0D9B  00F2               	movwf	strncmp@_l+1
 21019  0D9C  3044               	movlw	low (STR_93| (0+32768))
 21020  0D9D  00F3               	movwf	strncmp@_r
 21021  0D9E  30B9               	movlw	high (STR_93| (0+32768))
 21022  0D9F  00F4               	movwf	strncmp@_r+1
 21023  0DA0  3003               	movlw	3
 21024  0DA1  00F5               	movwf	strncmp@n
 21025  0DA2  3000               	movlw	0
 21026  0DA3  00F6               	movwf	strncmp@n+1
 21027  0DA4  31AA  22C5  3188   	fcall	_strncmp
 21028  0DA7  0871               	movf	?_strncmp,w
 21029  0DA8  0472               	iorwf	?_strncmp+1,w
 21030  0DA9  1D03               	btfss	3,2
 21031  0DAA  2E0D               	goto	l6971
 21032  0DAB                     l6961:	
 21033                           
 21034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 21035  0DAB  0020               	movlb	0	; select bank0
 21036  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 21037  0DAD  0086               	movwf	6
 21038  0DAE  0187               	clrf	7
 21039  0DAF  3F40               	moviw [0]fsr1
 21040  0DB0  00DB               	movwf	??_vfpfcnvrt
 21041  0DB1  3F41               	moviw [1]fsr1
 21042  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 21043  0DB3  3002               	movlw	2
 21044  0DB4  075B               	addwf	??_vfpfcnvrt,w
 21045  0DB5  0084               	movwf	4
 21046  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 21047  0DB7  1803               	skipnc
 21048  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 21049  0DB9  0085               	movwf	5
 21050  0DBA  0800               	movf	0,w	;code access
 21051  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 21052  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 21053  0DBD  0021               	movlb	1	; select bank1
 21054  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21055                           
 21056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 21057  0DBF  0020               	movlb	0	; select bank0
 21058  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 21059  0DC1  0086               	movwf	6
 21060  0DC2  0187               	clrf	7
 21061  0DC3  3003               	movlw	3
 21062  0DC4  0781               	addwf	1,f
 21063  0DC5  3141               	addfsr 1,1
 21064  0DC6  1803               	skipnc
 21065  0DC7  0A81               	incf	1,f
 21066                           
 21067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21068  0DC8  085A               	movf	vfpfcnvrt@ap,w
 21069  0DC9  0086               	movwf	6
 21070  0DCA  0187               	clrf	7
 21071  0DCB  0801               	movf	1,w
 21072  0DCC  0084               	movwf	4
 21073  0DCD  0185               	clrf	5
 21074  0DCE  3002               	movlw	2
 21075  0DCF  0781               	addwf	1,f
 21076  0DD0  0800               	movf	0,w
 21077  0DD1  0021               	movlb	1	; select bank1
 21078  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21079  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21080  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21081  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21082  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21083  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21084  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21085  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 21088  0DDA  0020               	movlb	0	; select bank0
 21089  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 21090  0DDC  00B1               	movwf	xtoa@fp+1
 21091  0DDD  0857               	movf	vfpfcnvrt@fp,w
 21092  0DDE  00B0               	movwf	xtoa@fp
 21093  0DDF  0021               	movlb	1	; select bank1
 21094  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21095  0DE1  0020               	movlb	0	; select bank0
 21096  0DE2  00B2               	movwf	xtoa@d
 21097  0DE3  0021               	movlb	1	; select bank1
 21098  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21099  0DE5  0020               	movlb	0	; select bank0
 21100  0DE6  00B3               	movwf	xtoa@d+1
 21101  0DE7  0021               	movlb	1	; select bank1
 21102  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21103  0DE9  0020               	movlb	0	; select bank0
 21104  0DEA  00B4               	movwf	xtoa@d+2
 21105  0DEB  0021               	movlb	1	; select bank1
 21106  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21107  0DED  0020               	movlb	0	; select bank0
 21108  0DEE  00B5               	movwf	xtoa@d+3
 21109  0DEF  0021               	movlb	1	; select bank1
 21110  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21111  0DF1  0020               	movlb	0	; select bank0
 21112  0DF2  00B6               	movwf	xtoa@d+4
 21113  0DF3  0021               	movlb	1	; select bank1
 21114  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21115  0DF5  0020               	movlb	0	; select bank0
 21116  0DF6  00B7               	movwf	xtoa@d+5
 21117  0DF7  0021               	movlb	1	; select bank1
 21118  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21119  0DF9  0020               	movlb	0	; select bank0
 21120  0DFA  00B8               	movwf	xtoa@d+6
 21121  0DFB  0021               	movlb	1	; select bank1
 21122  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21123  0DFD  0020               	movlb	0	; select bank0
 21124  0DFE  00B9               	movwf	xtoa@d+7
 21125  0DFF  0021               	movlb	1	; select bank1
 21126  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 21127  0E01  0020               	movlb	0	; select bank0
 21128  0E02  00DB               	movwf	??_vfpfcnvrt
 21129  0E03  085B               	movf	??_vfpfcnvrt,w
 21130  0E04  00BA               	movwf	xtoa@x
 21131  0E05  319B  2388         	fcall	_xtoa
 21132  0E07  0020               	movlb	0	; select bank0
 21133  0E08  0831               	movf	?_xtoa+1,w
 21134  0E09  00D8               	movwf	?_vfpfcnvrt+1
 21135  0E0A  0830               	movf	?_xtoa,w
 21136  0E0B  00D7               	movwf	?_vfpfcnvrt
 21137  0E0C  0008               	return
 21138  0E0D                     l6971:	
 21139                           
 21140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 21141  0E0D  0020               	movlb	0	; select bank0
 21142  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 21143  0E0F  0086               	movwf	6
 21144  0E10  0187               	clrf	7
 21145  0E11  3F40               	moviw [0]fsr1
 21146  0E12  00F1               	movwf	strncmp@_l
 21147  0E13  3F41               	moviw [1]fsr1
 21148  0E14  00F2               	movwf	strncmp@_l+1
 21149  0E15  305D               	movlw	low ((STR_89+1)| (0+32768))
 21150  0E16  00F3               	movwf	strncmp@_r
 21151  0E17  30B9               	movlw	high ((STR_89+1)| (0+32768))
 21152  0E18  00F4               	movwf	strncmp@_r+1
 21153  0E19  3002               	movlw	2
 21154  0E1A  00F5               	movwf	strncmp@n
 21155  0E1B  3000               	movlw	0
 21156  0E1C  00F6               	movwf	strncmp@n+1
 21157  0E1D  31AA  22C5  3188   	fcall	_strncmp
 21158  0E20  0871               	movf	?_strncmp,w
 21159  0E21  0472               	iorwf	?_strncmp+1,w
 21160  0E22  1903               	btfsc	3,2
 21161  0E23  2E3B               	goto	l6975
 21162  0E24  0020               	movlb	0	; select bank0
 21163  0E25  0859               	movf	vfpfcnvrt@fmt,w
 21164  0E26  0086               	movwf	6
 21165  0E27  0187               	clrf	7
 21166  0E28  3F40               	moviw [0]fsr1
 21167  0E29  00F1               	movwf	strncmp@_l
 21168  0E2A  3F41               	moviw [1]fsr1
 21169  0E2B  00F2               	movwf	strncmp@_l+1
 21170  0E2C  3045               	movlw	low ((STR_93+1)| (0+32768))
 21171  0E2D  00F3               	movwf	strncmp@_r
 21172  0E2E  30B9               	movlw	high ((STR_93+1)| (0+32768))
 21173  0E2F  00F4               	movwf	strncmp@_r+1
 21174  0E30  3002               	movlw	2
 21175  0E31  00F5               	movwf	strncmp@n
 21176  0E32  3000               	movlw	0
 21177  0E33  00F6               	movwf	strncmp@n+1
 21178  0E34  31AA  22C5  3188   	fcall	_strncmp
 21179  0E37  0871               	movf	?_strncmp,w
 21180  0E38  0472               	iorwf	?_strncmp+1,w
 21181  0E39  1D03               	btfss	3,2
 21182  0E3A  2E9E               	goto	l6985
 21183  0E3B                     l6975:	
 21184                           
 21185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 21186  0E3B  0020               	movlb	0	; select bank0
 21187  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 21188  0E3D  0086               	movwf	6
 21189  0E3E  0187               	clrf	7
 21190  0E3F  3F40               	moviw [0]fsr1
 21191  0E40  00DB               	movwf	??_vfpfcnvrt
 21192  0E41  3F41               	moviw [1]fsr1
 21193  0E42  00DC               	movwf	??_vfpfcnvrt+1
 21194  0E43  3001               	movlw	1
 21195  0E44  075B               	addwf	??_vfpfcnvrt,w
 21196  0E45  0084               	movwf	4
 21197  0E46  085C               	movf	??_vfpfcnvrt+1,w
 21198  0E47  1803               	skipnc
 21199  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 21200  0E49  0085               	movwf	5
 21201  0E4A  0800               	movf	0,w	;code access
 21202  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 21203  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 21204  0E4D  0021               	movlb	1	; select bank1
 21205  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21206                           
 21207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 21208  0E4F  0020               	movlb	0	; select bank0
 21209  0E50  0859               	movf	vfpfcnvrt@fmt,w
 21210  0E51  0086               	movwf	6
 21211  0E52  0187               	clrf	7
 21212  0E53  3002               	movlw	2
 21213  0E54  0781               	addwf	1,f
 21214  0E55  3141               	addfsr 1,1
 21215  0E56  1803               	skipnc
 21216  0E57  0A81               	incf	1,f
 21217                           
 21218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21219  0E58  085A               	movf	vfpfcnvrt@ap,w
 21220  0E59  0086               	movwf	6
 21221  0E5A  0187               	clrf	7
 21222  0E5B  0801               	movf	1,w
 21223  0E5C  0084               	movwf	4
 21224  0E5D  0185               	clrf	5
 21225  0E5E  3002               	movlw	2
 21226  0E5F  0781               	addwf	1,f
 21227  0E60  3F00               	moviw [0]fsr0
 21228  0E61  0021               	movlb	1	; select bank1
 21229  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21230  0E63  3F01               	moviw [1]fsr0
 21231  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21232  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21233  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21234  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21235  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21236  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21237  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21238                           
 21239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 21240  0E6B  0020               	movlb	0	; select bank0
 21241  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 21242  0E6D  00B1               	movwf	xtoa@fp+1
 21243  0E6E  0857               	movf	vfpfcnvrt@fp,w
 21244  0E6F  00B0               	movwf	xtoa@fp
 21245  0E70  0021               	movlb	1	; select bank1
 21246  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21247  0E72  0020               	movlb	0	; select bank0
 21248  0E73  00B2               	movwf	xtoa@d
 21249  0E74  0021               	movlb	1	; select bank1
 21250  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21251  0E76  0020               	movlb	0	; select bank0
 21252  0E77  00B3               	movwf	xtoa@d+1
 21253  0E78  0021               	movlb	1	; select bank1
 21254  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21255  0E7A  0020               	movlb	0	; select bank0
 21256  0E7B  00B4               	movwf	xtoa@d+2
 21257  0E7C  0021               	movlb	1	; select bank1
 21258  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21259  0E7E  0020               	movlb	0	; select bank0
 21260  0E7F  00B5               	movwf	xtoa@d+3
 21261  0E80  0021               	movlb	1	; select bank1
 21262  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21263  0E82  0020               	movlb	0	; select bank0
 21264  0E83  00B6               	movwf	xtoa@d+4
 21265  0E84  0021               	movlb	1	; select bank1
 21266  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21267  0E86  0020               	movlb	0	; select bank0
 21268  0E87  00B7               	movwf	xtoa@d+5
 21269  0E88  0021               	movlb	1	; select bank1
 21270  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21271  0E8A  0020               	movlb	0	; select bank0
 21272  0E8B  00B8               	movwf	xtoa@d+6
 21273  0E8C  0021               	movlb	1	; select bank1
 21274  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21275  0E8E  0020               	movlb	0	; select bank0
 21276  0E8F  00B9               	movwf	xtoa@d+7
 21277  0E90  0021               	movlb	1	; select bank1
 21278  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 21279  0E92  0020               	movlb	0	; select bank0
 21280  0E93  00DB               	movwf	??_vfpfcnvrt
 21281  0E94  085B               	movf	??_vfpfcnvrt,w
 21282  0E95  00BA               	movwf	xtoa@x
 21283  0E96  319B  2388         	fcall	_xtoa
 21284  0E98  0020               	movlb	0	; select bank0
 21285  0E99  0831               	movf	?_xtoa+1,w
 21286  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 21287  0E9B  0830               	movf	?_xtoa,w
 21288  0E9C  00D7               	movwf	?_vfpfcnvrt
 21289  0E9D  0008               	return
 21290  0E9E                     l6985:	
 21291                           
 21292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21293  0E9E  0020               	movlb	0	; select bank0
 21294  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 21295  0EA0  0086               	movwf	6
 21296  0EA1  0187               	clrf	7
 21297  0EA2  3F40               	moviw [0]fsr1
 21298  0EA3  00DB               	movwf	??_vfpfcnvrt
 21299  0EA4  3F41               	moviw [1]fsr1
 21300  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 21301  0EA6  085B               	movf	??_vfpfcnvrt,w
 21302  0EA7  0084               	movwf	4
 21303  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 21304  0EA9  0085               	movwf	5
 21305  0EAA  0012               	moviw fsr0++
 21306  0EAB  3A78               	xorlw	120
 21307  0EAC  1903               	btfsc	3,2
 21308  0EAD  2EBD               	goto	l6989
 21309  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 21310  0EAF  0086               	movwf	6
 21311  0EB0  0187               	clrf	7
 21312  0EB1  3F40               	moviw [0]fsr1
 21313  0EB2  00DB               	movwf	??_vfpfcnvrt
 21314  0EB3  3F41               	moviw [1]fsr1
 21315  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 21316  0EB5  085B               	movf	??_vfpfcnvrt,w
 21317  0EB6  0084               	movwf	4
 21318  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 21319  0EB8  0085               	movwf	5
 21320  0EB9  0012               	moviw fsr0++
 21321  0EBA  3A58               	xorlw	88
 21322  0EBB  1D03               	btfss	3,2
 21323  0EBC  2F1C               	goto	l6999
 21324  0EBD                     l6989:	
 21325                           
 21326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 21327  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 21328  0EBE  0086               	movwf	6
 21329  0EBF  0187               	clrf	7
 21330  0EC0  3F40               	moviw [0]fsr1
 21331  0EC1  00DB               	movwf	??_vfpfcnvrt
 21332  0EC2  3F41               	moviw [1]fsr1
 21333  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 21334  0EC4  085B               	movf	??_vfpfcnvrt,w
 21335  0EC5  0084               	movwf	4
 21336  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 21337  0EC7  0085               	movwf	5
 21338  0EC8  0800               	movf	0,w	;code access
 21339  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 21340  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 21341  0ECB  0021               	movlb	1	; select bank1
 21342  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21343                           
 21344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 21345  0ECD  0020               	movlb	0	; select bank0
 21346  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 21347  0ECF  0086               	movwf	6
 21348  0ED0  0187               	clrf	7
 21349  0ED1  3001               	movlw	1
 21350  0ED2  0781               	addwf	1,f
 21351  0ED3  3141               	addfsr 1,1
 21352  0ED4  1803               	skipnc
 21353  0ED5  0A81               	incf	1,f
 21354                           
 21355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21356  0ED6  085A               	movf	vfpfcnvrt@ap,w
 21357  0ED7  0086               	movwf	6
 21358  0ED8  0187               	clrf	7
 21359  0ED9  0801               	movf	1,w
 21360  0EDA  0084               	movwf	4
 21361  0EDB  0185               	clrf	5
 21362  0EDC  3002               	movlw	2
 21363  0EDD  0781               	addwf	1,f
 21364  0EDE  3F00               	moviw [0]fsr0
 21365  0EDF  0021               	movlb	1	; select bank1
 21366  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21367  0EE1  3F01               	moviw [1]fsr0
 21368  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21369  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21370  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21371  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21372  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21373  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21374  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21375                           
 21376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 21377  0EE9  0020               	movlb	0	; select bank0
 21378  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 21379  0EEB  00B1               	movwf	xtoa@fp+1
 21380  0EEC  0857               	movf	vfpfcnvrt@fp,w
 21381  0EED  00B0               	movwf	xtoa@fp
 21382  0EEE  0021               	movlb	1	; select bank1
 21383  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21384  0EF0  0020               	movlb	0	; select bank0
 21385  0EF1  00B2               	movwf	xtoa@d
 21386  0EF2  0021               	movlb	1	; select bank1
 21387  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21388  0EF4  0020               	movlb	0	; select bank0
 21389  0EF5  00B3               	movwf	xtoa@d+1
 21390  0EF6  0021               	movlb	1	; select bank1
 21391  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21392  0EF8  0020               	movlb	0	; select bank0
 21393  0EF9  00B4               	movwf	xtoa@d+2
 21394  0EFA  0021               	movlb	1	; select bank1
 21395  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21396  0EFC  0020               	movlb	0	; select bank0
 21397  0EFD  00B5               	movwf	xtoa@d+3
 21398  0EFE  0021               	movlb	1	; select bank1
 21399  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21400  0F00  0020               	movlb	0	; select bank0
 21401  0F01  00B6               	movwf	xtoa@d+4
 21402  0F02  0021               	movlb	1	; select bank1
 21403  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21404  0F04  0020               	movlb	0	; select bank0
 21405  0F05  00B7               	movwf	xtoa@d+5
 21406  0F06  0021               	movlb	1	; select bank1
 21407  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21408  0F08  0020               	movlb	0	; select bank0
 21409  0F09  00B8               	movwf	xtoa@d+6
 21410  0F0A  0021               	movlb	1	; select bank1
 21411  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21412  0F0C  0020               	movlb	0	; select bank0
 21413  0F0D  00B9               	movwf	xtoa@d+7
 21414  0F0E  0021               	movlb	1	; select bank1
 21415  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 21416  0F10  0020               	movlb	0	; select bank0
 21417  0F11  00DB               	movwf	??_vfpfcnvrt
 21418  0F12  085B               	movf	??_vfpfcnvrt,w
 21419  0F13  00BA               	movwf	xtoa@x
 21420  0F14  319B  2388         	fcall	_xtoa
 21421  0F16  0020               	movlb	0	; select bank0
 21422  0F17  0831               	movf	?_xtoa+1,w
 21423  0F18  00D8               	movwf	?_vfpfcnvrt+1
 21424  0F19  0830               	movf	?_xtoa,w
 21425  0F1A  00D7               	movwf	?_vfpfcnvrt
 21426  0F1B  0008               	return
 21427  0F1C                     l6999:	
 21428                           
 21429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 21430  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 21431  0F1D  0086               	movwf	6
 21432  0F1E  0187               	clrf	7
 21433  0F1F  3F40               	moviw [0]fsr1
 21434  0F20  00F1               	movwf	strncmp@_l
 21435  0F21  3F41               	moviw [1]fsr1
 21436  0F22  00F2               	movwf	strncmp@_l+1
 21437  0F23  3072               	movlw	low (STR_107| (0+32768))
 21438  0F24  00F3               	movwf	strncmp@_r
 21439  0F25  30B9               	movlw	high (STR_107| (0+32768))
 21440  0F26  00F4               	movwf	strncmp@_r+1
 21441  0F27  3002               	movlw	2
 21442  0F28  00F5               	movwf	strncmp@n
 21443  0F29  3000               	movlw	0
 21444  0F2A  00F6               	movwf	strncmp@n+1
 21445  0F2B  31AA  22C5  3188   	fcall	_strncmp
 21446  0F2E  0871               	movf	?_strncmp,w
 21447  0F2F  0472               	iorwf	?_strncmp+1,w
 21448  0F30  1903               	btfsc	3,2
 21449  0F31  2F49               	goto	l7003
 21450  0F32  0020               	movlb	0	; select bank0
 21451  0F33  0859               	movf	vfpfcnvrt@fmt,w
 21452  0F34  0086               	movwf	6
 21453  0F35  0187               	clrf	7
 21454  0F36  3F40               	moviw [0]fsr1
 21455  0F37  00F1               	movwf	strncmp@_l
 21456  0F38  3F41               	moviw [1]fsr1
 21457  0F39  00F2               	movwf	strncmp@_l+1
 21458  0F3A  3060               	movlw	low (STR_111| (0+32768))
 21459  0F3B  00F3               	movwf	strncmp@_r
 21460  0F3C  30B9               	movlw	high (STR_111| (0+32768))
 21461  0F3D  00F4               	movwf	strncmp@_r+1
 21462  0F3E  3002               	movlw	2
 21463  0F3F  00F5               	movwf	strncmp@n
 21464  0F40  3000               	movlw	0
 21465  0F41  00F6               	movwf	strncmp@n+1
 21466  0F42  31AA  22C5  3188   	fcall	_strncmp
 21467  0F45  0871               	movf	?_strncmp,w
 21468  0F46  0472               	iorwf	?_strncmp+1,w
 21469  0F47  1D03               	btfss	3,2
 21470  0F48  2FAC               	goto	l7013
 21471  0F49                     l7003:	
 21472                           
 21473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 21474  0F49  0020               	movlb	0	; select bank0
 21475  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 21476  0F4B  0086               	movwf	6
 21477  0F4C  0187               	clrf	7
 21478  0F4D  3F40               	moviw [0]fsr1
 21479  0F4E  00DB               	movwf	??_vfpfcnvrt
 21480  0F4F  3F41               	moviw [1]fsr1
 21481  0F50  00DC               	movwf	??_vfpfcnvrt+1
 21482  0F51  3001               	movlw	1
 21483  0F52  075B               	addwf	??_vfpfcnvrt,w
 21484  0F53  0084               	movwf	4
 21485  0F54  085C               	movf	??_vfpfcnvrt+1,w
 21486  0F55  1803               	skipnc
 21487  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 21488  0F57  0085               	movwf	5
 21489  0F58  0800               	movf	0,w	;code access
 21490  0F59  00DD               	movwf	??_vfpfcnvrt+2
 21491  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 21492  0F5B  0021               	movlb	1	; select bank1
 21493  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21494                           
 21495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 21496  0F5D  0020               	movlb	0	; select bank0
 21497  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 21498  0F5F  0086               	movwf	6
 21499  0F60  0187               	clrf	7
 21500  0F61  3002               	movlw	2
 21501  0F62  0781               	addwf	1,f
 21502  0F63  3141               	addfsr 1,1
 21503  0F64  1803               	skipnc
 21504  0F65  0A81               	incf	1,f
 21505                           
 21506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21507  0F66  085A               	movf	vfpfcnvrt@ap,w
 21508  0F67  0086               	movwf	6
 21509  0F68  0187               	clrf	7
 21510  0F69  0801               	movf	1,w
 21511  0F6A  0084               	movwf	4
 21512  0F6B  0185               	clrf	5
 21513  0F6C  3002               	movlw	2
 21514  0F6D  0781               	addwf	1,f
 21515  0F6E  3F00               	moviw [0]fsr0
 21516  0F6F  0021               	movlb	1	; select bank1
 21517  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21518  0F71  3F01               	moviw [1]fsr0
 21519  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21520  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21521  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21522  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21523  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21524  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21525  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21526                           
 21527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 21528  0F79  0020               	movlb	0	; select bank0
 21529  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 21530  0F7B  00B1               	movwf	xtoa@fp+1
 21531  0F7C  0857               	movf	vfpfcnvrt@fp,w
 21532  0F7D  00B0               	movwf	xtoa@fp
 21533  0F7E  0021               	movlb	1	; select bank1
 21534  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21535  0F80  0020               	movlb	0	; select bank0
 21536  0F81  00B2               	movwf	xtoa@d
 21537  0F82  0021               	movlb	1	; select bank1
 21538  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21539  0F84  0020               	movlb	0	; select bank0
 21540  0F85  00B3               	movwf	xtoa@d+1
 21541  0F86  0021               	movlb	1	; select bank1
 21542  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21543  0F88  0020               	movlb	0	; select bank0
 21544  0F89  00B4               	movwf	xtoa@d+2
 21545  0F8A  0021               	movlb	1	; select bank1
 21546  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21547  0F8C  0020               	movlb	0	; select bank0
 21548  0F8D  00B5               	movwf	xtoa@d+3
 21549  0F8E  0021               	movlb	1	; select bank1
 21550  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21551  0F90  0020               	movlb	0	; select bank0
 21552  0F91  00B6               	movwf	xtoa@d+4
 21553  0F92  0021               	movlb	1	; select bank1
 21554  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21555  0F94  0020               	movlb	0	; select bank0
 21556  0F95  00B7               	movwf	xtoa@d+5
 21557  0F96  0021               	movlb	1	; select bank1
 21558  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21559  0F98  0020               	movlb	0	; select bank0
 21560  0F99  00B8               	movwf	xtoa@d+6
 21561  0F9A  0021               	movlb	1	; select bank1
 21562  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21563  0F9C  0020               	movlb	0	; select bank0
 21564  0F9D  00B9               	movwf	xtoa@d+7
 21565  0F9E  0021               	movlb	1	; select bank1
 21566  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 21567  0FA0  0020               	movlb	0	; select bank0
 21568  0FA1  00DB               	movwf	??_vfpfcnvrt
 21569  0FA2  085B               	movf	??_vfpfcnvrt,w
 21570  0FA3  00BA               	movwf	xtoa@x
 21571  0FA4  319B  2388         	fcall	_xtoa
 21572  0FA6  0020               	movlb	0	; select bank0
 21573  0FA7  0831               	movf	?_xtoa+1,w
 21574  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 21575  0FA9  0830               	movf	?_xtoa,w
 21576  0FAA  00D7               	movwf	?_vfpfcnvrt
 21577  0FAB  0008               	return
 21578  0FAC                     l7013:	
 21579                           
 21580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 21581  0FAC  0020               	movlb	0	; select bank0
 21582  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 21583  0FAE  0086               	movwf	6
 21584  0FAF  0187               	clrf	7
 21585  0FB0  3F40               	moviw [0]fsr1
 21586  0FB1  00DB               	movwf	??_vfpfcnvrt
 21587  0FB2  3F41               	moviw [1]fsr1
 21588  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 21589  0FB4  085B               	movf	??_vfpfcnvrt,w
 21590  0FB5  0084               	movwf	4
 21591  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 21592  0FB7  0085               	movwf	5
 21593  0FB8  0012               	moviw fsr0++
 21594  0FB9  3A25               	xorlw	37
 21595  0FBA  1D03               	btfss	3,2
 21596  0FBB  2FD4               	goto	l7023
 21597                           
 21598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 21599  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 21600  0FBD  0086               	movwf	6
 21601  0FBE  0187               	clrf	7
 21602  0FBF  3001               	movlw	1
 21603  0FC0  0781               	addwf	1,f
 21604  0FC1  3141               	addfsr 1,1
 21605  0FC2  1803               	skipnc
 21606  0FC3  0A81               	incf	1,f
 21607                           
 21608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 21609  0FC4  3025               	movlw	37
 21610  0FC5  00F1               	movwf	fputc@c
 21611  0FC6  3000               	movlw	0
 21612  0FC7  00F2               	movwf	fputc@c+1
 21613  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 21614  0FC9  00F4               	movwf	fputc@fp+1
 21615  0FCA  0857               	movf	vfpfcnvrt@fp,w
 21616  0FCB  00F3               	movwf	fputc@fp
 21617  0FCC  31AB  2317         	fcall	_fputc
 21618  0FCE                     l7019:	
 21619                           
 21620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 21621  0FCE  3001               	movlw	1
 21622  0FCF  0020               	movlb	0	; select bank0
 21623  0FD0  00D7               	movwf	?_vfpfcnvrt
 21624  0FD1  3000               	movlw	0
 21625  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 21626  0FD3  0008               	return
 21627  0FD4                     l7023:	
 21628                           
 21629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 21630  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 21631  0FD5  0086               	movwf	6
 21632  0FD6  0187               	clrf	7
 21633  0FD7  3001               	movlw	1
 21634  0FD8  0781               	addwf	1,f
 21635  0FD9  3141               	addfsr 1,1
 21636  0FDA  1803               	skipnc
 21637  0FDB  0A81               	incf	1,f
 21638  0FDC  2B32               	goto	l6857
 21639  0FDD                     l7029:	
 21640                           
 21641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 21642  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 21643  0FDE  0086               	movwf	6
 21644  0FDF  0187               	clrf	7
 21645  0FE0  3F40               	moviw [0]fsr1
 21646  0FE1  00DB               	movwf	??_vfpfcnvrt
 21647  0FE2  3F41               	moviw [1]fsr1
 21648  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 21649  0FE4  085B               	movf	??_vfpfcnvrt,w
 21650  0FE5  0084               	movwf	4
 21651  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 21652  0FE7  0085               	movwf	5
 21653  0FE8  0800               	movf	0,w	;code access
 21654  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 21655  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 21656  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 21657  0FEC  00F1               	movwf	fputc@c
 21658  0FED  085E               	movf	??_vfpfcnvrt+3,w
 21659  0FEE  00F2               	movwf	fputc@c+1
 21660  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 21661  0FF0  00F4               	movwf	fputc@fp+1
 21662  0FF1  0857               	movf	vfpfcnvrt@fp,w
 21663  0FF2  00F3               	movwf	fputc@fp
 21664  0FF3  31AB  2317  3188   	fcall	_fputc
 21665                           
 21666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 21667  0FF6  0020               	movlb	0	; select bank0
 21668  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 21669  0FF8  0086               	movwf	6
 21670  0FF9  0187               	clrf	7
 21671  0FFA  3001               	movlw	1
 21672  0FFB  0781               	addwf	1,f
 21673  0FFC  3141               	addfsr 1,1
 21674  0FFD  1803               	skipnc
 21675  0FFE  0A81               	incf	1,f
 21676  0FFF  2FCE               	goto	l7019
 21677  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     392
    Constant    114
    Data        9
    BSS         100
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     75      80
    BANK2            80     66      80
    BANK3            80      0      57
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_37(CODE[3]), STR_32(CODE[3]), STR_28(CODE[3]), STR_23(CODE[4]), 
		 -> STR_19(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_37(CODE[3]), STR_32(CODE[3]), STR_28(CODE[3]), STR_23(CODE[4]), 
		 -> STR_19(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), thermistorBetaValue(BANK3[2]), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), thermistorBetaValue(BANK3[2]), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1710_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 61
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[19]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_1(CODE[61]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK3[2]), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK3[2]), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), thermistorBetaValue(BANK3[2]), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), thermistorBetaValue(BANK3[2]), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_16(CODE[3]), STR_3(CODE[3]), STR_2(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    ___flmul->__Umul8_16
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fltol->___fladd
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  234658
                                             73 BANK1      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
                       _shutdown_BMS
 ---------------------------------------------------------------------------------
 (2) _shutdown_BMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  231799
                                             70 BANK1      3     3      0
                         _AFE_UPDATE
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   61275
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (3) _snprintf                                            30     4     26   59674
                                             76 BANK0      4     4      0
                                             44 BANK1     26     0     26
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (4) _vsnprintf                                           19    12      7   55877
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             9     4      5   54840
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           46    42      4   54065
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    8379
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                25    15     10    7240
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (7) _stoa                                                23    19      4    2613
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _otoa                                                34    24     10    6512
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                31    21     10    8094
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 8     5      3    5624
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     5      5    5364
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     210
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1601
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   68146
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   18324
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   18324
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   14930
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   14927
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   11162
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    3696
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0   90220
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   30713
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  27    27      0   59507
                                             20 BANK1     27    27      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    7330
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   26328
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1916
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5887
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5282
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    7493
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    4023
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
   _watchdog_timeout_shutdown
     _RGB_color
     _shutdown_BMS

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4B      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     42      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      39      11       71.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     156      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     156      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 26 21:45:56 2020

          __end_of_setShortCircuitProtection 111A                               _maxCellVoltage 01C4  
                      __end_of_send_I2C_data 3701                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 1528  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               _shutdown_BMS 1000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 370B                          __Umul8_16@word_mpld 0077  
                                        l303 36E2                                          l315 36F4  
                                        l340 28A5                                          l341 28BA  
                                        l238 0801                                          l159 2C1D  
                                        l432 21E5                                          l273 36FD  
                                        l337 289B                                          l291 36DA  
                                        l339 28A0                                          l620 2A8A  
                                        l700 2542                                          l285 3707  
                                        l279 3734                                          l623 2AAA  
                                        l640 1A9C                                          l704 255D  
                                        l641 1AB0                                          l635 1A7A  
                                        l715 1B8F                                          l644 1B46  
                                        l636 1A81                                          l740 1CAD  
                                        l661 2623                                          l719 1BAA  
                                        l751 1E8C                                          l672 26DE  
                                        l752 1E8F                                          l665 263E  
                                        l753 1E92                                          l666 26D3  
                                        l754 1E95                                          l683 222D  
                                        l828 37ED                                          l692 2288  
                                        l756 1EC8                                          l941 2529  
                                        l749 1E80                                          l928 27EE  
                                        l893 201D                                          _Lg1 3938  
                                        _Lg2 3934                                          _Lg3 3930  
                                        _Lg4 392C                          __size_of_AFE_UPDATE 0006  
                                        _abs 376E                               RGB_color@color 0071  
                                        _pad 2A74                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2BC1  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1006 2D6F                                         l1009 2DBD  
                                       ?_abs 0074                                         l1029 2C68  
                                       l1133 11FA                                         l1061 2E3B  
                                       l1206 1E31                                         l1150 127D  
                                       l1207 1E49                                         l1135 11DD  
                                       l1303 2FC8                                         l1071 2D43  
                                       l1209 1E56                                         l1129 1167  
                                       l1171 12F4                                         l1163 12DC  
                                       l1237 151B                                         l1430 288B  
                                       l1263 2EE7                                         l1185 1D2A  
                                       l1276 2F31                                         l1277 2F3B  
                                       l1269 2F1D                                         l6131 2B23  
                                       l7003 0F49                                         l6213 37E7  
                                       l7013 0FAC                                         ?_pad 0026  
                                       l6135 2B4A                                         l6231 2737  
                                       l6303 2DE7                                         l7023 0FD4  
                                       l6129 2B1F                                         l6153 375B  
                                       l6401 1B5A                                         l6313 2E2F  
                                       l6305 2DF6                                         l7203 12AE  
                                       l6147 1804                                         l6155 3767  
                                       l6171 2A88                                         l6235 275E  
                                       l6411 1B72                                         l6323 2CF8  
                                       l7019 0FCE                                         l7301 1CFB  
                                       l7061 113F                                         l6181 2AB6  
                                       l6237 2762                                         l6421 2636  
                                       l6325 2D07                                         l7029 0FDD  
                                       l7207 12B0                                         l7127 11E5  
                                       l7119 11AD                                         l7055 1134  
                                       l8015 233C                                         l6167 2A80  
                                       l6247 2779                                         l6407 1B65  
                                       l6503 229D                                         l7321 1D1F  
                                       l7305 1CFE                                         l7225 12EC  
                                       l7153 121A                                         l7145 1208  
                                       l7129 11E7                                         l7137 11F5  
                                       l6177 2A8C                                         l6257 27C1  
                                       l6249 2788                                         l6281 24BD  
                                       l6273 24B0                                         l6505 22AA  
                                       l6329 2D37                                         l6521 25A0  
                                       l7307 1D06                                         l7155 121C  
                                       l7163 122B                                         l7083 115F  
                                       l7059 1137                                         l8019 2364  
                                       l6339 2838                                         l6347 290C  
                                       l6259 27CD                                         l6283 24CC  
                                       l6531 2601                                         l6515 2555  
                                       l8141 2124                                         l7421 1E52  
                                       l7341 1D55                                         l7325 1D22  
                                       l7229 12F0                                         l7181 128F  
                                       l7173 1275                                         l6621 2F80  
                                       l6613 2F64                                         l6349 2915  
                                       l6269 2489                                         l6429 2685  
                                       l6533 257C                                         l6541 2606  
                                       l6605 1CCB                                         l7407 1E19  
                                       l7335 1D49                                         l7239 2885  
                                       l7079 115C                                         l6631 2FA9  
                                       l6287 24FC                                         l6375 1AAB  
                                       l6455 26F7                                         l6439 2660  
                                       l6551 1BA2                                         l6703 1E9D  
                                       l8223 29B4                                         l7361 1D9C  
                                       l7441 1316                                         l7089 1171  
                                       l6289 2508                                         l6369 1A94  
                                       l6481 223E                                         l6561 1BD2  
                                       l6801 08E0                                         l6721 1F0E  
                                       l7371 1DBA                                         l7531 14B1  
                                       l7523 1483                                         l7443 1318  
                                       l7195 12A3                                         l8411 2FA1  
                                       l6635 2FCC                                         l6627 2F90  
                                       l6379 1ADD                                         l6467 2206  
                                       l6723 1F17                                         l6707 1ECE  
                                       l7275 2938                                         l7525 149A  
                                       l7461 133B                                         l7445 1320  
                                       l7189 129C                                         l7197 12A5  
                                       l8413 28AF                                         l6645 2FFB  
                                       l6629 2F95                                         l6389 1AB8  
                                       l6397 1B52                                         l6485 224F  
                                       l6581 1C3A                                         l6565 1BEC  
                                       l6557 1BBA                                         l6741 1F82  
                                       l7277 2958                                         l7367 1DB5  
                                       l7535 14B3                                         l7471 1351  
                                       l7463 1343                                         l7607 2F56  
                                       l8087 28CD                                         l6495 225F  
                                       l6487 225C                                         l6743 1F92  
                                       l6751 1FC5                                         l6719 1EFE  
                                       l8407 2C12                                         l8191 2BF4  
                                       l7393 1DEE                                         l7385 1DC0  
                                       l7369 1D7E                                         l7545 14DC  
                                       l8097 213C                                         l6673 2B06  
                                       l6665 2AFF                                         l6809 0929  
                                       l6761 1826                                         l6745 1F9B  
                                       l6729 1F41                                         l8409 1EB6  
                                       l8169 2BC2                                         l7387 1DD7  
                                       l7555 1508                                         l7459 1339  
                                       l7651 00BC                                         l7731 296A  
                                       l6499 228C                                         l6667 2ADA  
                                       l6907 0BCF                                         l6819 0988  
                                       l8187 2BE4                                         l7805 2C28  
                                       l7397 1DF0                                         l7549 14F1  
                                       l7573 2EDF                                         l6589 1C7C  
                                       l6917 0C08                                         l6861 0B36  
                                       l6829 09E8                                         l6773 189E  
                                       l6765 1853                                         l7583 2EFA  
                                       l7663 017C                                         l7671 01C5  
                                       l7735 2975                                         l7903 1012  
                                       l6927 0C66                                         l6863 0AD4  
                                       l6839 0A40                                         l6687 1E82  
                                       l8199 2C08                                         l7761 203E  
                                       l7753 202E                                         l7825 2C56  
                                       l7809 2C31                                         l7593 2F2F  
                                       l7585 2F0A                                         l7657 011F  
                                       l7649 00A0                                         l7921 10D0  
                                       l6961 0DAB                                         l6937 0CC6  
                                       l6857 0B32                                         l6849 0A9F  
                                       l6785 0843                                         l6777 18CC  
                                       l6697 1E98                                         l7771 206C  
                                       l7763 204C                                         l7835 2C75  
                                       l7827 2C64                                         l7595 2F22  
                                       l7579 2EF6                                         l7683 01DF  
                                       l6971 0E0D                                         l6947 0D1E  
                                       l6875 0AF4                                         l7851 2E73  
                                       l7941 192F                                         l7925 10FA  
                                       l7909 10BE                                         l6957 0D7D  
                                       l6797 08B3                                         l6789 0862  
                                       l7853 2E7B                                         l7845 2E5F  
                                       l7775 2077                                         l6975 0E3B  
                                       l6887 0B13                                         l7863 2EB9  
                                       l7793 2DA3                                         l6985 0E9E  
                                       l7865 2EBD                                         l7779 2085  
                                       l7875 28AA                                         l7963 1A15  
                                       l7947 19DB                                         l7867 2EC4  
                                       l7789 2D89                                         l6989 0EBD  
                                       l7959 19ED                                         l7887 37CD  
                                       l6999 0F1C                                         l7993 243F  
                                       l7989 2417                                         STR_1 3002  
                               __CFG_WDTE$ON 0000                                         STR_2 303F  
                                       STR_4 3880                                         STR_5 382C  
                                       STR_6 3800                                         STR_7 3816  
                                       STR_8 3841                                         STR_9 3856  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u8130 2DD7                                         u9010 1F33  
                                       _SCS0 04C8                                         _SCS1 04C9  
                                       u9020 1F34                                         u8205 2D25  
                                       u8305 1A8C                                         u8250 1A50  
                                       u8260 1A51                                         u9060 1FB7  
                                       u8165 2E1C                                         u8510 21F5  
                                       u9070 1FB8                                         u8095 24EA  
                                       u8335 1B50                                         u7800 3795  
                                       u7720 37AB                                         u8425 262E  
                                       u7810 2855                                         u7730 37AC  
                                       u8355 1ACC                                         u8435 26B7  
                                       u7820 2856                                         u8365 1AD8  
                                       u8445 26DC                                         u9510 11CC  
                                       u7830 28ED                                         u8710 1C03  
                                       u8615 254D                                         u9520 11CD  
                                       u7840 28EE                                         u8720 1C04  
                                       u9505 11C1                                         u7905 37F3  
                                       u8465 2674                                         u8545 2226  
                                       u8705 1BE6                                         u8475 2680  
                                       u7860 374F                                         u8740 1C23  
                                       u7765 2A96                                         u8565 225A  
                                       u8645 258F                                         u8805 1C9C  
                                       u7870 3750                                         u7790 3794  
                                       u8750 1C24                                         u7695 2B48  
                                       u8575 2269                                         u8655 259B  
                                       u8815 1CA8                                         u7960 2769  
                                       u9633 123D                                         u9625 1220  
                                       u7785 3777                                         u9555 11EB  
                                       u8595 22A8                                         u8685 1B9A  
                                       u8870 2FE0                                         u7895 37EE  
                                       u8775 1C60                                         u8880 2FE1  
                                       u8785 1C86                                         u9675 1290  
                                       u7995 27AE                                         u9855 288C  
                                       u9775 12C7                                         _TMR1 0016  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                                         _atoi 2F5F  
                                       _ctoa 28FF                                         _main 2993  
                                       _dtoa 1A35                                         _logf 006F  
                                       _prec 00EB                                         _otoa 261C  
                                       _nout 0162                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 21EB                                         btemp 007E  
                                       _utoa 253B                                         _xtoa 1B88  
                                       start 0020                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1800                     __end_of_send_I2C_stopBit 36E6  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 3701                                ?_EUSART_Write 0070  
                              ___fltol@sign1 007A                              __end_of___aldiv 208E  
                            __end_of___aodiv 2800                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 12FC  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 253B                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5B  
                                      STR_10 386B                                        STR_11 3895  
                                      STR_12 38A9                                        STR_21 394C  
                                      STR_13 38BD                                        STR_14 38D0  
                                      STR_23 394C                                        STR_15 38E2  
                                      STR_32 394D                                        STR_41 3966  
                                      STR_17 3948                                        STR_19 3948  
                                      STR_51 3955                                        STR_35 3963  
                                      STR_28 3949                                        STR_44 3954  
                                      STR_37 3963                                        STR_61 3950  
                                      STR_46 3954                                        STR_54 396C  
                                      STR_71 3969                                        STR_39 3966  
                                      STR_56 396C                                        STR_81 3959  
                                      STR_66 3951                                        STR_74 3958  
                                      STR_91 395C                                        STR_59 3950  
                                      STR_76 3958                                        STR_84 396F  
                                      STR_69 3969                                        STR_93 3944  
                                      STR_86 396F                                        STR_95 3944  
                            __end_of___flmul 1528                                        STR_89 395C  
                                      ?_otoa 0030                              __end_of___flsub 29FA  
                            __end_of___fltol 2C84                                        ?_stoa 0020  
                                      ?_utoa 0030                                        u10105 1DC3  
                                      u10035 1D86                                        u11005 2C6C  
                                      u10205 1E22                                        u10125 1DCC  
                                      u10045 1D8D                                        u10215 1E3B  
                                      u10065 1D96                                        u10075 1DAA  
                                      u10315 13C7                                        u11115 10E9  
                                      u10325 13F6                                        u11205 231D  
                                      u10335 144C                                        u11215 2354  
                                      u11240 28C3                                        u10345 1463  
                                      u11305 21B8                                        u11250 28C4  
                                      u11315 2098                                        u10195 1E07  
                                      u10355 1472                                        u11155 1A06  
                            __end_of___lodiv 2E4C                                        u11075 2EB0  
                                      u11260 28D2                                        u11325 20AF  
                                      u10365 1486                                        u10605 2F43  
                                      u10525 2F03                                        u11270 28D3  
                                      u10455 14CA                                        u11175 23F1  
                                      ?_xtoa 0030                                        u11345 20E5  
                                      u10465 14E5                                        u10385 148F  
                                      u10545 2F17                                        u11185 242F  
                                      u11355 20FC                                        u10475 14FB  
                                      u10565 2F29                                        u11285 2152  
                                      u11437 29BD                                        u10815 2041  
                                      u10735 01F7                                        u10655 00B0  
                                      u11447 37C1                                        u11457 2C01  
                                      u10835 204D                                        u11467 372B  
                                      u10675 00CD                                        u10755 2976  
                                      u10845 2061                                        u10765 297D  
                                      u10855 206D                                        u10695 0130  
                                      u10945 2C3A                                        u10975 2C57  
                            __end_of___lomod 2D54                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l141 001E                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 36D6  
                                      _flags 00ED                                        _errno 01BE  
                                      _fputc 2B17                              __end_of_isalpha 285D  
                                      _fputs 1800                                        _myIsr 0004  
                            __end_of_isdigit 3757                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0164                                        ctoa@c 0032  
                                      _putch 07FF                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 37B3                              __end_of_isspace 2840  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 379C  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3924  
                            __end_of_strncmp 2B17                              __end_of_toupper 28FF  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1777 0079                               __CFG_MCLRE$OFF 0000  
                            __initialization 0022                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00CB        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 3000                                 __end_of_ctoa 2930  
                               __end_of_main 29C5                                 __end_of_dtoa 1B88  
                               __end_of_logf 05F9                                 __end_of_otoa 270D  
                               __end_of_stoa 22B0                                 __end_of_utoa 261C  
                               __end_of_xtoa 1CE1                     __end_of_UV_delay_setting 3924  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 37B3                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3000                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 00E9  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 2CEB                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_100 395D  
                                     ?_fputs 007A                                       STR_111 3960  
                                     STR_104 3945                                       STR_113 3960  
                                     STR_107 3972                                       ?_myIsr 0070  
                                     STR_109 3972                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3085  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 392C  
                              vfpfcnvrt@done 00A2                                 ??_AFE_UPDATE 007C  
                                     _TX1REG 019A                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_958 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u804lld 2487  
                              _read_I2C_data 3730                             __end_of___xxtofl 2F5F  
                                     u793lld 2735                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 28BB                                 vfprintf@cfmt 0068  
                                     ___flge 2D54                                       ___lmul 2961  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C2                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 37E5  
                                     _ln2_hi 3940                                    ??___fldiv 0048  
                                     _ln2_lo 393C                               __CFG_STVREN$ON 0000  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 00AC                                    ??___lodiv 0071  
                           __end_of_init_I2C 3730                                    ??___lomod 0071  
                           __end_of_init_AFE 2BC1                             __end_of_init_RGB 36D0  
                  __end_of_ATmega328_address 3002                        _beginAFEcommunication 2137  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strlen 3757  
                                     logf@t1 0124                                       logf@t2 0128  
                                  ??_initWDT 0071                                       logf@dk 0142  
                                     logf@ix 015E                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 07FF  
                         __size_of__Umul8_16 001F                                    ??_islower 0073  
                                  ??_isspace 0073                          _updateVoltages$2025 00B4  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002F  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 2961                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 2824  
                                     xtoa@fp 0030                                    ??_strncmp 0077  
                                  ??_toupper 0020                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 006B                               ?_read_I2C_data 0071  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 2800  
                              __end_of_fputc 2B6B                                __end_of_fputs 1826  
                              __end_of_myIsr 0020                                 _cellVoltages 01A0  
                              __end_of_putch 0800                                   _batCurrent 01B6  
                         _RGB_AWAIT_AFE_CONN 28BB                       updateTemperatures@vtsx 00CD  
                __size_of_updateTemperatures 0200                                   _batVoltage 01BA  
                        ?_RGB_AWAIT_AFE_CONN 0070                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00EB                                   __pbssBANK2 0162  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 00E8                            __end_of__Umul8_16 289A  
                                 __pmaintext 2993                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B2                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_949 00AA                           __size_of_vfpfcnvrt F1A5  
         __size_of_watchdog_timeout_shutdown 0018                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 2384  
      __size_of_setCellOvervoltageProtection 00D4                 _setCellOvervoltageProtection 22B0  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 245F  
     __size_of_setCellUndervoltageProtection 00DB                _setCellUndervoltageProtection 2384  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 2A30  
                                    ___aldiv 200C                                      _adcGain 016E  
                            __size_of___flge 007C                                      ___aodiv 270D  
                                    ___fladd 111A                                      ___aomod 245F  
                                    ___fldiv 1CE1                              __size_of___lmul 0032  
                                    ___flmul 12FC                                      ___flsub 29C5  
                                    ___fltol 2C1E                              __size_of___wmul 001B  
                                    ___lodiv 2DD0                                      ___lomod 2CEB  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                              _messageBuffer 2771                                      __ptext1 37B3  
                                    __ptext2 1000                                      __ptext3 2BC1  
                                    __ptext4 2C84                                      __ptext5 2809  
                                    __ptext6 2E4C                                      __ptext7 2930  
                                    __ptext8 1E5B                                      __ptext9 1B88  
                          __end_of_init_GPIO 0843                            __end_of_initClock 36CB  
                          __end_of_init_TMR1 3720                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 36D0  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 2840                                      _isdigit 3740  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 379C                                      _isspace 2824  
  __end_of_setOverCurrentDischargeProtection 1A35   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1920                                      _isupper 3785  
                                    atoi@neg 0024                                      clrloop0 2001  
          __end_of_watchdog_timeout_shutdown 37CB                                      _strncmp 2AC5  
                                    _toupper 28DD                         end_of_initialization 006B  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 208E                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 36EF  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 400085                                      psplit$1 850086  
                              _send_I2C_data 36F8                                    _RGB_color 289A  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                          __end_of_vsnprintf 2EC9                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 0067  
              __end_of_SCD_threshold_setting 3914                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 285D                                  ___flmul@grs 0035  
                  __end_of_EUSART_Initialize 2137                        _OCD_threshold_setting 3065  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
             ?_setCellUndervoltageProtection 0032                               ?_send_I2C_data 0071  
                        ??_I2C_writeRegister 007B                                ?_shutdown_BMS 0070  
                                 ?_RGB_color 0071                               __end_of___flge 2DD0  
                             __end_of___lmul 2993                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 3800  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3944  
                             __end_of_ln2_lo 3940                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 376E  
                        start_initialization 0022                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 01D7  
                                __end_of_Lg1 393C                                  __end_of_Lg2 3938  
                                __end_of_Lg3 3934                                  __end_of_Lg4 3930  
                              ?_statemachine 0070                                  __end_of_abs 3785  
                                __end_of_pad 2AC5                            _minCellTempCharge 01CC  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01C6  
                       updateVoltages@adcVal 00B8                         _minCellTempDischarge 01CA  
                  __end_of_I2C_writeRegister 287B       _setOverCurrentDischargeProtection$2024 00A4  
                          pnum$text8_split_1 0085                            pnum$text8_split_2 0086  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 37CB                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                               ??_shutdown_BMS 0071  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 287B  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01D0  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 07F9  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                                  _adcOffset 0166                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 00E6                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 016B  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 00D0  
                          __size_of___xxtofl 0096                                 _readRegister 29FA  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00C3  
                      updateTemperatures@rts 00C7                    __end_of_EUSART_Write_Text 37E5  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1642 0026                                    _atoi$1643 002A  
                                  _atoi$1644 0028                             _OV_delay_setting 3914  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 36D6  
                                  _dtoa$1191 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 3715                                     ?___aomod 0020  
                                   ?___fldiv 0040                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2030 012C                                    _logf$2031 0130  
                                  _logf$2032 0134                                    _logf$2033 0138  
                                  _logf$2029 0152                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 36C8                                    _init_TMR1 3715  
                                  _currState 016C                    _setShortCircuitProtection 1003  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 3740                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 016A  
                            BQ76920@protect2 0169                              BQ76920@protect3 0168  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 36DE                                    clear_ram0 2000  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 36EF  
                        _printcellParameters 2C84                                    _vfpfcnvrt 1E5B  
                                  _xtoa$1227 0043                                    _xtoa$1228 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 2A30  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1669 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                       __end_of_shutdown_BMS 1003                        _temperatureThermistor 01C0  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 2E4C                                   _AFE_UPDATE 07F9  
                          _OCD_delay_setting 38F4                         __end_of_statemachine 2C1E  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 02D8                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A               _setShortCircuitProtection$2023 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2EC9  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 36DE                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 28DD  
                                   __ptext11 379C                                     __ptext20 1A35  
                                   __ptext12 3785                                     __ptext21 376E  
                                   __ptext13 2840                                     __ptext30 2F5F  
                                   __ptext22 245F                                     __ptext14 253B  
                                   __ptext31 2824                                     __ptext23 270D  
                                   __ptext15 2CEB                                     __ptext40 1920  
                                   __ptext32 3740                                     __ptext24 28FF  
                                   __ptext16 2DD0                                     __ptext41 2D54  
                                   __ptext33 37CB                                     __ptext25 2A74  
                                   __ptext17 2AC5                                     __ptext50 2961  
                                   __ptext42 2384                                     __ptext34 0800  
                                   __ptext26 3757                                     __ptext18 21EB  
                                   __ptext51 05F9                                     __ptext43 22B0  
                                   __ptext35 2B6B                                     __ptext27 1800  
                                   __ptext19 261C                                     __ptext60 2EC9  
                                   __ptext52 29FA                                     __ptext44 2137  
                                   __ptext36 2A30                                     __ptext28 2B17  
                                   __ptext61 29C5                                     __ptext53 36DE  
                                   __ptext45 285D                                     __ptext37 37E5  
                                   __ptext29 07FF                                     __ptext70 0808  
                                   __ptext62 111A                                     __ptext54 36D6  
                                   __ptext46 28BB                                     __ptext38 370B  
                                   __ptext71 36D0                                     __ptext63 12FC  
                                   __ptext55 36F8                                     __ptext47 289A  
                                   __ptext39 1003                                     __ptext72 36C8  
                                   __ptext64 287B                                     __ptext56 3701  
                                   __ptext48 07F9                                     __ptext73 36E6  
                                   __ptext65 1CE1                                     __ptext57 36EF  
                                   __ptext49 1528                                     __ptext74 208E  
                                   __ptext66 2C1E                                     __ptext58 3730  
                                   __ptext75 200C                                     __ptext67 3715  
                                   __ptext59 006F                                     __ptext68 36CB  
                                   __ptext69 3720                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 3904                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                                   _init_I2C 3720                                     _init_AFE 2B6B  
                                   _init_RGB 36CB                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text8 0040                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3904  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 36E6                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01D0  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 21EB  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 016D                                     _protect2 01CF  
                                   _protect3 01CE                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 2930                                     _snprintf 2809  
                           ___aomod@dividend 0028                                     logf@F469 01AA  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 391C  
                             _vfpfcnvrt$1242 00A4                               _vfpfcnvrt$1243 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3938  
                             __pstringtext11 393C                               __pstringtext20 386B  
                             __pstringtext12 3940                               __pstringtext21 3880  
                             __pstringtext13 3000                               __pstringtext30 3950  
                             __pstringtext22 3895                               __pstringtext14 303F  
                             __pstringtext31 3954                               __pstringtext23 38A9  
                             __pstringtext15 3800                               __pstringtext40 3972  
                             __pstringtext32 3958                               __pstringtext24 38BD  
                             __pstringtext16 3816                               __pstringtext41 0000  
                             __pstringtext33 395C                               __pstringtext25 38D0  
                             __pstringtext17 382C                               __pstringtext34 3960  
                             __pstringtext26 38E2                               __pstringtext18 3841  
                             __pstringtext35 3963                               __pstringtext27 3944  
                             __pstringtext19 3856                               __pstringtext36 3966  
                             __pstringtext28 3948                               __pstringtext37 3969  
                             __pstringtext29 394C                               __pstringtext38 396C  
                             __pstringtext39 396F                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 00C6  
                                 vsnprintf@n 00BD                                   vsnprintf@s 00BB  
                         _updateTemperatures 05F9                             _UV_delay_setting 391C  
                                  snprintf@n 00CE                                    snprintf@s 00CC  
               __end_of_send_I2C_controlByte 370B                                     intlevel1 0000  
        setShortCircuitProtection@current_mA 0066                                     islower@c 0071  
                                ?_AFE_UPDATE 0070                                     isspace@c 0071  
                        ?_updateTemperatures 0070                            __CFG_CLKOUTEN$OFF 0000  
                                _PPSLOCKbits 0E0F                                     isupper@c 0071  
         __size_of_setShortCircuitProtection 0117                                    strncmp@_l 0071  
                                  strncmp@_r 0073                            _maxCellTempCharge 01C8  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3065                                __pstringtext2 38F4  
                              __pstringtext3 3904                                __pstringtext4 3914  
                              __pstringtext5 391C                                __pstringtext6 3924  
                              __pstringtext7 392C                                __pstringtext8 3930  
                              __pstringtext9 3934                         ??_updateTemperatures 00B4  
                     __Umul8_16@multiplicand 0071                               _vsnprintf$1814 00C2  
                      __size_of_shutdown_BMS 0003                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 2A74                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2026 00B7  
                    _updateTemperatures$2027 00BB                      _updateTemperatures$2028 00BF  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 005D                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 28DD  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 36F8                            __Umul8_16@product 0075  
