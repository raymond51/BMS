

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 15 20:06:17 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	stringtext46,global,class=STRCODE,delta=2
    52                           	psect	cinit,global,class=CODE,merge=1,delta=2
    53                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    55                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    56                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    57                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    58                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    59                           	psect	clrtext,global,class=CODE,delta=2
    60                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    61                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    62                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    63                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    64                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    65                           	psect	text1,local,class=CODE,merge=1,delta=2
    66                           	psect	text2,local,class=CODE,merge=1,delta=2
    67                           	psect	text3,local,class=CODE,merge=1,delta=2
    68                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text6,local,class=CODE,merge=1,delta=2
    71                           	psect	text7,local,class=CODE,merge=1,delta=2
    72                           	psect	text8,local,class=CODE,merge=1,delta=2
    73                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text13,local,class=CODE,merge=1,delta=2
    78                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text17,local,class=CODE,merge=1,delta=2
    82                           	psect	text18,local,class=CODE,merge=1,delta=2
    83                           	psect	text19,local,class=CODE,merge=1,delta=2
    84                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text23,local,class=CODE,merge=1,delta=2
    88                           	psect	text24,local,class=CODE,merge=1,delta=2
    89                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text32,local,class=CODE,merge=1,delta=2
    97                           	psect	text33,local,class=CODE,merge=1,delta=2
    98                           	psect	text34,local,class=CODE,merge=1,delta=2
    99                           	psect	text35,local,class=CODE,merge=1,delta=2
   100                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text37,local,class=CODE,merge=1,delta=2
   102                           	psect	text38,local,class=CODE,merge=1,delta=2
   103                           	psect	text39,local,class=CODE,merge=1,delta=2
   104                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text41,local,class=CODE,merge=1,delta=2
   106                           	psect	text42,local,class=CODE,merge=1,delta=2
   107                           	psect	text43,local,class=CODE,merge=1,delta=2
   108                           	psect	text44,local,class=CODE,merge=1,delta=2
   109                           	psect	text45,local,class=CODE,merge=1,delta=2
   110                           	psect	text46,local,class=CODE,merge=1,delta=2
   111                           	psect	text47,local,class=CODE,merge=1,delta=2
   112                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   113                           	psect	text49,local,class=CODE,merge=1,delta=2
   114                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text51,local,class=CODE,merge=1,delta=2
   116                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text53,local,class=CODE,merge=1,delta=2
   118                           	psect	text54,local,class=CODE,merge=1,delta=2
   119                           	psect	text55,local,class=CODE,merge=1,delta=2
   120                           	psect	text56,local,class=CODE,merge=1,delta=2
   121                           	psect	text57,local,class=CODE,merge=1,delta=2
   122                           	psect	text58,local,class=CODE,merge=1,delta=2
   123                           	psect	text59,local,class=CODE,merge=1,delta=2
   124                           	psect	text60,local,class=CODE,merge=1,delta=2
   125                           	psect	text61,local,class=CODE,merge=1,delta=2
   126                           	psect	text62,local,class=CODE,merge=1,delta=2
   127                           	psect	text63,local,class=CODE,merge=1,delta=2
   128                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   129                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   130                           	psect	text66,local,class=CODE,merge=1,delta=2
   131                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   133                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   134                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   135                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   136                           	psect	text72,local,class=CODE,merge=1,delta=2
   137                           	psect	text73,local,class=CODE,merge=1,delta=2
   138                           	psect	text74,local,class=CODE,merge=1,delta=2
   139                           	psect	text75,local,class=CODE,merge=1,delta=2
   140                           	psect	text76,local,class=CODE,merge=1,delta=2
   141                           	psect	text77,local,class=CODE,merge=1,delta=2
   142                           	psect	text78,local,class=CODE,merge=1,delta=2
   143                           	psect	text79,local,class=CODE,merge=1,delta=2
   144                           	psect	text80,local,class=CODE,merge=1,delta=2,group=1
   145                           	psect	intentry,global,class=CODE,delta=2
   146                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   147                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   148                           	dabs	1,0xCA0,32
   149                           	dabs	1,0xC20,80
   150                           	dabs	1,0xBE1,15
   151                           	dabs	1,0x2771,0,_messageBuffer
   152                           	dabs	1,0x7E,2
   153  0000                     
   154                           ; Version 2.05
   155                           ; Generated 20/12/2018 GMT
   156                           ; 
   157                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   158                           ; All rights reserved.
   159                           ; 
   160                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   161                           ; 
   162                           ; Redistribution and use in source and binary forms, with or without modification, are
   163                           ; permitted provided that the following conditions are met:
   164                           ; 
   165                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   166                           ;        conditions and the following disclaimer.
   167                           ; 
   168                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   169                           ;        of conditions and the following disclaimer in the documentation and/or other
   170                           ;        materials provided with the distribution.
   171                           ; 
   172                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   173                           ;        software without specific prior written permission.
   174                           ; 
   175                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   176                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   177                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   178                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   179                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   180                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   181                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   182                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   183                           ; 
   184                           ; 
   185                           ; Code-generator required, PIC16F1719 Definitions
   186                           ; 
   187                           ; SFR Addresses
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011C                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  018F                     	;# 
   259  0190                     	;# 
   260  0191                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0197                     	;# 
   269  0199                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  019A                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019F                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020D                     	;# 
   296  020E                     	;# 
   297  020F                     	;# 
   298  0210                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  028C                     	;# 
   316  028D                     	;# 
   317  028E                     	;# 
   318  028F                     	;# 
   319  0290                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0293                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  029A                     	;# 
   329  029A                     	;# 
   330  029E                     	;# 
   331  030C                     	;# 
   332  030D                     	;# 
   333  030E                     	;# 
   334  030F                     	;# 
   335  0310                     	;# 
   336  038C                     	;# 
   337  038D                     	;# 
   338  038E                     	;# 
   339  038F                     	;# 
   340  0390                     	;# 
   341  0391                     	;# 
   342  0392                     	;# 
   343  0393                     	;# 
   344  0394                     	;# 
   345  0395                     	;# 
   346  0396                     	;# 
   347  0397                     	;# 
   348  0398                     	;# 
   349  0399                     	;# 
   350  039D                     	;# 
   351  039E                     	;# 
   352  039F                     	;# 
   353  0415                     	;# 
   354  0416                     	;# 
   355  0417                     	;# 
   356  041C                     	;# 
   357  041D                     	;# 
   358  041E                     	;# 
   359  0498                     	;# 
   360  0498                     	;# 
   361  0499                     	;# 
   362  049A                     	;# 
   363  049B                     	;# 
   364  049B                     	;# 
   365  049C                     	;# 
   366  049D                     	;# 
   367  049E                     	;# 
   368  049F                     	;# 
   369  0511                     	;# 
   370  0515                     	;# 
   371  0617                     	;# 
   372  0618                     	;# 
   373  0619                     	;# 
   374  0619                     	;# 
   375  061A                     	;# 
   376  061B                     	;# 
   377  061C                     	;# 
   378  061C                     	;# 
   379  0691                     	;# 
   380  0692                     	;# 
   381  0693                     	;# 
   382  0694                     	;# 
   383  0695                     	;# 
   384  0696                     	;# 
   385  0697                     	;# 
   386  0698                     	;# 
   387  0699                     	;# 
   388  069A                     	;# 
   389  069B                     	;# 
   390  069C                     	;# 
   391  069D                     	;# 
   392  069E                     	;# 
   393  069F                     	;# 
   394  0E0F                     	;# 
   395  0E10                     	;# 
   396  0E11                     	;# 
   397  0E12                     	;# 
   398  0E13                     	;# 
   399  0E14                     	;# 
   400  0E15                     	;# 
   401  0E17                     	;# 
   402  0E20                     	;# 
   403  0E21                     	;# 
   404  0E22                     	;# 
   405  0E24                     	;# 
   406  0E25                     	;# 
   407  0E28                     	;# 
   408  0E29                     	;# 
   409  0E2A                     	;# 
   410  0E2B                     	;# 
   411  0E90                     	;# 
   412  0E91                     	;# 
   413  0E92                     	;# 
   414  0E93                     	;# 
   415  0E94                     	;# 
   416  0E95                     	;# 
   417  0E96                     	;# 
   418  0E97                     	;# 
   419  0E98                     	;# 
   420  0E99                     	;# 
   421  0E9A                     	;# 
   422  0E9B                     	;# 
   423  0E9C                     	;# 
   424  0E9D                     	;# 
   425  0E9E                     	;# 
   426  0E9F                     	;# 
   427  0EA0                     	;# 
   428  0EA1                     	;# 
   429  0EA2                     	;# 
   430  0EA3                     	;# 
   431  0EA4                     	;# 
   432  0EA5                     	;# 
   433  0EA6                     	;# 
   434  0EA7                     	;# 
   435  0EA8                     	;# 
   436  0EA9                     	;# 
   437  0EAA                     	;# 
   438  0EAB                     	;# 
   439  0EAC                     	;# 
   440  0EAD                     	;# 
   441  0EAE                     	;# 
   442  0EAF                     	;# 
   443  0EB0                     	;# 
   444  0EB1                     	;# 
   445  0EB2                     	;# 
   446  0F0F                     	;# 
   447  0F10                     	;# 
   448  0F11                     	;# 
   449  0F12                     	;# 
   450  0F13                     	;# 
   451  0F14                     	;# 
   452  0F15                     	;# 
   453  0F16                     	;# 
   454  0F17                     	;# 
   455  0F18                     	;# 
   456  0F19                     	;# 
   457  0F1A                     	;# 
   458  0F1B                     	;# 
   459  0F1C                     	;# 
   460  0F1D                     	;# 
   461  0F1E                     	;# 
   462  0F1F                     	;# 
   463  0F20                     	;# 
   464  0F21                     	;# 
   465  0F22                     	;# 
   466  0F23                     	;# 
   467  0F24                     	;# 
   468  0F25                     	;# 
   469  0F26                     	;# 
   470  0F27                     	;# 
   471  0F28                     	;# 
   472  0F29                     	;# 
   473  0F2A                     	;# 
   474  0F2B                     	;# 
   475  0F2C                     	;# 
   476  0F2D                     	;# 
   477  0F2E                     	;# 
   478  0F2F                     	;# 
   479  0F30                     	;# 
   480  0F31                     	;# 
   481  0F32                     	;# 
   482  0F33                     	;# 
   483  0F34                     	;# 
   484  0F35                     	;# 
   485  0F36                     	;# 
   486  0F37                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  000F                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  008C                     	;# 
   528  008D                     	;# 
   529  008E                     	;# 
   530  008F                     	;# 
   531  0090                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  010F                     	;# 
   551  0110                     	;# 
   552  0111                     	;# 
   553  0112                     	;# 
   554  0113                     	;# 
   555  0114                     	;# 
   556  0115                     	;# 
   557  0116                     	;# 
   558  0117                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011A                     	;# 
   562  011B                     	;# 
   563  011B                     	;# 
   564  011C                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  018E                     	;# 
   568  018F                     	;# 
   569  0190                     	;# 
   570  0191                     	;# 
   571  0191                     	;# 
   572  0192                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0197                     	;# 
   579  0199                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019D                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  020D                     	;# 
   606  020E                     	;# 
   607  020F                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  028C                     	;# 
   626  028D                     	;# 
   627  028E                     	;# 
   628  028F                     	;# 
   629  0290                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0293                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029A                     	;# 
   640  029E                     	;# 
   641  030C                     	;# 
   642  030D                     	;# 
   643  030E                     	;# 
   644  030F                     	;# 
   645  0310                     	;# 
   646  038C                     	;# 
   647  038D                     	;# 
   648  038E                     	;# 
   649  038F                     	;# 
   650  0390                     	;# 
   651  0391                     	;# 
   652  0392                     	;# 
   653  0393                     	;# 
   654  0394                     	;# 
   655  0395                     	;# 
   656  0396                     	;# 
   657  0397                     	;# 
   658  0398                     	;# 
   659  0399                     	;# 
   660  039D                     	;# 
   661  039E                     	;# 
   662  039F                     	;# 
   663  0415                     	;# 
   664  0416                     	;# 
   665  0417                     	;# 
   666  041C                     	;# 
   667  041D                     	;# 
   668  041E                     	;# 
   669  0498                     	;# 
   670  0498                     	;# 
   671  0499                     	;# 
   672  049A                     	;# 
   673  049B                     	;# 
   674  049B                     	;# 
   675  049C                     	;# 
   676  049D                     	;# 
   677  049E                     	;# 
   678  049F                     	;# 
   679  0511                     	;# 
   680  0515                     	;# 
   681  0617                     	;# 
   682  0618                     	;# 
   683  0619                     	;# 
   684  0619                     	;# 
   685  061A                     	;# 
   686  061B                     	;# 
   687  061C                     	;# 
   688  061C                     	;# 
   689  0691                     	;# 
   690  0692                     	;# 
   691  0693                     	;# 
   692  0694                     	;# 
   693  0695                     	;# 
   694  0696                     	;# 
   695  0697                     	;# 
   696  0698                     	;# 
   697  0699                     	;# 
   698  069A                     	;# 
   699  069B                     	;# 
   700  069C                     	;# 
   701  069D                     	;# 
   702  069E                     	;# 
   703  069F                     	;# 
   704  0E0F                     	;# 
   705  0E10                     	;# 
   706  0E11                     	;# 
   707  0E12                     	;# 
   708  0E13                     	;# 
   709  0E14                     	;# 
   710  0E15                     	;# 
   711  0E17                     	;# 
   712  0E20                     	;# 
   713  0E21                     	;# 
   714  0E22                     	;# 
   715  0E24                     	;# 
   716  0E25                     	;# 
   717  0E28                     	;# 
   718  0E29                     	;# 
   719  0E2A                     	;# 
   720  0E2B                     	;# 
   721  0E90                     	;# 
   722  0E91                     	;# 
   723  0E92                     	;# 
   724  0E93                     	;# 
   725  0E94                     	;# 
   726  0E95                     	;# 
   727  0E96                     	;# 
   728  0E97                     	;# 
   729  0E98                     	;# 
   730  0E99                     	;# 
   731  0E9A                     	;# 
   732  0E9B                     	;# 
   733  0E9C                     	;# 
   734  0E9D                     	;# 
   735  0E9E                     	;# 
   736  0E9F                     	;# 
   737  0EA0                     	;# 
   738  0EA1                     	;# 
   739  0EA2                     	;# 
   740  0EA3                     	;# 
   741  0EA4                     	;# 
   742  0EA5                     	;# 
   743  0EA6                     	;# 
   744  0EA7                     	;# 
   745  0EA8                     	;# 
   746  0EA9                     	;# 
   747  0EAA                     	;# 
   748  0EAB                     	;# 
   749  0EAC                     	;# 
   750  0EAD                     	;# 
   751  0EAE                     	;# 
   752  0EAF                     	;# 
   753  0EB0                     	;# 
   754  0EB1                     	;# 
   755  0EB2                     	;# 
   756  0F0F                     	;# 
   757  0F10                     	;# 
   758  0F11                     	;# 
   759  0F12                     	;# 
   760  0F13                     	;# 
   761  0F14                     	;# 
   762  0F15                     	;# 
   763  0F16                     	;# 
   764  0F17                     	;# 
   765  0F18                     	;# 
   766  0F19                     	;# 
   767  0F1A                     	;# 
   768  0F1B                     	;# 
   769  0F1C                     	;# 
   770  0F1D                     	;# 
   771  0F1E                     	;# 
   772  0F1F                     	;# 
   773  0F20                     	;# 
   774  0F21                     	;# 
   775  0F22                     	;# 
   776  0F23                     	;# 
   777  0F24                     	;# 
   778  0F25                     	;# 
   779  0F26                     	;# 
   780  0F27                     	;# 
   781  0F28                     	;# 
   782  0F29                     	;# 
   783  0F2A                     	;# 
   784  0F2B                     	;# 
   785  0F2C                     	;# 
   786  0F2D                     	;# 
   787  0F2E                     	;# 
   788  0F2F                     	;# 
   789  0F30                     	;# 
   790  0F31                     	;# 
   791  0F32                     	;# 
   792  0F33                     	;# 
   793  0F34                     	;# 
   794  0F35                     	;# 
   795  0F36                     	;# 
   796  0F37                     	;# 
   797  0FE4                     	;# 
   798  0FE5                     	;# 
   799  0FE6                     	;# 
   800  0FE7                     	;# 
   801  0FE8                     	;# 
   802  0FE9                     	;# 
   803  0FEA                     	;# 
   804  0FEB                     	;# 
   805  0FED                     	;# 
   806  0FEE                     	;# 
   807  0FEF                     	;# 
   808  0000                     	;# 
   809  0001                     	;# 
   810  0002                     	;# 
   811  0003                     	;# 
   812  0004                     	;# 
   813  0005                     	;# 
   814  0006                     	;# 
   815  0007                     	;# 
   816  0008                     	;# 
   817  0009                     	;# 
   818  000A                     	;# 
   819  000B                     	;# 
   820  000C                     	;# 
   821  000D                     	;# 
   822  000E                     	;# 
   823  000F                     	;# 
   824  0010                     	;# 
   825  0011                     	;# 
   826  0012                     	;# 
   827  0013                     	;# 
   828  0015                     	;# 
   829  0016                     	;# 
   830  0016                     	;# 
   831  0017                     	;# 
   832  0018                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  008C                     	;# 
   838  008D                     	;# 
   839  008E                     	;# 
   840  008F                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009B                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  0110                     	;# 
   862  0111                     	;# 
   863  0112                     	;# 
   864  0113                     	;# 
   865  0114                     	;# 
   866  0115                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  0118                     	;# 
   870  0119                     	;# 
   871  011A                     	;# 
   872  011B                     	;# 
   873  011B                     	;# 
   874  011C                     	;# 
   875  018C                     	;# 
   876  018D                     	;# 
   877  018E                     	;# 
   878  018F                     	;# 
   879  0190                     	;# 
   880  0191                     	;# 
   881  0191                     	;# 
   882  0192                     	;# 
   883  0193                     	;# 
   884  0193                     	;# 
   885  0194                     	;# 
   886  0195                     	;# 
   887  0196                     	;# 
   888  0197                     	;# 
   889  0199                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  019A                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019E                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019F                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  020C                     	;# 
   915  020D                     	;# 
   916  020E                     	;# 
   917  020F                     	;# 
   918  0210                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  028C                     	;# 
   936  028D                     	;# 
   937  028E                     	;# 
   938  028F                     	;# 
   939  0290                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0293                     	;# 
   945  0298                     	;# 
   946  0298                     	;# 
   947  0299                     	;# 
   948  029A                     	;# 
   949  029A                     	;# 
   950  029E                     	;# 
   951  030C                     	;# 
   952  030D                     	;# 
   953  030E                     	;# 
   954  030F                     	;# 
   955  0310                     	;# 
   956  038C                     	;# 
   957  038D                     	;# 
   958  038E                     	;# 
   959  038F                     	;# 
   960  0390                     	;# 
   961  0391                     	;# 
   962  0392                     	;# 
   963  0393                     	;# 
   964  0394                     	;# 
   965  0395                     	;# 
   966  0396                     	;# 
   967  0397                     	;# 
   968  0398                     	;# 
   969  0399                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0415                     	;# 
   974  0416                     	;# 
   975  0417                     	;# 
   976  041C                     	;# 
   977  041D                     	;# 
   978  041E                     	;# 
   979  0498                     	;# 
   980  0498                     	;# 
   981  0499                     	;# 
   982  049A                     	;# 
   983  049B                     	;# 
   984  049B                     	;# 
   985  049C                     	;# 
   986  049D                     	;# 
   987  049E                     	;# 
   988  049F                     	;# 
   989  0511                     	;# 
   990  0515                     	;# 
   991  0617                     	;# 
   992  0618                     	;# 
   993  0619                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061C                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  0695                     	;# 
  1004  0696                     	;# 
  1005  0697                     	;# 
  1006  0698                     	;# 
  1007  0699                     	;# 
  1008  069A                     	;# 
  1009  069B                     	;# 
  1010  069C                     	;# 
  1011  069D                     	;# 
  1012  069E                     	;# 
  1013  069F                     	;# 
  1014  0E0F                     	;# 
  1015  0E10                     	;# 
  1016  0E11                     	;# 
  1017  0E12                     	;# 
  1018  0E13                     	;# 
  1019  0E14                     	;# 
  1020  0E15                     	;# 
  1021  0E17                     	;# 
  1022  0E20                     	;# 
  1023  0E21                     	;# 
  1024  0E22                     	;# 
  1025  0E24                     	;# 
  1026  0E25                     	;# 
  1027  0E28                     	;# 
  1028  0E29                     	;# 
  1029  0E2A                     	;# 
  1030  0E2B                     	;# 
  1031  0E90                     	;# 
  1032  0E91                     	;# 
  1033  0E92                     	;# 
  1034  0E93                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0E96                     	;# 
  1038  0E97                     	;# 
  1039  0E98                     	;# 
  1040  0E99                     	;# 
  1041  0E9A                     	;# 
  1042  0E9B                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0E9F                     	;# 
  1047  0EA0                     	;# 
  1048  0EA1                     	;# 
  1049  0EA2                     	;# 
  1050  0EA3                     	;# 
  1051  0EA4                     	;# 
  1052  0EA5                     	;# 
  1053  0EA6                     	;# 
  1054  0EA7                     	;# 
  1055  0EA8                     	;# 
  1056  0EA9                     	;# 
  1057  0EAA                     	;# 
  1058  0EAB                     	;# 
  1059  0EAC                     	;# 
  1060  0EAD                     	;# 
  1061  0EAE                     	;# 
  1062  0EAF                     	;# 
  1063  0EB0                     	;# 
  1064  0EB1                     	;# 
  1065  0EB2                     	;# 
  1066  0F0F                     	;# 
  1067  0F10                     	;# 
  1068  0F11                     	;# 
  1069  0F12                     	;# 
  1070  0F13                     	;# 
  1071  0F14                     	;# 
  1072  0F15                     	;# 
  1073  0F16                     	;# 
  1074  0F17                     	;# 
  1075  0F18                     	;# 
  1076  0F19                     	;# 
  1077  0F1A                     	;# 
  1078  0F1B                     	;# 
  1079  0F1C                     	;# 
  1080  0F1D                     	;# 
  1081  0F1E                     	;# 
  1082  0F1F                     	;# 
  1083  0F20                     	;# 
  1084  0F21                     	;# 
  1085  0F22                     	;# 
  1086  0F23                     	;# 
  1087  0F24                     	;# 
  1088  0F25                     	;# 
  1089  0F26                     	;# 
  1090  0F27                     	;# 
  1091  0F28                     	;# 
  1092  0F29                     	;# 
  1093  0F2A                     	;# 
  1094  0F2B                     	;# 
  1095  0F2C                     	;# 
  1096  0F2D                     	;# 
  1097  0F2E                     	;# 
  1098  0F2F                     	;# 
  1099  0F30                     	;# 
  1100  0F31                     	;# 
  1101  0F32                     	;# 
  1102  0F33                     	;# 
  1103  0F34                     	;# 
  1104  0F35                     	;# 
  1105  0F36                     	;# 
  1106  0F37                     	;# 
  1107  0FE4                     	;# 
  1108  0FE5                     	;# 
  1109  0FE6                     	;# 
  1110  0FE7                     	;# 
  1111  0FE8                     	;# 
  1112  0FE9                     	;# 
  1113  0FEA                     	;# 
  1114  0FEB                     	;# 
  1115  0FED                     	;# 
  1116  0FEE                     	;# 
  1117  0FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  000F                     	;# 
  1134  0010                     	;# 
  1135  0011                     	;# 
  1136  0012                     	;# 
  1137  0013                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0016                     	;# 
  1141  0017                     	;# 
  1142  0018                     	;# 
  1143  0019                     	;# 
  1144  001A                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  009B                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  009F                     	;# 
  1167  010C                     	;# 
  1168  010D                     	;# 
  1169  010E                     	;# 
  1170  010F                     	;# 
  1171  0110                     	;# 
  1172  0111                     	;# 
  1173  0112                     	;# 
  1174  0113                     	;# 
  1175  0114                     	;# 
  1176  0115                     	;# 
  1177  0116                     	;# 
  1178  0117                     	;# 
  1179  0118                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011C                     	;# 
  1185  018C                     	;# 
  1186  018D                     	;# 
  1187  018E                     	;# 
  1188  018F                     	;# 
  1189  0190                     	;# 
  1190  0191                     	;# 
  1191  0191                     	;# 
  1192  0192                     	;# 
  1193  0193                     	;# 
  1194  0193                     	;# 
  1195  0194                     	;# 
  1196  0195                     	;# 
  1197  0196                     	;# 
  1198  0197                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  020C                     	;# 
  1225  020D                     	;# 
  1226  020E                     	;# 
  1227  020F                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  028C                     	;# 
  1246  028D                     	;# 
  1247  028E                     	;# 
  1248  028F                     	;# 
  1249  0290                     	;# 
  1250  0291                     	;# 
  1251  0291                     	;# 
  1252  0292                     	;# 
  1253  0293                     	;# 
  1254  0293                     	;# 
  1255  0298                     	;# 
  1256  0298                     	;# 
  1257  0299                     	;# 
  1258  029A                     	;# 
  1259  029A                     	;# 
  1260  029E                     	;# 
  1261  030C                     	;# 
  1262  030D                     	;# 
  1263  030E                     	;# 
  1264  030F                     	;# 
  1265  0310                     	;# 
  1266  038C                     	;# 
  1267  038D                     	;# 
  1268  038E                     	;# 
  1269  038F                     	;# 
  1270  0390                     	;# 
  1271  0391                     	;# 
  1272  0392                     	;# 
  1273  0393                     	;# 
  1274  0394                     	;# 
  1275  0395                     	;# 
  1276  0396                     	;# 
  1277  0397                     	;# 
  1278  0398                     	;# 
  1279  0399                     	;# 
  1280  039D                     	;# 
  1281  039E                     	;# 
  1282  039F                     	;# 
  1283  0415                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  041C                     	;# 
  1287  041D                     	;# 
  1288  041E                     	;# 
  1289  0498                     	;# 
  1290  0498                     	;# 
  1291  0499                     	;# 
  1292  049A                     	;# 
  1293  049B                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  049E                     	;# 
  1298  049F                     	;# 
  1299  0511                     	;# 
  1300  0515                     	;# 
  1301  0617                     	;# 
  1302  0618                     	;# 
  1303  0619                     	;# 
  1304  0619                     	;# 
  1305  061A                     	;# 
  1306  061B                     	;# 
  1307  061C                     	;# 
  1308  061C                     	;# 
  1309  0691                     	;# 
  1310  0692                     	;# 
  1311  0693                     	;# 
  1312  0694                     	;# 
  1313  0695                     	;# 
  1314  0696                     	;# 
  1315  0697                     	;# 
  1316  0698                     	;# 
  1317  0699                     	;# 
  1318  069A                     	;# 
  1319  069B                     	;# 
  1320  069C                     	;# 
  1321  069D                     	;# 
  1322  069E                     	;# 
  1323  069F                     	;# 
  1324  0E0F                     	;# 
  1325  0E10                     	;# 
  1326  0E11                     	;# 
  1327  0E12                     	;# 
  1328  0E13                     	;# 
  1329  0E14                     	;# 
  1330  0E15                     	;# 
  1331  0E17                     	;# 
  1332  0E20                     	;# 
  1333  0E21                     	;# 
  1334  0E22                     	;# 
  1335  0E24                     	;# 
  1336  0E25                     	;# 
  1337  0E28                     	;# 
  1338  0E29                     	;# 
  1339  0E2A                     	;# 
  1340  0E2B                     	;# 
  1341  0E90                     	;# 
  1342  0E91                     	;# 
  1343  0E92                     	;# 
  1344  0E93                     	;# 
  1345  0E94                     	;# 
  1346  0E95                     	;# 
  1347  0E96                     	;# 
  1348  0E97                     	;# 
  1349  0E98                     	;# 
  1350  0E99                     	;# 
  1351  0E9A                     	;# 
  1352  0E9B                     	;# 
  1353  0E9C                     	;# 
  1354  0E9D                     	;# 
  1355  0E9E                     	;# 
  1356  0E9F                     	;# 
  1357  0EA0                     	;# 
  1358  0EA1                     	;# 
  1359  0EA2                     	;# 
  1360  0EA3                     	;# 
  1361  0EA4                     	;# 
  1362  0EA5                     	;# 
  1363  0EA6                     	;# 
  1364  0EA7                     	;# 
  1365  0EA8                     	;# 
  1366  0EA9                     	;# 
  1367  0EAA                     	;# 
  1368  0EAB                     	;# 
  1369  0EAC                     	;# 
  1370  0EAD                     	;# 
  1371  0EAE                     	;# 
  1372  0EAF                     	;# 
  1373  0EB0                     	;# 
  1374  0EB1                     	;# 
  1375  0EB2                     	;# 
  1376  0F0F                     	;# 
  1377  0F10                     	;# 
  1378  0F11                     	;# 
  1379  0F12                     	;# 
  1380  0F13                     	;# 
  1381  0F14                     	;# 
  1382  0F15                     	;# 
  1383  0F16                     	;# 
  1384  0F17                     	;# 
  1385  0F18                     	;# 
  1386  0F19                     	;# 
  1387  0F1A                     	;# 
  1388  0F1B                     	;# 
  1389  0F1C                     	;# 
  1390  0F1D                     	;# 
  1391  0F1E                     	;# 
  1392  0F1F                     	;# 
  1393  0F20                     	;# 
  1394  0F21                     	;# 
  1395  0F22                     	;# 
  1396  0F23                     	;# 
  1397  0F24                     	;# 
  1398  0F25                     	;# 
  1399  0F26                     	;# 
  1400  0F27                     	;# 
  1401  0F28                     	;# 
  1402  0F29                     	;# 
  1403  0F2A                     	;# 
  1404  0F2B                     	;# 
  1405  0F2C                     	;# 
  1406  0F2D                     	;# 
  1407  0F2E                     	;# 
  1408  0F2F                     	;# 
  1409  0F30                     	;# 
  1410  0F31                     	;# 
  1411  0F32                     	;# 
  1412  0F33                     	;# 
  1413  0F34                     	;# 
  1414  0F35                     	;# 
  1415  0F36                     	;# 
  1416  0F37                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  000F                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0015                     	;# 
  1449  0016                     	;# 
  1450  0016                     	;# 
  1451  0017                     	;# 
  1452  0018                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  008C                     	;# 
  1458  008D                     	;# 
  1459  008E                     	;# 
  1460  008F                     	;# 
  1461  0090                     	;# 
  1462  0091                     	;# 
  1463  0092                     	;# 
  1464  0093                     	;# 
  1465  0095                     	;# 
  1466  0096                     	;# 
  1467  0097                     	;# 
  1468  0098                     	;# 
  1469  0099                     	;# 
  1470  009A                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010D                     	;# 
  1479  010E                     	;# 
  1480  010F                     	;# 
  1481  0110                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011A                     	;# 
  1492  011B                     	;# 
  1493  011B                     	;# 
  1494  011C                     	;# 
  1495  018C                     	;# 
  1496  018D                     	;# 
  1497  018E                     	;# 
  1498  018F                     	;# 
  1499  0190                     	;# 
  1500  0191                     	;# 
  1501  0191                     	;# 
  1502  0192                     	;# 
  1503  0193                     	;# 
  1504  0193                     	;# 
  1505  0194                     	;# 
  1506  0195                     	;# 
  1507  0196                     	;# 
  1508  0197                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  020C                     	;# 
  1535  020D                     	;# 
  1536  020E                     	;# 
  1537  020F                     	;# 
  1538  0210                     	;# 
  1539  0211                     	;# 
  1540  0211                     	;# 
  1541  0212                     	;# 
  1542  0212                     	;# 
  1543  0213                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0214                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0216                     	;# 
  1552  0216                     	;# 
  1553  0217                     	;# 
  1554  0217                     	;# 
  1555  028C                     	;# 
  1556  028D                     	;# 
  1557  028E                     	;# 
  1558  028F                     	;# 
  1559  0290                     	;# 
  1560  0291                     	;# 
  1561  0291                     	;# 
  1562  0292                     	;# 
  1563  0293                     	;# 
  1564  0293                     	;# 
  1565  0298                     	;# 
  1566  0298                     	;# 
  1567  0299                     	;# 
  1568  029A                     	;# 
  1569  029A                     	;# 
  1570  029E                     	;# 
  1571  030C                     	;# 
  1572  030D                     	;# 
  1573  030E                     	;# 
  1574  030F                     	;# 
  1575  0310                     	;# 
  1576  038C                     	;# 
  1577  038D                     	;# 
  1578  038E                     	;# 
  1579  038F                     	;# 
  1580  0390                     	;# 
  1581  0391                     	;# 
  1582  0392                     	;# 
  1583  0393                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0397                     	;# 
  1588  0398                     	;# 
  1589  0399                     	;# 
  1590  039D                     	;# 
  1591  039E                     	;# 
  1592  039F                     	;# 
  1593  0415                     	;# 
  1594  0416                     	;# 
  1595  0417                     	;# 
  1596  041C                     	;# 
  1597  041D                     	;# 
  1598  041E                     	;# 
  1599  0498                     	;# 
  1600  0498                     	;# 
  1601  0499                     	;# 
  1602  049A                     	;# 
  1603  049B                     	;# 
  1604  049B                     	;# 
  1605  049C                     	;# 
  1606  049D                     	;# 
  1607  049E                     	;# 
  1608  049F                     	;# 
  1609  0511                     	;# 
  1610  0515                     	;# 
  1611  0617                     	;# 
  1612  0618                     	;# 
  1613  0619                     	;# 
  1614  0619                     	;# 
  1615  061A                     	;# 
  1616  061B                     	;# 
  1617  061C                     	;# 
  1618  061C                     	;# 
  1619  0691                     	;# 
  1620  0692                     	;# 
  1621  0693                     	;# 
  1622  0694                     	;# 
  1623  0695                     	;# 
  1624  0696                     	;# 
  1625  0697                     	;# 
  1626  0698                     	;# 
  1627  0699                     	;# 
  1628  069A                     	;# 
  1629  069B                     	;# 
  1630  069C                     	;# 
  1631  069D                     	;# 
  1632  069E                     	;# 
  1633  069F                     	;# 
  1634  0E0F                     	;# 
  1635  0E10                     	;# 
  1636  0E11                     	;# 
  1637  0E12                     	;# 
  1638  0E13                     	;# 
  1639  0E14                     	;# 
  1640  0E15                     	;# 
  1641  0E17                     	;# 
  1642  0E20                     	;# 
  1643  0E21                     	;# 
  1644  0E22                     	;# 
  1645  0E24                     	;# 
  1646  0E25                     	;# 
  1647  0E28                     	;# 
  1648  0E29                     	;# 
  1649  0E2A                     	;# 
  1650  0E2B                     	;# 
  1651  0E90                     	;# 
  1652  0E91                     	;# 
  1653  0E92                     	;# 
  1654  0E93                     	;# 
  1655  0E94                     	;# 
  1656  0E95                     	;# 
  1657  0E96                     	;# 
  1658  0E97                     	;# 
  1659  0E98                     	;# 
  1660  0E99                     	;# 
  1661  0E9A                     	;# 
  1662  0E9B                     	;# 
  1663  0E9C                     	;# 
  1664  0E9D                     	;# 
  1665  0E9E                     	;# 
  1666  0E9F                     	;# 
  1667  0EA0                     	;# 
  1668  0EA1                     	;# 
  1669  0EA2                     	;# 
  1670  0EA3                     	;# 
  1671  0EA4                     	;# 
  1672  0EA5                     	;# 
  1673  0EA6                     	;# 
  1674  0EA7                     	;# 
  1675  0EA8                     	;# 
  1676  0EA9                     	;# 
  1677  0EAA                     	;# 
  1678  0EAB                     	;# 
  1679  0EAC                     	;# 
  1680  0EAD                     	;# 
  1681  0EAE                     	;# 
  1682  0EAF                     	;# 
  1683  0EB0                     	;# 
  1684  0EB1                     	;# 
  1685  0EB2                     	;# 
  1686  0F0F                     	;# 
  1687  0F10                     	;# 
  1688  0F11                     	;# 
  1689  0F12                     	;# 
  1690  0F13                     	;# 
  1691  0F14                     	;# 
  1692  0F15                     	;# 
  1693  0F16                     	;# 
  1694  0F17                     	;# 
  1695  0F18                     	;# 
  1696  0F19                     	;# 
  1697  0F1A                     	;# 
  1698  0F1B                     	;# 
  1699  0F1C                     	;# 
  1700  0F1D                     	;# 
  1701  0F1E                     	;# 
  1702  0F1F                     	;# 
  1703  0F20                     	;# 
  1704  0F21                     	;# 
  1705  0F22                     	;# 
  1706  0F23                     	;# 
  1707  0F24                     	;# 
  1708  0F25                     	;# 
  1709  0F26                     	;# 
  1710  0F27                     	;# 
  1711  0F28                     	;# 
  1712  0F29                     	;# 
  1713  0F2A                     	;# 
  1714  0F2B                     	;# 
  1715  0F2C                     	;# 
  1716  0F2D                     	;# 
  1717  0F2E                     	;# 
  1718  0F2F                     	;# 
  1719  0F30                     	;# 
  1720  0F31                     	;# 
  1721  0F32                     	;# 
  1722  0F33                     	;# 
  1723  0F34                     	;# 
  1724  0F35                     	;# 
  1725  0F36                     	;# 
  1726  0F37                     	;# 
  1727  0FE4                     	;# 
  1728  0FE5                     	;# 
  1729  0FE6                     	;# 
  1730  0FE7                     	;# 
  1731  0FE8                     	;# 
  1732  0FE9                     	;# 
  1733  0FEA                     	;# 
  1734  0FEB                     	;# 
  1735  0FED                     	;# 
  1736  0FEE                     	;# 
  1737  0FEF                     	;# 
  1738  0000                     	;# 
  1739  0001                     	;# 
  1740  0002                     	;# 
  1741  0003                     	;# 
  1742  0004                     	;# 
  1743  0005                     	;# 
  1744  0006                     	;# 
  1745  0007                     	;# 
  1746  0008                     	;# 
  1747  0009                     	;# 
  1748  000A                     	;# 
  1749  000B                     	;# 
  1750  000C                     	;# 
  1751  000D                     	;# 
  1752  000E                     	;# 
  1753  000F                     	;# 
  1754  0010                     	;# 
  1755  0011                     	;# 
  1756  0012                     	;# 
  1757  0013                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0016                     	;# 
  1761  0017                     	;# 
  1762  0018                     	;# 
  1763  0019                     	;# 
  1764  001A                     	;# 
  1765  001B                     	;# 
  1766  001C                     	;# 
  1767  008C                     	;# 
  1768  008D                     	;# 
  1769  008E                     	;# 
  1770  008F                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0092                     	;# 
  1774  0093                     	;# 
  1775  0095                     	;# 
  1776  0096                     	;# 
  1777  0097                     	;# 
  1778  0098                     	;# 
  1779  0099                     	;# 
  1780  009A                     	;# 
  1781  009B                     	;# 
  1782  009B                     	;# 
  1783  009C                     	;# 
  1784  009D                     	;# 
  1785  009E                     	;# 
  1786  009F                     	;# 
  1787  010C                     	;# 
  1788  010D                     	;# 
  1789  010E                     	;# 
  1790  010F                     	;# 
  1791  0110                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0113                     	;# 
  1795  0114                     	;# 
  1796  0115                     	;# 
  1797  0116                     	;# 
  1798  0117                     	;# 
  1799  0118                     	;# 
  1800  0119                     	;# 
  1801  011A                     	;# 
  1802  011B                     	;# 
  1803  011B                     	;# 
  1804  011C                     	;# 
  1805  018C                     	;# 
  1806  018D                     	;# 
  1807  018E                     	;# 
  1808  018F                     	;# 
  1809  0190                     	;# 
  1810  0191                     	;# 
  1811  0191                     	;# 
  1812  0192                     	;# 
  1813  0193                     	;# 
  1814  0193                     	;# 
  1815  0194                     	;# 
  1816  0195                     	;# 
  1817  0196                     	;# 
  1818  0197                     	;# 
  1819  0199                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  019A                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019C                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019D                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019E                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  020C                     	;# 
  1845  020D                     	;# 
  1846  020E                     	;# 
  1847  020F                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0214                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0216                     	;# 
  1862  0216                     	;# 
  1863  0217                     	;# 
  1864  0217                     	;# 
  1865  028C                     	;# 
  1866  028D                     	;# 
  1867  028E                     	;# 
  1868  028F                     	;# 
  1869  0290                     	;# 
  1870  0291                     	;# 
  1871  0291                     	;# 
  1872  0292                     	;# 
  1873  0293                     	;# 
  1874  0293                     	;# 
  1875  0298                     	;# 
  1876  0298                     	;# 
  1877  0299                     	;# 
  1878  029A                     	;# 
  1879  029A                     	;# 
  1880  029E                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  038C                     	;# 
  1887  038D                     	;# 
  1888  038E                     	;# 
  1889  038F                     	;# 
  1890  0390                     	;# 
  1891  0391                     	;# 
  1892  0392                     	;# 
  1893  0393                     	;# 
  1894  0394                     	;# 
  1895  0395                     	;# 
  1896  0396                     	;# 
  1897  0397                     	;# 
  1898  0398                     	;# 
  1899  0399                     	;# 
  1900  039D                     	;# 
  1901  039E                     	;# 
  1902  039F                     	;# 
  1903  0415                     	;# 
  1904  0416                     	;# 
  1905  0417                     	;# 
  1906  041C                     	;# 
  1907  041D                     	;# 
  1908  041E                     	;# 
  1909  0498                     	;# 
  1910  0498                     	;# 
  1911  0499                     	;# 
  1912  049A                     	;# 
  1913  049B                     	;# 
  1914  049B                     	;# 
  1915  049C                     	;# 
  1916  049D                     	;# 
  1917  049E                     	;# 
  1918  049F                     	;# 
  1919  0511                     	;# 
  1920  0515                     	;# 
  1921  0617                     	;# 
  1922  0618                     	;# 
  1923  0619                     	;# 
  1924  0619                     	;# 
  1925  061A                     	;# 
  1926  061B                     	;# 
  1927  061C                     	;# 
  1928  061C                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  0695                     	;# 
  1934  0696                     	;# 
  1935  0697                     	;# 
  1936  0698                     	;# 
  1937  0699                     	;# 
  1938  069A                     	;# 
  1939  069B                     	;# 
  1940  069C                     	;# 
  1941  069D                     	;# 
  1942  069E                     	;# 
  1943  069F                     	;# 
  1944  0E0F                     	;# 
  1945  0E10                     	;# 
  1946  0E11                     	;# 
  1947  0E12                     	;# 
  1948  0E13                     	;# 
  1949  0E14                     	;# 
  1950  0E15                     	;# 
  1951  0E17                     	;# 
  1952  0E20                     	;# 
  1953  0E21                     	;# 
  1954  0E22                     	;# 
  1955  0E24                     	;# 
  1956  0E25                     	;# 
  1957  0E28                     	;# 
  1958  0E29                     	;# 
  1959  0E2A                     	;# 
  1960  0E2B                     	;# 
  1961  0E90                     	;# 
  1962  0E91                     	;# 
  1963  0E92                     	;# 
  1964  0E93                     	;# 
  1965  0E94                     	;# 
  1966  0E95                     	;# 
  1967  0E96                     	;# 
  1968  0E97                     	;# 
  1969  0E98                     	;# 
  1970  0E99                     	;# 
  1971  0E9A                     	;# 
  1972  0E9B                     	;# 
  1973  0E9C                     	;# 
  1974  0E9D                     	;# 
  1975  0E9E                     	;# 
  1976  0E9F                     	;# 
  1977  0EA0                     	;# 
  1978  0EA1                     	;# 
  1979  0EA2                     	;# 
  1980  0EA3                     	;# 
  1981  0EA4                     	;# 
  1982  0EA5                     	;# 
  1983  0EA6                     	;# 
  1984  0EA7                     	;# 
  1985  0EA8                     	;# 
  1986  0EA9                     	;# 
  1987  0EAA                     	;# 
  1988  0EAB                     	;# 
  1989  0EAC                     	;# 
  1990  0EAD                     	;# 
  1991  0EAE                     	;# 
  1992  0EAF                     	;# 
  1993  0EB0                     	;# 
  1994  0EB1                     	;# 
  1995  0EB2                     	;# 
  1996  0F0F                     	;# 
  1997  0F10                     	;# 
  1998  0F11                     	;# 
  1999  0F12                     	;# 
  2000  0F13                     	;# 
  2001  0F14                     	;# 
  2002  0F15                     	;# 
  2003  0F16                     	;# 
  2004  0F17                     	;# 
  2005  0F18                     	;# 
  2006  0F19                     	;# 
  2007  0F1A                     	;# 
  2008  0F1B                     	;# 
  2009  0F1C                     	;# 
  2010  0F1D                     	;# 
  2011  0F1E                     	;# 
  2012  0F1F                     	;# 
  2013  0F20                     	;# 
  2014  0F21                     	;# 
  2015  0F22                     	;# 
  2016  0F23                     	;# 
  2017  0F24                     	;# 
  2018  0F25                     	;# 
  2019  0F26                     	;# 
  2020  0F27                     	;# 
  2021  0F28                     	;# 
  2022  0F29                     	;# 
  2023  0F2A                     	;# 
  2024  0F2B                     	;# 
  2025  0F2C                     	;# 
  2026  0F2D                     	;# 
  2027  0F2E                     	;# 
  2028  0F2F                     	;# 
  2029  0F30                     	;# 
  2030  0F31                     	;# 
  2031  0F32                     	;# 
  2032  0F33                     	;# 
  2033  0F34                     	;# 
  2034  0F35                     	;# 
  2035  0F36                     	;# 
  2036  0F37                     	;# 
  2037  0FE4                     	;# 
  2038  0FE5                     	;# 
  2039  0FE6                     	;# 
  2040  0FE7                     	;# 
  2041  0FE8                     	;# 
  2042  0FE9                     	;# 
  2043  0FEA                     	;# 
  2044  0FEB                     	;# 
  2045  0FED                     	;# 
  2046  0FEE                     	;# 
  2047  0FEF                     	;# 
  2048  0000                     	;# 
  2049  0001                     	;# 
  2050  0002                     	;# 
  2051  0003                     	;# 
  2052  0004                     	;# 
  2053  0005                     	;# 
  2054  0006                     	;# 
  2055  0007                     	;# 
  2056  0008                     	;# 
  2057  0009                     	;# 
  2058  000A                     	;# 
  2059  000B                     	;# 
  2060  000C                     	;# 
  2061  000D                     	;# 
  2062  000E                     	;# 
  2063  000F                     	;# 
  2064  0010                     	;# 
  2065  0011                     	;# 
  2066  0012                     	;# 
  2067  0013                     	;# 
  2068  0015                     	;# 
  2069  0016                     	;# 
  2070  0016                     	;# 
  2071  0017                     	;# 
  2072  0018                     	;# 
  2073  0019                     	;# 
  2074  001A                     	;# 
  2075  001B                     	;# 
  2076  001C                     	;# 
  2077  008C                     	;# 
  2078  008D                     	;# 
  2079  008E                     	;# 
  2080  008F                     	;# 
  2081  0090                     	;# 
  2082  0091                     	;# 
  2083  0092                     	;# 
  2084  0093                     	;# 
  2085  0095                     	;# 
  2086  0096                     	;# 
  2087  0097                     	;# 
  2088  0098                     	;# 
  2089  0099                     	;# 
  2090  009A                     	;# 
  2091  009B                     	;# 
  2092  009B                     	;# 
  2093  009C                     	;# 
  2094  009D                     	;# 
  2095  009E                     	;# 
  2096  009F                     	;# 
  2097  010C                     	;# 
  2098  010D                     	;# 
  2099  010E                     	;# 
  2100  010F                     	;# 
  2101  0110                     	;# 
  2102  0111                     	;# 
  2103  0112                     	;# 
  2104  0113                     	;# 
  2105  0114                     	;# 
  2106  0115                     	;# 
  2107  0116                     	;# 
  2108  0117                     	;# 
  2109  0118                     	;# 
  2110  0119                     	;# 
  2111  011A                     	;# 
  2112  011B                     	;# 
  2113  011B                     	;# 
  2114  011C                     	;# 
  2115  018C                     	;# 
  2116  018D                     	;# 
  2117  018E                     	;# 
  2118  018F                     	;# 
  2119  0190                     	;# 
  2120  0191                     	;# 
  2121  0191                     	;# 
  2122  0192                     	;# 
  2123  0193                     	;# 
  2124  0193                     	;# 
  2125  0194                     	;# 
  2126  0195                     	;# 
  2127  0196                     	;# 
  2128  0197                     	;# 
  2129  0199                     	;# 
  2130  0199                     	;# 
  2131  0199                     	;# 
  2132  019A                     	;# 
  2133  019A                     	;# 
  2134  019A                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019C                     	;# 
  2141  019C                     	;# 
  2142  019C                     	;# 
  2143  019D                     	;# 
  2144  019D                     	;# 
  2145  019D                     	;# 
  2146  019E                     	;# 
  2147  019E                     	;# 
  2148  019E                     	;# 
  2149  019F                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  020C                     	;# 
  2155  020D                     	;# 
  2156  020E                     	;# 
  2157  020F                     	;# 
  2158  0210                     	;# 
  2159  0211                     	;# 
  2160  0211                     	;# 
  2161  0212                     	;# 
  2162  0212                     	;# 
  2163  0213                     	;# 
  2164  0213                     	;# 
  2165  0214                     	;# 
  2166  0214                     	;# 
  2167  0215                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0216                     	;# 
  2172  0216                     	;# 
  2173  0217                     	;# 
  2174  0217                     	;# 
  2175  028C                     	;# 
  2176  028D                     	;# 
  2177  028E                     	;# 
  2178  028F                     	;# 
  2179  0290                     	;# 
  2180  0291                     	;# 
  2181  0291                     	;# 
  2182  0292                     	;# 
  2183  0293                     	;# 
  2184  0293                     	;# 
  2185  0298                     	;# 
  2186  0298                     	;# 
  2187  0299                     	;# 
  2188  029A                     	;# 
  2189  029A                     	;# 
  2190  029E                     	;# 
  2191  030C                     	;# 
  2192  030D                     	;# 
  2193  030E                     	;# 
  2194  030F                     	;# 
  2195  0310                     	;# 
  2196  038C                     	;# 
  2197  038D                     	;# 
  2198  038E                     	;# 
  2199  038F                     	;# 
  2200  0390                     	;# 
  2201  0391                     	;# 
  2202  0392                     	;# 
  2203  0393                     	;# 
  2204  0394                     	;# 
  2205  0395                     	;# 
  2206  0396                     	;# 
  2207  0397                     	;# 
  2208  0398                     	;# 
  2209  0399                     	;# 
  2210  039D                     	;# 
  2211  039E                     	;# 
  2212  039F                     	;# 
  2213  0415                     	;# 
  2214  0416                     	;# 
  2215  0417                     	;# 
  2216  041C                     	;# 
  2217  041D                     	;# 
  2218  041E                     	;# 
  2219  0498                     	;# 
  2220  0498                     	;# 
  2221  0499                     	;# 
  2222  049A                     	;# 
  2223  049B                     	;# 
  2224  049B                     	;# 
  2225  049C                     	;# 
  2226  049D                     	;# 
  2227  049E                     	;# 
  2228  049F                     	;# 
  2229  0511                     	;# 
  2230  0515                     	;# 
  2231  0617                     	;# 
  2232  0618                     	;# 
  2233  0619                     	;# 
  2234  0619                     	;# 
  2235  061A                     	;# 
  2236  061B                     	;# 
  2237  061C                     	;# 
  2238  061C                     	;# 
  2239  0691                     	;# 
  2240  0692                     	;# 
  2241  0693                     	;# 
  2242  0694                     	;# 
  2243  0695                     	;# 
  2244  0696                     	;# 
  2245  0697                     	;# 
  2246  0698                     	;# 
  2247  0699                     	;# 
  2248  069A                     	;# 
  2249  069B                     	;# 
  2250  069C                     	;# 
  2251  069D                     	;# 
  2252  069E                     	;# 
  2253  069F                     	;# 
  2254  0E0F                     	;# 
  2255  0E10                     	;# 
  2256  0E11                     	;# 
  2257  0E12                     	;# 
  2258  0E13                     	;# 
  2259  0E14                     	;# 
  2260  0E15                     	;# 
  2261  0E17                     	;# 
  2262  0E20                     	;# 
  2263  0E21                     	;# 
  2264  0E22                     	;# 
  2265  0E24                     	;# 
  2266  0E25                     	;# 
  2267  0E28                     	;# 
  2268  0E29                     	;# 
  2269  0E2A                     	;# 
  2270  0E2B                     	;# 
  2271  0E90                     	;# 
  2272  0E91                     	;# 
  2273  0E92                     	;# 
  2274  0E93                     	;# 
  2275  0E94                     	;# 
  2276  0E95                     	;# 
  2277  0E96                     	;# 
  2278  0E97                     	;# 
  2279  0E98                     	;# 
  2280  0E99                     	;# 
  2281  0E9A                     	;# 
  2282  0E9B                     	;# 
  2283  0E9C                     	;# 
  2284  0E9D                     	;# 
  2285  0E9E                     	;# 
  2286  0E9F                     	;# 
  2287  0EA0                     	;# 
  2288  0EA1                     	;# 
  2289  0EA2                     	;# 
  2290  0EA3                     	;# 
  2291  0EA4                     	;# 
  2292  0EA5                     	;# 
  2293  0EA6                     	;# 
  2294  0EA7                     	;# 
  2295  0EA8                     	;# 
  2296  0EA9                     	;# 
  2297  0EAA                     	;# 
  2298  0EAB                     	;# 
  2299  0EAC                     	;# 
  2300  0EAD                     	;# 
  2301  0EAE                     	;# 
  2302  0EAF                     	;# 
  2303  0EB0                     	;# 
  2304  0EB1                     	;# 
  2305  0EB2                     	;# 
  2306  0F0F                     	;# 
  2307  0F10                     	;# 
  2308  0F11                     	;# 
  2309  0F12                     	;# 
  2310  0F13                     	;# 
  2311  0F14                     	;# 
  2312  0F15                     	;# 
  2313  0F16                     	;# 
  2314  0F17                     	;# 
  2315  0F18                     	;# 
  2316  0F19                     	;# 
  2317  0F1A                     	;# 
  2318  0F1B                     	;# 
  2319  0F1C                     	;# 
  2320  0F1D                     	;# 
  2321  0F1E                     	;# 
  2322  0F1F                     	;# 
  2323  0F20                     	;# 
  2324  0F21                     	;# 
  2325  0F22                     	;# 
  2326  0F23                     	;# 
  2327  0F24                     	;# 
  2328  0F25                     	;# 
  2329  0F26                     	;# 
  2330  0F27                     	;# 
  2331  0F28                     	;# 
  2332  0F29                     	;# 
  2333  0F2A                     	;# 
  2334  0F2B                     	;# 
  2335  0F2C                     	;# 
  2336  0F2D                     	;# 
  2337  0F2E                     	;# 
  2338  0F2F                     	;# 
  2339  0F30                     	;# 
  2340  0F31                     	;# 
  2341  0F32                     	;# 
  2342  0F33                     	;# 
  2343  0F34                     	;# 
  2344  0F35                     	;# 
  2345  0F36                     	;# 
  2346  0F37                     	;# 
  2347  0FE4                     	;# 
  2348  0FE5                     	;# 
  2349  0FE6                     	;# 
  2350  0FE7                     	;# 
  2351  0FE8                     	;# 
  2352  0FE9                     	;# 
  2353  0FEA                     	;# 
  2354  0FEB                     	;# 
  2355  0FED                     	;# 
  2356  0FEE                     	;# 
  2357  0FEF                     	;_messageBuffer
  2358                           
  2359                           	psect	idataBANK3
  2360  321F                     __pidataBANK3:	
  2361                           
  2362                           ;initializer for _samsung_cell_max_charge
  2363  321F  34C4               	retlw	196
  2364  3220  3409               	retlw	9
  2365                           
  2366                           ;initializer for _thermistorBetaValue
  2367  3221  346B               	retlw	107
  2368  3222  340D               	retlw	13
  2369                           
  2370                           	psect	idataBANK4
  2371  322E                     __pidataBANK4:	
  2372                           
  2373                           ;initializer for stoa@F1152
  2374  322E  3428               	retlw	40
  2375  322F  346E               	retlw	110
  2376  3230  3475               	retlw	117
  2377  3231  346C               	retlw	108
  2378  3232  346C               	retlw	108
  2379  3233  3429               	retlw	41
  2380  3234  3400               	retlw	0
  2381                           
  2382                           	psect	stringtext1
  2383  3800                     __pstringtext1:	
  2384  3800                     _lookupTableSamsung_SOC:	
  2385  3800  3464               	retlw	100
  2386  3801  3400               	retlw	0
  2387  3802  3462               	retlw	98
  2388  3803  3400               	retlw	0
  2389  3804  3460               	retlw	96
  2390  3805  3400               	retlw	0
  2391  3806  345D               	retlw	93
  2392  3807  3400               	retlw	0
  2393  3808  345B               	retlw	91
  2394  3809  3400               	retlw	0
  2395  380A  3457               	retlw	87
  2396  380B  3400               	retlw	0
  2397  380C  3454               	retlw	84
  2398  380D  3400               	retlw	0
  2399  380E  3452               	retlw	82
  2400  380F  3400               	retlw	0
  2401  3810  3450               	retlw	80
  2402  3811  3400               	retlw	0
  2403  3812  344E               	retlw	78
  2404  3813  3400               	retlw	0
  2405  3814  344C               	retlw	76
  2406  3815  3400               	retlw	0
  2407  3816  3449               	retlw	73
  2408  3817  3400               	retlw	0
  2409  3818  3447               	retlw	71
  2410  3819  3400               	retlw	0
  2411  381A  3445               	retlw	69
  2412  381B  3400               	retlw	0
  2413  381C  3443               	retlw	67
  2414  381D  3400               	retlw	0
  2415  381E  3440               	retlw	64
  2416  381F  3400               	retlw	0
  2417  3820  343E               	retlw	62
  2418  3821  3400               	retlw	0
  2419  3822  343C               	retlw	60
  2420  3823  3400               	retlw	0
  2421  3824  343A               	retlw	58
  2422  3825  3400               	retlw	0
  2423  3826  3438               	retlw	56
  2424  3827  3400               	retlw	0
  2425  3828  3435               	retlw	53
  2426  3829  3400               	retlw	0
  2427  382A  3433               	retlw	51
  2428  382B  3400               	retlw	0
  2429  382C  3431               	retlw	49
  2430  382D  3400               	retlw	0
  2431  382E  342F               	retlw	47
  2432  382F  3400               	retlw	0
  2433  3830  342C               	retlw	44
  2434  3831  3400               	retlw	0
  2435  3832  342A               	retlw	42
  2436  3833  3400               	retlw	0
  2437  3834  3428               	retlw	40
  2438  3835  3400               	retlw	0
  2439  3836  3426               	retlw	38
  2440  3837  3400               	retlw	0
  2441  3838  3424               	retlw	36
  2442  3839  3400               	retlw	0
  2443  383A  3421               	retlw	33
  2444  383B  3400               	retlw	0
  2445  383C  341F               	retlw	31
  2446  383D  3400               	retlw	0
  2447  383E  341D               	retlw	29
  2448  383F  3400               	retlw	0
  2449  3840  341B               	retlw	27
  2450  3841  3400               	retlw	0
  2451  3842  3418               	retlw	24
  2452  3843  3400               	retlw	0
  2453  3844  3416               	retlw	22
  2454  3845  3400               	retlw	0
  2455  3846  3414               	retlw	20
  2456  3847  3400               	retlw	0
  2457  3848  3412               	retlw	18
  2458  3849  3400               	retlw	0
  2459  384A  3410               	retlw	16
  2460  384B  3400               	retlw	0
  2461  384C  340D               	retlw	13
  2462  384D  3400               	retlw	0
  2463  384E  340B               	retlw	11
  2464  384F  3400               	retlw	0
  2465  3850  3409               	retlw	9
  2466  3851  3400               	retlw	0
  2467  3852  3407               	retlw	7
  2468  3853  3400               	retlw	0
  2469  3854  3404               	retlw	4
  2470  3855  3400               	retlw	0
  2471  3856  3402               	retlw	2
  2472  3857  3400               	retlw	0
  2473  3858  3400               	retlw	0
  2474  3859  3400               	retlw	0
  2475  385A  3400               	retlw	0
  2476  385B  3400               	retlw	0
  2477  385C                     __end_of_lookupTableSamsung_SOC:	
  2478                           
  2479                           	psect	stringtext2
  2480  385C                     __pstringtext2:	
  2481  385C                     _lookupTableSamsung_voltage:	
  2482  385C  3451               	retlw	81
  2483  385D  3410               	retlw	16
  2484  385E  345B               	retlw	91
  2485  385F  340F               	retlw	15
  2486  3860  341F               	retlw	31
  2487  3861  340F               	retlw	15
  2488  3862  340F               	retlw	15
  2489  3863  340F               	retlw	15
  2490  3864  340A               	retlw	10
  2491  3865  340F               	retlw	15
  2492  3866  3406               	retlw	6
  2493  3867  340F               	retlw	15
  2494  3868  3405               	retlw	5
  2495  3869  340F               	retlw	15
  2496  386A  3403               	retlw	3
  2497  386B  340F               	retlw	15
  2498  386C  3401               	retlw	1
  2499  386D  340F               	retlw	15
  2500  386E  3400               	retlw	0
  2501  386F  340F               	retlw	15
  2502  3870  34FE               	retlw	254
  2503  3871  340E               	retlw	14
  2504  3872  34FC               	retlw	252
  2505  3873  340E               	retlw	14
  2506  3874  34FA               	retlw	250
  2507  3875  340E               	retlw	14
  2508  3876  34F8               	retlw	248
  2509  3877  340E               	retlw	14
  2510  3878  34F6               	retlw	246
  2511  3879  340E               	retlw	14
  2512  387A  34F3               	retlw	243
  2513  387B  340E               	retlw	14
  2514  387C  34F1               	retlw	241
  2515  387D  340E               	retlw	14
  2516  387E  34EE               	retlw	238
  2517  387F  340E               	retlw	14
  2518  3880  34EB               	retlw	235
  2519  3881  340E               	retlw	14
  2520  3882  34E8               	retlw	232
  2521  3883  340E               	retlw	14
  2522  3884  34E5               	retlw	229
  2523  3885  340E               	retlw	14
  2524  3886  34E1               	retlw	225
  2525  3887  340E               	retlw	14
  2526  3888  34DD               	retlw	221
  2527  3889  340E               	retlw	14
  2528  388A  34D9               	retlw	217
  2529  388B  340E               	retlw	14
  2530  388C  34D4               	retlw	212
  2531  388D  340E               	retlw	14
  2532  388E  34CF               	retlw	207
  2533  388F  340E               	retlw	14
  2534  3890  34C9               	retlw	201
  2535  3891  340E               	retlw	14
  2536  3892  34C3               	retlw	195
  2537  3893  340E               	retlw	14
  2538  3894  34BB               	retlw	187
  2539  3895  340E               	retlw	14
  2540  3896  34B4               	retlw	180
  2541  3897  340E               	retlw	14
  2542  3898  34AB               	retlw	171
  2543  3899  340E               	retlw	14
  2544  389A  34A0               	retlw	160
  2545  389B  340E               	retlw	14
  2546  389C  3495               	retlw	149
  2547  389D  340E               	retlw	14
  2548  389E  3487               	retlw	135
  2549  389F  340E               	retlw	14
  2550  38A0  3477               	retlw	119
  2551  38A1  340E               	retlw	14
  2552  38A2  3464               	retlw	100
  2553  38A3  340E               	retlw	14
  2554  38A4  344D               	retlw	77
  2555  38A5  340E               	retlw	14
  2556  38A6  3431               	retlw	49
  2557  38A7  340E               	retlw	14
  2558  38A8  340D               	retlw	13
  2559  38A9  340E               	retlw	14
  2560  38AA  34DE               	retlw	222
  2561  38AB  340D               	retlw	13
  2562  38AC  349F               	retlw	159
  2563  38AD  340D               	retlw	13
  2564  38AE  3443               	retlw	67
  2565  38AF  340D               	retlw	13
  2566  38B0  34B3               	retlw	179
  2567  38B1  340C               	retlw	12
  2568  38B2  34B1               	retlw	177
  2569  38B3  340B               	retlw	11
  2570  38B4  345E               	retlw	94
  2571  38B5  3409               	retlw	9
  2572  38B6  3400               	retlw	0
  2573  38B7  3400               	retlw	0
  2574  38B8                     __end_of_lookupTableSamsung_voltage:	
  2575                           
  2576                           	psect	stringtext3
  2577  3908                     __pstringtext3:	
  2578  3908                     _OCD_threshold_setting:	
  2579  3908  3411               	retlw	17
  2580  3909  3400               	retlw	0
  2581  390A  3416               	retlw	22
  2582  390B  3400               	retlw	0
  2583  390C  341C               	retlw	28
  2584  390D  3400               	retlw	0
  2585  390E  3421               	retlw	33
  2586  390F  3400               	retlw	0
  2587  3910  3427               	retlw	39
  2588  3911  3400               	retlw	0
  2589  3912  342C               	retlw	44
  2590  3913  3400               	retlw	0
  2591  3914  3432               	retlw	50
  2592  3915  3400               	retlw	0
  2593  3916  3438               	retlw	56
  2594  3917  3400               	retlw	0
  2595  3918  343D               	retlw	61
  2596  3919  3400               	retlw	0
  2597  391A  3443               	retlw	67
  2598  391B  3400               	retlw	0
  2599  391C  3448               	retlw	72
  2600  391D  3400               	retlw	0
  2601  391E  344E               	retlw	78
  2602  391F  3400               	retlw	0
  2603  3920  3453               	retlw	83
  2604  3921  3400               	retlw	0
  2605  3922  3459               	retlw	89
  2606  3923  3400               	retlw	0
  2607  3924  345E               	retlw	94
  2608  3925  3400               	retlw	0
  2609  3926  3464               	retlw	100
  2610  3927  3400               	retlw	0
  2611  3928                     __end_of_OCD_threshold_setting:	
  2612                           
  2613                           	psect	stringtext4
  2614  3A47                     __pstringtext4:	
  2615  3A47                     _OCD_delay_setting:	
  2616  3A47  3408               	retlw	8
  2617  3A48  3400               	retlw	0
  2618  3A49  3414               	retlw	20
  2619  3A4A  3400               	retlw	0
  2620  3A4B  3428               	retlw	40
  2621  3A4C  3400               	retlw	0
  2622  3A4D  3450               	retlw	80
  2623  3A4E  3400               	retlw	0
  2624  3A4F  34A0               	retlw	160
  2625  3A50  3400               	retlw	0
  2626  3A51  3440               	retlw	64
  2627  3A52  3401               	retlw	1
  2628  3A53  3480               	retlw	128
  2629  3A54  3402               	retlw	2
  2630  3A55  3400               	retlw	0
  2631  3A56  3405               	retlw	5
  2632  3A57                     __end_of_OCD_delay_setting:	
  2633                           
  2634                           	psect	stringtext5
  2635  3A57                     __pstringtext5:	
  2636  3A57                     _SCD_threshold_setting:	
  2637  3A57  342C               	retlw	44
  2638  3A58  3400               	retlw	0
  2639  3A59  3443               	retlw	67
  2640  3A5A  3400               	retlw	0
  2641  3A5B  3459               	retlw	89
  2642  3A5C  3400               	retlw	0
  2643  3A5D  346F               	retlw	111
  2644  3A5E  3400               	retlw	0
  2645  3A5F  3485               	retlw	133
  2646  3A60  3400               	retlw	0
  2647  3A61  349B               	retlw	155
  2648  3A62  3400               	retlw	0
  2649  3A63  34B2               	retlw	178
  2650  3A64  3400               	retlw	0
  2651  3A65  34C8               	retlw	200
  2652  3A66  3400               	retlw	0
  2653  3A67                     __end_of_SCD_threshold_setting:	
  2654                           
  2655                           	psect	stringtext6
  2656  3A67                     __pstringtext6:	
  2657  3A67                     _OV_delay_setting:	
  2658  3A67  3401               	retlw	1
  2659  3A68  3400               	retlw	0
  2660  3A69  3402               	retlw	2
  2661  3A6A  3400               	retlw	0
  2662  3A6B  3404               	retlw	4
  2663  3A6C  3400               	retlw	0
  2664  3A6D  3408               	retlw	8
  2665  3A6E  3400               	retlw	0
  2666  3A6F                     __end_of_OV_delay_setting:	
  2667                           
  2668                           	psect	stringtext7
  2669  3A6F                     __pstringtext7:	
  2670  3A6F                     _UV_delay_setting:	
  2671  3A6F  3401               	retlw	1
  2672  3A70  3400               	retlw	0
  2673  3A71  3404               	retlw	4
  2674  3A72  3400               	retlw	0
  2675  3A73  3408               	retlw	8
  2676  3A74  3400               	retlw	0
  2677  3A75  3410               	retlw	16
  2678  3A76  3400               	retlw	0
  2679  3A77                     __end_of_UV_delay_setting:	
  2680                           
  2681                           	psect	stringtext8
  2682  3A77                     __pstringtext8:	
  2683  3A77                     _SCD_delay_setting:	
  2684  3A77  3446               	retlw	70
  2685  3A78  3400               	retlw	0
  2686  3A79  3464               	retlw	100
  2687  3A7A  3400               	retlw	0
  2688  3A7B  34C8               	retlw	200
  2689  3A7C  3400               	retlw	0
  2690  3A7D  3490               	retlw	144
  2691  3A7E  3401               	retlw	1
  2692  3A7F                     __end_of_SCD_delay_setting:	
  2693                           
  2694                           	psect	stringtext9
  2695  3A7F                     __pstringtext9:	
  2696  3A7F                     _Lg4:	
  2697  3A7F  3426               	retlw	38
  2698  3A80  349E               	retlw	158
  2699  3A81  3478               	retlw	120
  2700  3A82  343E               	retlw	62
  2701  3A83                     __end_of_Lg4:	
  2702                           
  2703                           	psect	stringtext10
  2704  3A83                     __pstringtext10:	
  2705  3A83                     _Lg3:	
  2706  3A83  34EE               	retlw	238
  2707  3A84  34E9               	retlw	233
  2708  3A85  3491               	retlw	145
  2709  3A86  343E               	retlw	62
  2710  3A87                     __end_of_Lg3:	
  2711                           
  2712                           	psect	stringtext11
  2713  3A87                     __pstringtext11:	
  2714  3A87                     _Lg2:	
  2715  3A87  3413               	retlw	19
  2716  3A88  34CE               	retlw	206
  2717  3A89  34CC               	retlw	204
  2718  3A8A  343E               	retlw	62
  2719  3A8B                     __end_of_Lg2:	
  2720                           
  2721                           	psect	stringtext12
  2722  3A8B                     __pstringtext12:	
  2723  3A8B                     _Lg1:	
  2724  3A8B  34AA               	retlw	170
  2725  3A8C  34AA               	retlw	170
  2726  3A8D  342A               	retlw	42
  2727  3A8E  343F               	retlw	63
  2728  3A8F                     __end_of_Lg1:	
  2729                           
  2730                           	psect	stringtext13
  2731  3A8F                     __pstringtext13:	
  2732  3A8F                     _ln2_lo:	
  2733  3A8F  34D1               	retlw	209
  2734  3A90  34F7               	retlw	247
  2735  3A91  3417               	retlw	23
  2736  3A92  3437               	retlw	55
  2737  3A93                     __end_of_ln2_lo:	
  2738                           
  2739                           	psect	stringtext14
  2740  3A93                     __pstringtext14:	
  2741  3A93                     _ln2_hi:	
  2742  3A93  3480               	retlw	128
  2743  3A94  3471               	retlw	113
  2744  3A95  3431               	retlw	49
  2745  3A96  343F               	retlw	63
  2746  3A97                     __end_of_ln2_hi:	
  2747                           
  2748                           	psect	stringtext15
  2749  38B8                     __pstringtext15:	
  2750  38B8                     _ATmega328_address:	
  2751  38B8  3402               	retlw	2
  2752  38B9  3400               	retlw	0
  2753  38BA                     __end_of_ATmega328_address:	
  2754  0016                     _TMR1	set	22
  2755  0003                     _STATUSbits	set	3
  2756  000B                     _INTCONbits	set	11
  2757  0018                     _T1CONbits	set	24
  2758  0011                     _PIR1bits	set	17
  2759  0097                     _WDTCONbits	set	151
  2760  0090                     _TRISEbits	set	144
  2761  008C                     _TRISAbits	set	140
  2762  008E                     _TRISCbits	set	142
  2763  008D                     _TRISBbits	set	141
  2764  0091                     _PIE1bits	set	145
  2765  0476                     _TRISC6	set	1142
  2766  0477                     _TRISC7	set	1143
  2767  04CF                     _SPLLEN	set	1231
  2768  04CE                     _IRCF3	set	1230
  2769  04CD                     _IRCF2	set	1229
  2770  04CC                     _IRCF1	set	1228
  2771  04CB                     _IRCF0	set	1227
  2772  04C9                     _SCS1	set	1225
  2773  04C8                     _SCS0	set	1224
  2774  0110                     _LATEbits	set	272
  2775  010C                     _LATAbits	set	268
  2776  019A                     _TX1REG	set	410
  2777  0199                     _RC1REG	set	409
  2778  019D                     _RC1STAbits	set	413
  2779  019B                     _SPBRG	set	411
  2780  018E                     _ANSELCbits	set	398
  2781  018D                     _ANSELBbits	set	397
  2782  0CF5                     _TXEN	set	3317
  2783  0CEC                     _CREN	set	3308
  2784  0CEF                     _SPEN	set	3311
  2785  0CF4                     _SYNC	set	3316
  2786  0CF2                     _BRGH	set	3314
  2787  0216                     _SSPCON2bits	set	534
  2788  0211                     _SSPBUF	set	529
  2789  0212                     _SSPADD	set	530
  2790  0215                     _SSPCONbits	set	533
  2791  0E24                     _RXPPSbits	set	3620
  2792  0E20                     _SSPCLKPPSbits	set	3616
  2793  0E21                     _SSPDATPPSbits	set	3617
  2794  0E0F                     _PPSLOCKbits	set	3599
  2795  0E0F                     _PPSLOCK	set	3599
  2796  0E9A                     _RB2PPSbits	set	3738
  2797  0EA5                     _RC5PPSbits	set	3749
  2798  0EA4                     _RC4PPSbits	set	3748
  2799  38BA                     STR_1:	
  2800  38BA  3457               	retlw	87	;'W'
  2801  38BB  3441               	retlw	65	;'A'
  2802  38BC  3454               	retlw	84	;'T'
  2803  38BD  3443               	retlw	67	;'C'
  2804  38BE  3448               	retlw	72	;'H'
  2805  38BF  3444               	retlw	68	;'D'
  2806  38C0  344F               	retlw	79	;'O'
  2807  38C1  3447               	retlw	71	;'G'
  2808  38C2  3420               	retlw	32	;' '
  2809  38C3  344E               	retlw	78	;'N'
  2810  38C4  344F               	retlw	79	;'O'
  2811  38C5  3454               	retlw	84	;'T'
  2812  38C6  3420               	retlw	32	;' '
  2813  38C7  344B               	retlw	75	;'K'
  2814  38C8  3449               	retlw	73	;'I'
  2815  38C9  3443               	retlw	67	;'C'
  2816  38CA  344B               	retlw	75	;'K'
  2817  38CB  3445               	retlw	69	;'E'
  2818  38CC  3444               	retlw	68	;'D'
  2819  38CD  343A               	retlw	58	;':'
  2820  38CE  3420               	retlw	32	;' '
  2821  38CF  3441               	retlw	65	;'A'
  2822  38D0  3446               	retlw	70	;'F'
  2823  38D1  3445               	retlw	69	;'E'
  2824  38D2  3420               	retlw	32	;' '
  2825  38D3  3463               	retlw	99	;'c'
  2826  38D4  346F               	retlw	111	;'o'
  2827  38D5  346D               	retlw	109	;'m'
  2828  38D6  346D               	retlw	109	;'m'
  2829  38D7  3473               	retlw	115	;'s'
  2830  38D8  3420               	retlw	32	;' '
  2831  38D9  3465               	retlw	101	;'e'
  2832  38DA  3472               	retlw	114	;'r'
  2833  38DB  3472               	retlw	114	;'r'
  2834  38DC  346F               	retlw	111	;'o'
  2835  38DD  3472               	retlw	114	;'r'
  2836  38DE  3420               	retlw	32	;' '
  2837  38DF  340A               	retlw	10
  2838  38E0  340D               	retlw	13
  2839  38E1  3400               	retlw	0
  2840                           
  2841                           	psect	stringtext16
  2842  38E2                     __pstringtext16:	
  2843  38E2                     STR_8:	
  2844  38E2  3450               	retlw	80	;'P'
  2845  38E3  3472               	retlw	114	;'r'
  2846  38E4  3469               	retlw	105	;'i'
  2847  38E5  346E               	retlw	110	;'n'
  2848  38E6  3474               	retlw	116	;'t'
  2849  38E7  3469               	retlw	105	;'i'
  2850  38E8  346E               	retlw	110	;'n'
  2851  38E9  3467               	retlw	103	;'g'
  2852  38EA  3420               	retlw	32	;' '
  2853  38EB  346F               	retlw	111	;'o'
  2854  38EC  3475               	retlw	117	;'u'
  2855  38ED  3474               	retlw	116	;'t'
  2856  38EE  3420               	retlw	32	;' '
  2857  38EF  3441               	retlw	65	;'A'
  2858  38F0  3446               	retlw	70	;'F'
  2859  38F1  3445               	retlw	69	;'E'
  2860  38F2  3420               	retlw	32	;' '
  2861  38F3  3472               	retlw	114	;'r'
  2862  38F4  3465               	retlw	101	;'e'
  2863  38F5  3467               	retlw	103	;'g'
  2864  38F6  3469               	retlw	105	;'i'
  2865  38F7  3473               	retlw	115	;'s'
  2866  38F8  3474               	retlw	116	;'t'
  2867  38F9  3465               	retlw	101	;'e'
  2868  38FA  3472               	retlw	114	;'r'
  2869  38FB  3420               	retlw	32	;' '
  2870  38FC  3476               	retlw	118	;'v'
  2871  38FD  3461               	retlw	97	;'a'
  2872  38FE  346C               	retlw	108	;'l'
  2873  38FF  3475               	retlw	117	;'u'
  2874  3900  3465               	retlw	101	;'e'
  2875  3901  3473               	retlw	115	;'s'
  2876  3902  342E               	retlw	46	;'.'
  2877  3903  342E               	retlw	46	;'.'
  2878  3904  342E               	retlw	46	;'.'
  2879  3905  340A               	retlw	10
  2880  3906  340D               	retlw	13
  2881  3907  3400               	retlw	0
  2882                           
  2883                           	psect	stringtext17
  2884  3928                     __pstringtext17:	
  2885  3928                     STR_7:	
  2886  3928  3425               	retlw	37	;'%'
  2887  3929  3464               	retlw	100	;'d'
  2888  392A  342C               	retlw	44	;','
  2889  392B  3420               	retlw	32	;' '
  2890  392C  3425               	retlw	37	;'%'
  2891  392D  3464               	retlw	100	;'d'
  2892  392E  342C               	retlw	44	;','
  2893  392F  3420               	retlw	32	;' '
  2894  3930  3425               	retlw	37	;'%'
  2895  3931  3464               	retlw	100	;'d'
  2896  3932  342C               	retlw	44	;','
  2897  3933  3420               	retlw	32	;' '
  2898  3934  3425               	retlw	37	;'%'
  2899  3935  3464               	retlw	100	;'d'
  2900  3936  342C               	retlw	44	;','
  2901  3937  3420               	retlw	32	;' '
  2902  3938  3425               	retlw	37	;'%'
  2903  3939  3464               	retlw	100	;'d'
  2904  393A  3420               	retlw	32	;' '
  2905  393B  340A               	retlw	10
  2906  393C  340D               	retlw	13
  2907  393D  3400               	retlw	0
  2908                           
  2909                           	psect	stringtext18
  2910  393E                     __pstringtext18:	
  2911  393E                     STR_12:	
  2912  393E  3430               	retlw	48	;'0'
  2913  393F  3478               	retlw	120	;'x'
  2914  3940  3430               	retlw	48	;'0'
  2915  3941  3434               	retlw	52	;'4'
  2916  3942  3420               	retlw	32	;' '
  2917  3943  3453               	retlw	83	;'S'
  2918  3944  3459               	retlw	89	;'Y'
  2919  3945  3453               	retlw	83	;'S'
  2920  3946  345F               	retlw	95	;'_'
  2921  3947  3443               	retlw	67	;'C'
  2922  3948  3454               	retlw	84	;'T'
  2923  3949  3452               	retlw	82	;'R'
  2924  394A  344C               	retlw	76	;'L'
  2925  394B  3431               	retlw	49	;'1'
  2926  394C  343A               	retlw	58	;':'
  2927  394D  3420               	retlw	32	;' '
  2928  394E  3425               	retlw	37	;'%'
  2929  394F  3469               	retlw	105	;'i'
  2930  3950  3420               	retlw	32	;' '
  2931  3951  340A               	retlw	10
  2932  3952  340D               	retlw	13
  2933  3953  3400               	retlw	0
  2934                           
  2935                           	psect	stringtext19
  2936  3954                     __pstringtext19:	
  2937  3954                     STR_13:	
  2938  3954  3430               	retlw	48	;'0'
  2939  3955  3478               	retlw	120	;'x'
  2940  3956  3430               	retlw	48	;'0'
  2941  3957  3435               	retlw	53	;'5'
  2942  3958  3420               	retlw	32	;' '
  2943  3959  3453               	retlw	83	;'S'
  2944  395A  3459               	retlw	89	;'Y'
  2945  395B  3453               	retlw	83	;'S'
  2946  395C  345F               	retlw	95	;'_'
  2947  395D  3443               	retlw	67	;'C'
  2948  395E  3454               	retlw	84	;'T'
  2949  395F  3452               	retlw	82	;'R'
  2950  3960  344C               	retlw	76	;'L'
  2951  3961  3432               	retlw	50	;'2'
  2952  3962  343A               	retlw	58	;':'
  2953  3963  3420               	retlw	32	;' '
  2954  3964  3425               	retlw	37	;'%'
  2955  3965  3469               	retlw	105	;'i'
  2956  3966  3420               	retlw	32	;' '
  2957  3967  340A               	retlw	10
  2958  3968  340D               	retlw	13
  2959  3969  3400               	retlw	0
  2960                           
  2961                           	psect	stringtext20
  2962  396A                     __pstringtext20:	
  2963  396A                     STR_11:	
  2964  396A  3430               	retlw	48	;'0'
  2965  396B  3478               	retlw	120	;'x'
  2966  396C  3430               	retlw	48	;'0'
  2967  396D  3431               	retlw	49	;'1'
  2968  396E  3420               	retlw	32	;' '
  2969  396F  3443               	retlw	67	;'C'
  2970  3970  3445               	retlw	69	;'E'
  2971  3971  344C               	retlw	76	;'L'
  2972  3972  344C               	retlw	76	;'L'
  2973  3973  3442               	retlw	66	;'B'
  2974  3974  3441               	retlw	65	;'A'
  2975  3975  344C               	retlw	76	;'L'
  2976  3976  3431               	retlw	49	;'1'
  2977  3977  343A               	retlw	58	;':'
  2978  3978  3420               	retlw	32	;' '
  2979  3979  3425               	retlw	37	;'%'
  2980  397A  3469               	retlw	105	;'i'
  2981  397B  3420               	retlw	32	;' '
  2982  397C  340A               	retlw	10
  2983  397D  340D               	retlw	13
  2984  397E  3400               	retlw	0
  2985                           
  2986                           	psect	stringtext21
  2987  397F                     __pstringtext21:	
  2988  397F                     STR_14:	
  2989  397F  3430               	retlw	48	;'0'
  2990  3980  3478               	retlw	120	;'x'
  2991  3981  3430               	retlw	48	;'0'
  2992  3982  3436               	retlw	54	;'6'
  2993  3983  3420               	retlw	32	;' '
  2994  3984  3450               	retlw	80	;'P'
  2995  3985  3452               	retlw	82	;'R'
  2996  3986  344F               	retlw	79	;'O'
  2997  3987  3454               	retlw	84	;'T'
  2998  3988  3445               	retlw	69	;'E'
  2999  3989  3443               	retlw	67	;'C'
  3000  398A  3454               	retlw	84	;'T'
  3001  398B  3431               	retlw	49	;'1'
  3002  398C  343A               	retlw	58	;':'
  3003  398D  3420               	retlw	32	;' '
  3004  398E  3425               	retlw	37	;'%'
  3005  398F  3469               	retlw	105	;'i'
  3006  3990  3420               	retlw	32	;' '
  3007  3991  340A               	retlw	10
  3008  3992  340D               	retlw	13
  3009  3993  3400               	retlw	0
  3010                           
  3011                           	psect	stringtext22
  3012  3994                     __pstringtext22:	
  3013  3994                     STR_15:	
  3014  3994  3430               	retlw	48	;'0'
  3015  3995  3478               	retlw	120	;'x'
  3016  3996  3430               	retlw	48	;'0'
  3017  3997  3437               	retlw	55	;'7'
  3018  3998  3420               	retlw	32	;' '
  3019  3999  3450               	retlw	80	;'P'
  3020  399A  3452               	retlw	82	;'R'
  3021  399B  344F               	retlw	79	;'O'
  3022  399C  3454               	retlw	84	;'T'
  3023  399D  3445               	retlw	69	;'E'
  3024  399E  3443               	retlw	67	;'C'
  3025  399F  3454               	retlw	84	;'T'
  3026  39A0  3432               	retlw	50	;'2'
  3027  39A1  343A               	retlw	58	;':'
  3028  39A2  3420               	retlw	32	;' '
  3029  39A3  3425               	retlw	37	;'%'
  3030  39A4  3469               	retlw	105	;'i'
  3031  39A5  3420               	retlw	32	;' '
  3032  39A6  340A               	retlw	10
  3033  39A7  340D               	retlw	13
  3034  39A8  3400               	retlw	0
  3035                           
  3036                           	psect	stringtext23
  3037  39A9                     __pstringtext23:	
  3038  39A9                     STR_16:	
  3039  39A9  3430               	retlw	48	;'0'
  3040  39AA  3478               	retlw	120	;'x'
  3041  39AB  3430               	retlw	48	;'0'
  3042  39AC  3438               	retlw	56	;'8'
  3043  39AD  3420               	retlw	32	;' '
  3044  39AE  3450               	retlw	80	;'P'
  3045  39AF  3452               	retlw	82	;'R'
  3046  39B0  344F               	retlw	79	;'O'
  3047  39B1  3454               	retlw	84	;'T'
  3048  39B2  3445               	retlw	69	;'E'
  3049  39B3  3443               	retlw	67	;'C'
  3050  39B4  3454               	retlw	84	;'T'
  3051  39B5  3433               	retlw	51	;'3'
  3052  39B6  343A               	retlw	58	;':'
  3053  39B7  3420               	retlw	32	;' '
  3054  39B8  3425               	retlw	37	;'%'
  3055  39B9  3469               	retlw	105	;'i'
  3056  39BA  3420               	retlw	32	;' '
  3057  39BB  340A               	retlw	10
  3058  39BC  340D               	retlw	13
  3059  39BD  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext24
  3062  39BE                     __pstringtext24:	
  3063  39BE                     STR_10:	
  3064  39BE  3430               	retlw	48	;'0'
  3065  39BF  3478               	retlw	120	;'x'
  3066  39C0  3430               	retlw	48	;'0'
  3067  39C1  3430               	retlw	48	;'0'
  3068  39C2  3420               	retlw	32	;' '
  3069  39C3  3453               	retlw	83	;'S'
  3070  39C4  3459               	retlw	89	;'Y'
  3071  39C5  3453               	retlw	83	;'S'
  3072  39C6  345F               	retlw	95	;'_'
  3073  39C7  3453               	retlw	83	;'S'
  3074  39C8  3454               	retlw	84	;'T'
  3075  39C9  3441               	retlw	65	;'A'
  3076  39CA  3454               	retlw	84	;'T'
  3077  39CB  343A               	retlw	58	;':'
  3078  39CC  3420               	retlw	32	;' '
  3079  39CD  3425               	retlw	37	;'%'
  3080  39CE  3469               	retlw	105	;'i'
  3081  39CF  3420               	retlw	32	;' '
  3082  39D0  340A               	retlw	10
  3083  39D1  340D               	retlw	13
  3084  39D2  3400               	retlw	0
  3085                           
  3086                           	psect	stringtext25
  3087  39D3                     __pstringtext25:	
  3088  39D3                     STR_6:	
  3089  39D3  3425               	retlw	37	;'%'
  3090  39D4  3425               	retlw	37	;'%'
  3091  39D5  3464               	retlw	100	;'d'
  3092  39D6  342C               	retlw	44	;','
  3093  39D7  3420               	retlw	32	;' '
  3094  39D8  3425               	retlw	37	;'%'
  3095  39D9  3464               	retlw	100	;'d'
  3096  39DA  342C               	retlw	44	;','
  3097  39DB  3420               	retlw	32	;' '
  3098  39DC  3425               	retlw	37	;'%'
  3099  39DD  3464               	retlw	100	;'d'
  3100  39DE  342C               	retlw	44	;','
  3101  39DF  3420               	retlw	32	;' '
  3102  39E0  3425               	retlw	37	;'%'
  3103  39E1  3464               	retlw	100	;'d'
  3104  39E2  342C               	retlw	44	;','
  3105  39E3  3420               	retlw	32	;' '
  3106  39E4  3425               	retlw	37	;'%'
  3107  39E5  3464               	retlw	100	;'d'
  3108  39E6  342C               	retlw	44	;','
  3109  39E7  3400               	retlw	0
  3110                           
  3111                           	psect	stringtext26
  3112  39E8                     __pstringtext26:	
  3113  39E8                     STR_17:	
  3114  39E8  3430               	retlw	48	;'0'
  3115  39E9  3478               	retlw	120	;'x'
  3116  39EA  3430               	retlw	48	;'0'
  3117  39EB  3439               	retlw	57	;'9'
  3118  39EC  3420               	retlw	32	;' '
  3119  39ED  344F               	retlw	79	;'O'
  3120  39EE  3456               	retlw	86	;'V'
  3121  39EF  345F               	retlw	95	;'_'
  3122  39F0  3454               	retlw	84	;'T'
  3123  39F1  3452               	retlw	82	;'R'
  3124  39F2  3449               	retlw	73	;'I'
  3125  39F3  3450               	retlw	80	;'P'
  3126  39F4  343A               	retlw	58	;':'
  3127  39F5  3420               	retlw	32	;' '
  3128  39F6  3425               	retlw	37	;'%'
  3129  39F7  3469               	retlw	105	;'i'
  3130  39F8  3420               	retlw	32	;' '
  3131  39F9  340A               	retlw	10
  3132  39FA  340D               	retlw	13
  3133  39FB  3400               	retlw	0
  3134                           
  3135                           	psect	stringtext27
  3136  39FC                     __pstringtext27:	
  3137  39FC                     STR_18:	
  3138  39FC  3430               	retlw	48	;'0'
  3139  39FD  3478               	retlw	120	;'x'
  3140  39FE  3430               	retlw	48	;'0'
  3141  39FF  3441               	retlw	65	;'A'
  3142  3A00  3420               	retlw	32	;' '
  3143  3A01  3455               	retlw	85	;'U'
  3144  3A02  3456               	retlw	86	;'V'
  3145  3A03  345F               	retlw	95	;'_'
  3146  3A04  3454               	retlw	84	;'T'
  3147  3A05  3452               	retlw	82	;'R'
  3148  3A06  3449               	retlw	73	;'I'
  3149  3A07  3450               	retlw	80	;'P'
  3150  3A08  343A               	retlw	58	;':'
  3151  3A09  3420               	retlw	32	;' '
  3152  3A0A  3425               	retlw	37	;'%'
  3153  3A0B  3469               	retlw	105	;'i'
  3154  3A0C  3420               	retlw	32	;' '
  3155  3A0D  340A               	retlw	10
  3156  3A0E  340D               	retlw	13
  3157  3A0F  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext28
  3160  3A10                     __pstringtext28:	
  3161  3A10                     STR_19:	
  3162  3A10  3430               	retlw	48	;'0'
  3163  3A11  3478               	retlw	120	;'x'
  3164  3A12  3430               	retlw	48	;'0'
  3165  3A13  3442               	retlw	66	;'B'
  3166  3A14  3420               	retlw	32	;' '
  3167  3A15  3443               	retlw	67	;'C'
  3168  3A16  3443               	retlw	67	;'C'
  3169  3A17  345F               	retlw	95	;'_'
  3170  3A18  3443               	retlw	67	;'C'
  3171  3A19  3446               	retlw	70	;'F'
  3172  3A1A  3447               	retlw	71	;'G'
  3173  3A1B  343A               	retlw	58	;':'
  3174  3A1C  3420               	retlw	32	;' '
  3175  3A1D  3425               	retlw	37	;'%'
  3176  3A1E  3469               	retlw	105	;'i'
  3177  3A1F  3420               	retlw	32	;' '
  3178  3A20  340A               	retlw	10
  3179  3A21  340D               	retlw	13
  3180  3A22  3400               	retlw	0
  3181                           
  3182                           	psect	stringtext29
  3183  3A23                     __pstringtext29:	
  3184  3A23                     STR_20:	
  3185  3A23  3430               	retlw	48	;'0'
  3186  3A24  3478               	retlw	120	;'x'
  3187  3A25  3433               	retlw	51	;'3'
  3188  3A26  3432               	retlw	50	;'2'
  3189  3A27  3420               	retlw	32	;' '
  3190  3A28  3443               	retlw	67	;'C'
  3191  3A29  3443               	retlw	67	;'C'
  3192  3A2A  345F               	retlw	95	;'_'
  3193  3A2B  3448               	retlw	72	;'H'
  3194  3A2C  3449               	retlw	73	;'I'
  3195  3A2D  343A               	retlw	58	;':'
  3196  3A2E  3420               	retlw	32	;' '
  3197  3A2F  3425               	retlw	37	;'%'
  3198  3A30  3469               	retlw	105	;'i'
  3199  3A31  3420               	retlw	32	;' '
  3200  3A32  340A               	retlw	10
  3201  3A33  340D               	retlw	13
  3202  3A34  3400               	retlw	0
  3203                           
  3204                           	psect	stringtext30
  3205  3A35                     __pstringtext30:	
  3206  3A35                     STR_21:	
  3207  3A35  3430               	retlw	48	;'0'
  3208  3A36  3478               	retlw	120	;'x'
  3209  3A37  3433               	retlw	51	;'3'
  3210  3A38  3433               	retlw	51	;'3'
  3211  3A39  3420               	retlw	32	;' '
  3212  3A3A  3443               	retlw	67	;'C'
  3213  3A3B  3443               	retlw	67	;'C'
  3214  3A3C  345F               	retlw	95	;'_'
  3215  3A3D  344C               	retlw	76	;'L'
  3216  3A3E  344F               	retlw	79	;'O'
  3217  3A3F  343A               	retlw	58	;':'
  3218  3A40  3420               	retlw	32	;' '
  3219  3A41  3425               	retlw	37	;'%'
  3220  3A42  3469               	retlw	105	;'i'
  3221  3A43  3420               	retlw	32	;' '
  3222  3A44  340A               	retlw	10
  3223  3A45  340D               	retlw	13
  3224  3A46  3400               	retlw	0
  3225                           
  3226                           	psect	stringtext31
  3227  3A97                     __pstringtext31:	
  3228  3A97                     STR_99:	
  3229  3A97  3468               	retlw	104	;'h'
  3230  3A98  3468               	retlw	104	;'h'
  3231  3A99  3458               	retlw	88	;'X'
  3232  3A9A  3400               	retlw	0
  3233                           
  3234                           	psect	stringtext32
  3235  3A9B                     __pstringtext32:	
  3236  3A9B                     STR_23:	
  3237  3A9B  3468               	retlw	104	;'h'
  3238  3A9C  3468               	retlw	104	;'h'
  3239  3A9D  3464               	retlw	100	;'d'
  3240  3A9E  3400               	retlw	0
  3241                           
  3242                           	psect	stringtext33
  3243  3A9F                     __pstringtext33:	
  3244  3A9F                     STR_27:	
  3245  3A9F  3468               	retlw	104	;'h'
  3246  3AA0  3468               	retlw	104	;'h'
  3247  3AA1  3469               	retlw	105	;'i'
  3248  3AA2  3400               	retlw	0
  3249                           
  3250                           	psect	stringtext34
  3251  3AA3                     __pstringtext34:	
  3252  3AA3                     STR_65:	
  3253  3AA3  3468               	retlw	104	;'h'
  3254  3AA4  3468               	retlw	104	;'h'
  3255  3AA5  346E               	retlw	110	;'n'
  3256  3AA6  3400               	retlw	0
  3257                           
  3258                           	psect	stringtext35
  3259  3AA7                     __pstringtext35:	
  3260  3AA7                     STR_50:	
  3261  3AA7  3468               	retlw	104	;'h'
  3262  3AA8  3468               	retlw	104	;'h'
  3263  3AA9  346F               	retlw	111	;'o'
  3264  3AAA  3400               	retlw	0
  3265                           
  3266                           	psect	stringtext36
  3267  3AAB                     __pstringtext36:	
  3268  3AAB                     STR_80:	
  3269  3AAB  3468               	retlw	104	;'h'
  3270  3AAC  3468               	retlw	104	;'h'
  3271  3AAD  3475               	retlw	117	;'u'
  3272  3AAE  3400               	retlw	0
  3273                           
  3274                           	psect	stringtext37
  3275  3AAF                     __pstringtext37:	
  3276  3AAF                     STR_95:	
  3277  3AAF  3468               	retlw	104	;'h'
  3278  3AB0  3468               	retlw	104	;'h'
  3279  3AB1  3478               	retlw	120	;'x'
  3280  3AB2  3400               	retlw	0
  3281                           
  3282                           	psect	stringtext38
  3283  3AB3                     __pstringtext38:	
  3284  3AB3                     STR_117:	
  3285  3AB3  347A               	retlw	122	;'z'
  3286  3AB4  3458               	retlw	88	;'X'
  3287  3AB5  3400               	retlw	0
  3288                           
  3289                           	psect	stringtext39
  3290  3AB6                     __pstringtext39:	
  3291  3AB6                     STR_41:	
  3292  3AB6  347A               	retlw	122	;'z'
  3293  3AB7  3464               	retlw	100	;'d'
  3294  3AB8  3400               	retlw	0
  3295                           
  3296                           	psect	stringtext40
  3297  3AB9                     __pstringtext40:	
  3298  3AB9                     STR_45:	
  3299  3AB9  347A               	retlw	122	;'z'
  3300  3ABA  3469               	retlw	105	;'i'
  3301  3ABB  3400               	retlw	0
  3302                           
  3303                           	psect	stringtext41
  3304  3ABC                     __pstringtext41:	
  3305  3ABC                     STR_75:	
  3306  3ABC  347A               	retlw	122	;'z'
  3307  3ABD  346E               	retlw	110	;'n'
  3308  3ABE  3400               	retlw	0
  3309                           
  3310                           	psect	stringtext42
  3311  3ABF                     __pstringtext42:	
  3312  3ABF                     STR_60:	
  3313  3ABF  347A               	retlw	122	;'z'
  3314  3AC0  346F               	retlw	111	;'o'
  3315  3AC1  3400               	retlw	0
  3316                           
  3317                           	psect	stringtext43
  3318  3AC2                     __pstringtext43:	
  3319  3AC2                     STR_90:	
  3320  3AC2  347A               	retlw	122	;'z'
  3321  3AC3  3475               	retlw	117	;'u'
  3322  3AC4  3400               	retlw	0
  3323                           
  3324                           	psect	stringtext44
  3325  3AC5                     __pstringtext44:	
  3326  3AC5                     STR_113:	
  3327  3AC5  347A               	retlw	122	;'z'
  3328  3AC6  3478               	retlw	120	;'x'
  3329  3AC7  3400               	retlw	0
  3330                           
  3331                           	psect	stringtext45
  3332  3AC8                     __pstringtext45:	
  3333  3AC8                     STR_5:	
  3334  3AC8  3430               	retlw	48	;'0'
  3335  3AC9  342C               	retlw	44	;','
  3336  3ACA  3400               	retlw	0
  3337                           
  3338                           	psect	stringtext46
  3339  0000                     __pstringtext46:	
  3340  393B                     
  3341                           ; #config settings
  3342  0000                     
  3343                           	psect	cinit
  3344  0020                     start_initialization:	
  3345  0020                     __initialization:		;BIGRAM
  3346                           
  3347                           ; Initialize objects allocated to BANK3
  3348  0020  0023               	movlb	3	; select bank3
  3349  0021  31B2  221F  3180   	fcall	__pidataBANK3	;fetch initializer
  3350  0024  00E8               	movwf	__pdataBANK3& (0+127)
  3351  0025  31B2  2220  3180   	fcall	__pidataBANK3+1	;fetch initializer
  3352  0028  00E9               	movwf	(__pdataBANK3+1)& (0+127)
  3353  0029  31B2  2221  3180   	fcall	__pidataBANK3+2	;fetch initializer
  3354  002C  00EA               	movwf	(__pdataBANK3+2)& (0+127)
  3355  002D  31B2  2222  3180   	fcall	__pidataBANK3+3	;fetch initializer
  3356  0030  00EB               	movwf	(__pdataBANK3+3)& (0+127)
  3357                           
  3358                           ; Initialize objects allocated to BANK4
  3359  0031  302E               	movlw	low __pidataBANK4
  3360  0032  0084               	movwf	4
  3361  0033  30B2               	movlw	(high __pidataBANK4)| (0+128)
  3362  0034  0085               	movwf	5
  3363  0035  0024               	movlb	4	; select bank4
  3364  0036  0012               	moviw fsr0++
  3365  0037  00C0               	movwf	__pdataBANK4& (0+127)
  3366  0038  0012               	moviw fsr0++
  3367  0039  00C1               	movwf	(__pdataBANK4+1)& (0+127)
  3368  003A  0012               	moviw fsr0++
  3369  003B  00C2               	movwf	(__pdataBANK4+2)& (0+127)
  3370  003C  0012               	moviw fsr0++
  3371  003D  00C3               	movwf	(__pdataBANK4+3)& (0+127)
  3372  003E  0012               	moviw fsr0++
  3373  003F  00C4               	movwf	(__pdataBANK4+4)& (0+127)
  3374  0040  0012               	moviw fsr0++
  3375  0041  00C5               	movwf	(__pdataBANK4+5)& (0+127)
  3376  0042  0012               	moviw fsr0++
  3377  0043  00C6               	movwf	(__pdataBANK4+6)& (0+127)
  3378                           
  3379                           ; Clear objects allocated to BIGRAM
  3380  0044  3071               	movlw	low (0+10097)
  3381  0045  0084               	movwf	4
  3382  0046  3027               	movlw	high (0+10097)
  3383  0047  0085               	movwf	5
  3384  0048  307F               	movlw	127
  3385  0049  00FE               	movwf	btemp
  3386  004A  3000               	movlw	0
  3387  004B  00FF               	movwf	btemp+1
  3388  004C  31B2  2280  3180   	fcall	clear_ram0
  3389                           
  3390                           ; Clear objects allocated to COMMON
  3391  004F  01FC               	clrf	__pbssCOMMON& (0+127)
  3392                           
  3393                           ; Clear objects allocated to BANK2
  3394  0050  3066               	movlw	low __pbssBANK2
  3395  0051  0084               	movwf	4
  3396  0052  3001               	movlw	high __pbssBANK2
  3397  0053  0085               	movwf	5
  3398  0054  300A               	movlw	10
  3399  0055  00FE               	movwf	btemp
  3400  0056  3000               	movlw	0
  3401  0057  00FF               	movwf	btemp+1
  3402  0058  31B2  2280  3180   	fcall	clear_ram0
  3403                           
  3404                           ; Clear objects allocated to BANK3
  3405  005B  30A0               	movlw	low __pbssBANK3
  3406  005C  0084               	movwf	4
  3407  005D  3001               	movlw	high __pbssBANK3
  3408  005E  0085               	movwf	5
  3409  005F  3048               	movlw	72
  3410  0060  00FE               	movwf	btemp
  3411  0061  3000               	movlw	0
  3412  0062  00FF               	movwf	btemp+1
  3413  0063  31B2  2280  3180   	fcall	clear_ram0
  3414                           
  3415                           ; Clear objects allocated to BANK4
  3416  0066  3020               	movlw	low __pbssBANK4
  3417  0067  0084               	movwf	4
  3418  0068  3002               	movlw	high __pbssBANK4
  3419  0069  0085               	movwf	5
  3420  006A  3020               	movlw	32
  3421  006B  00FE               	movwf	btemp
  3422  006C  3000               	movlw	0
  3423  006D  00FF               	movwf	btemp+1
  3424  006E  31B2  2280         	fcall	clear_ram0
  3425  0070                     end_of_initialization:	
  3426                           ;End of C runtime variable initialization code
  3427                           
  3428  0070                     __end_of__initialization:	
  3429  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3430  0071  0020               	movlb	0
  3431  0072  31B4  2CFE         	ljmp	_main	;jump to C main() function
  3432                           
  3433                           	psect	bssCOMMON
  3434  007C                     __pbssCOMMON:	
  3435  007C                     _toggleColor:	
  3436  007C                     	ds	1
  3437                           
  3438                           	psect	bssBANK2
  3439  0166                     __pbssBANK2:	
  3440  0166                     _width:	
  3441  0166                     	ds	2
  3442  0168                     _prec:	
  3443  0168                     	ds	2
  3444  016A                     _flags:	
  3445  016A                     	ds	2
  3446  016C                     _adcOffset:	
  3447  016C                     	ds	2
  3448  016E                     _adcGain:	
  3449  016E                     	ds	2
  3450                           
  3451                           	psect	bssBANK3
  3452  01A0                     __pbssBANK3:	
  3453  01A0                     _cellCharge:	
  3454  01A0                     	ds	10
  3455  01AA                     _cellSOC:	
  3456  01AA                     	ds	10
  3457  01B4                     _cellVoltages:	
  3458  01B4                     	ds	10
  3459  01BE                     logf@F469:	
  3460  01BE                     	ds	4
  3461  01C2                     _shuntResistorValue_mOhm:	
  3462  01C2                     	ds	4
  3463  01C6                     _temperatureThermistor:	
  3464  01C6                     	ds	4
  3465  01CA                     _batCurrent:	
  3466  01CA                     	ds	4
  3467  01CE                     _batVoltage:	
  3468  01CE                     	ds	4
  3469  01D2                     _errno:	
  3470  01D2                     	ds	2
  3471  01D4                     _nout:	
  3472  01D4                     	ds	2
  3473  01D6                     _minCellVoltage:	
  3474  01D6                     	ds	2
  3475  01D8                     _maxCellVoltage:	
  3476  01D8                     	ds	2
  3477  01DA                     _maxCellTempDischarge:	
  3478  01DA                     	ds	2
  3479  01DC                     _maxCellTempCharge:	
  3480  01DC                     	ds	2
  3481  01DE                     _minCellTempDischarge:	
  3482  01DE                     	ds	2
  3483  01E0                     _minCellTempCharge:	
  3484  01E0                     	ds	2
  3485  01E2                     myIsr@count:	
  3486  01E2                     	ds	1
  3487  01E3                     _tmr1_flag:	
  3488  01E3                     	ds	1
  3489  01E4                     _protect3:	
  3490  01E4                     	ds	1
  3491  01E5                     _protect2:	
  3492  01E5                     	ds	1
  3493  01E6                     _protect1:	
  3494  01E6                     	ds	1
  3495  01E7                     _currState:	
  3496  01E7                     	ds	1
  3497                           
  3498                           	psect	dataBANK3
  3499  01E8                     __pdataBANK3:	
  3500  01E8                     _samsung_cell_max_charge:	
  3501  01E8                     	ds	2
  3502  01EA                     _thermistorBetaValue:	
  3503  01EA                     	ds	2
  3504                           
  3505                           	psect	bssBANK4
  3506  0220                     __pbssBANK4:	
  3507  0220                     _dbuf:	
  3508  0220                     	ds	32
  3509                           
  3510                           	psect	dataBANK4
  3511  0240                     __pdataBANK4:	
  3512  0240                     stoa@F1152:	
  3513  0240                     	ds	7
  3514                           
  3515                           	psect	clrtext
  3516  3280                     clear_ram0:	
  3517                           ;	Called with FSR0 containing the base address, and
  3518                           ;	btemp/btemp+1 has the size to clear
  3519                           
  3520  3280  0064               	clrwdt	;clear the watchdog before getting into this loop
  3521  3281                     clrloop0:	
  3522  3281  0180               	clrf	0	;clear RAM location pointed to by FSR
  3523  3282  3101               	addfsr 0,1
  3524  3283  3001               	movlw	1
  3525  3284  02FE               	subwf	126,f
  3526  3285  3000               	movlw	0
  3527  3286  3BFF               	subwfb	127,f
  3528  3287  087F               	movf	127,w
  3529  3288  047E               	iorwf	126,w
  3530  3289  1903               	btfsc	3,2
  3531  328A  3400               	retlw	0	;all done for this memory range, return
  3532  328B  2A81               	goto	clrloop0	;have we reached the end yet?
  3533                           
  3534                           	psect	cstackBANK2
  3535  0120                     __pcstackBANK2:	
  3536  0120                     logf@R:	
  3537                           
  3538                           ; 4 bytes @ 0x0
  3539  0120                     	ds	4
  3540  0124                     logf@t1:	
  3541                           
  3542                           ; 4 bytes @ 0x4
  3543  0124                     	ds	4
  3544  0128                     logf@t2:	
  3545                           
  3546                           ; 4 bytes @ 0x8
  3547  0128                     	ds	4
  3548  012C                     _logf$2101:	
  3549                           
  3550                           ; 4 bytes @ 0xC
  3551  012C                     	ds	4
  3552  0130                     _logf$2102:	
  3553                           
  3554                           ; 4 bytes @ 0x10
  3555  0130                     	ds	4
  3556  0134                     _logf$2103:	
  3557                           
  3558                           ; 4 bytes @ 0x14
  3559  0134                     	ds	4
  3560  0138                     _logf$2104:	
  3561                           
  3562                           ; 4 bytes @ 0x18
  3563  0138                     	ds	4
  3564  013C                     logf@k:	
  3565                           
  3566                           ; 2 bytes @ 0x1C
  3567  013C                     	ds	2
  3568  013E                     logf@hfsq:	
  3569                           
  3570                           ; 4 bytes @ 0x1E
  3571  013E                     	ds	4
  3572  0142                     logf@dk:	
  3573                           
  3574                           ; 4 bytes @ 0x22
  3575  0142                     	ds	4
  3576  0146                     logf@s:	
  3577                           
  3578                           ; 4 bytes @ 0x26
  3579  0146                     	ds	4
  3580  014A                     logf@z:	
  3581                           
  3582                           ; 4 bytes @ 0x2A
  3583  014A                     	ds	4
  3584  014E                     logf@w:	
  3585                           
  3586                           ; 4 bytes @ 0x2E
  3587  014E                     	ds	4
  3588  0152                     _logf$2100:	
  3589                           
  3590                           ; 4 bytes @ 0x32
  3591  0152                     	ds	4
  3592  0156                     logf@u:	
  3593                           
  3594                           ; 4 bytes @ 0x36
  3595  0156                     	ds	4
  3596  015A                     logf@f:	
  3597                           
  3598                           ; 4 bytes @ 0x3A
  3599  015A                     	ds	4
  3600  015E                     logf@ix:	
  3601                           
  3602                           ; 4 bytes @ 0x3E
  3603  015E                     	ds	4
  3604  0162                     ??_statemachine:	
  3605                           
  3606                           ; 1 bytes @ 0x42
  3607  0162                     	ds	2
  3608  0164                     ??_main:	
  3609                           
  3610                           ; 1 bytes @ 0x44
  3611  0164                     	ds	2
  3612                           
  3613                           	psect	cstackBANK1
  3614  00A0                     __pcstackBANK1:	
  3615  00A0                     ?___flsub:	
  3616  00A0                     vfpfcnvrt@cp:	
  3617                           ; 4 bytes @ 0x0
  3618                           
  3619  00A0                     setShortCircuitProtection@scaler:	
  3620                           ; 2 bytes @ 0x0
  3621                           
  3622  00A0                     setOverCurrentDischargeProtection@scaler:	
  3623                           ; 4 bytes @ 0x0
  3624                           
  3625  00A0                     ___flsub@a:	
  3626                           ; 4 bytes @ 0x0
  3627                           
  3628                           
  3629                           ; 4 bytes @ 0x0
  3630  00A0                     	ds	2
  3631  00A2                     vfpfcnvrt@done:	
  3632                           
  3633                           ; 2 bytes @ 0x2
  3634  00A2                     	ds	2
  3635  00A4                     _vfpfcnvrt$1310:	
  3636  00A4                     ___flsub@b:	
  3637                           ; 2 bytes @ 0x4
  3638                           
  3639  00A4                     _setShortCircuitProtection$2086:	
  3640                           ; 4 bytes @ 0x4
  3641                           
  3642  00A4                     _setOverCurrentDischargeProtection$2087:	
  3643                           ; 4 bytes @ 0x4
  3644                           
  3645                           
  3646                           ; 4 bytes @ 0x4
  3647  00A4                     	ds	2
  3648  00A6                     _vfpfcnvrt$1311:	
  3649                           
  3650                           ; 2 bytes @ 0x6
  3651  00A6                     	ds	2
  3652  00A8                     ?_logf:	
  3653  00A8                     ?___fltol:	
  3654                           ; 4 bytes @ 0x8
  3655                           
  3656  00A8                     setShortCircuitProtection@i:	
  3657                           ; 4 bytes @ 0x8
  3658                           
  3659  00A8                     setOverCurrentDischargeProtection@i:	
  3660                           ; 2 bytes @ 0x8
  3661                           
  3662  00A8                     ___fltol@f1:	
  3663                           ; 2 bytes @ 0x8
  3664                           
  3665  00A8                     logf@x:	
  3666                           ; 4 bytes @ 0x8
  3667                           
  3668  00A8                     vfpfcnvrt@ll:	
  3669                           ; 4 bytes @ 0x8
  3670                           
  3671                           
  3672                           ; 8 bytes @ 0x8
  3673  00A8                     	ds	2
  3674  00AA                     setShortCircuitProtection@i_974:	
  3675  00AA                     setOverCurrentDischargeProtection@i_983:	
  3676                           ; 2 bytes @ 0xA
  3677                           
  3678                           
  3679                           ; 2 bytes @ 0xA
  3680  00AA                     	ds	2
  3681  00AC                     ??_logf:	
  3682  00AC                     ??___fltol:	
  3683                           ; 1 bytes @ 0xC
  3684                           
  3685                           
  3686                           ; 1 bytes @ 0xC
  3687  00AC                     	ds	4
  3688  00B0                     vfpfcnvrt@vp:	
  3689                           
  3690                           ; 2 bytes @ 0x10
  3691  00B0                     	ds	1
  3692  00B1                     ??_updateVoltages:	
  3693  00B1                     ??_calibrate_BATTSOC:	
  3694                           ; 1 bytes @ 0x11
  3695                           
  3696  00B1                     ??_updateCurrent:	
  3697                           ; 1 bytes @ 0x11
  3698                           
  3699  00B1                     coulomb_counter@i:	
  3700                           ; 1 bytes @ 0x11
  3701                           
  3702                           
  3703                           ; 2 bytes @ 0x11
  3704  00B1                     	ds	1
  3705  00B2                     vfpfcnvrt@c:	
  3706                           
  3707                           ; 1 bytes @ 0x12
  3708  00B2                     	ds	1
  3709  00B3                     vfpfcnvrt@llu:	
  3710                           
  3711                           ; 8 bytes @ 0x13
  3712  00B3                     	ds	1
  3713  00B4                     ??_updateTemperatures:	
  3714  00B4                     _updateVoltages$2088:	
  3715                           ; 1 bytes @ 0x14
  3716                           
  3717                           
  3718                           ; 4 bytes @ 0x14
  3719  00B4                     	ds	1
  3720  00B5                     updateCurrent@adcVal:	
  3721                           
  3722                           ; 2 bytes @ 0x15
  3723  00B5                     	ds	1
  3724  00B6                     calibrate_BATTSOC@i:	
  3725                           
  3726                           ; 2 bytes @ 0x16
  3727  00B6                     	ds	1
  3728  00B7                     _updateTemperatures$2089:	
  3729                           
  3730                           ; 4 bytes @ 0x17
  3731  00B7                     	ds	1
  3732  00B8                     calibrate_BATTSOC@j:	
  3733  00B8                     updateVoltages@adcVal:	
  3734                           ; 2 bytes @ 0x18
  3735                           
  3736                           
  3737                           ; 4 bytes @ 0x18
  3738  00B8                     	ds	3
  3739  00BB                     ?_vsnprintf:	
  3740  00BB                     vsnprintf@s:	
  3741                           ; 2 bytes @ 0x1B
  3742                           
  3743  00BB                     _updateTemperatures$2090:	
  3744                           ; 2 bytes @ 0x1B
  3745                           
  3746                           
  3747                           ; 4 bytes @ 0x1B
  3748  00BB                     	ds	2
  3749  00BD                     vsnprintf@n:	
  3750                           
  3751                           ; 2 bytes @ 0x1D
  3752  00BD                     	ds	2
  3753  00BF                     vsnprintf@fmt:	
  3754  00BF                     _updateTemperatures$2091:	
  3755                           ; 2 bytes @ 0x1F
  3756                           
  3757                           
  3758                           ; 4 bytes @ 0x1F
  3759  00BF                     	ds	2
  3760  00C1                     vsnprintf@ap:	
  3761                           
  3762                           ; 1 bytes @ 0x21
  3763  00C1                     	ds	1
  3764  00C2                     _vsnprintf$1882:	
  3765                           
  3766                           ; 2 bytes @ 0x22
  3767  00C2                     	ds	1
  3768  00C3                     _updateTemperatures$2092:	
  3769                           
  3770                           ; 4 bytes @ 0x23
  3771  00C3                     	ds	1
  3772  00C4                     vsnprintf@cnt:	
  3773                           
  3774                           ; 2 bytes @ 0x24
  3775  00C4                     	ds	2
  3776  00C6                     vsnprintf@f:	
  3777                           
  3778                           ; 6 bytes @ 0x26
  3779  00C6                     	ds	1
  3780  00C7                     _updateTemperatures$2093:	
  3781                           
  3782                           ; 4 bytes @ 0x27
  3783  00C7                     	ds	4
  3784  00CB                     _updateTemperatures$2094:	
  3785                           
  3786                           ; 4 bytes @ 0x2B
  3787  00CB                     	ds	1
  3788  00CC                     ?_snprintf:	
  3789  00CC                     snprintf@s:	
  3790                           ; 2 bytes @ 0x2C
  3791                           
  3792                           
  3793                           ; 2 bytes @ 0x2C
  3794  00CC                     	ds	2
  3795  00CE                     snprintf@n:	
  3796                           
  3797                           ; 2 bytes @ 0x2E
  3798  00CE                     	ds	1
  3799  00CF                     _updateTemperatures$2095:	
  3800                           
  3801                           ; 4 bytes @ 0x2F
  3802  00CF                     	ds	1
  3803  00D0                     snprintf@fmt:	
  3804                           
  3805                           ; 2 bytes @ 0x30
  3806  00D0                     	ds	3
  3807  00D3                     _updateTemperatures$2096:	
  3808                           
  3809                           ; 4 bytes @ 0x33
  3810  00D3                     	ds	4
  3811  00D7                     _updateTemperatures$2097:	
  3812                           
  3813                           ; 4 bytes @ 0x37
  3814  00D7                     	ds	4
  3815  00DB                     _updateTemperatures$2098:	
  3816                           
  3817                           ; 4 bytes @ 0x3B
  3818  00DB                     	ds	4
  3819  00DF                     _updateTemperatures$2099:	
  3820                           
  3821                           ; 4 bytes @ 0x3F
  3822  00DF                     	ds	4
  3823  00E3                     updateTemperatures@tmp:	
  3824                           
  3825                           ; 4 bytes @ 0x43
  3826  00E3                     	ds	4
  3827  00E7                     updateTemperatures@adcVal:	
  3828                           
  3829                           ; 2 bytes @ 0x47
  3830  00E7                     	ds	2
  3831  00E9                     updateTemperatures@vtsx:	
  3832                           
  3833                           ; 2 bytes @ 0x49
  3834  00E9                     	ds	2
  3835  00EB                     updateTemperatures@rts:	
  3836                           
  3837                           ; 4 bytes @ 0x4B
  3838  00EB                     	ds	4
  3839  00EF                     statemachine@success:	
  3840                           
  3841                           ; 1 bytes @ 0x4F
  3842  00EF                     	ds	1
  3843                           
  3844                           	psect	cstackCOMMON
  3845  0070                     __pcstackCOMMON:	
  3846  0070                     ?_initClock:	
  3847  0070                     ?_init_GPIO:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_initWDT:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ?_init_I2C:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_init_TMR1:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_init_RGB:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_watchdog_timeout_shutdown:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_statemachine:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ?_init_AFE:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_AFE_UPDATE:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ?_printcellParameters:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?_internal_16:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ?_updateVoltages:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?_calibrate_BATTSOC:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ?_coulomb_counter:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ?_updateCurrent:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?_updateTemperatures:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ?_putch:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?_myIsr:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ??_myIsr:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?_main:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     ?_EUSART_Write:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ?_send_I2C_startBit:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_send_I2C_stopBit:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ?_send_I2C_NACK:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     putch@c:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925                           
  3926                           ; 1 bytes @ 0x0
  3927  0070                     	ds	1
  3928  0071                     ??_initClock:	
  3929  0071                     ??_init_GPIO:	
  3930                           ; 1 bytes @ 0x1
  3931                           
  3932  0071                     ??_initWDT:	
  3933                           ; 1 bytes @ 0x1
  3934                           
  3935  0071                     ??_init_I2C:	
  3936                           ; 1 bytes @ 0x1
  3937                           
  3938  0071                     ??_init_TMR1:	
  3939                           ; 1 bytes @ 0x1
  3940                           
  3941  0071                     ??_init_RGB:	
  3942                           ; 1 bytes @ 0x1
  3943                           
  3944  0071                     ?_RGB_color:	
  3945                           ; 1 bytes @ 0x1
  3946                           
  3947  0071                     ??_internal_16:	
  3948                           ; 1 bytes @ 0x1
  3949                           
  3950  0071                     ?_setShuntResistorValue:	
  3951                           ; 1 bytes @ 0x1
  3952                           
  3953  0071                     ??_putch:	
  3954                           ; 1 bytes @ 0x1
  3955                           
  3956  0071                     ??_EUSART_Write:	
  3957                           ; 1 bytes @ 0x1
  3958                           
  3959  0071                     ?_send_I2C_data:	
  3960                           ; 1 bytes @ 0x1
  3961                           
  3962  0071                     ?_send_I2C_controlByte:	
  3963                           ; 1 bytes @ 0x1
  3964                           
  3965  0071                     ??_send_I2C_startBit:	
  3966                           ; 1 bytes @ 0x1
  3967                           
  3968  0071                     ??_send_I2C_stopBit:	
  3969                           ; 1 bytes @ 0x1
  3970                           
  3971  0071                     ??_send_I2C_NACK:	
  3972                           ; 1 bytes @ 0x1
  3973                           
  3974  0071                     ??___aodiv:	
  3975                           ; 1 bytes @ 0x1
  3976                           
  3977  0071                     ??___aomod:	
  3978                           ; 1 bytes @ 0x1
  3979                           
  3980  0071                     ??___lodiv:	
  3981                           ; 1 bytes @ 0x1
  3982                           
  3983  0071                     ??___lomod:	
  3984                           ; 1 bytes @ 0x1
  3985                           
  3986  0071                     ?_fputc:	
  3987                           ; 1 bytes @ 0x1
  3988                           
  3989  0071                     ?_strlen:	
  3990                           ; 2 bytes @ 0x1
  3991                           
  3992  0071                     ?_isupper:	
  3993                           ; 2 bytes @ 0x1
  3994                           
  3995  0071                     ?_isalpha:	
  3996                           ; 2 bytes @ 0x1
  3997                           
  3998  0071                     ?_isdigit:	
  3999                           ; 2 bytes @ 0x1
  4000                           
  4001  0071                     ?_strncmp:	
  4002                           ; 2 bytes @ 0x1
  4003                           
  4004  0071                     ?__Umul8_16:	
  4005                           ; 2 bytes @ 0x1
  4006                           
  4007  0071                     ?_isspace:	
  4008                           ; 2 bytes @ 0x1
  4009                           
  4010  0071                     ?_islower:	
  4011                           ; 2 bytes @ 0x1
  4012                           
  4013  0071                     ?_read_I2C_data:	
  4014                           ; 2 bytes @ 0x1
  4015                           
  4016  0071                     ?___wmul:	
  4017                           ; 2 bytes @ 0x1
  4018                           
  4019  0071                     ?___lmul:	
  4020                           ; 2 bytes @ 0x1
  4021                           
  4022  0071                     ?___xxtofl:	
  4023                           ; 4 bytes @ 0x1
  4024                           
  4025  0071                     EUSART_Write@txData:	
  4026                           ; 4 bytes @ 0x1
  4027                           
  4028  0071                     __Umul8_16@multiplicand:	
  4029                           ; 1 bytes @ 0x1
  4030                           
  4031  0071                     send_I2C_data@databyte:	
  4032                           ; 1 bytes @ 0x1
  4033                           
  4034  0071                     send_I2C_controlByte@BlockAddress:	
  4035                           ; 2 bytes @ 0x1
  4036                           
  4037  0071                     RGB_color@color:	
  4038                           ; 2 bytes @ 0x1
  4039                           
  4040  0071                     ___wmul@multiplier:	
  4041                           ; 2 bytes @ 0x1
  4042                           
  4043  0071                     isalpha@c:	
  4044                           ; 2 bytes @ 0x1
  4045                           
  4046  0071                     isdigit@c:	
  4047                           ; 2 bytes @ 0x1
  4048                           
  4049  0071                     isspace@c:	
  4050                           ; 2 bytes @ 0x1
  4051                           
  4052  0071                     isupper@c:	
  4053                           ; 2 bytes @ 0x1
  4054                           
  4055  0071                     fputc@c:	
  4056                           ; 2 bytes @ 0x1
  4057                           
  4058  0071                     strlen@s:	
  4059                           ; 2 bytes @ 0x1
  4060                           
  4061  0071                     strncmp@_l:	
  4062                           ; 2 bytes @ 0x1
  4063                           
  4064  0071                     islower@c:	
  4065                           ; 2 bytes @ 0x1
  4066                           
  4067  0071                     setShuntResistorValue@res_mOhm:	
  4068                           ; 2 bytes @ 0x1
  4069                           
  4070  0071                     ___lmul@multiplier:	
  4071                           ; 4 bytes @ 0x1
  4072                           
  4073  0071                     ___xxtofl@val:	
  4074                           ; 4 bytes @ 0x1
  4075                           
  4076                           
  4077                           ; 4 bytes @ 0x1
  4078  0071                     	ds	1
  4079  0072                     ?_EUSART_Write_Text:	
  4080  0072                     ___aodiv@counter:	
  4081                           ; 1 bytes @ 0x2
  4082                           
  4083  0072                     ___aomod@counter:	
  4084                           ; 1 bytes @ 0x2
  4085                           
  4086  0072                     ___lomod@counter:	
  4087                           ; 1 bytes @ 0x2
  4088                           
  4089  0072                     EUSART_Write_Text@text:	
  4090                           ; 1 bytes @ 0x2
  4091                           
  4092  0072                     ___lodiv@quotient:	
  4093                           ; 2 bytes @ 0x2
  4094                           
  4095                           
  4096                           ; 8 bytes @ 0x2
  4097  0072                     	ds	1
  4098  0073                     ??_watchdog_timeout_shutdown:	
  4099  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4100                           ; 1 bytes @ 0x3
  4101                           
  4102  0073                     ??_RGB_color:	
  4103                           ; 1 bytes @ 0x3
  4104                           
  4105  0073                     ??_strlen:	
  4106                           ; 1 bytes @ 0x3
  4107                           
  4108  0073                     ??_isupper:	
  4109                           ; 1 bytes @ 0x3
  4110                           
  4111  0073                     ??_isalpha:	
  4112                           ; 1 bytes @ 0x3
  4113                           
  4114  0073                     ??_isdigit:	
  4115                           ; 1 bytes @ 0x3
  4116                           
  4117  0073                     ??__Umul8_16:	
  4118                           ; 1 bytes @ 0x3
  4119                           
  4120  0073                     ??_isspace:	
  4121                           ; 1 bytes @ 0x3
  4122                           
  4123  0073                     ??_islower:	
  4124                           ; 1 bytes @ 0x3
  4125                           
  4126  0073                     ??_send_I2C_data:	
  4127                           ; 1 bytes @ 0x3
  4128                           
  4129  0073                     ??_read_I2C_data:	
  4130                           ; 1 bytes @ 0x3
  4131                           
  4132  0073                     ___aodiv@sign:	
  4133                           ; 1 bytes @ 0x3
  4134                           
  4135  0073                     ___aomod@sign:	
  4136                           ; 1 bytes @ 0x3
  4137                           
  4138  0073                     send_I2C_controlByte@RW_bit:	
  4139                           ; 1 bytes @ 0x3
  4140                           
  4141  0073                     ___wmul@multiplicand:	
  4142                           ; 2 bytes @ 0x3
  4143                           
  4144  0073                     fputc@fp:	
  4145                           ; 2 bytes @ 0x3
  4146                           
  4147  0073                     strlen@a:	
  4148                           ; 2 bytes @ 0x3
  4149                           
  4150  0073                     strncmp@_r:	
  4151                           ; 2 bytes @ 0x3
  4152                           
  4153                           
  4154                           ; 2 bytes @ 0x3
  4155  0073                     	ds	1
  4156  0074                     ??_EUSART_Write_Text:	
  4157  0074                     ?_abs:	
  4158                           ; 1 bytes @ 0x4
  4159                           
  4160  0074                     abs@a:	
  4161                           ; 2 bytes @ 0x4
  4162                           
  4163  0074                     ___aodiv@quotient:	
  4164                           ; 2 bytes @ 0x4
  4165                           
  4166                           
  4167                           ; 8 bytes @ 0x4
  4168  0074                     	ds	1
  4169  0075                     ??_setShuntResistorValue:	
  4170  0075                     ??_fputc:	
  4171                           ; 1 bytes @ 0x5
  4172                           
  4173  0075                     ??_send_I2C_controlByte:	
  4174                           ; 1 bytes @ 0x5
  4175                           
  4176  0075                     ?_I2C_writeRegister:	
  4177                           ; 1 bytes @ 0x5
  4178                           
  4179  0075                     ??___wmul:	
  4180                           ; 1 bytes @ 0x5
  4181                           
  4182  0075                     ??___xxtofl:	
  4183                           ; 1 bytes @ 0x5
  4184                           
  4185  0075                     ?_readRegister:	
  4186                           ; 1 bytes @ 0x5
  4187                           
  4188  0075                     _isspace$1737:	
  4189                           ; 2 bytes @ 0x5
  4190                           
  4191  0075                     EUSART_Write_Text@i:	
  4192                           ; 1 bytes @ 0x5
  4193                           
  4194  0075                     I2C_writeRegister@slaveAddress:	
  4195                           ; 2 bytes @ 0x5
  4196                           
  4197  0075                     readRegister@slaveAddress:	
  4198                           ; 2 bytes @ 0x5
  4199                           
  4200  0075                     ___wmul@product:	
  4201                           ; 2 bytes @ 0x5
  4202                           
  4203  0075                     strncmp@n:	
  4204                           ; 2 bytes @ 0x5
  4205                           
  4206  0075                     __Umul8_16@product:	
  4207                           ; 2 bytes @ 0x5
  4208                           
  4209  0075                     ___lmul@multiplicand:	
  4210                           ; 2 bytes @ 0x5
  4211                           
  4212                           
  4213                           ; 4 bytes @ 0x5
  4214  0075                     	ds	1
  4215  0076                     ??_abs:	
  4216                           
  4217                           ; 1 bytes @ 0x6
  4218  0076                     	ds	1
  4219  0077                     ??_setTemperatureLimitsint:	
  4220  0077                     ??_strncmp:	
  4221                           ; 1 bytes @ 0x7
  4222                           
  4223  0077                     ?_toupper:	
  4224                           ; 1 bytes @ 0x7
  4225                           
  4226  0077                     ?_atoi:	
  4227                           ; 2 bytes @ 0x7
  4228                           
  4229  0077                     I2C_writeRegister@regAddress:	
  4230                           ; 2 bytes @ 0x7
  4231                           
  4232  0077                     readRegister@regAddress:	
  4233                           ; 2 bytes @ 0x7
  4234                           
  4235  0077                     atoi@s:	
  4236                           ; 2 bytes @ 0x7
  4237                           
  4238  0077                     toupper@c:	
  4239                           ; 2 bytes @ 0x7
  4240                           
  4241  0077                     __Umul8_16@word_mpld:	
  4242                           ; 2 bytes @ 0x7
  4243                           
  4244                           
  4245                           ; 2 bytes @ 0x7
  4246  0077                     	ds	1
  4247  0078                     strncmp@l:	
  4248                           
  4249                           ; 2 bytes @ 0x8
  4250  0078                     	ds	1
  4251  0079                     ??_readRegister:	
  4252  0079                     ??___lmul:	
  4253                           ; 1 bytes @ 0x9
  4254                           
  4255  0079                     ??___aldiv:	
  4256                           ; 1 bytes @ 0x9
  4257                           
  4258  0079                     __Umul8_16@multiplier:	
  4259                           ; 1 bytes @ 0x9
  4260                           
  4261  0079                     I2C_writeRegister@data:	
  4262                           ; 1 bytes @ 0x9
  4263                           
  4264  0079                     readRegister@recievedData:	
  4265                           ; 2 bytes @ 0x9
  4266                           
  4267  0079                     _toupper$1845:	
  4268                           ; 2 bytes @ 0x9
  4269                           
  4270                           
  4271                           ; 2 bytes @ 0x9
  4272  0079                     	ds	1
  4273  007A                     ??_stoa:	
  4274  007A                     ??___flneg:	
  4275                           ; 1 bytes @ 0xA
  4276                           
  4277  007A                     ??___flsub:	
  4278                           ; 1 bytes @ 0xA
  4279                           
  4280  007A                     ?_fputs:	
  4281                           ; 1 bytes @ 0xA
  4282                           
  4283  007A                     ___fltol@sign1:	
  4284                           ; 2 bytes @ 0xA
  4285                           
  4286  007A                     ___lodiv@counter:	
  4287                           ; 1 bytes @ 0xA
  4288                           
  4289  007A                     EUSART_Initialize@x:	
  4290                           ; 1 bytes @ 0xA
  4291                           
  4292  007A                     fputs@fp:	
  4293                           ; 2 bytes @ 0xA
  4294                           
  4295  007A                     strncmp@r:	
  4296                           ; 2 bytes @ 0xA
  4297                           
  4298                           
  4299                           ; 2 bytes @ 0xA
  4300  007A                     	ds	1
  4301  007B                     ??_init_AFE:	
  4302  007B                     ??_I2C_writeRegister:	
  4303                           ; 1 bytes @ 0xB
  4304                           
  4305  007B                     enableDischarging@sys_ctrl2:	
  4306                           ; 1 bytes @ 0xB
  4307                           
  4308  007B                     enableCharging@sys_ctrl2:	
  4309                           ; 1 bytes @ 0xB
  4310                           
  4311  007B                     ___fltol@exp1:	
  4312                           ; 1 bytes @ 0xB
  4313                           
  4314                           
  4315                           ; 1 bytes @ 0xB
  4316  007B                     	ds	1
  4317  007C                     ??_AFE_UPDATE:	
  4318  007C                     ??_printcellParameters:	
  4319                           ; 1 bytes @ 0xC
  4320                           
  4321                           
  4322                           	psect	cstackBANK0
  4323  0020                     __pcstackBANK0:	
  4324                           ; 1 bytes @ 0xC
  4325                           
  4326  0020                     ?_setTemperatureLimitsint:	
  4327  0020                     ?_enableDischarging:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0020                     ?_enableCharging:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0020                     ??_fputs:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0020                     ??_toupper:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0020                     ??_atoi:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0020                     ?_beginAFEcommunication:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0020                     ?_stoa:	
  4346                           ; 2 bytes @ 0x0
  4347                           
  4348  0020                     ?___aodiv:	
  4349                           ; 2 bytes @ 0x0
  4350                           
  4351  0020                     ?___aomod:	
  4352                           ; 8 bytes @ 0x0
  4353                           
  4354  0020                     ?___lodiv:	
  4355                           ; 8 bytes @ 0x0
  4356                           
  4357  0020                     ?___lomod:	
  4358                           ; 8 bytes @ 0x0
  4359                           
  4360  0020                     ___xxtofl@sign:	
  4361                           ; 8 bytes @ 0x0
  4362                           
  4363  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0020                     enableDischarging@enable:	
  4367                           ; 2 bytes @ 0x0
  4368                           
  4369  0020                     enableCharging@enable:	
  4370                           ; 2 bytes @ 0x0
  4371                           
  4372  0020                     stoa@fp:	
  4373                           ; 2 bytes @ 0x0
  4374                           
  4375  0020                     ___lmul@product:	
  4376                           ; 2 bytes @ 0x0
  4377                           
  4378  0020                     ___aodiv@divisor:	
  4379                           ; 4 bytes @ 0x0
  4380                           
  4381  0020                     ___aomod@divisor:	
  4382                           ; 8 bytes @ 0x0
  4383                           
  4384  0020                     ___lodiv@divisor:	
  4385                           ; 8 bytes @ 0x0
  4386                           
  4387  0020                     ___lomod@divisor:	
  4388                           ; 8 bytes @ 0x0
  4389                           
  4390                           
  4391                           ; 8 bytes @ 0x0
  4392  0020                     	ds	1
  4393  0021                     ___xxtofl@exp:	
  4394                           
  4395                           ; 1 bytes @ 0x1
  4396  0021                     	ds	1
  4397  0022                     ??_beginAFEcommunication:	
  4398  0022                     ??_enableDischarging:	
  4399                           ; 1 bytes @ 0x2
  4400                           
  4401  0022                     ??_enableCharging:	
  4402                           ; 1 bytes @ 0x2
  4403                           
  4404  0022                     fputs@c:	
  4405                           ; 1 bytes @ 0x2
  4406                           
  4407  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4408                           ; 1 bytes @ 0x2
  4409                           
  4410  0022                     stoa@s:	
  4411                           ; 2 bytes @ 0x2
  4412                           
  4413  0022                     ___xxtofl@arg:	
  4414                           ; 2 bytes @ 0x2
  4415                           
  4416                           
  4417                           ; 4 bytes @ 0x2
  4418  0022                     	ds	1
  4419  0023                     fputs@i:	
  4420                           
  4421                           ; 2 bytes @ 0x3
  4422  0023                     	ds	1
  4423  0024                     ?___aldiv:	
  4424  0024                     setTemperatureLimitsint@minCharge_degC:	
  4425                           ; 4 bytes @ 0x4
  4426                           
  4427  0024                     atoi@neg:	
  4428                           ; 2 bytes @ 0x4
  4429                           
  4430  0024                     ___aldiv@divisor:	
  4431                           ; 2 bytes @ 0x4
  4432                           
  4433  0024                     stoa@nuls:	
  4434                           ; 4 bytes @ 0x4
  4435                           
  4436                           
  4437                           ; 7 bytes @ 0x4
  4438  0024                     	ds	1
  4439  0025                     fputs@s:	
  4440                           
  4441                           ; 1 bytes @ 0x5
  4442  0025                     	ds	1
  4443  0026                     ?_pad:	
  4444  0026                     ?___flmul:	
  4445                           ; 2 bytes @ 0x6
  4446                           
  4447  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4448                           ; 4 bytes @ 0x6
  4449                           
  4450  0026                     pad@fp:	
  4451                           ; 2 bytes @ 0x6
  4452                           
  4453  0026                     _atoi$1710:	
  4454                           ; 2 bytes @ 0x6
  4455                           
  4456  0026                     ___flmul@b:	
  4457                           ; 2 bytes @ 0x6
  4458                           
  4459                           
  4460                           ; 4 bytes @ 0x6
  4461  0026                     	ds	2
  4462  0028                     pad@buf:	
  4463  0028                     _atoi$1712:	
  4464                           ; 1 bytes @ 0x8
  4465                           
  4466  0028                     ___aldiv@dividend:	
  4467                           ; 2 bytes @ 0x8
  4468                           
  4469  0028                     ___aodiv@dividend:	
  4470                           ; 4 bytes @ 0x8
  4471                           
  4472  0028                     ___aomod@dividend:	
  4473                           ; 8 bytes @ 0x8
  4474                           
  4475  0028                     ___lodiv@dividend:	
  4476                           ; 8 bytes @ 0x8
  4477                           
  4478  0028                     ___lomod@dividend:	
  4479                           ; 8 bytes @ 0x8
  4480                           
  4481                           
  4482                           ; 8 bytes @ 0x8
  4483  0028                     	ds	1
  4484  0029                     pad@p:	
  4485                           
  4486                           ; 2 bytes @ 0x9
  4487  0029                     	ds	1
  4488  002A                     _atoi$1711:	
  4489  002A                     ___flmul@a:	
  4490                           ; 1 bytes @ 0xA
  4491                           
  4492                           
  4493                           ; 4 bytes @ 0xA
  4494  002A                     	ds	1
  4495  002B                     ??_pad:	
  4496  002B                     beginAFEcommunication@commSuccess:	
  4497                           ; 1 bytes @ 0xB
  4498                           
  4499  002B                     stoa@i:	
  4500                           ; 2 bytes @ 0xB
  4501                           
  4502  002B                     atoi@n:	
  4503                           ; 2 bytes @ 0xB
  4504                           
  4505                           
  4506                           ; 2 bytes @ 0xB
  4507  002B                     	ds	1
  4508  002C                     ___aldiv@counter:	
  4509  002C                     pad@i:	
  4510                           ; 1 bytes @ 0xC
  4511                           
  4512                           
  4513                           ; 2 bytes @ 0xC
  4514  002C                     	ds	1
  4515  002D                     ___aldiv@sign:	
  4516  002D                     beginAFEcommunication@i:	
  4517                           ; 1 bytes @ 0xD
  4518                           
  4519  002D                     stoa@w:	
  4520                           ; 2 bytes @ 0xD
  4521                           
  4522                           
  4523                           ; 2 bytes @ 0xD
  4524  002D                     	ds	1
  4525  002E                     ??___flmul:	
  4526  002E                     pad@w:	
  4527                           ; 1 bytes @ 0xE
  4528                           
  4529  002E                     ___aldiv@quotient:	
  4530                           ; 2 bytes @ 0xE
  4531                           
  4532                           
  4533                           ; 4 bytes @ 0xE
  4534  002E                     	ds	1
  4535  002F                     stoa@cp:	
  4536                           
  4537                           ; 2 bytes @ 0xF
  4538  002F                     	ds	1
  4539  0030                     ?_ctoa:	
  4540  0030                     ?_dtoa:	
  4541                           ; 2 bytes @ 0x10
  4542                           
  4543  0030                     ?_otoa:	
  4544                           ; 2 bytes @ 0x10
  4545                           
  4546  0030                     ?_utoa:	
  4547                           ; 2 bytes @ 0x10
  4548                           
  4549  0030                     ?_xtoa:	
  4550                           ; 2 bytes @ 0x10
  4551                           
  4552  0030                     ctoa@fp:	
  4553                           ; 2 bytes @ 0x10
  4554                           
  4555  0030                     dtoa@fp:	
  4556                           ; 2 bytes @ 0x10
  4557                           
  4558  0030                     otoa@fp:	
  4559                           ; 2 bytes @ 0x10
  4560                           
  4561  0030                     utoa@fp:	
  4562                           ; 2 bytes @ 0x10
  4563                           
  4564  0030                     xtoa@fp:	
  4565                           ; 2 bytes @ 0x10
  4566                           
  4567                           
  4568                           ; 2 bytes @ 0x10
  4569  0030                     	ds	1
  4570  0031                     stoa@p:	
  4571                           
  4572                           ; 2 bytes @ 0x11
  4573  0031                     	ds	1
  4574  0032                     ?_EUSART_Initialize:	
  4575  0032                     ?_setCellUndervoltageProtection:	
  4576                           ; 1 bytes @ 0x12
  4577                           
  4578  0032                     ?_setCellOvervoltageProtection:	
  4579                           ; 1 bytes @ 0x12
  4580                           
  4581  0032                     ctoa@c:	
  4582                           ; 1 bytes @ 0x12
  4583                           
  4584  0032                     setCellUndervoltageProtection@voltage_mV:	
  4585                           ; 1 bytes @ 0x12
  4586                           
  4587  0032                     setCellOvervoltageProtection@voltage_mV:	
  4588                           ; 2 bytes @ 0x12
  4589                           
  4590  0032                     EUSART_Initialize@baudrate:	
  4591                           ; 2 bytes @ 0x12
  4592                           
  4593  0032                     dtoa@d:	
  4594                           ; 4 bytes @ 0x12
  4595                           
  4596  0032                     otoa@d:	
  4597                           ; 8 bytes @ 0x12
  4598                           
  4599  0032                     utoa@d:	
  4600                           ; 8 bytes @ 0x12
  4601                           
  4602  0032                     xtoa@d:	
  4603                           ; 8 bytes @ 0x12
  4604                           
  4605                           
  4606                           ; 8 bytes @ 0x12
  4607  0032                     	ds	1
  4608  0033                     ??_ctoa:	
  4609  0033                     ___flmul@sign:	
  4610                           ; 1 bytes @ 0x13
  4611                           
  4612  0033                     stoa@l:	
  4613                           ; 1 bytes @ 0x13
  4614                           
  4615                           
  4616                           ; 2 bytes @ 0x13
  4617  0033                     	ds	1
  4618  0034                     setCellUndervoltageProtection@delay_s:	
  4619  0034                     setCellOvervoltageProtection@delay_s:	
  4620                           ; 2 bytes @ 0x14
  4621                           
  4622  0034                     ctoa@w:	
  4623                           ; 2 bytes @ 0x14
  4624                           
  4625  0034                     ___flmul@grs:	
  4626                           ; 2 bytes @ 0x14
  4627                           
  4628                           
  4629                           ; 4 bytes @ 0x14
  4630  0034                     	ds	2
  4631  0036                     ??_EUSART_Initialize:	
  4632  0036                     ??_setCellUndervoltageProtection:	
  4633                           ; 1 bytes @ 0x16
  4634                           
  4635  0036                     ??_setCellOvervoltageProtection:	
  4636                           ; 1 bytes @ 0x16
  4637                           
  4638                           
  4639                           ; 1 bytes @ 0x16
  4640  0036                     	ds	2
  4641  0038                     ___flmul@aexp:	
  4642                           
  4643                           ; 1 bytes @ 0x18
  4644  0038                     	ds	1
  4645  0039                     ___flmul@bexp:	
  4646                           
  4647                           ; 1 bytes @ 0x19
  4648  0039                     	ds	1
  4649  003A                     ??_dtoa:	
  4650  003A                     ??_otoa:	
  4651                           ; 1 bytes @ 0x1A
  4652                           
  4653  003A                     ??_utoa:	
  4654                           ; 1 bytes @ 0x1A
  4655                           
  4656  003A                     xtoa@x:	
  4657                           ; 1 bytes @ 0x1A
  4658                           
  4659  003A                     ___flmul@prod:	
  4660                           ; 1 bytes @ 0x1A
  4661                           
  4662                           
  4663                           ; 4 bytes @ 0x1A
  4664  003A                     	ds	1
  4665  003B                     ??_xtoa:	
  4666  003B                     utoa@p:	
  4667                           ; 1 bytes @ 0x1B
  4668                           
  4669                           
  4670                           ; 2 bytes @ 0x1B
  4671  003B                     	ds	2
  4672  003D                     _dtoa$1259:	
  4673  003D                     utoa@w:	
  4674                           ; 2 bytes @ 0x1D
  4675                           
  4676                           
  4677                           ; 2 bytes @ 0x1D
  4678  003D                     	ds	1
  4679  003E                     ___flmul@temp:	
  4680                           
  4681                           ; 2 bytes @ 0x1E
  4682  003E                     	ds	1
  4683  003F                     dtoa@p:	
  4684  003F                     utoa@n:	
  4685                           ; 2 bytes @ 0x1F
  4686                           
  4687                           
  4688                           ; 8 bytes @ 0x1F
  4689  003F                     	ds	1
  4690  0040                     ?___fldiv:	
  4691  0040                     ___fldiv@a:	
  4692                           ; 4 bytes @ 0x20
  4693                           
  4694                           
  4695                           ; 4 bytes @ 0x20
  4696  0040                     	ds	1
  4697  0041                     dtoa@w:	
  4698                           
  4699                           ; 2 bytes @ 0x21
  4700  0041                     	ds	1
  4701  0042                     otoa@p:	
  4702                           
  4703                           ; 2 bytes @ 0x22
  4704  0042                     	ds	1
  4705  0043                     dtoa@s:	
  4706  0043                     _xtoa$1295:	
  4707                           ; 2 bytes @ 0x23
  4708                           
  4709                           
  4710                           ; 2 bytes @ 0x23
  4711  0043                     	ds	1
  4712  0044                     setCellUndervoltageProtection@uv_trip:	
  4713  0044                     setCellOvervoltageProtection@ov_trip:	
  4714                           ; 1 bytes @ 0x24
  4715                           
  4716  0044                     otoa@t:	
  4717                           ; 1 bytes @ 0x24
  4718                           
  4719  0044                     ___fldiv@b:	
  4720                           ; 2 bytes @ 0x24
  4721                           
  4722                           
  4723                           ; 4 bytes @ 0x24
  4724  0044                     	ds	1
  4725  0045                     setCellUndervoltageProtection@i:	
  4726  0045                     setCellOvervoltageProtection@i:	
  4727                           ; 2 bytes @ 0x25
  4728                           
  4729  0045                     _xtoa$1296:	
  4730                           ; 2 bytes @ 0x25
  4731                           
  4732  0045                     dtoa@n:	
  4733                           ; 2 bytes @ 0x25
  4734                           
  4735                           
  4736                           ; 8 bytes @ 0x25
  4737  0045                     	ds	1
  4738  0046                     otoa@w:	
  4739                           
  4740                           ; 2 bytes @ 0x26
  4741  0046                     	ds	1
  4742  0047                     utoa@i:	
  4743  0047                     xtoa@p:	
  4744                           ; 2 bytes @ 0x27
  4745                           
  4746                           
  4747                           ; 2 bytes @ 0x27
  4748  0047                     	ds	1
  4749  0048                     ??___fldiv:	
  4750  0048                     otoa@n:	
  4751                           ; 1 bytes @ 0x28
  4752                           
  4753                           
  4754                           ; 8 bytes @ 0x28
  4755  0048                     	ds	1
  4756  0049                     xtoa@w:	
  4757                           
  4758                           ; 2 bytes @ 0x29
  4759  0049                     	ds	2
  4760  004B                     xtoa@n:	
  4761                           
  4762                           ; 8 bytes @ 0x2B
  4763  004B                     	ds	2
  4764  004D                     dtoa@i:	
  4765  004D                     ___fldiv@rem:	
  4766                           ; 2 bytes @ 0x2D
  4767                           
  4768                           
  4769                           ; 4 bytes @ 0x2D
  4770  004D                     	ds	3
  4771  0050                     otoa@i:	
  4772                           
  4773                           ; 2 bytes @ 0x30
  4774  0050                     	ds	1
  4775  0051                     ___fldiv@sign:	
  4776                           
  4777                           ; 1 bytes @ 0x31
  4778  0051                     	ds	1
  4779  0052                     ___fldiv@new_exp:	
  4780                           
  4781                           ; 2 bytes @ 0x32
  4782  0052                     	ds	1
  4783  0053                     xtoa@i:	
  4784                           
  4785                           ; 2 bytes @ 0x33
  4786  0053                     	ds	1
  4787  0054                     ___fldiv@grs:	
  4788                           
  4789                           ; 4 bytes @ 0x34
  4790  0054                     	ds	1
  4791  0055                     xtoa@c:	
  4792                           
  4793                           ; 2 bytes @ 0x35
  4794  0055                     	ds	2
  4795  0057                     ?_vfpfcnvrt:	
  4796  0057                     vfpfcnvrt@fp:	
  4797                           ; 2 bytes @ 0x37
  4798                           
  4799                           
  4800                           ; 2 bytes @ 0x37
  4801  0057                     	ds	1
  4802  0058                     ___fldiv@bexp:	
  4803                           
  4804                           ; 1 bytes @ 0x38
  4805  0058                     	ds	1
  4806  0059                     vfpfcnvrt@fmt:	
  4807  0059                     ___fldiv@aexp:	
  4808                           ; 1 bytes @ 0x39
  4809                           
  4810                           
  4811                           ; 1 bytes @ 0x39
  4812  0059                     	ds	1
  4813  005A                     ?___flge:	
  4814  005A                     ?___flneg:	
  4815                           ; 1 bit 
  4816                           
  4817  005A                     ?___fladd:	
  4818                           ; 4 bytes @ 0x3A
  4819                           
  4820  005A                     vfpfcnvrt@ap:	
  4821                           ; 4 bytes @ 0x3A
  4822                           
  4823  005A                     ___flge@ff1:	
  4824                           ; 1 bytes @ 0x3A
  4825                           
  4826  005A                     ___flneg@f1:	
  4827                           ; 4 bytes @ 0x3A
  4828                           
  4829  005A                     ___fladd@b:	
  4830                           ; 4 bytes @ 0x3A
  4831                           
  4832                           
  4833                           ; 4 bytes @ 0x3A
  4834  005A                     	ds	1
  4835  005B                     ??_vfpfcnvrt:	
  4836                           
  4837                           ; 1 bytes @ 0x3B
  4838  005B                     	ds	3
  4839  005E                     ___flge@ff2:	
  4840  005E                     ___fladd@a:	
  4841                           ; 4 bytes @ 0x3E
  4842                           
  4843                           
  4844                           ; 4 bytes @ 0x3E
  4845  005E                     	ds	3
  4846  0061                     ?_vfprintf:	
  4847  0061                     vfprintf@fp:	
  4848                           ; 2 bytes @ 0x41
  4849                           
  4850                           
  4851                           ; 2 bytes @ 0x41
  4852  0061                     	ds	1
  4853  0062                     ??___flge:	
  4854  0062                     ??___fladd:	
  4855                           ; 1 bytes @ 0x42
  4856                           
  4857                           
  4858                           ; 1 bytes @ 0x42
  4859  0062                     	ds	1
  4860  0063                     vfprintf@fmt:	
  4861                           
  4862                           ; 2 bytes @ 0x43
  4863  0063                     	ds	2
  4864  0065                     vfprintf@ap:	
  4865                           
  4866                           ; 1 bytes @ 0x45
  4867  0065                     	ds	1
  4868  0066                     ?_setShortCircuitProtection:	
  4869  0066                     ?_setOverCurrentDischargeProtection:	
  4870                           ; 1 bytes @ 0x46
  4871                           
  4872  0066                     ??_vfprintf:	
  4873                           ; 1 bytes @ 0x46
  4874                           
  4875  0066                     setShortCircuitProtection@current_mA:	
  4876                           ; 1 bytes @ 0x46
  4877                           
  4878  0066                     setOverCurrentDischargeProtection@current_mA:	
  4879                           ; 4 bytes @ 0x46
  4880                           
  4881                           
  4882                           ; 4 bytes @ 0x46
  4883  0066                     	ds	2
  4884  0068                     vfprintf@cfmt:	
  4885                           
  4886                           ; 2 bytes @ 0x48
  4887  0068                     	ds	2
  4888  006A                     ??_vsnprintf:	
  4889  006A                     ___fladd@signs:	
  4890                           ; 1 bytes @ 0x4A
  4891                           
  4892  006A                     setShortCircuitProtection@delay_us:	
  4893                           ; 1 bytes @ 0x4A
  4894                           
  4895  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4896                           ; 2 bytes @ 0x4A
  4897                           
  4898                           
  4899                           ; 2 bytes @ 0x4A
  4900  006A                     	ds	1
  4901  006B                     ___fladd@aexp:	
  4902                           
  4903                           ; 1 bytes @ 0x4B
  4904  006B                     	ds	1
  4905  006C                     ??_snprintf:	
  4906  006C                     ??_setShortCircuitProtection:	
  4907                           ; 1 bytes @ 0x4C
  4908                           
  4909  006C                     ??_setOverCurrentDischargeProtection:	
  4910                           ; 1 bytes @ 0x4C
  4911                           
  4912  006C                     ___fladd@bexp:	
  4913                           ; 1 bytes @ 0x4C
  4914                           
  4915                           
  4916                           ; 1 bytes @ 0x4C
  4917  006C                     	ds	1
  4918  006D                     ___fladd@grs:	
  4919                           
  4920                           ; 1 bytes @ 0x4D
  4921  006D                     	ds	1
  4922  006E                     ??_coulomb_counter:	
  4923                           
  4924                           ; 1 bytes @ 0x4E
  4925  006E                     	ds	1
  4926  006F                     snprintf@ap:	
  4927                           
  4928                           ; 1 bytes @ 0x4F
  4929  006F                     	ds	1
  4930                           
  4931                           	psect	maintext
  4932  34FE                     __pmaintext:	
  4933 ;;
  4934 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4935 ;;
  4936 ;; *************** function _main *****************
  4937 ;; Defined at:
  4938 ;;		line 72 in file "main.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : B1F/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4955 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4956 ;;Total ram usage:        2 bytes
  4957 ;; Hardware stack levels required when called:   12
  4958 ;; This function calls:
  4959 ;;		_EUSART_Initialize
  4960 ;;		_initClock
  4961 ;;		_initWDT
  4962 ;;		_init_GPIO
  4963 ;;		_init_I2C
  4964 ;;		_init_RGB
  4965 ;;		_init_TMR1
  4966 ;;		_statemachine
  4967 ;;		_watchdog_timeout_shutdown
  4968 ;; This function is called by:
  4969 ;;		Startup code after reset
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _main
  4975  34FE                     _main:	
  4976                           
  4977                           ;main.c: 75:     initClock();
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4981  34FE  31B2  221C  31B4   	fcall	_initClock
  4982                           
  4983                           ;main.c: 76:     init_GPIO();
  4984  3501  3188  2008  31B4   	fcall	_init_GPIO
  4985                           
  4986                           ;main.c: 77:     initWDT();
  4987  3504  31B2  2228  31B4   	fcall	_initWDT
  4988                           
  4989                           ;main.c: 78:     init_I2C();
  4990  3507  31B2  228C  31B4   	fcall	_init_I2C
  4991                           
  4992                           ;main.c: 79:     EUSART_Initialize(9600);
  4993  350A  3000               	movlw	0
  4994  350B  0020               	movlb	0	; select bank0
  4995  350C  00B5               	movwf	EUSART_Initialize@baudrate+3
  4996  350D  3000               	movlw	0
  4997  350E  00B4               	movwf	EUSART_Initialize@baudrate+2
  4998  350F  3025               	movlw	37
  4999  3510  00B3               	movwf	EUSART_Initialize@baudrate+1
  5000  3511  3080               	movlw	128
  5001  3512  00B2               	movwf	EUSART_Initialize@baudrate
  5002  3513  31AB  237F  31B4   	fcall	_EUSART_Initialize
  5003                           
  5004                           ;main.c: 80:     init_TMR1();
  5005  3516  31B2  2275  31B4   	fcall	_init_TMR1
  5006                           
  5007                           ;main.c: 81:     init_RGB();
  5008  3519  31B2  2223  31B4   	fcall	_init_RGB
  5009                           
  5010                           ;main.c: 84:     watchdog_timeout_shutdown();
  5011  351C  31B3  235F  31B4   	fcall	_watchdog_timeout_shutdown
  5012  351F                     l7647:	
  5013                           
  5014                           ;main.c: 88:         statemachine();
  5015  351F  31A8  207A  31B4   	fcall	_statemachine
  5016                           
  5017                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5018  3522  3015               	movlw	21
  5019  3523  0022               	movlb	2	; select bank2
  5020  3524  00E5               	movwf	(??_main^(0+256)+1)
  5021  3525  304B               	movlw	75
  5022  3526  00E4               	movwf	??_main^(0+256)
  5023  3527  30BE               	movlw	190
  5024  3528                     u9487:	
  5025  3528  0B89               	decfsz	9,f
  5026  3529  2D28               	goto	u9487
  5027  352A  0BE4               	decfsz	??_main^(0+256),f
  5028  352B  2D28               	goto	u9487
  5029  352C  0BE5               	decfsz	(??_main^(0+256)+1),f
  5030  352D  2D28               	goto	u9487
  5031  352E  0000               	nop
  5032  352F  2D1F               	goto	l7647
  5033  3530                     __end_of_main:	
  5034                           
  5035                           	psect	text1
  5036  335F                     __ptext1:	
  5037 ;; *************** function _watchdog_timeout_shutdown *****************
  5038 ;; Defined at:
  5039 ;;		line 3 in file "algorithms.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;		None
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5057 ;;Total ram usage:        2 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    2
  5060 ;; This function calls:
  5061 ;;		_RGB_color
  5062 ;; This function is called by:
  5063 ;;		_main
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _watchdog_timeout_shutdown
  5069  335F                     _watchdog_timeout_shutdown:	
  5070                           
  5071                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5075  335F  0020               	movlb	0	; select bank0
  5076  3360  1A03               	btfsc	3,4	;volatile
  5077  3361  0008               	return
  5078                           
  5079                           ;algorithms.c: 6:         RGB_color(0);
  5080  3362  3000               	movlw	0
  5081  3363  00F1               	movwf	RGB_color@color
  5082  3364  00F2               	movwf	RGB_color@color+1
  5083  3365  31B3  23D1  31B3   	fcall	_RGB_color
  5084                           
  5085                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5086  3368  3029               	movlw	41
  5087  3369  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5088  336A  3096               	movlw	150
  5089  336B  00F3               	movwf	??_watchdog_timeout_shutdown
  5090  336C  307F               	movlw	127
  5091  336D                     u9497:	
  5092  336D  0B89               	decfsz	9,f
  5093  336E  2B6D               	goto	u9497
  5094  336F  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5095  3370  2B6D               	goto	u9497
  5096  3371  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5097  3372  2B6D               	goto	u9497
  5098  3373  0000               	nop
  5099                           
  5100                           ;algorithms.c: 8:          currState = 3;
  5101  3374  3003               	movlw	3
  5102  3375  00F3               	movwf	??_watchdog_timeout_shutdown
  5103  3376  0873               	movf	??_watchdog_timeout_shutdown,w
  5104  3377  0023               	movlb	3	; select bank3
  5105  3378  00E7               	movwf	_currState^(0+384)
  5106  3379  0008               	return
  5107  337A                     __end_of_watchdog_timeout_shutdown:	
  5108                           
  5109                           	psect	text2
  5110  287A                     __ptext2:	
  5111 ;; *************** function _statemachine *****************
  5112 ;; Defined at:
  5113 ;;		line 96 in file "main.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  success         1   79[BANK1 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5128 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5130 ;;      Totals:         0       0       1       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5131 ;;Total ram usage:        3 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:   11
  5134 ;; This function calls:
  5135 ;;		_AFE_UPDATE
  5136 ;;		_EUSART_Write_Text
  5137 ;;		_RGB_AWAIT_AFE_CONN
  5138 ;;		_RGB_color
  5139 ;;		_beginAFEcommunication
  5140 ;;		_init_AFE
  5141 ;;		_printcellParameters
  5142 ;;		_snprintf
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _statemachine
  5150  287A                     _statemachine:	
  5151                           
  5152                           ;main.c: 98:     switch (currState) {
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5156  287A  28D9               	goto	l7623
  5157  287B                     l7591:	
  5158                           
  5159                           ;main.c: 101:             if (tmr1_flag) {
  5160  287B  0023               	movlb	3	; select bank3
  5161  287C  0863               	movf	_tmr1_flag^(0+384),w	;volatile
  5162  287D  1903               	btfsc	3,2
  5163  287E  0008               	return
  5164                           
  5165                           ;main.c: 102:                 tmr1_flag = 0;
  5166  287F  01E3               	clrf	_tmr1_flag^(0+384)	;volatile
  5167                           
  5168                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5169  2880  31B3  23F2  31A8   	fcall	_RGB_AWAIT_AFE_CONN
  5170                           
  5171                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5172  2883  31AC  2428  31A8   	fcall	_beginAFEcommunication
  5173  2886  0020               	movlb	0	; select bank0
  5174  2887  0820               	movf	?_beginAFEcommunication,w
  5175  2888  0022               	movlb	2	; select bank2
  5176  2889  00E2               	movwf	??_statemachine^(0+256)
  5177  288A  0862               	movf	??_statemachine^(0+256),w
  5178  288B  0021               	movlb	1	; select bank1
  5179  288C  00EF               	movwf	statemachine@success^(0+128)
  5180                           
  5181                           ;main.c: 109:                 if (success) {
  5182  288D  086F               	movf	statemachine@success^(0+128),w
  5183  288E  1903               	btfsc	3,2
  5184  288F  0008               	return
  5185                           
  5186                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5187  2890  0020               	movlb	0	; select bank0
  5188  2891  1018               	bcf	24,0	;volatile
  5189                           
  5190                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5191  2892  0021               	movlb	1	; select bank1
  5192  2893  1011               	bcf	17,0	;volatile
  5193                           
  5194                           ;main.c: 112:                     RGB_color(0);
  5195  2894  3000               	movlw	0
  5196  2895  00F1               	movwf	RGB_color@color
  5197  2896  00F2               	movwf	RGB_color@color+1
  5198  2897  31B3  23D1         	fcall	_RGB_color
  5199                           
  5200                           ;main.c: 113:                     tmr1_flag = 0;
  5201  2899  0023               	movlb	3	; select bank3
  5202  289A  01E3               	clrf	_tmr1_flag^(0+384)	;volatile
  5203                           
  5204                           ;main.c: 126:                     currState = 1;
  5205  289B  01E7               	clrf	_currState^(0+384)
  5206  289C  0AE7               	incf	_currState^(0+384),f
  5207  289D  0008               	return
  5208  289E                     l7609:	
  5209                           
  5210                           ;main.c: 135:             init_AFE();
  5211  289E  31B7  2744  31A8   	fcall	_init_AFE
  5212                           
  5213                           ;main.c: 154:             RGB_color(1);
  5214  28A1  3001               	movlw	1
  5215  28A2  00F1               	movwf	RGB_color@color
  5216  28A3  3000               	movlw	0
  5217  28A4  00F2               	movwf	RGB_color@color+1
  5218  28A5  31B3  23D1         	fcall	_RGB_color
  5219                           
  5220                           ;main.c: 155:             currState = 2;
  5221  28A7  3002               	movlw	2
  5222  28A8  0022               	movlb	2	; select bank2
  5223  28A9  00E2               	movwf	??_statemachine^(0+256)
  5224  28AA  0862               	movf	??_statemachine^(0+256),w
  5225  28AB  0023               	movlb	3	; select bank3
  5226  28AC  00E7               	movwf	_currState^(0+384)
  5227                           
  5228                           ;main.c: 156:             break;
  5229  28AD  0008               	return
  5230  28AE                     l7613:	
  5231                           
  5232                           ;main.c: 160:             AFE_UPDATE();
  5233  28AE  31B4  243A  31A8   	fcall	_AFE_UPDATE
  5234  28B1  0064               	clrwdt	;# 
  5235                           
  5236                           ;main.c: 164:             printcellParameters();
  5237  28B2  31A6  26F6  31A8   	fcall	_printcellParameters
  5238                           
  5239                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5240  28B5  3066               	movlw	102
  5241  28B6  0022               	movlb	2	; select bank2
  5242  28B7  00E3               	movwf	(??_statemachine^(0+256)+1)
  5243  28B8  3076               	movlw	118
  5244  28B9  00E2               	movwf	??_statemachine^(0+256)
  5245  28BA  30C1               	movlw	193
  5246  28BB                     u9507:	
  5247  28BB  0B89               	decfsz	9,f
  5248  28BC  28BB               	goto	u9507
  5249  28BD  0BE2               	decfsz	??_statemachine^(0+256),f
  5250  28BE  28BB               	goto	u9507
  5251  28BF  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5252  28C0  28BB               	goto	u9507
  5253                           
  5254                           ;main.c: 168:             break;
  5255  28C1  0008               	return
  5256  28C2                     l7617:	
  5257                           
  5258                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5259  28C2  3071               	movlw	113
  5260  28C3  0021               	movlb	1	; select bank1
  5261  28C4  00CC               	movwf	snprintf@s^(0+128)
  5262  28C5  3027               	movlw	39
  5263  28C6  00CD               	movwf	(snprintf@s^(0+128)+1)
  5264  28C7  307F               	movlw	127
  5265  28C8  00CE               	movwf	snprintf@n^(0+128)
  5266  28C9  3000               	movlw	0
  5267  28CA  00CF               	movwf	(snprintf@n^(0+128)+1)
  5268  28CB  30BA               	movlw	low (STR_1| (0+32768))
  5269  28CC  00D0               	movwf	snprintf@fmt^(0+128)
  5270  28CD  30B8               	movlw	high (STR_1| (0+32768))
  5271  28CE  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5272  28CF  31B3  2344  31A8   	fcall	_snprintf
  5273                           
  5274                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5275  28D2  3071               	movlw	113
  5276  28D3  00F2               	movwf	EUSART_Write_Text@text
  5277  28D4  3027               	movlw	39
  5278  28D5  00F3               	movwf	EUSART_Write_Text@text+1
  5279  28D6  31B3  230F         	fcall	_EUSART_Write_Text
  5280                           
  5281                           ;main.c: 174:             break;
  5282  28D8  0008               	return
  5283  28D9                     l7623:	
  5284  28D9  0023               	movlb	3	; select bank3
  5285  28DA  0867               	movf	_currState^(0+384),w
  5286  28DB  0022               	movlb	2	; select bank2
  5287  28DC  00E2               	movwf	??_statemachine^(0+256)
  5288  28DD  01E3               	clrf	(??_statemachine^(0+256)+1)
  5289                           
  5290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5291                           ; Switch size 1, requested type "simple"
  5292                           ; Number of cases is 1, Range of values is 0 to 0
  5293                           ; switch strategies available:
  5294                           ; Name         Instructions Cycles
  5295                           ; simple_byte            4     3 (average)
  5296                           ; direct_byte            8     6 (fixed)
  5297                           ; jumptable            260     6 (fixed)
  5298                           ;	Chosen strategy is simple_byte
  5299  28DE  0863               	movf	(??_statemachine+1)^(0+256),w
  5300  28DF  3A00               	xorlw	0	; case 0
  5301  28E0  1903               	skipnz
  5302  28E1  28E3               	goto	l7807
  5303  28E2  28F1               	goto	l174
  5304  28E3                     l7807:	
  5305                           
  5306                           ; Switch size 1, requested type "simple"
  5307                           ; Number of cases is 4, Range of values is 0 to 3
  5308                           ; switch strategies available:
  5309                           ; Name         Instructions Cycles
  5310                           ; simple_byte           13     7 (average)
  5311                           ; direct_byte           14     6 (fixed)
  5312                           ; jumptable            260     6 (fixed)
  5313                           ;	Chosen strategy is simple_byte
  5314  28E3  0862               	movf	??_statemachine^(0+256),w
  5315  28E4  3A00               	xorlw	0	; case 0
  5316  28E5  1903               	skipnz
  5317  28E6  287B               	goto	l7591
  5318  28E7  3A01               	xorlw	1	; case 1
  5319  28E8  1903               	skipnz
  5320  28E9  289E               	goto	l7609
  5321  28EA  3A03               	xorlw	3	; case 2
  5322  28EB  1903               	skipnz
  5323  28EC  28AE               	goto	l7613
  5324  28ED  3A01               	xorlw	1	; case 3
  5325  28EE  1903               	skipnz
  5326  28EF  28C2               	goto	l7617
  5327  28F0  28F1               	goto	l174
  5328  28F1                     l174:	
  5329  28F1  0008               	return
  5330  28F2                     __end_of_statemachine:	
  5331                           
  5332                           	psect	text3
  5333  26F6                     __ptext3:	
  5334 ;; *************** function _printcellParameters *****************
  5335 ;; Defined at:
  5336 ;;		line 323 in file "BQ76920.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:   10
  5357 ;; This function calls:
  5358 ;;		_EUSART_Write_Text
  5359 ;;		_snprintf
  5360 ;; This function is called by:
  5361 ;;		_statemachine
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           
  5366                           ;psect for function _printcellParameters
  5367  26F6                     _printcellParameters:	
  5368                           
  5369                           ;BQ76920.c: 348:     snprintf(messageBuffer, 127, "%d,",batVoltage);
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5373  26F6  3071               	movlw	113
  5374  26F7  0021               	movlb	1	; select bank1
  5375  26F8  00CC               	movwf	snprintf@s^(0+128)
  5376  26F9  3027               	movlw	39
  5377  26FA  00CD               	movwf	(snprintf@s^(0+128)+1)
  5378  26FB  307F               	movlw	127
  5379  26FC  00CE               	movwf	snprintf@n^(0+128)
  5380  26FD  3000               	movlw	0
  5381  26FE  00CF               	movwf	(snprintf@n^(0+128)+1)
  5382  26FF  30E4               	movlw	low ((STR_6+17)| (0+32768))
  5383  2700  00D0               	movwf	snprintf@fmt^(0+128)
  5384  2701  30B9               	movlw	high ((STR_6+17)| (0+32768))
  5385  2702  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5386  2703  0023               	movlb	3	; select bank3
  5387  2704  0851               	movf	(_batVoltage+3)^(0+384),w
  5388  2705  0021               	movlb	1	; select bank1
  5389  2706  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5390  2707  0023               	movlb	3	; select bank3
  5391  2708  0850               	movf	(_batVoltage+2)^(0+384),w
  5392  2709  0021               	movlb	1	; select bank1
  5393  270A  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5394  270B  0023               	movlb	3	; select bank3
  5395  270C  084F               	movf	(_batVoltage+1)^(0+384),w
  5396  270D  0021               	movlb	1	; select bank1
  5397  270E  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5398  270F  0023               	movlb	3	; select bank3
  5399  2710  084E               	movf	_batVoltage^(0+384),w
  5400  2711  0021               	movlb	1	; select bank1
  5401  2712  00D2               	movwf	(?_snprintf^(0+128)+6)
  5402  2713  31B3  2344  31A6   	fcall	_snprintf
  5403                           
  5404                           ;BQ76920.c: 349:     EUSART_Write_Text(messageBuffer);
  5405  2716  3071               	movlw	113
  5406  2717  00F2               	movwf	EUSART_Write_Text@text
  5407  2718  3027               	movlw	39
  5408  2719  00F3               	movwf	EUSART_Write_Text@text+1
  5409  271A  31B3  230F  31A6   	fcall	_EUSART_Write_Text
  5410                           
  5411                           ;BQ76920.c: 350:     snprintf(messageBuffer, 127, "%d,",batCurrent);
  5412  271D  3071               	movlw	113
  5413  271E  0021               	movlb	1	; select bank1
  5414  271F  00CC               	movwf	snprintf@s^(0+128)
  5415  2720  3027               	movlw	39
  5416  2721  00CD               	movwf	(snprintf@s^(0+128)+1)
  5417  2722  307F               	movlw	127
  5418  2723  00CE               	movwf	snprintf@n^(0+128)
  5419  2724  3000               	movlw	0
  5420  2725  00CF               	movwf	(snprintf@n^(0+128)+1)
  5421  2726  30E4               	movlw	low ((STR_6+17)| (0+32768))
  5422  2727  00D0               	movwf	snprintf@fmt^(0+128)
  5423  2728  30B9               	movlw	high ((STR_6+17)| (0+32768))
  5424  2729  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5425  272A  0023               	movlb	3	; select bank3
  5426  272B  084D               	movf	(_batCurrent+3)^(0+384),w
  5427  272C  0021               	movlb	1	; select bank1
  5428  272D  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5429  272E  0023               	movlb	3	; select bank3
  5430  272F  084C               	movf	(_batCurrent+2)^(0+384),w
  5431  2730  0021               	movlb	1	; select bank1
  5432  2731  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5433  2732  0023               	movlb	3	; select bank3
  5434  2733  084B               	movf	(_batCurrent+1)^(0+384),w
  5435  2734  0021               	movlb	1	; select bank1
  5436  2735  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5437  2736  0023               	movlb	3	; select bank3
  5438  2737  084A               	movf	_batCurrent^(0+384),w
  5439  2738  0021               	movlb	1	; select bank1
  5440  2739  00D2               	movwf	(?_snprintf^(0+128)+6)
  5441  273A  31B3  2344  31A6   	fcall	_snprintf
  5442                           
  5443                           ;BQ76920.c: 351:     EUSART_Write_Text(messageBuffer);
  5444  273D  3071               	movlw	113
  5445  273E  00F2               	movwf	EUSART_Write_Text@text
  5446  273F  3027               	movlw	39
  5447  2740  00F3               	movwf	EUSART_Write_Text@text+1
  5448  2741  31B3  230F  31A6   	fcall	_EUSART_Write_Text
  5449                           
  5450                           ;BQ76920.c: 352:     snprintf(messageBuffer, 127, "%d,",temperatureThermistor);
  5451  2744  3071               	movlw	113
  5452  2745  0021               	movlb	1	; select bank1
  5453  2746  00CC               	movwf	snprintf@s^(0+128)
  5454  2747  3027               	movlw	39
  5455  2748  00CD               	movwf	(snprintf@s^(0+128)+1)
  5456  2749  307F               	movlw	127
  5457  274A  00CE               	movwf	snprintf@n^(0+128)
  5458  274B  3000               	movlw	0
  5459  274C  00CF               	movwf	(snprintf@n^(0+128)+1)
  5460  274D  30E4               	movlw	low ((STR_6+17)| (0+32768))
  5461  274E  00D0               	movwf	snprintf@fmt^(0+128)
  5462  274F  30B9               	movlw	high ((STR_6+17)| (0+32768))
  5463  2750  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5464  2751  0023               	movlb	3	; select bank3
  5465  2752  0849               	movf	(_temperatureThermistor+3)^(0+384),w
  5466  2753  0021               	movlb	1	; select bank1
  5467  2754  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5468  2755  0023               	movlb	3	; select bank3
  5469  2756  0848               	movf	(_temperatureThermistor+2)^(0+384),w
  5470  2757  0021               	movlb	1	; select bank1
  5471  2758  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5472  2759  0023               	movlb	3	; select bank3
  5473  275A  0847               	movf	(_temperatureThermistor+1)^(0+384),w
  5474  275B  0021               	movlb	1	; select bank1
  5475  275C  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5476  275D  0023               	movlb	3	; select bank3
  5477  275E  0846               	movf	_temperatureThermistor^(0+384),w
  5478  275F  0021               	movlb	1	; select bank1
  5479  2760  00D2               	movwf	(?_snprintf^(0+128)+6)
  5480  2761  31B3  2344  31A6   	fcall	_snprintf
  5481                           
  5482                           ;BQ76920.c: 353:     EUSART_Write_Text(messageBuffer);
  5483  2764  3071               	movlw	113
  5484  2765  00F2               	movwf	EUSART_Write_Text@text
  5485  2766  3027               	movlw	39
  5486  2767  00F3               	movwf	EUSART_Write_Text@text+1
  5487  2768  31B3  230F  31A6   	fcall	_EUSART_Write_Text
  5488                           
  5489                           ;BQ76920.c: 354:     snprintf(messageBuffer, 127, "0,");
  5490  276B  3071               	movlw	113
  5491  276C  0021               	movlb	1	; select bank1
  5492  276D  00CC               	movwf	snprintf@s^(0+128)
  5493  276E  3027               	movlw	39
  5494  276F  00CD               	movwf	(snprintf@s^(0+128)+1)
  5495  2770  307F               	movlw	127
  5496  2771  00CE               	movwf	snprintf@n^(0+128)
  5497  2772  3000               	movlw	0
  5498  2773  00CF               	movwf	(snprintf@n^(0+128)+1)
  5499  2774  30C8               	movlw	low (STR_5| (0+32768))
  5500  2775  00D0               	movwf	snprintf@fmt^(0+128)
  5501  2776  30BA               	movlw	high (STR_5| (0+32768))
  5502  2777  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5503  2778  31B3  2344  31A6   	fcall	_snprintf
  5504                           
  5505                           ;BQ76920.c: 355:     EUSART_Write_Text(messageBuffer);
  5506  277B  3071               	movlw	113
  5507  277C  00F2               	movwf	EUSART_Write_Text@text
  5508  277D  3027               	movlw	39
  5509  277E  00F3               	movwf	EUSART_Write_Text@text+1
  5510  277F  31B3  230F  31A6   	fcall	_EUSART_Write_Text
  5511                           
  5512                           ;BQ76920.c: 356:     snprintf(messageBuffer, 127, "%%d, %d, %d, %d, %d,",cellVoltages[0]
      +                          ,cellVoltages[1],cellVoltages[2],cellVoltages[3],cellVoltages[4]);
  5513  2782  3071               	movlw	113
  5514  2783  0021               	movlb	1	; select bank1
  5515  2784  00CC               	movwf	snprintf@s^(0+128)
  5516  2785  3027               	movlw	39
  5517  2786  00CD               	movwf	(snprintf@s^(0+128)+1)
  5518  2787  307F               	movlw	127
  5519  2788  00CE               	movwf	snprintf@n^(0+128)
  5520  2789  3000               	movlw	0
  5521  278A  00CF               	movwf	(snprintf@n^(0+128)+1)
  5522  278B  30D3               	movlw	low (STR_6| (0+32768))
  5523  278C  00D0               	movwf	snprintf@fmt^(0+128)
  5524  278D  30B9               	movlw	high (STR_6| (0+32768))
  5525  278E  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5526  278F  0023               	movlb	3	; select bank3
  5527  2790  0835               	movf	(_cellVoltages+1)^(0+384),w
  5528  2791  0021               	movlb	1	; select bank1
  5529  2792  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5530  2793  0023               	movlb	3	; select bank3
  5531  2794  0834               	movf	_cellVoltages^(0+384),w
  5532  2795  0021               	movlb	1	; select bank1
  5533  2796  00D2               	movwf	(?_snprintf^(0+128)+6)
  5534  2797  0023               	movlb	3	; select bank3
  5535  2798  0837               	movf	((_cellVoltages+1)^(0+384)+2),w
  5536  2799  0021               	movlb	1	; select bank1
  5537  279A  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5538  279B  0023               	movlb	3	; select bank3
  5539  279C  0836               	movf	(_cellVoltages^(0+384)+2),w
  5540  279D  0021               	movlb	1	; select bank1
  5541  279E  00D4               	movwf	(?_snprintf^(0+128)+8)
  5542  279F  0023               	movlb	3	; select bank3
  5543  27A0  0839               	movf	((_cellVoltages+1)^(0+384)+4),w
  5544  27A1  0021               	movlb	1	; select bank1
  5545  27A2  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5546  27A3  0023               	movlb	3	; select bank3
  5547  27A4  0838               	movf	(_cellVoltages^(0+384)+4),w
  5548  27A5  0021               	movlb	1	; select bank1
  5549  27A6  00D6               	movwf	(?_snprintf^(0+128)+10)
  5550  27A7  0023               	movlb	3	; select bank3
  5551  27A8  083B               	movf	((_cellVoltages+1)^(0+384)+6),w
  5552  27A9  0021               	movlb	1	; select bank1
  5553  27AA  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5554  27AB  0023               	movlb	3	; select bank3
  5555  27AC  083A               	movf	(_cellVoltages^(0+384)+6),w
  5556  27AD  0021               	movlb	1	; select bank1
  5557  27AE  00D8               	movwf	(?_snprintf^(0+128)+12)
  5558  27AF  0023               	movlb	3	; select bank3
  5559  27B0  083D               	movf	((_cellVoltages+1)^(0+384)+8),w
  5560  27B1  0021               	movlb	1	; select bank1
  5561  27B2  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5562  27B3  0023               	movlb	3	; select bank3
  5563  27B4  083C               	movf	(_cellVoltages^(0+384)+8),w
  5564  27B5  0021               	movlb	1	; select bank1
  5565  27B6  00DA               	movwf	(?_snprintf^(0+128)+14)
  5566  27B7  31B3  2344  31A6   	fcall	_snprintf
  5567                           
  5568                           ;BQ76920.c: 357:     EUSART_Write_Text(messageBuffer);
  5569  27BA  3071               	movlw	113
  5570  27BB  00F2               	movwf	EUSART_Write_Text@text
  5571  27BC  3027               	movlw	39
  5572  27BD  00F3               	movwf	EUSART_Write_Text@text+1
  5573  27BE  31B3  230F  31A6   	fcall	_EUSART_Write_Text
  5574                           
  5575                           ;BQ76920.c: 358:     snprintf(messageBuffer, 127, "%d, %d, %d, %d, %d \n\r",cellSOC[0],c
      +                          ellSOC[1],cellSOC[2],cellSOC[3],cellSOC[4]);
  5576  27C1  3071               	movlw	113
  5577  27C2  0021               	movlb	1	; select bank1
  5578  27C3  00CC               	movwf	snprintf@s^(0+128)
  5579  27C4  3027               	movlw	39
  5580  27C5  00CD               	movwf	(snprintf@s^(0+128)+1)
  5581  27C6  307F               	movlw	127
  5582  27C7  00CE               	movwf	snprintf@n^(0+128)
  5583  27C8  3000               	movlw	0
  5584  27C9  00CF               	movwf	(snprintf@n^(0+128)+1)
  5585  27CA  3028               	movlw	low (STR_7| (0+32768))
  5586  27CB  00D0               	movwf	snprintf@fmt^(0+128)
  5587  27CC  30B9               	movlw	high (STR_7| (0+32768))
  5588  27CD  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5589  27CE  0023               	movlb	3	; select bank3
  5590  27CF  082B               	movf	(_cellSOC+1)^(0+384),w
  5591  27D0  0021               	movlb	1	; select bank1
  5592  27D1  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5593  27D2  0023               	movlb	3	; select bank3
  5594  27D3  082A               	movf	_cellSOC^(0+384),w
  5595  27D4  0021               	movlb	1	; select bank1
  5596  27D5  00D2               	movwf	(?_snprintf^(0+128)+6)
  5597  27D6  0023               	movlb	3	; select bank3
  5598  27D7  082D               	movf	((_cellSOC+1)^(0+384)+2),w
  5599  27D8  0021               	movlb	1	; select bank1
  5600  27D9  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5601  27DA  0023               	movlb	3	; select bank3
  5602  27DB  082C               	movf	(_cellSOC^(0+384)+2),w
  5603  27DC  0021               	movlb	1	; select bank1
  5604  27DD  00D4               	movwf	(?_snprintf^(0+128)+8)
  5605  27DE  0023               	movlb	3	; select bank3
  5606  27DF  082F               	movf	((_cellSOC+1)^(0+384)+4),w
  5607  27E0  0021               	movlb	1	; select bank1
  5608  27E1  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5609  27E2  0023               	movlb	3	; select bank3
  5610  27E3  082E               	movf	(_cellSOC^(0+384)+4),w
  5611  27E4  0021               	movlb	1	; select bank1
  5612  27E5  00D6               	movwf	(?_snprintf^(0+128)+10)
  5613  27E6  0023               	movlb	3	; select bank3
  5614  27E7  0831               	movf	((_cellSOC+1)^(0+384)+6),w
  5615  27E8  0021               	movlb	1	; select bank1
  5616  27E9  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5617  27EA  0023               	movlb	3	; select bank3
  5618  27EB  0830               	movf	(_cellSOC^(0+384)+6),w
  5619  27EC  0021               	movlb	1	; select bank1
  5620  27ED  00D8               	movwf	(?_snprintf^(0+128)+12)
  5621  27EE  0023               	movlb	3	; select bank3
  5622  27EF  0833               	movf	((_cellSOC+1)^(0+384)+8),w
  5623  27F0  0021               	movlb	1	; select bank1
  5624  27F1  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5625  27F2  0023               	movlb	3	; select bank3
  5626  27F3  0832               	movf	(_cellSOC^(0+384)+8),w
  5627  27F4  0021               	movlb	1	; select bank1
  5628  27F5  00DA               	movwf	(?_snprintf^(0+128)+14)
  5629  27F6  31B3  2344  31A6   	fcall	_snprintf
  5630                           
  5631                           ;BQ76920.c: 359:     EUSART_Write_Text(messageBuffer);
  5632  27F9  3071               	movlw	113
  5633  27FA  00F2               	movwf	EUSART_Write_Text@text
  5634  27FB  3027               	movlw	39
  5635  27FC  00F3               	movwf	EUSART_Write_Text@text+1
  5636  27FD  31B3  230F         	fcall	_EUSART_Write_Text
  5637  27FF  0008               	return
  5638  2800                     __end_of_printcellParameters:	
  5639                           
  5640                           	psect	text4
  5641  3344                     __ptext4:	
  5642 ;; *************** function _snprintf *****************
  5643 ;; Defined at:
  5644 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5647 ;;		 -> messageBuffer(127), 
  5648 ;;  n               2   46[BANK1 ] unsigned int 
  5649 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5650 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5651 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5652 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5653 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  5654 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  ret             2    0        int 
  5657 ;;  ap              1   79[BANK0 ] PTR void [1]
  5658 ;;		 -> ?_snprintf(2), 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  2   44[BANK1 ] int 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5668 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5669 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5671 ;;      Totals:         0       4      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5672 ;;Total ram usage:       20 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    9
  5675 ;; This function calls:
  5676 ;;		_vsnprintf
  5677 ;; This function is called by:
  5678 ;;		_statemachine
  5679 ;;		_printcellParameters
  5680 ;;		_printotAFERegisters
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           
  5685                           ;psect for function _snprintf
  5686  3344                     _snprintf:	
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5690  3344  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5691  3345  0020               	movlb	0	; select bank0
  5692  3346  00EC               	movwf	??_snprintf
  5693  3347  086C               	movf	??_snprintf,w
  5694  3348  00EF               	movwf	snprintf@ap
  5695  3349  0021               	movlb	1	; select bank1
  5696  334A  084D               	movf	(snprintf@s+1)^(0+128),w
  5697  334B  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5698  334C  084C               	movf	snprintf@s^(0+128),w
  5699  334D  00BB               	movwf	vsnprintf@s^(0+128)
  5700  334E  084F               	movf	(snprintf@n+1)^(0+128),w
  5701  334F  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5702  3350  084E               	movf	snprintf@n^(0+128),w
  5703  3351  00BD               	movwf	vsnprintf@n^(0+128)
  5704  3352  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5705  3353  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5706  3354  0850               	movf	snprintf@fmt^(0+128),w
  5707  3355  00BF               	movwf	vsnprintf@fmt^(0+128)
  5708  3356  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5709  3357  0020               	movlb	0	; select bank0
  5710  3358  00EC               	movwf	??_snprintf
  5711  3359  086C               	movf	??_snprintf,w
  5712  335A  0021               	movlb	1	; select bank1
  5713  335B  00C1               	movwf	vsnprintf@ap^(0+128)
  5714  335C  31A9  21EA         	fcall	_vsnprintf
  5715  335E  0008               	return
  5716  335F                     __end_of_snprintf:	
  5717                           
  5718                           	psect	text5
  5719  29EA                     __ptext5:	
  5720 ;; *************** function _vsnprintf *****************
  5721 ;; Defined at:
  5722 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5725 ;;		 -> messageBuffer(127), 
  5726 ;;  n               2   29[BANK1 ] unsigned int 
  5727 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5728 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5729 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5730 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5731 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  5732 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  5733 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5734 ;;		 -> snprintf@ap(1), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5737 ;;  cnt             2   36[BANK1 ] int 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  2   27[BANK1 ] int 
  5740 ;; Registers used:
  5741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5747 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5748 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5751 ;;Total ram usage:       19 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    8
  5754 ;; This function calls:
  5755 ;;		_vfprintf
  5756 ;; This function is called by:
  5757 ;;		_snprintf
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _vsnprintf
  5763  29EA                     _vsnprintf:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5767  29EA  3080               	movlw	128
  5768  29EB  0021               	movlb	1	; select bank1
  5769  29EC  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5770  29ED  3000               	movlw	0
  5771  29EE  1903               	skipnz
  5772  29EF  023D               	subwf	vsnprintf@n^(0+128),w
  5773  29F0  1C03               	skipc
  5774  29F1  29FD               	goto	l7231
  5775  29F2  304B               	movlw	75
  5776  29F3  0023               	movlb	3	; select bank3
  5777  29F4  00D2               	movwf	_errno^(0+384)
  5778  29F5  3000               	movlw	0
  5779  29F6  00D3               	movwf	(_errno^(0+384)+1)
  5780  29F7  30FF               	movlw	255
  5781  29F8  0021               	movlb	1	; select bank1
  5782  29F9  00BB               	movwf	?_vsnprintf^(0+128)
  5783  29FA  30FF               	movlw	255
  5784  29FB  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5785  29FC  0008               	return
  5786  29FD                     l7231:	
  5787  29FD  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5788  29FE  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5789  29FF  083B               	movf	vsnprintf@s^(0+128),w
  5790  2A00  00C6               	movwf	vsnprintf@f^(0+128)
  5791  2A01  3000               	movlw	0
  5792  2A02  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5793  2A03  3002               	movlw	2
  5794  2A04  1903               	skipnz
  5795  2A05  023D               	subwf	vsnprintf@n^(0+128),w
  5796  2A06  1C03               	skipc
  5797  2A07  2A11               	goto	l7237
  5798  2A08  083D               	movf	vsnprintf@n^(0+128),w
  5799  2A09  3EFF               	addlw	255
  5800  2A0A  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5801  2A0B  30FF               	movlw	255
  5802  2A0C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5803  2A0D  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5804  2A0E  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5805  2A0F  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5806  2A10  2A19               	goto	l7239
  5807  2A11                     l7237:	
  5808  2A11  3001               	movlw	1
  5809  2A12  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5810  2A13  3000               	movlw	0
  5811  2A14  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5812  2A15  3001               	movlw	1
  5813  2A16  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5814  2A17  3000               	movlw	0
  5815  2A18  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5816  2A19                     l7239:	
  5817  2A19  30C6               	movlw	low vsnprintf@f
  5818  2A1A  0020               	movlb	0	; select bank0
  5819  2A1B  00E1               	movwf	vfprintf@fp
  5820  2A1C  3000               	movlw	high vsnprintf@f
  5821  2A1D  00E2               	movwf	vfprintf@fp+1
  5822  2A1E  0021               	movlb	1	; select bank1
  5823  2A1F  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5824  2A20  0020               	movlb	0	; select bank0
  5825  2A21  00E4               	movwf	vfprintf@fmt+1
  5826  2A22  0021               	movlb	1	; select bank1
  5827  2A23  083F               	movf	vsnprintf@fmt^(0+128),w
  5828  2A24  0020               	movlb	0	; select bank0
  5829  2A25  00E3               	movwf	vfprintf@fmt
  5830  2A26  0021               	movlb	1	; select bank1
  5831  2A27  0841               	movf	vsnprintf@ap^(0+128),w
  5832  2A28  0020               	movlb	0	; select bank0
  5833  2A29  00EA               	movwf	??_vsnprintf
  5834  2A2A  086A               	movf	??_vsnprintf,w
  5835  2A2B  00E5               	movwf	vfprintf@ap
  5836  2A2C  31B4  249B  31A9   	fcall	_vfprintf
  5837  2A2F  0020               	movlb	0	; select bank0
  5838  2A30  0862               	movf	?_vfprintf+1,w
  5839  2A31  0021               	movlb	1	; select bank1
  5840  2A32  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5841  2A33  0020               	movlb	0	; select bank0
  5842  2A34  0861               	movf	?_vfprintf,w
  5843  2A35  0021               	movlb	1	; select bank1
  5844  2A36  00C4               	movwf	vsnprintf@cnt^(0+128)
  5845  2A37  083D               	movf	vsnprintf@n^(0+128),w
  5846  2A38  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5847  2A39  1D03               	btfss	3,2
  5848  2A3A  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5849  2A3B  2A62               	goto	l7253
  5850  2A3C  083D               	movf	vsnprintf@n^(0+128),w
  5851  2A3D  3EFF               	addlw	255
  5852  2A3E  0020               	movlb	0	; select bank0
  5853  2A3F  00EA               	movwf	??_vsnprintf
  5854  2A40  30FF               	movlw	255
  5855  2A41  0021               	movlb	1	; select bank1
  5856  2A42  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5857  2A43  0020               	movlb	0	; select bank0
  5858  2A44  00EB               	movwf	??_vsnprintf+1
  5859  2A45  086B               	movf	??_vsnprintf+1,w
  5860  2A46  0021               	movlb	1	; select bank1
  5861  2A47  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5862  2A48  1D03               	skipz
  5863  2A49  2A4E               	goto	u9175
  5864  2A4A  0020               	movlb	0	; select bank0
  5865  2A4B  086A               	movf	??_vsnprintf,w
  5866  2A4C  0021               	movlb	1	; select bank1
  5867  2A4D  0244               	subwf	vsnprintf@cnt^(0+128),w
  5868  2A4E                     u9175:	
  5869  2A4E  1C03               	skipc
  5870  2A4F  2A57               	goto	l7249
  5871  2A50  083D               	movf	vsnprintf@n^(0+128),w
  5872  2A51  3EFF               	addlw	255
  5873  2A52  00C2               	movwf	_vsnprintf$1882^(0+128)
  5874  2A53  30FF               	movlw	255
  5875  2A54  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5876  2A55  00C3               	movwf	(_vsnprintf$1882+1)^(0+128)
  5877  2A56  2A5B               	goto	l7251
  5878  2A57                     l7249:	
  5879  2A57  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5880  2A58  00C3               	movwf	(_vsnprintf$1882+1)^(0+128)
  5881  2A59  0844               	movf	vsnprintf@cnt^(0+128),w
  5882  2A5A  00C2               	movwf	_vsnprintf$1882^(0+128)
  5883  2A5B                     l7251:	
  5884  2A5B  0842               	movf	_vsnprintf$1882^(0+128),w
  5885  2A5C  073B               	addwf	vsnprintf@s^(0+128),w
  5886  2A5D  0086               	movwf	6
  5887  2A5E  0843               	movf	(_vsnprintf$1882+1)^(0+128),w
  5888  2A5F  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5889  2A60  0087               	movwf	7
  5890  2A61  0181               	clrf	1
  5891  2A62                     l7253:	
  5892  2A62  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5893  2A63  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5894  2A64  0844               	movf	vsnprintf@cnt^(0+128),w
  5895  2A65  00BB               	movwf	?_vsnprintf^(0+128)
  5896  2A66  0008               	return
  5897  2A67                     __end_of_vsnprintf:	
  5898                           
  5899                           	psect	text6
  5900  349B                     __ptext6:	
  5901 ;; *************** function _vfprintf *****************
  5902 ;; Defined at:
  5903 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5906 ;;		 -> vsnprintf@f(6), 
  5907 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5908 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5909 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5910 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5911 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  5912 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  5913 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5914 ;;		 -> snprintf@ap(1), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5917 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  5918 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  5919 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  5920 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  5921 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  2   65[BANK0 ] int 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5931 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        9 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    7
  5938 ;; This function calls:
  5939 ;;		_vfpfcnvrt
  5940 ;; This function is called by:
  5941 ;;		_vsnprintf
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _vfprintf
  5947  349B                     _vfprintf:	
  5948                           
  5949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5953  349B  0020               	movlb	0	; select bank0
  5954  349C  0864               	movf	vfprintf@fmt+1,w
  5955  349D  00E9               	movwf	vfprintf@cfmt+1
  5956  349E  0863               	movf	vfprintf@fmt,w
  5957  349F  00E8               	movwf	vfprintf@cfmt
  5958                           
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5960  34A0  0023               	movlb	3	; select bank3
  5961  34A1  01D4               	clrf	_nout^(0+384)
  5962  34A2  01D5               	clrf	(_nout+1)^(0+384)
  5963  34A3                     l7137:	
  5964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5965                           
  5966                           
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5968  34A3  0020               	movlb	0	; select bank0
  5969  34A4  0868               	movf	vfprintf@cfmt,w
  5970  34A5  0084               	movwf	4
  5971  34A6  0869               	movf	vfprintf@cfmt+1,w
  5972  34A7  0085               	movwf	5
  5973  34A8  0012               	moviw fsr0++
  5974  34A9  1903               	btfsc	3,2
  5975  34AA  2CC3               	goto	l7139
  5976                           
  5977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5978  34AB  0862               	movf	vfprintf@fp+1,w
  5979  34AC  00D8               	movwf	vfpfcnvrt@fp+1
  5980  34AD  0861               	movf	vfprintf@fp,w
  5981  34AE  00D7               	movwf	vfpfcnvrt@fp
  5982  34AF  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5983  34B0  00E6               	movwf	??_vfprintf
  5984  34B1  0866               	movf	??_vfprintf,w
  5985  34B2  00D9               	movwf	vfpfcnvrt@fmt
  5986  34B3  0865               	movf	vfprintf@ap,w
  5987  34B4  00E7               	movwf	??_vfprintf+1
  5988  34B5  0867               	movf	??_vfprintf+1,w
  5989  34B6  00DA               	movwf	vfpfcnvrt@ap
  5990  34B7  319E  265C  31B4   	fcall	_vfpfcnvrt
  5991  34BA  0020               	movlb	0	; select bank0
  5992  34BB  0857               	movf	?_vfpfcnvrt,w
  5993  34BC  0023               	movlb	3	; select bank3
  5994  34BD  07D4               	addwf	_nout^(0+384),f
  5995  34BE  0020               	movlb	0	; select bank0
  5996  34BF  0858               	movf	?_vfpfcnvrt+1,w
  5997  34C0  0023               	movlb	3	; select bank3
  5998  34C1  3DD5               	addwfc	(_nout+1)^(0+384),f
  5999  34C2  2CA3               	goto	l7137
  6000  34C3                     l7139:	
  6001                           
  6002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6003  34C3  0023               	movlb	3	; select bank3
  6004  34C4  0855               	movf	(_nout+1)^(0+384),w
  6005  34C5  0020               	movlb	0	; select bank0
  6006  34C6  00E2               	movwf	?_vfprintf+1
  6007  34C7  0023               	movlb	3	; select bank3
  6008  34C8  0854               	movf	_nout^(0+384),w
  6009  34C9  0020               	movlb	0	; select bank0
  6010  34CA  00E1               	movwf	?_vfprintf
  6011  34CB  0008               	return
  6012  34CC                     __end_of_vfprintf:	
  6013                           
  6014                           	psect	text7
  6015  1E5C                     __ptext7:	
  6016 ;; *************** function _vfpfcnvrt *****************
  6017 ;; Defined at:
  6018 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6021 ;;		 -> vsnprintf@f(6), 
  6022 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6023 ;;		 -> vfprintf@cfmt(2), 
  6024 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6025 ;;		 -> snprintf@ap(1), 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  llu             8   19[BANK1 ] unsigned long long 
  6028 ;;  ll              8    8[BANK1 ] long long 
  6029 ;;  f               4    0        long long 
  6030 ;;  ct              3    0        unsigned char [3]
  6031 ;;  vp              2   16[BANK1 ] PTR void 
  6032 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6033 ;;  done            2    2[BANK1 ] int 
  6034 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6035 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6036 ;;  i               2    0        int 
  6037 ;;  c               1   18[BANK1 ] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  2   55[BANK0 ] int 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:       37 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    6
  6054 ;; This function calls:
  6055 ;;		_atoi
  6056 ;;		_ctoa
  6057 ;;		_dtoa
  6058 ;;		_fputc
  6059 ;;		_isdigit
  6060 ;;		_otoa
  6061 ;;		_stoa
  6062 ;;		_strncmp
  6063 ;;		_utoa
  6064 ;;		_xtoa
  6065 ;; This function is called by:
  6066 ;;		_vfprintf
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _vfpfcnvrt
  6072  1E5C                     _vfpfcnvrt:	
  6073                           
  6074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6075                           
  6076                           ;incstack = 0
  6077                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6078  1E5C  0020               	movlb	0	; select bank0
  6079  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  6080  1E5E  0086               	movwf	6
  6081  1E5F  0187               	clrf	7
  6082  1E60  3F40               	moviw [0]fsr1
  6083  1E61  00DB               	movwf	??_vfpfcnvrt
  6084  1E62  3F41               	moviw [1]fsr1
  6085  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6086  1E64  085B               	movf	??_vfpfcnvrt,w
  6087  1E65  0084               	movwf	4
  6088  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6089  1E67  0085               	movwf	5
  6090  1E68  0012               	moviw fsr0++
  6091  1E69  3A25               	xorlw	37
  6092  1E6A  1D03               	btfss	3,2
  6093  1E6B  2FFE               	goto	L7
  6094                           
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6096  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6097  1E6D  0086               	movwf	6
  6098  1E6E  0187               	clrf	7
  6099  1E6F  3001               	movlw	1
  6100  1E70  0781               	addwf	1,f
  6101  1E71  3141               	addfsr 1,1
  6102  1E72  1803               	skipnc
  6103  1E73  0A81               	incf	1,f
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6106  1E74  0022               	movlb	2	; select bank2
  6107  1E75  01E6               	clrf	_width^(0+256)
  6108  1E76  01E7               	clrf	(_width+1)^(0+256)
  6109  1E77  01EA               	clrf	_flags^(0+256)
  6110  1E78  01EB               	clrf	(_flags+1)^(0+256)
  6111                           
  6112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6113  1E79  30FF               	movlw	255
  6114  1E7A  00E8               	movwf	_prec^(0+256)
  6115  1E7B  30FF               	movlw	255
  6116  1E7C  00E9               	movwf	(_prec^(0+256)+1)
  6117                           
  6118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6119  1E7D  0021               	movlb	1	; select bank1
  6120  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6121  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6122                           
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6124  1E80  2E9E               	goto	l6773
  6125  1E81                     l867:	
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6127                           
  6128                           
  6129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6130  1E81  0022               	movlb	2	; select bank2
  6131  1E82  146A               	bsf	_flags^(0+256),0
  6132  1E83                     l6757:	
  6133                           
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6135  1E83  0020               	movlb	0	; select bank0
  6136  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6137  1E85  0086               	movwf	6
  6138  1E86  0187               	clrf	7
  6139  1E87  3001               	movlw	1
  6140  1E88  0781               	addwf	1,f
  6141  1E89  3141               	addfsr 1,1
  6142  1E8A  1803               	skipnc
  6143  1E8B  0A81               	incf	1,f
  6144                           
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6146  1E8C  2E9E               	goto	l6773
  6147  1E8D                     l869:	
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6149                           
  6150                           
  6151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6152  1E8D  0022               	movlb	2	; select bank2
  6153  1E8E  14EA               	bsf	_flags^(0+256),1
  6154  1E8F  2E83               	goto	l6757
  6155  1E90                     l870:	
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6157                           
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6160  1E90  0022               	movlb	2	; select bank2
  6161  1E91  156A               	bsf	_flags^(0+256),2
  6162  1E92  2E83               	goto	l6757
  6163  1E93                     l871:	
  6164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6165                           
  6166                           
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6168  1E93  0022               	movlb	2	; select bank2
  6169  1E94  15EA               	bsf	_flags^(0+256),3
  6170  1E95  2E83               	goto	l6757
  6171  1E96                     l872:	
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6173                           
  6174                           
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6176  1E96  0022               	movlb	2	; select bank2
  6177  1E97  166A               	bsf	_flags^(0+256),4
  6178  1E98  2E83               	goto	l6757
  6179  1E99                     l6767:	
  6180                           
  6181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6182  1E99  3001               	movlw	1
  6183  1E9A  0021               	movlb	1	; select bank1
  6184  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6185  1E9C  3000               	movlw	0
  6186  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6187  1E9E                     l6773:	
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6189                           
  6190                           
  6191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6192  1E9E  0021               	movlb	1	; select bank1
  6193  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6194  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6195  1EA1  1D03               	btfss	3,2
  6196  1EA2  2EC9               	goto	l874
  6197  1EA3  0020               	movlb	0	; select bank0
  6198  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6199  1EA5  0086               	movwf	6
  6200  1EA6  0187               	clrf	7
  6201  1EA7  3F40               	moviw [0]fsr1
  6202  1EA8  00DB               	movwf	??_vfpfcnvrt
  6203  1EA9  3F41               	moviw [1]fsr1
  6204  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6205  1EAB  085B               	movf	??_vfpfcnvrt,w
  6206  1EAC  0084               	movwf	4
  6207  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6208  1EAE  0085               	movwf	5
  6209  1EAF  0800               	movf	0,w	;code access
  6210  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6211  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6212                           
  6213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6214                           ; Switch size 1, requested type "simple"
  6215                           ; Number of cases is 1, Range of values is 0 to 0
  6216                           ; switch strategies available:
  6217                           ; Name         Instructions Cycles
  6218                           ; simple_byte            4     3 (average)
  6219                           ; direct_byte            8     6 (fixed)
  6220                           ; jumptable            260     6 (fixed)
  6221                           ;	Chosen strategy is simple_byte
  6222  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6223  1EB3  3A00               	xorlw	0	; case 0
  6224  1EB4  1903               	skipnz
  6225  1EB5  2EB7               	goto	l7809
  6226  1EB6  2E99               	goto	l6767
  6227  1EB7                     l7809:	
  6228                           
  6229                           ; Switch size 1, requested type "simple"
  6230                           ; Number of cases is 5, Range of values is 32 to 48
  6231                           ; switch strategies available:
  6232                           ; Name         Instructions Cycles
  6233                           ; simple_byte           16     9 (average)
  6234                           ; direct_byte           43     9 (fixed)
  6235                           ; jumptable            263     9 (fixed)
  6236                           ;	Chosen strategy is simple_byte
  6237  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6238  1EB8  3A20               	xorlw	32	; case 32
  6239  1EB9  1903               	skipnz
  6240  1EBA  2E93               	goto	l871
  6241  1EBB  3A03               	xorlw	3	; case 35
  6242  1EBC  1903               	skipnz
  6243  1EBD  2E96               	goto	l872
  6244  1EBE  3A08               	xorlw	8	; case 43
  6245  1EBF  1903               	skipnz
  6246  1EC0  2E90               	goto	l870
  6247  1EC1  3A06               	xorlw	6	; case 45
  6248  1EC2  1903               	skipnz
  6249  1EC3  2E81               	goto	l867
  6250  1EC4  3A1D               	xorlw	29	; case 48
  6251  1EC5  1903               	skipnz
  6252  1EC6  2E8D               	goto	l869
  6253  1EC7  2E99               	goto	l6767
  6254  1EC8  2E9E               	goto	l6773
  6255  1EC9                     l874:	
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6258  1EC9  0022               	movlb	2	; select bank2
  6259  1ECA  1C6A               	btfss	_flags^(0+256),0
  6260  1ECB  2ED0               	goto	l6777
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6263  1ECC  30FD               	movlw	253
  6264  1ECD  05EA               	andwf	_flags^(0+256),f
  6265  1ECE  30FF               	movlw	255
  6266  1ECF  05EB               	andwf	(_flags+1)^(0+256),f
  6267  1ED0                     l6777:	
  6268                           
  6269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6270  1ED0  0020               	movlb	0	; select bank0
  6271  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6272  1ED2  0086               	movwf	6
  6273  1ED3  0187               	clrf	7
  6274  1ED4  3F40               	moviw [0]fsr1
  6275  1ED5  00DB               	movwf	??_vfpfcnvrt
  6276  1ED6  3F41               	moviw [1]fsr1
  6277  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6278  1ED8  085B               	movf	??_vfpfcnvrt,w
  6279  1ED9  0084               	movwf	4
  6280  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6281  1EDB  0085               	movwf	5
  6282  1EDC  0012               	moviw fsr0++
  6283  1EDD  3A2A               	xorlw	42
  6284  1EDE  1D03               	btfss	3,2
  6285  1EDF  2EFE               	goto	l6789
  6286                           
  6287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6288  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6289  1EE1  0086               	movwf	6
  6290  1EE2  0187               	clrf	7
  6291  1EE3  3001               	movlw	1
  6292  1EE4  0781               	addwf	1,f
  6293  1EE5  3141               	addfsr 1,1
  6294  1EE6  1803               	skipnc
  6295  1EE7  0A81               	incf	1,f
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6298  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6299  1EE9  0086               	movwf	6
  6300  1EEA  0187               	clrf	7
  6301  1EEB  0801               	movf	1,w
  6302  1EEC  0084               	movwf	4
  6303  1EED  0185               	clrf	5
  6304  1EEE  3002               	movlw	2
  6305  1EEF  0781               	addwf	1,f
  6306  1EF0  3F00               	moviw [0]fsr0
  6307  1EF1  0022               	movlb	2	; select bank2
  6308  1EF2  00E6               	movwf	_width^(0+256)
  6309  1EF3  3F01               	moviw [1]fsr0
  6310  1EF4  00E7               	movwf	(_width+1)^(0+256)
  6311                           
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6313  1EF5  1FE7               	btfss	(_width+1)^(0+256),7
  6314  1EF6  2F41               	goto	l6799
  6315                           
  6316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6317  1EF7  146A               	bsf	_flags^(0+256),0
  6318                           
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6320  1EF8  09E6               	comf	_width^(0+256),f
  6321  1EF9  09E7               	comf	(_width+1)^(0+256),f
  6322  1EFA  0AE6               	incf	_width^(0+256),f
  6323  1EFB  1903               	skipnz
  6324  1EFC  0AE7               	incf	(_width+1)^(0+256),f
  6325  1EFD  2F41               	goto	l6799
  6326  1EFE                     l6789:	
  6327                           
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6329  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6330  1EFF  0086               	movwf	6
  6331  1F00  0187               	clrf	7
  6332  1F01  3F40               	moviw [0]fsr1
  6333  1F02  00F7               	movwf	atoi@s
  6334  1F03  3F41               	moviw [1]fsr1
  6335  1F04  00F8               	movwf	atoi@s+1
  6336  1F05  31A0  2002  319E   	fcall	_atoi
  6337  1F08  0878               	movf	?_atoi+1,w
  6338  1F09  0022               	movlb	2	; select bank2
  6339  1F0A  00E7               	movwf	(_width+1)^(0+256)
  6340  1F0B  0877               	movf	?_atoi,w
  6341  1F0C  00E6               	movwf	_width^(0+256)
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6344  1F0D  2F17               	goto	l6793
  6345  1F0E                     l6791:	
  6346                           
  6347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6348  1F0E  0020               	movlb	0	; select bank0
  6349  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6350  1F10  0086               	movwf	6
  6351  1F11  0187               	clrf	7
  6352  1F12  3001               	movlw	1
  6353  1F13  0781               	addwf	1,f
  6354  1F14  3141               	addfsr 1,1
  6355  1F15  1803               	skipnc
  6356  1F16  0A81               	incf	1,f
  6357  1F17                     l6793:	
  6358  1F17  0020               	movlb	0	; select bank0
  6359  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6360  1F19  0086               	movwf	6
  6361  1F1A  0187               	clrf	7
  6362  1F1B  3F40               	moviw [0]fsr1
  6363  1F1C  00DB               	movwf	??_vfpfcnvrt
  6364  1F1D  3F41               	moviw [1]fsr1
  6365  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6366  1F1F  085B               	movf	??_vfpfcnvrt,w
  6367  1F20  0084               	movwf	4
  6368  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6369  1F22  0085               	movwf	5
  6370  1F23  0800               	movf	0,w	;code access
  6371  1F24  3ED0               	addlw	208
  6372  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6373  1F26  30FF               	movlw	255
  6374  1F27  1803               	skipnc
  6375  1F28  3000               	movlw	0
  6376  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6377  1F2A  3000               	movlw	0
  6378  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6379  1F2C  300A               	movlw	10
  6380  1F2D  1903               	skipnz
  6381  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6382  1F2F  1803               	btfsc	3,0
  6383  1F30  2F33               	goto	u8520
  6384  1F31  3001               	movlw	1
  6385  1F32  2F34               	goto	u8530
  6386  1F33                     u8520:	
  6387  1F33  3000               	movlw	0
  6388  1F34                     u8530:	
  6389  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6390  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6391  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6392  1F37  0021               	movlb	1	; select bank1
  6393  1F38  00A4               	movwf	_vfpfcnvrt$1310^(0+128)
  6394  1F39  0020               	movlb	0	; select bank0
  6395  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6396  1F3B  0021               	movlb	1	; select bank1
  6397  1F3C  00A5               	movwf	(_vfpfcnvrt$1310+1)^(0+128)
  6398  1F3D  0824               	movf	_vfpfcnvrt$1310^(0+128),w
  6399  1F3E  0425               	iorwf	(_vfpfcnvrt$1310+1)^(0+128),w
  6400  1F3F  1D03               	btfss	3,2
  6401  1F40  2F0E               	goto	l6791
  6402  1F41                     l6799:	
  6403                           
  6404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6405  1F41  0020               	movlb	0	; select bank0
  6406  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6407  1F43  0086               	movwf	6
  6408  1F44  0187               	clrf	7
  6409  1F45  3F40               	moviw [0]fsr1
  6410  1F46  00DB               	movwf	??_vfpfcnvrt
  6411  1F47  3F41               	moviw [1]fsr1
  6412  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6413  1F49  085B               	movf	??_vfpfcnvrt,w
  6414  1F4A  0084               	movwf	4
  6415  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6416  1F4C  0085               	movwf	5
  6417  1F4D  0012               	moviw fsr0++
  6418  1F4E  3A2E               	xorlw	46
  6419  1F4F  1D03               	btfss	3,2
  6420  1F50  2FC5               	goto	l6821
  6421                           
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6423  1F51  0022               	movlb	2	; select bank2
  6424  1F52  01E8               	clrf	_prec^(0+256)
  6425  1F53  01E9               	clrf	(_prec+1)^(0+256)
  6426                           
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6428  1F54  0020               	movlb	0	; select bank0
  6429  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6430  1F56  0086               	movwf	6
  6431  1F57  0187               	clrf	7
  6432  1F58  3001               	movlw	1
  6433  1F59  0781               	addwf	1,f
  6434  1F5A  3141               	addfsr 1,1
  6435  1F5B  1803               	skipnc
  6436  1F5C  0A81               	incf	1,f
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6439  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6440  1F5E  0086               	movwf	6
  6441  1F5F  0187               	clrf	7
  6442  1F60  3F40               	moviw [0]fsr1
  6443  1F61  00DB               	movwf	??_vfpfcnvrt
  6444  1F62  3F41               	moviw [1]fsr1
  6445  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6446  1F64  085B               	movf	??_vfpfcnvrt,w
  6447  1F65  0084               	movwf	4
  6448  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6449  1F67  0085               	movwf	5
  6450  1F68  0012               	moviw fsr0++
  6451  1F69  3A2A               	xorlw	42
  6452  1F6A  1D03               	btfss	3,2
  6453  1F6B  2F82               	goto	l6811
  6454                           
  6455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6456  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6457  1F6D  0086               	movwf	6
  6458  1F6E  0187               	clrf	7
  6459  1F6F  3001               	movlw	1
  6460  1F70  0781               	addwf	1,f
  6461  1F71  3141               	addfsr 1,1
  6462  1F72  1803               	skipnc
  6463  1F73  0A81               	incf	1,f
  6464                           
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6466  1F74  085A               	movf	vfpfcnvrt@ap,w
  6467  1F75  0086               	movwf	6
  6468  1F76  0187               	clrf	7
  6469  1F77  0801               	movf	1,w
  6470  1F78  0084               	movwf	4
  6471  1F79  0185               	clrf	5
  6472  1F7A  3002               	movlw	2
  6473  1F7B  0781               	addwf	1,f
  6474  1F7C  3F00               	moviw [0]fsr0
  6475  1F7D  0022               	movlb	2	; select bank2
  6476  1F7E  00E8               	movwf	_prec^(0+256)
  6477  1F7F  3F01               	moviw [1]fsr0
  6478  1F80  00E9               	movwf	(_prec+1)^(0+256)
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6481  1F81  2FC5               	goto	l6821
  6482  1F82                     l6811:	
  6483                           
  6484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6485  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6486  1F83  0086               	movwf	6
  6487  1F84  0187               	clrf	7
  6488  1F85  3F40               	moviw [0]fsr1
  6489  1F86  00F7               	movwf	atoi@s
  6490  1F87  3F41               	moviw [1]fsr1
  6491  1F88  00F8               	movwf	atoi@s+1
  6492  1F89  31A0  2002  319E   	fcall	_atoi
  6493  1F8C  0878               	movf	?_atoi+1,w
  6494  1F8D  0022               	movlb	2	; select bank2
  6495  1F8E  00E9               	movwf	(_prec+1)^(0+256)
  6496  1F8F  0877               	movf	?_atoi,w
  6497  1F90  00E8               	movwf	_prec^(0+256)
  6498                           
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6500  1F91  2F9B               	goto	l6815
  6501  1F92                     l6813:	
  6502                           
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6504  1F92  0020               	movlb	0	; select bank0
  6505  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6506  1F94  0086               	movwf	6
  6507  1F95  0187               	clrf	7
  6508  1F96  3001               	movlw	1
  6509  1F97  0781               	addwf	1,f
  6510  1F98  3141               	addfsr 1,1
  6511  1F99  1803               	skipnc
  6512  1F9A  0A81               	incf	1,f
  6513  1F9B                     l6815:	
  6514  1F9B  0020               	movlb	0	; select bank0
  6515  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6516  1F9D  0086               	movwf	6
  6517  1F9E  0187               	clrf	7
  6518  1F9F  3F40               	moviw [0]fsr1
  6519  1FA0  00DB               	movwf	??_vfpfcnvrt
  6520  1FA1  3F41               	moviw [1]fsr1
  6521  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6522  1FA3  085B               	movf	??_vfpfcnvrt,w
  6523  1FA4  0084               	movwf	4
  6524  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6525  1FA6  0085               	movwf	5
  6526  1FA7  0800               	movf	0,w	;code access
  6527  1FA8  3ED0               	addlw	208
  6528  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6529  1FAA  30FF               	movlw	255
  6530  1FAB  1803               	skipnc
  6531  1FAC  3000               	movlw	0
  6532  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6533  1FAE  3000               	movlw	0
  6534  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6535  1FB0  300A               	movlw	10
  6536  1FB1  1903               	skipnz
  6537  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6538  1FB3  1803               	btfsc	3,0
  6539  1FB4  2FB7               	goto	u8570
  6540  1FB5  3001               	movlw	1
  6541  1FB6  2FB8               	goto	u8580
  6542  1FB7                     u8570:	
  6543  1FB7  3000               	movlw	0
  6544  1FB8                     u8580:	
  6545  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6546  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6547  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6548  1FBB  0021               	movlb	1	; select bank1
  6549  1FBC  00A6               	movwf	_vfpfcnvrt$1311^(0+128)
  6550  1FBD  0020               	movlb	0	; select bank0
  6551  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6552  1FBF  0021               	movlb	1	; select bank1
  6553  1FC0  00A7               	movwf	(_vfpfcnvrt$1311+1)^(0+128)
  6554  1FC1  0826               	movf	_vfpfcnvrt$1311^(0+128),w
  6555  1FC2  0427               	iorwf	(_vfpfcnvrt$1311+1)^(0+128),w
  6556  1FC3  1D03               	btfss	3,2
  6557  1FC4  2F92               	goto	l6813
  6558  1FC5                     l6821:	
  6559                           
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6561  1FC5  0020               	movlb	0	; select bank0
  6562  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6563  1FC7  0086               	movwf	6
  6564  1FC8  0187               	clrf	7
  6565  1FC9  3F40               	moviw [0]fsr1
  6566  1FCA  00DB               	movwf	??_vfpfcnvrt
  6567  1FCB  3F41               	moviw [1]fsr1
  6568  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6569  1FCD  085B               	movf	??_vfpfcnvrt,w
  6570  1FCE  0084               	movwf	4
  6571  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6572  1FD0  0085               	movwf	5
  6573  1FD1  0012               	moviw fsr0++
  6574  1FD2  3A63               	xorlw	99
  6575  1FD3  31A5  1D03         	btfss	3,2
  6576  1FD5  2DFC               	goto	l6831
  6577                           
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6579  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6580  1FD7  0086               	movwf	6
  6581  1FD8  0187               	clrf	7
  6582  1FD9  3001               	movlw	1
  6583  1FDA  0781               	addwf	1,f
  6584  1FDB  3141               	addfsr 1,1
  6585  1FDC  1803               	skipnc
  6586  1FDD  0A81               	incf	1,f
  6587                           
  6588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6589  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6590  1FDF  0086               	movwf	6
  6591  1FE0  0187               	clrf	7
  6592  1FE1  0801               	movf	1,w
  6593  1FE2  0084               	movwf	4
  6594  1FE3  0185               	clrf	5
  6595  1FE4  3002               	movlw	2
  6596  1FE5  0781               	addwf	1,f
  6597  1FE6  0800               	movf	0,w
  6598  1FE7  00DB               	movwf	??_vfpfcnvrt
  6599  1FE8  085B               	movf	??_vfpfcnvrt,w
  6600  1FE9  0021               	movlb	1	; select bank1
  6601  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6604  1FEB  0020               	movlb	0	; select bank0
  6605  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6606  1FED  00B1               	movwf	ctoa@fp+1
  6607  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6608  1FEF  00B0               	movwf	ctoa@fp
  6609  1FF0  0021               	movlb	1	; select bank1
  6610  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6611  1FF2  0020               	movlb	0	; select bank0
  6612  1FF3  00DB               	movwf	??_vfpfcnvrt
  6613  1FF4  085B               	movf	??_vfpfcnvrt,w
  6614  1FF5  00B2               	movwf	ctoa@c
  6615  1FF6  31B4  246A         	fcall	_ctoa
  6616  1FF8  0020               	movlb	0	; select bank0
  6617  1FF9  0831               	movf	?_ctoa+1,w
  6618  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6619  1FFB  0830               	movf	?_ctoa,w
  6620  1FFC  00D7               	movwf	?_vfpfcnvrt
  6621  1FFD  0008               	return
  6622  1FFE                     L7:	
  6623  1FFE                     L6:	
  6624  1FFE  318F  2FDD         	ljmp	l7099
  6625                           
  6626                           	psect	text8
  6627  1B89                     __ptext8:	
  6628 ;; *************** function _xtoa *****************
  6629 ;; Defined at:
  6630 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6633 ;;		 -> vsnprintf@f(6), 
  6634 ;;  d               8   18[BANK0 ] unsigned long long 
  6635 ;;  x               1   26[BANK0 ] unsigned char 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  n               8   43[BANK0 ] unsigned long long 
  6638 ;;  c               2   53[BANK0 ] int 
  6639 ;;  i               2   51[BANK0 ] int 
  6640 ;;  w               2   41[BANK0 ] int 
  6641 ;;  p               2   39[BANK0 ] int 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  2   16[BANK0 ] int 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6651 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6652 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6653 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6654 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6655 ;;Total ram usage:       39 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    5
  6658 ;; This function calls:
  6659 ;;		_isalpha
  6660 ;;		_isupper
  6661 ;;		_pad
  6662 ;;		_toupper
  6663 ;; This function is called by:
  6664 ;;		_vfpfcnvrt
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           
  6669                           ;psect for function _xtoa
  6670  1B89                     _xtoa:	
  6671                           
  6672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6676  1B89  0022               	movlb	2	; select bank2
  6677  1B8A  1BE9               	btfsc	(_prec+1)^(0+256),7
  6678  1B8B  2B90               	goto	l833
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6681  1B8C  30FD               	movlw	253
  6682  1B8D  05EA               	andwf	_flags^(0+256),f
  6683  1B8E  30FF               	movlw	255
  6684  1B8F  05EB               	andwf	(_flags+1)^(0+256),f
  6685  1B90                     l833:	
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6687                           
  6688                           
  6689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6690  1B90  0869               	movf	(_prec+1)^(0+256),w
  6691  1B91  3A80               	xorlw	128
  6692  1B92  0020               	movlb	0	; select bank0
  6693  1B93  00BB               	movwf	??_xtoa
  6694  1B94  3080               	movlw	128
  6695  1B95  023B               	subwf	??_xtoa,w
  6696  1B96  1D03               	skipz
  6697  1B97  2B9B               	goto	u8245
  6698  1B98  3001               	movlw	1
  6699  1B99  0022               	movlb	2	; select bank2
  6700  1B9A  0268               	subwf	_prec^(0+256),w
  6701  1B9B                     u8245:	
  6702  1B9B  1803               	skipnc
  6703  1B9C  2BA3               	goto	l6643
  6704  1B9D  3001               	movlw	1
  6705  1B9E  0020               	movlb	0	; select bank0
  6706  1B9F  00C7               	movwf	xtoa@p
  6707  1BA0  3000               	movlw	0
  6708  1BA1  00C8               	movwf	xtoa@p+1
  6709  1BA2  2BAB               	goto	l837
  6710  1BA3                     l6643:	
  6711  1BA3  0022               	movlb	2	; select bank2
  6712  1BA4  0869               	movf	(_prec+1)^(0+256),w
  6713  1BA5  0020               	movlb	0	; select bank0
  6714  1BA6  00C8               	movwf	xtoa@p+1
  6715  1BA7  0022               	movlb	2	; select bank2
  6716  1BA8  0868               	movf	_prec^(0+256),w
  6717  1BA9  0020               	movlb	0	; select bank0
  6718  1BAA  00C7               	movwf	xtoa@p
  6719  1BAB                     l837:	
  6720                           
  6721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6722  1BAB  0022               	movlb	2	; select bank2
  6723  1BAC  0867               	movf	(_width+1)^(0+256),w
  6724  1BAD  0020               	movlb	0	; select bank0
  6725  1BAE  00CA               	movwf	xtoa@w+1
  6726  1BAF  0022               	movlb	2	; select bank2
  6727  1BB0  0866               	movf	_width^(0+256),w
  6728  1BB1  0020               	movlb	0	; select bank0
  6729  1BB2  00C9               	movwf	xtoa@w
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6732  1BB3  0022               	movlb	2	; select bank2
  6733  1BB4  1E6A               	btfss	_flags^(0+256),4
  6734  1BB5  2BBB               	goto	l6649
  6735                           
  6736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6737  1BB6  30FE               	movlw	254
  6738  1BB7  0020               	movlb	0	; select bank0
  6739  1BB8  07C9               	addwf	xtoa@w,f
  6740  1BB9  30FF               	movlw	255
  6741  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6742  1BBB                     l6649:	
  6743                           
  6744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6745  1BBB  0020               	movlb	0	; select bank0
  6746  1BBC  0832               	movf	xtoa@d,w
  6747  1BBD  00CB               	movwf	xtoa@n
  6748  1BBE  0833               	movf	xtoa@d+1,w
  6749  1BBF  00CC               	movwf	xtoa@n+1
  6750  1BC0  0834               	movf	xtoa@d+2,w
  6751  1BC1  00CD               	movwf	xtoa@n+2
  6752  1BC2  0835               	movf	xtoa@d+3,w
  6753  1BC3  00CE               	movwf	xtoa@n+3
  6754  1BC4  0836               	movf	xtoa@d+4,w
  6755  1BC5  00CF               	movwf	xtoa@n+4
  6756  1BC6  0837               	movf	xtoa@d+5,w
  6757  1BC7  00D0               	movwf	xtoa@n+5
  6758  1BC8  0838               	movf	xtoa@d+6,w
  6759  1BC9  00D1               	movwf	xtoa@n+6
  6760  1BCA  0839               	movf	xtoa@d+7,w
  6761  1BCB  00D2               	movwf	xtoa@n+7
  6762                           
  6763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6764  1BCC  301F               	movlw	31
  6765  1BCD  00D3               	movwf	xtoa@i
  6766  1BCE  3000               	movlw	0
  6767  1BCF  00D4               	movwf	xtoa@i+1
  6768                           
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6770  1BD0  0024               	movlb	4	; select bank4
  6771  1BD1  01BF               	clrf	(_dbuf^(0+512)+31)
  6772                           
  6773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6774  1BD2  2C7D               	goto	l6681
  6775  1BD3                     l6653:	
  6776                           
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6778  1BD3  30FF               	movlw	255
  6779  1BD4  0020               	movlb	0	; select bank0
  6780  1BD5  07D3               	addwf	xtoa@i,f
  6781  1BD6  30FF               	movlw	255
  6782  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6785  1BD8  300F               	movlw	15
  6786  1BD9  054B               	andwf	xtoa@n,w
  6787  1BDA  00D5               	movwf	xtoa@c
  6788  1BDB  3000               	movlw	0
  6789  1BDC  054C               	andwf	xtoa@n+1,w
  6790  1BDD  00D6               	movwf	xtoa@c+1
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6793  1BDE  0856               	movf	xtoa@c+1,w
  6794  1BDF  3A80               	xorlw	128
  6795  1BE0  00BB               	movwf	??_xtoa
  6796  1BE1  3080               	movlw	128
  6797  1BE2  023B               	subwf	??_xtoa,w
  6798  1BE3  1D03               	skipz
  6799  1BE4  2BE7               	goto	u8265
  6800  1BE5  300A               	movlw	10
  6801  1BE6  0255               	subwf	xtoa@c,w
  6802  1BE7                     u8265:	
  6803  1BE7  1C03               	skipc
  6804  1BE8  2BED               	goto	l6657
  6805  1BE9  0020               	movlb	0	; select bank0
  6806  1BEA  0855               	movf	xtoa@c,w
  6807  1BEB  3E57               	addlw	87
  6808  1BEC  2BF0               	goto	L1
  6809  1BED                     l6657:	
  6810  1BED  0020               	movlb	0	; select bank0
  6811  1BEE  0855               	movf	xtoa@c,w
  6812  1BEF  3E30               	addlw	48
  6813  1BF0                     L1:	
  6814  1BF0  00D5               	movwf	xtoa@c
  6815  1BF1  3000               	movlw	0
  6816  1BF2  3D56               	addwfc	xtoa@c+1,w
  6817  1BF3  00D6               	movwf	xtoa@c+1
  6818  1BF4  083A               	movf	xtoa@x,w
  6819  1BF5  3EBF               	addlw	191
  6820  1BF6  00BB               	movwf	??_xtoa
  6821  1BF7  30FF               	movlw	255
  6822  1BF8  1803               	skipnc
  6823  1BF9  3000               	movlw	0
  6824  1BFA  00BC               	movwf	??_xtoa+1
  6825  1BFB  3000               	movlw	0
  6826  1BFC  023C               	subwf	??_xtoa+1,w
  6827  1BFD  301A               	movlw	26
  6828  1BFE  1903               	skipnz
  6829  1BFF  023B               	subwf	??_xtoa,w
  6830  1C00  1803               	btfsc	3,0
  6831  1C01  2C04               	goto	u8270
  6832  1C02  3001               	movlw	1
  6833  1C03  2C05               	goto	u8280
  6834  1C04                     u8270:	
  6835  1C04  3000               	movlw	0
  6836  1C05                     u8280:	
  6837  1C05  00BD               	movwf	??_xtoa+2
  6838  1C06  01BE               	clrf	??_xtoa+3
  6839  1C07  083D               	movf	??_xtoa+2,w
  6840  1C08  00C3               	movwf	_xtoa$1295
  6841  1C09  083E               	movf	??_xtoa+3,w
  6842  1C0A  00C4               	movwf	_xtoa$1295+1
  6843  1C0B  0843               	movf	_xtoa$1295,w
  6844  1C0C  0444               	iorwf	_xtoa$1295+1,w
  6845  1C0D  1903               	btfsc	3,2
  6846  1C0E  2C3B               	goto	l6673
  6847  1C0F  3020               	movlw	32
  6848  1C10  0455               	iorwf	xtoa@c,w
  6849  1C11  00BB               	movwf	??_xtoa
  6850  1C12  3000               	movlw	0
  6851  1C13  0456               	iorwf	xtoa@c+1,w
  6852  1C14  00BC               	movwf	??_xtoa+1
  6853  1C15  083B               	movf	??_xtoa,w
  6854  1C16  3E9F               	addlw	159
  6855  1C17  00BD               	movwf	??_xtoa+2
  6856  1C18  30FF               	movlw	255
  6857  1C19  3D3C               	addwfc	??_xtoa+1,w
  6858  1C1A  00BE               	movwf	??_xtoa+3
  6859  1C1B  3000               	movlw	0
  6860  1C1C  023E               	subwf	??_xtoa+3,w
  6861  1C1D  301A               	movlw	26
  6862  1C1E  1903               	skipnz
  6863  1C1F  023D               	subwf	??_xtoa+2,w
  6864  1C20  1803               	btfsc	3,0
  6865  1C21  2C24               	goto	u8300
  6866  1C22  3001               	movlw	1
  6867  1C23  2C25               	goto	u8310
  6868  1C24                     u8300:	
  6869  1C24  3000               	movlw	0
  6870  1C25                     u8310:	
  6871  1C25  00BF               	movwf	??_xtoa+4
  6872  1C26  01C0               	clrf	??_xtoa+5
  6873  1C27  083F               	movf	??_xtoa+4,w
  6874  1C28  00C5               	movwf	_xtoa$1296
  6875  1C29  0840               	movf	??_xtoa+5,w
  6876  1C2A  00C6               	movwf	_xtoa$1296+1
  6877  1C2B  0845               	movf	_xtoa$1296,w
  6878  1C2C  0446               	iorwf	_xtoa$1296+1,w
  6879  1C2D  1903               	btfsc	3,2
  6880  1C2E  2C3B               	goto	l6673
  6881                           
  6882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6883  1C2F  0856               	movf	xtoa@c+1,w
  6884  1C30  00F8               	movwf	toupper@c+1
  6885  1C31  0855               	movf	xtoa@c,w
  6886  1C32  00F7               	movwf	toupper@c
  6887  1C33  3190  2001  319B   	fcall	_toupper
  6888  1C36  0878               	movf	?_toupper+1,w
  6889  1C37  0020               	movlb	0	; select bank0
  6890  1C38  00D6               	movwf	xtoa@c+1
  6891  1C39  0877               	movf	?_toupper,w
  6892  1C3A  00D5               	movwf	xtoa@c
  6893  1C3B                     l6673:	
  6894                           
  6895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6896  1C3B  0855               	movf	xtoa@c,w
  6897  1C3C  00BB               	movwf	??_xtoa
  6898  1C3D  0853               	movf	xtoa@i,w
  6899  1C3E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6900  1C3F  0086               	movwf	6
  6901  1C40  3002               	movlw	2	; select bank4/5
  6902  1C41  0087               	movwf	7
  6903  1C42  083B               	movf	??_xtoa,w
  6904  1C43  0081               	movwf	1
  6905                           
  6906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6907  1C44  30FF               	movlw	255
  6908  1C45  07C7               	addwf	xtoa@p,f
  6909  1C46  30FF               	movlw	255
  6910  1C47  3DC8               	addwfc	xtoa@p+1,f
  6911                           
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6913  1C48  30FF               	movlw	255
  6914  1C49  07C9               	addwf	xtoa@w,f
  6915  1C4A  30FF               	movlw	255
  6916  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6917                           
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6919  1C4C  304B               	movlw	low xtoa@n
  6920  1C4D  0086               	movwf	6
  6921  1C4E  3000               	movlw	high xtoa@n
  6922  1C4F  0087               	movwf	7
  6923  1C50  3F40               	moviw [0]fsr1
  6924  1C51  00BB               	movwf	??_xtoa
  6925  1C52  3F41               	moviw [1]fsr1
  6926  1C53  00BC               	movwf	??_xtoa+1
  6927  1C54  3F42               	moviw [2]fsr1
  6928  1C55  00BD               	movwf	??_xtoa+2
  6929  1C56  3F43               	moviw [3]fsr1
  6930  1C57  00BE               	movwf	??_xtoa+3
  6931  1C58  3F44               	moviw [4]fsr1
  6932  1C59  00BF               	movwf	??_xtoa+4
  6933  1C5A  3F45               	moviw [5]fsr1
  6934  1C5B  00C0               	movwf	??_xtoa+5
  6935  1C5C  3F46               	moviw [6]fsr1
  6936  1C5D  00C1               	movwf	??_xtoa+6
  6937  1C5E  3F47               	moviw [7]fsr1
  6938  1C5F  00C2               	movwf	??_xtoa+7
  6939  1C60  3004               	movlw	4
  6940  1C61                     u8335:	
  6941  1C61  0020               	movlb	0	; select bank0
  6942  1C62  36C2               	lsrf	??_xtoa+7,f
  6943  1C63  0CC1               	rrf	??_xtoa+6,f
  6944  1C64  0CC0               	rrf	??_xtoa+5,f
  6945  1C65  0CBF               	rrf	??_xtoa+4,f
  6946  1C66  0CBE               	rrf	??_xtoa+3,f
  6947  1C67  0CBD               	rrf	??_xtoa+2,f
  6948  1C68  0CBC               	rrf	??_xtoa+1,f
  6949  1C69  0CBB               	rrf	??_xtoa,f
  6950  1C6A  0B89               	decfsz	9,f
  6951  1C6B  2C61               	goto	u8335
  6952  1C6C  0020               	movlb	0	; select bank0
  6953  1C6D  0842               	movf	??_xtoa+7,w
  6954  1C6E  00D2               	movwf	xtoa@n+7
  6955  1C6F  0841               	movf	??_xtoa+6,w
  6956  1C70  00D1               	movwf	xtoa@n+6
  6957  1C71  0840               	movf	??_xtoa+5,w
  6958  1C72  00D0               	movwf	xtoa@n+5
  6959  1C73  083F               	movf	??_xtoa+4,w
  6960  1C74  00CF               	movwf	xtoa@n+4
  6961  1C75  083E               	movf	??_xtoa+3,w
  6962  1C76  00CE               	movwf	xtoa@n+3
  6963  1C77  083D               	movf	??_xtoa+2,w
  6964  1C78  00CD               	movwf	xtoa@n+2
  6965  1C79  083C               	movf	??_xtoa+1,w
  6966  1C7A  00CC               	movwf	xtoa@n+1
  6967  1C7B  083B               	movf	??_xtoa,w
  6968  1C7C  00CB               	movwf	xtoa@n
  6969  1C7D                     l6681:	
  6970                           
  6971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6972  1C7D  0020               	movlb	0	; select bank0
  6973  1C7E  0854               	movf	xtoa@i+1,w
  6974  1C7F  3A80               	xorlw	128
  6975  1C80  00BB               	movwf	??_xtoa
  6976  1C81  3080               	movlw	128
  6977  1C82  023B               	subwf	??_xtoa,w
  6978  1C83  1D03               	skipz
  6979  1C84  2C87               	goto	u8345
  6980  1C85  3002               	movlw	2
  6981  1C86  0253               	subwf	xtoa@i,w
  6982  1C87                     u8345:	
  6983  1C87  1C03               	skipc
  6984  1C88  2CAE               	goto	l858
  6985  1C89  0020               	movlb	0	; select bank0
  6986  1C8A  084B               	movf	xtoa@n,w
  6987  1C8B  044C               	iorwf	xtoa@n+1,w
  6988  1C8C  044D               	iorwf	xtoa@n+2,w
  6989  1C8D  044E               	iorwf	xtoa@n+3,w
  6990  1C8E  044F               	iorwf	xtoa@n+4,w
  6991  1C8F  0450               	iorwf	xtoa@n+5,w
  6992  1C90  0451               	iorwf	xtoa@n+6,w
  6993  1C91  0452               	iorwf	xtoa@n+7,w
  6994  1C92  1D03               	skipz
  6995  1C93  2BD3               	goto	l6653
  6996  1C94  0848               	movf	xtoa@p+1,w
  6997  1C95  3A80               	xorlw	128
  6998  1C96  00BB               	movwf	??_xtoa
  6999  1C97  3080               	movlw	128
  7000  1C98  023B               	subwf	??_xtoa,w
  7001  1C99  1D03               	skipz
  7002  1C9A  2C9D               	goto	u8365
  7003  1C9B  3001               	movlw	1
  7004  1C9C  0247               	subwf	xtoa@p,w
  7005  1C9D                     u8365:	
  7006  1C9D  1803               	skipnc
  7007  1C9E  2BD3               	goto	l6653
  7008  1C9F  0020               	movlb	0	; select bank0
  7009  1CA0  084A               	movf	xtoa@w+1,w
  7010  1CA1  3A80               	xorlw	128
  7011  1CA2  00BB               	movwf	??_xtoa
  7012  1CA3  3080               	movlw	128
  7013  1CA4  023B               	subwf	??_xtoa,w
  7014  1CA5  1D03               	skipz
  7015  1CA6  2CA9               	goto	u8375
  7016  1CA7  3001               	movlw	1
  7017  1CA8  0249               	subwf	xtoa@w,w
  7018  1CA9                     u8375:	
  7019  1CA9  1C03               	skipc
  7020  1CAA  2CAE               	goto	l858
  7021  1CAB  0022               	movlb	2	; select bank2
  7022  1CAC  18EA               	btfsc	_flags^(0+256),1
  7023  1CAD  2BD3               	goto	l6653
  7024  1CAE                     l858:	
  7025                           
  7026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7027  1CAE  0022               	movlb	2	; select bank2
  7028  1CAF  1E6A               	btfss	_flags^(0+256),4
  7029  1CB0  2CCC               	goto	l6697
  7030                           
  7031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7032  1CB1  30FF               	movlw	255
  7033  1CB2  0020               	movlb	0	; select bank0
  7034  1CB3  07D3               	addwf	xtoa@i,f
  7035  1CB4  30FF               	movlw	255
  7036  1CB5  3DD4               	addwfc	xtoa@i+1,f
  7037                           
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7039  1CB6  083A               	movf	xtoa@x,w
  7040  1CB7  00BB               	movwf	??_xtoa
  7041  1CB8  0853               	movf	xtoa@i,w
  7042  1CB9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7043  1CBA  0086               	movwf	6
  7044  1CBB  3002               	movlw	2	; select bank4/5
  7045  1CBC  0087               	movwf	7
  7046  1CBD  083B               	movf	??_xtoa,w
  7047  1CBE  0081               	movwf	1
  7048                           
  7049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7050  1CBF  30FF               	movlw	255
  7051  1CC0  07D3               	addwf	xtoa@i,f
  7052  1CC1  30FF               	movlw	255
  7053  1CC2  3DD4               	addwfc	xtoa@i+1,f
  7054                           
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7056  1CC3  3030               	movlw	48
  7057  1CC4  00BB               	movwf	??_xtoa
  7058  1CC5  0853               	movf	xtoa@i,w
  7059  1CC6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7060  1CC7  0086               	movwf	6
  7061  1CC8  3002               	movlw	2	; select bank4/5
  7062  1CC9  0087               	movwf	7
  7063  1CCA  083B               	movf	??_xtoa,w
  7064  1CCB  0081               	movwf	1
  7065  1CCC                     l6697:	
  7066                           
  7067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7068  1CCC  0020               	movlb	0	; select bank0
  7069  1CCD  0831               	movf	xtoa@fp+1,w
  7070  1CCE  00A7               	movwf	pad@fp+1
  7071  1CCF  0830               	movf	xtoa@fp,w
  7072  1CD0  00A6               	movwf	pad@fp
  7073  1CD1  0853               	movf	xtoa@i,w
  7074  1CD2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7075  1CD3  00BB               	movwf	??_xtoa
  7076  1CD4  083B               	movf	??_xtoa,w
  7077  1CD5  00A8               	movwf	pad@buf
  7078  1CD6  084A               	movf	xtoa@w+1,w
  7079  1CD7  00AA               	movwf	pad@p+1
  7080  1CD8  0849               	movf	xtoa@w,w
  7081  1CD9  00A9               	movwf	pad@p
  7082  1CDA  31B6  264D         	fcall	_pad
  7083  1CDC  0020               	movlb	0	; select bank0
  7084  1CDD  0827               	movf	?_pad+1,w
  7085  1CDE  00B1               	movwf	?_xtoa+1
  7086  1CDF  0826               	movf	?_pad,w
  7087  1CE0  00B0               	movwf	?_xtoa
  7088  1CE1  0008               	return
  7089  1CE2                     __end_of_xtoa:	
  7090                           
  7091                           	psect	text9
  7092  1001                     __ptext9:	
  7093 ;; *************** function _toupper *****************
  7094 ;; Defined at:
  7095 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  c               2    7[COMMON] int 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  2    7[COMMON] int 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7112 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7113 ;;Total ram usage:        8 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    2
  7116 ;; This function calls:
  7117 ;;		_islower
  7118 ;; This function is called by:
  7119 ;;		_xtoa
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _toupper
  7125  1001                     _toupper:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7129  1001  0877               	movf	toupper@c,w
  7130  1002  3E9F               	addlw	159
  7131  1003  0020               	movlb	0	; select bank0
  7132  1004  00A0               	movwf	??_toupper
  7133  1005  30FF               	movlw	255
  7134  1006  3D78               	addwfc	toupper@c+1,w
  7135  1007  00A1               	movwf	??_toupper+1
  7136  1008  3000               	movlw	0
  7137  1009  0221               	subwf	??_toupper+1,w
  7138  100A  301A               	movlw	26
  7139  100B  1903               	skipnz
  7140  100C  0220               	subwf	??_toupper,w
  7141  100D  1803               	btfsc	3,0
  7142  100E  2811               	goto	u7860
  7143  100F  3001               	movlw	1
  7144  1010  2812               	goto	u7870
  7145  1011                     u7860:	
  7146  1011  3000               	movlw	0
  7147  1012                     u7870:	
  7148  1012  00A2               	movwf	??_toupper+2
  7149  1013  01A3               	clrf	??_toupper+3
  7150  1014  0822               	movf	??_toupper+2,w
  7151  1015  00F9               	movwf	_toupper$1845
  7152  1016  0823               	movf	??_toupper+3,w
  7153  1017  00FA               	movwf	_toupper$1845+1
  7154  1018  0879               	movf	_toupper$1845,w
  7155  1019  047A               	iorwf	_toupper$1845+1,w
  7156  101A  1903               	btfsc	3,2
  7157  101B  0008               	return
  7158  101C  305F               	movlw	95
  7159  101D  0577               	andwf	toupper@c,w
  7160  101E  00F7               	movwf	?_toupper
  7161  101F  3000               	movlw	0
  7162  1020  0578               	andwf	toupper@c+1,w
  7163  1021  00F8               	movwf	?_toupper+1
  7164  1022  0008               	return
  7165  1023                     __end_of_toupper:	
  7166                           
  7167                           	psect	text10
  7168  32F8                     __ptext10:	
  7169 ;; *************** function _islower *****************
  7170 ;; Defined at:
  7171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  c               2    1[COMMON] int 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2    1[COMMON] int 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7189 ;;Total ram usage:        6 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    1
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_toupper
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           
  7200                           ;psect for function _islower
  7201  32F8                     _islower:	
  7202                           
  7203                           ;incstack = 0
  7204                           ; Regs used in _islower: [wreg+status,2+status,0]
  7205  32F8  0871               	movf	islower@c,w
  7206  32F9  3E9F               	addlw	159
  7207  32FA  00F3               	movwf	??_islower
  7208  32FB  30FF               	movlw	255
  7209  32FC  3D72               	addwfc	islower@c+1,w
  7210  32FD  00F4               	movwf	??_islower+1
  7211  32FE  3000               	movlw	0
  7212  32FF  0274               	subwf	??_islower+1,w
  7213  3300  301A               	movlw	26
  7214  3301  1903               	skipnz
  7215  3302  0273               	subwf	??_islower,w
  7216  3303  1803               	btfsc	3,0
  7217  3304  2B07               	goto	u7800
  7218  3305  3001               	movlw	1
  7219  3306  2B08               	goto	u7810
  7220  3307                     u7800:	
  7221  3307  3000               	movlw	0
  7222  3308                     u7810:	
  7223  3308  00F5               	movwf	??_islower+2
  7224  3309  01F6               	clrf	??_islower+3
  7225  330A  0875               	movf	??_islower+2,w
  7226  330B  00F1               	movwf	?_islower
  7227  330C  0876               	movf	??_islower+3,w
  7228  330D  00F2               	movwf	?_islower+1
  7229  330E  0008               	return
  7230  330F                     __end_of_islower:	
  7231                           
  7232                           	psect	text11
  7233  32E1                     __ptext11:	
  7234 ;; *************** function _isupper *****************
  7235 ;; Defined at:
  7236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  c               2    1[COMMON] int 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  2    1[COMMON] int 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7253 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7254 ;;Total ram usage:        6 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    1
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_xtoa
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           
  7265                           ;psect for function _isupper
  7266  32E1                     _isupper:	
  7267                           
  7268                           ;incstack = 0
  7269                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7270  32E1  0871               	movf	isupper@c,w
  7271  32E2  3EBF               	addlw	191
  7272  32E3  00F3               	movwf	??_isupper
  7273  32E4  30FF               	movlw	255
  7274  32E5  3D72               	addwfc	isupper@c+1,w
  7275  32E6  00F4               	movwf	??_isupper+1
  7276  32E7  3000               	movlw	0
  7277  32E8  0274               	subwf	??_isupper+1,w
  7278  32E9  301A               	movlw	26
  7279  32EA  1903               	skipnz
  7280  32EB  0273               	subwf	??_isupper,w
  7281  32EC  1803               	btfsc	3,0
  7282  32ED  2AF0               	goto	u4060
  7283  32EE  3001               	movlw	1
  7284  32EF  2AF1               	goto	u4070
  7285  32F0                     u4060:	
  7286  32F0  3000               	movlw	0
  7287  32F1                     u4070:	
  7288  32F1  00F5               	movwf	??_isupper+2
  7289  32F2  01F6               	clrf	??_isupper+3
  7290  32F3  0875               	movf	??_isupper+2,w
  7291  32F4  00F1               	movwf	?_isupper
  7292  32F5  0876               	movf	??_isupper+3,w
  7293  32F6  00F2               	movwf	?_isupper+1
  7294  32F7  0008               	return
  7295  32F8                     __end_of_isupper:	
  7296                           
  7297                           	psect	text12
  7298  3396                     __ptext12:	
  7299 ;; *************** function _isalpha *****************
  7300 ;; Defined at:
  7301 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  c               2    1[COMMON] int 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  2    1[COMMON] int 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7317 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7318 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        8 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_xtoa
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function _isalpha
  7331  3396                     _isalpha:	
  7332                           
  7333                           ;incstack = 0
  7334                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7335  3396  3020               	movlw	32
  7336  3397  0471               	iorwf	isalpha@c,w
  7337  3398  00F3               	movwf	??_isalpha
  7338  3399  3000               	movlw	0
  7339  339A  0472               	iorwf	isalpha@c+1,w
  7340  339B  00F4               	movwf	??_isalpha+1
  7341  339C  0873               	movf	??_isalpha,w
  7342  339D  3E9F               	addlw	159
  7343  339E  00F5               	movwf	??_isalpha+2
  7344  339F  30FF               	movlw	255
  7345  33A0  3D74               	addwfc	??_isalpha+1,w
  7346  33A1  00F6               	movwf	??_isalpha+3
  7347  33A2  3000               	movlw	0
  7348  33A3  0276               	subwf	??_isalpha+3,w
  7349  33A4  301A               	movlw	26
  7350  33A5  1903               	skipnz
  7351  33A6  0275               	subwf	??_isalpha+2,w
  7352  33A7  1803               	btfsc	3,0
  7353  33A8  2BAB               	goto	u4080
  7354  33A9  3001               	movlw	1
  7355  33AA  2BAC               	goto	u4090
  7356  33AB                     u4080:	
  7357  33AB  3000               	movlw	0
  7358  33AC                     u4090:	
  7359  33AC  00F7               	movwf	??_isalpha+4
  7360  33AD  01F8               	clrf	??_isalpha+5
  7361  33AE  0877               	movf	??_isalpha+4,w
  7362  33AF  00F1               	movwf	?_isalpha
  7363  33B0  0878               	movf	??_isalpha+5,w
  7364  33B1  00F2               	movwf	?_isalpha+1
  7365  33B2  0008               	return
  7366  33B3                     __end_of_isalpha:	
  7367                           
  7368                           	psect	text13
  7369  2337                     __ptext13:	
  7370 ;; *************** function _utoa *****************
  7371 ;; Defined at:
  7372 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7375 ;;		 -> vsnprintf@f(6), 
  7376 ;;  d               8   18[BANK0 ] unsigned long long 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  n               8   31[BANK0 ] unsigned long long 
  7379 ;;  i               2   39[BANK0 ] int 
  7380 ;;  w               2   29[BANK0 ] int 
  7381 ;;  p               2   27[BANK0 ] int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2   16[BANK0 ] int 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7391 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7392 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7394 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7395 ;;Total ram usage:       25 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    5
  7398 ;; This function calls:
  7399 ;;		___lodiv
  7400 ;;		___lomod
  7401 ;;		_pad
  7402 ;; This function is called by:
  7403 ;;		_vfpfcnvrt
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           
  7408                           ;psect for function _utoa
  7409  2337                     _utoa:	
  7410                           
  7411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7412                           
  7413                           ;incstack = 0
  7414                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7415  2337  0022               	movlb	2	; select bank2
  7416  2338  1BE9               	btfsc	(_prec+1)^(0+256),7
  7417  2339  2B3E               	goto	l818
  7418                           
  7419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7420  233A  30FD               	movlw	253
  7421  233B  05EA               	andwf	_flags^(0+256),f
  7422  233C  30FF               	movlw	255
  7423  233D  05EB               	andwf	(_flags+1)^(0+256),f
  7424  233E                     l818:	
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7426                           
  7427                           
  7428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7429  233E  0869               	movf	(_prec+1)^(0+256),w
  7430  233F  3A80               	xorlw	128
  7431  2340  0020               	movlb	0	; select bank0
  7432  2341  00BA               	movwf	??_utoa
  7433  2342  3080               	movlw	128
  7434  2343  023A               	subwf	??_utoa,w
  7435  2344  1D03               	skipz
  7436  2345  2B49               	goto	u8175
  7437  2346  3001               	movlw	1
  7438  2347  0022               	movlb	2	; select bank2
  7439  2348  0268               	subwf	_prec^(0+256),w
  7440  2349                     u8175:	
  7441  2349  1803               	skipnc
  7442  234A  2B51               	goto	l6607
  7443  234B  3001               	movlw	1
  7444  234C  0020               	movlb	0	; select bank0
  7445  234D  00BB               	movwf	utoa@p
  7446  234E  3000               	movlw	0
  7447  234F  00BC               	movwf	utoa@p+1
  7448  2350  2B59               	goto	l822
  7449  2351                     l6607:	
  7450  2351  0022               	movlb	2	; select bank2
  7451  2352  0869               	movf	(_prec+1)^(0+256),w
  7452  2353  0020               	movlb	0	; select bank0
  7453  2354  00BC               	movwf	utoa@p+1
  7454  2355  0022               	movlb	2	; select bank2
  7455  2356  0868               	movf	_prec^(0+256),w
  7456  2357  0020               	movlb	0	; select bank0
  7457  2358  00BB               	movwf	utoa@p
  7458  2359                     l822:	
  7459                           
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7461  2359  0022               	movlb	2	; select bank2
  7462  235A  0867               	movf	(_width+1)^(0+256),w
  7463  235B  0020               	movlb	0	; select bank0
  7464  235C  00BE               	movwf	utoa@w+1
  7465  235D  0022               	movlb	2	; select bank2
  7466  235E  0866               	movf	_width^(0+256),w
  7467  235F  0020               	movlb	0	; select bank0
  7468  2360  00BD               	movwf	utoa@w
  7469                           
  7470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7471  2361  0832               	movf	utoa@d,w
  7472  2362  00BF               	movwf	utoa@n
  7473  2363  0833               	movf	utoa@d+1,w
  7474  2364  00C0               	movwf	utoa@n+1
  7475  2365  0834               	movf	utoa@d+2,w
  7476  2366  00C1               	movwf	utoa@n+2
  7477  2367  0835               	movf	utoa@d+3,w
  7478  2368  00C2               	movwf	utoa@n+3
  7479  2369  0836               	movf	utoa@d+4,w
  7480  236A  00C3               	movwf	utoa@n+4
  7481  236B  0837               	movf	utoa@d+5,w
  7482  236C  00C4               	movwf	utoa@n+5
  7483  236D  0838               	movf	utoa@d+6,w
  7484  236E  00C5               	movwf	utoa@n+6
  7485  236F  0839               	movf	utoa@d+7,w
  7486  2370  00C6               	movwf	utoa@n+7
  7487                           
  7488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7489  2371  301F               	movlw	31
  7490  2372  00C7               	movwf	utoa@i
  7491  2373  3000               	movlw	0
  7492  2374  00C8               	movwf	utoa@i+1
  7493                           
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7495  2375  0024               	movlb	4	; select bank4
  7496  2376  01BF               	clrf	(_dbuf^(0+512)+31)
  7497                           
  7498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7499  2377  2BFD               	goto	l6623
  7500  2378                     l6625:	
  7501  2378  083F               	movf	utoa@n,w
  7502  2379  0440               	iorwf	utoa@n+1,w
  7503  237A  0441               	iorwf	utoa@n+2,w
  7504  237B  0442               	iorwf	utoa@n+3,w
  7505  237C  0443               	iorwf	utoa@n+4,w
  7506  237D  0444               	iorwf	utoa@n+5,w
  7507  237E  0445               	iorwf	utoa@n+6,w
  7508  237F  0446               	iorwf	utoa@n+7,w
  7509  2380  1D03               	skipz
  7510  2381  2B9C               	goto	l6613
  7511  2382  083C               	movf	utoa@p+1,w
  7512  2383  3A80               	xorlw	128
  7513  2384  00BA               	movwf	??_utoa
  7514  2385  3080               	movlw	128
  7515  2386  023A               	subwf	??_utoa,w
  7516  2387  1D03               	skipz
  7517  2388  2B8B               	goto	u8205
  7518  2389  3001               	movlw	1
  7519  238A  023B               	subwf	utoa@p,w
  7520  238B                     u8205:	
  7521  238B  1803               	skipnc
  7522  238C  2B9C               	goto	l6613
  7523  238D  0020               	movlb	0	; select bank0
  7524  238E  083E               	movf	utoa@w+1,w
  7525  238F  3A80               	xorlw	128
  7526  2390  00BA               	movwf	??_utoa
  7527  2391  3080               	movlw	128
  7528  2392  023A               	subwf	??_utoa,w
  7529  2393  1D03               	skipz
  7530  2394  2B97               	goto	u8215
  7531  2395  3001               	movlw	1
  7532  2396  023D               	subwf	utoa@w,w
  7533  2397                     u8215:	
  7534  2397  1C03               	skipc
  7535  2398  2C02               	goto	l6633
  7536  2399  0022               	movlb	2	; select bank2
  7537  239A  1CEA               	btfss	_flags^(0+256),1
  7538  239B  2C02               	goto	l6633
  7539  239C                     l6613:	
  7540                           
  7541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7542  239C  30FF               	movlw	255
  7543  239D  0020               	movlb	0	; select bank0
  7544  239E  07C7               	addwf	utoa@i,f
  7545  239F  30FF               	movlw	255
  7546  23A0  3DC8               	addwfc	utoa@i+1,f
  7547                           
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7549  23A1  300A               	movlw	10
  7550  23A2  00A0               	movwf	___lomod@divisor
  7551  23A3  01A1               	clrf	___lomod@divisor+1
  7552  23A4  01A2               	clrf	___lomod@divisor+2
  7553  23A5  01A3               	clrf	___lomod@divisor+3
  7554  23A6  01A4               	clrf	___lomod@divisor+4
  7555  23A7  01A5               	clrf	___lomod@divisor+5
  7556  23A8  01A6               	clrf	___lomod@divisor+6
  7557  23A9  01A7               	clrf	___lomod@divisor+7
  7558  23AA  083F               	movf	utoa@n,w
  7559  23AB  00A8               	movwf	___lomod@dividend
  7560  23AC  0840               	movf	utoa@n+1,w
  7561  23AD  00A9               	movwf	___lomod@dividend+1
  7562  23AE  0841               	movf	utoa@n+2,w
  7563  23AF  00AA               	movwf	___lomod@dividend+2
  7564  23B0  0842               	movf	utoa@n+3,w
  7565  23B1  00AB               	movwf	___lomod@dividend+3
  7566  23B2  0843               	movf	utoa@n+4,w
  7567  23B3  00AC               	movwf	___lomod@dividend+4
  7568  23B4  0844               	movf	utoa@n+5,w
  7569  23B5  00AD               	movwf	___lomod@dividend+5
  7570  23B6  0845               	movf	utoa@n+6,w
  7571  23B7  00AE               	movwf	___lomod@dividend+6
  7572  23B8  0846               	movf	utoa@n+7,w
  7573  23B9  00AF               	movwf	___lomod@dividend+7
  7574  23BA  31A8  2011  31A3   	fcall	___lomod
  7575  23BD  0020               	movlb	0	; select bank0
  7576  23BE  0820               	movf	?___lomod,w
  7577  23BF  3E30               	addlw	48
  7578  23C0  00BA               	movwf	??_utoa
  7579  23C1  0847               	movf	utoa@i,w
  7580  23C2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7581  23C3  0086               	movwf	6
  7582  23C4  3002               	movlw	2	; select bank4/5
  7583  23C5  0087               	movwf	7
  7584  23C6  083A               	movf	??_utoa,w
  7585  23C7  0081               	movwf	1
  7586                           
  7587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7588  23C8  30FF               	movlw	255
  7589  23C9  07BB               	addwf	utoa@p,f
  7590  23CA  30FF               	movlw	255
  7591  23CB  3DBC               	addwfc	utoa@p+1,f
  7592                           
  7593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7594  23CC  30FF               	movlw	255
  7595  23CD  07BD               	addwf	utoa@w,f
  7596  23CE  30FF               	movlw	255
  7597  23CF  3DBE               	addwfc	utoa@w+1,f
  7598                           
  7599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7600  23D0  300A               	movlw	10
  7601  23D1  00A0               	movwf	___lodiv@divisor
  7602  23D2  01A1               	clrf	___lodiv@divisor+1
  7603  23D3  01A2               	clrf	___lodiv@divisor+2
  7604  23D4  01A3               	clrf	___lodiv@divisor+3
  7605  23D5  01A4               	clrf	___lodiv@divisor+4
  7606  23D6  01A5               	clrf	___lodiv@divisor+5
  7607  23D7  01A6               	clrf	___lodiv@divisor+6
  7608  23D8  01A7               	clrf	___lodiv@divisor+7
  7609  23D9  083F               	movf	utoa@n,w
  7610  23DA  00A8               	movwf	___lodiv@dividend
  7611  23DB  0840               	movf	utoa@n+1,w
  7612  23DC  00A9               	movwf	___lodiv@dividend+1
  7613  23DD  0841               	movf	utoa@n+2,w
  7614  23DE  00AA               	movwf	___lodiv@dividend+2
  7615  23DF  0842               	movf	utoa@n+3,w
  7616  23E0  00AB               	movwf	___lodiv@dividend+3
  7617  23E1  0843               	movf	utoa@n+4,w
  7618  23E2  00AC               	movwf	___lodiv@dividend+4
  7619  23E3  0844               	movf	utoa@n+5,w
  7620  23E4  00AD               	movwf	___lodiv@dividend+5
  7621  23E5  0845               	movf	utoa@n+6,w
  7622  23E6  00AE               	movwf	___lodiv@dividend+6
  7623  23E7  0846               	movf	utoa@n+7,w
  7624  23E8  00AF               	movwf	___lodiv@dividend+7
  7625  23E9  31A9  216E  31A3   	fcall	___lodiv
  7626  23EC  0020               	movlb	0	; select bank0
  7627  23ED  0820               	movf	?___lodiv,w
  7628  23EE  00BF               	movwf	utoa@n
  7629  23EF  0821               	movf	?___lodiv+1,w
  7630  23F0  00C0               	movwf	utoa@n+1
  7631  23F1  0822               	movf	?___lodiv+2,w
  7632  23F2  00C1               	movwf	utoa@n+2
  7633  23F3  0823               	movf	?___lodiv+3,w
  7634  23F4  00C2               	movwf	utoa@n+3
  7635  23F5  0824               	movf	?___lodiv+4,w
  7636  23F6  00C3               	movwf	utoa@n+4
  7637  23F7  0825               	movf	?___lodiv+5,w
  7638  23F8  00C4               	movwf	utoa@n+5
  7639  23F9  0826               	movf	?___lodiv+6,w
  7640  23FA  00C5               	movwf	utoa@n+6
  7641  23FB  0827               	movf	?___lodiv+7,w
  7642  23FC  00C6               	movwf	utoa@n+7
  7643  23FD                     l6623:	
  7644                           
  7645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7646  23FD  0020               	movlb	0	; select bank0
  7647  23FE  0847               	movf	utoa@i,w
  7648  23FF  0448               	iorwf	utoa@i+1,w
  7649  2400  1D03               	btfss	3,2
  7650  2401  2B78               	goto	l6625
  7651  2402                     l6633:	
  7652                           
  7653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7654  2402  0020               	movlb	0	; select bank0
  7655  2403  0831               	movf	utoa@fp+1,w
  7656  2404  00A7               	movwf	pad@fp+1
  7657  2405  0830               	movf	utoa@fp,w
  7658  2406  00A6               	movwf	pad@fp
  7659  2407  0847               	movf	utoa@i,w
  7660  2408  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7661  2409  00BA               	movwf	??_utoa
  7662  240A  083A               	movf	??_utoa,w
  7663  240B  00A8               	movwf	pad@buf
  7664  240C  083E               	movf	utoa@w+1,w
  7665  240D  00AA               	movwf	pad@p+1
  7666  240E  083D               	movf	utoa@w,w
  7667  240F  00A9               	movwf	pad@p
  7668  2410  31B6  264D         	fcall	_pad
  7669  2412  0020               	movlb	0	; select bank0
  7670  2413  0827               	movf	?_pad+1,w
  7671  2414  00B1               	movwf	?_utoa+1
  7672  2415  0826               	movf	?_pad,w
  7673  2416  00B0               	movwf	?_utoa
  7674  2417  0008               	return
  7675  2418                     __end_of_utoa:	
  7676                           
  7677                           	psect	text14
  7678  2811                     __ptext14:	
  7679 ;; *************** function ___lomod *****************
  7680 ;; Defined at:
  7681 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7684 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  counter         1    2[COMMON] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  8    0[BANK0 ] unsigned long long 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7696 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7700 ;;Total ram usage:       18 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		_utoa
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           
  7711                           ;psect for function ___lomod
  7712  2811                     ___lomod:	
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7716  2811  0020               	movlb	0	; select bank0
  7717  2812  0820               	movf	___lomod@divisor,w
  7718  2813  0421               	iorwf	___lomod@divisor+1,w
  7719  2814  0422               	iorwf	___lomod@divisor+2,w
  7720  2815  0423               	iorwf	___lomod@divisor+3,w
  7721  2816  0424               	iorwf	___lomod@divisor+4,w
  7722  2817  0425               	iorwf	___lomod@divisor+5,w
  7723  2818  0426               	iorwf	___lomod@divisor+6,w
  7724  2819  0427               	iorwf	___lomod@divisor+7,w
  7725  281A  1903               	skipnz
  7726  281B  2869               	goto	l1189
  7727  281C  01F2               	clrf	___lomod@counter
  7728  281D  0AF2               	incf	___lomod@counter,f
  7729  281E                     l4249:	
  7730  281E  1BA7               	btfsc	___lomod@divisor+7,7
  7731  281F  282D               	goto	l4251
  7732  2820  35A0               	lslf	___lomod@divisor,f
  7733  2821  0DA1               	rlf	___lomod@divisor+1,f
  7734  2822  0DA2               	rlf	___lomod@divisor+2,f
  7735  2823  0DA3               	rlf	___lomod@divisor+3,f
  7736  2824  0DA4               	rlf	___lomod@divisor+4,f
  7737  2825  0DA5               	rlf	___lomod@divisor+5,f
  7738  2826  0DA6               	rlf	___lomod@divisor+6,f
  7739  2827  0DA7               	rlf	___lomod@divisor+7,f
  7740  2828  3001               	movlw	1
  7741  2829  00F1               	movwf	??___lomod
  7742  282A  0871               	movf	??___lomod,w
  7743  282B  07F2               	addwf	___lomod@counter,f
  7744  282C  281E               	goto	l4249
  7745  282D                     l4251:	
  7746  282D  0827               	movf	___lomod@divisor+7,w
  7747  282E  022F               	subwf	___lomod@dividend+7,w
  7748  282F  1D03               	skipz
  7749  2830  284B               	goto	u4475
  7750  2831  0826               	movf	___lomod@divisor+6,w
  7751  2832  022E               	subwf	___lomod@dividend+6,w
  7752  2833  1D03               	skipz
  7753  2834  284B               	goto	u4475
  7754  2835  0825               	movf	___lomod@divisor+5,w
  7755  2836  022D               	subwf	___lomod@dividend+5,w
  7756  2837  1D03               	skipz
  7757  2838  284B               	goto	u4475
  7758  2839  0824               	movf	___lomod@divisor+4,w
  7759  283A  022C               	subwf	___lomod@dividend+4,w
  7760  283B  1D03               	skipz
  7761  283C  284B               	goto	u4475
  7762  283D  0823               	movf	___lomod@divisor+3,w
  7763  283E  022B               	subwf	___lomod@dividend+3,w
  7764  283F  1D03               	skipz
  7765  2840  284B               	goto	u4475
  7766  2841  0822               	movf	___lomod@divisor+2,w
  7767  2842  022A               	subwf	___lomod@dividend+2,w
  7768  2843  1D03               	skipz
  7769  2844  284B               	goto	u4475
  7770  2845  0821               	movf	___lomod@divisor+1,w
  7771  2846  0229               	subwf	___lomod@dividend+1,w
  7772  2847  1D03               	skipz
  7773  2848  284B               	goto	u4475
  7774  2849  0820               	movf	___lomod@divisor,w
  7775  284A  0228               	subwf	___lomod@dividend,w
  7776  284B                     u4475:	
  7777  284B  1C03               	skipc
  7778  284C  285D               	goto	l4255
  7779  284D  0820               	movf	___lomod@divisor,w
  7780  284E  02A8               	subwf	___lomod@dividend,f
  7781  284F  0821               	movf	___lomod@divisor+1,w
  7782  2850  3BA9               	subwfb	___lomod@dividend+1,f
  7783  2851  0822               	movf	___lomod@divisor+2,w
  7784  2852  3BAA               	subwfb	___lomod@dividend+2,f
  7785  2853  0823               	movf	___lomod@divisor+3,w
  7786  2854  3BAB               	subwfb	___lomod@dividend+3,f
  7787  2855  0824               	movf	___lomod@divisor+4,w
  7788  2856  3BAC               	subwfb	___lomod@dividend+4,f
  7789  2857  0825               	movf	___lomod@divisor+5,w
  7790  2858  3BAD               	subwfb	___lomod@dividend+5,f
  7791  2859  0826               	movf	___lomod@divisor+6,w
  7792  285A  3BAE               	subwfb	___lomod@dividend+6,f
  7793  285B  0827               	movf	___lomod@divisor+7,w
  7794  285C  3BAF               	subwfb	___lomod@dividend+7,f
  7795  285D                     l4255:	
  7796  285D  36A7               	lsrf	___lomod@divisor+7,f
  7797  285E  0CA6               	rrf	___lomod@divisor+6,f
  7798  285F  0CA5               	rrf	___lomod@divisor+5,f
  7799  2860  0CA4               	rrf	___lomod@divisor+4,f
  7800  2861  0CA3               	rrf	___lomod@divisor+3,f
  7801  2862  0CA2               	rrf	___lomod@divisor+2,f
  7802  2863  0CA1               	rrf	___lomod@divisor+1,f
  7803  2864  0CA0               	rrf	___lomod@divisor,f
  7804  2865  3001               	movlw	1
  7805  2866  02F2               	subwf	___lomod@counter,f
  7806  2867  1D03               	btfss	3,2
  7807  2868  282D               	goto	l4251
  7808  2869                     l1189:	
  7809  2869  0828               	movf	___lomod@dividend,w
  7810  286A  00A0               	movwf	?___lomod
  7811  286B  0829               	movf	___lomod@dividend+1,w
  7812  286C  00A1               	movwf	?___lomod+1
  7813  286D  082A               	movf	___lomod@dividend+2,w
  7814  286E  00A2               	movwf	?___lomod+2
  7815  286F  082B               	movf	___lomod@dividend+3,w
  7816  2870  00A3               	movwf	?___lomod+3
  7817  2871  082C               	movf	___lomod@dividend+4,w
  7818  2872  00A4               	movwf	?___lomod+4
  7819  2873  082D               	movf	___lomod@dividend+5,w
  7820  2874  00A5               	movwf	?___lomod+5
  7821  2875  082E               	movf	___lomod@dividend+6,w
  7822  2876  00A6               	movwf	?___lomod+6
  7823  2877  082F               	movf	___lomod@dividend+7,w
  7824  2878  00A7               	movwf	?___lomod+7
  7825  2879  0008               	return
  7826  287A                     __end_of___lomod:	
  7827                           
  7828                           	psect	text15
  7829  296E                     __ptext15:	
  7830 ;; *************** function ___lodiv *****************
  7831 ;; Defined at:
  7832 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7835 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  quotient        8    2[COMMON] unsigned long long 
  7838 ;;  counter         1   10[COMMON] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  8    0[BANK0 ] unsigned long long 
  7841 ;; Registers used:
  7842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7848 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7849 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7851 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7852 ;;Total ram usage:       26 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    1
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_utoa
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function ___lodiv
  7864  296E                     ___lodiv:	
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7868  296E  3072               	movlw	low ___lodiv@quotient
  7869  296F  0086               	movwf	6
  7870  2970  3000               	movlw	high ___lodiv@quotient
  7871  2971  0087               	movwf	7
  7872  2972  3008               	movlw	8
  7873  2973  00F1               	movwf	??___lodiv
  7874  2974  3000               	movlw	0
  7875  2975                     u4400:	
  7876  2975  001E               	movwi fsr1++
  7877  2976  0BF1               	decfsz	??___lodiv,f
  7878  2977  2975               	goto	u4400
  7879  2978  0020               	movlb	0	; select bank0
  7880  2979  0820               	movf	___lodiv@divisor,w
  7881  297A  0421               	iorwf	___lodiv@divisor+1,w
  7882  297B  0422               	iorwf	___lodiv@divisor+2,w
  7883  297C  0423               	iorwf	___lodiv@divisor+3,w
  7884  297D  0424               	iorwf	___lodiv@divisor+4,w
  7885  297E  0425               	iorwf	___lodiv@divisor+5,w
  7886  297F  0426               	iorwf	___lodiv@divisor+6,w
  7887  2980  0427               	iorwf	___lodiv@divisor+7,w
  7888  2981  1903               	skipnz
  7889  2982  29D9               	goto	l1179
  7890  2983  01FA               	clrf	___lodiv@counter
  7891  2984  0AFA               	incf	___lodiv@counter,f
  7892  2985                     l4229:	
  7893  2985  1BA7               	btfsc	___lodiv@divisor+7,7
  7894  2986  2994               	goto	l4231
  7895  2987  35A0               	lslf	___lodiv@divisor,f
  7896  2988  0DA1               	rlf	___lodiv@divisor+1,f
  7897  2989  0DA2               	rlf	___lodiv@divisor+2,f
  7898  298A  0DA3               	rlf	___lodiv@divisor+3,f
  7899  298B  0DA4               	rlf	___lodiv@divisor+4,f
  7900  298C  0DA5               	rlf	___lodiv@divisor+5,f
  7901  298D  0DA6               	rlf	___lodiv@divisor+6,f
  7902  298E  0DA7               	rlf	___lodiv@divisor+7,f
  7903  298F  3001               	movlw	1
  7904  2990  00F1               	movwf	??___lodiv
  7905  2991  0871               	movf	??___lodiv,w
  7906  2992  07FA               	addwf	___lodiv@counter,f
  7907  2993  2985               	goto	l4229
  7908  2994                     l4231:	
  7909  2994  35F2               	lslf	___lodiv@quotient,f
  7910  2995  0DF3               	rlf	___lodiv@quotient+1,f
  7911  2996  0DF4               	rlf	___lodiv@quotient+2,f
  7912  2997  0DF5               	rlf	___lodiv@quotient+3,f
  7913  2998  0DF6               	rlf	___lodiv@quotient+4,f
  7914  2999  0DF7               	rlf	___lodiv@quotient+5,f
  7915  299A  0DF8               	rlf	___lodiv@quotient+6,f
  7916  299B  0DF9               	rlf	___lodiv@quotient+7,f
  7917  299C  0827               	movf	___lodiv@divisor+7,w
  7918  299D  022F               	subwf	___lodiv@dividend+7,w
  7919  299E  1D03               	skipz
  7920  299F  29BA               	goto	u4435
  7921  29A0  0826               	movf	___lodiv@divisor+6,w
  7922  29A1  022E               	subwf	___lodiv@dividend+6,w
  7923  29A2  1D03               	skipz
  7924  29A3  29BA               	goto	u4435
  7925  29A4  0825               	movf	___lodiv@divisor+5,w
  7926  29A5  022D               	subwf	___lodiv@dividend+5,w
  7927  29A6  1D03               	skipz
  7928  29A7  29BA               	goto	u4435
  7929  29A8  0824               	movf	___lodiv@divisor+4,w
  7930  29A9  022C               	subwf	___lodiv@dividend+4,w
  7931  29AA  1D03               	skipz
  7932  29AB  29BA               	goto	u4435
  7933  29AC  0823               	movf	___lodiv@divisor+3,w
  7934  29AD  022B               	subwf	___lodiv@dividend+3,w
  7935  29AE  1D03               	skipz
  7936  29AF  29BA               	goto	u4435
  7937  29B0  0822               	movf	___lodiv@divisor+2,w
  7938  29B1  022A               	subwf	___lodiv@dividend+2,w
  7939  29B2  1D03               	skipz
  7940  29B3  29BA               	goto	u4435
  7941  29B4  0821               	movf	___lodiv@divisor+1,w
  7942  29B5  0229               	subwf	___lodiv@dividend+1,w
  7943  29B6  1D03               	skipz
  7944  29B7  29BA               	goto	u4435
  7945  29B8  0820               	movf	___lodiv@divisor,w
  7946  29B9  0228               	subwf	___lodiv@dividend,w
  7947  29BA                     u4435:	
  7948  29BA  1C03               	skipc
  7949  29BB  29CD               	goto	l4239
  7950  29BC  0820               	movf	___lodiv@divisor,w
  7951  29BD  02A8               	subwf	___lodiv@dividend,f
  7952  29BE  0821               	movf	___lodiv@divisor+1,w
  7953  29BF  3BA9               	subwfb	___lodiv@dividend+1,f
  7954  29C0  0822               	movf	___lodiv@divisor+2,w
  7955  29C1  3BAA               	subwfb	___lodiv@dividend+2,f
  7956  29C2  0823               	movf	___lodiv@divisor+3,w
  7957  29C3  3BAB               	subwfb	___lodiv@dividend+3,f
  7958  29C4  0824               	movf	___lodiv@divisor+4,w
  7959  29C5  3BAC               	subwfb	___lodiv@dividend+4,f
  7960  29C6  0825               	movf	___lodiv@divisor+5,w
  7961  29C7  3BAD               	subwfb	___lodiv@dividend+5,f
  7962  29C8  0826               	movf	___lodiv@divisor+6,w
  7963  29C9  3BAE               	subwfb	___lodiv@dividend+6,f
  7964  29CA  0827               	movf	___lodiv@divisor+7,w
  7965  29CB  3BAF               	subwfb	___lodiv@dividend+7,f
  7966  29CC  1472               	bsf	___lodiv@quotient,0
  7967  29CD                     l4239:	
  7968  29CD  36A7               	lsrf	___lodiv@divisor+7,f
  7969  29CE  0CA6               	rrf	___lodiv@divisor+6,f
  7970  29CF  0CA5               	rrf	___lodiv@divisor+5,f
  7971  29D0  0CA4               	rrf	___lodiv@divisor+4,f
  7972  29D1  0CA3               	rrf	___lodiv@divisor+3,f
  7973  29D2  0CA2               	rrf	___lodiv@divisor+2,f
  7974  29D3  0CA1               	rrf	___lodiv@divisor+1,f
  7975  29D4  0CA0               	rrf	___lodiv@divisor,f
  7976  29D5  3001               	movlw	1
  7977  29D6  02FA               	subwf	___lodiv@counter,f
  7978  29D7  1D03               	btfss	3,2
  7979  29D8  2994               	goto	l4231
  7980  29D9                     l1179:	
  7981  29D9  0872               	movf	___lodiv@quotient,w
  7982  29DA  00A0               	movwf	?___lodiv
  7983  29DB  0873               	movf	___lodiv@quotient+1,w
  7984  29DC  00A1               	movwf	?___lodiv+1
  7985  29DD  0874               	movf	___lodiv@quotient+2,w
  7986  29DE  00A2               	movwf	?___lodiv+2
  7987  29DF  0875               	movf	___lodiv@quotient+3,w
  7988  29E0  00A3               	movwf	?___lodiv+3
  7989  29E1  0876               	movf	___lodiv@quotient+4,w
  7990  29E2  00A4               	movwf	?___lodiv+4
  7991  29E3  0877               	movf	___lodiv@quotient+5,w
  7992  29E4  00A5               	movwf	?___lodiv+5
  7993  29E5  0878               	movf	___lodiv@quotient+6,w
  7994  29E6  00A6               	movwf	?___lodiv+6
  7995  29E7  0879               	movf	___lodiv@quotient+7,w
  7996  29E8  00A7               	movwf	?___lodiv+7
  7997  29E9  0008               	return
  7998  29EA                     __end_of___lodiv:	
  7999                           
  8000                           	psect	text16
  8001  369E                     __ptext16:	
  8002 ;; *************** function _strncmp *****************
  8003 ;; Defined at:
  8004 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8007 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  8008 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  8009 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  8010 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  8011 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  8012 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8013 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  8014 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  8015 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  8016 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  8017 ;;		 -> STR_43(3), STR_38(3), STR_34(3), STR_29(4), 
  8018 ;;		 -> STR_25(4), 
  8019 ;;  n               2    5[COMMON] unsigned int 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  r               2   10[COMMON] PTR const unsigned char 
  8022 ;;		 -> STR_119(3), STR_115(3), STR_110(3), STR_106(3), 
  8023 ;;		 -> STR_101(4), STR_97(4), STR_92(3), STR_87(3), 
  8024 ;;		 -> STR_82(4), STR_77(3), STR_72(3), STR_67(4), 
  8025 ;;		 -> STR_62(3), STR_57(3), STR_52(4), STR_47(3), 
  8026 ;;		 -> STR_43(3), STR_38(3), STR_34(3), STR_29(4), 
  8027 ;;		 -> STR_25(4), 
  8028 ;;  l               2    8[COMMON] PTR const unsigned char 
  8029 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
  8030 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
  8031 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
  8032 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
  8033 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  2    1[COMMON] int 
  8036 ;; Registers used:
  8037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8046 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8047 ;;Total ram usage:       11 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:    1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_vfpfcnvrt
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function _strncmp
  8059  369E                     _strncmp:	
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8063  369E  0872               	movf	strncmp@_l+1,w
  8064  369F  00F9               	movwf	strncmp@l+1
  8065  36A0  0871               	movf	strncmp@_l,w
  8066  36A1  00F8               	movwf	strncmp@l
  8067  36A2  0874               	movf	strncmp@_r+1,w
  8068  36A3  00FB               	movwf	strncmp@r+1
  8069  36A4  0873               	movf	strncmp@_r,w
  8070  36A5  00FA               	movwf	strncmp@r
  8071  36A6  3001               	movlw	1
  8072  36A7  02F5               	subwf	strncmp@n,f
  8073  36A8  3000               	movlw	0
  8074  36A9  3BF6               	subwfb	strncmp@n+1,f
  8075  36AA  0A75               	incf	strncmp@n,w
  8076  36AB  1D03               	skipz
  8077  36AC  2ED8               	goto	l4591
  8078  36AD  0A76               	incf	strncmp@n+1,w
  8079  36AE  1D03               	btfss	3,2
  8080  36AF  2ED8               	goto	l4591
  8081  36B0  01F1               	clrf	?_strncmp
  8082  36B1  01F2               	clrf	?_strncmp+1
  8083  36B2  0008               	return
  8084  36B3                     l4593:	
  8085  36B3  087A               	movf	strncmp@r,w
  8086  36B4  0084               	movwf	4
  8087  36B5  087B               	movf	strncmp@r+1,w
  8088  36B6  0085               	movwf	5
  8089  36B7  0012               	moviw fsr0++
  8090  36B8  1903               	btfsc	3,2
  8091  36B9  2EDF               	goto	l4599
  8092  36BA  0875               	movf	strncmp@n,w
  8093  36BB  0476               	iorwf	strncmp@n+1,w
  8094  36BC  1903               	btfsc	3,2
  8095  36BD  2EDF               	goto	l4599
  8096  36BE  087A               	movf	strncmp@r,w
  8097  36BF  0084               	movwf	4
  8098  36C0  087B               	movf	strncmp@r+1,w
  8099  36C1  0085               	movwf	5
  8100  36C2  0800               	movf	0,w	;code access
  8101  36C3  00F7               	movwf	??_strncmp
  8102  36C4  0878               	movf	strncmp@l,w
  8103  36C5  0084               	movwf	4
  8104  36C6  0879               	movf	strncmp@l+1,w
  8105  36C7  0085               	movwf	5
  8106  36C8  0800               	movf	0,w	;code access
  8107  36C9  0677               	xorwf	??_strncmp,w
  8108  36CA  1D03               	btfss	3,2
  8109  36CB  2EDF               	goto	l4599
  8110  36CC  3001               	movlw	1
  8111  36CD  07F8               	addwf	strncmp@l,f
  8112  36CE  3000               	movlw	0
  8113  36CF  3DF9               	addwfc	strncmp@l+1,f
  8114  36D0  3001               	movlw	1
  8115  36D1  07FA               	addwf	strncmp@r,f
  8116  36D2  3000               	movlw	0
  8117  36D3  3DFB               	addwfc	strncmp@r+1,f
  8118  36D4  3001               	movlw	1
  8119  36D5  02F5               	subwf	strncmp@n,f
  8120  36D6  3000               	movlw	0
  8121  36D7  3BF6               	subwfb	strncmp@n+1,f
  8122  36D8                     l4591:	
  8123  36D8  0878               	movf	strncmp@l,w
  8124  36D9  0084               	movwf	4
  8125  36DA  0879               	movf	strncmp@l+1,w
  8126  36DB  0085               	movwf	5
  8127  36DC  0012               	moviw fsr0++
  8128  36DD  1D03               	btfss	3,2
  8129  36DE  2EB3               	goto	l4593
  8130  36DF                     l4599:	
  8131  36DF  0878               	movf	strncmp@l,w
  8132  36E0  0084               	movwf	4
  8133  36E1  0879               	movf	strncmp@l+1,w
  8134  36E2  0085               	movwf	5
  8135  36E3  0800               	movf	0,w	;code access
  8136  36E4  00F7               	movwf	??_strncmp
  8137  36E5  087A               	movf	strncmp@r,w
  8138  36E6  0084               	movwf	4
  8139  36E7  087B               	movf	strncmp@r+1,w
  8140  36E8  0085               	movwf	5
  8141  36E9  0800               	movf	0,w	;code access
  8142  36EA  0277               	subwf	??_strncmp,w
  8143  36EB  00F1               	movwf	?_strncmp
  8144  36EC  01F2               	clrf	?_strncmp+1
  8145  36ED  1C03               	skipc
  8146  36EE  03F2               	decf	?_strncmp+1,f
  8147  36EF  0008               	return
  8148  36F0                     __end_of_strncmp:	
  8149                           
  8150                           	psect	text17
  8151  2DA0                     __ptext17:	
  8152 ;; *************** function _stoa *****************
  8153 ;; Defined at:
  8154 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8157 ;;		 -> vsnprintf@f(6), 
  8158 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8159 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8162 ;;  l               2   19[BANK0 ] int 
  8163 ;;  p               2   17[BANK0 ] int 
  8164 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8165 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8166 ;;  w               2   13[BANK0 ] int 
  8167 ;;  i               2   11[BANK0 ] int 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  2    0[BANK0 ] int 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8178 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8180 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8181 ;;Total ram usage:       23 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    3
  8184 ;; This function calls:
  8185 ;;		_fputc
  8186 ;;		_strlen
  8187 ;; This function is called by:
  8188 ;;		_vfpfcnvrt
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _stoa
  8194  2DA0                     _stoa:	
  8195                           
  8196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8200  2DA0  3040               	movlw	low stoa@F1152
  8201  2DA1  0086               	movwf	6
  8202  2DA2  3002               	movlw	high stoa@F1152
  8203  2DA3  0087               	movwf	7
  8204  2DA4  3024               	movlw	low stoa@nuls
  8205  2DA5  0084               	movwf	4
  8206  2DA6  3000               	movlw	high stoa@nuls
  8207  2DA7  0085               	movwf	5
  8208  2DA8  3007               	movlw	7
  8209  2DA9  00FA               	movwf	??_stoa
  8210  2DAA                     u4780:	
  8211  2DAA  0016               	moviw fsr1++
  8212  2DAB  001A               	movwi fsr0++
  8213  2DAC  0BFA               	decfsz	??_stoa,f
  8214  2DAD  2DAA               	goto	u4780
  8215                           
  8216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8217  2DAE  0020               	movlb	0	; select bank0
  8218  2DAF  0823               	movf	stoa@s+1,w
  8219  2DB0  00B0               	movwf	stoa@cp+1
  8220  2DB1  0822               	movf	stoa@s,w
  8221  2DB2  00AF               	movwf	stoa@cp
  8222                           
  8223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8224  2DB3  082F               	movf	stoa@cp,w
  8225  2DB4  0430               	iorwf	stoa@cp+1,w
  8226  2DB5  1D03               	btfss	3,2
  8227  2DB6  2DBB               	goto	l4393
  8228                           
  8229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8230  2DB7  3024               	movlw	low stoa@nuls
  8231  2DB8  00AF               	movwf	stoa@cp
  8232  2DB9  3000               	movlw	high stoa@nuls
  8233  2DBA  00B0               	movwf	stoa@cp+1
  8234  2DBB                     l4393:	
  8235                           
  8236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8237  2DBB  0830               	movf	stoa@cp+1,w
  8238  2DBC  00F2               	movwf	strlen@s+1
  8239  2DBD  082F               	movf	stoa@cp,w
  8240  2DBE  00F1               	movwf	strlen@s
  8241  2DBF  31B2  22B3  31AD   	fcall	_strlen
  8242  2DC2  0872               	movf	?_strlen+1,w
  8243  2DC3  0020               	movlb	0	; select bank0
  8244  2DC4  00B4               	movwf	stoa@l+1
  8245  2DC5  0871               	movf	?_strlen,w
  8246  2DC6  00B3               	movwf	stoa@l
  8247                           
  8248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8249  2DC7  0022               	movlb	2	; select bank2
  8250  2DC8  0869               	movf	(_prec+1)^(0+256),w
  8251  2DC9  0020               	movlb	0	; select bank0
  8252  2DCA  00B2               	movwf	stoa@p+1
  8253  2DCB  0022               	movlb	2	; select bank2
  8254  2DCC  0868               	movf	_prec^(0+256),w
  8255  2DCD  0020               	movlb	0	; select bank0
  8256  2DCE  00B1               	movwf	stoa@p
  8257                           
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8259  2DCF  1BB2               	btfsc	stoa@p+1,7
  8260  2DD0  2DE2               	goto	l801
  8261  2DD1  0832               	movf	stoa@p+1,w
  8262  2DD2  3A80               	xorlw	128
  8263  2DD3  00FA               	movwf	??_stoa
  8264  2DD4  0834               	movf	stoa@l+1,w
  8265  2DD5  3A80               	xorlw	128
  8266  2DD6  027A               	subwf	??_stoa,w
  8267  2DD7  1D03               	skipz
  8268  2DD8  2DDB               	goto	u4815
  8269  2DD9  0833               	movf	stoa@l,w
  8270  2DDA  0231               	subwf	stoa@p,w
  8271  2DDB                     u4815:	
  8272  2DDB  1803               	btfsc	3,0
  8273  2DDC  2DE2               	goto	l801
  8274  2DDD  0020               	movlb	0	; select bank0
  8275  2DDE  0832               	movf	stoa@p+1,w
  8276  2DDF  00B4               	movwf	stoa@l+1
  8277  2DE0  0831               	movf	stoa@p,w
  8278  2DE1  00B3               	movwf	stoa@l
  8279  2DE2                     l801:	
  8280                           
  8281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8282  2DE2  0020               	movlb	0	; select bank0
  8283  2DE3  0834               	movf	stoa@l+1,w
  8284  2DE4  00B2               	movwf	stoa@p+1
  8285  2DE5  0833               	movf	stoa@l,w
  8286  2DE6  00B1               	movwf	stoa@p
  8287                           
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8289  2DE7  0022               	movlb	2	; select bank2
  8290  2DE8  0867               	movf	(_width+1)^(0+256),w
  8291  2DE9  0020               	movlb	0	; select bank0
  8292  2DEA  00AE               	movwf	stoa@w+1
  8293  2DEB  0022               	movlb	2	; select bank2
  8294  2DEC  0866               	movf	_width^(0+256),w
  8295  2DED  0020               	movlb	0	; select bank0
  8296  2DEE  00AD               	movwf	stoa@w
  8297                           
  8298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8299  2DEF  0022               	movlb	2	; select bank2
  8300  2DF0  1C6A               	btfss	_flags^(0+256),0
  8301  2DF1  2E04               	goto	l4411
  8302  2DF2  2E11               	goto	l4413
  8303  2DF3                     l4407:	
  8304                           
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8306  2DF3  3020               	movlw	32
  8307  2DF4  00F1               	movwf	fputc@c
  8308  2DF5  3000               	movlw	0
  8309  2DF6  00F2               	movwf	fputc@c+1
  8310  2DF7  0020               	movlb	0	; select bank0
  8311  2DF8  0821               	movf	stoa@fp+1,w
  8312  2DF9  00F4               	movwf	fputc@fp+1
  8313  2DFA  0820               	movf	stoa@fp,w
  8314  2DFB  00F3               	movwf	fputc@fp
  8315  2DFC  31B6  26F0  31AD   	fcall	_fputc
  8316                           
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8318  2DFF  3001               	movlw	1
  8319  2E00  0020               	movlb	0	; select bank0
  8320  2E01  07B3               	addwf	stoa@l,f
  8321  2E02  3000               	movlw	0
  8322  2E03  3DB4               	addwfc	stoa@l+1,f
  8323  2E04                     l4411:	
  8324                           
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8326  2E04  0020               	movlb	0	; select bank0
  8327  2E05  0834               	movf	stoa@l+1,w
  8328  2E06  3A80               	xorlw	128
  8329  2E07  00FA               	movwf	??_stoa
  8330  2E08  082E               	movf	stoa@w+1,w
  8331  2E09  3A80               	xorlw	128
  8332  2E0A  027A               	subwf	??_stoa,w
  8333  2E0B  1D03               	skipz
  8334  2E0C  2E0F               	goto	u4835
  8335  2E0D  082D               	movf	stoa@w,w
  8336  2E0E  0233               	subwf	stoa@l,w
  8337  2E0F                     u4835:	
  8338  2E0F  1C03               	skipc
  8339  2E10  2DF3               	goto	l4407
  8340  2E11                     l4413:	
  8341                           
  8342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8343  2E11  0020               	movlb	0	; select bank0
  8344  2E12  01AB               	clrf	stoa@i
  8345  2E13  01AC               	clrf	stoa@i+1
  8346  2E14                     l4421:	
  8347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8348                           
  8349                           
  8350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8351  2E14  082C               	movf	stoa@i+1,w
  8352  2E15  3A80               	xorlw	128
  8353  2E16  00FA               	movwf	??_stoa
  8354  2E17  0832               	movf	stoa@p+1,w
  8355  2E18  3A80               	xorlw	128
  8356  2E19  027A               	subwf	??_stoa,w
  8357  2E1A  1D03               	skipz
  8358  2E1B  2E1E               	goto	u4845
  8359  2E1C  0831               	movf	stoa@p,w
  8360  2E1D  022B               	subwf	stoa@i,w
  8361  2E1E                     u4845:	
  8362  2E1E  1803               	btfsc	3,0
  8363  2E1F  2E3D               	goto	l810
  8364                           
  8365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8366  2E20  0020               	movlb	0	; select bank0
  8367  2E21  082F               	movf	stoa@cp,w
  8368  2E22  0086               	movwf	6
  8369  2E23  0830               	movf	stoa@cp+1,w
  8370  2E24  0087               	movwf	7
  8371  2E25  0801               	movf	1,w
  8372  2E26  00FA               	movwf	??_stoa
  8373  2E27  01FB               	clrf	??_stoa+1
  8374  2E28  087A               	movf	??_stoa,w
  8375  2E29  00F1               	movwf	fputc@c
  8376  2E2A  087B               	movf	??_stoa+1,w
  8377  2E2B  00F2               	movwf	fputc@c+1
  8378  2E2C  0821               	movf	stoa@fp+1,w
  8379  2E2D  00F4               	movwf	fputc@fp+1
  8380  2E2E  0820               	movf	stoa@fp,w
  8381  2E2F  00F3               	movwf	fputc@fp
  8382  2E30  31B6  26F0  31AD   	fcall	_fputc
  8383                           
  8384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8385  2E33  3001               	movlw	1
  8386  2E34  0020               	movlb	0	; select bank0
  8387  2E35  07AF               	addwf	stoa@cp,f
  8388  2E36  3000               	movlw	0
  8389  2E37  3DB0               	addwfc	stoa@cp+1,f
  8390                           
  8391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8392  2E38  3001               	movlw	1
  8393  2E39  07AB               	addwf	stoa@i,f
  8394  2E3A  3000               	movlw	0
  8395  2E3B  3DAC               	addwfc	stoa@i+1,f
  8396  2E3C  2E14               	goto	l4421
  8397  2E3D                     l810:	
  8398                           
  8399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8400  2E3D  0022               	movlb	2	; select bank2
  8401  2E3E  186A               	btfsc	_flags^(0+256),0
  8402  2E3F  2E52               	goto	l4429
  8403  2E40  2E5F               	goto	l4431
  8404  2E41                     l4425:	
  8405                           
  8406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8407  2E41  3020               	movlw	32
  8408  2E42  00F1               	movwf	fputc@c
  8409  2E43  3000               	movlw	0
  8410  2E44  00F2               	movwf	fputc@c+1
  8411  2E45  0020               	movlb	0	; select bank0
  8412  2E46  0821               	movf	stoa@fp+1,w
  8413  2E47  00F4               	movwf	fputc@fp+1
  8414  2E48  0820               	movf	stoa@fp,w
  8415  2E49  00F3               	movwf	fputc@fp
  8416  2E4A  31B6  26F0  31AD   	fcall	_fputc
  8417                           
  8418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8419  2E4D  3001               	movlw	1
  8420  2E4E  0020               	movlb	0	; select bank0
  8421  2E4F  07B3               	addwf	stoa@l,f
  8422  2E50  3000               	movlw	0
  8423  2E51  3DB4               	addwfc	stoa@l+1,f
  8424  2E52                     l4429:	
  8425                           
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8427  2E52  0020               	movlb	0	; select bank0
  8428  2E53  0834               	movf	stoa@l+1,w
  8429  2E54  3A80               	xorlw	128
  8430  2E55  00FA               	movwf	??_stoa
  8431  2E56  082E               	movf	stoa@w+1,w
  8432  2E57  3A80               	xorlw	128
  8433  2E58  027A               	subwf	??_stoa,w
  8434  2E59  1D03               	skipz
  8435  2E5A  2E5D               	goto	u4865
  8436  2E5B  082D               	movf	stoa@w,w
  8437  2E5C  0233               	subwf	stoa@l,w
  8438  2E5D                     u4865:	
  8439  2E5D  1C03               	skipc
  8440  2E5E  2E41               	goto	l4425
  8441  2E5F                     l4431:	
  8442                           
  8443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8444  2E5F  0020               	movlb	0	; select bank0
  8445  2E60  0834               	movf	stoa@l+1,w
  8446  2E61  00A1               	movwf	?_stoa+1
  8447  2E62  0833               	movf	stoa@l,w
  8448  2E63  00A0               	movwf	?_stoa
  8449  2E64  0008               	return
  8450  2E65                     __end_of_stoa:	
  8451                           
  8452                           	psect	text18
  8453  2418                     __ptext18:	
  8454 ;; *************** function _otoa *****************
  8455 ;; Defined at:
  8456 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8459 ;;		 -> vsnprintf@f(6), 
  8460 ;;  d               8   18[BANK0 ] unsigned long long 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  n               8   40[BANK0 ] unsigned long long 
  8463 ;;  i               2   48[BANK0 ] int 
  8464 ;;  w               2   38[BANK0 ] int 
  8465 ;;  t               2   36[BANK0 ] int 
  8466 ;;  p               2   34[BANK0 ] int 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  2   16[BANK0 ] int 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8476 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8477 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8478 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8479 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8480 ;;Total ram usage:       34 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    5
  8483 ;; This function calls:
  8484 ;;		_pad
  8485 ;; This function is called by:
  8486 ;;		_vfpfcnvrt
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _otoa
  8492  2418                     _otoa:	
  8493                           
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8495                           
  8496                           ;incstack = 0
  8497                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8498  2418  0022               	movlb	2	; select bank2
  8499  2419  1BE9               	btfsc	(_prec+1)^(0+256),7
  8500  241A  2C1F               	goto	l779
  8501                           
  8502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8503  241B  30FD               	movlw	253
  8504  241C  05EA               	andwf	_flags^(0+256),f
  8505  241D  30FF               	movlw	255
  8506  241E  05EB               	andwf	(_flags+1)^(0+256),f
  8507  241F                     l779:	
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8509                           
  8510                           
  8511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8512  241F  0869               	movf	(_prec+1)^(0+256),w
  8513  2420  3A80               	xorlw	128
  8514  2421  0020               	movlb	0	; select bank0
  8515  2422  00BA               	movwf	??_otoa
  8516  2423  3080               	movlw	128
  8517  2424  023A               	subwf	??_otoa,w
  8518  2425  1D03               	skipz
  8519  2426  2C2A               	goto	u8075
  8520  2427  3001               	movlw	1
  8521  2428  0022               	movlb	2	; select bank2
  8522  2429  0268               	subwf	_prec^(0+256),w
  8523  242A                     u8075:	
  8524  242A  1803               	skipnc
  8525  242B  2C32               	goto	l6563
  8526  242C  3001               	movlw	1
  8527  242D  0020               	movlb	0	; select bank0
  8528  242E  00C2               	movwf	otoa@p
  8529  242F  3000               	movlw	0
  8530  2430  00C3               	movwf	otoa@p+1
  8531  2431  2C3A               	goto	l783
  8532  2432                     l6563:	
  8533  2432  0022               	movlb	2	; select bank2
  8534  2433  0869               	movf	(_prec+1)^(0+256),w
  8535  2434  0020               	movlb	0	; select bank0
  8536  2435  00C3               	movwf	otoa@p+1
  8537  2436  0022               	movlb	2	; select bank2
  8538  2437  0868               	movf	_prec^(0+256),w
  8539  2438  0020               	movlb	0	; select bank0
  8540  2439  00C2               	movwf	otoa@p
  8541  243A                     l783:	
  8542                           
  8543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8544  243A  0022               	movlb	2	; select bank2
  8545  243B  0867               	movf	(_width+1)^(0+256),w
  8546  243C  0020               	movlb	0	; select bank0
  8547  243D  00C7               	movwf	otoa@w+1
  8548  243E  0022               	movlb	2	; select bank2
  8549  243F  0866               	movf	_width^(0+256),w
  8550  2440  0020               	movlb	0	; select bank0
  8551  2441  00C6               	movwf	otoa@w
  8552                           
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8554  2442  0832               	movf	otoa@d,w
  8555  2443  00C8               	movwf	otoa@n
  8556  2444  0833               	movf	otoa@d+1,w
  8557  2445  00C9               	movwf	otoa@n+1
  8558  2446  0834               	movf	otoa@d+2,w
  8559  2447  00CA               	movwf	otoa@n+2
  8560  2448  0835               	movf	otoa@d+3,w
  8561  2449  00CB               	movwf	otoa@n+3
  8562  244A  0836               	movf	otoa@d+4,w
  8563  244B  00CC               	movwf	otoa@n+4
  8564  244C  0837               	movf	otoa@d+5,w
  8565  244D  00CD               	movwf	otoa@n+5
  8566  244E  0838               	movf	otoa@d+6,w
  8567  244F  00CE               	movwf	otoa@n+6
  8568  2450  0839               	movf	otoa@d+7,w
  8569  2451  00CF               	movwf	otoa@n+7
  8570                           
  8571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8572  2452  301F               	movlw	31
  8573  2453  00D0               	movwf	otoa@i
  8574  2454  3000               	movlw	0
  8575  2455  00D1               	movwf	otoa@i+1
  8576                           
  8577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8578  2456  0024               	movlb	4	; select bank4
  8579  2457  01BF               	clrf	(_dbuf^(0+512)+31)
  8580                           
  8581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8582  2458  0020               	movlb	0	; select bank0
  8583  2459  01C4               	clrf	otoa@t
  8584  245A  01C5               	clrf	otoa@t+1
  8585                           
  8586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8587  245B  2CCF               	goto	l784
  8588  245C                     l6581:	
  8589  245C  0020               	movlb	0	; select bank0
  8590  245D  0848               	movf	otoa@n,w
  8591  245E  0449               	iorwf	otoa@n+1,w
  8592  245F  044A               	iorwf	otoa@n+2,w
  8593  2460  044B               	iorwf	otoa@n+3,w
  8594  2461  044C               	iorwf	otoa@n+4,w
  8595  2462  044D               	iorwf	otoa@n+5,w
  8596  2463  044E               	iorwf	otoa@n+6,w
  8597  2464  044F               	iorwf	otoa@n+7,w
  8598  2465  1D03               	skipz
  8599  2466  2C81               	goto	l6571
  8600  2467  0843               	movf	otoa@p+1,w
  8601  2468  3A80               	xorlw	128
  8602  2469  00BA               	movwf	??_otoa
  8603  246A  3080               	movlw	128
  8604  246B  023A               	subwf	??_otoa,w
  8605  246C  1D03               	skipz
  8606  246D  2C70               	goto	u8115
  8607  246E  3001               	movlw	1
  8608  246F  0242               	subwf	otoa@p,w
  8609  2470                     u8115:	
  8610  2470  1803               	skipnc
  8611  2471  2C81               	goto	l6571
  8612  2472  0020               	movlb	0	; select bank0
  8613  2473  0847               	movf	otoa@w+1,w
  8614  2474  3A80               	xorlw	128
  8615  2475  00BA               	movwf	??_otoa
  8616  2476  3080               	movlw	128
  8617  2477  023A               	subwf	??_otoa,w
  8618  2478  1D03               	skipz
  8619  2479  2C7C               	goto	u8125
  8620  247A  3001               	movlw	1
  8621  247B  0246               	subwf	otoa@w,w
  8622  247C                     u8125:	
  8623  247C  1C03               	skipc
  8624  247D  2CDA               	goto	l790
  8625  247E  0022               	movlb	2	; select bank2
  8626  247F  1CEA               	btfss	_flags^(0+256),1
  8627  2480  2CDA               	goto	l790
  8628  2481                     l6571:	
  8629                           
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8631  2481  30FF               	movlw	255
  8632  2482  0020               	movlb	0	; select bank0
  8633  2483  07D0               	addwf	otoa@i,f
  8634  2484  30FF               	movlw	255
  8635  2485  3DD1               	addwfc	otoa@i+1,f
  8636                           
  8637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8638  2486  3007               	movlw	7
  8639  2487  0548               	andwf	otoa@n,w
  8640  2488  00C4               	movwf	otoa@t
  8641  2489  3000               	movlw	0
  8642  248A  0549               	andwf	otoa@n+1,w
  8643  248B  00C5               	movwf	otoa@t+1
  8644                           
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8646  248C  0844               	movf	otoa@t,w
  8647  248D  3E30               	addlw	48
  8648  248E  00BA               	movwf	??_otoa
  8649  248F  0850               	movf	otoa@i,w
  8650  2490  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8651  2491  0086               	movwf	6
  8652  2492  3002               	movlw	2	; select bank4/5
  8653  2493  0087               	movwf	7
  8654  2494  083A               	movf	??_otoa,w
  8655  2495  0081               	movwf	1
  8656                           
  8657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8658  2496  30FF               	movlw	255
  8659  2497  07C2               	addwf	otoa@p,f
  8660  2498  30FF               	movlw	255
  8661  2499  3DC3               	addwfc	otoa@p+1,f
  8662                           
  8663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8664  249A  30FF               	movlw	255
  8665  249B  07C6               	addwf	otoa@w,f
  8666  249C  30FF               	movlw	255
  8667  249D  3DC7               	addwfc	otoa@w+1,f
  8668                           
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8670  249E  3048               	movlw	low otoa@n
  8671  249F  0086               	movwf	6
  8672  24A0  3000               	movlw	high otoa@n
  8673  24A1  0087               	movwf	7
  8674  24A2  3F40               	moviw [0]fsr1
  8675  24A3  00BA               	movwf	??_otoa
  8676  24A4  3F41               	moviw [1]fsr1
  8677  24A5  00BB               	movwf	??_otoa+1
  8678  24A6  3F42               	moviw [2]fsr1
  8679  24A7  00BC               	movwf	??_otoa+2
  8680  24A8  3F43               	moviw [3]fsr1
  8681  24A9  00BD               	movwf	??_otoa+3
  8682  24AA  3F44               	moviw [4]fsr1
  8683  24AB  00BE               	movwf	??_otoa+4
  8684  24AC  3F45               	moviw [5]fsr1
  8685  24AD  00BF               	movwf	??_otoa+5
  8686  24AE  3F46               	moviw [6]fsr1
  8687  24AF  00C0               	movwf	??_otoa+6
  8688  24B0  3F47               	moviw [7]fsr1
  8689  24B1  00C1               	movwf	??_otoa+7
  8690  24B2  3003               	movlw	3
  8691  24B3                     u8085:	
  8692  24B3  0020               	movlb	0	; select bank0
  8693  24B4  36C1               	lsrf	??_otoa+7,f
  8694  24B5  0CC0               	rrf	??_otoa+6,f
  8695  24B6  0CBF               	rrf	??_otoa+5,f
  8696  24B7  0CBE               	rrf	??_otoa+4,f
  8697  24B8  0CBD               	rrf	??_otoa+3,f
  8698  24B9  0CBC               	rrf	??_otoa+2,f
  8699  24BA  0CBB               	rrf	??_otoa+1,f
  8700  24BB  0CBA               	rrf	??_otoa,f
  8701  24BC  0B89               	decfsz	9,f
  8702  24BD  2CB3               	goto	u8085
  8703  24BE  0020               	movlb	0	; select bank0
  8704  24BF  0841               	movf	??_otoa+7,w
  8705  24C0  00CF               	movwf	otoa@n+7
  8706  24C1  0840               	movf	??_otoa+6,w
  8707  24C2  00CE               	movwf	otoa@n+6
  8708  24C3  083F               	movf	??_otoa+5,w
  8709  24C4  00CD               	movwf	otoa@n+5
  8710  24C5  083E               	movf	??_otoa+4,w
  8711  24C6  00CC               	movwf	otoa@n+4
  8712  24C7  083D               	movf	??_otoa+3,w
  8713  24C8  00CB               	movwf	otoa@n+3
  8714  24C9  083C               	movf	??_otoa+2,w
  8715  24CA  00CA               	movwf	otoa@n+2
  8716  24CB  083B               	movf	??_otoa+1,w
  8717  24CC  00C9               	movwf	otoa@n+1
  8718  24CD  083A               	movf	??_otoa,w
  8719  24CE  00C8               	movwf	otoa@n
  8720  24CF                     l784:	
  8721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8722                           
  8723                           
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8725  24CF  0851               	movf	otoa@i+1,w
  8726  24D0  3A80               	xorlw	128
  8727  24D1  00BA               	movwf	??_otoa
  8728  24D2  3080               	movlw	128
  8729  24D3  023A               	subwf	??_otoa,w
  8730  24D4  1D03               	skipz
  8731  24D5  2CD8               	goto	u8095
  8732  24D6  3001               	movlw	1
  8733  24D7  0250               	subwf	otoa@i,w
  8734  24D8                     u8095:	
  8735  24D8  1803               	btfsc	3,0
  8736  24D9  2C5C               	goto	l6581
  8737  24DA                     l790:	
  8738                           
  8739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8740  24DA  0022               	movlb	2	; select bank2
  8741  24DB  1E6A               	btfss	_flags^(0+256),4
  8742  24DC  2CF3               	goto	l6597
  8743  24DD  0020               	movlb	0	; select bank0
  8744  24DE  0844               	movf	otoa@t,w
  8745  24DF  0445               	iorwf	otoa@t+1,w
  8746  24E0  1903               	btfsc	3,2
  8747  24E1  2CF3               	goto	l6597
  8748                           
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8750  24E2  30FF               	movlw	255
  8751  24E3  07D0               	addwf	otoa@i,f
  8752  24E4  30FF               	movlw	255
  8753  24E5  3DD1               	addwfc	otoa@i+1,f
  8754                           
  8755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8756  24E6  3030               	movlw	48
  8757  24E7  00BA               	movwf	??_otoa
  8758  24E8  0850               	movf	otoa@i,w
  8759  24E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8760  24EA  0086               	movwf	6
  8761  24EB  3002               	movlw	2	; select bank4/5
  8762  24EC  0087               	movwf	7
  8763  24ED  083A               	movf	??_otoa,w
  8764  24EE  0081               	movwf	1
  8765                           
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8767  24EF  30FF               	movlw	255
  8768  24F0  07C6               	addwf	otoa@w,f
  8769  24F1  30FF               	movlw	255
  8770  24F2  3DC7               	addwfc	otoa@w+1,f
  8771  24F3                     l6597:	
  8772                           
  8773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8774  24F3  0020               	movlb	0	; select bank0
  8775  24F4  0831               	movf	otoa@fp+1,w
  8776  24F5  00A7               	movwf	pad@fp+1
  8777  24F6  0830               	movf	otoa@fp,w
  8778  24F7  00A6               	movwf	pad@fp
  8779  24F8  0850               	movf	otoa@i,w
  8780  24F9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8781  24FA  00BA               	movwf	??_otoa
  8782  24FB  083A               	movf	??_otoa,w
  8783  24FC  00A8               	movwf	pad@buf
  8784  24FD  0847               	movf	otoa@w+1,w
  8785  24FE  00AA               	movwf	pad@p+1
  8786  24FF  0846               	movf	otoa@w,w
  8787  2500  00A9               	movwf	pad@p
  8788  2501  31B6  264D         	fcall	_pad
  8789  2503  0020               	movlb	0	; select bank0
  8790  2504  0827               	movf	?_pad+1,w
  8791  2505  00B1               	movwf	?_otoa+1
  8792  2506  0826               	movf	?_pad,w
  8793  2507  00B0               	movwf	?_otoa
  8794  2508  0008               	return
  8795  2509                     __end_of_otoa:	
  8796                           
  8797                           	psect	text19
  8798  1A36                     __ptext19:	
  8799 ;; *************** function _dtoa *****************
  8800 ;; Defined at:
  8801 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8804 ;;		 -> vsnprintf@f(6), 
  8805 ;;  d               8   18[BANK0 ] long long 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  n               8   37[BANK0 ] long long 
  8808 ;;  i               2   45[BANK0 ] int 
  8809 ;;  s               2   35[BANK0 ] int 
  8810 ;;  w               2   33[BANK0 ] int 
  8811 ;;  p               2   31[BANK0 ] int 
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  2   16[BANK0 ] int 
  8814 ;; Registers used:
  8815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8821 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8822 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8823 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8824 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8825 ;;Total ram usage:       31 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    5
  8828 ;; This function calls:
  8829 ;;		___aodiv
  8830 ;;		___aomod
  8831 ;;		_abs
  8832 ;;		_pad
  8833 ;; This function is called by:
  8834 ;;		_vfpfcnvrt
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           
  8839                           ;psect for function _dtoa
  8840  1A36                     _dtoa:	
  8841                           
  8842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8843                           
  8844                           ;incstack = 0
  8845                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8846  1A36  0020               	movlb	0	; select bank0
  8847  1A37  0832               	movf	dtoa@d,w
  8848  1A38  00C5               	movwf	dtoa@n
  8849  1A39  0833               	movf	dtoa@d+1,w
  8850  1A3A  00C6               	movwf	dtoa@n+1
  8851  1A3B  0834               	movf	dtoa@d+2,w
  8852  1A3C  00C7               	movwf	dtoa@n+2
  8853  1A3D  0835               	movf	dtoa@d+3,w
  8854  1A3E  00C8               	movwf	dtoa@n+3
  8855  1A3F  0836               	movf	dtoa@d+4,w
  8856  1A40  00C9               	movwf	dtoa@n+4
  8857  1A41  0837               	movf	dtoa@d+5,w
  8858  1A42  00CA               	movwf	dtoa@n+5
  8859  1A43  0838               	movf	dtoa@d+6,w
  8860  1A44  00CB               	movwf	dtoa@n+6
  8861  1A45  0839               	movf	dtoa@d+7,w
  8862  1A46  00CC               	movwf	dtoa@n+7
  8863                           
  8864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8865  1A47  3045               	movlw	low dtoa@n
  8866  1A48  0086               	movwf	6
  8867  1A49  3000               	movlw	high dtoa@n
  8868  1A4A  0087               	movwf	7
  8869  1A4B  3F47               	moviw [7]fsr1
  8870  1A4C  00BA               	movwf	??_dtoa
  8871  1A4D  1FBA               	btfss	??_dtoa,7
  8872  1A4E  2A51               	goto	u7900
  8873  1A4F  3001               	movlw	1
  8874  1A50  2A52               	goto	u7910
  8875  1A51                     u7900:	
  8876  1A51  3000               	movlw	0
  8877  1A52                     u7910:	
  8878  1A52  0020               	movlb	0	; select bank0
  8879  1A53  00BB               	movwf	??_dtoa+1
  8880  1A54  01BC               	clrf	??_dtoa+2
  8881  1A55  083B               	movf	??_dtoa+1,w
  8882  1A56  00C3               	movwf	dtoa@s
  8883  1A57  083C               	movf	??_dtoa+2,w
  8884  1A58  00C4               	movwf	dtoa@s+1
  8885                           
  8886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8887  1A59  0843               	movf	dtoa@s,w
  8888  1A5A  0444               	iorwf	dtoa@s+1,w
  8889  1A5B  1903               	btfsc	3,2
  8890  1A5C  2A7B               	goto	l753
  8891                           
  8892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8893  1A5D  09C5               	comf	dtoa@n,f
  8894  1A5E  09C6               	comf	dtoa@n+1,f
  8895  1A5F  09C7               	comf	dtoa@n+2,f
  8896  1A60  09C8               	comf	dtoa@n+3,f
  8897  1A61  09C9               	comf	dtoa@n+4,f
  8898  1A62  09CA               	comf	dtoa@n+5,f
  8899  1A63  09CB               	comf	dtoa@n+6,f
  8900  1A64  09CC               	comf	dtoa@n+7,f
  8901  1A65  0AC5               	incf	dtoa@n,f
  8902  1A66  1D03               	skipz
  8903  1A67  2A7B               	goto	l753
  8904  1A68  0AC6               	incf	dtoa@n+1,f
  8905  1A69  1D03               	skipz
  8906  1A6A  2A7B               	goto	l753
  8907  1A6B  0AC7               	incf	dtoa@n+2,f
  8908  1A6C  1D03               	skipz
  8909  1A6D  2A7B               	goto	l753
  8910  1A6E  0AC8               	incf	dtoa@n+3,f
  8911  1A6F  1D03               	skipz
  8912  1A70  2A7B               	goto	l753
  8913  1A71  0AC9               	incf	dtoa@n+4,f
  8914  1A72  1D03               	skipz
  8915  1A73  2A7B               	goto	l753
  8916  1A74  0ACA               	incf	dtoa@n+5,f
  8917  1A75  1D03               	skipz
  8918  1A76  2A7B               	goto	l753
  8919  1A77  0ACB               	incf	dtoa@n+6,f
  8920  1A78  1D03               	skipz
  8921  1A79  2A7B               	goto	l753
  8922  1A7A  0ACC               	incf	dtoa@n+7,f
  8923  1A7B                     l753:	
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8925                           
  8926                           
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8928  1A7B  0022               	movlb	2	; select bank2
  8929  1A7C  1BE9               	btfsc	(_prec+1)^(0+256),7
  8930  1A7D  2A82               	goto	l754
  8931                           
  8932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8933  1A7E  30FD               	movlw	253
  8934  1A7F  05EA               	andwf	_flags^(0+256),f
  8935  1A80  30FF               	movlw	255
  8936  1A81  05EB               	andwf	(_flags+1)^(0+256),f
  8937  1A82                     l754:	
  8938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8939                           
  8940                           
  8941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8942  1A82  0869               	movf	(_prec+1)^(0+256),w
  8943  1A83  3A80               	xorlw	128
  8944  1A84  0020               	movlb	0	; select bank0
  8945  1A85  00BA               	movwf	??_dtoa
  8946  1A86  3080               	movlw	128
  8947  1A87  023A               	subwf	??_dtoa,w
  8948  1A88  1D03               	skipz
  8949  1A89  2A8D               	goto	u7955
  8950  1A8A  3001               	movlw	1
  8951  1A8B  0022               	movlb	2	; select bank2
  8952  1A8C  0268               	subwf	_prec^(0+256),w
  8953  1A8D                     u7955:	
  8954  1A8D  1803               	skipnc
  8955  1A8E  2A95               	goto	l6511
  8956  1A8F  3001               	movlw	1
  8957  1A90  0020               	movlb	0	; select bank0
  8958  1A91  00BF               	movwf	dtoa@p
  8959  1A92  3000               	movlw	0
  8960  1A93  00C0               	movwf	dtoa@p+1
  8961  1A94  2A9D               	goto	l758
  8962  1A95                     l6511:	
  8963  1A95  0022               	movlb	2	; select bank2
  8964  1A96  0869               	movf	(_prec+1)^(0+256),w
  8965  1A97  0020               	movlb	0	; select bank0
  8966  1A98  00C0               	movwf	dtoa@p+1
  8967  1A99  0022               	movlb	2	; select bank2
  8968  1A9A  0868               	movf	_prec^(0+256),w
  8969  1A9B  0020               	movlb	0	; select bank0
  8970  1A9C  00BF               	movwf	dtoa@p
  8971  1A9D                     l758:	
  8972                           
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8974  1A9D  0022               	movlb	2	; select bank2
  8975  1A9E  0867               	movf	(_width+1)^(0+256),w
  8976  1A9F  0020               	movlb	0	; select bank0
  8977  1AA0  00C2               	movwf	dtoa@w+1
  8978  1AA1  0022               	movlb	2	; select bank2
  8979  1AA2  0866               	movf	_width^(0+256),w
  8980  1AA3  0020               	movlb	0	; select bank0
  8981  1AA4  00C1               	movwf	dtoa@w
  8982                           
  8983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8984  1AA5  0843               	movf	dtoa@s,w
  8985  1AA6  0444               	iorwf	dtoa@s+1,w
  8986  1AA7  1D03               	btfss	3,2
  8987  1AA8  2AAC               	goto	l6517
  8988  1AA9  0022               	movlb	2	; select bank2
  8989  1AAA  1D6A               	btfss	_flags^(0+256),2
  8990  1AAB  2AB1               	goto	l759
  8991  1AAC                     l6517:	
  8992                           
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8994  1AAC  30FF               	movlw	255
  8995  1AAD  0020               	movlb	0	; select bank0
  8996  1AAE  07C1               	addwf	dtoa@w,f
  8997  1AAF  30FF               	movlw	255
  8998  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8999  1AB1                     l759:	
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9001                           
  9002                           
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9004  1AB1  301F               	movlw	31
  9005  1AB2  0020               	movlb	0	; select bank0
  9006  1AB3  00CD               	movwf	dtoa@i
  9007  1AB4  3000               	movlw	0
  9008  1AB5  00CE               	movwf	dtoa@i+1
  9009                           
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9011  1AB6  0024               	movlb	4	; select bank4
  9012  1AB7  01BF               	clrf	(_dbuf^(0+512)+31)
  9013                           
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9015  1AB8  2B47               	goto	l762
  9016  1AB9                     l6531:	
  9017  1AB9  0020               	movlb	0	; select bank0
  9018  1ABA  0845               	movf	dtoa@n,w
  9019  1ABB  0446               	iorwf	dtoa@n+1,w
  9020  1ABC  0447               	iorwf	dtoa@n+2,w
  9021  1ABD  0448               	iorwf	dtoa@n+3,w
  9022  1ABE  0449               	iorwf	dtoa@n+4,w
  9023  1ABF  044A               	iorwf	dtoa@n+5,w
  9024  1AC0  044B               	iorwf	dtoa@n+6,w
  9025  1AC1  044C               	iorwf	dtoa@n+7,w
  9026  1AC2  1D03               	skipz
  9027  1AC3  2ADE               	goto	l6521
  9028  1AC4  0840               	movf	dtoa@p+1,w
  9029  1AC5  3A80               	xorlw	128
  9030  1AC6  00BA               	movwf	??_dtoa
  9031  1AC7  3080               	movlw	128
  9032  1AC8  023A               	subwf	??_dtoa,w
  9033  1AC9  1D03               	skipz
  9034  1ACA  2ACD               	goto	u8005
  9035  1ACB  3001               	movlw	1
  9036  1ACC  023F               	subwf	dtoa@p,w
  9037  1ACD                     u8005:	
  9038  1ACD  1803               	skipnc
  9039  1ACE  2ADE               	goto	l6521
  9040  1ACF  0020               	movlb	0	; select bank0
  9041  1AD0  0842               	movf	dtoa@w+1,w
  9042  1AD1  3A80               	xorlw	128
  9043  1AD2  00BA               	movwf	??_dtoa
  9044  1AD3  3080               	movlw	128
  9045  1AD4  023A               	subwf	??_dtoa,w
  9046  1AD5  1D03               	skipz
  9047  1AD6  2AD9               	goto	u8015
  9048  1AD7  3001               	movlw	1
  9049  1AD8  0241               	subwf	dtoa@w,w
  9050  1AD9                     u8015:	
  9051  1AD9  1C03               	skipc
  9052  1ADA  2B53               	goto	l6539
  9053  1ADB  0022               	movlb	2	; select bank2
  9054  1ADC  1CEA               	btfss	_flags^(0+256),1
  9055  1ADD  2B53               	goto	l6539
  9056  1ADE                     l6521:	
  9057                           
  9058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9059  1ADE  30FF               	movlw	255
  9060  1ADF  0020               	movlb	0	; select bank0
  9061  1AE0  07CD               	addwf	dtoa@i,f
  9062  1AE1  30FF               	movlw	255
  9063  1AE2  3DCE               	addwfc	dtoa@i+1,f
  9064                           
  9065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9066  1AE3  300A               	movlw	10
  9067  1AE4  00A0               	movwf	___aomod@divisor
  9068  1AE5  01A1               	clrf	___aomod@divisor+1
  9069  1AE6  01A2               	clrf	___aomod@divisor+2
  9070  1AE7  01A3               	clrf	___aomod@divisor+3
  9071  1AE8  01A4               	clrf	___aomod@divisor+4
  9072  1AE9  01A5               	clrf	___aomod@divisor+5
  9073  1AEA  01A6               	clrf	___aomod@divisor+6
  9074  1AEB  01A7               	clrf	___aomod@divisor+7
  9075  1AEC  0845               	movf	dtoa@n,w
  9076  1AED  00A8               	movwf	___aomod@dividend
  9077  1AEE  0846               	movf	dtoa@n+1,w
  9078  1AEF  00A9               	movwf	___aomod@dividend+1
  9079  1AF0  0847               	movf	dtoa@n+2,w
  9080  1AF1  00AA               	movwf	___aomod@dividend+2
  9081  1AF2  0848               	movf	dtoa@n+3,w
  9082  1AF3  00AB               	movwf	___aomod@dividend+3
  9083  1AF4  0849               	movf	dtoa@n+4,w
  9084  1AF5  00AC               	movwf	___aomod@dividend+4
  9085  1AF6  084A               	movf	dtoa@n+5,w
  9086  1AF7  00AD               	movwf	___aomod@dividend+5
  9087  1AF8  084B               	movf	dtoa@n+6,w
  9088  1AF9  00AE               	movwf	___aomod@dividend+6
  9089  1AFA  084C               	movf	dtoa@n+7,w
  9090  1AFB  00AF               	movwf	___aomod@dividend+7
  9091  1AFC  31A2  225B  319A   	fcall	___aomod
  9092  1AFF  0020               	movlb	0	; select bank0
  9093  1B00  0821               	movf	?___aomod+1,w
  9094  1B01  00F5               	movwf	abs@a+1
  9095  1B02  0820               	movf	?___aomod,w
  9096  1B03  00F4               	movwf	abs@a
  9097  1B04  31B2  22CA  319A   	fcall	_abs
  9098  1B07  0874               	movf	?_abs,w
  9099  1B08  3E30               	addlw	48
  9100  1B09  0020               	movlb	0	; select bank0
  9101  1B0A  00BA               	movwf	??_dtoa
  9102  1B0B  084D               	movf	dtoa@i,w
  9103  1B0C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9104  1B0D  0086               	movwf	6
  9105  1B0E  3002               	movlw	2	; select bank4/5
  9106  1B0F  0087               	movwf	7
  9107  1B10  083A               	movf	??_dtoa,w
  9108  1B11  0081               	movwf	1
  9109                           
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9111  1B12  30FF               	movlw	255
  9112  1B13  07BF               	addwf	dtoa@p,f
  9113  1B14  30FF               	movlw	255
  9114  1B15  3DC0               	addwfc	dtoa@p+1,f
  9115                           
  9116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9117  1B16  30FF               	movlw	255
  9118  1B17  07C1               	addwf	dtoa@w,f
  9119  1B18  30FF               	movlw	255
  9120  1B19  3DC2               	addwfc	dtoa@w+1,f
  9121                           
  9122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9123  1B1A  300A               	movlw	10
  9124  1B1B  00A0               	movwf	___aodiv@divisor
  9125  1B1C  01A1               	clrf	___aodiv@divisor+1
  9126  1B1D  01A2               	clrf	___aodiv@divisor+2
  9127  1B1E  01A3               	clrf	___aodiv@divisor+3
  9128  1B1F  01A4               	clrf	___aodiv@divisor+4
  9129  1B20  01A5               	clrf	___aodiv@divisor+5
  9130  1B21  01A6               	clrf	___aodiv@divisor+6
  9131  1B22  01A7               	clrf	___aodiv@divisor+7
  9132  1B23  0845               	movf	dtoa@n,w
  9133  1B24  00A8               	movwf	___aodiv@dividend
  9134  1B25  0846               	movf	dtoa@n+1,w
  9135  1B26  00A9               	movwf	___aodiv@dividend+1
  9136  1B27  0847               	movf	dtoa@n+2,w
  9137  1B28  00AA               	movwf	___aodiv@dividend+2
  9138  1B29  0848               	movf	dtoa@n+3,w
  9139  1B2A  00AB               	movwf	___aodiv@dividend+3
  9140  1B2B  0849               	movf	dtoa@n+4,w
  9141  1B2C  00AC               	movwf	___aodiv@dividend+4
  9142  1B2D  084A               	movf	dtoa@n+5,w
  9143  1B2E  00AD               	movwf	___aodiv@dividend+5
  9144  1B2F  084B               	movf	dtoa@n+6,w
  9145  1B30  00AE               	movwf	___aodiv@dividend+6
  9146  1B31  084C               	movf	dtoa@n+7,w
  9147  1B32  00AF               	movwf	___aodiv@dividend+7
  9148  1B33  31A5  2509  319A   	fcall	___aodiv
  9149  1B36  0020               	movlb	0	; select bank0
  9150  1B37  0820               	movf	?___aodiv,w
  9151  1B38  00C5               	movwf	dtoa@n
  9152  1B39  0821               	movf	?___aodiv+1,w
  9153  1B3A  00C6               	movwf	dtoa@n+1
  9154  1B3B  0822               	movf	?___aodiv+2,w
  9155  1B3C  00C7               	movwf	dtoa@n+2
  9156  1B3D  0823               	movf	?___aodiv+3,w
  9157  1B3E  00C8               	movwf	dtoa@n+3
  9158  1B3F  0824               	movf	?___aodiv+4,w
  9159  1B40  00C9               	movwf	dtoa@n+4
  9160  1B41  0825               	movf	?___aodiv+5,w
  9161  1B42  00CA               	movwf	dtoa@n+5
  9162  1B43  0826               	movf	?___aodiv+6,w
  9163  1B44  00CB               	movwf	dtoa@n+6
  9164  1B45  0827               	movf	?___aodiv+7,w
  9165  1B46  00CC               	movwf	dtoa@n+7
  9166  1B47                     l762:	
  9167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9168                           
  9169                           
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9171  1B47  0020               	movlb	0	; select bank0
  9172  1B48  084E               	movf	dtoa@i+1,w
  9173  1B49  3A80               	xorlw	128
  9174  1B4A  00BA               	movwf	??_dtoa
  9175  1B4B  3080               	movlw	128
  9176  1B4C  023A               	subwf	??_dtoa,w
  9177  1B4D  1D03               	skipz
  9178  1B4E  2B51               	goto	u7985
  9179  1B4F  3001               	movlw	1
  9180  1B50  024D               	subwf	dtoa@i,w
  9181  1B51                     u7985:	
  9182  1B51  1803               	btfsc	3,0
  9183  1B52  2AB9               	goto	l6531
  9184  1B53                     l6539:	
  9185                           
  9186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9187  1B53  0020               	movlb	0	; select bank0
  9188  1B54  0843               	movf	dtoa@s,w
  9189  1B55  0444               	iorwf	dtoa@s+1,w
  9190  1B56  1D03               	btfss	3,2
  9191  1B57  2B5B               	goto	l6543
  9192  1B58  0022               	movlb	2	; select bank2
  9193  1B59  1D6A               	btfss	_flags^(0+256),2
  9194  1B5A  2B73               	goto	l6553
  9195  1B5B                     l6543:	
  9196                           
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9198  1B5B  30FF               	movlw	255
  9199  1B5C  0020               	movlb	0	; select bank0
  9200  1B5D  07CD               	addwf	dtoa@i,f
  9201  1B5E  30FF               	movlw	255
  9202  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9203                           
  9204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9205  1B60  0843               	movf	dtoa@s,w
  9206  1B61  0444               	iorwf	dtoa@s+1,w
  9207  1B62  1D03               	btfss	3,2
  9208  1B63  2B66               	goto	l6549
  9209  1B64  302B               	movlw	43
  9210  1B65  2B67               	goto	L2
  9211  1B66                     l6549:	
  9212  1B66  302D               	movlw	45
  9213  1B67                     L2:	
  9214  1B67  00BD               	movwf	_dtoa$1259
  9215  1B68  3000               	movlw	0
  9216  1B69  00BE               	movwf	_dtoa$1259+1
  9217  1B6A  083D               	movf	_dtoa$1259,w
  9218  1B6B  00BA               	movwf	??_dtoa
  9219  1B6C  084D               	movf	dtoa@i,w
  9220  1B6D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9221  1B6E  0086               	movwf	6
  9222  1B6F  3002               	movlw	2	; select bank4/5
  9223  1B70  0087               	movwf	7
  9224  1B71  083A               	movf	??_dtoa,w
  9225  1B72  0081               	movwf	1
  9226  1B73                     l6553:	
  9227                           
  9228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9229  1B73  0020               	movlb	0	; select bank0
  9230  1B74  0831               	movf	dtoa@fp+1,w
  9231  1B75  00A7               	movwf	pad@fp+1
  9232  1B76  0830               	movf	dtoa@fp,w
  9233  1B77  00A6               	movwf	pad@fp
  9234  1B78  084D               	movf	dtoa@i,w
  9235  1B79  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9236  1B7A  00BA               	movwf	??_dtoa
  9237  1B7B  083A               	movf	??_dtoa,w
  9238  1B7C  00A8               	movwf	pad@buf
  9239  1B7D  0842               	movf	dtoa@w+1,w
  9240  1B7E  00AA               	movwf	pad@p+1
  9241  1B7F  0841               	movf	dtoa@w,w
  9242  1B80  00A9               	movwf	pad@p
  9243  1B81  31B6  264D         	fcall	_pad
  9244  1B83  0020               	movlb	0	; select bank0
  9245  1B84  0827               	movf	?_pad+1,w
  9246  1B85  00B1               	movwf	?_dtoa+1
  9247  1B86  0826               	movf	?_pad,w
  9248  1B87  00B0               	movwf	?_dtoa
  9249  1B88  0008               	return
  9250  1B89                     __end_of_dtoa:	
  9251                           
  9252                           	psect	text20
  9253  32CA                     __ptext20:	
  9254 ;; *************** function _abs *****************
  9255 ;; Defined at:
  9256 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  a               2    4[COMMON] int 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    4[COMMON] int 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9274 ;;Total ram usage:        4 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_dtoa
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _abs
  9286  32CA                     _abs:	
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _abs: [wreg+status,2+status,0]
  9290  32CA  0875               	movf	abs@a+1,w
  9291  32CB  3A80               	xorlw	128
  9292  32CC  00F6               	movwf	??_abs
  9293  32CD  3080               	movlw	128
  9294  32CE  0276               	subwf	??_abs,w
  9295  32CF  1D03               	skipz
  9296  32D0  2AD3               	goto	u4055
  9297  32D1  3001               	movlw	1
  9298  32D2  0274               	subwf	abs@a,w
  9299  32D3                     u4055:	
  9300  32D3  1803               	skipnc
  9301  32D4  0008               	return
  9302  32D5  0974               	comf	abs@a,w
  9303  32D6  00F6               	movwf	??_abs
  9304  32D7  0975               	comf	abs@a+1,w
  9305  32D8  00F7               	movwf	??_abs+1
  9306  32D9  0AF6               	incf	??_abs,f
  9307  32DA  1903               	skipnz
  9308  32DB  0AF7               	incf	??_abs+1,f
  9309  32DC  0876               	movf	??_abs,w
  9310  32DD  00F4               	movwf	?_abs
  9311  32DE  0877               	movf	??_abs+1,w
  9312  32DF  00F5               	movwf	?_abs+1
  9313  32E0  0008               	return
  9314  32E1                     __end_of_abs:	
  9315                           
  9316                           	psect	text21
  9317  225B                     __ptext21:	
  9318 ;; *************** function ___aomod *****************
  9319 ;; Defined at:
  9320 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  divisor         8    0[BANK0 ] long long 
  9323 ;;  dividend        8    8[BANK0 ] long long 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  sign            1    3[COMMON] unsigned char 
  9326 ;;  counter         1    2[COMMON] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  8    0[BANK0 ] long long 
  9329 ;; Registers used:
  9330 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9336 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9339 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9340 ;;Total ram usage:       19 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    1
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_dtoa
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           
  9351                           ;psect for function ___aomod
  9352  225B                     ___aomod:	
  9353                           
  9354                           ;incstack = 0
  9355                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9356  225B  01F3               	clrf	___aomod@sign
  9357  225C  3028               	movlw	low ___aomod@dividend
  9358  225D  0086               	movwf	6
  9359  225E  3000               	movlw	high ___aomod@dividend
  9360  225F  0087               	movwf	7
  9361  2260  3F47               	moviw [7]fsr1
  9362  2261  00F1               	movwf	??___aomod
  9363  2262  1FF1               	btfss	??___aomod,7
  9364  2263  2A85               	goto	l4195
  9365  2264  0020               	movlb	0	; select bank0
  9366  2265  09A8               	comf	___aomod@dividend,f
  9367  2266  09A9               	comf	___aomod@dividend+1,f
  9368  2267  09AA               	comf	___aomod@dividend+2,f
  9369  2268  09AB               	comf	___aomod@dividend+3,f
  9370  2269  09AC               	comf	___aomod@dividend+4,f
  9371  226A  09AD               	comf	___aomod@dividend+5,f
  9372  226B  09AE               	comf	___aomod@dividend+6,f
  9373  226C  09AF               	comf	___aomod@dividend+7,f
  9374  226D  0AA8               	incf	___aomod@dividend,f
  9375  226E  1D03               	skipz
  9376  226F  2A83               	goto	u431lld
  9377  2270  0AA9               	incf	___aomod@dividend+1,f
  9378  2271  1D03               	skipz
  9379  2272  2A83               	goto	u431lld
  9380  2273  0AAA               	incf	___aomod@dividend+2,f
  9381  2274  1D03               	skipz
  9382  2275  2A83               	goto	u431lld
  9383  2276  0AAB               	incf	___aomod@dividend+3,f
  9384  2277  1D03               	skipz
  9385  2278  2A83               	goto	u431lld
  9386  2279  0AAC               	incf	___aomod@dividend+4,f
  9387  227A  1D03               	skipz
  9388  227B  2A83               	goto	u431lld
  9389  227C  0AAD               	incf	___aomod@dividend+5,f
  9390  227D  1D03               	skipz
  9391  227E  2A83               	goto	u431lld
  9392  227F  0AAE               	incf	___aomod@dividend+6,f
  9393  2280  1D03               	skipz
  9394  2281  2A83               	goto	u431lld
  9395  2282  0AAF               	incf	___aomod@dividend+7,f
  9396  2283                     u431lld:	
  9397  2283  01F3               	clrf	___aomod@sign
  9398  2284  0AF3               	incf	___aomod@sign,f
  9399  2285                     l4195:	
  9400  2285  3020               	movlw	low ___aomod@divisor
  9401  2286  0086               	movwf	6
  9402  2287  3000               	movlw	high ___aomod@divisor
  9403  2288  0087               	movwf	7
  9404  2289  3F47               	moviw [7]fsr1
  9405  228A  00F1               	movwf	??___aomod
  9406  228B  1FF1               	btfss	??___aomod,7
  9407  228C  2AAC               	goto	l4199
  9408  228D  0020               	movlb	0	; select bank0
  9409  228E  09A0               	comf	___aomod@divisor,f
  9410  228F  09A1               	comf	___aomod@divisor+1,f
  9411  2290  09A2               	comf	___aomod@divisor+2,f
  9412  2291  09A3               	comf	___aomod@divisor+3,f
  9413  2292  09A4               	comf	___aomod@divisor+4,f
  9414  2293  09A5               	comf	___aomod@divisor+5,f
  9415  2294  09A6               	comf	___aomod@divisor+6,f
  9416  2295  09A7               	comf	___aomod@divisor+7,f
  9417  2296  0AA0               	incf	___aomod@divisor,f
  9418  2297  1D03               	skipz
  9419  2298  2AAC               	goto	l4199
  9420  2299  0AA1               	incf	___aomod@divisor+1,f
  9421  229A  1D03               	skipz
  9422  229B  2AAC               	goto	l4199
  9423  229C  0AA2               	incf	___aomod@divisor+2,f
  9424  229D  1D03               	skipz
  9425  229E  2AAC               	goto	l4199
  9426  229F  0AA3               	incf	___aomod@divisor+3,f
  9427  22A0  1D03               	skipz
  9428  22A1  2AAC               	goto	l4199
  9429  22A2  0AA4               	incf	___aomod@divisor+4,f
  9430  22A3  1D03               	skipz
  9431  22A4  2AAC               	goto	l4199
  9432  22A5  0AA5               	incf	___aomod@divisor+5,f
  9433  22A6  1D03               	skipz
  9434  22A7  2AAC               	goto	l4199
  9435  22A8  0AA6               	incf	___aomod@divisor+6,f
  9436  22A9  1D03               	skipz
  9437  22AA  2AAC               	goto	l4199
  9438  22AB  0AA7               	incf	___aomod@divisor+7,f
  9439  22AC                     l4199:	
  9440  22AC  0020               	movlb	0	; select bank0
  9441  22AD  0820               	movf	___aomod@divisor,w
  9442  22AE  0421               	iorwf	___aomod@divisor+1,w
  9443  22AF  0422               	iorwf	___aomod@divisor+2,w
  9444  22B0  0423               	iorwf	___aomod@divisor+3,w
  9445  22B1  0424               	iorwf	___aomod@divisor+4,w
  9446  22B2  0425               	iorwf	___aomod@divisor+5,w
  9447  22B3  0426               	iorwf	___aomod@divisor+6,w
  9448  22B4  0427               	iorwf	___aomod@divisor+7,w
  9449  22B5  1903               	skipnz
  9450  22B6  2B04               	goto	l4215
  9451  22B7  01F2               	clrf	___aomod@counter
  9452  22B8  0AF2               	incf	___aomod@counter,f
  9453  22B9                     l4207:	
  9454  22B9  1BA7               	btfsc	___aomod@divisor+7,7
  9455  22BA  2AC8               	goto	l4209
  9456  22BB  35A0               	lslf	___aomod@divisor,f
  9457  22BC  0DA1               	rlf	___aomod@divisor+1,f
  9458  22BD  0DA2               	rlf	___aomod@divisor+2,f
  9459  22BE  0DA3               	rlf	___aomod@divisor+3,f
  9460  22BF  0DA4               	rlf	___aomod@divisor+4,f
  9461  22C0  0DA5               	rlf	___aomod@divisor+5,f
  9462  22C1  0DA6               	rlf	___aomod@divisor+6,f
  9463  22C2  0DA7               	rlf	___aomod@divisor+7,f
  9464  22C3  3001               	movlw	1
  9465  22C4  00F1               	movwf	??___aomod
  9466  22C5  0871               	movf	??___aomod,w
  9467  22C6  07F2               	addwf	___aomod@counter,f
  9468  22C7  2AB9               	goto	l4207
  9469  22C8                     l4209:	
  9470  22C8  0827               	movf	___aomod@divisor+7,w
  9471  22C9  022F               	subwf	___aomod@dividend+7,w
  9472  22CA  1D03               	skipz
  9473  22CB  2AE6               	goto	u4365
  9474  22CC  0826               	movf	___aomod@divisor+6,w
  9475  22CD  022E               	subwf	___aomod@dividend+6,w
  9476  22CE  1D03               	skipz
  9477  22CF  2AE6               	goto	u4365
  9478  22D0  0825               	movf	___aomod@divisor+5,w
  9479  22D1  022D               	subwf	___aomod@dividend+5,w
  9480  22D2  1D03               	skipz
  9481  22D3  2AE6               	goto	u4365
  9482  22D4  0824               	movf	___aomod@divisor+4,w
  9483  22D5  022C               	subwf	___aomod@dividend+4,w
  9484  22D6  1D03               	skipz
  9485  22D7  2AE6               	goto	u4365
  9486  22D8  0823               	movf	___aomod@divisor+3,w
  9487  22D9  022B               	subwf	___aomod@dividend+3,w
  9488  22DA  1D03               	skipz
  9489  22DB  2AE6               	goto	u4365
  9490  22DC  0822               	movf	___aomod@divisor+2,w
  9491  22DD  022A               	subwf	___aomod@dividend+2,w
  9492  22DE  1D03               	skipz
  9493  22DF  2AE6               	goto	u4365
  9494  22E0  0821               	movf	___aomod@divisor+1,w
  9495  22E1  0229               	subwf	___aomod@dividend+1,w
  9496  22E2  1D03               	skipz
  9497  22E3  2AE6               	goto	u4365
  9498  22E4  0820               	movf	___aomod@divisor,w
  9499  22E5  0228               	subwf	___aomod@dividend,w
  9500  22E6                     u4365:	
  9501  22E6  1C03               	skipc
  9502  22E7  2AF8               	goto	l4213
  9503  22E8  0820               	movf	___aomod@divisor,w
  9504  22E9  02A8               	subwf	___aomod@dividend,f
  9505  22EA  0821               	movf	___aomod@divisor+1,w
  9506  22EB  3BA9               	subwfb	___aomod@dividend+1,f
  9507  22EC  0822               	movf	___aomod@divisor+2,w
  9508  22ED  3BAA               	subwfb	___aomod@dividend+2,f
  9509  22EE  0823               	movf	___aomod@divisor+3,w
  9510  22EF  3BAB               	subwfb	___aomod@dividend+3,f
  9511  22F0  0824               	movf	___aomod@divisor+4,w
  9512  22F1  3BAC               	subwfb	___aomod@dividend+4,f
  9513  22F2  0825               	movf	___aomod@divisor+5,w
  9514  22F3  3BAD               	subwfb	___aomod@dividend+5,f
  9515  22F4  0826               	movf	___aomod@divisor+6,w
  9516  22F5  3BAE               	subwfb	___aomod@dividend+6,f
  9517  22F6  0827               	movf	___aomod@divisor+7,w
  9518  22F7  3BAF               	subwfb	___aomod@dividend+7,f
  9519  22F8                     l4213:	
  9520  22F8  36A7               	lsrf	___aomod@divisor+7,f
  9521  22F9  0CA6               	rrf	___aomod@divisor+6,f
  9522  22FA  0CA5               	rrf	___aomod@divisor+5,f
  9523  22FB  0CA4               	rrf	___aomod@divisor+4,f
  9524  22FC  0CA3               	rrf	___aomod@divisor+3,f
  9525  22FD  0CA2               	rrf	___aomod@divisor+2,f
  9526  22FE  0CA1               	rrf	___aomod@divisor+1,f
  9527  22FF  0CA0               	rrf	___aomod@divisor,f
  9528  2300  3001               	movlw	1
  9529  2301  02F2               	subwf	___aomod@counter,f
  9530  2302  1D03               	btfss	3,2
  9531  2303  2AC8               	goto	l4209
  9532  2304                     l4215:	
  9533  2304  0873               	movf	___aomod@sign,w
  9534  2305  1903               	btfsc	3,2
  9535  2306  2B25               	goto	l1059
  9536  2307  09A8               	comf	___aomod@dividend,f
  9537  2308  09A9               	comf	___aomod@dividend+1,f
  9538  2309  09AA               	comf	___aomod@dividend+2,f
  9539  230A  09AB               	comf	___aomod@dividend+3,f
  9540  230B  09AC               	comf	___aomod@dividend+4,f
  9541  230C  09AD               	comf	___aomod@dividend+5,f
  9542  230D  09AE               	comf	___aomod@dividend+6,f
  9543  230E  09AF               	comf	___aomod@dividend+7,f
  9544  230F  0AA8               	incf	___aomod@dividend,f
  9545  2310  1D03               	skipz
  9546  2311  2B25               	goto	l1059
  9547  2312  0AA9               	incf	___aomod@dividend+1,f
  9548  2313  1D03               	skipz
  9549  2314  2B25               	goto	l1059
  9550  2315  0AAA               	incf	___aomod@dividend+2,f
  9551  2316  1D03               	skipz
  9552  2317  2B25               	goto	l1059
  9553  2318  0AAB               	incf	___aomod@dividend+3,f
  9554  2319  1D03               	skipz
  9555  231A  2B25               	goto	l1059
  9556  231B  0AAC               	incf	___aomod@dividend+4,f
  9557  231C  1D03               	skipz
  9558  231D  2B25               	goto	l1059
  9559  231E  0AAD               	incf	___aomod@dividend+5,f
  9560  231F  1D03               	skipz
  9561  2320  2B25               	goto	l1059
  9562  2321  0AAE               	incf	___aomod@dividend+6,f
  9563  2322  1D03               	skipz
  9564  2323  2B25               	goto	l1059
  9565  2324  0AAF               	incf	___aomod@dividend+7,f
  9566  2325                     l1059:	
  9567  2325  0020               	movlb	0	; select bank0
  9568  2326  0828               	movf	___aomod@dividend,w
  9569  2327  00A0               	movwf	?___aomod
  9570  2328  0829               	movf	___aomod@dividend+1,w
  9571  2329  00A1               	movwf	?___aomod+1
  9572  232A  082A               	movf	___aomod@dividend+2,w
  9573  232B  00A2               	movwf	?___aomod+2
  9574  232C  082B               	movf	___aomod@dividend+3,w
  9575  232D  00A3               	movwf	?___aomod+3
  9576  232E  082C               	movf	___aomod@dividend+4,w
  9577  232F  00A4               	movwf	?___aomod+4
  9578  2330  082D               	movf	___aomod@dividend+5,w
  9579  2331  00A5               	movwf	?___aomod+5
  9580  2332  082E               	movf	___aomod@dividend+6,w
  9581  2333  00A6               	movwf	?___aomod+6
  9582  2334  082F               	movf	___aomod@dividend+7,w
  9583  2335  00A7               	movwf	?___aomod+7
  9584  2336  0008               	return
  9585  2337                     __end_of___aomod:	
  9586                           
  9587                           	psect	text22
  9588  2509                     __ptext22:	
  9589 ;; *************** function ___aodiv *****************
  9590 ;; Defined at:
  9591 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  divisor         8    0[BANK0 ] long long 
  9594 ;;  dividend        8    8[BANK0 ] long long 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  quotient        8    4[COMMON] long long 
  9597 ;;  sign            1    3[COMMON] unsigned char 
  9598 ;;  counter         1    2[COMMON] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  8    0[BANK0 ] long long 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9608 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9609 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9611 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9612 ;;Total ram usage:       27 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    1
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_dtoa
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function ___aodiv
  9624  2509                     ___aodiv:	
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9628  2509  01F3               	clrf	___aodiv@sign
  9629  250A  3020               	movlw	low ___aodiv@divisor
  9630  250B  0086               	movwf	6
  9631  250C  3000               	movlw	high ___aodiv@divisor
  9632  250D  0087               	movwf	7
  9633  250E  3F47               	moviw [7]fsr1
  9634  250F  00F1               	movwf	??___aodiv
  9635  2510  1FF1               	btfss	??___aodiv,7
  9636  2511  2D33               	goto	l4157
  9637  2512  0020               	movlb	0	; select bank0
  9638  2513  09A0               	comf	___aodiv@divisor,f
  9639  2514  09A1               	comf	___aodiv@divisor+1,f
  9640  2515  09A2               	comf	___aodiv@divisor+2,f
  9641  2516  09A3               	comf	___aodiv@divisor+3,f
  9642  2517  09A4               	comf	___aodiv@divisor+4,f
  9643  2518  09A5               	comf	___aodiv@divisor+5,f
  9644  2519  09A6               	comf	___aodiv@divisor+6,f
  9645  251A  09A7               	comf	___aodiv@divisor+7,f
  9646  251B  0AA0               	incf	___aodiv@divisor,f
  9647  251C  1D03               	skipz
  9648  251D  2D31               	goto	u420lld
  9649  251E  0AA1               	incf	___aodiv@divisor+1,f
  9650  251F  1D03               	skipz
  9651  2520  2D31               	goto	u420lld
  9652  2521  0AA2               	incf	___aodiv@divisor+2,f
  9653  2522  1D03               	skipz
  9654  2523  2D31               	goto	u420lld
  9655  2524  0AA3               	incf	___aodiv@divisor+3,f
  9656  2525  1D03               	skipz
  9657  2526  2D31               	goto	u420lld
  9658  2527  0AA4               	incf	___aodiv@divisor+4,f
  9659  2528  1D03               	skipz
  9660  2529  2D31               	goto	u420lld
  9661  252A  0AA5               	incf	___aodiv@divisor+5,f
  9662  252B  1D03               	skipz
  9663  252C  2D31               	goto	u420lld
  9664  252D  0AA6               	incf	___aodiv@divisor+6,f
  9665  252E  1D03               	skipz
  9666  252F  2D31               	goto	u420lld
  9667  2530  0AA7               	incf	___aodiv@divisor+7,f
  9668  2531                     u420lld:	
  9669  2531  01F3               	clrf	___aodiv@sign
  9670  2532  0AF3               	incf	___aodiv@sign,f
  9671  2533                     l4157:	
  9672  2533  3028               	movlw	low ___aodiv@dividend
  9673  2534  0086               	movwf	6
  9674  2535  3000               	movlw	high ___aodiv@dividend
  9675  2536  0087               	movwf	7
  9676  2537  3F47               	moviw [7]fsr1
  9677  2538  00F1               	movwf	??___aodiv
  9678  2539  1FF1               	btfss	??___aodiv,7
  9679  253A  2D5E               	goto	l4163
  9680  253B  0020               	movlb	0	; select bank0
  9681  253C  09A8               	comf	___aodiv@dividend,f
  9682  253D  09A9               	comf	___aodiv@dividend+1,f
  9683  253E  09AA               	comf	___aodiv@dividend+2,f
  9684  253F  09AB               	comf	___aodiv@dividend+3,f
  9685  2540  09AC               	comf	___aodiv@dividend+4,f
  9686  2541  09AD               	comf	___aodiv@dividend+5,f
  9687  2542  09AE               	comf	___aodiv@dividend+6,f
  9688  2543  09AF               	comf	___aodiv@dividend+7,f
  9689  2544  0AA8               	incf	___aodiv@dividend,f
  9690  2545  1D03               	skipz
  9691  2546  2D5A               	goto	l4161
  9692  2547  0AA9               	incf	___aodiv@dividend+1,f
  9693  2548  1D03               	skipz
  9694  2549  2D5A               	goto	l4161
  9695  254A  0AAA               	incf	___aodiv@dividend+2,f
  9696  254B  1D03               	skipz
  9697  254C  2D5A               	goto	l4161
  9698  254D  0AAB               	incf	___aodiv@dividend+3,f
  9699  254E  1D03               	skipz
  9700  254F  2D5A               	goto	l4161
  9701  2550  0AAC               	incf	___aodiv@dividend+4,f
  9702  2551  1D03               	skipz
  9703  2552  2D5A               	goto	l4161
  9704  2553  0AAD               	incf	___aodiv@dividend+5,f
  9705  2554  1D03               	skipz
  9706  2555  2D5A               	goto	l4161
  9707  2556  0AAE               	incf	___aodiv@dividend+6,f
  9708  2557  1D03               	skipz
  9709  2558  2D5A               	goto	l4161
  9710  2559  0AAF               	incf	___aodiv@dividend+7,f
  9711  255A                     l4161:	
  9712  255A  3001               	movlw	1
  9713  255B  00F1               	movwf	??___aodiv
  9714  255C  0871               	movf	??___aodiv,w
  9715  255D  06F3               	xorwf	___aodiv@sign,f
  9716  255E                     l4163:	
  9717  255E  3074               	movlw	low ___aodiv@quotient
  9718  255F  0086               	movwf	6
  9719  2560  3000               	movlw	high ___aodiv@quotient
  9720  2561  0087               	movwf	7
  9721  2562  3008               	movlw	8
  9722  2563  00F1               	movwf	??___aodiv
  9723  2564  3000               	movlw	0
  9724  2565                     u4230:	
  9725  2565  001E               	movwi fsr1++
  9726  2566  0BF1               	decfsz	??___aodiv,f
  9727  2567  2D65               	goto	u4230
  9728  2568  0020               	movlb	0	; select bank0
  9729  2569  0820               	movf	___aodiv@divisor,w
  9730  256A  0421               	iorwf	___aodiv@divisor+1,w
  9731  256B  0422               	iorwf	___aodiv@divisor+2,w
  9732  256C  0423               	iorwf	___aodiv@divisor+3,w
  9733  256D  0424               	iorwf	___aodiv@divisor+4,w
  9734  256E  0425               	iorwf	___aodiv@divisor+5,w
  9735  256F  0426               	iorwf	___aodiv@divisor+6,w
  9736  2570  0427               	iorwf	___aodiv@divisor+7,w
  9737  2571  1903               	skipnz
  9738  2572  2DC9               	goto	l4185
  9739  2573  01F2               	clrf	___aodiv@counter
  9740  2574  0AF2               	incf	___aodiv@counter,f
  9741  2575                     l4173:	
  9742  2575  1BA7               	btfsc	___aodiv@divisor+7,7
  9743  2576  2D84               	goto	l4175
  9744  2577  35A0               	lslf	___aodiv@divisor,f
  9745  2578  0DA1               	rlf	___aodiv@divisor+1,f
  9746  2579  0DA2               	rlf	___aodiv@divisor+2,f
  9747  257A  0DA3               	rlf	___aodiv@divisor+3,f
  9748  257B  0DA4               	rlf	___aodiv@divisor+4,f
  9749  257C  0DA5               	rlf	___aodiv@divisor+5,f
  9750  257D  0DA6               	rlf	___aodiv@divisor+6,f
  9751  257E  0DA7               	rlf	___aodiv@divisor+7,f
  9752  257F  3001               	movlw	1
  9753  2580  00F1               	movwf	??___aodiv
  9754  2581  0871               	movf	??___aodiv,w
  9755  2582  07F2               	addwf	___aodiv@counter,f
  9756  2583  2D75               	goto	l4173
  9757  2584                     l4175:	
  9758  2584  35F4               	lslf	___aodiv@quotient,f
  9759  2585  0DF5               	rlf	___aodiv@quotient+1,f
  9760  2586  0DF6               	rlf	___aodiv@quotient+2,f
  9761  2587  0DF7               	rlf	___aodiv@quotient+3,f
  9762  2588  0DF8               	rlf	___aodiv@quotient+4,f
  9763  2589  0DF9               	rlf	___aodiv@quotient+5,f
  9764  258A  0DFA               	rlf	___aodiv@quotient+6,f
  9765  258B  0DFB               	rlf	___aodiv@quotient+7,f
  9766  258C  0827               	movf	___aodiv@divisor+7,w
  9767  258D  022F               	subwf	___aodiv@dividend+7,w
  9768  258E  1D03               	skipz
  9769  258F  2DAA               	goto	u4265
  9770  2590  0826               	movf	___aodiv@divisor+6,w
  9771  2591  022E               	subwf	___aodiv@dividend+6,w
  9772  2592  1D03               	skipz
  9773  2593  2DAA               	goto	u4265
  9774  2594  0825               	movf	___aodiv@divisor+5,w
  9775  2595  022D               	subwf	___aodiv@dividend+5,w
  9776  2596  1D03               	skipz
  9777  2597  2DAA               	goto	u4265
  9778  2598  0824               	movf	___aodiv@divisor+4,w
  9779  2599  022C               	subwf	___aodiv@dividend+4,w
  9780  259A  1D03               	skipz
  9781  259B  2DAA               	goto	u4265
  9782  259C  0823               	movf	___aodiv@divisor+3,w
  9783  259D  022B               	subwf	___aodiv@dividend+3,w
  9784  259E  1D03               	skipz
  9785  259F  2DAA               	goto	u4265
  9786  25A0  0822               	movf	___aodiv@divisor+2,w
  9787  25A1  022A               	subwf	___aodiv@dividend+2,w
  9788  25A2  1D03               	skipz
  9789  25A3  2DAA               	goto	u4265
  9790  25A4  0821               	movf	___aodiv@divisor+1,w
  9791  25A5  0229               	subwf	___aodiv@dividend+1,w
  9792  25A6  1D03               	skipz
  9793  25A7  2DAA               	goto	u4265
  9794  25A8  0820               	movf	___aodiv@divisor,w
  9795  25A9  0228               	subwf	___aodiv@dividend,w
  9796  25AA                     u4265:	
  9797  25AA  1C03               	skipc
  9798  25AB  2DBD               	goto	l4183
  9799  25AC  0820               	movf	___aodiv@divisor,w
  9800  25AD  02A8               	subwf	___aodiv@dividend,f
  9801  25AE  0821               	movf	___aodiv@divisor+1,w
  9802  25AF  3BA9               	subwfb	___aodiv@dividend+1,f
  9803  25B0  0822               	movf	___aodiv@divisor+2,w
  9804  25B1  3BAA               	subwfb	___aodiv@dividend+2,f
  9805  25B2  0823               	movf	___aodiv@divisor+3,w
  9806  25B3  3BAB               	subwfb	___aodiv@dividend+3,f
  9807  25B4  0824               	movf	___aodiv@divisor+4,w
  9808  25B5  3BAC               	subwfb	___aodiv@dividend+4,f
  9809  25B6  0825               	movf	___aodiv@divisor+5,w
  9810  25B7  3BAD               	subwfb	___aodiv@dividend+5,f
  9811  25B8  0826               	movf	___aodiv@divisor+6,w
  9812  25B9  3BAE               	subwfb	___aodiv@dividend+6,f
  9813  25BA  0827               	movf	___aodiv@divisor+7,w
  9814  25BB  3BAF               	subwfb	___aodiv@dividend+7,f
  9815  25BC  1474               	bsf	___aodiv@quotient,0
  9816  25BD                     l4183:	
  9817  25BD  36A7               	lsrf	___aodiv@divisor+7,f
  9818  25BE  0CA6               	rrf	___aodiv@divisor+6,f
  9819  25BF  0CA5               	rrf	___aodiv@divisor+5,f
  9820  25C0  0CA4               	rrf	___aodiv@divisor+4,f
  9821  25C1  0CA3               	rrf	___aodiv@divisor+3,f
  9822  25C2  0CA2               	rrf	___aodiv@divisor+2,f
  9823  25C3  0CA1               	rrf	___aodiv@divisor+1,f
  9824  25C4  0CA0               	rrf	___aodiv@divisor,f
  9825  25C5  3001               	movlw	1
  9826  25C6  02F2               	subwf	___aodiv@counter,f
  9827  25C7  1D03               	btfss	3,2
  9828  25C8  2D84               	goto	l4175
  9829  25C9                     l4185:	
  9830  25C9  0873               	movf	___aodiv@sign,w
  9831  25CA  1903               	btfsc	3,2
  9832  25CB  2DEA               	goto	l1046
  9833  25CC  09F4               	comf	___aodiv@quotient,f
  9834  25CD  09F5               	comf	___aodiv@quotient+1,f
  9835  25CE  09F6               	comf	___aodiv@quotient+2,f
  9836  25CF  09F7               	comf	___aodiv@quotient+3,f
  9837  25D0  09F8               	comf	___aodiv@quotient+4,f
  9838  25D1  09F9               	comf	___aodiv@quotient+5,f
  9839  25D2  09FA               	comf	___aodiv@quotient+6,f
  9840  25D3  09FB               	comf	___aodiv@quotient+7,f
  9841  25D4  0AF4               	incf	___aodiv@quotient,f
  9842  25D5  1D03               	skipz
  9843  25D6  2DEA               	goto	l1046
  9844  25D7  0AF5               	incf	___aodiv@quotient+1,f
  9845  25D8  1D03               	skipz
  9846  25D9  2DEA               	goto	l1046
  9847  25DA  0AF6               	incf	___aodiv@quotient+2,f
  9848  25DB  1D03               	skipz
  9849  25DC  2DEA               	goto	l1046
  9850  25DD  0AF7               	incf	___aodiv@quotient+3,f
  9851  25DE  1D03               	skipz
  9852  25DF  2DEA               	goto	l1046
  9853  25E0  0AF8               	incf	___aodiv@quotient+4,f
  9854  25E1  1D03               	skipz
  9855  25E2  2DEA               	goto	l1046
  9856  25E3  0AF9               	incf	___aodiv@quotient+5,f
  9857  25E4  1D03               	skipz
  9858  25E5  2DEA               	goto	l1046
  9859  25E6  0AFA               	incf	___aodiv@quotient+6,f
  9860  25E7  1D03               	skipz
  9861  25E8  2DEA               	goto	l1046
  9862  25E9  0AFB               	incf	___aodiv@quotient+7,f
  9863  25EA                     l1046:	
  9864  25EA  0874               	movf	___aodiv@quotient,w
  9865  25EB  0020               	movlb	0	; select bank0
  9866  25EC  00A0               	movwf	?___aodiv
  9867  25ED  0875               	movf	___aodiv@quotient+1,w
  9868  25EE  00A1               	movwf	?___aodiv+1
  9869  25EF  0876               	movf	___aodiv@quotient+2,w
  9870  25F0  00A2               	movwf	?___aodiv+2
  9871  25F1  0877               	movf	___aodiv@quotient+3,w
  9872  25F2  00A3               	movwf	?___aodiv+3
  9873  25F3  0878               	movf	___aodiv@quotient+4,w
  9874  25F4  00A4               	movwf	?___aodiv+4
  9875  25F5  0879               	movf	___aodiv@quotient+5,w
  9876  25F6  00A5               	movwf	?___aodiv+5
  9877  25F7  087A               	movf	___aodiv@quotient+6,w
  9878  25F8  00A6               	movwf	?___aodiv+6
  9879  25F9  087B               	movf	___aodiv@quotient+7,w
  9880  25FA  00A7               	movwf	?___aodiv+7
  9881  25FB  0008               	return
  9882  25FC                     __end_of___aodiv:	
  9883                           
  9884                           	psect	text23
  9885  346A                     __ptext23:	
  9886 ;; *************** function _ctoa *****************
  9887 ;; Defined at:
  9888 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9891 ;;		 -> vsnprintf@f(6), 
  9892 ;;  c               1   18[BANK0 ] unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  w               2   20[BANK0 ] int 
  9895 ;;  l               2    0        int 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  2   16[BANK0 ] int 
  9898 ;; Registers used:
  9899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9905 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9908 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9909 ;;Total ram usage:        6 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    5
  9912 ;; This function calls:
  9913 ;;		_pad
  9914 ;; This function is called by:
  9915 ;;		_vfpfcnvrt
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           
  9920                           ;psect for function _ctoa
  9921  346A                     _ctoa:	
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9924                           
  9925                           ;incstack = 0
  9926                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9927  346A  0022               	movlb	2	; select bank2
  9928  346B  0866               	movf	_width^(0+256),w
  9929  346C  0467               	iorwf	(_width+1)^(0+256),w
  9930  346D  1D03               	btfss	3,2
  9931  346E  2C77               	goto	l6489
  9932  346F  0867               	movf	(_width+1)^(0+256),w
  9933  3470  0020               	movlb	0	; select bank0
  9934  3471  00B5               	movwf	ctoa@w+1
  9935  3472  0022               	movlb	2	; select bank2
  9936  3473  0866               	movf	_width^(0+256),w
  9937  3474  0020               	movlb	0	; select bank0
  9938  3475  00B4               	movwf	ctoa@w
  9939  3476  2C80               	goto	l6491
  9940  3477                     l6489:	
  9941  3477  0866               	movf	_width^(0+256),w
  9942  3478  3EFF               	addlw	255
  9943  3479  0020               	movlb	0	; select bank0
  9944  347A  00B4               	movwf	ctoa@w
  9945  347B  30FF               	movlw	255
  9946  347C  0022               	movlb	2	; select bank2
  9947  347D  3D67               	addwfc	(_width+1)^(0+256),w
  9948  347E  0020               	movlb	0	; select bank0
  9949  347F  00B5               	movwf	ctoa@w+1
  9950  3480                     l6491:	
  9951                           
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9953  3480  0832               	movf	ctoa@c,w
  9954  3481  00B3               	movwf	??_ctoa
  9955  3482  0833               	movf	??_ctoa,w
  9956  3483  0024               	movlb	4	; select bank4
  9957  3484  00A0               	movwf	_dbuf^(0+512)
  9958                           
  9959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9960  3485  01A1               	clrf	(_dbuf^(0+512)+1)
  9961                           
  9962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9963  3486  0020               	movlb	0	; select bank0
  9964  3487  0831               	movf	ctoa@fp+1,w
  9965  3488  00A7               	movwf	pad@fp+1
  9966  3489  0830               	movf	ctoa@fp,w
  9967  348A  00A6               	movwf	pad@fp
  9968  348B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9969  348C  00B3               	movwf	??_ctoa
  9970  348D  0833               	movf	??_ctoa,w
  9971  348E  00A8               	movwf	pad@buf
  9972  348F  0835               	movf	ctoa@w+1,w
  9973  3490  00AA               	movwf	pad@p+1
  9974  3491  0834               	movf	ctoa@w,w
  9975  3492  00A9               	movwf	pad@p
  9976  3493  31B6  264D         	fcall	_pad
  9977  3495  0020               	movlb	0	; select bank0
  9978  3496  0827               	movf	?_pad+1,w
  9979  3497  00B1               	movwf	?_ctoa+1
  9980  3498  0826               	movf	?_pad,w
  9981  3499  00B0               	movwf	?_ctoa
  9982  349A  0008               	return
  9983  349B                     __end_of_ctoa:	
  9984                           
  9985                           	psect	text24
  9986  364D                     __ptext24:	
  9987 ;; *************** function _pad *****************
  9988 ;; Defined at:
  9989 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9992 ;;		 -> vsnprintf@f(6), 
  9993 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9994 ;;		 -> dbuf(32), 
  9995 ;;  p               2    9[BANK0 ] int 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  w               2   14[BANK0 ] int 
  9998 ;;  i               2   12[BANK0 ] int 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  2    6[BANK0 ] int 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10008 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10011 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10012 ;;Total ram usage:       10 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    4
 10015 ;; This function calls:
 10016 ;;		_fputc
 10017 ;;		_fputs
 10018 ;;		_strlen
 10019 ;; This function is called by:
 10020 ;;		_ctoa
 10021 ;;		_dtoa
 10022 ;;		_otoa
 10023 ;;		_utoa
 10024 ;;		_xtoa
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           
 10029                           ;psect for function _pad
 10030  364D                     _pad:	
 10031                           
 10032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10033                           
 10034                           ;incstack = 0
 10035                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10036  364D  0022               	movlb	2	; select bank2
 10037  364E  1C6A               	btfss	_flags^(0+256),0
 10038  364F  2E59               	goto	l6457
 10039                           
 10040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10041  3650  0020               	movlb	0	; select bank0
 10042  3651  0827               	movf	pad@fp+1,w
 10043  3652  00FB               	movwf	fputs@fp+1
 10044  3653  0826               	movf	pad@fp,w
 10045  3654  00FA               	movwf	fputs@fp
 10046  3655  0828               	movf	pad@buf,w
 10047  3656  31B4  2414  31B6   	fcall	_fputs
 10048  3659                     l6457:	
 10049                           
 10050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10051  3659  0020               	movlb	0	; select bank0
 10052  365A  1BAA               	btfsc	pad@p+1,7
 10053  365B  2E61               	goto	l6461
 10054  365C  082A               	movf	pad@p+1,w
 10055  365D  00AF               	movwf	pad@w+1
 10056  365E  0829               	movf	pad@p,w
 10057  365F  00AE               	movwf	pad@w
 10058  3660  2E63               	goto	l738
 10059  3661                     l6461:	
 10060  3661  01AE               	clrf	pad@w
 10061  3662  01AF               	clrf	pad@w+1
 10062  3663                     l738:	
 10063                           
 10064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10065  3663  01AC               	clrf	pad@i
 10066  3664  01AD               	clrf	pad@i+1
 10067  3665                     l6467:	
 10068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10069                           
 10070                           
 10071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10072  3665  082D               	movf	pad@i+1,w
 10073  3666  3A80               	xorlw	128
 10074  3667  00AB               	movwf	??_pad
 10075  3668  082F               	movf	pad@w+1,w
 10076  3669  3A80               	xorlw	128
 10077  366A  022B               	subwf	??_pad,w
 10078  366B  1D03               	skipz
 10079  366C  2E6F               	goto	u7845
 10080  366D  082E               	movf	pad@w,w
 10081  366E  022C               	subwf	pad@i,w
 10082  366F                     u7845:	
 10083  366F  1803               	btfsc	3,0
 10084  3670  2E83               	goto	l741
 10085                           
 10086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10087  3671  3020               	movlw	32
 10088  3672  00F1               	movwf	fputc@c
 10089  3673  3000               	movlw	0
 10090  3674  00F2               	movwf	fputc@c+1
 10091  3675  0020               	movlb	0	; select bank0
 10092  3676  0827               	movf	pad@fp+1,w
 10093  3677  00F4               	movwf	fputc@fp+1
 10094  3678  0826               	movf	pad@fp,w
 10095  3679  00F3               	movwf	fputc@fp
 10096  367A  31B6  26F0  31B6   	fcall	_fputc
 10097                           
 10098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10099  367D  3001               	movlw	1
 10100  367E  0020               	movlb	0	; select bank0
 10101  367F  07AC               	addwf	pad@i,f
 10102  3680  3000               	movlw	0
 10103  3681  3DAD               	addwfc	pad@i+1,f
 10104  3682  2E65               	goto	l6467
 10105  3683                     l741:	
 10106                           
 10107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10108  3683  0022               	movlb	2	; select bank2
 10109  3684  186A               	btfsc	_flags^(0+256),0
 10110  3685  2E8F               	goto	l6471
 10111                           
 10112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10113  3686  0020               	movlb	0	; select bank0
 10114  3687  0827               	movf	pad@fp+1,w
 10115  3688  00FB               	movwf	fputs@fp+1
 10116  3689  0826               	movf	pad@fp,w
 10117  368A  00FA               	movwf	fputs@fp
 10118  368B  0828               	movf	pad@buf,w
 10119  368C  31B4  2414  31B6   	fcall	_fputs
 10120  368F                     l6471:	
 10121                           
 10122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10123  368F  0020               	movlb	0	; select bank0
 10124  3690  0828               	movf	pad@buf,w
 10125  3691  00F1               	movwf	strlen@s
 10126  3692  3002               	movlw	2
 10127  3693  00F2               	movwf	strlen@s+1
 10128  3694  31B2  22B3         	fcall	_strlen
 10129  3696  0020               	movlb	0	; select bank0
 10130  3697  082E               	movf	pad@w,w
 10131  3698  0771               	addwf	?_strlen,w
 10132  3699  00A6               	movwf	?_pad
 10133  369A  082F               	movf	pad@w+1,w
 10134  369B  3D72               	addwfc	?_strlen+1,w
 10135  369C  00A7               	movwf	?_pad+1
 10136  369D  0008               	return
 10137  369E                     __end_of_pad:	
 10138                           
 10139                           	psect	text25
 10140  32B3                     __ptext25:	
 10141 ;; *************** function _strlen *****************
 10142 ;; Defined at:
 10143 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  s               2    1[COMMON] PTR const unsigned char 
 10146 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10147 ;;		 -> adcGain(2), 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  a               2    3[COMMON] PTR const unsigned char 
 10150 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10151 ;;		 -> adcGain(2), 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  2    1[COMMON] unsigned int 
 10154 ;; Registers used:
 10155 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10165 ;;Total ram usage:        4 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:    1
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_pad
 10172 ;;		_stoa
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           
 10177                           ;psect for function _strlen
 10178  32B3                     _strlen:	
 10179                           
 10180                           ;incstack = 0
 10181                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10182  32B3  0872               	movf	strlen@s+1,w
 10183  32B4  00F4               	movwf	strlen@a+1
 10184  32B5  0871               	movf	strlen@s,w
 10185  32B6  00F3               	movwf	strlen@a
 10186  32B7                     l4079:	
 10187  32B7  0871               	movf	strlen@s,w
 10188  32B8  0086               	movwf	6
 10189  32B9  0872               	movf	strlen@s+1,w
 10190  32BA  0087               	movwf	7
 10191  32BB  0801               	movf	1,w
 10192  32BC  1903               	btfsc	3,2
 10193  32BD  2AC3               	goto	l4081
 10194  32BE  3001               	movlw	1
 10195  32BF  07F1               	addwf	strlen@s,f
 10196  32C0  3000               	movlw	0
 10197  32C1  3DF2               	addwfc	strlen@s+1,f
 10198  32C2  2AB7               	goto	l4079
 10199  32C3                     l4081:	
 10200  32C3  0873               	movf	strlen@a,w
 10201  32C4  0271               	subwf	strlen@s,w
 10202  32C5  00F1               	movwf	?_strlen
 10203  32C6  0874               	movf	strlen@a+1,w
 10204  32C7  3B72               	subwfb	strlen@s+1,w
 10205  32C8  00F2               	movwf	?_strlen+1
 10206  32C9  0008               	return
 10207  32CA                     __end_of_strlen:	
 10208                           
 10209                           	psect	text26
 10210  3414                     __ptext26:	
 10211 ;; *************** function _fputs *****************
 10212 ;; Defined at:
 10213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  s               1    wreg     PTR const unsigned char 
 10216 ;;		 -> dbuf(32), 
 10217 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10218 ;;		 -> vsnprintf@f(6), 
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10221 ;;		 -> dbuf(32), 
 10222 ;;  i               2    3[BANK0 ] int 
 10223 ;;  c               1    2[BANK0 ] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  2   10[COMMON] int 
 10226 ;; Registers used:
 10227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10236 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10237 ;;Total ram usage:        8 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    3
 10240 ;; This function calls:
 10241 ;;		_fputc
 10242 ;; This function is called by:
 10243 ;;		_pad
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           
 10248                           ;psect for function _fputs
 10249  3414                     _fputs:	
 10250                           
 10251                           ;incstack = 0
 10252                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10253                           ;fputs@s stored from wreg
 10254  3414  0020               	movlb	0	; select bank0
 10255  3415  00A5               	movwf	fputs@s
 10256  3416  01A3               	clrf	fputs@i
 10257  3417  01A4               	clrf	fputs@i+1
 10258  3418                     l4073:	
 10259  3418  0823               	movf	fputs@i,w
 10260  3419  0725               	addwf	fputs@s,w
 10261  341A  00A0               	movwf	??_fputs
 10262  341B  0820               	movf	??_fputs,w
 10263  341C  0086               	movwf	6
 10264  341D  3002               	movlw	2	; select bank4/5
 10265  341E  0087               	movwf	7
 10266  341F  0801               	movf	1,w
 10267  3420  00A1               	movwf	??_fputs+1
 10268  3421  0821               	movf	??_fputs+1,w
 10269  3422  00A2               	movwf	fputs@c
 10270  3423  0822               	movf	fputs@c,w
 10271  3424  1903               	btfsc	3,2
 10272  3425  0008               	return
 10273  3426  0822               	movf	fputs@c,w
 10274  3427  00A0               	movwf	??_fputs
 10275  3428  01A1               	clrf	??_fputs+1
 10276  3429  0820               	movf	??_fputs,w
 10277  342A  00F1               	movwf	fputc@c
 10278  342B  0821               	movf	??_fputs+1,w
 10279  342C  00F2               	movwf	fputc@c+1
 10280  342D  087B               	movf	fputs@fp+1,w
 10281  342E  00F4               	movwf	fputc@fp+1
 10282  342F  087A               	movf	fputs@fp,w
 10283  3430  00F3               	movwf	fputc@fp
 10284  3431  31B6  26F0  31B4   	fcall	_fputc
 10285  3434  3001               	movlw	1
 10286  3435  0020               	movlb	0	; select bank0
 10287  3436  07A3               	addwf	fputs@i,f
 10288  3437  3000               	movlw	0
 10289  3438  3DA4               	addwfc	fputs@i+1,f
 10290  3439  2C18               	goto	l4073
 10291  343A                     __end_of_fputs:	
 10292                           
 10293                           	psect	text27
 10294  36F0                     __ptext27:	
 10295 ;; *************** function _fputc *****************
 10296 ;; Defined at:
 10297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  c               2    1[COMMON] int 
 10300 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10301 ;;		 -> vsnprintf@f(6), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  2    1[COMMON] int 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10315 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10316 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10317 ;;Total ram usage:        9 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    2
 10320 ;; This function calls:
 10321 ;;		_putch
 10322 ;; This function is called by:
 10323 ;;		_pad
 10324 ;;		_stoa
 10325 ;;		_vfpfcnvrt
 10326 ;;		_fputs
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           
 10331                           ;psect for function _fputc
 10332  36F0                     _fputc:	
 10333                           
 10334                           ;incstack = 0
 10335                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10336  36F0  0873               	movf	fputc@fp,w
 10337  36F1  0474               	iorwf	fputc@fp+1,w
 10338  36F2  1903               	btfsc	3,2
 10339  36F3  2EF8               	goto	l4055
 10340  36F4  0873               	movf	fputc@fp,w
 10341  36F5  0474               	iorwf	fputc@fp+1,w
 10342  36F6  1D03               	btfss	3,2
 10343  36F7  2EFC               	goto	l4057
 10344  36F8                     l4055:	
 10345  36F8  0871               	movf	fputc@c,w
 10346  36F9  3187  27FF         	fcall	_putch
 10347  36FB  0008               	return
 10348  36FC                     l4057:	
 10349  36FC  0873               	movf	fputc@fp,w
 10350  36FD  0086               	movwf	6
 10351  36FE  0874               	movf	fputc@fp+1,w
 10352  36FF  0087               	movwf	7
 10353  3700  3144               	addfsr 1,4
 10354  3701  0016               	moviw fsr1++
 10355  3702  0401               	iorwf	1,w
 10356  3703  1903               	btfsc	3,2
 10357  3704  2F23               	goto	l4061
 10358  3705  0873               	movf	fputc@fp,w
 10359  3706  0086               	movwf	6
 10360  3707  0874               	movf	fputc@fp+1,w
 10361  3708  0087               	movwf	7
 10362  3709  3144               	addfsr 1,4
 10363  370A  3F40               	moviw [0]fsr1
 10364  370B  00F5               	movwf	??_fputc
 10365  370C  3F41               	moviw [1]fsr1
 10366  370D  00F6               	movwf	??_fputc+1
 10367  370E  0873               	movf	fputc@fp,w
 10368  370F  0086               	movwf	6
 10369  3710  0874               	movf	fputc@fp+1,w
 10370  3711  0087               	movwf	7
 10371  3712  3142               	addfsr 1,2
 10372  3713  3F40               	moviw [0]fsr1
 10373  3714  00F7               	movwf	??_fputc+2
 10374  3715  3F41               	moviw [1]fsr1
 10375  3716  00F8               	movwf	??_fputc+3
 10376  3717  0878               	movf	??_fputc+3,w
 10377  3718  3A80               	xorlw	128
 10378  3719  00F9               	movwf	??_fputc+4
 10379  371A  0876               	movf	??_fputc+1,w
 10380  371B  3A80               	xorlw	128
 10381  371C  0279               	subwf	??_fputc+4,w
 10382  371D  1D03               	skipz
 10383  371E  2F21               	goto	u3965
 10384  371F  0875               	movf	??_fputc,w
 10385  3720  0277               	subwf	??_fputc+2,w
 10386  3721                     u3965:	
 10387  3721  1803               	skipnc
 10388  3722  0008               	return
 10389  3723                     l4061:	
 10390  3723  0873               	movf	fputc@fp,w
 10391  3724  0086               	movwf	6
 10392  3725  0874               	movf	fputc@fp+1,w
 10393  3726  0087               	movwf	7
 10394  3727  3142               	addfsr 1,2
 10395  3728  0873               	movf	fputc@fp,w
 10396  3729  0084               	movwf	4
 10397  372A  0874               	movf	fputc@fp+1,w
 10398  372B  0085               	movwf	5
 10399  372C  3F40               	moviw [0]fsr1
 10400  372D  0700               	addwf	0,w
 10401  372E  00F5               	movwf	??_fputc
 10402  372F  3101               	addfsr 0,1
 10403  3730  3F41               	moviw [1]fsr1
 10404  3731  3D00               	addwfc	0,w
 10405  3732  00F6               	movwf	??_fputc+1
 10406  3733  0875               	movf	??_fputc,w
 10407  3734  0086               	movwf	6
 10408  3735  0876               	movf	??_fputc+1,w
 10409  3736  0087               	movwf	7
 10410  3737  0871               	movf	fputc@c,w
 10411  3738  0081               	movwf	1
 10412  3739  0873               	movf	fputc@fp,w
 10413  373A  0086               	movwf	6
 10414  373B  0874               	movf	fputc@fp+1,w
 10415  373C  0087               	movwf	7
 10416  373D  3142               	addfsr 1,2
 10417  373E  3001               	movlw	1
 10418  373F  0781               	addwf	1,f
 10419  3740  3141               	addfsr 1,1
 10420  3741  1803               	skipnc
 10421  3742  0A81               	incf	1,f
 10422  3743  0008               	return
 10423  3744                     __end_of_fputc:	
 10424                           
 10425                           	psect	text28
 10426  07FF                     __ptext28:	
 10427 ;; *************** function _putch *****************
 10428 ;; Defined at:
 10429 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  c               1    wreg     unsigned char 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  c               1    0[COMMON] unsigned char 
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  1    wreg      void 
 10436 ;; Registers used:
 10437 ;;		wreg
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10447 ;;Total ram usage:        0 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    1
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_fputc
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _putch
 10459  07FF                     _putch:	
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _putch: [wreg]
 10463  07FF  0008               	return
 10464  0800                     __end_of_putch:	
 10465                           
 10466                           	psect	text29
 10467  2002                     __ptext29:	
 10468 ;; *************** function _atoi *****************
 10469 ;; Defined at:
 10470 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  s               2    7[COMMON] PTR const unsigned char 
 10473 ;;		 -> STR_21(18), STR_20(18), STR_19(19), STR_18(20), 
 10474 ;;		 -> STR_17(20), STR_16(21), STR_15(21), STR_14(21), 
 10475 ;;		 -> STR_13(22), STR_12(22), STR_11(21), STR_10(21), 
 10476 ;;		 -> STR_7(22), STR_6(21), STR_5(3), STR_4(4), 
 10477 ;;		 -> STR_3(4), STR_2(4), STR_1(40), 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  n               2   11[BANK0 ] int 
 10480 ;;  neg             2    4[BANK0 ] int 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  2    7[COMMON] int 
 10483 ;; Registers used:
 10484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10491 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10492 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10493 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;Total ram usage:       15 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    2
 10497 ;; This function calls:
 10498 ;;		___wmul
 10499 ;;		_isdigit
 10500 ;;		_isspace
 10501 ;; This function is called by:
 10502 ;;		_vfpfcnvrt
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           
 10507                           ;psect for function _atoi
 10508  2002                     _atoi:	
 10509                           
 10510                           ;incstack = 0
 10511                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10512  2002  0020               	movlb	0	; select bank0
 10513  2003  01AB               	clrf	atoi@n
 10514  2004  01AC               	clrf	atoi@n+1
 10515  2005  01A4               	clrf	atoi@neg
 10516  2006  01A5               	clrf	atoi@neg+1
 10517  2007                     l6705:	
 10518  2007  01AA               	clrf	_atoi$1711
 10519  2008  0AAA               	incf	_atoi$1711,f
 10520  2009  0877               	movf	atoi@s,w
 10521  200A  0084               	movwf	4
 10522  200B  0878               	movf	atoi@s+1,w
 10523  200C  0085               	movwf	5
 10524  200D  0012               	moviw fsr0++
 10525  200E  3A20               	xorlw	32
 10526  200F  1903               	btfsc	3,2
 10527  2010  2823               	goto	l6713
 10528  2011  0877               	movf	atoi@s,w
 10529  2012  0084               	movwf	4
 10530  2013  0878               	movf	atoi@s+1,w
 10531  2014  0085               	movwf	5
 10532  2015  0800               	movf	0,w	;code access
 10533  2016  3EF7               	addlw	247
 10534  2017  00A0               	movwf	??_atoi
 10535  2018  30FF               	movlw	255
 10536  2019  1803               	skipnc
 10537  201A  3000               	movlw	0
 10538  201B  00A1               	movwf	??_atoi+1
 10539  201C  3000               	movlw	0
 10540  201D  0221               	subwf	??_atoi+1,w
 10541  201E  3005               	movlw	5
 10542  201F  1903               	skipnz
 10543  2020  0220               	subwf	??_atoi,w
 10544  2021  1803               	btfsc	3,0
 10545  2022  01AA               	clrf	_atoi$1711
 10546  2023                     l6713:	
 10547  2023  082A               	movf	_atoi$1711,w
 10548  2024  00A0               	movwf	??_atoi
 10549  2025  01A1               	clrf	??_atoi+1
 10550  2026  0820               	movf	??_atoi,w
 10551  2027  00A6               	movwf	_atoi$1710
 10552  2028  0821               	movf	??_atoi+1,w
 10553  2029  00A7               	movwf	_atoi$1710+1
 10554  202A  0826               	movf	_atoi$1710,w
 10555  202B  0427               	iorwf	_atoi$1710+1,w
 10556  202C  1903               	btfsc	3,2
 10557  202D  2838               	goto	l6721
 10558  202E  3001               	movlw	1
 10559  202F  07F7               	addwf	atoi@s,f
 10560  2030  3000               	movlw	0
 10561  2031  3DF8               	addwfc	atoi@s+1,f
 10562  2032  2807               	goto	l6705
 10563  2033                     l6719:	
 10564  2033  3001               	movlw	1
 10565  2034  00A4               	movwf	atoi@neg
 10566  2035  3000               	movlw	0
 10567  2036  00A5               	movwf	atoi@neg+1
 10568  2037  286B               	goto	l1421
 10569  2038                     l6721:	
 10570  2038  0877               	movf	atoi@s,w
 10571  2039  0084               	movwf	4
 10572  203A  0878               	movf	atoi@s+1,w
 10573  203B  0085               	movwf	5
 10574  203C  0800               	movf	0,w	;code access
 10575  203D  00A0               	movwf	??_atoi
 10576  203E  01A1               	clrf	??_atoi+1
 10577                           
 10578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10579                           ; Switch size 1, requested type "simple"
 10580                           ; Number of cases is 1, Range of values is 0 to 0
 10581                           ; switch strategies available:
 10582                           ; Name         Instructions Cycles
 10583                           ; simple_byte            4     3 (average)
 10584                           ; direct_byte            8     6 (fixed)
 10585                           ; jumptable            260     6 (fixed)
 10586                           ;	Chosen strategy is simple_byte
 10587  203F  0821               	movf	??_atoi+1,w
 10588  2040  3A00               	xorlw	0	; case 0
 10589  2041  1903               	skipnz
 10590  2042  2844               	goto	l7811
 10591  2043  286F               	goto	l6727
 10592  2044                     l7811:	
 10593                           
 10594                           ; Switch size 1, requested type "simple"
 10595                           ; Number of cases is 2, Range of values is 43 to 45
 10596                           ; switch strategies available:
 10597                           ; Name         Instructions Cycles
 10598                           ; simple_byte            7     4 (average)
 10599                           ; direct_byte           15     9 (fixed)
 10600                           ; jumptable            263     9 (fixed)
 10601                           ;	Chosen strategy is simple_byte
 10602  2044  0820               	movf	??_atoi,w
 10603  2045  3A2B               	xorlw	43	; case 43
 10604  2046  1903               	skipnz
 10605  2047  286B               	goto	l1421
 10606  2048  3A06               	xorlw	6	; case 45
 10607  2049  1903               	skipnz
 10608  204A  2833               	goto	l6719
 10609  204B  286F               	goto	l6727
 10610  204C                     l6723:	
 10611  204C  0877               	movf	atoi@s,w
 10612  204D  0084               	movwf	4
 10613  204E  0878               	movf	atoi@s+1,w
 10614  204F  0085               	movwf	5
 10615  2050  0800               	movf	0,w	;code access
 10616  2051  00A0               	movwf	??_atoi
 10617  2052  082C               	movf	atoi@n+1,w
 10618  2053  00F2               	movwf	___wmul@multiplier+1
 10619  2054  082B               	movf	atoi@n,w
 10620  2055  00F1               	movwf	___wmul@multiplier
 10621  2056  300A               	movlw	10
 10622  2057  00F3               	movwf	___wmul@multiplicand
 10623  2058  3000               	movlw	0
 10624  2059  00F4               	movwf	___wmul@multiplicand+1
 10625  205A  31B3  2329  31A0   	fcall	___wmul
 10626  205D  0872               	movf	?___wmul+1,w
 10627  205E  0020               	movlb	0	; select bank0
 10628  205F  00A2               	movwf	??_atoi+2
 10629  2060  0820               	movf	??_atoi,w
 10630  2061  0271               	subwf	?___wmul,w
 10631  2062  00A1               	movwf	??_atoi+1
 10632  2063  1C03               	skipc
 10633  2064  03A2               	decf	??_atoi+2,f
 10634  2065  0821               	movf	??_atoi+1,w
 10635  2066  3E30               	addlw	48
 10636  2067  00AB               	movwf	atoi@n
 10637  2068  3000               	movlw	0
 10638  2069  3D22               	addwfc	??_atoi+2,w
 10639  206A  00AC               	movwf	atoi@n+1
 10640  206B                     l1421:	
 10641  206B  3001               	movlw	1
 10642  206C  07F7               	addwf	atoi@s,f
 10643  206D  3000               	movlw	0
 10644  206E  3DF8               	addwfc	atoi@s+1,f
 10645  206F                     l6727:	
 10646  206F  0877               	movf	atoi@s,w
 10647  2070  0084               	movwf	4
 10648  2071  0878               	movf	atoi@s+1,w
 10649  2072  0085               	movwf	5
 10650  2073  0800               	movf	0,w	;code access
 10651  2074  3ED0               	addlw	208
 10652  2075  00A0               	movwf	??_atoi
 10653  2076  30FF               	movlw	255
 10654  2077  1803               	skipnc
 10655  2078  3000               	movlw	0
 10656  2079  00A1               	movwf	??_atoi+1
 10657  207A  3000               	movlw	0
 10658  207B  0221               	subwf	??_atoi+1,w
 10659  207C  300A               	movlw	10
 10660  207D  1903               	skipnz
 10661  207E  0220               	subwf	??_atoi,w
 10662  207F  1803               	btfsc	3,0
 10663  2080  2883               	goto	u8430
 10664  2081  3001               	movlw	1
 10665  2082  2884               	goto	u8440
 10666  2083                     u8430:	
 10667  2083  3000               	movlw	0
 10668  2084                     u8440:	
 10669  2084  00A2               	movwf	??_atoi+2
 10670  2085  01A3               	clrf	??_atoi+3
 10671  2086  0822               	movf	??_atoi+2,w
 10672  2087  00A8               	movwf	_atoi$1712
 10673  2088  0823               	movf	??_atoi+3,w
 10674  2089  00A9               	movwf	_atoi$1712+1
 10675  208A  0828               	movf	_atoi$1712,w
 10676  208B  0429               	iorwf	_atoi$1712+1,w
 10677  208C  1D03               	btfss	3,2
 10678  208D  284C               	goto	l6723
 10679  208E  0824               	movf	atoi@neg,w
 10680  208F  0425               	iorwf	atoi@neg+1,w
 10681  2090  1D03               	btfss	3,2
 10682  2091  289E               	goto	l6737
 10683  2092  092B               	comf	atoi@n,w
 10684  2093  00A0               	movwf	??_atoi
 10685  2094  092C               	comf	atoi@n+1,w
 10686  2095  00A1               	movwf	??_atoi+1
 10687  2096  0AA0               	incf	??_atoi,f
 10688  2097  1903               	skipnz
 10689  2098  0AA1               	incf	??_atoi+1,f
 10690  2099  0820               	movf	??_atoi,w
 10691  209A  00F7               	movwf	?_atoi
 10692  209B  0821               	movf	??_atoi+1,w
 10693  209C  00F8               	movwf	?_atoi+1
 10694  209D  0008               	return
 10695  209E                     l6737:	
 10696  209E  082C               	movf	atoi@n+1,w
 10697  209F  00F8               	movwf	?_atoi+1
 10698  20A0  082B               	movf	atoi@n,w
 10699  20A1  00F7               	movwf	?_atoi
 10700  20A2  0008               	return
 10701  20A3                     __end_of_atoi:	
 10702                           
 10703                           	psect	text30
 10704  337A                     __ptext30:	
 10705 ;; *************** function _isspace *****************
 10706 ;; Defined at:
 10707 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  c               2    1[COMMON] int 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;		None
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  2    1[COMMON] int 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10724 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10725 ;;Total ram usage:        5 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    1
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_atoi
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _isspace
 10737  337A                     _isspace:	
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10741  337A  01F5               	clrf	_isspace$1737
 10742  337B  0AF5               	incf	_isspace$1737,f
 10743  337C  3020               	movlw	32
 10744  337D  0671               	xorwf	isspace@c,w
 10745  337E  0472               	iorwf	isspace@c+1,w
 10746  337F  1903               	btfsc	3,2
 10747  3380  2B8E               	goto	l4265
 10748  3381  0871               	movf	isspace@c,w
 10749  3382  3EF7               	addlw	247
 10750  3383  00F3               	movwf	??_isspace
 10751  3384  30FF               	movlw	255
 10752  3385  3D72               	addwfc	isspace@c+1,w
 10753  3386  00F4               	movwf	??_isspace+1
 10754  3387  3000               	movlw	0
 10755  3388  0274               	subwf	??_isspace+1,w
 10756  3389  3005               	movlw	5
 10757  338A  1903               	skipnz
 10758  338B  0273               	subwf	??_isspace,w
 10759  338C  1803               	btfsc	3,0
 10760  338D  01F5               	clrf	_isspace$1737
 10761  338E                     l4265:	
 10762  338E  0875               	movf	_isspace$1737,w
 10763  338F  00F3               	movwf	??_isspace
 10764  3390  01F4               	clrf	??_isspace+1
 10765  3391  0873               	movf	??_isspace,w
 10766  3392  00F1               	movwf	?_isspace
 10767  3393  0874               	movf	??_isspace+1,w
 10768  3394  00F2               	movwf	?_isspace+1
 10769  3395  0008               	return
 10770  3396                     __end_of_isspace:	
 10771                           
 10772                           	psect	text31
 10773  329C                     __ptext31:	
 10774 ;; *************** function _isdigit *****************
 10775 ;; Defined at:
 10776 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  c               2    1[COMMON] int 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  2    1[COMMON] int 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:        6 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    1
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_vfpfcnvrt
 10801 ;;		_atoi
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           
 10806                           ;psect for function _isdigit
 10807  329C                     _isdigit:	
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10811  329C  0871               	movf	isdigit@c,w
 10812  329D  3ED0               	addlw	208
 10813  329E  00F3               	movwf	??_isdigit
 10814  329F  30FF               	movlw	255
 10815  32A0  3D72               	addwfc	isdigit@c+1,w
 10816  32A1  00F4               	movwf	??_isdigit+1
 10817  32A2  3000               	movlw	0
 10818  32A3  0274               	subwf	??_isdigit+1,w
 10819  32A4  300A               	movlw	10
 10820  32A5  1903               	skipnz
 10821  32A6  0273               	subwf	??_isdigit,w
 10822  32A7  1803               	btfsc	3,0
 10823  32A8  2AAB               	goto	u4130
 10824  32A9  3001               	movlw	1
 10825  32AA  2AAC               	goto	u4140
 10826  32AB                     u4130:	
 10827  32AB  3000               	movlw	0
 10828  32AC                     u4140:	
 10829  32AC  00F5               	movwf	??_isdigit+2
 10830  32AD  01F6               	clrf	??_isdigit+3
 10831  32AE  0875               	movf	??_isdigit+2,w
 10832  32AF  00F1               	movwf	?_isdigit
 10833  32B0  0876               	movf	??_isdigit+3,w
 10834  32B1  00F2               	movwf	?_isdigit+1
 10835  32B2  0008               	return
 10836  32B3                     __end_of_isdigit:	
 10837                           
 10838                           	psect	text32
 10839  330F                     __ptext32:	
 10840 ;; *************** function _EUSART_Write_Text *****************
 10841 ;; Defined at:
 10842 ;;		line 75 in file "EUSART.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  text            2    2[COMMON] PTR unsigned char 
 10845 ;;		 -> STR_22(3), STR_9(3), STR_8(38), messageBuffer(127), 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  i               2    5[COMMON] int 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10861 ;;Total ram usage:        5 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    2
 10864 ;; This function calls:
 10865 ;;		_EUSART_Write
 10866 ;; This function is called by:
 10867 ;;		_statemachine
 10868 ;;		_printcellParameters
 10869 ;;		_printotAFERegisters
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           
 10874                           ;psect for function _EUSART_Write_Text
 10875  330F                     _EUSART_Write_Text:	
 10876                           
 10877                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10878                           
 10879                           ;incstack = 0
 10880                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10881  330F  01F5               	clrf	EUSART_Write_Text@i
 10882  3310  01F6               	clrf	EUSART_Write_Text@i+1
 10883  3311                     l5827:	
 10884  3311  0872               	movf	EUSART_Write_Text@text,w
 10885  3312  0775               	addwf	EUSART_Write_Text@i,w
 10886  3313  0084               	movwf	4
 10887  3314  0873               	movf	EUSART_Write_Text@text+1,w
 10888  3315  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10889  3316  0085               	movwf	5
 10890  3317  0012               	moviw fsr0++
 10891  3318  1903               	btfsc	3,2
 10892  3319  0008               	return
 10893                           
 10894                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10895  331A  0872               	movf	EUSART_Write_Text@text,w
 10896  331B  0775               	addwf	EUSART_Write_Text@i,w
 10897  331C  0084               	movwf	4
 10898  331D  0873               	movf	EUSART_Write_Text@text+1,w
 10899  331E  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10900  331F  0085               	movwf	5
 10901  3320  0800               	movf	0,w	;code access
 10902  3321  3188  2000  31B3   	fcall	_EUSART_Write
 10903  3324  3001               	movlw	1
 10904  3325  07F5               	addwf	EUSART_Write_Text@i,f
 10905  3326  3000               	movlw	0
 10906  3327  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10907  3328  2B11               	goto	l5827
 10908  3329                     __end_of_EUSART_Write_Text:	
 10909                           
 10910                           	psect	text33
 10911  0800                     __ptext33:	
 10912 ;; *************** function _EUSART_Write *****************
 10913 ;; Defined at:
 10914 ;;		line 56 in file "EUSART.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  txData          1    wreg     unsigned char 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  txData          1    1[COMMON] unsigned char 
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10932 ;;Total ram usage:        1 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    1
 10935 ;; This function calls:
 10936 ;;		Nothing
 10937 ;; This function is called by:
 10938 ;;		_EUSART_Write_Text
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function _EUSART_Write
 10944  0800                     _EUSART_Write:	
 10945                           
 10946                           ;incstack = 0
 10947                           ; Regs used in _EUSART_Write: [wreg]
 10948                           ;EUSART_Write@txData stored from wreg
 10949  0800  00F1               	movwf	EUSART_Write@txData
 10950  0801                     l253:	
 10951                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10952                           
 10953                           
 10954                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10955  0801  0020               	movlb	0	; select bank0
 10956  0802  1E11               	btfss	17,4	;volatile
 10957  0803  2801               	goto	l253
 10958                           
 10959                           ;EUSART.c: 62:     TX1REG = txData;
 10960  0804  0871               	movf	EUSART_Write@txData,w
 10961  0805  0023               	movlb	3	; select bank3
 10962  0806  009A               	movwf	26	;volatile
 10963  0807  0008               	return
 10964  0808                     __end_of_EUSART_Write:	
 10965                           
 10966                           	psect	text34
 10967  3744                     __ptext34:	
 10968 ;; *************** function _init_AFE *****************
 10969 ;; Defined at:
 10970 ;;		line 3 in file "BQ76920.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;		None
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;		None
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      void 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10988 ;;Total ram usage:        0 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    4
 10991 ;; This function calls:
 10992 ;;		_setCellOvervoltageProtection
 10993 ;;		_setCellUndervoltageProtection
 10994 ;;		_setOverCurrentDischargeProtection
 10995 ;;		_setShortCircuitProtection
 10996 ;;		_setShuntResistorValue
 10997 ;;		_setTemperatureLimitsint
 10998 ;; This function is called by:
 10999 ;;		_statemachine
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           
 11004                           ;psect for function _init_AFE
 11005  3744                     _init_AFE:	
 11006                           
 11007                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11008                           
 11009                           ;incstack = 0
 11010                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11011  3744  30EC               	movlw	236
 11012  3745  0020               	movlb	0	; select bank0
 11013  3746  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11014  3747  30FF               	movlw	255
 11015  3748  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11016  3749  302D               	movlw	45
 11017  374A  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11018  374B  3000               	movlw	0
 11019  374C  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11020  374D  3000               	movlw	0
 11021  374E  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11022  374F  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11023  3750  302D               	movlw	45
 11024  3751  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11025  3752  3000               	movlw	0
 11026  3753  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11027  3754  31B6  2609  31B7   	fcall	_setTemperatureLimitsint
 11028                           
 11029                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11030  3757  303C               	movlw	60
 11031  3758  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11032  3759  30A3               	movlw	163
 11033  375A  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11034  375B  30D7               	movlw	215
 11035  375C  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11036  375D  300A               	movlw	10
 11037  375E  00F1               	movwf	setShuntResistorValue@res_mOhm
 11038  375F  31B2  226B  31B7   	fcall	_setShuntResistorValue
 11039                           
 11040                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11041  3762  3000               	movlw	0
 11042  3763  0020               	movlb	0	; select bank0
 11043  3764  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11044  3765  3000               	movlw	0
 11045  3766  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11046  3767  3001               	movlw	1
 11047  3768  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11048  3769  30F4               	movlw	244
 11049  376A  00E6               	movwf	setShortCircuitProtection@current_mA
 11050  376B  30C8               	movlw	200
 11051  376C  00EA               	movwf	setShortCircuitProtection@delay_us
 11052  376D  3000               	movlw	0
 11053  376E  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11054  376F  3199  211E  31B7   	fcall	_setShortCircuitProtection
 11055                           
 11056                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11057  3772  3000               	movlw	0
 11058  3773  0020               	movlb	0	; select bank0
 11059  3774  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11060  3775  3000               	movlw	0
 11061  3776  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11062  3777  3000               	movlw	0
 11063  3778  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11064  3779  300A               	movlw	10
 11065  377A  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11066  377B  3040               	movlw	64
 11067  377C  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11068  377D  3001               	movlw	1
 11069  377E  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11070  377F  3198  2009  31B7   	fcall	_setOverCurrentDischargeProtection
 11071                           
 11072                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11073  3782  3054               	movlw	84
 11074  3783  0020               	movlb	0	; select bank0
 11075  3784  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11076  3785  300B               	movlw	11
 11077  3786  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11078  3787  3002               	movlw	2
 11079  3788  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11080  3789  3000               	movlw	0
 11081  378A  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11082  378B  31A1  217F  31B7   	fcall	_setCellUndervoltageProtection
 11083                           
 11084                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11085  378E  3004               	movlw	4
 11086  378F  0020               	movlb	0	; select bank0
 11087  3790  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11088  3791  3010               	movlw	16
 11089  3792  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11090  3793  3002               	movlw	2
 11091  3794  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11092  3795  3000               	movlw	0
 11093  3796  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11094  3797  31AF  272B         	fcall	_setCellOvervoltageProtection
 11095  3799  0008               	return
 11096  379A                     __end_of_init_AFE:	
 11097                           
 11098                           	psect	text35
 11099  3609                     __ptext35:	
 11100 ;; *************** function _setTemperatureLimitsint *****************
 11101 ;; Defined at:
 11102 ;;		line 61 in file "BQ76920.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  minDischarge    2    0[BANK0 ] int 
 11105 ;;  maxDischarge    2    2[BANK0 ] int 
 11106 ;;  minCharge_de    2    4[BANK0 ] int 
 11107 ;;  maxCharge_de    2    6[BANK0 ] int 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11119 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        8 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    2
 11126 ;; This function calls:
 11127 ;;		___wmul
 11128 ;; This function is called by:
 11129 ;;		_init_AFE
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           
 11134                           ;psect for function _setTemperatureLimitsint
 11135  3609                     _setTemperatureLimitsint:	
 11136                           
 11137                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11138                           
 11139                           ;incstack = 0
 11140                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11141  3609  0020               	movlb	0	; select bank0
 11142  360A  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11143  360B  00F2               	movwf	___wmul@multiplier+1
 11144  360C  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11145  360D  00F1               	movwf	___wmul@multiplier
 11146  360E  300A               	movlw	10
 11147  360F  00F3               	movwf	___wmul@multiplicand
 11148  3610  3000               	movlw	0
 11149  3611  00F4               	movwf	___wmul@multiplicand+1
 11150  3612  31B3  2329  31B6   	fcall	___wmul
 11151  3615  0872               	movf	?___wmul+1,w
 11152  3616  0023               	movlb	3	; select bank3
 11153  3617  00DF               	movwf	(_minCellTempDischarge+1)^(0+384)
 11154  3618  0871               	movf	?___wmul,w
 11155  3619  00DE               	movwf	_minCellTempDischarge^(0+384)
 11156                           
 11157                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11158  361A  0020               	movlb	0	; select bank0
 11159  361B  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11160  361C  00F2               	movwf	___wmul@multiplier+1
 11161  361D  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11162  361E  00F1               	movwf	___wmul@multiplier
 11163  361F  300A               	movlw	10
 11164  3620  00F3               	movwf	___wmul@multiplicand
 11165  3621  3000               	movlw	0
 11166  3622  00F4               	movwf	___wmul@multiplicand+1
 11167  3623  31B3  2329  31B6   	fcall	___wmul
 11168  3626  0872               	movf	?___wmul+1,w
 11169  3627  0023               	movlb	3	; select bank3
 11170  3628  00DB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11171  3629  0871               	movf	?___wmul,w
 11172  362A  00DA               	movwf	_maxCellTempDischarge^(0+384)
 11173                           
 11174                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11175  362B  0020               	movlb	0	; select bank0
 11176  362C  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11177  362D  00F2               	movwf	___wmul@multiplier+1
 11178  362E  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11179  362F  00F1               	movwf	___wmul@multiplier
 11180  3630  300A               	movlw	10
 11181  3631  00F3               	movwf	___wmul@multiplicand
 11182  3632  3000               	movlw	0
 11183  3633  00F4               	movwf	___wmul@multiplicand+1
 11184  3634  31B3  2329  31B6   	fcall	___wmul
 11185  3637  0872               	movf	?___wmul+1,w
 11186  3638  0023               	movlb	3	; select bank3
 11187  3639  00E1               	movwf	(_minCellTempCharge+1)^(0+384)
 11188  363A  0871               	movf	?___wmul,w
 11189  363B  00E0               	movwf	_minCellTempCharge^(0+384)
 11190                           
 11191                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11192  363C  0020               	movlb	0	; select bank0
 11193  363D  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11194  363E  00F2               	movwf	___wmul@multiplier+1
 11195  363F  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11196  3640  00F1               	movwf	___wmul@multiplier
 11197  3641  300A               	movlw	10
 11198  3642  00F3               	movwf	___wmul@multiplicand
 11199  3643  3000               	movlw	0
 11200  3644  00F4               	movwf	___wmul@multiplicand+1
 11201  3645  31B3  2329         	fcall	___wmul
 11202  3647  0872               	movf	?___wmul+1,w
 11203  3648  0023               	movlb	3	; select bank3
 11204  3649  00DD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11205  364A  0871               	movf	?___wmul,w
 11206  364B  00DC               	movwf	_maxCellTempCharge^(0+384)
 11207  364C  0008               	return
 11208  364D                     __end_of_setTemperatureLimitsint:	
 11209                           
 11210                           	psect	text36
 11211  3329                     __ptext36:	
 11212 ;; *************** function ___wmul *****************
 11213 ;; Defined at:
 11214 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;  multiplier      2    1[COMMON] unsigned int 
 11217 ;;  multiplicand    2    3[COMMON] unsigned int 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  product         2    5[COMMON] unsigned int 
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  2    1[COMMON] unsigned int 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;Total ram usage:        6 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; Hardware stack levels required when called:    1
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		_setTemperatureLimitsint
 11240 ;;		_atoi
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244                           
 11245                           ;psect for function ___wmul
 11246  3329                     ___wmul:	
 11247                           
 11248                           ;incstack = 0
 11249                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11250  3329  01F5               	clrf	___wmul@product
 11251  332A  01F6               	clrf	___wmul@product+1
 11252  332B                     l4139:	
 11253  332B  1C71               	btfss	___wmul@multiplier,0
 11254  332C  2B31               	goto	l946
 11255  332D  0873               	movf	___wmul@multiplicand,w
 11256  332E  07F5               	addwf	___wmul@product,f
 11257  332F  0874               	movf	___wmul@multiplicand+1,w
 11258  3330  3DF6               	addwfc	___wmul@product+1,f
 11259  3331                     l946:	
 11260  3331  3001               	movlw	1
 11261  3332                     u4165:	
 11262  3332  35F3               	lslf	___wmul@multiplicand,f
 11263  3333  0DF4               	rlf	___wmul@multiplicand+1,f
 11264  3334  0B89               	decfsz	9,f
 11265  3335  2B32               	goto	u4165
 11266  3336  3001               	movlw	1
 11267  3337                     u4175:	
 11268  3337  36F2               	lsrf	___wmul@multiplier+1,f
 11269  3338  0CF1               	rrf	___wmul@multiplier,f
 11270  3339  0B89               	decfsz	9,f
 11271  333A  2B37               	goto	u4175
 11272  333B  0871               	movf	___wmul@multiplier,w
 11273  333C  0472               	iorwf	___wmul@multiplier+1,w
 11274  333D  1D03               	btfss	3,2
 11275  333E  2B2B               	goto	l4139
 11276  333F  0876               	movf	___wmul@product+1,w
 11277  3340  00F2               	movwf	?___wmul+1
 11278  3341  0875               	movf	___wmul@product,w
 11279  3342  00F1               	movwf	?___wmul
 11280  3343  0008               	return
 11281  3344                     __end_of___wmul:	
 11282                           
 11283                           	psect	text37
 11284  326B                     __ptext37:	
 11285 ;; *************** function _setShuntResistorValue *****************
 11286 ;; Defined at:
 11287 ;;		line 73 in file "BQ76920.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  res_mOhm        4    1[COMMON] float 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11304 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11305 ;;Total ram usage:        4 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:    1
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_init_AFE
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           
 11316                           ;psect for function _setShuntResistorValue
 11317  326B                     _setShuntResistorValue:	
 11318                           
 11319                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11320                           
 11321                           ;incstack = 0
 11322                           ; Regs used in _setShuntResistorValue: [wreg]
 11323  326B  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11324  326C  0023               	movlb	3	; select bank3
 11325  326D  00C5               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11326  326E  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11327  326F  00C4               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11328  3270  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11329  3271  00C3               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11330  3272  0871               	movf	setShuntResistorValue@res_mOhm,w
 11331  3273  00C2               	movwf	_shuntResistorValue_mOhm^(0+384)
 11332  3274  0008               	return
 11333  3275                     __end_of_setShuntResistorValue:	
 11334                           
 11335                           	psect	text38
 11336  191E                     __ptext38:	
 11337 ;; *************** function _setShortCircuitProtection *****************
 11338 ;; Defined at:
 11339 ;;		line 81 in file "BQ76920.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;  current_mA      4   70[BANK0 ] long 
 11342 ;;  delay_us        2   74[BANK0 ] int 
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  i               2   10[BANK1 ] int 
 11345 ;;  i               2    8[BANK1 ] int 
 11346 ;;  scaler          4    0[BANK1 ] float 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  1    wreg      void 
 11349 ;; Registers used:
 11350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11356 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11357 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11358 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11359 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11360 ;;Total ram usage:       21 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    3
 11363 ;; This function calls:
 11364 ;;		_I2C_writeRegister
 11365 ;;		___fldiv
 11366 ;;		___flge
 11367 ;;		___flmul
 11368 ;;		___xxtofl
 11369 ;; This function is called by:
 11370 ;;		_init_AFE
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           
 11375                           ;psect for function _setShortCircuitProtection
 11376  191E                     _setShortCircuitProtection:	
 11377                           
 11378                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11379                           
 11380                           ;incstack = 0
 11381                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11382  191E  3044               	movlw	68
 11383  191F  0021               	movlb	1	; select bank1
 11384  1920  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11385  1921  307A               	movlw	122
 11386  1922  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11387  1923  3000               	movlw	0
 11388  1924  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11389  1925  3000               	movlw	0
 11390  1926  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11391                           
 11392                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11393  1927  30F8               	movlw	-8
 11394  1928  0023               	movlb	3	; select bank3
 11395  1929  05E6               	andwf	_protect1^(0+384),f
 11396                           
 11397                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11398  192A  0021               	movlb	1	; select bank1
 11399  192B  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11400  192C  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11401  192D                     l7273:	
 11402                           
 11403                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11404  192D  0023               	movlb	3	; select bank3
 11405  192E  0845               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11406  192F  0020               	movlb	0	; select bank0
 11407  1930  00A9               	movwf	___flmul@b+3
 11408  1931  0023               	movlb	3	; select bank3
 11409  1932  0844               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11410  1933  0020               	movlb	0	; select bank0
 11411  1934  00A8               	movwf	___flmul@b+2
 11412  1935  0023               	movlb	3	; select bank3
 11413  1936  0843               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11414  1937  0020               	movlb	0	; select bank0
 11415  1938  00A7               	movwf	___flmul@b+1
 11416  1939  0023               	movlb	3	; select bank3
 11417  193A  0842               	movf	_shuntResistorValue_mOhm^(0+384),w
 11418  193B  0020               	movlb	0	; select bank0
 11419  193C  00A6               	movwf	___flmul@b
 11420  193D  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11421  193E  00F4               	movwf	___xxtofl@val+3
 11422  193F  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11423  1940  00F3               	movwf	___xxtofl@val+2
 11424  1941  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11425  1942  00F2               	movwf	___xxtofl@val+1
 11426  1943  0866               	movf	setShortCircuitProtection@current_mA,w
 11427  1944  00F1               	movwf	___xxtofl@val
 11428  1945  3001               	movlw	1
 11429  1946  31AA  22E9  3199   	fcall	___xxtofl
 11430  1949  0874               	movf	?___xxtofl+3,w
 11431  194A  0020               	movlb	0	; select bank0
 11432  194B  00AD               	movwf	___flmul@a+3
 11433  194C  0873               	movf	?___xxtofl+2,w
 11434  194D  00AC               	movwf	___flmul@a+2
 11435  194E  0872               	movf	?___xxtofl+1,w
 11436  194F  00AB               	movwf	___flmul@a+1
 11437  1950  0871               	movf	?___xxtofl,w
 11438  1951  00AA               	movwf	___flmul@a
 11439  1952  3190  2023  3199   	fcall	___flmul
 11440  1955  0020               	movlb	0	; select bank0
 11441  1956  0829               	movf	?___flmul+3,w
 11442  1957  0021               	movlb	1	; select bank1
 11443  1958  00A7               	movwf	(_setShortCircuitProtection$2086+3)^(0+128)
 11444  1959  0020               	movlb	0	; select bank0
 11445  195A  0828               	movf	?___flmul+2,w
 11446  195B  0021               	movlb	1	; select bank1
 11447  195C  00A6               	movwf	(_setShortCircuitProtection$2086+2)^(0+128)
 11448  195D  0020               	movlb	0	; select bank0
 11449  195E  0827               	movf	?___flmul+1,w
 11450  195F  0021               	movlb	1	; select bank1
 11451  1960  00A5               	movwf	(_setShortCircuitProtection$2086+1)^(0+128)
 11452  1961  0020               	movlb	0	; select bank0
 11453  1962  0826               	movf	?___flmul,w
 11454  1963  0021               	movlb	1	; select bank1
 11455  1964  00A4               	movwf	_setShortCircuitProtection$2086^(0+128)
 11456                           
 11457                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11458  1965  3044               	movlw	68
 11459  1966  0020               	movlb	0	; select bank0
 11460  1967  00C3               	movwf	___fldiv@a+3
 11461  1968  307A               	movlw	122
 11462  1969  00C2               	movwf	___fldiv@a+2
 11463  196A  3000               	movlw	0
 11464  196B  00C1               	movwf	___fldiv@a+1
 11465  196C  3000               	movlw	0
 11466  196D  00C0               	movwf	___fldiv@a
 11467  196E  0021               	movlb	1	; select bank1
 11468  196F  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11469  1970  0020               	movlb	0	; select bank0
 11470  1971  00A9               	movwf	___flmul@b+3
 11471  1972  0021               	movlb	1	; select bank1
 11472  1973  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11473  1974  0020               	movlb	0	; select bank0
 11474  1975  00A8               	movwf	___flmul@b+2
 11475  1976  0021               	movlb	1	; select bank1
 11476  1977  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11477  1978  0020               	movlb	0	; select bank0
 11478  1979  00A7               	movwf	___flmul@b+1
 11479  197A  0021               	movlb	1	; select bank1
 11480  197B  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11481  197C  0020               	movlb	0	; select bank0
 11482  197D  00A6               	movwf	___flmul@b
 11483  197E  0021               	movlb	1	; select bank1
 11484  197F  0827               	movf	(_setShortCircuitProtection$2086+3)^(0+128),w
 11485  1980  0020               	movlb	0	; select bank0
 11486  1981  00AD               	movwf	___flmul@a+3
 11487  1982  0021               	movlb	1	; select bank1
 11488  1983  0826               	movf	(_setShortCircuitProtection$2086+2)^(0+128),w
 11489  1984  0020               	movlb	0	; select bank0
 11490  1985  00AC               	movwf	___flmul@a+2
 11491  1986  0021               	movlb	1	; select bank1
 11492  1987  0825               	movf	(_setShortCircuitProtection$2086+1)^(0+128),w
 11493  1988  0020               	movlb	0	; select bank0
 11494  1989  00AB               	movwf	___flmul@a+1
 11495  198A  0021               	movlb	1	; select bank1
 11496  198B  0824               	movf	_setShortCircuitProtection$2086^(0+128),w
 11497  198C  0020               	movlb	0	; select bank0
 11498  198D  00AA               	movwf	___flmul@a
 11499  198E  3190  2023  3199   	fcall	___flmul
 11500  1991  0020               	movlb	0	; select bank0
 11501  1992  0829               	movf	?___flmul+3,w
 11502  1993  00C7               	movwf	___fldiv@b+3
 11503  1994  0828               	movf	?___flmul+2,w
 11504  1995  00C6               	movwf	___fldiv@b+2
 11505  1996  0827               	movf	?___flmul+1,w
 11506  1997  00C5               	movwf	___fldiv@b+1
 11507  1998  0826               	movf	?___flmul,w
 11508  1999  00C4               	movwf	___fldiv@b
 11509  199A  319C  24E2  3199   	fcall	___fldiv
 11510  199D  0020               	movlb	0	; select bank0
 11511  199E  0843               	movf	?___fldiv+3,w
 11512  199F  00DD               	movwf	___flge@ff1+3
 11513  19A0  0842               	movf	?___fldiv+2,w
 11514  19A1  00DC               	movwf	___flge@ff1+2
 11515  19A2  0841               	movf	?___fldiv+1,w
 11516  19A3  00DB               	movwf	___flge@ff1+1
 11517  19A4  0840               	movf	?___fldiv,w
 11518  19A5  00DA               	movwf	___flge@ff1
 11519  19A6  0021               	movlb	1	; select bank1
 11520  19A7  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11521  19A8  0085               	movwf	5
 11522  19A9  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11523  19AA  0084               	movwf	4
 11524  19AB  3584               	lslf	4,f
 11525  19AC  0D85               	rlf	5,f
 11526  19AD  3057               	movlw	low (_SCD_threshold_setting| (0+32768))
 11527  19AE  0784               	addwf	4,f
 11528  19AF  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 11529  19B0  3D85               	addwfc	5,f
 11530  19B1  3F00               	moviw [0]fsr0
 11531  19B2  0020               	movlb	0	; select bank0
 11532  19B3  00EC               	movwf	??_setShortCircuitProtection
 11533  19B4  3F01               	moviw [1]fsr0
 11534  19B5  00ED               	movwf	??_setShortCircuitProtection+1
 11535  19B6  086C               	movf	??_setShortCircuitProtection,w
 11536  19B7  00F1               	movwf	___xxtofl@val
 11537  19B8  086D               	movf	??_setShortCircuitProtection+1,w
 11538  19B9  00F2               	movwf	___xxtofl@val+1
 11539  19BA  0D89               	rlf	9,f
 11540  19BB  3B89               	subwfb	9,f
 11541  19BC  0989               	comf	9,f
 11542  19BD  00F3               	movwf	___xxtofl@val+2
 11543  19BE  00F4               	movwf	___xxtofl@val+3
 11544  19BF  3001               	movlw	1
 11545  19C0  31AA  22E9  3199   	fcall	___xxtofl
 11546  19C3  0874               	movf	?___xxtofl+3,w
 11547  19C4  0020               	movlb	0	; select bank0
 11548  19C5  00E1               	movwf	___flge@ff2+3
 11549  19C6  0873               	movf	?___xxtofl+2,w
 11550  19C7  00E0               	movwf	___flge@ff2+2
 11551  19C8  0872               	movf	?___xxtofl+1,w
 11552  19C9  00DF               	movwf	___flge@ff2+1
 11553  19CA  0871               	movf	?___xxtofl,w
 11554  19CB  00DE               	movwf	___flge@ff2
 11555  19CC  31A8  20F2  3199   	fcall	___flge
 11556  19CF  1C03               	btfss	3,0
 11557  19D0  29D9               	goto	l7279
 11558                           
 11559                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11560  19D1  0023               	movlb	3	; select bank3
 11561  19D2  0866               	movf	_protect1^(0+384),w
 11562  19D3  0021               	movlb	1	; select bank1
 11563  19D4  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11564  19D5  39F8               	andlw	-8
 11565  19D6  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11566  19D7  0023               	movlb	3	; select bank3
 11567  19D8  00E6               	movwf	_protect1^(0+384)
 11568  19D9                     l7279:	
 11569                           
 11570                           ;BQ76920.c: 92:     }
 11571  19D9  3001               	movlw	1
 11572  19DA  0021               	movlb	1	; select bank1
 11573  19DB  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11574  19DC  3000               	movlw	0
 11575  19DD  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11576  19DE  3000               	movlw	0
 11577  19DF  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11578  19E0  3007               	movlw	7
 11579  19E1  1903               	skipnz
 11580  19E2  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11581  19E3  1C03               	skipc
 11582  19E4  292D               	goto	l7273
 11583                           
 11584                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11585  19E5  30E7               	movlw	-25
 11586  19E6  0023               	movlb	3	; select bank3
 11587  19E7  05E6               	andwf	_protect1^(0+384),f
 11588                           
 11589                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11590  19E8  0021               	movlb	1	; select bank1
 11591  19E9  01AA               	clrf	setShortCircuitProtection@i_974^(0+128)
 11592  19EA  01AB               	clrf	(setShortCircuitProtection@i_974+1)^(0+128)
 11593  19EB                     l7291:	
 11594                           
 11595                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11596  19EB  082B               	movf	(setShortCircuitProtection@i_974+1)^(0+128),w
 11597  19EC  0085               	movwf	5
 11598  19ED  082A               	movf	setShortCircuitProtection@i_974^(0+128),w
 11599  19EE  0084               	movwf	4
 11600  19EF  3584               	lslf	4,f
 11601  19F0  0D85               	rlf	5,f
 11602  19F1  3077               	movlw	low (_SCD_delay_setting| (0+32768))
 11603  19F2  0784               	addwf	4,f
 11604  19F3  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11605  19F4  3D85               	addwfc	5,f
 11606  19F5  3F00               	moviw [0]fsr0
 11607  19F6  0020               	movlb	0	; select bank0
 11608  19F7  00EC               	movwf	??_setShortCircuitProtection
 11609  19F8  3F01               	moviw [1]fsr0
 11610  19F9  00ED               	movwf	??_setShortCircuitProtection+1
 11611  19FA  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11612  19FB  3A80               	xorlw	128
 11613  19FC  00EE               	movwf	??_setShortCircuitProtection+2
 11614  19FD  086D               	movf	??_setShortCircuitProtection+1,w
 11615  19FE  3A80               	xorlw	128
 11616  19FF  026E               	subwf	??_setShortCircuitProtection+2,w
 11617  1A00  1D03               	skipz
 11618  1A01  2A04               	goto	u9205
 11619  1A02  086C               	movf	??_setShortCircuitProtection,w
 11620  1A03  026A               	subwf	setShortCircuitProtection@delay_us,w
 11621  1A04                     u9205:	
 11622  1A04  1C03               	skipc
 11623  1A05  2A15               	goto	l7295
 11624                           
 11625                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11626  1A06  0021               	movlb	1	; select bank1
 11627  1A07  082A               	movf	setShortCircuitProtection@i_974^(0+128),w
 11628  1A08  0020               	movlb	0	; select bank0
 11629  1A09  00EC               	movwf	??_setShortCircuitProtection
 11630  1A0A  0DEC               	rlf	??_setShortCircuitProtection,f
 11631  1A0B  0DEC               	rlf	??_setShortCircuitProtection,f
 11632  1A0C  0DEC               	rlf	??_setShortCircuitProtection,f
 11633  1A0D  0023               	movlb	3	; select bank3
 11634  1A0E  0866               	movf	_protect1^(0+384),w
 11635  1A0F  0020               	movlb	0	; select bank0
 11636  1A10  066C               	xorwf	??_setShortCircuitProtection,w
 11637  1A11  39E7               	andlw	-25
 11638  1A12  066C               	xorwf	??_setShortCircuitProtection,w
 11639  1A13  0023               	movlb	3	; select bank3
 11640  1A14  00E6               	movwf	_protect1^(0+384)
 11641  1A15                     l7295:	
 11642                           
 11643                           ;BQ76920.c: 99:     }
 11644  1A15  3001               	movlw	1
 11645  1A16  0021               	movlb	1	; select bank1
 11646  1A17  07AA               	addwf	setShortCircuitProtection@i_974^(0+128),f
 11647  1A18  3000               	movlw	0
 11648  1A19  3DAB               	addwfc	(setShortCircuitProtection@i_974+1)^(0+128),f
 11649  1A1A  3000               	movlw	0
 11650  1A1B  022B               	subwf	(setShortCircuitProtection@i_974+1)^(0+128),w
 11651  1A1C  3007               	movlw	7
 11652  1A1D  1903               	skipnz
 11653  1A1E  022A               	subwf	setShortCircuitProtection@i_974^(0+128),w
 11654  1A1F  1C03               	skipc
 11655  1A20  29EB               	goto	l7291
 11656                           
 11657                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11658  1A21  0023               	movlb	3	; select bank3
 11659  1A22  13E6               	bcf	_protect1^(0+384),7
 11660                           
 11661                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11662  1A23  3018               	movlw	24
 11663  1A24  00F5               	movwf	I2C_writeRegister@slaveAddress
 11664  1A25  3000               	movlw	0
 11665  1A26  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11666  1A27  3006               	movlw	6
 11667  1A28  00F7               	movwf	I2C_writeRegister@regAddress
 11668  1A29  3000               	movlw	0
 11669  1A2A  00F8               	movwf	I2C_writeRegister@regAddress+1
 11670  1A2B  0866               	movf	_protect1^(0+384),w
 11671  1A2C  0020               	movlb	0	; select bank0
 11672  1A2D  00EC               	movwf	??_setShortCircuitProtection
 11673  1A2E  01ED               	clrf	??_setShortCircuitProtection+1
 11674  1A2F  086C               	movf	??_setShortCircuitProtection,w
 11675  1A30  00F9               	movwf	I2C_writeRegister@data
 11676  1A31  086D               	movf	??_setShortCircuitProtection+1,w
 11677  1A32  00FA               	movwf	I2C_writeRegister@data+1
 11678  1A33  31B3  23B3         	fcall	_I2C_writeRegister
 11679  1A35  0008               	return
 11680  1A36                     __end_of_setShortCircuitProtection:	
 11681                           
 11682                           	psect	text39
 11683  1809                     __ptext39:	
 11684 ;; *************** function _setOverCurrentDischargeProtection *****************
 11685 ;; Defined at:
 11686 ;;		line 109 in file "BQ76920.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  current_mA      4   70[BANK0 ] long 
 11689 ;;  delay_ms        2   74[BANK0 ] int 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;  i               2   10[BANK1 ] int 
 11692 ;;  i               2    8[BANK1 ] int 
 11693 ;;  scaler          4    0[BANK1 ] float 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11703 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11704 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11705 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11706 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11707 ;;Total ram usage:       21 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    3
 11710 ;; This function calls:
 11711 ;;		_I2C_writeRegister
 11712 ;;		___fldiv
 11713 ;;		___flge
 11714 ;;		___flmul
 11715 ;;		___xxtofl
 11716 ;; This function is called by:
 11717 ;;		_init_AFE
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           
 11722                           ;psect for function _setOverCurrentDischargeProtection
 11723  1809                     _setOverCurrentDischargeProtection:	
 11724                           
 11725                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11726                           
 11727                           ;incstack = 0
 11728                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11729  1809  3044               	movlw	68
 11730  180A  0021               	movlb	1	; select bank1
 11731  180B  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11732  180C  307A               	movlw	122
 11733  180D  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11734  180E  3000               	movlw	0
 11735  180F  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11736  1810  3000               	movlw	0
 11737  1811  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11738                           
 11739                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11740  1812  30F0               	movlw	-16
 11741  1813  0023               	movlb	3	; select bank3
 11742  1814  05E5               	andwf	_protect2^(0+384),f
 11743                           
 11744                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11745  1815  0021               	movlb	1	; select bank1
 11746  1816  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11747  1817  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11748  1818                     l7311:	
 11749                           
 11750                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11751  1818  0023               	movlb	3	; select bank3
 11752  1819  0845               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11753  181A  0020               	movlb	0	; select bank0
 11754  181B  00A9               	movwf	___flmul@b+3
 11755  181C  0023               	movlb	3	; select bank3
 11756  181D  0844               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11757  181E  0020               	movlb	0	; select bank0
 11758  181F  00A8               	movwf	___flmul@b+2
 11759  1820  0023               	movlb	3	; select bank3
 11760  1821  0843               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11761  1822  0020               	movlb	0	; select bank0
 11762  1823  00A7               	movwf	___flmul@b+1
 11763  1824  0023               	movlb	3	; select bank3
 11764  1825  0842               	movf	_shuntResistorValue_mOhm^(0+384),w
 11765  1826  0020               	movlb	0	; select bank0
 11766  1827  00A6               	movwf	___flmul@b
 11767  1828  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11768  1829  00F4               	movwf	___xxtofl@val+3
 11769  182A  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11770  182B  00F3               	movwf	___xxtofl@val+2
 11771  182C  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11772  182D  00F2               	movwf	___xxtofl@val+1
 11773  182E  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11774  182F  00F1               	movwf	___xxtofl@val
 11775  1830  3001               	movlw	1
 11776  1831  31AA  22E9  3198   	fcall	___xxtofl
 11777  1834  0874               	movf	?___xxtofl+3,w
 11778  1835  0020               	movlb	0	; select bank0
 11779  1836  00AD               	movwf	___flmul@a+3
 11780  1837  0873               	movf	?___xxtofl+2,w
 11781  1838  00AC               	movwf	___flmul@a+2
 11782  1839  0872               	movf	?___xxtofl+1,w
 11783  183A  00AB               	movwf	___flmul@a+1
 11784  183B  0871               	movf	?___xxtofl,w
 11785  183C  00AA               	movwf	___flmul@a
 11786  183D  3190  2023  3198   	fcall	___flmul
 11787  1840  0020               	movlb	0	; select bank0
 11788  1841  0829               	movf	?___flmul+3,w
 11789  1842  0021               	movlb	1	; select bank1
 11790  1843  00A7               	movwf	(_setOverCurrentDischargeProtection$2087+3)^(0+128)
 11791  1844  0020               	movlb	0	; select bank0
 11792  1845  0828               	movf	?___flmul+2,w
 11793  1846  0021               	movlb	1	; select bank1
 11794  1847  00A6               	movwf	(_setOverCurrentDischargeProtection$2087+2)^(0+128)
 11795  1848  0020               	movlb	0	; select bank0
 11796  1849  0827               	movf	?___flmul+1,w
 11797  184A  0021               	movlb	1	; select bank1
 11798  184B  00A5               	movwf	(_setOverCurrentDischargeProtection$2087+1)^(0+128)
 11799  184C  0020               	movlb	0	; select bank0
 11800  184D  0826               	movf	?___flmul,w
 11801  184E  0021               	movlb	1	; select bank1
 11802  184F  00A4               	movwf	_setOverCurrentDischargeProtection$2087^(0+128)
 11803                           
 11804                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11805  1850  3044               	movlw	68
 11806  1851  0020               	movlb	0	; select bank0
 11807  1852  00C3               	movwf	___fldiv@a+3
 11808  1853  307A               	movlw	122
 11809  1854  00C2               	movwf	___fldiv@a+2
 11810  1855  3000               	movlw	0
 11811  1856  00C1               	movwf	___fldiv@a+1
 11812  1857  3000               	movlw	0
 11813  1858  00C0               	movwf	___fldiv@a
 11814  1859  0021               	movlb	1	; select bank1
 11815  185A  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11816  185B  0020               	movlb	0	; select bank0
 11817  185C  00A9               	movwf	___flmul@b+3
 11818  185D  0021               	movlb	1	; select bank1
 11819  185E  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11820  185F  0020               	movlb	0	; select bank0
 11821  1860  00A8               	movwf	___flmul@b+2
 11822  1861  0021               	movlb	1	; select bank1
 11823  1862  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11824  1863  0020               	movlb	0	; select bank0
 11825  1864  00A7               	movwf	___flmul@b+1
 11826  1865  0021               	movlb	1	; select bank1
 11827  1866  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11828  1867  0020               	movlb	0	; select bank0
 11829  1868  00A6               	movwf	___flmul@b
 11830  1869  0021               	movlb	1	; select bank1
 11831  186A  0827               	movf	(_setOverCurrentDischargeProtection$2087+3)^(0+128),w
 11832  186B  0020               	movlb	0	; select bank0
 11833  186C  00AD               	movwf	___flmul@a+3
 11834  186D  0021               	movlb	1	; select bank1
 11835  186E  0826               	movf	(_setOverCurrentDischargeProtection$2087+2)^(0+128),w
 11836  186F  0020               	movlb	0	; select bank0
 11837  1870  00AC               	movwf	___flmul@a+2
 11838  1871  0021               	movlb	1	; select bank1
 11839  1872  0825               	movf	(_setOverCurrentDischargeProtection$2087+1)^(0+128),w
 11840  1873  0020               	movlb	0	; select bank0
 11841  1874  00AB               	movwf	___flmul@a+1
 11842  1875  0021               	movlb	1	; select bank1
 11843  1876  0824               	movf	_setOverCurrentDischargeProtection$2087^(0+128),w
 11844  1877  0020               	movlb	0	; select bank0
 11845  1878  00AA               	movwf	___flmul@a
 11846  1879  3190  2023  3198   	fcall	___flmul
 11847  187C  0020               	movlb	0	; select bank0
 11848  187D  0829               	movf	?___flmul+3,w
 11849  187E  00C7               	movwf	___fldiv@b+3
 11850  187F  0828               	movf	?___flmul+2,w
 11851  1880  00C6               	movwf	___fldiv@b+2
 11852  1881  0827               	movf	?___flmul+1,w
 11853  1882  00C5               	movwf	___fldiv@b+1
 11854  1883  0826               	movf	?___flmul,w
 11855  1884  00C4               	movwf	___fldiv@b
 11856  1885  319C  24E2  3198   	fcall	___fldiv
 11857  1888  0020               	movlb	0	; select bank0
 11858  1889  0843               	movf	?___fldiv+3,w
 11859  188A  00DD               	movwf	___flge@ff1+3
 11860  188B  0842               	movf	?___fldiv+2,w
 11861  188C  00DC               	movwf	___flge@ff1+2
 11862  188D  0841               	movf	?___fldiv+1,w
 11863  188E  00DB               	movwf	___flge@ff1+1
 11864  188F  0840               	movf	?___fldiv,w
 11865  1890  00DA               	movwf	___flge@ff1
 11866  1891  0021               	movlb	1	; select bank1
 11867  1892  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11868  1893  0085               	movwf	5
 11869  1894  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11870  1895  0084               	movwf	4
 11871  1896  3584               	lslf	4,f
 11872  1897  0D85               	rlf	5,f
 11873  1898  3008               	movlw	low (_OCD_threshold_setting| (0+32768))
 11874  1899  0784               	addwf	4,f
 11875  189A  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 11876  189B  3D85               	addwfc	5,f
 11877  189C  3F00               	moviw [0]fsr0
 11878  189D  0020               	movlb	0	; select bank0
 11879  189E  00EC               	movwf	??_setOverCurrentDischargeProtection
 11880  189F  3F01               	moviw [1]fsr0
 11881  18A0  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11882  18A1  086C               	movf	??_setOverCurrentDischargeProtection,w
 11883  18A2  00F1               	movwf	___xxtofl@val
 11884  18A3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11885  18A4  00F2               	movwf	___xxtofl@val+1
 11886  18A5  0D89               	rlf	9,f
 11887  18A6  3B89               	subwfb	9,f
 11888  18A7  0989               	comf	9,f
 11889  18A8  00F3               	movwf	___xxtofl@val+2
 11890  18A9  00F4               	movwf	___xxtofl@val+3
 11891  18AA  3001               	movlw	1
 11892  18AB  31AA  22E9  3198   	fcall	___xxtofl
 11893  18AE  0874               	movf	?___xxtofl+3,w
 11894  18AF  0020               	movlb	0	; select bank0
 11895  18B0  00E1               	movwf	___flge@ff2+3
 11896  18B1  0873               	movf	?___xxtofl+2,w
 11897  18B2  00E0               	movwf	___flge@ff2+2
 11898  18B3  0872               	movf	?___xxtofl+1,w
 11899  18B4  00DF               	movwf	___flge@ff2+1
 11900  18B5  0871               	movf	?___xxtofl,w
 11901  18B6  00DE               	movwf	___flge@ff2
 11902  18B7  31A8  20F2  3198   	fcall	___flge
 11903  18BA  1C03               	btfss	3,0
 11904  18BB  28C4               	goto	l7317
 11905                           
 11906                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11907  18BC  0023               	movlb	3	; select bank3
 11908  18BD  0865               	movf	_protect2^(0+384),w
 11909  18BE  0021               	movlb	1	; select bank1
 11910  18BF  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11911  18C0  39F0               	andlw	-16
 11912  18C1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11913  18C2  0023               	movlb	3	; select bank3
 11914  18C3  00E5               	movwf	_protect2^(0+384)
 11915  18C4                     l7317:	
 11916                           
 11917                           ;BQ76920.c: 118:     }
 11918  18C4  3001               	movlw	1
 11919  18C5  0021               	movlb	1	; select bank1
 11920  18C6  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11921  18C7  3000               	movlw	0
 11922  18C8  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11923  18C9  3000               	movlw	0
 11924  18CA  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11925  18CB  300F               	movlw	15
 11926  18CC  1903               	skipnz
 11927  18CD  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11928  18CE  1C03               	skipc
 11929  18CF  2818               	goto	l7311
 11930                           
 11931                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 11932  18D0  308F               	movlw	-113
 11933  18D1  0023               	movlb	3	; select bank3
 11934  18D2  05E5               	andwf	_protect2^(0+384),f
 11935                           
 11936                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11937  18D3  0021               	movlb	1	; select bank1
 11938  18D4  01AA               	clrf	setOverCurrentDischargeProtection@i_983^(0+128)
 11939  18D5  01AB               	clrf	(setOverCurrentDischargeProtection@i_983+1)^(0+128)
 11940  18D6                     l7329:	
 11941                           
 11942                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 11943  18D6  082B               	movf	(setOverCurrentDischargeProtection@i_983+1)^(0+128),w
 11944  18D7  0085               	movwf	5
 11945  18D8  082A               	movf	setOverCurrentDischargeProtection@i_983^(0+128),w
 11946  18D9  0084               	movwf	4
 11947  18DA  3584               	lslf	4,f
 11948  18DB  0D85               	rlf	5,f
 11949  18DC  3047               	movlw	low (_OCD_delay_setting| (0+32768))
 11950  18DD  0784               	addwf	4,f
 11951  18DE  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 11952  18DF  3D85               	addwfc	5,f
 11953  18E0  3F00               	moviw [0]fsr0
 11954  18E1  0020               	movlb	0	; select bank0
 11955  18E2  00EC               	movwf	??_setOverCurrentDischargeProtection
 11956  18E3  3F01               	moviw [1]fsr0
 11957  18E4  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11958  18E5  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11959  18E6  3A80               	xorlw	128
 11960  18E7  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11961  18E8  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11962  18E9  3A80               	xorlw	128
 11963  18EA  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11964  18EB  1D03               	skipz
 11965  18EC  28EF               	goto	u9245
 11966  18ED  086C               	movf	??_setOverCurrentDischargeProtection,w
 11967  18EE  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11968  18EF                     u9245:	
 11969  18EF  1C03               	skipc
 11970  18F0  28FE               	goto	l7333
 11971                           
 11972                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 11973  18F1  0021               	movlb	1	; select bank1
 11974  18F2  082A               	movf	setOverCurrentDischargeProtection@i_983^(0+128),w
 11975  18F3  0020               	movlb	0	; select bank0
 11976  18F4  00EC               	movwf	??_setOverCurrentDischargeProtection
 11977  18F5  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11978  18F6  0023               	movlb	3	; select bank3
 11979  18F7  0865               	movf	_protect2^(0+384),w
 11980  18F8  0020               	movlb	0	; select bank0
 11981  18F9  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11982  18FA  398F               	andlw	-113
 11983  18FB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11984  18FC  0023               	movlb	3	; select bank3
 11985  18FD  00E5               	movwf	_protect2^(0+384)
 11986  18FE                     l7333:	
 11987                           
 11988                           ;BQ76920.c: 125:     }
 11989  18FE  3001               	movlw	1
 11990  18FF  0021               	movlb	1	; select bank1
 11991  1900  07AA               	addwf	setOverCurrentDischargeProtection@i_983^(0+128),f
 11992  1901  3000               	movlw	0
 11993  1902  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_983+1)^(0+128),f
 11994  1903  3000               	movlw	0
 11995  1904  022B               	subwf	(setOverCurrentDischargeProtection@i_983+1)^(0+128),w
 11996  1905  3007               	movlw	7
 11997  1906  1903               	skipnz
 11998  1907  022A               	subwf	setOverCurrentDischargeProtection@i_983^(0+128),w
 11999  1908  1C03               	skipc
 12000  1909  28D6               	goto	l7329
 12001                           
 12002                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12003  190A  3018               	movlw	24
 12004  190B  00F5               	movwf	I2C_writeRegister@slaveAddress
 12005  190C  3000               	movlw	0
 12006  190D  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12007  190E  3007               	movlw	7
 12008  190F  00F7               	movwf	I2C_writeRegister@regAddress
 12009  1910  3000               	movlw	0
 12010  1911  00F8               	movwf	I2C_writeRegister@regAddress+1
 12011  1912  0023               	movlb	3	; select bank3
 12012  1913  0865               	movf	_protect2^(0+384),w
 12013  1914  0020               	movlb	0	; select bank0
 12014  1915  00EC               	movwf	??_setOverCurrentDischargeProtection
 12015  1916  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12016  1917  086C               	movf	??_setOverCurrentDischargeProtection,w
 12017  1918  00F9               	movwf	I2C_writeRegister@data
 12018  1919  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12019  191A  00FA               	movwf	I2C_writeRegister@data+1
 12020  191B  31B3  23B3         	fcall	_I2C_writeRegister
 12021  191D  0008               	return
 12022  191E                     __end_of_setOverCurrentDischargeProtection:	
 12023                           
 12024                           	psect	text40
 12025  28F2                     __ptext40:	
 12026 ;; *************** function ___flge *****************
 12027 ;; Defined at:
 12028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  ff1             4   58[BANK0 ] void 
 12031 ;;  ff2             4   62[BANK0 ] void 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;		None
 12034 ;; Return value:  Size  Location     Type
 12035 ;;		None               void
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12043 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12045 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12046 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12047 ;;Total ram usage:       12 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    1
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		_setShortCircuitProtection
 12054 ;;		_setOverCurrentDischargeProtection
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           
 12059                           ;psect for function ___flge
 12060  28F2                     ___flge:	
 12061                           
 12062                           ;incstack = 0
 12063                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12064  28F2  3000               	movlw	0
 12065  28F3  0020               	movlb	0	; select bank0
 12066  28F4  055A               	andwf	___flge@ff1,w
 12067  28F5  00E2               	movwf	??___flge
 12068  28F6  3000               	movlw	0
 12069  28F7  055B               	andwf	___flge@ff1+1,w
 12070  28F8  00E3               	movwf	??___flge+1
 12071  28F9  3080               	movlw	128
 12072  28FA  055C               	andwf	___flge@ff1+2,w
 12073  28FB  00E4               	movwf	??___flge+2
 12074  28FC  307F               	movlw	127
 12075  28FD  055D               	andwf	___flge@ff1+3,w
 12076  28FE  00E5               	movwf	??___flge+3
 12077  28FF  0865               	movf	??___flge+3,w
 12078  2900  0464               	iorwf	??___flge+2,w
 12079  2901  0463               	iorwf	??___flge+1,w
 12080  2902  0462               	iorwf	??___flge,w
 12081  2903  1D03               	skipz
 12082  2904  290D               	goto	l1124
 12083  2905  3000               	movlw	0
 12084  2906  00DD               	movwf	___flge@ff1+3
 12085  2907  3000               	movlw	0
 12086  2908  00DC               	movwf	___flge@ff1+2
 12087  2909  3000               	movlw	0
 12088  290A  00DB               	movwf	___flge@ff1+1
 12089  290B  3000               	movlw	0
 12090  290C  00DA               	movwf	___flge@ff1
 12091  290D                     l1124:	
 12092  290D  3000               	movlw	0
 12093  290E  055E               	andwf	___flge@ff2,w
 12094  290F  00E2               	movwf	??___flge
 12095  2910  3000               	movlw	0
 12096  2911  055F               	andwf	___flge@ff2+1,w
 12097  2912  00E3               	movwf	??___flge+1
 12098  2913  3080               	movlw	128
 12099  2914  0560               	andwf	___flge@ff2+2,w
 12100  2915  00E4               	movwf	??___flge+2
 12101  2916  307F               	movlw	127
 12102  2917  0561               	andwf	___flge@ff2+3,w
 12103  2918  00E5               	movwf	??___flge+3
 12104  2919  0865               	movf	??___flge+3,w
 12105  291A  0464               	iorwf	??___flge+2,w
 12106  291B  0463               	iorwf	??___flge+1,w
 12107  291C  0462               	iorwf	??___flge,w
 12108  291D  1D03               	skipz
 12109  291E  2927               	goto	l5715
 12110  291F  3000               	movlw	0
 12111  2920  00E1               	movwf	___flge@ff2+3
 12112  2921  3000               	movlw	0
 12113  2922  00E0               	movwf	___flge@ff2+2
 12114  2923  3000               	movlw	0
 12115  2924  00DF               	movwf	___flge@ff2+1
 12116  2925  3000               	movlw	0
 12117  2926  00DE               	movwf	___flge@ff2
 12118  2927                     l5715:	
 12119  2927  1FDD               	btfss	___flge@ff1+3,7
 12120  2928  2941               	goto	l5719
 12121  2929  3000               	movlw	0
 12122  292A  00E2               	movwf	??___flge
 12123  292B  3000               	movlw	0
 12124  292C  00E3               	movwf	??___flge+1
 12125  292D  3000               	movlw	0
 12126  292E  00E4               	movwf	??___flge+2
 12127  292F  3080               	movlw	128
 12128  2930  00E5               	movwf	??___flge+3
 12129  2931  085A               	movf	___flge@ff1,w
 12130  2932  02E2               	subwf	??___flge,f
 12131  2933  085B               	movf	___flge@ff1+1,w
 12132  2934  3BE3               	subwfb	??___flge+1,f
 12133  2935  085C               	movf	___flge@ff1+2,w
 12134  2936  3BE4               	subwfb	??___flge+2,f
 12135  2937  085D               	movf	___flge@ff1+3,w
 12136  2938  3BE5               	subwfb	??___flge+3,f
 12137  2939  0865               	movf	??___flge+3,w
 12138  293A  00DD               	movwf	___flge@ff1+3
 12139  293B  0864               	movf	??___flge+2,w
 12140  293C  00DC               	movwf	___flge@ff1+2
 12141  293D  0863               	movf	??___flge+1,w
 12142  293E  00DB               	movwf	___flge@ff1+1
 12143  293F  0862               	movf	??___flge,w
 12144  2940  00DA               	movwf	___flge@ff1
 12145  2941                     l5719:	
 12146  2941  1FE1               	btfss	___flge@ff2+3,7
 12147  2942  295B               	goto	l1127
 12148  2943  3000               	movlw	0
 12149  2944  00E2               	movwf	??___flge
 12150  2945  3000               	movlw	0
 12151  2946  00E3               	movwf	??___flge+1
 12152  2947  3000               	movlw	0
 12153  2948  00E4               	movwf	??___flge+2
 12154  2949  3080               	movlw	128
 12155  294A  00E5               	movwf	??___flge+3
 12156  294B  085E               	movf	___flge@ff2,w
 12157  294C  02E2               	subwf	??___flge,f
 12158  294D  085F               	movf	___flge@ff2+1,w
 12159  294E  3BE3               	subwfb	??___flge+1,f
 12160  294F  0860               	movf	___flge@ff2+2,w
 12161  2950  3BE4               	subwfb	??___flge+2,f
 12162  2951  0861               	movf	___flge@ff2+3,w
 12163  2952  3BE5               	subwfb	??___flge+3,f
 12164  2953  0865               	movf	??___flge+3,w
 12165  2954  00E1               	movwf	___flge@ff2+3
 12166  2955  0864               	movf	??___flge+2,w
 12167  2956  00E0               	movwf	___flge@ff2+2
 12168  2957  0863               	movf	??___flge+1,w
 12169  2958  00DF               	movwf	___flge@ff2+1
 12170  2959  0862               	movf	??___flge,w
 12171  295A  00DE               	movwf	___flge@ff2
 12172  295B                     l1127:	
 12173  295B  3080               	movlw	128
 12174  295C  06DD               	xorwf	___flge@ff1+3,f
 12175  295D  3080               	movlw	128
 12176  295E  06E1               	xorwf	___flge@ff2+3,f
 12177  295F  0861               	movf	___flge@ff2+3,w
 12178  2960  025D               	subwf	___flge@ff1+3,w
 12179  2961  1D03               	skipz
 12180  2962  0008               	return
 12181  2963  0860               	movf	___flge@ff2+2,w
 12182  2964  025C               	subwf	___flge@ff1+2,w
 12183  2965  1D03               	skipz
 12184  2966  0008               	return
 12185  2967  085F               	movf	___flge@ff2+1,w
 12186  2968  025B               	subwf	___flge@ff1+1,w
 12187  2969  1D03               	skipz
 12188  296A  0008               	return
 12189  296B  085E               	movf	___flge@ff2,w
 12190  296C  025A               	subwf	___flge@ff1,w
 12191  296D  0008               	return
 12192  296E                     __end_of___flge:	
 12193                           
 12194                           	psect	text41
 12195  217F                     __ptext41:	
 12196 ;; *************** function _setCellUndervoltageProtection *****************
 12197 ;; Defined at:
 12198 ;;		line 133 in file "BQ76920.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  voltage_mV      2   18[BANK0 ] int 
 12201 ;;  delay_s         2   20[BANK0 ] int 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  i               2   37[BANK0 ] int 
 12204 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;Total ram usage:       21 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    3
 12221 ;; This function calls:
 12222 ;;		_I2C_writeRegister
 12223 ;;		___aldiv
 12224 ;;		___lmul
 12225 ;;		_readRegister
 12226 ;; This function is called by:
 12227 ;;		_init_AFE
 12228 ;; This function uses a non-reentrant model
 12229 ;;
 12230                           
 12231                           
 12232                           ;psect for function _setCellUndervoltageProtection
 12233  217F                     _setCellUndervoltageProtection:	
 12234                           
 12235                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12236                           
 12237                           ;incstack = 0
 12238                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12239  217F  0020               	movlb	0	; select bank0
 12240  2180  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12241  2181  0023               	movlb	3	; select bank3
 12242  2182  00D7               	movwf	(_minCellVoltage+1)^(0+384)
 12243  2183  0020               	movlb	0	; select bank0
 12244  2184  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12245  2185  0023               	movlb	3	; select bank3
 12246  2186  00D6               	movwf	_minCellVoltage^(0+384)
 12247                           
 12248                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12249  2187  3018               	movlw	24
 12250  2188  00F5               	movwf	readRegister@slaveAddress
 12251  2189  3000               	movlw	0
 12252  218A  00F6               	movwf	readRegister@slaveAddress+1
 12253  218B  3008               	movlw	8
 12254  218C  00F7               	movwf	readRegister@regAddress
 12255  218D  3000               	movlw	0
 12256  218E  00F8               	movwf	readRegister@regAddress+1
 12257  218F  31B5  2565  31A1   	fcall	_readRegister
 12258  2192  0875               	movf	?_readRegister,w
 12259  2193  0020               	movlb	0	; select bank0
 12260  2194  00B6               	movwf	??_setCellUndervoltageProtection
 12261  2195  0836               	movf	??_setCellUndervoltageProtection,w
 12262  2196  0023               	movlb	3	; select bank3
 12263  2197  00E4               	movwf	_protect3^(0+384)
 12264                           
 12265                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12266  2198  0022               	movlb	2	; select bank2
 12267  2199  086E               	movf	_adcGain^(0+256),w
 12268  219A  0020               	movlb	0	; select bank0
 12269  219B  00A4               	movwf	___aldiv@divisor
 12270  219C  0022               	movlb	2	; select bank2
 12271  219D  086F               	movf	(_adcGain+1)^(0+256),w
 12272  219E  0020               	movlb	0	; select bank0
 12273  219F  00A5               	movwf	___aldiv@divisor+1
 12274  21A0  0D89               	rlf	9,f
 12275  21A1  3B89               	subwfb	9,f
 12276  21A2  0989               	comf	9,f
 12277  21A3  00A6               	movwf	___aldiv@divisor+2
 12278  21A4  00A7               	movwf	___aldiv@divisor+3
 12279  21A5  0022               	movlb	2	; select bank2
 12280  21A6  086C               	movf	_adcOffset^(0+256),w
 12281  21A7  0020               	movlb	0	; select bank0
 12282  21A8  00B6               	movwf	??_setCellUndervoltageProtection
 12283  21A9  0022               	movlb	2	; select bank2
 12284  21AA  086D               	movf	(_adcOffset+1)^(0+256),w
 12285  21AB  0020               	movlb	0	; select bank0
 12286  21AC  00B7               	movwf	??_setCellUndervoltageProtection+1
 12287  21AD  3000               	movlw	0
 12288  21AE  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12289  21AF  30FF               	movlw	255
 12290  21B0  00B8               	movwf	??_setCellUndervoltageProtection+2
 12291  21B1  00B9               	movwf	??_setCellUndervoltageProtection+3
 12292  21B2  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12293  21B3  00BA               	movwf	??_setCellUndervoltageProtection+4
 12294  21B4  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12295  21B5  00BB               	movwf	??_setCellUndervoltageProtection+5
 12296  21B6  3000               	movlw	0
 12297  21B7  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12298  21B8  30FF               	movlw	255
 12299  21B9  00BC               	movwf	??_setCellUndervoltageProtection+6
 12300  21BA  00BD               	movwf	??_setCellUndervoltageProtection+7
 12301  21BB  0836               	movf	??_setCellUndervoltageProtection,w
 12302  21BC  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12303  21BD  0837               	movf	??_setCellUndervoltageProtection+1,w
 12304  21BE  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12305  21BF  0838               	movf	??_setCellUndervoltageProtection+2,w
 12306  21C0  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12307  21C1  0839               	movf	??_setCellUndervoltageProtection+3,w
 12308  21C2  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12309  21C3  083D               	movf	??_setCellUndervoltageProtection+7,w
 12310  21C4  00F4               	movwf	___lmul@multiplier+3
 12311  21C5  083C               	movf	??_setCellUndervoltageProtection+6,w
 12312  21C6  00F3               	movwf	___lmul@multiplier+2
 12313  21C7  083B               	movf	??_setCellUndervoltageProtection+5,w
 12314  21C8  00F2               	movwf	___lmul@multiplier+1
 12315  21C9  083A               	movf	??_setCellUndervoltageProtection+4,w
 12316  21CA  00F1               	movwf	___lmul@multiplier
 12317  21CB  3000               	movlw	0
 12318  21CC  00F8               	movwf	___lmul@multiplicand+3
 12319  21CD  3000               	movlw	0
 12320  21CE  00F7               	movwf	___lmul@multiplicand+2
 12321  21CF  3003               	movlw	3
 12322  21D0  00F6               	movwf	___lmul@multiplicand+1
 12323  21D1  30E8               	movlw	232
 12324  21D2  00F5               	movwf	___lmul@multiplicand
 12325  21D3  31B4  24CC  31A1   	fcall	___lmul
 12326  21D6  0874               	movf	?___lmul+3,w
 12327  21D7  0020               	movlb	0	; select bank0
 12328  21D8  00AB               	movwf	___aldiv@dividend+3
 12329  21D9  0873               	movf	?___lmul+2,w
 12330  21DA  00AA               	movwf	___aldiv@dividend+2
 12331  21DB  0872               	movf	?___lmul+1,w
 12332  21DC  00A9               	movwf	___aldiv@dividend+1
 12333  21DD  0871               	movf	?___lmul,w
 12334  21DE  00A8               	movwf	___aldiv@dividend
 12335  21DF  31AA  2267  31A1   	fcall	___aldiv
 12336  21E2  0020               	movlb	0	; select bank0
 12337  21E3  0824               	movf	?___aldiv,w
 12338  21E4  00BE               	movwf	??_setCellUndervoltageProtection+8
 12339  21E5  0825               	movf	?___aldiv+1,w
 12340  21E6  00BF               	movwf	??_setCellUndervoltageProtection+9
 12341  21E7  0826               	movf	?___aldiv+2,w
 12342  21E8  00C0               	movwf	??_setCellUndervoltageProtection+10
 12343  21E9  0827               	movf	?___aldiv+3,w
 12344  21EA  00C1               	movwf	??_setCellUndervoltageProtection+11
 12345  21EB  3004               	movlw	4
 12346  21EC  00C2               	movwf	??_setCellUndervoltageProtection+12
 12347  21ED                     u9265:	
 12348  21ED  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12349  21EE  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12350  21EF  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12351  21F0  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12352  21F1  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12353  21F2  29ED               	goto	u9265
 12354  21F3  083E               	movf	??_setCellUndervoltageProtection+8,w
 12355  21F4  00C3               	movwf	??_setCellUndervoltageProtection+13
 12356  21F5  0843               	movf	??_setCellUndervoltageProtection+13,w
 12357  21F6  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12358                           
 12359                           ;BQ76920.c: 139:     uv_trip += 1;
 12360  21F7  3001               	movlw	1
 12361  21F8  00B6               	movwf	??_setCellUndervoltageProtection
 12362  21F9  0836               	movf	??_setCellUndervoltageProtection,w
 12363  21FA  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12364                           
 12365                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12366  21FB  3018               	movlw	24
 12367  21FC  00F5               	movwf	I2C_writeRegister@slaveAddress
 12368  21FD  3000               	movlw	0
 12369  21FE  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12370  21FF  300A               	movlw	10
 12371  2200  00F7               	movwf	I2C_writeRegister@regAddress
 12372  2201  3000               	movlw	0
 12373  2202  00F8               	movwf	I2C_writeRegister@regAddress+1
 12374  2203  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12375  2204  00B6               	movwf	??_setCellUndervoltageProtection
 12376  2205  01B7               	clrf	??_setCellUndervoltageProtection+1
 12377  2206  0836               	movf	??_setCellUndervoltageProtection,w
 12378  2207  00F9               	movwf	I2C_writeRegister@data
 12379  2208  0837               	movf	??_setCellUndervoltageProtection+1,w
 12380  2209  00FA               	movwf	I2C_writeRegister@data+1
 12381  220A  31B3  23B3  31A1   	fcall	_I2C_writeRegister
 12382                           
 12383                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12384  220D  303F               	movlw	-193
 12385  220E  0023               	movlb	3	; select bank3
 12386  220F  05E4               	andwf	_protect3^(0+384),f
 12387                           
 12388                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12389  2210  0020               	movlb	0	; select bank0
 12390  2211  01C5               	clrf	setCellUndervoltageProtection@i
 12391  2212  01C6               	clrf	setCellUndervoltageProtection@i+1
 12392  2213                     l7359:	
 12393                           
 12394                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12395  2213  0846               	movf	setCellUndervoltageProtection@i+1,w
 12396  2214  0085               	movwf	5
 12397  2215  0845               	movf	setCellUndervoltageProtection@i,w
 12398  2216  0084               	movwf	4
 12399  2217  3584               	lslf	4,f
 12400  2218  0D85               	rlf	5,f
 12401  2219  306F               	movlw	low (_UV_delay_setting| (0+32768))
 12402  221A  0784               	addwf	4,f
 12403  221B  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12404  221C  3D85               	addwfc	5,f
 12405  221D  3F00               	moviw [0]fsr0
 12406  221E  00B6               	movwf	??_setCellUndervoltageProtection
 12407  221F  3F01               	moviw [1]fsr0
 12408  2220  00B7               	movwf	??_setCellUndervoltageProtection+1
 12409  2221  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12410  2222  3A80               	xorlw	128
 12411  2223  00B8               	movwf	??_setCellUndervoltageProtection+2
 12412  2224  0837               	movf	??_setCellUndervoltageProtection+1,w
 12413  2225  3A80               	xorlw	128
 12414  2226  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12415  2227  1D03               	skipz
 12416  2228  2A2B               	goto	u9275
 12417  2229  0836               	movf	??_setCellUndervoltageProtection,w
 12418  222A  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12419  222B                     u9275:	
 12420  222B  1C03               	skipc
 12421  222C  2A3B               	goto	l7363
 12422                           
 12423                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12424  222D  0020               	movlb	0	; select bank0
 12425  222E  0845               	movf	setCellUndervoltageProtection@i,w
 12426  222F  00B6               	movwf	??_setCellUndervoltageProtection
 12427  2230  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12428  2231  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12429  2232  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12430  2233  0023               	movlb	3	; select bank3
 12431  2234  0864               	movf	_protect3^(0+384),w
 12432  2235  0020               	movlb	0	; select bank0
 12433  2236  0636               	xorwf	??_setCellUndervoltageProtection,w
 12434  2237  393F               	andlw	-193
 12435  2238  0636               	xorwf	??_setCellUndervoltageProtection,w
 12436  2239  0023               	movlb	3	; select bank3
 12437  223A  00E4               	movwf	_protect3^(0+384)
 12438  223B                     l7363:	
 12439                           
 12440                           ;BQ76920.c: 147:     }
 12441  223B  3001               	movlw	1
 12442  223C  0020               	movlb	0	; select bank0
 12443  223D  07C5               	addwf	setCellUndervoltageProtection@i,f
 12444  223E  3000               	movlw	0
 12445  223F  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12446  2240  3000               	movlw	0
 12447  2241  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12448  2242  3003               	movlw	3
 12449  2243  1903               	skipnz
 12450  2244  0245               	subwf	setCellUndervoltageProtection@i,w
 12451  2245  1C03               	skipc
 12452  2246  2A13               	goto	l7359
 12453                           
 12454                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12455  2247  3018               	movlw	24
 12456  2248  00F5               	movwf	I2C_writeRegister@slaveAddress
 12457  2249  3000               	movlw	0
 12458  224A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12459  224B  3008               	movlw	8
 12460  224C  00F7               	movwf	I2C_writeRegister@regAddress
 12461  224D  3000               	movlw	0
 12462  224E  00F8               	movwf	I2C_writeRegister@regAddress+1
 12463  224F  0023               	movlb	3	; select bank3
 12464  2250  0864               	movf	_protect3^(0+384),w
 12465  2251  0020               	movlb	0	; select bank0
 12466  2252  00B6               	movwf	??_setCellUndervoltageProtection
 12467  2253  01B7               	clrf	??_setCellUndervoltageProtection+1
 12468  2254  0836               	movf	??_setCellUndervoltageProtection,w
 12469  2255  00F9               	movwf	I2C_writeRegister@data
 12470  2256  0837               	movf	??_setCellUndervoltageProtection+1,w
 12471  2257  00FA               	movwf	I2C_writeRegister@data+1
 12472  2258  31B3  23B3         	fcall	_I2C_writeRegister
 12473  225A  0008               	return
 12474  225B                     __end_of_setCellUndervoltageProtection:	
 12475                           
 12476                           	psect	text42
 12477  2F2B                     __ptext42:	
 12478 ;; *************** function _setCellOvervoltageProtection *****************
 12479 ;; Defined at:
 12480 ;;		line 154 in file "BQ76920.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  voltage_mV      2   18[BANK0 ] int 
 12483 ;;  delay_s         2   20[BANK0 ] int 
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;  i               2   37[BANK0 ] int 
 12486 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12498 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12499 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12500 ;;Total ram usage:       21 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    3
 12503 ;; This function calls:
 12504 ;;		_I2C_writeRegister
 12505 ;;		___aldiv
 12506 ;;		___lmul
 12507 ;;		_readRegister
 12508 ;; This function is called by:
 12509 ;;		_init_AFE
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           
 12514                           ;psect for function _setCellOvervoltageProtection
 12515  2F2B                     _setCellOvervoltageProtection:	
 12516                           
 12517                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12518                           
 12519                           ;incstack = 0
 12520                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12521  2F2B  0020               	movlb	0	; select bank0
 12522  2F2C  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12523  2F2D  0023               	movlb	3	; select bank3
 12524  2F2E  00D9               	movwf	(_maxCellVoltage+1)^(0+384)
 12525  2F2F  0020               	movlb	0	; select bank0
 12526  2F30  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12527  2F31  0023               	movlb	3	; select bank3
 12528  2F32  00D8               	movwf	_maxCellVoltage^(0+384)
 12529                           
 12530                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12531  2F33  3018               	movlw	24
 12532  2F34  00F5               	movwf	readRegister@slaveAddress
 12533  2F35  3000               	movlw	0
 12534  2F36  00F6               	movwf	readRegister@slaveAddress+1
 12535  2F37  3008               	movlw	8
 12536  2F38  00F7               	movwf	readRegister@regAddress
 12537  2F39  3000               	movlw	0
 12538  2F3A  00F8               	movwf	readRegister@regAddress+1
 12539  2F3B  31B5  2565  31AF   	fcall	_readRegister
 12540  2F3E  0875               	movf	?_readRegister,w
 12541  2F3F  0020               	movlb	0	; select bank0
 12542  2F40  00B6               	movwf	??_setCellOvervoltageProtection
 12543  2F41  0836               	movf	??_setCellOvervoltageProtection,w
 12544  2F42  0023               	movlb	3	; select bank3
 12545  2F43  00E4               	movwf	_protect3^(0+384)
 12546                           
 12547                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12548  2F44  0022               	movlb	2	; select bank2
 12549  2F45  086E               	movf	_adcGain^(0+256),w
 12550  2F46  0020               	movlb	0	; select bank0
 12551  2F47  00A4               	movwf	___aldiv@divisor
 12552  2F48  0022               	movlb	2	; select bank2
 12553  2F49  086F               	movf	(_adcGain+1)^(0+256),w
 12554  2F4A  0020               	movlb	0	; select bank0
 12555  2F4B  00A5               	movwf	___aldiv@divisor+1
 12556  2F4C  0D89               	rlf	9,f
 12557  2F4D  3B89               	subwfb	9,f
 12558  2F4E  0989               	comf	9,f
 12559  2F4F  00A6               	movwf	___aldiv@divisor+2
 12560  2F50  00A7               	movwf	___aldiv@divisor+3
 12561  2F51  0022               	movlb	2	; select bank2
 12562  2F52  086C               	movf	_adcOffset^(0+256),w
 12563  2F53  0020               	movlb	0	; select bank0
 12564  2F54  00B6               	movwf	??_setCellOvervoltageProtection
 12565  2F55  0022               	movlb	2	; select bank2
 12566  2F56  086D               	movf	(_adcOffset+1)^(0+256),w
 12567  2F57  0020               	movlb	0	; select bank0
 12568  2F58  00B7               	movwf	??_setCellOvervoltageProtection+1
 12569  2F59  3000               	movlw	0
 12570  2F5A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12571  2F5B  30FF               	movlw	255
 12572  2F5C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12573  2F5D  00B9               	movwf	??_setCellOvervoltageProtection+3
 12574  2F5E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12575  2F5F  00BA               	movwf	??_setCellOvervoltageProtection+4
 12576  2F60  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12577  2F61  00BB               	movwf	??_setCellOvervoltageProtection+5
 12578  2F62  3000               	movlw	0
 12579  2F63  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12580  2F64  30FF               	movlw	255
 12581  2F65  00BC               	movwf	??_setCellOvervoltageProtection+6
 12582  2F66  00BD               	movwf	??_setCellOvervoltageProtection+7
 12583  2F67  0836               	movf	??_setCellOvervoltageProtection,w
 12584  2F68  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12585  2F69  0837               	movf	??_setCellOvervoltageProtection+1,w
 12586  2F6A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12587  2F6B  0838               	movf	??_setCellOvervoltageProtection+2,w
 12588  2F6C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12589  2F6D  0839               	movf	??_setCellOvervoltageProtection+3,w
 12590  2F6E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12591  2F6F  083D               	movf	??_setCellOvervoltageProtection+7,w
 12592  2F70  00F4               	movwf	___lmul@multiplier+3
 12593  2F71  083C               	movf	??_setCellOvervoltageProtection+6,w
 12594  2F72  00F3               	movwf	___lmul@multiplier+2
 12595  2F73  083B               	movf	??_setCellOvervoltageProtection+5,w
 12596  2F74  00F2               	movwf	___lmul@multiplier+1
 12597  2F75  083A               	movf	??_setCellOvervoltageProtection+4,w
 12598  2F76  00F1               	movwf	___lmul@multiplier
 12599  2F77  3000               	movlw	0
 12600  2F78  00F8               	movwf	___lmul@multiplicand+3
 12601  2F79  3000               	movlw	0
 12602  2F7A  00F7               	movwf	___lmul@multiplicand+2
 12603  2F7B  3003               	movlw	3
 12604  2F7C  00F6               	movwf	___lmul@multiplicand+1
 12605  2F7D  30E8               	movlw	232
 12606  2F7E  00F5               	movwf	___lmul@multiplicand
 12607  2F7F  31B4  24CC  31AF   	fcall	___lmul
 12608  2F82  0874               	movf	?___lmul+3,w
 12609  2F83  0020               	movlb	0	; select bank0
 12610  2F84  00AB               	movwf	___aldiv@dividend+3
 12611  2F85  0873               	movf	?___lmul+2,w
 12612  2F86  00AA               	movwf	___aldiv@dividend+2
 12613  2F87  0872               	movf	?___lmul+1,w
 12614  2F88  00A9               	movwf	___aldiv@dividend+1
 12615  2F89  0871               	movf	?___lmul,w
 12616  2F8A  00A8               	movwf	___aldiv@dividend
 12617  2F8B  31AA  2267  31AF   	fcall	___aldiv
 12618  2F8E  0020               	movlb	0	; select bank0
 12619  2F8F  0824               	movf	?___aldiv,w
 12620  2F90  00BE               	movwf	??_setCellOvervoltageProtection+8
 12621  2F91  0825               	movf	?___aldiv+1,w
 12622  2F92  00BF               	movwf	??_setCellOvervoltageProtection+9
 12623  2F93  0826               	movf	?___aldiv+2,w
 12624  2F94  00C0               	movwf	??_setCellOvervoltageProtection+10
 12625  2F95  0827               	movf	?___aldiv+3,w
 12626  2F96  00C1               	movwf	??_setCellOvervoltageProtection+11
 12627  2F97  3004               	movlw	4
 12628  2F98  00C2               	movwf	??_setCellOvervoltageProtection+12
 12629  2F99                     u9295:	
 12630  2F99  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12631  2F9A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12632  2F9B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12633  2F9C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12634  2F9D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12635  2F9E  2F99               	goto	u9295
 12636  2F9F  083E               	movf	??_setCellOvervoltageProtection+8,w
 12637  2FA0  00C3               	movwf	??_setCellOvervoltageProtection+13
 12638  2FA1  0843               	movf	??_setCellOvervoltageProtection+13,w
 12639  2FA2  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12640                           
 12641                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12642  2FA3  3018               	movlw	24
 12643  2FA4  00F5               	movwf	I2C_writeRegister@slaveAddress
 12644  2FA5  3000               	movlw	0
 12645  2FA6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12646  2FA7  3009               	movlw	9
 12647  2FA8  00F7               	movwf	I2C_writeRegister@regAddress
 12648  2FA9  3000               	movlw	0
 12649  2FAA  00F8               	movwf	I2C_writeRegister@regAddress+1
 12650  2FAB  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12651  2FAC  00B6               	movwf	??_setCellOvervoltageProtection
 12652  2FAD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12653  2FAE  0836               	movf	??_setCellOvervoltageProtection,w
 12654  2FAF  00F9               	movwf	I2C_writeRegister@data
 12655  2FB0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12656  2FB1  00FA               	movwf	I2C_writeRegister@data+1
 12657  2FB2  31B3  23B3  31AF   	fcall	_I2C_writeRegister
 12658                           
 12659                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12660  2FB5  0020               	movlb	0	; select bank0
 12661  2FB6  01C5               	clrf	setCellOvervoltageProtection@i
 12662  2FB7  01C6               	clrf	setCellOvervoltageProtection@i+1
 12663  2FB8                     l7385:	
 12664                           
 12665                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12666  2FB8  0846               	movf	setCellOvervoltageProtection@i+1,w
 12667  2FB9  0085               	movwf	5
 12668  2FBA  0845               	movf	setCellOvervoltageProtection@i,w
 12669  2FBB  0084               	movwf	4
 12670  2FBC  3584               	lslf	4,f
 12671  2FBD  0D85               	rlf	5,f
 12672  2FBE  3067               	movlw	low (_OV_delay_setting| (0+32768))
 12673  2FBF  0784               	addwf	4,f
 12674  2FC0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 12675  2FC1  3D85               	addwfc	5,f
 12676  2FC2  3F00               	moviw [0]fsr0
 12677  2FC3  00B6               	movwf	??_setCellOvervoltageProtection
 12678  2FC4  3F01               	moviw [1]fsr0
 12679  2FC5  00B7               	movwf	??_setCellOvervoltageProtection+1
 12680  2FC6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12681  2FC7  3A80               	xorlw	128
 12682  2FC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 12683  2FC9  0837               	movf	??_setCellOvervoltageProtection+1,w
 12684  2FCA  3A80               	xorlw	128
 12685  2FCB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12686  2FCC  1D03               	skipz
 12687  2FCD  2FD0               	goto	u9305
 12688  2FCE  0836               	movf	??_setCellOvervoltageProtection,w
 12689  2FCF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12690  2FD0                     u9305:	
 12691  2FD0  1C03               	skipc
 12692  2FD1  2FE0               	goto	l7389
 12693                           
 12694                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12695  2FD2  0020               	movlb	0	; select bank0
 12696  2FD3  0845               	movf	setCellOvervoltageProtection@i,w
 12697  2FD4  00B6               	movwf	??_setCellOvervoltageProtection
 12698  2FD5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12699  2FD6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12700  2FD7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12701  2FD8  0023               	movlb	3	; select bank3
 12702  2FD9  0864               	movf	_protect3^(0+384),w
 12703  2FDA  0020               	movlb	0	; select bank0
 12704  2FDB  0636               	xorwf	??_setCellOvervoltageProtection,w
 12705  2FDC  393F               	andlw	-193
 12706  2FDD  0636               	xorwf	??_setCellOvervoltageProtection,w
 12707  2FDE  0023               	movlb	3	; select bank3
 12708  2FDF  00E4               	movwf	_protect3^(0+384)
 12709  2FE0                     l7389:	
 12710                           
 12711                           ;BQ76920.c: 165:     }
 12712  2FE0  3001               	movlw	1
 12713  2FE1  0020               	movlb	0	; select bank0
 12714  2FE2  07C5               	addwf	setCellOvervoltageProtection@i,f
 12715  2FE3  3000               	movlw	0
 12716  2FE4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12717  2FE5  3000               	movlw	0
 12718  2FE6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12719  2FE7  3003               	movlw	3
 12720  2FE8  1903               	skipnz
 12721  2FE9  0245               	subwf	setCellOvervoltageProtection@i,w
 12722  2FEA  1C03               	skipc
 12723  2FEB  2FB8               	goto	l7385
 12724                           
 12725                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12726  2FEC  3018               	movlw	24
 12727  2FED  00F5               	movwf	I2C_writeRegister@slaveAddress
 12728  2FEE  3000               	movlw	0
 12729  2FEF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12730  2FF0  3008               	movlw	8
 12731  2FF1  00F7               	movwf	I2C_writeRegister@regAddress
 12732  2FF2  3000               	movlw	0
 12733  2FF3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12734  2FF4  0023               	movlb	3	; select bank3
 12735  2FF5  0864               	movf	_protect3^(0+384),w
 12736  2FF6  0020               	movlb	0	; select bank0
 12737  2FF7  00B6               	movwf	??_setCellOvervoltageProtection
 12738  2FF8  01B7               	clrf	??_setCellOvervoltageProtection+1
 12739  2FF9  0836               	movf	??_setCellOvervoltageProtection,w
 12740  2FFA  00F9               	movwf	I2C_writeRegister@data
 12741  2FFB  0837               	movf	??_setCellOvervoltageProtection+1,w
 12742  2FFC  00FA               	movwf	I2C_writeRegister@data+1
 12743  2FFD  31B3  23B3         	fcall	_I2C_writeRegister
 12744  2FFF  0008               	return
 12745  3000                     __end_of_setCellOvervoltageProtection:	
 12746                           
 12747                           	psect	text43
 12748  2C28                     __ptext43:	
 12749 ;; *************** function _beginAFEcommunication *****************
 12750 ;; Defined at:
 12751 ;;		line 28 in file "BQ76920.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;  i               2   13[BANK0 ] int 
 12756 ;;  commSuccess     2   11[BANK0 ] int 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  2    0[BANK0 ] int 
 12759 ;; Registers used:
 12760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12767 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12768 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12769 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12770 ;;Total ram usage:       15 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    3
 12773 ;; This function calls:
 12774 ;;		_I2C_writeRegister
 12775 ;;		_readRegister
 12776 ;; This function is called by:
 12777 ;;		_statemachine
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           
 12782                           ;psect for function _beginAFEcommunication
 12783  2C28                     _beginAFEcommunication:	
 12784                           
 12785                           ;BQ76920.c: 30:     int commSuccess = 0;
 12786                           
 12787                           ;incstack = 0
 12788                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12789  2C28  0020               	movlb	0	; select bank0
 12790  2C29  01AB               	clrf	beginAFEcommunication@commSuccess
 12791  2C2A  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12792                           
 12793                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12794  2C2B  01AD               	clrf	beginAFEcommunication@i
 12795  2C2C  01AE               	clrf	beginAFEcommunication@i+1
 12796  2C2D                     l7499:	
 12797                           
 12798                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12799  2C2D  0020               	movlb	0	; select bank0
 12800  2C2E  352D               	lslf	beginAFEcommunication@i,w
 12801  2C2F  3EB4               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12802  2C30  0086               	movwf	6
 12803  2C31  3001               	movlw	1	; select bank3/4
 12804  2C32  0087               	movwf	7
 12805  2C33  3000               	movlw	0
 12806  2C34  3FC0               	movwi [0]fsr1
 12807  2C35  3FC1               	movwi [1]fsr1
 12808                           
 12809                           ;BQ76920.c: 35:     }
 12810  2C36  3001               	movlw	1
 12811  2C37  07AD               	addwf	beginAFEcommunication@i,f
 12812  2C38  3000               	movlw	0
 12813  2C39  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12814  2C3A  082E               	movf	beginAFEcommunication@i+1,w
 12815  2C3B  3A80               	xorlw	128
 12816  2C3C  00A2               	movwf	??_beginAFEcommunication
 12817  2C3D  3080               	movlw	128
 12818  2C3E  0222               	subwf	??_beginAFEcommunication,w
 12819  2C3F  1D03               	skipz
 12820  2C40  2C43               	goto	u9365
 12821  2C41  3004               	movlw	4
 12822  2C42  022D               	subwf	beginAFEcommunication@i,w
 12823  2C43                     u9365:	
 12824  2C43  1C03               	skipc
 12825  2C44  2C2D               	goto	l7499
 12826                           
 12827                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12828  2C45  3018               	movlw	24
 12829  2C46  00F5               	movwf	I2C_writeRegister@slaveAddress
 12830  2C47  3000               	movlw	0
 12831  2C48  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12832  2C49  300B               	movlw	11
 12833  2C4A  00F7               	movwf	I2C_writeRegister@regAddress
 12834  2C4B  3000               	movlw	0
 12835  2C4C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12836  2C4D  3019               	movlw	25
 12837  2C4E  00F9               	movwf	I2C_writeRegister@data
 12838  2C4F  3000               	movlw	0
 12839  2C50  00FA               	movwf	I2C_writeRegister@data+1
 12840  2C51  31B3  23B3  31AC   	fcall	_I2C_writeRegister
 12841                           
 12842                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12843  2C54  3018               	movlw	24
 12844  2C55  00F5               	movwf	readRegister@slaveAddress
 12845  2C56  3000               	movlw	0
 12846  2C57  00F6               	movwf	readRegister@slaveAddress+1
 12847  2C58  300B               	movlw	11
 12848  2C59  00F7               	movwf	readRegister@regAddress
 12849  2C5A  3000               	movlw	0
 12850  2C5B  00F8               	movwf	readRegister@regAddress+1
 12851  2C5C  31B5  2565  31AC   	fcall	_readRegister
 12852  2C5F  3019               	movlw	25
 12853  2C60  0675               	xorwf	?_readRegister,w
 12854  2C61  0476               	iorwf	?_readRegister+1,w
 12855  2C62  1D03               	btfss	3,2
 12856  2C63  2CD6               	goto	l471
 12857                           
 12858                           ;BQ76920.c: 41:         commSuccess = 1;
 12859  2C64  3001               	movlw	1
 12860  2C65  0020               	movlb	0	; select bank0
 12861  2C66  00AB               	movwf	beginAFEcommunication@commSuccess
 12862  2C67  3000               	movlw	0
 12863  2C68  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12864                           
 12865                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12866  2C69  3018               	movlw	24
 12867  2C6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12868  2C6B  3000               	movlw	0
 12869  2C6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12870  2C6D  3004               	movlw	4
 12871  2C6E  00F7               	movwf	I2C_writeRegister@regAddress
 12872  2C6F  3000               	movlw	0
 12873  2C70  00F8               	movwf	I2C_writeRegister@regAddress+1
 12874  2C71  3018               	movlw	24
 12875  2C72  00F9               	movwf	I2C_writeRegister@data
 12876  2C73  3000               	movlw	0
 12877  2C74  00FA               	movwf	I2C_writeRegister@data+1
 12878  2C75  31B3  23B3  31AC   	fcall	_I2C_writeRegister
 12879                           
 12880                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12881  2C78  3018               	movlw	24
 12882  2C79  00F5               	movwf	I2C_writeRegister@slaveAddress
 12883  2C7A  3000               	movlw	0
 12884  2C7B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12885  2C7C  3005               	movlw	5
 12886  2C7D  00F7               	movwf	I2C_writeRegister@regAddress
 12887  2C7E  3000               	movlw	0
 12888  2C7F  00F8               	movwf	I2C_writeRegister@regAddress+1
 12889  2C80  3040               	movlw	64
 12890  2C81  00F9               	movwf	I2C_writeRegister@data
 12891  2C82  3000               	movlw	0
 12892  2C83  00FA               	movwf	I2C_writeRegister@data+1
 12893  2C84  31B3  23B3  31AC   	fcall	_I2C_writeRegister
 12894                           
 12895                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12896  2C87  3018               	movlw	24
 12897  2C88  00F5               	movwf	readRegister@slaveAddress
 12898  2C89  3000               	movlw	0
 12899  2C8A  00F6               	movwf	readRegister@slaveAddress+1
 12900  2C8B  3051               	movlw	81
 12901  2C8C  00F7               	movwf	readRegister@regAddress
 12902  2C8D  3000               	movlw	0
 12903  2C8E  00F8               	movwf	readRegister@regAddress+1
 12904  2C8F  31B5  2565  31AC   	fcall	_readRegister
 12905  2C92  0876               	movf	?_readRegister+1,w
 12906  2C93  0022               	movlb	2	; select bank2
 12907  2C94  00ED               	movwf	(_adcOffset+1)^(0+256)
 12908  2C95  0875               	movf	?_readRegister,w
 12909  2C96  00EC               	movwf	_adcOffset^(0+256)
 12910                           
 12911                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12912  2C97  3018               	movlw	24
 12913  2C98  00F5               	movwf	readRegister@slaveAddress
 12914  2C99  3000               	movlw	0
 12915  2C9A  00F6               	movwf	readRegister@slaveAddress+1
 12916  2C9B  3059               	movlw	89
 12917  2C9C  00F7               	movwf	readRegister@regAddress
 12918  2C9D  3000               	movlw	0
 12919  2C9E  00F8               	movwf	readRegister@regAddress+1
 12920  2C9F  31B5  2565  31AC   	fcall	_readRegister
 12921  2CA2  0875               	movf	?_readRegister,w
 12922  2CA3  0020               	movlb	0	; select bank0
 12923  2CA4  00A2               	movwf	??_beginAFEcommunication
 12924  2CA5  0876               	movf	?_readRegister+1,w
 12925  2CA6  00A3               	movwf	??_beginAFEcommunication+1
 12926  2CA7  3005               	movlw	5
 12927  2CA8  00A4               	movwf	??_beginAFEcommunication+2
 12928  2CA9                     u9385:	
 12929  2CA9  0D23               	rlf	??_beginAFEcommunication+1,w
 12930  2CAA  0CA3               	rrf	??_beginAFEcommunication+1,f
 12931  2CAB  0CA2               	rrf	??_beginAFEcommunication,f
 12932  2CAC  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12933  2CAD  2CA9               	goto	u9385
 12934  2CAE  3007               	movlw	7
 12935  2CAF  0522               	andwf	??_beginAFEcommunication,w
 12936  2CB0  00A5               	movwf	??_beginAFEcommunication+3
 12937  2CB1  3000               	movlw	0
 12938  2CB2  0523               	andwf	??_beginAFEcommunication+1,w
 12939  2CB3  00A6               	movwf	??_beginAFEcommunication+4
 12940  2CB4  3018               	movlw	24
 12941  2CB5  00F5               	movwf	readRegister@slaveAddress
 12942  2CB6  3000               	movlw	0
 12943  2CB7  00F6               	movwf	readRegister@slaveAddress+1
 12944  2CB8  3050               	movlw	80
 12945  2CB9  00F7               	movwf	readRegister@regAddress
 12946  2CBA  3000               	movlw	0
 12947  2CBB  00F8               	movwf	readRegister@regAddress+1
 12948  2CBC  31B5  2565         	fcall	_readRegister
 12949  2CBE  300C               	movlw	12
 12950  2CBF  0575               	andwf	?_readRegister,w
 12951  2CC0  0020               	movlb	0	; select bank0
 12952  2CC1  00A7               	movwf	??_beginAFEcommunication+5
 12953  2CC2  3000               	movlw	0
 12954  2CC3  0576               	andwf	?_readRegister+1,w
 12955  2CC4  00A8               	movwf	??_beginAFEcommunication+6
 12956  2CC5  35A7               	lslf	??_beginAFEcommunication+5,f
 12957  2CC6  0DA8               	rlf	??_beginAFEcommunication+6,f
 12958  2CC7  0825               	movf	??_beginAFEcommunication+3,w
 12959  2CC8  0427               	iorwf	??_beginAFEcommunication+5,w
 12960  2CC9  00A9               	movwf	??_beginAFEcommunication+7
 12961  2CCA  0826               	movf	??_beginAFEcommunication+4,w
 12962  2CCB  0428               	iorwf	??_beginAFEcommunication+6,w
 12963  2CCC  00AA               	movwf	??_beginAFEcommunication+8
 12964  2CCD  0829               	movf	??_beginAFEcommunication+7,w
 12965  2CCE  3E6D               	addlw	109
 12966  2CCF  0022               	movlb	2	; select bank2
 12967  2CD0  00EE               	movwf	_adcGain^(0+256)
 12968  2CD1  3001               	movlw	1
 12969  2CD2  0020               	movlb	0	; select bank0
 12970  2CD3  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12971  2CD4  0022               	movlb	2	; select bank2
 12972  2CD5  00EF               	movwf	(_adcGain+1)^(0+256)
 12973  2CD6                     l471:	
 12974                           ;BQ76920.c: 53:     }
 12975                           
 12976                           
 12977                           ;BQ76920.c: 54:     return commSuccess;
 12978  2CD6  0020               	movlb	0	; select bank0
 12979  2CD7  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12980  2CD8  00A1               	movwf	?_beginAFEcommunication+1
 12981  2CD9  082B               	movf	beginAFEcommunication@commSuccess,w
 12982  2CDA  00A0               	movwf	?_beginAFEcommunication
 12983  2CDB  0008               	return
 12984  2CDC                     __end_of_beginAFEcommunication:	
 12985                           
 12986                           	psect	text44
 12987  33F2                     __ptext44:	
 12988 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12989 ;; Defined at:
 12990 ;;		line 43 in file "RGB.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;		None
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;		None
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  1    wreg      void 
 12997 ;; Registers used:
 12998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12999 ;; Tracked objects:
 13000 ;;		On entry : 0/0
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13008 ;;Total ram usage:        1 bytes
 13009 ;; Hardware stack levels used:    1
 13010 ;; Hardware stack levels required when called:    2
 13011 ;; This function calls:
 13012 ;;		_RGB_color
 13013 ;; This function is called by:
 13014 ;;		_statemachine
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           
 13019                           ;psect for function _RGB_AWAIT_AFE_CONN
 13020  33F2                     _RGB_AWAIT_AFE_CONN:	
 13021                           
 13022                           ;RGB.c: 45:     if (toggleColor) {
 13023                           
 13024                           ;incstack = 0
 13025                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13026  33F2  087C               	movf	_toggleColor,w
 13027  33F3  1903               	btfsc	3,2
 13028  33F4  2C04               	goto	l6103
 13029                           
 13030                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13031  33F5  087C               	movf	_toggleColor,w
 13032  33F6  1D03               	btfss	3,2
 13033  33F7  2BFA               	goto	u7600
 13034  33F8  3001               	movlw	1
 13035  33F9  2BFB               	goto	u7610
 13036  33FA                     u7600:	
 13037  33FA  3000               	movlw	0
 13038  33FB                     u7610:	
 13039  33FB  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13040  33FC  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13041  33FD  00FC               	movwf	_toggleColor
 13042                           
 13043                           ;RGB.c: 47:         RGB_color(0);
 13044  33FE  3000               	movlw	0
 13045  33FF  00F1               	movwf	RGB_color@color
 13046  3400  00F2               	movwf	RGB_color@color+1
 13047  3401  31B3  23D1         	fcall	_RGB_color
 13048                           
 13049                           ;RGB.c: 48:     } else {
 13050  3403  0008               	return
 13051  3404                     l6103:	
 13052                           
 13053                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13054  3404  087C               	movf	_toggleColor,w
 13055  3405  1D03               	btfss	3,2
 13056  3406  2C09               	goto	u7620
 13057  3407  3001               	movlw	1
 13058  3408  2C0A               	goto	u7630
 13059  3409                     u7620:	
 13060  3409  3000               	movlw	0
 13061  340A                     u7630:	
 13062  340A  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13063  340B  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13064  340C  00FC               	movwf	_toggleColor
 13065                           
 13066                           ;RGB.c: 50:         RGB_color(1);
 13067  340D  3001               	movlw	1
 13068  340E  00F1               	movwf	RGB_color@color
 13069  340F  3000               	movlw	0
 13070  3410  00F2               	movwf	RGB_color@color+1
 13071  3411  31B3  23D1         	fcall	_RGB_color
 13072  3413  0008               	return
 13073  3414                     __end_of_RGB_AWAIT_AFE_CONN:	
 13074                           
 13075                           	psect	text45
 13076  33D1                     __ptext45:	
 13077 ;; *************** function _RGB_color *****************
 13078 ;; Defined at:
 13079 ;;		line 17 in file "RGB.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;  color           2    1[COMMON] int 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  1    wreg      void 
 13086 ;; Registers used:
 13087 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13097 ;;Total ram usage:        2 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    1
 13100 ;; This function calls:
 13101 ;;		Nothing
 13102 ;; This function is called by:
 13103 ;;		_statemachine
 13104 ;;		_RGB_AWAIT_AFE_CONN
 13105 ;;		_watchdog_timeout_shutdown
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           
 13110                           ;psect for function _RGB_color
 13111  33D1                     _RGB_color:	
 13112                           
 13113                           ;RGB.c: 19:     switch (color) {
 13114                           
 13115                           ;incstack = 0
 13116                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13117  33D1  2BE1               	goto	l5809
 13118  33D2                     l352:	
 13119                           ;RGB.c: 20:         case 0:
 13120                           
 13121                           
 13122                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13123  33D2  0022               	movlb	2	; select bank2
 13124  33D3  120C               	bcf	12,4	;volatile
 13125                           
 13126                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13127  33D4  168C               	bsf	12,5	;volatile
 13128                           
 13129                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13130  33D5  1410               	bsf	16,0	;volatile
 13131                           
 13132                           ;RGB.c: 24:             break;
 13133  33D6  0008               	return
 13134  33D7                     l354:	
 13135                           ;RGB.c: 25:         case 1:
 13136                           
 13137                           
 13138                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13139  33D7  0022               	movlb	2	; select bank2
 13140  33D8  160C               	bsf	12,4	;volatile
 13141                           
 13142                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13143  33D9  128C               	bcf	12,5	;volatile
 13144                           
 13145                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13146  33DA  1410               	bsf	16,0	;volatile
 13147                           
 13148                           ;RGB.c: 29:             break;
 13149  33DB  0008               	return
 13150  33DC                     l355:	
 13151                           ;RGB.c: 30:         case 2:
 13152                           
 13153                           
 13154                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13155  33DC  0022               	movlb	2	; select bank2
 13156  33DD  160C               	bsf	12,4	;volatile
 13157                           
 13158                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13159  33DE  168C               	bsf	12,5	;volatile
 13160                           
 13161                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13162  33DF  1010               	bcf	16,0	;volatile
 13163                           
 13164                           ;RGB.c: 34:             break;
 13165  33E0  0008               	return
 13166  33E1                     l5809:	
 13167                           
 13168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13169                           ; Switch size 1, requested type "simple"
 13170                           ; Number of cases is 1, Range of values is 0 to 0
 13171                           ; switch strategies available:
 13172                           ; Name         Instructions Cycles
 13173                           ; simple_byte            4     3 (average)
 13174                           ; direct_byte            8     6 (fixed)
 13175                           ; jumptable            260     6 (fixed)
 13176                           ;	Chosen strategy is simple_byte
 13177  33E1  0872               	movf	RGB_color@color+1,w
 13178  33E2  3A00               	xorlw	0	; case 0
 13179  33E3  1903               	skipnz
 13180  33E4  2BE6               	goto	l7813
 13181  33E5  2BF1               	goto	l356
 13182  33E6                     l7813:	
 13183                           
 13184                           ; Switch size 1, requested type "simple"
 13185                           ; Number of cases is 3, Range of values is 0 to 2
 13186                           ; switch strategies available:
 13187                           ; Name         Instructions Cycles
 13188                           ; simple_byte           10     6 (average)
 13189                           ; direct_byte           12     6 (fixed)
 13190                           ; jumptable            260     6 (fixed)
 13191                           ;	Chosen strategy is simple_byte
 13192  33E6  0871               	movf	RGB_color@color,w
 13193  33E7  3A00               	xorlw	0	; case 0
 13194  33E8  1903               	skipnz
 13195  33E9  2BD2               	goto	l352
 13196  33EA  3A01               	xorlw	1	; case 1
 13197  33EB  1903               	skipnz
 13198  33EC  2BD7               	goto	l354
 13199  33ED  3A03               	xorlw	3	; case 2
 13200  33EE  1903               	skipnz
 13201  33EF  2BDC               	goto	l355
 13202  33F0  2BF1               	goto	l356
 13203  33F1                     l356:	
 13204  33F1  0008               	return
 13205  33F2                     __end_of_RGB_color:	
 13206                           
 13207                           	psect	text46
 13208  343A                     __ptext46:	
 13209 ;; *************** function _AFE_UPDATE *****************
 13210 ;; Defined at:
 13211 ;;		line 172 in file "BQ76920.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;		None
 13214 ;; Auto vars:     Size  Location     Type
 13215 ;;		None
 13216 ;; Return value:  Size  Location     Type
 13217 ;;                  1    wreg      void 
 13218 ;; Registers used:
 13219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13220 ;; Tracked objects:
 13221 ;;		On entry : 0/0
 13222 ;;		On exit  : 0/0
 13223 ;;		Unchanged: 0/0
 13224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;Total ram usage:        0 bytes
 13230 ;; Hardware stack levels used:    1
 13231 ;; Hardware stack levels required when called:    5
 13232 ;; This function calls:
 13233 ;;		_calibrate_BATTSOC
 13234 ;;		_coulomb_counter
 13235 ;;		_enableCharging
 13236 ;;		_enableDischarging
 13237 ;;		_updateCurrent
 13238 ;;		_updateTemperatures
 13239 ;;		_updateVoltages
 13240 ;; This function is called by:
 13241 ;;		_statemachine
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           
 13246                           ;psect for function _AFE_UPDATE
 13247  343A                     _AFE_UPDATE:	
 13248                           
 13249                           ;BQ76920.c: 174:     updateVoltages();
 13250                           
 13251                           ;incstack = 0
 13252                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13253  343A  3192  224F  31B4   	fcall	_updateVoltages
 13254                           
 13255                           ;BQ76920.c: 176:     if(batCurrent<10){
 13256  343D  0023               	movlb	3	; select bank3
 13257  343E  1BCD               	btfsc	(_batCurrent+3)^(0+384),7
 13258  343F  2C4D               	goto	l7533
 13259  3440  084D               	movf	(_batCurrent+3)^(0+384),w
 13260  3441  1D03               	btfss	3,2
 13261  3442  2C51               	goto	l7535
 13262  3443  084C               	movf	(_batCurrent+2)^(0+384),w
 13263  3444  1D03               	btfss	3,2
 13264  3445  2C51               	goto	l7535
 13265  3446  084B               	movf	(_batCurrent+1)^(0+384),w
 13266  3447  1D03               	btfss	3,2
 13267  3448  2C51               	goto	l7535
 13268  3449  300A               	movlw	10
 13269  344A  024A               	subwf	_batCurrent^(0+384),w
 13270  344B  1803               	btfsc	3,0
 13271  344C  2C51               	goto	l7535
 13272  344D                     l7533:	
 13273                           
 13274                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13275  344D  31AE  2665  31B4   	fcall	_calibrate_BATTSOC
 13276                           
 13277                           ;BQ76920.c: 179:     }else{
 13278  3450  2C54               	goto	l7537
 13279  3451                     l7535:	
 13280                           
 13281                           ;BQ76920.c: 180:          coulomb_counter();
 13282  3451  31A0  20A3  31B4   	fcall	_coulomb_counter
 13283  3454                     l7537:	
 13284                           
 13285                           ;BQ76920.c: 183:     updateCurrent();
 13286  3454  31AC  24DC  31B4   	fcall	_updateCurrent
 13287                           
 13288                           ;BQ76920.c: 184:     updateTemperatures();
 13289  3457  3195  2527  31B4   	fcall	_updateTemperatures
 13290                           
 13291                           ;BQ76920.c: 187:     enableDischarging(1);
 13292  345A  3001               	movlw	1
 13293  345B  0020               	movlb	0	; select bank0
 13294  345C  00A0               	movwf	enableDischarging@enable
 13295  345D  3000               	movlw	0
 13296  345E  00A1               	movwf	enableDischarging@enable+1
 13297  345F  31B5  25D2  31B4   	fcall	_enableDischarging
 13298                           
 13299                           ;BQ76920.c: 188:     enableCharging(1);
 13300  3462  3001               	movlw	1
 13301  3463  0020               	movlb	0	; select bank0
 13302  3464  00A0               	movwf	enableCharging@enable
 13303  3465  3000               	movlw	0
 13304  3466  00A1               	movwf	enableCharging@enable+1
 13305  3467  31B5  259B         	fcall	_enableCharging
 13306  3469  0008               	return
 13307  346A                     __end_of_AFE_UPDATE:	
 13308                           
 13309                           	psect	text47
 13310  124F                     __ptext47:	
 13311 ;; *************** function _updateVoltages *****************
 13312 ;; Defined at:
 13313 ;;		line 218 in file "BQ76920.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  adcVal          4   24[BANK1 ] long 
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0, pclath, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13329 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13330 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13331 ;;Total ram usage:       11 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    3
 13334 ;; This function calls:
 13335 ;;		___aldiv
 13336 ;;		___fladd
 13337 ;;		___fldiv
 13338 ;;		___flmul
 13339 ;;		___fltol
 13340 ;;		___lmul
 13341 ;;		___xxtofl
 13342 ;;		_readRegister
 13343 ;; This function is called by:
 13344 ;;		_AFE_UPDATE
 13345 ;; This function uses a non-reentrant model
 13346 ;;
 13347                           
 13348                           
 13349                           ;psect for function _updateVoltages
 13350  124F                     _updateVoltages:	
 13351                           
 13352                           ;BQ76920.c: 222:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13353                           
 13354                           ;incstack = 0
 13355                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13356  124F  3018               	movlw	24
 13357  1250  00F5               	movwf	readRegister@slaveAddress
 13358  1251  3000               	movlw	0
 13359  1252  00F6               	movwf	readRegister@slaveAddress+1
 13360  1253  302A               	movlw	42
 13361  1254  00F7               	movwf	readRegister@regAddress
 13362  1255  3000               	movlw	0
 13363  1256  00F8               	movwf	readRegister@regAddress+1
 13364  1257  31B5  2565  3192   	fcall	_readRegister
 13365  125A  0875               	movf	?_readRegister,w
 13366  125B  0021               	movlb	1	; select bank1
 13367  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13368  125D  0876               	movf	?_readRegister+1,w
 13369  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13370  125F  0831               	movf	??_updateVoltages^(0+128),w
 13371  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13372  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13373  1262  3018               	movlw	24
 13374  1263  00F5               	movwf	readRegister@slaveAddress
 13375  1264  3000               	movlw	0
 13376  1265  00F6               	movwf	readRegister@slaveAddress+1
 13377  1266  302B               	movlw	43
 13378  1267  00F7               	movwf	readRegister@regAddress
 13379  1268  3000               	movlw	0
 13380  1269  00F8               	movwf	readRegister@regAddress+1
 13381  126A  31B5  2565  3192   	fcall	_readRegister
 13382  126D  0875               	movf	?_readRegister,w
 13383  126E  0021               	movlb	1	; select bank1
 13384  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13385  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13386  1271  0876               	movf	?_readRegister+1,w
 13387  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13388  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13389  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13390  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13391  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13392  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13393  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13394                           
 13395                           ;BQ76920.c: 223:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13396  1279  0022               	movlb	2	; select bank2
 13397  127A  086E               	movf	_adcGain^(0+256),w
 13398  127B  00F1               	movwf	___xxtofl@val
 13399  127C  086F               	movf	(_adcGain+1)^(0+256),w
 13400  127D  00F2               	movwf	___xxtofl@val+1
 13401  127E  0D89               	rlf	9,f
 13402  127F  3B89               	subwfb	9,f
 13403  1280  0989               	comf	9,f
 13404  1281  00F3               	movwf	___xxtofl@val+2
 13405  1282  00F4               	movwf	___xxtofl@val+3
 13406  1283  3001               	movlw	1
 13407  1284  31AA  22E9  3192   	fcall	___xxtofl
 13408  1287  0874               	movf	?___xxtofl+3,w
 13409  1288  0020               	movlb	0	; select bank0
 13410  1289  00AD               	movwf	___flmul@a+3
 13411  128A  0873               	movf	?___xxtofl+2,w
 13412  128B  00AC               	movwf	___flmul@a+2
 13413  128C  0872               	movf	?___xxtofl+1,w
 13414  128D  00AB               	movwf	___flmul@a+1
 13415  128E  0871               	movf	?___xxtofl,w
 13416  128F  00AA               	movwf	___flmul@a
 13417  1290  3040               	movlw	64
 13418  1291  00A9               	movwf	___flmul@b+3
 13419  1292  3080               	movlw	128
 13420  1293  00A8               	movwf	___flmul@b+2
 13421  1294  3000               	movlw	0
 13422  1295  00A7               	movwf	___flmul@b+1
 13423  1296  3000               	movlw	0
 13424  1297  00A6               	movwf	___flmul@b
 13425  1298  3190  2023  3192   	fcall	___flmul
 13426  129B  0020               	movlb	0	; select bank0
 13427  129C  0829               	movf	?___flmul+3,w
 13428  129D  0021               	movlb	1	; select bank1
 13429  129E  00B7               	movwf	(_updateVoltages$2088+3)^(0+128)
 13430  129F  0020               	movlb	0	; select bank0
 13431  12A0  0828               	movf	?___flmul+2,w
 13432  12A1  0021               	movlb	1	; select bank1
 13433  12A2  00B6               	movwf	(_updateVoltages$2088+2)^(0+128)
 13434  12A3  0020               	movlb	0	; select bank0
 13435  12A4  0827               	movf	?___flmul+1,w
 13436  12A5  0021               	movlb	1	; select bank1
 13437  12A6  00B5               	movwf	(_updateVoltages$2088+1)^(0+128)
 13438  12A7  0020               	movlb	0	; select bank0
 13439  12A8  0826               	movf	?___flmul,w
 13440  12A9  0021               	movlb	1	; select bank1
 13441  12AA  00B4               	movwf	_updateVoltages$2088^(0+128)
 13442                           
 13443                           ;BQ76920.c: 223:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13444  12AB  0837               	movf	(_updateVoltages$2088+3)^(0+128),w
 13445  12AC  0020               	movlb	0	; select bank0
 13446  12AD  00AD               	movwf	___flmul@a+3
 13447  12AE  0021               	movlb	1	; select bank1
 13448  12AF  0836               	movf	(_updateVoltages$2088+2)^(0+128),w
 13449  12B0  0020               	movlb	0	; select bank0
 13450  12B1  00AC               	movwf	___flmul@a+2
 13451  12B2  0021               	movlb	1	; select bank1
 13452  12B3  0835               	movf	(_updateVoltages$2088+1)^(0+128),w
 13453  12B4  0020               	movlb	0	; select bank0
 13454  12B5  00AB               	movwf	___flmul@a+1
 13455  12B6  0021               	movlb	1	; select bank1
 13456  12B7  0834               	movf	_updateVoltages$2088^(0+128),w
 13457  12B8  0020               	movlb	0	; select bank0
 13458  12B9  00AA               	movwf	___flmul@a
 13459  12BA  0021               	movlb	1	; select bank1
 13460  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13461  12BC  00F4               	movwf	___xxtofl@val+3
 13462  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13463  12BE  00F3               	movwf	___xxtofl@val+2
 13464  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13465  12C0  00F2               	movwf	___xxtofl@val+1
 13466  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13467  12C2  00F1               	movwf	___xxtofl@val
 13468  12C3  3001               	movlw	1
 13469  12C4  31AA  22E9  3192   	fcall	___xxtofl
 13470  12C7  0874               	movf	?___xxtofl+3,w
 13471  12C8  0020               	movlb	0	; select bank0
 13472  12C9  00A9               	movwf	___flmul@b+3
 13473  12CA  0873               	movf	?___xxtofl+2,w
 13474  12CB  00A8               	movwf	___flmul@b+2
 13475  12CC  0872               	movf	?___xxtofl+1,w
 13476  12CD  00A7               	movwf	___flmul@b+1
 13477  12CE  0871               	movf	?___xxtofl,w
 13478  12CF  00A6               	movwf	___flmul@b
 13479  12D0  3190  2023  3192   	fcall	___flmul
 13480  12D3  0020               	movlb	0	; select bank0
 13481  12D4  0829               	movf	?___flmul+3,w
 13482  12D5  00C7               	movwf	___fldiv@b+3
 13483  12D6  0828               	movf	?___flmul+2,w
 13484  12D7  00C6               	movwf	___fldiv@b+2
 13485  12D8  0827               	movf	?___flmul+1,w
 13486  12D9  00C5               	movwf	___fldiv@b+1
 13487  12DA  0826               	movf	?___flmul,w
 13488  12DB  00C4               	movwf	___fldiv@b
 13489  12DC  3044               	movlw	68
 13490  12DD  00C3               	movwf	___fldiv@a+3
 13491  12DE  307A               	movlw	122
 13492  12DF  00C2               	movwf	___fldiv@a+2
 13493  12E0  3000               	movlw	0
 13494  12E1  00C1               	movwf	___fldiv@a+1
 13495  12E2  3000               	movlw	0
 13496  12E3  00C0               	movwf	___fldiv@a
 13497  12E4  319C  24E2  3192   	fcall	___fldiv
 13498  12E7  0020               	movlb	0	; select bank0
 13499  12E8  0843               	movf	?___fldiv+3,w
 13500  12E9  00E1               	movwf	___fladd@a+3
 13501  12EA  0842               	movf	?___fldiv+2,w
 13502  12EB  00E0               	movwf	___fladd@a+2
 13503  12EC  0841               	movf	?___fldiv+1,w
 13504  12ED  00DF               	movwf	___fladd@a+1
 13505  12EE  0840               	movf	?___fldiv,w
 13506  12EF  00DE               	movwf	___fladd@a
 13507  12F0  0022               	movlb	2	; select bank2
 13508  12F1  086D               	movf	(_adcOffset+1)^(0+256),w
 13509  12F2  0021               	movlb	1	; select bank1
 13510  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13511  12F4  0022               	movlb	2	; select bank2
 13512  12F5  086C               	movf	_adcOffset^(0+256),w
 13513  12F6  0021               	movlb	1	; select bank1
 13514  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13515  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13516  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13517  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13518  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13519  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13520  12FD  00F1               	movwf	___xxtofl@val
 13521  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13522  12FF  00F2               	movwf	___xxtofl@val+1
 13523  1300  0D89               	rlf	9,f
 13524  1301  3B89               	subwfb	9,f
 13525  1302  0989               	comf	9,f
 13526  1303  00F3               	movwf	___xxtofl@val+2
 13527  1304  00F4               	movwf	___xxtofl@val+3
 13528  1305  3001               	movlw	1
 13529  1306  31AA  22E9  3192   	fcall	___xxtofl
 13530  1309  0874               	movf	?___xxtofl+3,w
 13531  130A  0020               	movlb	0	; select bank0
 13532  130B  00DD               	movwf	___fladd@b+3
 13533  130C  0873               	movf	?___xxtofl+2,w
 13534  130D  00DC               	movwf	___fladd@b+2
 13535  130E  0872               	movf	?___xxtofl+1,w
 13536  130F  00DB               	movwf	___fladd@b+1
 13537  1310  0871               	movf	?___xxtofl,w
 13538  1311  00DA               	movwf	___fladd@b
 13539  1312  3185  25FE  3192   	fcall	___fladd
 13540  1315  0020               	movlb	0	; select bank0
 13541  1316  085D               	movf	?___fladd+3,w
 13542  1317  0021               	movlb	1	; select bank1
 13543  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13544  1319  0020               	movlb	0	; select bank0
 13545  131A  085C               	movf	?___fladd+2,w
 13546  131B  0021               	movlb	1	; select bank1
 13547  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13548  131D  0020               	movlb	0	; select bank0
 13549  131E  085B               	movf	?___fladd+1,w
 13550  131F  0021               	movlb	1	; select bank1
 13551  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13552  1321  0020               	movlb	0	; select bank0
 13553  1322  085A               	movf	?___fladd,w
 13554  1323  0021               	movlb	1	; select bank1
 13555  1324  00A8               	movwf	___fltol@f1^(0+128)
 13556  1325  31B7  279A  3192   	fcall	___fltol
 13557  1328  0021               	movlb	1	; select bank1
 13558  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13559  132A  0023               	movlb	3	; select bank3
 13560  132B  00D1               	movwf	(_batVoltage+3)^(0+384)
 13561  132C  0021               	movlb	1	; select bank1
 13562  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13563  132E  0023               	movlb	3	; select bank3
 13564  132F  00D0               	movwf	(_batVoltage+2)^(0+384)
 13565  1330  0021               	movlb	1	; select bank1
 13566  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13567  1332  0023               	movlb	3	; select bank3
 13568  1333  00CF               	movwf	(_batVoltage+1)^(0+384)
 13569  1334  0021               	movlb	1	; select bank1
 13570  1335  0828               	movf	?___fltol^(0+128),w
 13571  1336  0023               	movlb	3	; select bank3
 13572  1337  00CE               	movwf	_batVoltage^(0+384)
 13573                           
 13574                           ;BQ76920.c: 246:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13575  1338  3018               	movlw	24
 13576  1339  00F5               	movwf	readRegister@slaveAddress
 13577  133A  3000               	movlw	0
 13578  133B  00F6               	movwf	readRegister@slaveAddress+1
 13579  133C  300C               	movlw	12
 13580  133D  00F7               	movwf	readRegister@regAddress
 13581  133E  3000               	movlw	0
 13582  133F  00F8               	movwf	readRegister@regAddress+1
 13583  1340  31B5  2565  3192   	fcall	_readRegister
 13584  1343  303F               	movlw	63
 13585  1344  0575               	andwf	?_readRegister,w
 13586  1345  0021               	movlb	1	; select bank1
 13587  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13588  1347  3000               	movlw	0
 13589  1348  0576               	andwf	?_readRegister+1,w
 13590  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13591  134A  0831               	movf	??_updateVoltages^(0+128),w
 13592  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13593  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13594  134D  3018               	movlw	24
 13595  134E  00F5               	movwf	readRegister@slaveAddress
 13596  134F  3000               	movlw	0
 13597  1350  00F6               	movwf	readRegister@slaveAddress+1
 13598  1351  300D               	movlw	13
 13599  1352  00F7               	movwf	readRegister@regAddress
 13600  1353  3000               	movlw	0
 13601  1354  00F8               	movwf	readRegister@regAddress+1
 13602  1355  31B5  2565  3192   	fcall	_readRegister
 13603  1358  0875               	movf	?_readRegister,w
 13604  1359  0021               	movlb	1	; select bank1
 13605  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13606  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13607  135C  0876               	movf	?_readRegister+1,w
 13608  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13609  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13610  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13611  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13612  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13613  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13614  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13615                           
 13616                           ;BQ76920.c: 247:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13617  1364  3000               	movlw	0
 13618  1365  0020               	movlb	0	; select bank0
 13619  1366  00A7               	movwf	___aldiv@divisor+3
 13620  1367  3000               	movlw	0
 13621  1368  00A6               	movwf	___aldiv@divisor+2
 13622  1369  3003               	movlw	3
 13623  136A  00A5               	movwf	___aldiv@divisor+1
 13624  136B  30E8               	movlw	232
 13625  136C  00A4               	movwf	___aldiv@divisor
 13626  136D  0022               	movlb	2	; select bank2
 13627  136E  086E               	movf	_adcGain^(0+256),w
 13628  136F  00F1               	movwf	___lmul@multiplier
 13629  1370  086F               	movf	(_adcGain+1)^(0+256),w
 13630  1371  00F2               	movwf	___lmul@multiplier+1
 13631  1372  0D89               	rlf	9,f
 13632  1373  3B89               	subwfb	9,f
 13633  1374  0989               	comf	9,f
 13634  1375  00F3               	movwf	___lmul@multiplier+2
 13635  1376  00F4               	movwf	___lmul@multiplier+3
 13636  1377  0021               	movlb	1	; select bank1
 13637  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13638  1379  00F8               	movwf	___lmul@multiplicand+3
 13639  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13640  137B  00F7               	movwf	___lmul@multiplicand+2
 13641  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13642  137D  00F6               	movwf	___lmul@multiplicand+1
 13643  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13644  137F  00F5               	movwf	___lmul@multiplicand
 13645  1380  31B4  24CC  3192   	fcall	___lmul
 13646  1383  0874               	movf	?___lmul+3,w
 13647  1384  0020               	movlb	0	; select bank0
 13648  1385  00AB               	movwf	___aldiv@dividend+3
 13649  1386  0873               	movf	?___lmul+2,w
 13650  1387  00AA               	movwf	___aldiv@dividend+2
 13651  1388  0872               	movf	?___lmul+1,w
 13652  1389  00A9               	movwf	___aldiv@dividend+1
 13653  138A  0871               	movf	?___lmul,w
 13654  138B  00A8               	movwf	___aldiv@dividend
 13655  138C  31AA  2267  3192   	fcall	___aldiv
 13656  138F  0022               	movlb	2	; select bank2
 13657  1390  086C               	movf	_adcOffset^(0+256),w
 13658  1391  0020               	movlb	0	; select bank0
 13659  1392  0724               	addwf	?___aldiv,w
 13660  1393  0023               	movlb	3	; select bank3
 13661  1394  00B4               	movwf	_cellVoltages^(0+384)
 13662  1395  0022               	movlb	2	; select bank2
 13663  1396  086D               	movf	(_adcOffset+1)^(0+256),w
 13664  1397  0020               	movlb	0	; select bank0
 13665  1398  3D25               	addwfc	?___aldiv+1,w
 13666  1399  0023               	movlb	3	; select bank3
 13667  139A  00B5               	movwf	(_cellVoltages+1)^(0+384)
 13668                           
 13669                           ;BQ76920.c: 248:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13670  139B  3018               	movlw	24
 13671  139C  00F5               	movwf	readRegister@slaveAddress
 13672  139D  3000               	movlw	0
 13673  139E  00F6               	movwf	readRegister@slaveAddress+1
 13674  139F  300E               	movlw	14
 13675  13A0  00F7               	movwf	readRegister@regAddress
 13676  13A1  3000               	movlw	0
 13677  13A2  00F8               	movwf	readRegister@regAddress+1
 13678  13A3  31B5  2565  3192   	fcall	_readRegister
 13679  13A6  303F               	movlw	63
 13680  13A7  0575               	andwf	?_readRegister,w
 13681  13A8  0021               	movlb	1	; select bank1
 13682  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13683  13AA  3000               	movlw	0
 13684  13AB  0576               	andwf	?_readRegister+1,w
 13685  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13686  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13687  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13688  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13689  13B0  3018               	movlw	24
 13690  13B1  00F5               	movwf	readRegister@slaveAddress
 13691  13B2  3000               	movlw	0
 13692  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13693  13B4  300F               	movlw	15
 13694  13B5  00F7               	movwf	readRegister@regAddress
 13695  13B6  3000               	movlw	0
 13696  13B7  00F8               	movwf	readRegister@regAddress+1
 13697  13B8  31B5  2565  3192   	fcall	_readRegister
 13698  13BB  0875               	movf	?_readRegister,w
 13699  13BC  0021               	movlb	1	; select bank1
 13700  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13701  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13702  13BF  0876               	movf	?_readRegister+1,w
 13703  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13704  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13705  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13706  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13707  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13708  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13709  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13710                           
 13711                           ;BQ76920.c: 249:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13712  13C7  3000               	movlw	0
 13713  13C8  0020               	movlb	0	; select bank0
 13714  13C9  00A7               	movwf	___aldiv@divisor+3
 13715  13CA  3000               	movlw	0
 13716  13CB  00A6               	movwf	___aldiv@divisor+2
 13717  13CC  3003               	movlw	3
 13718  13CD  00A5               	movwf	___aldiv@divisor+1
 13719  13CE  30E8               	movlw	232
 13720  13CF  00A4               	movwf	___aldiv@divisor
 13721  13D0  0022               	movlb	2	; select bank2
 13722  13D1  086E               	movf	_adcGain^(0+256),w
 13723  13D2  00F1               	movwf	___lmul@multiplier
 13724  13D3  086F               	movf	(_adcGain+1)^(0+256),w
 13725  13D4  00F2               	movwf	___lmul@multiplier+1
 13726  13D5  0D89               	rlf	9,f
 13727  13D6  3B89               	subwfb	9,f
 13728  13D7  0989               	comf	9,f
 13729  13D8  00F3               	movwf	___lmul@multiplier+2
 13730  13D9  00F4               	movwf	___lmul@multiplier+3
 13731  13DA  0021               	movlb	1	; select bank1
 13732  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13733  13DC  00F8               	movwf	___lmul@multiplicand+3
 13734  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13735  13DE  00F7               	movwf	___lmul@multiplicand+2
 13736  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13737  13E0  00F6               	movwf	___lmul@multiplicand+1
 13738  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13739  13E2  00F5               	movwf	___lmul@multiplicand
 13740  13E3  31B4  24CC  3192   	fcall	___lmul
 13741  13E6  0874               	movf	?___lmul+3,w
 13742  13E7  0020               	movlb	0	; select bank0
 13743  13E8  00AB               	movwf	___aldiv@dividend+3
 13744  13E9  0873               	movf	?___lmul+2,w
 13745  13EA  00AA               	movwf	___aldiv@dividend+2
 13746  13EB  0872               	movf	?___lmul+1,w
 13747  13EC  00A9               	movwf	___aldiv@dividend+1
 13748  13ED  0871               	movf	?___lmul,w
 13749  13EE  00A8               	movwf	___aldiv@dividend
 13750  13EF  31AA  2267  3192   	fcall	___aldiv
 13751  13F2  0022               	movlb	2	; select bank2
 13752  13F3  086C               	movf	_adcOffset^(0+256),w
 13753  13F4  0020               	movlb	0	; select bank0
 13754  13F5  0724               	addwf	?___aldiv,w
 13755  13F6  0023               	movlb	3	; select bank3
 13756  13F7  00B6               	movwf	(_cellVoltages^(0+384)+2)
 13757  13F8  0022               	movlb	2	; select bank2
 13758  13F9  086D               	movf	(_adcOffset+1)^(0+256),w
 13759  13FA  0020               	movlb	0	; select bank0
 13760  13FB  3D25               	addwfc	?___aldiv+1,w
 13761  13FC  0023               	movlb	3	; select bank3
 13762  13FD  00B7               	movwf	((_cellVoltages+1)^(0+384)+2)
 13763                           
 13764                           ;BQ76920.c: 250:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13765  13FE  3018               	movlw	24
 13766  13FF  00F5               	movwf	readRegister@slaveAddress
 13767  1400  3000               	movlw	0
 13768  1401  00F6               	movwf	readRegister@slaveAddress+1
 13769  1402  3010               	movlw	16
 13770  1403  00F7               	movwf	readRegister@regAddress
 13771  1404  3000               	movlw	0
 13772  1405  00F8               	movwf	readRegister@regAddress+1
 13773  1406  31B5  2565  3192   	fcall	_readRegister
 13774  1409  303F               	movlw	63
 13775  140A  0575               	andwf	?_readRegister,w
 13776  140B  0021               	movlb	1	; select bank1
 13777  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13778  140D  3000               	movlw	0
 13779  140E  0576               	andwf	?_readRegister+1,w
 13780  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13781  1410  0831               	movf	??_updateVoltages^(0+128),w
 13782  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13783  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13784  1413  3018               	movlw	24
 13785  1414  00F5               	movwf	readRegister@slaveAddress
 13786  1415  3000               	movlw	0
 13787  1416  00F6               	movwf	readRegister@slaveAddress+1
 13788  1417  3011               	movlw	17
 13789  1418  00F7               	movwf	readRegister@regAddress
 13790  1419  3000               	movlw	0
 13791  141A  00F8               	movwf	readRegister@regAddress+1
 13792  141B  31B5  2565  3192   	fcall	_readRegister
 13793  141E  0875               	movf	?_readRegister,w
 13794  141F  0021               	movlb	1	; select bank1
 13795  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13796  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13797  1422  0876               	movf	?_readRegister+1,w
 13798  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13799  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13800  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13801  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13802  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13803  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13804  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13805                           
 13806                           ;BQ76920.c: 251:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13807  142A  3000               	movlw	0
 13808  142B  0020               	movlb	0	; select bank0
 13809  142C  00A7               	movwf	___aldiv@divisor+3
 13810  142D  3000               	movlw	0
 13811  142E  00A6               	movwf	___aldiv@divisor+2
 13812  142F  3003               	movlw	3
 13813  1430  00A5               	movwf	___aldiv@divisor+1
 13814  1431  30E8               	movlw	232
 13815  1432  00A4               	movwf	___aldiv@divisor
 13816  1433  0022               	movlb	2	; select bank2
 13817  1434  086E               	movf	_adcGain^(0+256),w
 13818  1435  00F1               	movwf	___lmul@multiplier
 13819  1436  086F               	movf	(_adcGain+1)^(0+256),w
 13820  1437  00F2               	movwf	___lmul@multiplier+1
 13821  1438  0D89               	rlf	9,f
 13822  1439  3B89               	subwfb	9,f
 13823  143A  0989               	comf	9,f
 13824  143B  00F3               	movwf	___lmul@multiplier+2
 13825  143C  00F4               	movwf	___lmul@multiplier+3
 13826  143D  0021               	movlb	1	; select bank1
 13827  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13828  143F  00F8               	movwf	___lmul@multiplicand+3
 13829  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13830  1441  00F7               	movwf	___lmul@multiplicand+2
 13831  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13832  1443  00F6               	movwf	___lmul@multiplicand+1
 13833  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13834  1445  00F5               	movwf	___lmul@multiplicand
 13835  1446  31B4  24CC  3192   	fcall	___lmul
 13836  1449  0874               	movf	?___lmul+3,w
 13837  144A  0020               	movlb	0	; select bank0
 13838  144B  00AB               	movwf	___aldiv@dividend+3
 13839  144C  0873               	movf	?___lmul+2,w
 13840  144D  00AA               	movwf	___aldiv@dividend+2
 13841  144E  0872               	movf	?___lmul+1,w
 13842  144F  00A9               	movwf	___aldiv@dividend+1
 13843  1450  0871               	movf	?___lmul,w
 13844  1451  00A8               	movwf	___aldiv@dividend
 13845  1452  31AA  2267  3192   	fcall	___aldiv
 13846  1455  0022               	movlb	2	; select bank2
 13847  1456  086C               	movf	_adcOffset^(0+256),w
 13848  1457  0020               	movlb	0	; select bank0
 13849  1458  0724               	addwf	?___aldiv,w
 13850  1459  0023               	movlb	3	; select bank3
 13851  145A  00B8               	movwf	(_cellVoltages^(0+384)+4)
 13852  145B  0022               	movlb	2	; select bank2
 13853  145C  086D               	movf	(_adcOffset+1)^(0+256),w
 13854  145D  0020               	movlb	0	; select bank0
 13855  145E  3D25               	addwfc	?___aldiv+1,w
 13856  145F  0023               	movlb	3	; select bank3
 13857  1460  00B9               	movwf	((_cellVoltages+1)^(0+384)+4)
 13858                           
 13859                           ;BQ76920.c: 252:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13860  1461  3018               	movlw	24
 13861  1462  00F5               	movwf	readRegister@slaveAddress
 13862  1463  3000               	movlw	0
 13863  1464  00F6               	movwf	readRegister@slaveAddress+1
 13864  1465  3012               	movlw	18
 13865  1466  00F7               	movwf	readRegister@regAddress
 13866  1467  3000               	movlw	0
 13867  1468  00F8               	movwf	readRegister@regAddress+1
 13868  1469  31B5  2565  3192   	fcall	_readRegister
 13869  146C  303F               	movlw	63
 13870  146D  0575               	andwf	?_readRegister,w
 13871  146E  0021               	movlb	1	; select bank1
 13872  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13873  1470  3000               	movlw	0
 13874  1471  0576               	andwf	?_readRegister+1,w
 13875  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13876  1473  0831               	movf	??_updateVoltages^(0+128),w
 13877  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13878  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13879  1476  3018               	movlw	24
 13880  1477  00F5               	movwf	readRegister@slaveAddress
 13881  1478  3000               	movlw	0
 13882  1479  00F6               	movwf	readRegister@slaveAddress+1
 13883  147A  3013               	movlw	19
 13884  147B  00F7               	movwf	readRegister@regAddress
 13885  147C  3000               	movlw	0
 13886  147D  00F8               	movwf	readRegister@regAddress+1
 13887  147E  31B5  2565  3192   	fcall	_readRegister
 13888  1481  0875               	movf	?_readRegister,w
 13889  1482  0021               	movlb	1	; select bank1
 13890  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13891  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13892  1485  0876               	movf	?_readRegister+1,w
 13893  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13894  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13895  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13896  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13897  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13898  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13899  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13900                           
 13901                           ;BQ76920.c: 253:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13902  148D  3000               	movlw	0
 13903  148E  0020               	movlb	0	; select bank0
 13904  148F  00A7               	movwf	___aldiv@divisor+3
 13905  1490  3000               	movlw	0
 13906  1491  00A6               	movwf	___aldiv@divisor+2
 13907  1492  3003               	movlw	3
 13908  1493  00A5               	movwf	___aldiv@divisor+1
 13909  1494  30E8               	movlw	232
 13910  1495  00A4               	movwf	___aldiv@divisor
 13911  1496  0022               	movlb	2	; select bank2
 13912  1497  086E               	movf	_adcGain^(0+256),w
 13913  1498  00F1               	movwf	___lmul@multiplier
 13914  1499  086F               	movf	(_adcGain+1)^(0+256),w
 13915  149A  00F2               	movwf	___lmul@multiplier+1
 13916  149B  0D89               	rlf	9,f
 13917  149C  3B89               	subwfb	9,f
 13918  149D  0989               	comf	9,f
 13919  149E  00F3               	movwf	___lmul@multiplier+2
 13920  149F  00F4               	movwf	___lmul@multiplier+3
 13921  14A0  0021               	movlb	1	; select bank1
 13922  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13923  14A2  00F8               	movwf	___lmul@multiplicand+3
 13924  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13925  14A4  00F7               	movwf	___lmul@multiplicand+2
 13926  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13927  14A6  00F6               	movwf	___lmul@multiplicand+1
 13928  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 13929  14A8  00F5               	movwf	___lmul@multiplicand
 13930  14A9  31B4  24CC  3192   	fcall	___lmul
 13931  14AC  0874               	movf	?___lmul+3,w
 13932  14AD  0020               	movlb	0	; select bank0
 13933  14AE  00AB               	movwf	___aldiv@dividend+3
 13934  14AF  0873               	movf	?___lmul+2,w
 13935  14B0  00AA               	movwf	___aldiv@dividend+2
 13936  14B1  0872               	movf	?___lmul+1,w
 13937  14B2  00A9               	movwf	___aldiv@dividend+1
 13938  14B3  0871               	movf	?___lmul,w
 13939  14B4  00A8               	movwf	___aldiv@dividend
 13940  14B5  31AA  2267  3192   	fcall	___aldiv
 13941  14B8  0022               	movlb	2	; select bank2
 13942  14B9  086C               	movf	_adcOffset^(0+256),w
 13943  14BA  0020               	movlb	0	; select bank0
 13944  14BB  0724               	addwf	?___aldiv,w
 13945  14BC  0023               	movlb	3	; select bank3
 13946  14BD  00BA               	movwf	(_cellVoltages^(0+384)+6)
 13947  14BE  0022               	movlb	2	; select bank2
 13948  14BF  086D               	movf	(_adcOffset+1)^(0+256),w
 13949  14C0  0020               	movlb	0	; select bank0
 13950  14C1  3D25               	addwfc	?___aldiv+1,w
 13951  14C2  0023               	movlb	3	; select bank3
 13952  14C3  00BB               	movwf	((_cellVoltages+1)^(0+384)+6)
 13953                           
 13954                           ;BQ76920.c: 254:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13955  14C4  3018               	movlw	24
 13956  14C5  00F5               	movwf	readRegister@slaveAddress
 13957  14C6  3000               	movlw	0
 13958  14C7  00F6               	movwf	readRegister@slaveAddress+1
 13959  14C8  3014               	movlw	20
 13960  14C9  00F7               	movwf	readRegister@regAddress
 13961  14CA  3000               	movlw	0
 13962  14CB  00F8               	movwf	readRegister@regAddress+1
 13963  14CC  31B5  2565  3192   	fcall	_readRegister
 13964  14CF  303F               	movlw	63
 13965  14D0  0575               	andwf	?_readRegister,w
 13966  14D1  0021               	movlb	1	; select bank1
 13967  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 13968  14D3  3000               	movlw	0
 13969  14D4  0576               	andwf	?_readRegister+1,w
 13970  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13971  14D6  0831               	movf	??_updateVoltages^(0+128),w
 13972  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13973  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 13974  14D9  3018               	movlw	24
 13975  14DA  00F5               	movwf	readRegister@slaveAddress
 13976  14DB  3000               	movlw	0
 13977  14DC  00F6               	movwf	readRegister@slaveAddress+1
 13978  14DD  3015               	movlw	21
 13979  14DE  00F7               	movwf	readRegister@regAddress
 13980  14DF  3000               	movlw	0
 13981  14E0  00F8               	movwf	readRegister@regAddress+1
 13982  14E1  31B5  2565  3192   	fcall	_readRegister
 13983  14E4  0875               	movf	?_readRegister,w
 13984  14E5  0021               	movlb	1	; select bank1
 13985  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 13986  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13987  14E8  0876               	movf	?_readRegister+1,w
 13988  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13989  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13990  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13991  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13992  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13993  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13994  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13995                           
 13996                           ;BQ76920.c: 255:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13997  14F0  3000               	movlw	0
 13998  14F1  0020               	movlb	0	; select bank0
 13999  14F2  00A7               	movwf	___aldiv@divisor+3
 14000  14F3  3000               	movlw	0
 14001  14F4  00A6               	movwf	___aldiv@divisor+2
 14002  14F5  3003               	movlw	3
 14003  14F6  00A5               	movwf	___aldiv@divisor+1
 14004  14F7  30E8               	movlw	232
 14005  14F8  00A4               	movwf	___aldiv@divisor
 14006  14F9  0022               	movlb	2	; select bank2
 14007  14FA  086E               	movf	_adcGain^(0+256),w
 14008  14FB  00F1               	movwf	___lmul@multiplier
 14009  14FC  086F               	movf	(_adcGain+1)^(0+256),w
 14010  14FD  00F2               	movwf	___lmul@multiplier+1
 14011  14FE  0D89               	rlf	9,f
 14012  14FF  3B89               	subwfb	9,f
 14013  1500  0989               	comf	9,f
 14014  1501  00F3               	movwf	___lmul@multiplier+2
 14015  1502  00F4               	movwf	___lmul@multiplier+3
 14016  1503  0021               	movlb	1	; select bank1
 14017  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14018  1505  00F8               	movwf	___lmul@multiplicand+3
 14019  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14020  1507  00F7               	movwf	___lmul@multiplicand+2
 14021  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14022  1509  00F6               	movwf	___lmul@multiplicand+1
 14023  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14024  150B  00F5               	movwf	___lmul@multiplicand
 14025  150C  31B4  24CC  3192   	fcall	___lmul
 14026  150F  0874               	movf	?___lmul+3,w
 14027  1510  0020               	movlb	0	; select bank0
 14028  1511  00AB               	movwf	___aldiv@dividend+3
 14029  1512  0873               	movf	?___lmul+2,w
 14030  1513  00AA               	movwf	___aldiv@dividend+2
 14031  1514  0872               	movf	?___lmul+1,w
 14032  1515  00A9               	movwf	___aldiv@dividend+1
 14033  1516  0871               	movf	?___lmul,w
 14034  1517  00A8               	movwf	___aldiv@dividend
 14035  1518  31AA  2267         	fcall	___aldiv
 14036  151A  0022               	movlb	2	; select bank2
 14037  151B  086C               	movf	_adcOffset^(0+256),w
 14038  151C  0020               	movlb	0	; select bank0
 14039  151D  0724               	addwf	?___aldiv,w
 14040  151E  0023               	movlb	3	; select bank3
 14041  151F  00BC               	movwf	(_cellVoltages^(0+384)+8)
 14042  1520  0022               	movlb	2	; select bank2
 14043  1521  086D               	movf	(_adcOffset+1)^(0+256),w
 14044  1522  0020               	movlb	0	; select bank0
 14045  1523  3D25               	addwfc	?___aldiv+1,w
 14046  1524  0023               	movlb	3	; select bank3
 14047  1525  00BD               	movwf	((_cellVoltages+1)^(0+384)+8)
 14048  1526  0008               	return
 14049  1527                     __end_of_updateVoltages:	
 14050                           
 14051                           	psect	text48
 14052  34CC                     __ptext48:	
 14053 ;; *************** function ___lmul *****************
 14054 ;; Defined at:
 14055 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14056 ;; Parameters:    Size  Location     Type
 14057 ;;  multiplier      4    1[COMMON] unsigned long 
 14058 ;;  multiplicand    4    5[COMMON] unsigned long 
 14059 ;; Auto vars:     Size  Location     Type
 14060 ;;  product         4    0[BANK0 ] unsigned long 
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  4    1[COMMON] unsigned long 
 14063 ;; Registers used:
 14064 ;;		wreg, status,2, status,0
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14070 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14073 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14074 ;;Total ram usage:       12 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; Hardware stack levels required when called:    1
 14077 ;; This function calls:
 14078 ;;		Nothing
 14079 ;; This function is called by:
 14080 ;;		_setCellUndervoltageProtection
 14081 ;;		_setCellOvervoltageProtection
 14082 ;;		_updateVoltages
 14083 ;; This function uses a non-reentrant model
 14084 ;;
 14085                           
 14086                           
 14087                           ;psect for function ___lmul
 14088  34CC                     ___lmul:	
 14089                           
 14090                           ;incstack = 0
 14091                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14092  34CC  3000               	movlw	0
 14093  34CD  0020               	movlb	0	; select bank0
 14094  34CE  00A3               	movwf	___lmul@product+3
 14095  34CF  3000               	movlw	0
 14096  34D0  00A2               	movwf	___lmul@product+2
 14097  34D1  3000               	movlw	0
 14098  34D2  00A1               	movwf	___lmul@product+1
 14099  34D3  3000               	movlw	0
 14100  34D4  00A0               	movwf	___lmul@product
 14101  34D5                     l7173:	
 14102  34D5  1C71               	btfss	___lmul@multiplier,0
 14103  34D6  2CE0               	goto	l7177
 14104  34D7  0875               	movf	___lmul@multiplicand,w
 14105  34D8  0020               	movlb	0	; select bank0
 14106  34D9  07A0               	addwf	___lmul@product,f
 14107  34DA  0876               	movf	___lmul@multiplicand+1,w
 14108  34DB  3DA1               	addwfc	___lmul@product+1,f
 14109  34DC  0877               	movf	___lmul@multiplicand+2,w
 14110  34DD  3DA2               	addwfc	___lmul@product+2,f
 14111  34DE  0878               	movf	___lmul@multiplicand+3,w
 14112  34DF  3DA3               	addwfc	___lmul@product+3,f
 14113  34E0                     l7177:	
 14114  34E0  3001               	movlw	1
 14115  34E1                     u9005:	
 14116  34E1  35F5               	lslf	___lmul@multiplicand,f
 14117  34E2  0DF6               	rlf	___lmul@multiplicand+1,f
 14118  34E3  0DF7               	rlf	___lmul@multiplicand+2,f
 14119  34E4  0DF8               	rlf	___lmul@multiplicand+3,f
 14120  34E5  0B89               	decfsz	9,f
 14121  34E6  2CE1               	goto	u9005
 14122  34E7  3001               	movlw	1
 14123  34E8                     u9015:	
 14124  34E8  36F4               	lsrf	___lmul@multiplier+3,f
 14125  34E9  0CF3               	rrf	___lmul@multiplier+2,f
 14126  34EA  0CF2               	rrf	___lmul@multiplier+1,f
 14127  34EB  0CF1               	rrf	___lmul@multiplier,f
 14128  34EC  0B89               	decfsz	9,f
 14129  34ED  2CE8               	goto	u9015
 14130  34EE  0874               	movf	___lmul@multiplier+3,w
 14131  34EF  0473               	iorwf	___lmul@multiplier+2,w
 14132  34F0  0472               	iorwf	___lmul@multiplier+1,w
 14133  34F1  0471               	iorwf	___lmul@multiplier,w
 14134  34F2  1D03               	skipz
 14135  34F3  2CD5               	goto	l7173
 14136  34F4  0020               	movlb	0	; select bank0
 14137  34F5  0823               	movf	___lmul@product+3,w
 14138  34F6  00F4               	movwf	?___lmul+3
 14139  34F7  0822               	movf	___lmul@product+2,w
 14140  34F8  00F3               	movwf	?___lmul+2
 14141  34F9  0821               	movf	___lmul@product+1,w
 14142  34FA  00F2               	movwf	?___lmul+1
 14143  34FB  0820               	movf	___lmul@product,w
 14144  34FC  00F1               	movwf	?___lmul
 14145  34FD  0008               	return
 14146  34FE                     __end_of___lmul:	
 14147                           
 14148                           	psect	text49
 14149  1527                     __ptext49:	
 14150 ;; *************** function _updateTemperatures *****************
 14151 ;; Defined at:
 14152 ;;		line 262 in file "BQ76920.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;		None
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  rts             4   75[BANK1 ] unsigned long 
 14157 ;;  tmp             4   67[BANK1 ] float 
 14158 ;;  vtsx            2   73[BANK1 ] int 
 14159 ;;  adcVal          2   71[BANK1 ] int 
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1    wreg      void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2, status,0, pclath, cstack
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14170 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14171 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14172 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14173 ;;Total ram usage:       59 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    4
 14176 ;; This function calls:
 14177 ;;		___fladd
 14178 ;;		___fldiv
 14179 ;;		___flmul
 14180 ;;		___flsub
 14181 ;;		___fltol
 14182 ;;		___xxtofl
 14183 ;;		_logf
 14184 ;;		_readRegister
 14185 ;; This function is called by:
 14186 ;;		_AFE_UPDATE
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           
 14191                           ;psect for function _updateTemperatures
 14192  1527                     _updateTemperatures:	
 14193                           
 14194                           ;BQ76920.c: 266:      unsigned long rts = 0;
 14195                           
 14196                           ;incstack = 0
 14197                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14198  1527  3000               	movlw	0
 14199  1528  0021               	movlb	1	; select bank1
 14200  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14201  152A  3000               	movlw	0
 14202  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14203  152C  3000               	movlw	0
 14204  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14205  152E  3000               	movlw	0
 14206  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14207                           
 14208                           ;BQ76920.c: 268:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14209  1530  3018               	movlw	24
 14210  1531  00F5               	movwf	readRegister@slaveAddress
 14211  1532  3000               	movlw	0
 14212  1533  00F6               	movwf	readRegister@slaveAddress+1
 14213  1534  302C               	movlw	44
 14214  1535  00F7               	movwf	readRegister@regAddress
 14215  1536  3000               	movlw	0
 14216  1537  00F8               	movwf	readRegister@regAddress+1
 14217  1538  31B5  2565  3195   	fcall	_readRegister
 14218  153B  303F               	movlw	63
 14219  153C  0575               	andwf	?_readRegister,w
 14220  153D  0021               	movlb	1	; select bank1
 14221  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14222  153F  3000               	movlw	0
 14223  1540  0576               	andwf	?_readRegister+1,w
 14224  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14225  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14226  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14227  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14228  1545  3018               	movlw	24
 14229  1546  00F5               	movwf	readRegister@slaveAddress
 14230  1547  3000               	movlw	0
 14231  1548  00F6               	movwf	readRegister@slaveAddress+1
 14232  1549  302D               	movlw	45
 14233  154A  00F7               	movwf	readRegister@regAddress
 14234  154B  3000               	movlw	0
 14235  154C  00F8               	movwf	readRegister@regAddress+1
 14236  154D  31B5  2565  3195   	fcall	_readRegister
 14237  1550  0875               	movf	?_readRegister,w
 14238  1551  0021               	movlb	1	; select bank1
 14239  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14240  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14241  1554  0876               	movf	?_readRegister+1,w
 14242  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14243  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14244                           
 14245                           ;BQ76920.c: 269:      vtsx = adcVal * 0.382;
 14246  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14247  1558  00F1               	movwf	___xxtofl@val
 14248  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14249  155A  00F2               	movwf	___xxtofl@val+1
 14250  155B  0D89               	rlf	9,f
 14251  155C  3B89               	subwfb	9,f
 14252  155D  0989               	comf	9,f
 14253  155E  00F3               	movwf	___xxtofl@val+2
 14254  155F  00F4               	movwf	___xxtofl@val+3
 14255  1560  3001               	movlw	1
 14256  1561  31AA  22E9  3195   	fcall	___xxtofl
 14257  1564  0874               	movf	?___xxtofl+3,w
 14258  1565  0020               	movlb	0	; select bank0
 14259  1566  00AD               	movwf	___flmul@a+3
 14260  1567  0873               	movf	?___xxtofl+2,w
 14261  1568  00AC               	movwf	___flmul@a+2
 14262  1569  0872               	movf	?___xxtofl+1,w
 14263  156A  00AB               	movwf	___flmul@a+1
 14264  156B  0871               	movf	?___xxtofl,w
 14265  156C  00AA               	movwf	___flmul@a
 14266  156D  303E               	movlw	62
 14267  156E  00A9               	movwf	___flmul@b+3
 14268  156F  30C3               	movlw	195
 14269  1570  00A8               	movwf	___flmul@b+2
 14270  1571  3095               	movlw	149
 14271  1572  00A7               	movwf	___flmul@b+1
 14272  1573  3081               	movlw	129
 14273  1574  00A6               	movwf	___flmul@b
 14274  1575  3190  2023  3195   	fcall	___flmul
 14275  1578  0020               	movlb	0	; select bank0
 14276  1579  0829               	movf	?___flmul+3,w
 14277  157A  0021               	movlb	1	; select bank1
 14278  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14279  157C  0020               	movlb	0	; select bank0
 14280  157D  0828               	movf	?___flmul+2,w
 14281  157E  0021               	movlb	1	; select bank1
 14282  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14283  1580  0020               	movlb	0	; select bank0
 14284  1581  0827               	movf	?___flmul+1,w
 14285  1582  0021               	movlb	1	; select bank1
 14286  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14287  1584  0020               	movlb	0	; select bank0
 14288  1585  0826               	movf	?___flmul,w
 14289  1586  0021               	movlb	1	; select bank1
 14290  1587  00A8               	movwf	___fltol@f1^(0+128)
 14291  1588  31B7  279A  3195   	fcall	___fltol
 14292  158B  0021               	movlb	1	; select bank1
 14293  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14294  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14295  158E  0828               	movf	?___fltol^(0+128),w
 14296  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14297                           
 14298                           ;BQ76920.c: 270:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14299  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14300  1591  00F1               	movwf	___xxtofl@val
 14301  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14302  1593  00F2               	movwf	___xxtofl@val+1
 14303  1594  0D89               	rlf	9,f
 14304  1595  3B89               	subwfb	9,f
 14305  1596  0989               	comf	9,f
 14306  1597  00F3               	movwf	___xxtofl@val+2
 14307  1598  00F4               	movwf	___xxtofl@val+3
 14308  1599  3001               	movlw	1
 14309  159A  31AA  22E9  3195   	fcall	___xxtofl
 14310  159D  0874               	movf	?___xxtofl+3,w
 14311  159E  0020               	movlb	0	; select bank0
 14312  159F  00AD               	movwf	___flmul@a+3
 14313  15A0  0873               	movf	?___xxtofl+2,w
 14314  15A1  00AC               	movwf	___flmul@a+2
 14315  15A2  0872               	movf	?___xxtofl+1,w
 14316  15A3  00AB               	movwf	___flmul@a+1
 14317  15A4  0871               	movf	?___xxtofl,w
 14318  15A5  00AA               	movwf	___flmul@a
 14319  15A6  3046               	movlw	70
 14320  15A7  00A9               	movwf	___flmul@b+3
 14321  15A8  301C               	movlw	28
 14322  15A9  00A8               	movwf	___flmul@b+2
 14323  15AA  3040               	movlw	64
 14324  15AB  00A7               	movwf	___flmul@b+1
 14325  15AC  3000               	movlw	0
 14326  15AD  00A6               	movwf	___flmul@b
 14327  15AE  3190  2023  3195   	fcall	___flmul
 14328  15B1  0020               	movlb	0	; select bank0
 14329  15B2  0829               	movf	?___flmul+3,w
 14330  15B3  00C7               	movwf	___fldiv@b+3
 14331  15B4  0828               	movf	?___flmul+2,w
 14332  15B5  00C6               	movwf	___fldiv@b+2
 14333  15B6  0827               	movf	?___flmul+1,w
 14334  15B7  00C5               	movwf	___fldiv@b+1
 14335  15B8  0826               	movf	?___flmul,w
 14336  15B9  00C4               	movwf	___fldiv@b
 14337  15BA  3045               	movlw	69
 14338  15BB  0021               	movlb	1	; select bank1
 14339  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14340  15BD  304E               	movlw	78
 14341  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14342  15BF  3040               	movlw	64
 14343  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14344  15C1  3000               	movlw	0
 14345  15C2  00A4               	movwf	___flsub@b^(0+128)
 14346  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14347  15C4  00F1               	movwf	___xxtofl@val
 14348  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14349  15C6  00F2               	movwf	___xxtofl@val+1
 14350  15C7  0D89               	rlf	9,f
 14351  15C8  3B89               	subwfb	9,f
 14352  15C9  0989               	comf	9,f
 14353  15CA  00F3               	movwf	___xxtofl@val+2
 14354  15CB  00F4               	movwf	___xxtofl@val+3
 14355  15CC  3001               	movlw	1
 14356  15CD  31AA  22E9  3195   	fcall	___xxtofl
 14357  15D0  0874               	movf	?___xxtofl+3,w
 14358  15D1  0021               	movlb	1	; select bank1
 14359  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14360  15D3  0873               	movf	?___xxtofl+2,w
 14361  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14362  15D5  0872               	movf	?___xxtofl+1,w
 14363  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14364  15D7  0871               	movf	?___xxtofl,w
 14365  15D8  00A0               	movwf	___flsub@a^(0+128)
 14366  15D9  31B5  2530  3195   	fcall	___flsub
 14367  15DC  0021               	movlb	1	; select bank1
 14368  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14369  15DE  0020               	movlb	0	; select bank0
 14370  15DF  00C3               	movwf	___fldiv@a+3
 14371  15E0  0021               	movlb	1	; select bank1
 14372  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14373  15E2  0020               	movlb	0	; select bank0
 14374  15E3  00C2               	movwf	___fldiv@a+2
 14375  15E4  0021               	movlb	1	; select bank1
 14376  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14377  15E6  0020               	movlb	0	; select bank0
 14378  15E7  00C1               	movwf	___fldiv@a+1
 14379  15E8  0021               	movlb	1	; select bank1
 14380  15E9  0820               	movf	?___flsub^(0+128),w
 14381  15EA  0020               	movlb	0	; select bank0
 14382  15EB  00C0               	movwf	___fldiv@a
 14383  15EC  319C  24E2  3195   	fcall	___fldiv
 14384  15EF  0020               	movlb	0	; select bank0
 14385  15F0  0843               	movf	?___fldiv+3,w
 14386  15F1  0021               	movlb	1	; select bank1
 14387  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14388  15F3  0020               	movlb	0	; select bank0
 14389  15F4  0842               	movf	?___fldiv+2,w
 14390  15F5  0021               	movlb	1	; select bank1
 14391  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14392  15F7  0020               	movlb	0	; select bank0
 14393  15F8  0841               	movf	?___fldiv+1,w
 14394  15F9  0021               	movlb	1	; select bank1
 14395  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14396  15FB  0020               	movlb	0	; select bank0
 14397  15FC  0840               	movf	?___fldiv,w
 14398  15FD  0021               	movlb	1	; select bank1
 14399  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14400  15FF  31B7  279A  3195   	fcall	___fltol
 14401  1602  0021               	movlb	1	; select bank1
 14402  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14403  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14404  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14405  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14406  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14407  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14408  1609  0828               	movf	?___fltol^(0+128),w
 14409  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14410                           
 14411                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14412  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14413  160C  00F4               	movwf	___xxtofl@val+3
 14414  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14415  160E  00F3               	movwf	___xxtofl@val+2
 14416  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14417  1610  00F2               	movwf	___xxtofl@val+1
 14418  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14419  1612  00F1               	movwf	___xxtofl@val
 14420  1613  3000               	movlw	0
 14421  1614  31AA  22E9  3195   	fcall	___xxtofl
 14422  1617  0874               	movf	?___xxtofl+3,w
 14423  1618  0021               	movlb	1	; select bank1
 14424  1619  00BA               	movwf	(_updateTemperatures$2089+3)^(0+128)
 14425  161A  0873               	movf	?___xxtofl+2,w
 14426  161B  00B9               	movwf	(_updateTemperatures$2089+2)^(0+128)
 14427  161C  0872               	movf	?___xxtofl+1,w
 14428  161D  00B8               	movwf	(_updateTemperatures$2089+1)^(0+128)
 14429  161E  0871               	movf	?___xxtofl,w
 14430  161F  00B7               	movwf	_updateTemperatures$2089^(0+128)
 14431                           
 14432                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14433  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14434  1621  00F4               	movwf	___xxtofl@val+3
 14435  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14436  1623  00F3               	movwf	___xxtofl@val+2
 14437  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14438  1625  00F2               	movwf	___xxtofl@val+1
 14439  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14440  1627  00F1               	movwf	___xxtofl@val
 14441  1628  3000               	movlw	0
 14442  1629  31AA  22E9  3195   	fcall	___xxtofl
 14443  162C  0874               	movf	?___xxtofl+3,w
 14444  162D  0021               	movlb	1	; select bank1
 14445  162E  00BE               	movwf	(_updateTemperatures$2090+3)^(0+128)
 14446  162F  0873               	movf	?___xxtofl+2,w
 14447  1630  00BD               	movwf	(_updateTemperatures$2090+2)^(0+128)
 14448  1631  0872               	movf	?___xxtofl+1,w
 14449  1632  00BC               	movwf	(_updateTemperatures$2090+1)^(0+128)
 14450  1633  0871               	movf	?___xxtofl,w
 14451  1634  00BB               	movwf	_updateTemperatures$2090^(0+128)
 14452                           
 14453                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14454  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14455  1636  00F4               	movwf	___xxtofl@val+3
 14456  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14457  1638  00F3               	movwf	___xxtofl@val+2
 14458  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14459  163A  00F2               	movwf	___xxtofl@val+1
 14460  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14461  163C  00F1               	movwf	___xxtofl@val
 14462  163D  3000               	movlw	0
 14463  163E  31AA  22E9  3195   	fcall	___xxtofl
 14464  1641  0874               	movf	?___xxtofl+3,w
 14465  1642  0021               	movlb	1	; select bank1
 14466  1643  00C2               	movwf	(_updateTemperatures$2091+3)^(0+128)
 14467  1644  0873               	movf	?___xxtofl+2,w
 14468  1645  00C1               	movwf	(_updateTemperatures$2091+2)^(0+128)
 14469  1646  0872               	movf	?___xxtofl+1,w
 14470  1647  00C0               	movwf	(_updateTemperatures$2091+1)^(0+128)
 14471  1648  0871               	movf	?___xxtofl,w
 14472  1649  00BF               	movwf	_updateTemperatures$2091^(0+128)
 14473                           
 14474                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14475  164A  083E               	movf	(_updateTemperatures$2090+3)^(0+128),w
 14476  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14477  164C  083D               	movf	(_updateTemperatures$2090+2)^(0+128),w
 14478  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14479  164E  083C               	movf	(_updateTemperatures$2090+1)^(0+128),w
 14480  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14481  1650  083B               	movf	_updateTemperatures$2090^(0+128),w
 14482  1651  00A8               	movwf	logf@x^(0+128)
 14483  1652  3180  2074  3195   	fcall	_logf
 14484  1655  0021               	movlb	1	; select bank1
 14485  1656  082B               	movf	(?_logf+3)^(0+128),w
 14486  1657  00C6               	movwf	(_updateTemperatures$2092+3)^(0+128)
 14487  1658  082A               	movf	(?_logf+2)^(0+128),w
 14488  1659  00C5               	movwf	(_updateTemperatures$2092+2)^(0+128)
 14489  165A  0829               	movf	(?_logf+1)^(0+128),w
 14490  165B  00C4               	movwf	(_updateTemperatures$2092+1)^(0+128)
 14491  165C  0828               	movf	?_logf^(0+128),w
 14492  165D  00C3               	movwf	_updateTemperatures$2092^(0+128)
 14493                           
 14494                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14495  165E  0842               	movf	(_updateTemperatures$2091+3)^(0+128),w
 14496  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14497  1660  0841               	movf	(_updateTemperatures$2091+2)^(0+128),w
 14498  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14499  1662  0840               	movf	(_updateTemperatures$2091+1)^(0+128),w
 14500  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14501  1664  083F               	movf	_updateTemperatures$2091^(0+128),w
 14502  1665  00A8               	movwf	logf@x^(0+128)
 14503  1666  3180  2074  3195   	fcall	_logf
 14504  1669  0021               	movlb	1	; select bank1
 14505  166A  082B               	movf	(?_logf+3)^(0+128),w
 14506  166B  00CA               	movwf	(_updateTemperatures$2093+3)^(0+128)
 14507  166C  082A               	movf	(?_logf+2)^(0+128),w
 14508  166D  00C9               	movwf	(_updateTemperatures$2093+2)^(0+128)
 14509  166E  0829               	movf	(?_logf+1)^(0+128),w
 14510  166F  00C8               	movwf	(_updateTemperatures$2093+1)^(0+128)
 14511  1670  0828               	movf	?_logf^(0+128),w
 14512  1671  00C7               	movwf	_updateTemperatures$2093^(0+128)
 14513                           
 14514                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14515  1672  083A               	movf	(_updateTemperatures$2089+3)^(0+128),w
 14516  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14517  1674  0839               	movf	(_updateTemperatures$2089+2)^(0+128),w
 14518  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14519  1676  0838               	movf	(_updateTemperatures$2089+1)^(0+128),w
 14520  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14521  1678  0837               	movf	_updateTemperatures$2089^(0+128),w
 14522  1679  00A8               	movwf	logf@x^(0+128)
 14523  167A  3180  2074  3195   	fcall	_logf
 14524  167D  0021               	movlb	1	; select bank1
 14525  167E  082B               	movf	(?_logf+3)^(0+128),w
 14526  167F  00CE               	movwf	(_updateTemperatures$2094+3)^(0+128)
 14527  1680  082A               	movf	(?_logf+2)^(0+128),w
 14528  1681  00CD               	movwf	(_updateTemperatures$2094+2)^(0+128)
 14529  1682  0829               	movf	(?_logf+1)^(0+128),w
 14530  1683  00CC               	movwf	(_updateTemperatures$2094+1)^(0+128)
 14531  1684  0828               	movf	?_logf^(0+128),w
 14532  1685  00CB               	movwf	_updateTemperatures$2094^(0+128)
 14533                           
 14534                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14535  1686  0846               	movf	(_updateTemperatures$2092+3)^(0+128),w
 14536  1687  0020               	movlb	0	; select bank0
 14537  1688  00A9               	movwf	___flmul@b+3
 14538  1689  0021               	movlb	1	; select bank1
 14539  168A  0845               	movf	(_updateTemperatures$2092+2)^(0+128),w
 14540  168B  0020               	movlb	0	; select bank0
 14541  168C  00A8               	movwf	___flmul@b+2
 14542  168D  0021               	movlb	1	; select bank1
 14543  168E  0844               	movf	(_updateTemperatures$2092+1)^(0+128),w
 14544  168F  0020               	movlb	0	; select bank0
 14545  1690  00A7               	movwf	___flmul@b+1
 14546  1691  0021               	movlb	1	; select bank1
 14547  1692  0843               	movf	_updateTemperatures$2092^(0+128),w
 14548  1693  0020               	movlb	0	; select bank0
 14549  1694  00A6               	movwf	___flmul@b
 14550  1695  0021               	movlb	1	; select bank1
 14551  1696  084A               	movf	(_updateTemperatures$2093+3)^(0+128),w
 14552  1697  0020               	movlb	0	; select bank0
 14553  1698  00AD               	movwf	___flmul@a+3
 14554  1699  0021               	movlb	1	; select bank1
 14555  169A  0849               	movf	(_updateTemperatures$2093+2)^(0+128),w
 14556  169B  0020               	movlb	0	; select bank0
 14557  169C  00AC               	movwf	___flmul@a+2
 14558  169D  0021               	movlb	1	; select bank1
 14559  169E  0848               	movf	(_updateTemperatures$2093+1)^(0+128),w
 14560  169F  0020               	movlb	0	; select bank0
 14561  16A0  00AB               	movwf	___flmul@a+1
 14562  16A1  0021               	movlb	1	; select bank1
 14563  16A2  0847               	movf	_updateTemperatures$2093^(0+128),w
 14564  16A3  0020               	movlb	0	; select bank0
 14565  16A4  00AA               	movwf	___flmul@a
 14566  16A5  3190  2023  3195   	fcall	___flmul
 14567  16A8  0020               	movlb	0	; select bank0
 14568  16A9  0829               	movf	?___flmul+3,w
 14569  16AA  0021               	movlb	1	; select bank1
 14570  16AB  00D2               	movwf	(_updateTemperatures$2095+3)^(0+128)
 14571  16AC  0020               	movlb	0	; select bank0
 14572  16AD  0828               	movf	?___flmul+2,w
 14573  16AE  0021               	movlb	1	; select bank1
 14574  16AF  00D1               	movwf	(_updateTemperatures$2095+2)^(0+128)
 14575  16B0  0020               	movlb	0	; select bank0
 14576  16B1  0827               	movf	?___flmul+1,w
 14577  16B2  0021               	movlb	1	; select bank1
 14578  16B3  00D0               	movwf	(_updateTemperatures$2095+1)^(0+128)
 14579  16B4  0020               	movlb	0	; select bank0
 14580  16B5  0826               	movf	?___flmul,w
 14581  16B6  0021               	movlb	1	; select bank1
 14582  16B7  00CF               	movwf	_updateTemperatures$2095^(0+128)
 14583                           
 14584                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14585  16B8  084E               	movf	(_updateTemperatures$2094+3)^(0+128),w
 14586  16B9  0020               	movlb	0	; select bank0
 14587  16BA  00A9               	movwf	___flmul@b+3
 14588  16BB  0021               	movlb	1	; select bank1
 14589  16BC  084D               	movf	(_updateTemperatures$2094+2)^(0+128),w
 14590  16BD  0020               	movlb	0	; select bank0
 14591  16BE  00A8               	movwf	___flmul@b+2
 14592  16BF  0021               	movlb	1	; select bank1
 14593  16C0  084C               	movf	(_updateTemperatures$2094+1)^(0+128),w
 14594  16C1  0020               	movlb	0	; select bank0
 14595  16C2  00A7               	movwf	___flmul@b+1
 14596  16C3  0021               	movlb	1	; select bank1
 14597  16C4  084B               	movf	_updateTemperatures$2094^(0+128),w
 14598  16C5  0020               	movlb	0	; select bank0
 14599  16C6  00A6               	movwf	___flmul@b
 14600  16C7  0021               	movlb	1	; select bank1
 14601  16C8  0852               	movf	(_updateTemperatures$2095+3)^(0+128),w
 14602  16C9  0020               	movlb	0	; select bank0
 14603  16CA  00AD               	movwf	___flmul@a+3
 14604  16CB  0021               	movlb	1	; select bank1
 14605  16CC  0851               	movf	(_updateTemperatures$2095+2)^(0+128),w
 14606  16CD  0020               	movlb	0	; select bank0
 14607  16CE  00AC               	movwf	___flmul@a+2
 14608  16CF  0021               	movlb	1	; select bank1
 14609  16D0  0850               	movf	(_updateTemperatures$2095+1)^(0+128),w
 14610  16D1  0020               	movlb	0	; select bank0
 14611  16D2  00AB               	movwf	___flmul@a+1
 14612  16D3  0021               	movlb	1	; select bank1
 14613  16D4  084F               	movf	_updateTemperatures$2095^(0+128),w
 14614  16D5  0020               	movlb	0	; select bank0
 14615  16D6  00AA               	movwf	___flmul@a
 14616  16D7  3190  2023  3195   	fcall	___flmul
 14617  16DA  0020               	movlb	0	; select bank0
 14618  16DB  0829               	movf	?___flmul+3,w
 14619  16DC  0021               	movlb	1	; select bank1
 14620  16DD  00D6               	movwf	(_updateTemperatures$2096+3)^(0+128)
 14621  16DE  0020               	movlb	0	; select bank0
 14622  16DF  0828               	movf	?___flmul+2,w
 14623  16E0  0021               	movlb	1	; select bank1
 14624  16E1  00D5               	movwf	(_updateTemperatures$2096+2)^(0+128)
 14625  16E2  0020               	movlb	0	; select bank0
 14626  16E3  0827               	movf	?___flmul+1,w
 14627  16E4  0021               	movlb	1	; select bank1
 14628  16E5  00D4               	movwf	(_updateTemperatures$2096+1)^(0+128)
 14629  16E6  0020               	movlb	0	; select bank0
 14630  16E7  0826               	movf	?___flmul,w
 14631  16E8  0021               	movlb	1	; select bank1
 14632  16E9  00D3               	movwf	_updateTemperatures$2096^(0+128)
 14633                           
 14634                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14635  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14636  16EB  00F4               	movwf	___xxtofl@val+3
 14637  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14638  16ED  00F3               	movwf	___xxtofl@val+2
 14639  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14640  16EF  00F2               	movwf	___xxtofl@val+1
 14641  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14642  16F1  00F1               	movwf	___xxtofl@val
 14643  16F2  3000               	movlw	0
 14644  16F3  31AA  22E9  3195   	fcall	___xxtofl
 14645  16F6  0874               	movf	?___xxtofl+3,w
 14646  16F7  0021               	movlb	1	; select bank1
 14647  16F8  00DA               	movwf	(_updateTemperatures$2097+3)^(0+128)
 14648  16F9  0873               	movf	?___xxtofl+2,w
 14649  16FA  00D9               	movwf	(_updateTemperatures$2097+2)^(0+128)
 14650  16FB  0872               	movf	?___xxtofl+1,w
 14651  16FC  00D8               	movwf	(_updateTemperatures$2097+1)^(0+128)
 14652  16FD  0871               	movf	?___xxtofl,w
 14653  16FE  00D7               	movwf	_updateTemperatures$2097^(0+128)
 14654                           
 14655                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14656  16FF  085A               	movf	(_updateTemperatures$2097+3)^(0+128),w
 14657  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14658  1701  0859               	movf	(_updateTemperatures$2097+2)^(0+128),w
 14659  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14660  1703  0858               	movf	(_updateTemperatures$2097+1)^(0+128),w
 14661  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14662  1705  0857               	movf	_updateTemperatures$2097^(0+128),w
 14663  1706  00A8               	movwf	logf@x^(0+128)
 14664  1707  3180  2074  3195   	fcall	_logf
 14665  170A  0021               	movlb	1	; select bank1
 14666  170B  082B               	movf	(?_logf+3)^(0+128),w
 14667  170C  00DE               	movwf	(_updateTemperatures$2098+3)^(0+128)
 14668  170D  082A               	movf	(?_logf+2)^(0+128),w
 14669  170E  00DD               	movwf	(_updateTemperatures$2098+2)^(0+128)
 14670  170F  0829               	movf	(?_logf+1)^(0+128),w
 14671  1710  00DC               	movwf	(_updateTemperatures$2098+1)^(0+128)
 14672  1711  0828               	movf	?_logf^(0+128),w
 14673  1712  00DB               	movwf	_updateTemperatures$2098^(0+128)
 14674                           
 14675                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14676  1713  30BC               	movlw	188
 14677  1714  0020               	movlb	0	; select bank0
 14678  1715  00DD               	movwf	___fladd@b+3
 14679  1716  308E               	movlw	142
 14680  1717  00DC               	movwf	___fladd@b+2
 14681  1718  30C5               	movlw	197
 14682  1719  00DB               	movwf	___fladd@b+1
 14683  171A  3072               	movlw	114
 14684  171B  00DA               	movwf	___fladd@b
 14685  171C  303B               	movlw	59
 14686  171D  00A9               	movwf	___flmul@b+3
 14687  171E  304D               	movlw	77
 14688  171F  00A8               	movwf	___flmul@b+2
 14689  1720  3098               	movlw	152
 14690  1721  00A7               	movwf	___flmul@b+1
 14691  1722  3025               	movlw	37
 14692  1723  00A6               	movwf	___flmul@b
 14693  1724  0021               	movlb	1	; select bank1
 14694  1725  085E               	movf	(_updateTemperatures$2098+3)^(0+128),w
 14695  1726  0020               	movlb	0	; select bank0
 14696  1727  00AD               	movwf	___flmul@a+3
 14697  1728  0021               	movlb	1	; select bank1
 14698  1729  085D               	movf	(_updateTemperatures$2098+2)^(0+128),w
 14699  172A  0020               	movlb	0	; select bank0
 14700  172B  00AC               	movwf	___flmul@a+2
 14701  172C  0021               	movlb	1	; select bank1
 14702  172D  085C               	movf	(_updateTemperatures$2098+1)^(0+128),w
 14703  172E  0020               	movlb	0	; select bank0
 14704  172F  00AB               	movwf	___flmul@a+1
 14705  1730  0021               	movlb	1	; select bank1
 14706  1731  085B               	movf	_updateTemperatures$2098^(0+128),w
 14707  1732  0020               	movlb	0	; select bank0
 14708  1733  00AA               	movwf	___flmul@a
 14709  1734  3190  2023  3195   	fcall	___flmul
 14710  1737  0020               	movlb	0	; select bank0
 14711  1738  0829               	movf	?___flmul+3,w
 14712  1739  00E1               	movwf	___fladd@a+3
 14713  173A  0828               	movf	?___flmul+2,w
 14714  173B  00E0               	movwf	___fladd@a+2
 14715  173C  0827               	movf	?___flmul+1,w
 14716  173D  00DF               	movwf	___fladd@a+1
 14717  173E  0826               	movf	?___flmul,w
 14718  173F  00DE               	movwf	___fladd@a
 14719  1740  3185  25FE  3195   	fcall	___fladd
 14720  1743  0020               	movlb	0	; select bank0
 14721  1744  085D               	movf	?___fladd+3,w
 14722  1745  0021               	movlb	1	; select bank1
 14723  1746  00E2               	movwf	(_updateTemperatures$2099+3)^(0+128)
 14724  1747  0020               	movlb	0	; select bank0
 14725  1748  085C               	movf	?___fladd+2,w
 14726  1749  0021               	movlb	1	; select bank1
 14727  174A  00E1               	movwf	(_updateTemperatures$2099+2)^(0+128)
 14728  174B  0020               	movlb	0	; select bank0
 14729  174C  085B               	movf	?___fladd+1,w
 14730  174D  0021               	movlb	1	; select bank1
 14731  174E  00E0               	movwf	(_updateTemperatures$2099+1)^(0+128)
 14732  174F  0020               	movlb	0	; select bank0
 14733  1750  085A               	movf	?___fladd,w
 14734  1751  0021               	movlb	1	; select bank1
 14735  1752  00DF               	movwf	_updateTemperatures$2099^(0+128)
 14736                           
 14737                           ;BQ76920.c: 277:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14738  1753  30B7               	movlw	183
 14739  1754  0020               	movlb	0	; select bank0
 14740  1755  00A9               	movwf	___flmul@b+3
 14741  1756  302E               	movlw	46
 14742  1757  00A8               	movwf	___flmul@b+2
 14743  1758  302F               	movlw	47
 14744  1759  00A7               	movwf	___flmul@b+1
 14745  175A  3045               	movlw	69
 14746  175B  00A6               	movwf	___flmul@b
 14747  175C  0021               	movlb	1	; select bank1
 14748  175D  0856               	movf	(_updateTemperatures$2096+3)^(0+128),w
 14749  175E  0020               	movlb	0	; select bank0
 14750  175F  00AD               	movwf	___flmul@a+3
 14751  1760  0021               	movlb	1	; select bank1
 14752  1761  0855               	movf	(_updateTemperatures$2096+2)^(0+128),w
 14753  1762  0020               	movlb	0	; select bank0
 14754  1763  00AC               	movwf	___flmul@a+2
 14755  1764  0021               	movlb	1	; select bank1
 14756  1765  0854               	movf	(_updateTemperatures$2096+1)^(0+128),w
 14757  1766  0020               	movlb	0	; select bank0
 14758  1767  00AB               	movwf	___flmul@a+1
 14759  1768  0021               	movlb	1	; select bank1
 14760  1769  0853               	movf	_updateTemperatures$2096^(0+128),w
 14761  176A  0020               	movlb	0	; select bank0
 14762  176B  00AA               	movwf	___flmul@a
 14763  176C  3190  2023  3195   	fcall	___flmul
 14764  176F  0020               	movlb	0	; select bank0
 14765  1770  0829               	movf	?___flmul+3,w
 14766  1771  00DD               	movwf	___fladd@b+3
 14767  1772  0828               	movf	?___flmul+2,w
 14768  1773  00DC               	movwf	___fladd@b+2
 14769  1774  0827               	movf	?___flmul+1,w
 14770  1775  00DB               	movwf	___fladd@b+1
 14771  1776  0826               	movf	?___flmul,w
 14772  1777  00DA               	movwf	___fladd@b
 14773  1778  0021               	movlb	1	; select bank1
 14774  1779  0862               	movf	(_updateTemperatures$2099+3)^(0+128),w
 14775  177A  0020               	movlb	0	; select bank0
 14776  177B  00E1               	movwf	___fladd@a+3
 14777  177C  0021               	movlb	1	; select bank1
 14778  177D  0861               	movf	(_updateTemperatures$2099+2)^(0+128),w
 14779  177E  0020               	movlb	0	; select bank0
 14780  177F  00E0               	movwf	___fladd@a+2
 14781  1780  0021               	movlb	1	; select bank1
 14782  1781  0860               	movf	(_updateTemperatures$2099+1)^(0+128),w
 14783  1782  0020               	movlb	0	; select bank0
 14784  1783  00DF               	movwf	___fladd@a+1
 14785  1784  0021               	movlb	1	; select bank1
 14786  1785  085F               	movf	_updateTemperatures$2099^(0+128),w
 14787  1786  0020               	movlb	0	; select bank0
 14788  1787  00DE               	movwf	___fladd@a
 14789  1788  3185  25FE  3195   	fcall	___fladd
 14790  178B  0020               	movlb	0	; select bank0
 14791  178C  085D               	movf	?___fladd+3,w
 14792  178D  00C3               	movwf	___fldiv@a+3
 14793  178E  085C               	movf	?___fladd+2,w
 14794  178F  00C2               	movwf	___fldiv@a+2
 14795  1790  085B               	movf	?___fladd+1,w
 14796  1791  00C1               	movwf	___fldiv@a+1
 14797  1792  085A               	movf	?___fladd,w
 14798  1793  00C0               	movwf	___fldiv@a
 14799  1794  303F               	movlw	63
 14800  1795  00C7               	movwf	___fldiv@b+3
 14801  1796  3080               	movlw	128
 14802  1797  00C6               	movwf	___fldiv@b+2
 14803  1798  3000               	movlw	0
 14804  1799  00C5               	movwf	___fldiv@b+1
 14805  179A  3000               	movlw	0
 14806  179B  00C4               	movwf	___fldiv@b
 14807  179C  319C  24E2  3195   	fcall	___fldiv
 14808  179F  0020               	movlb	0	; select bank0
 14809  17A0  0843               	movf	?___fldiv+3,w
 14810  17A1  0021               	movlb	1	; select bank1
 14811  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14812  17A3  0020               	movlb	0	; select bank0
 14813  17A4  0842               	movf	?___fldiv+2,w
 14814  17A5  0021               	movlb	1	; select bank1
 14815  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14816  17A7  0020               	movlb	0	; select bank0
 14817  17A8  0841               	movf	?___fldiv+1,w
 14818  17A9  0021               	movlb	1	; select bank1
 14819  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14820  17AB  0020               	movlb	0	; select bank0
 14821  17AC  0840               	movf	?___fldiv,w
 14822  17AD  0021               	movlb	1	; select bank1
 14823  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14824                           
 14825                           ;BQ76920.c: 279:      temperatureThermistor = (tmp - 273.15)*100;
 14826  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14827  17B0  0020               	movlb	0	; select bank0
 14828  17B1  00E1               	movwf	___fladd@a+3
 14829  17B2  0021               	movlb	1	; select bank1
 14830  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14831  17B4  0020               	movlb	0	; select bank0
 14832  17B5  00E0               	movwf	___fladd@a+2
 14833  17B6  0021               	movlb	1	; select bank1
 14834  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14835  17B8  0020               	movlb	0	; select bank0
 14836  17B9  00DF               	movwf	___fladd@a+1
 14837  17BA  0021               	movlb	1	; select bank1
 14838  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14839  17BC  0020               	movlb	0	; select bank0
 14840  17BD  00DE               	movwf	___fladd@a
 14841  17BE  30C3               	movlw	195
 14842  17BF  00DD               	movwf	___fladd@b+3
 14843  17C0  3088               	movlw	136
 14844  17C1  00DC               	movwf	___fladd@b+2
 14845  17C2  3093               	movlw	147
 14846  17C3  00DB               	movwf	___fladd@b+1
 14847  17C4  3033               	movlw	51
 14848  17C5  00DA               	movwf	___fladd@b
 14849  17C6  3185  25FE  3195   	fcall	___fladd
 14850  17C9  0020               	movlb	0	; select bank0
 14851  17CA  085D               	movf	?___fladd+3,w
 14852  17CB  00AD               	movwf	___flmul@a+3
 14853  17CC  085C               	movf	?___fladd+2,w
 14854  17CD  00AC               	movwf	___flmul@a+2
 14855  17CE  085B               	movf	?___fladd+1,w
 14856  17CF  00AB               	movwf	___flmul@a+1
 14857  17D0  085A               	movf	?___fladd,w
 14858  17D1  00AA               	movwf	___flmul@a
 14859  17D2  3042               	movlw	66
 14860  17D3  00A9               	movwf	___flmul@b+3
 14861  17D4  30C8               	movlw	200
 14862  17D5  00A8               	movwf	___flmul@b+2
 14863  17D6  3000               	movlw	0
 14864  17D7  00A7               	movwf	___flmul@b+1
 14865  17D8  3000               	movlw	0
 14866  17D9  00A6               	movwf	___flmul@b
 14867  17DA  3190  2023  3195   	fcall	___flmul
 14868  17DD  0020               	movlb	0	; select bank0
 14869  17DE  0829               	movf	?___flmul+3,w
 14870  17DF  0021               	movlb	1	; select bank1
 14871  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14872  17E1  0020               	movlb	0	; select bank0
 14873  17E2  0828               	movf	?___flmul+2,w
 14874  17E3  0021               	movlb	1	; select bank1
 14875  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14876  17E5  0020               	movlb	0	; select bank0
 14877  17E6  0827               	movf	?___flmul+1,w
 14878  17E7  0021               	movlb	1	; select bank1
 14879  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14880  17E9  0020               	movlb	0	; select bank0
 14881  17EA  0826               	movf	?___flmul,w
 14882  17EB  0021               	movlb	1	; select bank1
 14883  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14884  17ED  31B7  279A         	fcall	___fltol
 14885  17EF  0021               	movlb	1	; select bank1
 14886  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14887  17F1  0023               	movlb	3	; select bank3
 14888  17F2  00C9               	movwf	(_temperatureThermistor+3)^(0+384)
 14889  17F3  0021               	movlb	1	; select bank1
 14890  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14891  17F5  0023               	movlb	3	; select bank3
 14892  17F6  00C8               	movwf	(_temperatureThermistor+2)^(0+384)
 14893  17F7  0021               	movlb	1	; select bank1
 14894  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14895  17F9  0023               	movlb	3	; select bank3
 14896  17FA  00C7               	movwf	(_temperatureThermistor+1)^(0+384)
 14897  17FB  0021               	movlb	1	; select bank1
 14898  17FC  0828               	movf	?___fltol^(0+128),w
 14899  17FD  0023               	movlb	3	; select bank3
 14900  17FE  00C6               	movwf	_temperatureThermistor^(0+384)
 14901  17FF  0008               	return
 14902  1800                     __end_of_updateTemperatures:	
 14903                           
 14904                           	psect	text50
 14905  0074                     __ptext50:	
 14906 ;; *************** function _logf *****************
 14907 ;; Defined at:
 14908 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  x               4    8[BANK1 ] float 
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;  ix              4   62[BANK2 ] unsigned long 
 14913 ;;  f               4   58[BANK2 ] float 
 14914 ;;  u               4   54[BANK2 ] struct .
 14915 ;;  w               4   46[BANK2 ] float 
 14916 ;;  z               4   42[BANK2 ] float 
 14917 ;;  s               4   38[BANK2 ] float 
 14918 ;;  dk              4   34[BANK2 ] float 
 14919 ;;  hfsq            4   30[BANK2 ] float 
 14920 ;;  t2              4    8[BANK2 ] float 
 14921 ;;  t1              4    4[BANK2 ] float 
 14922 ;;  R               4    0[BANK2 ] float 
 14923 ;;  k               2   28[BANK2 ] int 
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  4    8[BANK1 ] float 
 14926 ;; Registers used:
 14927 ;;		wreg, status,2, status,0, pclath, cstack
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14933 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14934 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14935 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14936 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14937 ;;Total ram usage:       78 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    3
 14940 ;; This function calls:
 14941 ;;		___fladd
 14942 ;;		___fldiv
 14943 ;;		___flmul
 14944 ;;		___flsub
 14945 ;;		___xxtofl
 14946 ;; This function is called by:
 14947 ;;		_updateTemperatures
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           
 14952                           ;psect for function _logf
 14953  0074                     _logf:	
 14954                           
 14955                           ;incstack = 0
 14956                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14957  0074  0023               	movlb	3	; select bank3
 14958  0075  0841               	movf	(logf@F469+3)^(0+384),w
 14959  0076  0022               	movlb	2	; select bank2
 14960  0077  00D9               	movwf	(logf@u+3)^(0+256)
 14961  0078  0023               	movlb	3	; select bank3
 14962  0079  0840               	movf	(logf@F469+2)^(0+384),w
 14963  007A  0022               	movlb	2	; select bank2
 14964  007B  00D8               	movwf	(logf@u+2)^(0+256)
 14965  007C  0023               	movlb	3	; select bank3
 14966  007D  083F               	movf	(logf@F469+1)^(0+384),w
 14967  007E  0022               	movlb	2	; select bank2
 14968  007F  00D7               	movwf	(logf@u+1)^(0+256)
 14969  0080  0023               	movlb	3	; select bank3
 14970  0081  083E               	movf	logf@F469^(0+384),w
 14971  0082  0022               	movlb	2	; select bank2
 14972  0083  00D6               	movwf	logf@u^(0+256)
 14973  0084  0021               	movlb	1	; select bank1
 14974  0085  082B               	movf	(logf@x+3)^(0+128),w
 14975  0086  0022               	movlb	2	; select bank2
 14976  0087  00D9               	movwf	(logf@u+3)^(0+256)
 14977  0088  0021               	movlb	1	; select bank1
 14978  0089  082A               	movf	(logf@x+2)^(0+128),w
 14979  008A  0022               	movlb	2	; select bank2
 14980  008B  00D8               	movwf	(logf@u+2)^(0+256)
 14981  008C  0021               	movlb	1	; select bank1
 14982  008D  0829               	movf	(logf@x+1)^(0+128),w
 14983  008E  0022               	movlb	2	; select bank2
 14984  008F  00D7               	movwf	(logf@u+1)^(0+256)
 14985  0090  0021               	movlb	1	; select bank1
 14986  0091  0828               	movf	logf@x^(0+128),w
 14987  0092  0022               	movlb	2	; select bank2
 14988  0093  00D6               	movwf	logf@u^(0+256)
 14989  0094  0859               	movf	(logf@u+3)^(0+256),w
 14990  0095  00E1               	movwf	(logf@ix+3)^(0+256)
 14991  0096  0858               	movf	(logf@u+2)^(0+256),w
 14992  0097  00E0               	movwf	(logf@ix+2)^(0+256)
 14993  0098  0857               	movf	(logf@u+1)^(0+256),w
 14994  0099  00DF               	movwf	(logf@ix+1)^(0+256)
 14995  009A  0856               	movf	logf@u^(0+256),w
 14996  009B  00DE               	movwf	logf@ix^(0+256)
 14997  009C  01BC               	clrf	logf@k^(0+256)
 14998  009D  01BD               	clrf	(logf@k+1)^(0+256)
 14999  009E  0861               	movf	(logf@ix+3)^(0+256),w
 15000  009F  1D03               	btfss	3,2
 15001  00A0  28A5               	goto	l5575
 15002  00A1  3080               	movlw	128
 15003  00A2  0260               	subwf	(logf@ix+2)^(0+256),w
 15004  00A3  1C03               	btfss	3,0
 15005  00A4  28C1               	goto	l5577
 15006  00A5                     l5575:	
 15007  00A5  085E               	movf	logf@ix^(0+256),w
 15008  00A6  0021               	movlb	1	; select bank1
 15009  00A7  00AC               	movwf	??_logf^(0+128)
 15010  00A8  0022               	movlb	2	; select bank2
 15011  00A9  085F               	movf	(logf@ix+1)^(0+256),w
 15012  00AA  0021               	movlb	1	; select bank1
 15013  00AB  00AD               	movwf	(??_logf^(0+128)+1)
 15014  00AC  0022               	movlb	2	; select bank2
 15015  00AD  0860               	movf	(logf@ix+2)^(0+256),w
 15016  00AE  0021               	movlb	1	; select bank1
 15017  00AF  00AE               	movwf	(??_logf^(0+128)+2)
 15018  00B0  0022               	movlb	2	; select bank2
 15019  00B1  0861               	movf	(logf@ix+3)^(0+256),w
 15020  00B2  0021               	movlb	1	; select bank1
 15021  00B3  00AF               	movwf	(??_logf^(0+128)+3)
 15022  00B4  301F               	movlw	31
 15023  00B5                     u6925:	
 15024  00B5  36AF               	lsrf	(??_logf^(0+128)+3),f
 15025  00B6  0CAE               	rrf	(??_logf^(0+128)+2),f
 15026  00B7  0CAD               	rrf	(??_logf^(0+128)+1),f
 15027  00B8  0CAC               	rrf	??_logf^(0+128),f
 15028  00B9  0B89               	decfsz	9,f
 15029  00BA  28B5               	goto	u6925
 15030  00BB  082F               	movf	(??_logf+3)^(0+128),w
 15031  00BC  042E               	iorwf	(??_logf+2)^(0+128),w
 15032  00BD  042D               	iorwf	(??_logf+1)^(0+128),w
 15033  00BE  042C               	iorwf	??_logf^(0+128),w
 15034  00BF  1903               	skipnz
 15035  00C0  29CA               	goto	l5597
 15036  00C1                     l5577:	
 15037  00C1  0022               	movlb	2	; select bank2
 15038  00C2  085E               	movf	logf@ix^(0+256),w
 15039  00C3  0021               	movlb	1	; select bank1
 15040  00C4  00AC               	movwf	??_logf^(0+128)
 15041  00C5  0022               	movlb	2	; select bank2
 15042  00C6  085F               	movf	(logf@ix+1)^(0+256),w
 15043  00C7  0021               	movlb	1	; select bank1
 15044  00C8  00AD               	movwf	(??_logf^(0+128)+1)
 15045  00C9  0022               	movlb	2	; select bank2
 15046  00CA  0860               	movf	(logf@ix+2)^(0+256),w
 15047  00CB  0021               	movlb	1	; select bank1
 15048  00CC  00AE               	movwf	(??_logf^(0+128)+2)
 15049  00CD  0022               	movlb	2	; select bank2
 15050  00CE  0861               	movf	(logf@ix+3)^(0+256),w
 15051  00CF  0021               	movlb	1	; select bank1
 15052  00D0  00AF               	movwf	(??_logf^(0+128)+3)
 15053  00D1  3001               	movlw	1
 15054  00D2                     u6945:	
 15055  00D2  35AC               	lslf	??_logf^(0+128),f
 15056  00D3  0DAD               	rlf	(??_logf^(0+128)+1),f
 15057  00D4  0DAE               	rlf	(??_logf^(0+128)+2),f
 15058  00D5  0DAF               	rlf	(??_logf^(0+128)+3),f
 15059  00D6  0B89               	decfsz	9,f
 15060  00D7  28D2               	goto	u6945
 15061  00D8  082F               	movf	(??_logf+3)^(0+128),w
 15062  00D9  042E               	iorwf	(??_logf+2)^(0+128),w
 15063  00DA  042D               	iorwf	(??_logf+1)^(0+128),w
 15064  00DB  042C               	iorwf	??_logf^(0+128),w
 15065  00DC  1D03               	skipz
 15066  00DD  2924               	goto	l5583
 15067  00DE  082B               	movf	(logf@x+3)^(0+128),w
 15068  00DF  0020               	movlb	0	; select bank0
 15069  00E0  00A9               	movwf	___flmul@b+3
 15070  00E1  0021               	movlb	1	; select bank1
 15071  00E2  082A               	movf	(logf@x+2)^(0+128),w
 15072  00E3  0020               	movlb	0	; select bank0
 15073  00E4  00A8               	movwf	___flmul@b+2
 15074  00E5  0021               	movlb	1	; select bank1
 15075  00E6  0829               	movf	(logf@x+1)^(0+128),w
 15076  00E7  0020               	movlb	0	; select bank0
 15077  00E8  00A7               	movwf	___flmul@b+1
 15078  00E9  0021               	movlb	1	; select bank1
 15079  00EA  0828               	movf	logf@x^(0+128),w
 15080  00EB  0020               	movlb	0	; select bank0
 15081  00EC  00A6               	movwf	___flmul@b
 15082  00ED  0021               	movlb	1	; select bank1
 15083  00EE  082B               	movf	(logf@x+3)^(0+128),w
 15084  00EF  0020               	movlb	0	; select bank0
 15085  00F0  00AD               	movwf	___flmul@a+3
 15086  00F1  0021               	movlb	1	; select bank1
 15087  00F2  082A               	movf	(logf@x+2)^(0+128),w
 15088  00F3  0020               	movlb	0	; select bank0
 15089  00F4  00AC               	movwf	___flmul@a+2
 15090  00F5  0021               	movlb	1	; select bank1
 15091  00F6  0829               	movf	(logf@x+1)^(0+128),w
 15092  00F7  0020               	movlb	0	; select bank0
 15093  00F8  00AB               	movwf	___flmul@a+1
 15094  00F9  0021               	movlb	1	; select bank1
 15095  00FA  0828               	movf	logf@x^(0+128),w
 15096  00FB  0020               	movlb	0	; select bank0
 15097  00FC  00AA               	movwf	___flmul@a
 15098  00FD  3190  2023  3180   	fcall	___flmul
 15099  0100  0020               	movlb	0	; select bank0
 15100  0101  0829               	movf	?___flmul+3,w
 15101  0102  00C3               	movwf	___fldiv@a+3
 15102  0103  0828               	movf	?___flmul+2,w
 15103  0104  00C2               	movwf	___fldiv@a+2
 15104  0105  0827               	movf	?___flmul+1,w
 15105  0106  00C1               	movwf	___fldiv@a+1
 15106  0107  0826               	movf	?___flmul,w
 15107  0108  00C0               	movwf	___fldiv@a
 15108  0109  30BF               	movlw	191
 15109  010A  00C7               	movwf	___fldiv@b+3
 15110  010B  3080               	movlw	128
 15111  010C  00C6               	movwf	___fldiv@b+2
 15112  010D  3000               	movlw	0
 15113  010E  00C5               	movwf	___fldiv@b+1
 15114  010F  3000               	movlw	0
 15115  0110  00C4               	movwf	___fldiv@b
 15116  0111  319C  24E2         	fcall	___fldiv
 15117  0113  0020               	movlb	0	; select bank0
 15118  0114  0843               	movf	?___fldiv+3,w
 15119  0115  0021               	movlb	1	; select bank1
 15120  0116  00AB               	movwf	(?_logf+3)^(0+128)
 15121  0117  0020               	movlb	0	; select bank0
 15122  0118  0842               	movf	?___fldiv+2,w
 15123  0119  0021               	movlb	1	; select bank1
 15124  011A  00AA               	movwf	(?_logf+2)^(0+128)
 15125  011B  0020               	movlb	0	; select bank0
 15126  011C  0841               	movf	?___fldiv+1,w
 15127  011D  0021               	movlb	1	; select bank1
 15128  011E  00A9               	movwf	(?_logf+1)^(0+128)
 15129  011F  0020               	movlb	0	; select bank0
 15130  0120  0840               	movf	?___fldiv,w
 15131  0121  0021               	movlb	1	; select bank1
 15132  0122  00A8               	movwf	?_logf^(0+128)
 15133  0123  0008               	return
 15134  0124                     l5583:	
 15135  0124  0022               	movlb	2	; select bank2
 15136  0125  085E               	movf	logf@ix^(0+256),w
 15137  0126  0021               	movlb	1	; select bank1
 15138  0127  00AC               	movwf	??_logf^(0+128)
 15139  0128  0022               	movlb	2	; select bank2
 15140  0129  085F               	movf	(logf@ix+1)^(0+256),w
 15141  012A  0021               	movlb	1	; select bank1
 15142  012B  00AD               	movwf	(??_logf^(0+128)+1)
 15143  012C  0022               	movlb	2	; select bank2
 15144  012D  0860               	movf	(logf@ix+2)^(0+256),w
 15145  012E  0021               	movlb	1	; select bank1
 15146  012F  00AE               	movwf	(??_logf^(0+128)+2)
 15147  0130  0022               	movlb	2	; select bank2
 15148  0131  0861               	movf	(logf@ix+3)^(0+256),w
 15149  0132  0021               	movlb	1	; select bank1
 15150  0133  00AF               	movwf	(??_logf^(0+128)+3)
 15151  0134  301F               	movlw	31
 15152  0135                     u6965:	
 15153  0135  36AF               	lsrf	(??_logf^(0+128)+3),f
 15154  0136  0CAE               	rrf	(??_logf^(0+128)+2),f
 15155  0137  0CAD               	rrf	(??_logf^(0+128)+1),f
 15156  0138  0CAC               	rrf	??_logf^(0+128),f
 15157  0139  0B89               	decfsz	9,f
 15158  013A  2935               	goto	u6965
 15159  013B  082F               	movf	(??_logf+3)^(0+128),w
 15160  013C  042E               	iorwf	(??_logf+2)^(0+128),w
 15161  013D  042D               	iorwf	(??_logf+1)^(0+128),w
 15162  013E  042C               	iorwf	??_logf^(0+128),w
 15163  013F  1903               	skipnz
 15164  0140  2981               	goto	l5589
 15165  0141  3000               	movlw	0
 15166  0142  0020               	movlb	0	; select bank0
 15167  0143  00C3               	movwf	___fldiv@a+3
 15168  0144  3000               	movlw	0
 15169  0145  00C2               	movwf	___fldiv@a+2
 15170  0146  3000               	movlw	0
 15171  0147  00C1               	movwf	___fldiv@a+1
 15172  0148  3000               	movlw	0
 15173  0149  00C0               	movwf	___fldiv@a
 15174  014A  0021               	movlb	1	; select bank1
 15175  014B  082B               	movf	(logf@x+3)^(0+128),w
 15176  014C  00A3               	movwf	(___flsub@a+3)^(0+128)
 15177  014D  082A               	movf	(logf@x+2)^(0+128),w
 15178  014E  00A2               	movwf	(___flsub@a+2)^(0+128)
 15179  014F  0829               	movf	(logf@x+1)^(0+128),w
 15180  0150  00A1               	movwf	(___flsub@a+1)^(0+128)
 15181  0151  0828               	movf	logf@x^(0+128),w
 15182  0152  00A0               	movwf	___flsub@a^(0+128)
 15183  0153  082B               	movf	(logf@x+3)^(0+128),w
 15184  0154  00A7               	movwf	(___flsub@b+3)^(0+128)
 15185  0155  082A               	movf	(logf@x+2)^(0+128),w
 15186  0156  00A6               	movwf	(___flsub@b+2)^(0+128)
 15187  0157  0829               	movf	(logf@x+1)^(0+128),w
 15188  0158  00A5               	movwf	(___flsub@b+1)^(0+128)
 15189  0159  0828               	movf	logf@x^(0+128),w
 15190  015A  00A4               	movwf	___flsub@b^(0+128)
 15191  015B  31B5  2530  3180   	fcall	___flsub
 15192  015E  0021               	movlb	1	; select bank1
 15193  015F  0823               	movf	(?___flsub+3)^(0+128),w
 15194  0160  0020               	movlb	0	; select bank0
 15195  0161  00C7               	movwf	___fldiv@b+3
 15196  0162  0021               	movlb	1	; select bank1
 15197  0163  0822               	movf	(?___flsub+2)^(0+128),w
 15198  0164  0020               	movlb	0	; select bank0
 15199  0165  00C6               	movwf	___fldiv@b+2
 15200  0166  0021               	movlb	1	; select bank1
 15201  0167  0821               	movf	(?___flsub+1)^(0+128),w
 15202  0168  0020               	movlb	0	; select bank0
 15203  0169  00C5               	movwf	___fldiv@b+1
 15204  016A  0021               	movlb	1	; select bank1
 15205  016B  0820               	movf	?___flsub^(0+128),w
 15206  016C  0020               	movlb	0	; select bank0
 15207  016D  00C4               	movwf	___fldiv@b
 15208  016E  319C  24E2         	fcall	___fldiv
 15209  0170  0020               	movlb	0	; select bank0
 15210  0171  0843               	movf	?___fldiv+3,w
 15211  0172  0021               	movlb	1	; select bank1
 15212  0173  00AB               	movwf	(?_logf+3)^(0+128)
 15213  0174  0020               	movlb	0	; select bank0
 15214  0175  0842               	movf	?___fldiv+2,w
 15215  0176  0021               	movlb	1	; select bank1
 15216  0177  00AA               	movwf	(?_logf+2)^(0+128)
 15217  0178  0020               	movlb	0	; select bank0
 15218  0179  0841               	movf	?___fldiv+1,w
 15219  017A  0021               	movlb	1	; select bank1
 15220  017B  00A9               	movwf	(?_logf+1)^(0+128)
 15221  017C  0020               	movlb	0	; select bank0
 15222  017D  0840               	movf	?___fldiv,w
 15223  017E  0021               	movlb	1	; select bank1
 15224  017F  00A8               	movwf	?_logf^(0+128)
 15225  0180  0008               	return
 15226  0181                     l5589:	
 15227  0181  30E7               	movlw	231
 15228  0182  0022               	movlb	2	; select bank2
 15229  0183  07BC               	addwf	logf@k^(0+256),f
 15230  0184  30FF               	movlw	255
 15231  0185  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15232  0186  304C               	movlw	76
 15233  0187  0020               	movlb	0	; select bank0
 15234  0188  00A9               	movwf	___flmul@b+3
 15235  0189  3000               	movlw	0
 15236  018A  00A8               	movwf	___flmul@b+2
 15237  018B  3000               	movlw	0
 15238  018C  00A7               	movwf	___flmul@b+1
 15239  018D  3000               	movlw	0
 15240  018E  00A6               	movwf	___flmul@b
 15241  018F  0021               	movlb	1	; select bank1
 15242  0190  082B               	movf	(logf@x+3)^(0+128),w
 15243  0191  0020               	movlb	0	; select bank0
 15244  0192  00AD               	movwf	___flmul@a+3
 15245  0193  0021               	movlb	1	; select bank1
 15246  0194  082A               	movf	(logf@x+2)^(0+128),w
 15247  0195  0020               	movlb	0	; select bank0
 15248  0196  00AC               	movwf	___flmul@a+2
 15249  0197  0021               	movlb	1	; select bank1
 15250  0198  0829               	movf	(logf@x+1)^(0+128),w
 15251  0199  0020               	movlb	0	; select bank0
 15252  019A  00AB               	movwf	___flmul@a+1
 15253  019B  0021               	movlb	1	; select bank1
 15254  019C  0828               	movf	logf@x^(0+128),w
 15255  019D  0020               	movlb	0	; select bank0
 15256  019E  00AA               	movwf	___flmul@a
 15257  019F  3190  2023  3180   	fcall	___flmul
 15258  01A2  0020               	movlb	0	; select bank0
 15259  01A3  0829               	movf	?___flmul+3,w
 15260  01A4  0021               	movlb	1	; select bank1
 15261  01A5  00AB               	movwf	(logf@x+3)^(0+128)
 15262  01A6  0020               	movlb	0	; select bank0
 15263  01A7  0828               	movf	?___flmul+2,w
 15264  01A8  0021               	movlb	1	; select bank1
 15265  01A9  00AA               	movwf	(logf@x+2)^(0+128)
 15266  01AA  0020               	movlb	0	; select bank0
 15267  01AB  0827               	movf	?___flmul+1,w
 15268  01AC  0021               	movlb	1	; select bank1
 15269  01AD  00A9               	movwf	(logf@x+1)^(0+128)
 15270  01AE  0020               	movlb	0	; select bank0
 15271  01AF  0826               	movf	?___flmul,w
 15272  01B0  0021               	movlb	1	; select bank1
 15273  01B1  00A8               	movwf	logf@x^(0+128)
 15274  01B2  082B               	movf	(logf@x+3)^(0+128),w
 15275  01B3  0022               	movlb	2	; select bank2
 15276  01B4  00D9               	movwf	(logf@u+3)^(0+256)
 15277  01B5  0021               	movlb	1	; select bank1
 15278  01B6  082A               	movf	(logf@x+2)^(0+128),w
 15279  01B7  0022               	movlb	2	; select bank2
 15280  01B8  00D8               	movwf	(logf@u+2)^(0+256)
 15281  01B9  0021               	movlb	1	; select bank1
 15282  01BA  0829               	movf	(logf@x+1)^(0+128),w
 15283  01BB  0022               	movlb	2	; select bank2
 15284  01BC  00D7               	movwf	(logf@u+1)^(0+256)
 15285  01BD  0021               	movlb	1	; select bank1
 15286  01BE  0828               	movf	logf@x^(0+128),w
 15287  01BF  0022               	movlb	2	; select bank2
 15288  01C0  00D6               	movwf	logf@u^(0+256)
 15289  01C1  0859               	movf	(logf@u+3)^(0+256),w
 15290  01C2  00E1               	movwf	(logf@ix+3)^(0+256)
 15291  01C3  0858               	movf	(logf@u+2)^(0+256),w
 15292  01C4  00E0               	movwf	(logf@ix+2)^(0+256)
 15293  01C5  0857               	movf	(logf@u+1)^(0+256),w
 15294  01C6  00DF               	movwf	(logf@ix+1)^(0+256)
 15295  01C7  0856               	movf	logf@u^(0+256),w
 15296  01C8  00DE               	movwf	logf@ix^(0+256)
 15297  01C9  29E4               	goto	l5609
 15298  01CA                     l5597:	
 15299  01CA  3080               	movlw	128
 15300  01CB  0022               	movlb	2	; select bank2
 15301  01CC  0260               	subwf	(logf@ix+2)^(0+256),w
 15302  01CD  307F               	movlw	127
 15303  01CE  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15304  01CF  1803               	btfsc	3,0
 15305  01D0  0008               	return
 15306  01D1  3080               	movlw	128
 15307  01D2  0660               	xorwf	(logf@ix+2)^(0+256),w
 15308  01D3  303F               	movlw	63
 15309  01D4  1903               	skipnz
 15310  01D5  0661               	xorwf	(logf@ix+3)^(0+256),w
 15311  01D6  045E               	iorwf	logf@ix^(0+256),w
 15312  01D7  045F               	iorwf	(logf@ix+1)^(0+256),w
 15313  01D8  1D03               	btfss	3,2
 15314  01D9  29E4               	goto	l5609
 15315  01DA  3000               	movlw	0
 15316  01DB  0021               	movlb	1	; select bank1
 15317  01DC  00AB               	movwf	(?_logf+3)^(0+128)
 15318  01DD  3000               	movlw	0
 15319  01DE  00AA               	movwf	(?_logf+2)^(0+128)
 15320  01DF  3000               	movlw	0
 15321  01E0  00A9               	movwf	(?_logf+1)^(0+128)
 15322  01E1  3000               	movlw	0
 15323  01E2  00A8               	movwf	?_logf^(0+128)
 15324  01E3  0008               	return
 15325  01E4                     l5609:	
 15326  01E4  300D               	movlw	13
 15327  01E5  07DE               	addwf	logf@ix^(0+256),f
 15328  01E6  30FB               	movlw	251
 15329  01E7  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15330  01E8  304A               	movlw	74
 15331  01E9  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15332  01EA  3000               	movlw	0
 15333  01EB  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15334  01EC  085E               	movf	logf@ix^(0+256),w
 15335  01ED  0021               	movlb	1	; select bank1
 15336  01EE  00AC               	movwf	??_logf^(0+128)
 15337  01EF  0022               	movlb	2	; select bank2
 15338  01F0  085F               	movf	(logf@ix+1)^(0+256),w
 15339  01F1  0021               	movlb	1	; select bank1
 15340  01F2  00AD               	movwf	(??_logf^(0+128)+1)
 15341  01F3  0022               	movlb	2	; select bank2
 15342  01F4  0860               	movf	(logf@ix+2)^(0+256),w
 15343  01F5  0021               	movlb	1	; select bank1
 15344  01F6  00AE               	movwf	(??_logf^(0+128)+2)
 15345  01F7  0022               	movlb	2	; select bank2
 15346  01F8  0861               	movf	(logf@ix+3)^(0+256),w
 15347  01F9  0021               	movlb	1	; select bank1
 15348  01FA  00AF               	movwf	(??_logf^(0+128)+3)
 15349  01FB  3017               	movlw	23
 15350  01FC                     u7005:	
 15351  01FC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15352  01FD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15353  01FE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15354  01FF  0CAC               	rrf	??_logf^(0+128),f
 15355  0200  0B89               	decfsz	9,f
 15356  0201  29FC               	goto	u7005
 15357  0202  082C               	movf	??_logf^(0+128),w
 15358  0203  3E81               	addlw	129
 15359  0204  00B0               	movwf	(??_logf+4)^(0+128)
 15360  0205  30FF               	movlw	255
 15361  0206  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15362  0207  00B1               	movwf	(??_logf+5)^(0+128)
 15363  0208  0830               	movf	(??_logf+4)^(0+128),w
 15364  0209  0022               	movlb	2	; select bank2
 15365  020A  07BC               	addwf	logf@k^(0+256),f
 15366  020B  0021               	movlb	1	; select bank1
 15367  020C  0831               	movf	(??_logf+5)^(0+128),w
 15368  020D  0022               	movlb	2	; select bank2
 15369  020E  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15370  020F  30F3               	movlw	243
 15371  0210  0021               	movlb	1	; select bank1
 15372  0211  00AC               	movwf	??_logf^(0+128)
 15373  0212  3004               	movlw	4
 15374  0213  00AD               	movwf	(??_logf^(0+128)+1)
 15375  0214  3035               	movlw	53
 15376  0215  00AE               	movwf	(??_logf^(0+128)+2)
 15377  0216  303F               	movlw	63
 15378  0217  00AF               	movwf	(??_logf^(0+128)+3)
 15379  0218  30FF               	movlw	255
 15380  0219  0022               	movlb	2	; select bank2
 15381  021A  055E               	andwf	logf@ix^(0+256),w
 15382  021B  0021               	movlb	1	; select bank1
 15383  021C  00B0               	movwf	(??_logf+4)^(0+128)
 15384  021D  30FF               	movlw	255
 15385  021E  0022               	movlb	2	; select bank2
 15386  021F  055F               	andwf	(logf@ix+1)^(0+256),w
 15387  0220  0021               	movlb	1	; select bank1
 15388  0221  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15389  0222  307F               	movlw	127
 15390  0223  0022               	movlb	2	; select bank2
 15391  0224  0560               	andwf	(logf@ix+2)^(0+256),w
 15392  0225  0021               	movlb	1	; select bank1
 15393  0226  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15394  0227  3000               	movlw	0
 15395  0228  0022               	movlb	2	; select bank2
 15396  0229  0561               	andwf	(logf@ix+3)^(0+256),w
 15397  022A  0021               	movlb	1	; select bank1
 15398  022B  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15399  022C  0830               	movf	(??_logf+4)^(0+128),w
 15400  022D  07AC               	addwf	??_logf^(0+128),f
 15401  022E  0831               	movf	(??_logf+5)^(0+128),w
 15402  022F  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15403  0230  0832               	movf	(??_logf+6)^(0+128),w
 15404  0231  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15405  0232  0833               	movf	(??_logf+7)^(0+128),w
 15406  0233  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15407  0234  082F               	movf	(??_logf+3)^(0+128),w
 15408  0235  0022               	movlb	2	; select bank2
 15409  0236  00E1               	movwf	(logf@ix+3)^(0+256)
 15410  0237  0021               	movlb	1	; select bank1
 15411  0238  082E               	movf	(??_logf+2)^(0+128),w
 15412  0239  0022               	movlb	2	; select bank2
 15413  023A  00E0               	movwf	(logf@ix+2)^(0+256)
 15414  023B  0021               	movlb	1	; select bank1
 15415  023C  082D               	movf	(??_logf+1)^(0+128),w
 15416  023D  0022               	movlb	2	; select bank2
 15417  023E  00DF               	movwf	(logf@ix+1)^(0+256)
 15418  023F  0021               	movlb	1	; select bank1
 15419  0240  082C               	movf	??_logf^(0+128),w
 15420  0241  0022               	movlb	2	; select bank2
 15421  0242  00DE               	movwf	logf@ix^(0+256)
 15422  0243  0861               	movf	(logf@ix+3)^(0+256),w
 15423  0244  00D9               	movwf	(logf@u+3)^(0+256)
 15424  0245  0860               	movf	(logf@ix+2)^(0+256),w
 15425  0246  00D8               	movwf	(logf@u+2)^(0+256)
 15426  0247  085F               	movf	(logf@ix+1)^(0+256),w
 15427  0248  00D7               	movwf	(logf@u+1)^(0+256)
 15428  0249  085E               	movf	logf@ix^(0+256),w
 15429  024A  00D6               	movwf	logf@u^(0+256)
 15430  024B  0859               	movf	(logf@u+3)^(0+256),w
 15431  024C  0021               	movlb	1	; select bank1
 15432  024D  00AB               	movwf	(logf@x+3)^(0+128)
 15433  024E  0022               	movlb	2	; select bank2
 15434  024F  0858               	movf	(logf@u+2)^(0+256),w
 15435  0250  0021               	movlb	1	; select bank1
 15436  0251  00AA               	movwf	(logf@x+2)^(0+128)
 15437  0252  0022               	movlb	2	; select bank2
 15438  0253  0857               	movf	(logf@u+1)^(0+256),w
 15439  0254  0021               	movlb	1	; select bank1
 15440  0255  00A9               	movwf	(logf@x+1)^(0+128)
 15441  0256  0022               	movlb	2	; select bank2
 15442  0257  0856               	movf	logf@u^(0+256),w
 15443  0258  0021               	movlb	1	; select bank1
 15444  0259  00A8               	movwf	logf@x^(0+128)
 15445  025A  30BF               	movlw	191
 15446  025B  0020               	movlb	0	; select bank0
 15447  025C  00DD               	movwf	___fladd@b+3
 15448  025D  3080               	movlw	128
 15449  025E  00DC               	movwf	___fladd@b+2
 15450  025F  3000               	movlw	0
 15451  0260  00DB               	movwf	___fladd@b+1
 15452  0261  3000               	movlw	0
 15453  0262  00DA               	movwf	___fladd@b
 15454  0263  0021               	movlb	1	; select bank1
 15455  0264  082B               	movf	(logf@x+3)^(0+128),w
 15456  0265  0020               	movlb	0	; select bank0
 15457  0266  00E1               	movwf	___fladd@a+3
 15458  0267  0021               	movlb	1	; select bank1
 15459  0268  082A               	movf	(logf@x+2)^(0+128),w
 15460  0269  0020               	movlb	0	; select bank0
 15461  026A  00E0               	movwf	___fladd@a+2
 15462  026B  0021               	movlb	1	; select bank1
 15463  026C  0829               	movf	(logf@x+1)^(0+128),w
 15464  026D  0020               	movlb	0	; select bank0
 15465  026E  00DF               	movwf	___fladd@a+1
 15466  026F  0021               	movlb	1	; select bank1
 15467  0270  0828               	movf	logf@x^(0+128),w
 15468  0271  0020               	movlb	0	; select bank0
 15469  0272  00DE               	movwf	___fladd@a
 15470  0273  3185  25FE  3180   	fcall	___fladd
 15471  0276  0020               	movlb	0	; select bank0
 15472  0277  085D               	movf	?___fladd+3,w
 15473  0278  0022               	movlb	2	; select bank2
 15474  0279  00DD               	movwf	(logf@f+3)^(0+256)
 15475  027A  0020               	movlb	0	; select bank0
 15476  027B  085C               	movf	?___fladd+2,w
 15477  027C  0022               	movlb	2	; select bank2
 15478  027D  00DC               	movwf	(logf@f+2)^(0+256)
 15479  027E  0020               	movlb	0	; select bank0
 15480  027F  085B               	movf	?___fladd+1,w
 15481  0280  0022               	movlb	2	; select bank2
 15482  0281  00DB               	movwf	(logf@f+1)^(0+256)
 15483  0282  0020               	movlb	0	; select bank0
 15484  0283  085A               	movf	?___fladd,w
 15485  0284  0022               	movlb	2	; select bank2
 15486  0285  00DA               	movwf	logf@f^(0+256)
 15487  0286  3040               	movlw	64
 15488  0287  0020               	movlb	0	; select bank0
 15489  0288  00DD               	movwf	___fladd@b+3
 15490  0289  3000               	movlw	0
 15491  028A  00DC               	movwf	___fladd@b+2
 15492  028B  3000               	movlw	0
 15493  028C  00DB               	movwf	___fladd@b+1
 15494  028D  3000               	movlw	0
 15495  028E  00DA               	movwf	___fladd@b
 15496  028F  0022               	movlb	2	; select bank2
 15497  0290  085D               	movf	(logf@f+3)^(0+256),w
 15498  0291  0020               	movlb	0	; select bank0
 15499  0292  00E1               	movwf	___fladd@a+3
 15500  0293  0022               	movlb	2	; select bank2
 15501  0294  085C               	movf	(logf@f+2)^(0+256),w
 15502  0295  0020               	movlb	0	; select bank0
 15503  0296  00E0               	movwf	___fladd@a+2
 15504  0297  0022               	movlb	2	; select bank2
 15505  0298  085B               	movf	(logf@f+1)^(0+256),w
 15506  0299  0020               	movlb	0	; select bank0
 15507  029A  00DF               	movwf	___fladd@a+1
 15508  029B  0022               	movlb	2	; select bank2
 15509  029C  085A               	movf	logf@f^(0+256),w
 15510  029D  0020               	movlb	0	; select bank0
 15511  029E  00DE               	movwf	___fladd@a
 15512  029F  3185  25FE  3180   	fcall	___fladd
 15513  02A2  0020               	movlb	0	; select bank0
 15514  02A3  085D               	movf	?___fladd+3,w
 15515  02A4  00C3               	movwf	___fldiv@a+3
 15516  02A5  085C               	movf	?___fladd+2,w
 15517  02A6  00C2               	movwf	___fldiv@a+2
 15518  02A7  085B               	movf	?___fladd+1,w
 15519  02A8  00C1               	movwf	___fldiv@a+1
 15520  02A9  085A               	movf	?___fladd,w
 15521  02AA  00C0               	movwf	___fldiv@a
 15522  02AB  0022               	movlb	2	; select bank2
 15523  02AC  085D               	movf	(logf@f+3)^(0+256),w
 15524  02AD  0020               	movlb	0	; select bank0
 15525  02AE  00C7               	movwf	___fldiv@b+3
 15526  02AF  0022               	movlb	2	; select bank2
 15527  02B0  085C               	movf	(logf@f+2)^(0+256),w
 15528  02B1  0020               	movlb	0	; select bank0
 15529  02B2  00C6               	movwf	___fldiv@b+2
 15530  02B3  0022               	movlb	2	; select bank2
 15531  02B4  085B               	movf	(logf@f+1)^(0+256),w
 15532  02B5  0020               	movlb	0	; select bank0
 15533  02B6  00C5               	movwf	___fldiv@b+1
 15534  02B7  0022               	movlb	2	; select bank2
 15535  02B8  085A               	movf	logf@f^(0+256),w
 15536  02B9  0020               	movlb	0	; select bank0
 15537  02BA  00C4               	movwf	___fldiv@b
 15538  02BB  319C  24E2  3180   	fcall	___fldiv
 15539  02BE  0020               	movlb	0	; select bank0
 15540  02BF  0843               	movf	?___fldiv+3,w
 15541  02C0  0022               	movlb	2	; select bank2
 15542  02C1  00C9               	movwf	(logf@s+3)^(0+256)
 15543  02C2  0020               	movlb	0	; select bank0
 15544  02C3  0842               	movf	?___fldiv+2,w
 15545  02C4  0022               	movlb	2	; select bank2
 15546  02C5  00C8               	movwf	(logf@s+2)^(0+256)
 15547  02C6  0020               	movlb	0	; select bank0
 15548  02C7  0841               	movf	?___fldiv+1,w
 15549  02C8  0022               	movlb	2	; select bank2
 15550  02C9  00C7               	movwf	(logf@s+1)^(0+256)
 15551  02CA  0020               	movlb	0	; select bank0
 15552  02CB  0840               	movf	?___fldiv,w
 15553  02CC  0022               	movlb	2	; select bank2
 15554  02CD  00C6               	movwf	logf@s^(0+256)
 15555  02CE  0849               	movf	(logf@s+3)^(0+256),w
 15556  02CF  0020               	movlb	0	; select bank0
 15557  02D0  00A9               	movwf	___flmul@b+3
 15558  02D1  0022               	movlb	2	; select bank2
 15559  02D2  0848               	movf	(logf@s+2)^(0+256),w
 15560  02D3  0020               	movlb	0	; select bank0
 15561  02D4  00A8               	movwf	___flmul@b+2
 15562  02D5  0022               	movlb	2	; select bank2
 15563  02D6  0847               	movf	(logf@s+1)^(0+256),w
 15564  02D7  0020               	movlb	0	; select bank0
 15565  02D8  00A7               	movwf	___flmul@b+1
 15566  02D9  0022               	movlb	2	; select bank2
 15567  02DA  0846               	movf	logf@s^(0+256),w
 15568  02DB  0020               	movlb	0	; select bank0
 15569  02DC  00A6               	movwf	___flmul@b
 15570  02DD  0022               	movlb	2	; select bank2
 15571  02DE  0849               	movf	(logf@s+3)^(0+256),w
 15572  02DF  0020               	movlb	0	; select bank0
 15573  02E0  00AD               	movwf	___flmul@a+3
 15574  02E1  0022               	movlb	2	; select bank2
 15575  02E2  0848               	movf	(logf@s+2)^(0+256),w
 15576  02E3  0020               	movlb	0	; select bank0
 15577  02E4  00AC               	movwf	___flmul@a+2
 15578  02E5  0022               	movlb	2	; select bank2
 15579  02E6  0847               	movf	(logf@s+1)^(0+256),w
 15580  02E7  0020               	movlb	0	; select bank0
 15581  02E8  00AB               	movwf	___flmul@a+1
 15582  02E9  0022               	movlb	2	; select bank2
 15583  02EA  0846               	movf	logf@s^(0+256),w
 15584  02EB  0020               	movlb	0	; select bank0
 15585  02EC  00AA               	movwf	___flmul@a
 15586  02ED  3190  2023  3180   	fcall	___flmul
 15587  02F0  0020               	movlb	0	; select bank0
 15588  02F1  0829               	movf	?___flmul+3,w
 15589  02F2  0022               	movlb	2	; select bank2
 15590  02F3  00CD               	movwf	(logf@z+3)^(0+256)
 15591  02F4  0020               	movlb	0	; select bank0
 15592  02F5  0828               	movf	?___flmul+2,w
 15593  02F6  0022               	movlb	2	; select bank2
 15594  02F7  00CC               	movwf	(logf@z+2)^(0+256)
 15595  02F8  0020               	movlb	0	; select bank0
 15596  02F9  0827               	movf	?___flmul+1,w
 15597  02FA  0022               	movlb	2	; select bank2
 15598  02FB  00CB               	movwf	(logf@z+1)^(0+256)
 15599  02FC  0020               	movlb	0	; select bank0
 15600  02FD  0826               	movf	?___flmul,w
 15601  02FE  0022               	movlb	2	; select bank2
 15602  02FF  00CA               	movwf	logf@z^(0+256)
 15603  0300  084D               	movf	(logf@z+3)^(0+256),w
 15604  0301  0020               	movlb	0	; select bank0
 15605  0302  00A9               	movwf	___flmul@b+3
 15606  0303  0022               	movlb	2	; select bank2
 15607  0304  084C               	movf	(logf@z+2)^(0+256),w
 15608  0305  0020               	movlb	0	; select bank0
 15609  0306  00A8               	movwf	___flmul@b+2
 15610  0307  0022               	movlb	2	; select bank2
 15611  0308  084B               	movf	(logf@z+1)^(0+256),w
 15612  0309  0020               	movlb	0	; select bank0
 15613  030A  00A7               	movwf	___flmul@b+1
 15614  030B  0022               	movlb	2	; select bank2
 15615  030C  084A               	movf	logf@z^(0+256),w
 15616  030D  0020               	movlb	0	; select bank0
 15617  030E  00A6               	movwf	___flmul@b
 15618  030F  0022               	movlb	2	; select bank2
 15619  0310  084D               	movf	(logf@z+3)^(0+256),w
 15620  0311  0020               	movlb	0	; select bank0
 15621  0312  00AD               	movwf	___flmul@a+3
 15622  0313  0022               	movlb	2	; select bank2
 15623  0314  084C               	movf	(logf@z+2)^(0+256),w
 15624  0315  0020               	movlb	0	; select bank0
 15625  0316  00AC               	movwf	___flmul@a+2
 15626  0317  0022               	movlb	2	; select bank2
 15627  0318  084B               	movf	(logf@z+1)^(0+256),w
 15628  0319  0020               	movlb	0	; select bank0
 15629  031A  00AB               	movwf	___flmul@a+1
 15630  031B  0022               	movlb	2	; select bank2
 15631  031C  084A               	movf	logf@z^(0+256),w
 15632  031D  0020               	movlb	0	; select bank0
 15633  031E  00AA               	movwf	___flmul@a
 15634  031F  3190  2023  3180   	fcall	___flmul
 15635  0322  0020               	movlb	0	; select bank0
 15636  0323  0829               	movf	?___flmul+3,w
 15637  0324  0022               	movlb	2	; select bank2
 15638  0325  00D1               	movwf	(logf@w+3)^(0+256)
 15639  0326  0020               	movlb	0	; select bank0
 15640  0327  0828               	movf	?___flmul+2,w
 15641  0328  0022               	movlb	2	; select bank2
 15642  0329  00D0               	movwf	(logf@w+2)^(0+256)
 15643  032A  0020               	movlb	0	; select bank0
 15644  032B  0827               	movf	?___flmul+1,w
 15645  032C  0022               	movlb	2	; select bank2
 15646  032D  00CF               	movwf	(logf@w+1)^(0+256)
 15647  032E  0020               	movlb	0	; select bank0
 15648  032F  0826               	movf	?___flmul,w
 15649  0330  0022               	movlb	2	; select bank2
 15650  0331  00CE               	movwf	logf@w^(0+256)
 15651  0332  303E               	movlw	62
 15652  0333  0020               	movlb	0	; select bank0
 15653  0334  00DD               	movwf	___fladd@b+3
 15654  0335  30CC               	movlw	204
 15655  0336  00DC               	movwf	___fladd@b+2
 15656  0337  30CE               	movlw	206
 15657  0338  00DB               	movwf	___fladd@b+1
 15658  0339  3013               	movlw	19
 15659  033A  00DA               	movwf	___fladd@b
 15660  033B  303E               	movlw	62
 15661  033C  00A9               	movwf	___flmul@b+3
 15662  033D  3078               	movlw	120
 15663  033E  00A8               	movwf	___flmul@b+2
 15664  033F  309E               	movlw	158
 15665  0340  00A7               	movwf	___flmul@b+1
 15666  0341  3026               	movlw	38
 15667  0342  00A6               	movwf	___flmul@b
 15668  0343  0022               	movlb	2	; select bank2
 15669  0344  0851               	movf	(logf@w+3)^(0+256),w
 15670  0345  0020               	movlb	0	; select bank0
 15671  0346  00AD               	movwf	___flmul@a+3
 15672  0347  0022               	movlb	2	; select bank2
 15673  0348  0850               	movf	(logf@w+2)^(0+256),w
 15674  0349  0020               	movlb	0	; select bank0
 15675  034A  00AC               	movwf	___flmul@a+2
 15676  034B  0022               	movlb	2	; select bank2
 15677  034C  084F               	movf	(logf@w+1)^(0+256),w
 15678  034D  0020               	movlb	0	; select bank0
 15679  034E  00AB               	movwf	___flmul@a+1
 15680  034F  0022               	movlb	2	; select bank2
 15681  0350  084E               	movf	logf@w^(0+256),w
 15682  0351  0020               	movlb	0	; select bank0
 15683  0352  00AA               	movwf	___flmul@a
 15684  0353  3190  2023  3180   	fcall	___flmul
 15685  0356  0020               	movlb	0	; select bank0
 15686  0357  0829               	movf	?___flmul+3,w
 15687  0358  00E1               	movwf	___fladd@a+3
 15688  0359  0828               	movf	?___flmul+2,w
 15689  035A  00E0               	movwf	___fladd@a+2
 15690  035B  0827               	movf	?___flmul+1,w
 15691  035C  00DF               	movwf	___fladd@a+1
 15692  035D  0826               	movf	?___flmul,w
 15693  035E  00DE               	movwf	___fladd@a
 15694  035F  3185  25FE  3180   	fcall	___fladd
 15695  0362  0020               	movlb	0	; select bank0
 15696  0363  085D               	movf	?___fladd+3,w
 15697  0364  0022               	movlb	2	; select bank2
 15698  0365  00D5               	movwf	(_logf$2100+3)^(0+256)
 15699  0366  0020               	movlb	0	; select bank0
 15700  0367  085C               	movf	?___fladd+2,w
 15701  0368  0022               	movlb	2	; select bank2
 15702  0369  00D4               	movwf	(_logf$2100+2)^(0+256)
 15703  036A  0020               	movlb	0	; select bank0
 15704  036B  085B               	movf	?___fladd+1,w
 15705  036C  0022               	movlb	2	; select bank2
 15706  036D  00D3               	movwf	(_logf$2100+1)^(0+256)
 15707  036E  0020               	movlb	0	; select bank0
 15708  036F  085A               	movf	?___fladd,w
 15709  0370  0022               	movlb	2	; select bank2
 15710  0371  00D2               	movwf	_logf$2100^(0+256)
 15711  0372  0851               	movf	(logf@w+3)^(0+256),w
 15712  0373  0020               	movlb	0	; select bank0
 15713  0374  00A9               	movwf	___flmul@b+3
 15714  0375  0022               	movlb	2	; select bank2
 15715  0376  0850               	movf	(logf@w+2)^(0+256),w
 15716  0377  0020               	movlb	0	; select bank0
 15717  0378  00A8               	movwf	___flmul@b+2
 15718  0379  0022               	movlb	2	; select bank2
 15719  037A  084F               	movf	(logf@w+1)^(0+256),w
 15720  037B  0020               	movlb	0	; select bank0
 15721  037C  00A7               	movwf	___flmul@b+1
 15722  037D  0022               	movlb	2	; select bank2
 15723  037E  084E               	movf	logf@w^(0+256),w
 15724  037F  0020               	movlb	0	; select bank0
 15725  0380  00A6               	movwf	___flmul@b
 15726  0381  0022               	movlb	2	; select bank2
 15727  0382  0855               	movf	(_logf$2100+3)^(0+256),w
 15728  0383  0020               	movlb	0	; select bank0
 15729  0384  00AD               	movwf	___flmul@a+3
 15730  0385  0022               	movlb	2	; select bank2
 15731  0386  0854               	movf	(_logf$2100+2)^(0+256),w
 15732  0387  0020               	movlb	0	; select bank0
 15733  0388  00AC               	movwf	___flmul@a+2
 15734  0389  0022               	movlb	2	; select bank2
 15735  038A  0853               	movf	(_logf$2100+1)^(0+256),w
 15736  038B  0020               	movlb	0	; select bank0
 15737  038C  00AB               	movwf	___flmul@a+1
 15738  038D  0022               	movlb	2	; select bank2
 15739  038E  0852               	movf	_logf$2100^(0+256),w
 15740  038F  0020               	movlb	0	; select bank0
 15741  0390  00AA               	movwf	___flmul@a
 15742  0391  3190  2023  3180   	fcall	___flmul
 15743  0394  0020               	movlb	0	; select bank0
 15744  0395  0829               	movf	?___flmul+3,w
 15745  0396  0022               	movlb	2	; select bank2
 15746  0397  00A7               	movwf	(logf@t1+3)^(0+256)
 15747  0398  0020               	movlb	0	; select bank0
 15748  0399  0828               	movf	?___flmul+2,w
 15749  039A  0022               	movlb	2	; select bank2
 15750  039B  00A6               	movwf	(logf@t1+2)^(0+256)
 15751  039C  0020               	movlb	0	; select bank0
 15752  039D  0827               	movf	?___flmul+1,w
 15753  039E  0022               	movlb	2	; select bank2
 15754  039F  00A5               	movwf	(logf@t1+1)^(0+256)
 15755  03A0  0020               	movlb	0	; select bank0
 15756  03A1  0826               	movf	?___flmul,w
 15757  03A2  0022               	movlb	2	; select bank2
 15758  03A3  00A4               	movwf	logf@t1^(0+256)
 15759  03A4  303F               	movlw	63
 15760  03A5  0020               	movlb	0	; select bank0
 15761  03A6  00DD               	movwf	___fladd@b+3
 15762  03A7  302A               	movlw	42
 15763  03A8  00DC               	movwf	___fladd@b+2
 15764  03A9  30AA               	movlw	170
 15765  03AA  00DB               	movwf	___fladd@b+1
 15766  03AB  30AA               	movlw	170
 15767  03AC  00DA               	movwf	___fladd@b
 15768  03AD  303E               	movlw	62
 15769  03AE  00A9               	movwf	___flmul@b+3
 15770  03AF  3091               	movlw	145
 15771  03B0  00A8               	movwf	___flmul@b+2
 15772  03B1  30E9               	movlw	233
 15773  03B2  00A7               	movwf	___flmul@b+1
 15774  03B3  30EE               	movlw	238
 15775  03B4  00A6               	movwf	___flmul@b
 15776  03B5  0022               	movlb	2	; select bank2
 15777  03B6  0851               	movf	(logf@w+3)^(0+256),w
 15778  03B7  0020               	movlb	0	; select bank0
 15779  03B8  00AD               	movwf	___flmul@a+3
 15780  03B9  0022               	movlb	2	; select bank2
 15781  03BA  0850               	movf	(logf@w+2)^(0+256),w
 15782  03BB  0020               	movlb	0	; select bank0
 15783  03BC  00AC               	movwf	___flmul@a+2
 15784  03BD  0022               	movlb	2	; select bank2
 15785  03BE  084F               	movf	(logf@w+1)^(0+256),w
 15786  03BF  0020               	movlb	0	; select bank0
 15787  03C0  00AB               	movwf	___flmul@a+1
 15788  03C1  0022               	movlb	2	; select bank2
 15789  03C2  084E               	movf	logf@w^(0+256),w
 15790  03C3  0020               	movlb	0	; select bank0
 15791  03C4  00AA               	movwf	___flmul@a
 15792  03C5  3190  2023  3180   	fcall	___flmul
 15793  03C8  0020               	movlb	0	; select bank0
 15794  03C9  0829               	movf	?___flmul+3,w
 15795  03CA  00E1               	movwf	___fladd@a+3
 15796  03CB  0828               	movf	?___flmul+2,w
 15797  03CC  00E0               	movwf	___fladd@a+2
 15798  03CD  0827               	movf	?___flmul+1,w
 15799  03CE  00DF               	movwf	___fladd@a+1
 15800  03CF  0826               	movf	?___flmul,w
 15801  03D0  00DE               	movwf	___fladd@a
 15802  03D1  3185  25FE  3180   	fcall	___fladd
 15803  03D4  0020               	movlb	0	; select bank0
 15804  03D5  085D               	movf	?___fladd+3,w
 15805  03D6  0022               	movlb	2	; select bank2
 15806  03D7  00D5               	movwf	(_logf$2100+3)^(0+256)
 15807  03D8  0020               	movlb	0	; select bank0
 15808  03D9  085C               	movf	?___fladd+2,w
 15809  03DA  0022               	movlb	2	; select bank2
 15810  03DB  00D4               	movwf	(_logf$2100+2)^(0+256)
 15811  03DC  0020               	movlb	0	; select bank0
 15812  03DD  085B               	movf	?___fladd+1,w
 15813  03DE  0022               	movlb	2	; select bank2
 15814  03DF  00D3               	movwf	(_logf$2100+1)^(0+256)
 15815  03E0  0020               	movlb	0	; select bank0
 15816  03E1  085A               	movf	?___fladd,w
 15817  03E2  0022               	movlb	2	; select bank2
 15818  03E3  00D2               	movwf	_logf$2100^(0+256)
 15819  03E4  084D               	movf	(logf@z+3)^(0+256),w
 15820  03E5  0020               	movlb	0	; select bank0
 15821  03E6  00A9               	movwf	___flmul@b+3
 15822  03E7  0022               	movlb	2	; select bank2
 15823  03E8  084C               	movf	(logf@z+2)^(0+256),w
 15824  03E9  0020               	movlb	0	; select bank0
 15825  03EA  00A8               	movwf	___flmul@b+2
 15826  03EB  0022               	movlb	2	; select bank2
 15827  03EC  084B               	movf	(logf@z+1)^(0+256),w
 15828  03ED  0020               	movlb	0	; select bank0
 15829  03EE  00A7               	movwf	___flmul@b+1
 15830  03EF  0022               	movlb	2	; select bank2
 15831  03F0  084A               	movf	logf@z^(0+256),w
 15832  03F1  0020               	movlb	0	; select bank0
 15833  03F2  00A6               	movwf	___flmul@b
 15834  03F3  0022               	movlb	2	; select bank2
 15835  03F4  0855               	movf	(_logf$2100+3)^(0+256),w
 15836  03F5  0020               	movlb	0	; select bank0
 15837  03F6  00AD               	movwf	___flmul@a+3
 15838  03F7  0022               	movlb	2	; select bank2
 15839  03F8  0854               	movf	(_logf$2100+2)^(0+256),w
 15840  03F9  0020               	movlb	0	; select bank0
 15841  03FA  00AC               	movwf	___flmul@a+2
 15842  03FB  0022               	movlb	2	; select bank2
 15843  03FC  0853               	movf	(_logf$2100+1)^(0+256),w
 15844  03FD  0020               	movlb	0	; select bank0
 15845  03FE  00AB               	movwf	___flmul@a+1
 15846  03FF  0022               	movlb	2	; select bank2
 15847  0400  0852               	movf	_logf$2100^(0+256),w
 15848  0401  0020               	movlb	0	; select bank0
 15849  0402  00AA               	movwf	___flmul@a
 15850  0403  3190  2023  3180   	fcall	___flmul
 15851  0406  0020               	movlb	0	; select bank0
 15852  0407  0829               	movf	?___flmul+3,w
 15853  0408  0022               	movlb	2	; select bank2
 15854  0409  00AB               	movwf	(logf@t2+3)^(0+256)
 15855  040A  0020               	movlb	0	; select bank0
 15856  040B  0828               	movf	?___flmul+2,w
 15857  040C  0022               	movlb	2	; select bank2
 15858  040D  00AA               	movwf	(logf@t2+2)^(0+256)
 15859  040E  0020               	movlb	0	; select bank0
 15860  040F  0827               	movf	?___flmul+1,w
 15861  0410  0022               	movlb	2	; select bank2
 15862  0411  00A9               	movwf	(logf@t2+1)^(0+256)
 15863  0412  0020               	movlb	0	; select bank0
 15864  0413  0826               	movf	?___flmul,w
 15865  0414  0022               	movlb	2	; select bank2
 15866  0415  00A8               	movwf	logf@t2^(0+256)
 15867  0416  0827               	movf	(logf@t1+3)^(0+256),w
 15868  0417  0020               	movlb	0	; select bank0
 15869  0418  00DD               	movwf	___fladd@b+3
 15870  0419  0022               	movlb	2	; select bank2
 15871  041A  0826               	movf	(logf@t1+2)^(0+256),w
 15872  041B  0020               	movlb	0	; select bank0
 15873  041C  00DC               	movwf	___fladd@b+2
 15874  041D  0022               	movlb	2	; select bank2
 15875  041E  0825               	movf	(logf@t1+1)^(0+256),w
 15876  041F  0020               	movlb	0	; select bank0
 15877  0420  00DB               	movwf	___fladd@b+1
 15878  0421  0022               	movlb	2	; select bank2
 15879  0422  0824               	movf	logf@t1^(0+256),w
 15880  0423  0020               	movlb	0	; select bank0
 15881  0424  00DA               	movwf	___fladd@b
 15882  0425  0022               	movlb	2	; select bank2
 15883  0426  082B               	movf	(logf@t2+3)^(0+256),w
 15884  0427  0020               	movlb	0	; select bank0
 15885  0428  00E1               	movwf	___fladd@a+3
 15886  0429  0022               	movlb	2	; select bank2
 15887  042A  082A               	movf	(logf@t2+2)^(0+256),w
 15888  042B  0020               	movlb	0	; select bank0
 15889  042C  00E0               	movwf	___fladd@a+2
 15890  042D  0022               	movlb	2	; select bank2
 15891  042E  0829               	movf	(logf@t2+1)^(0+256),w
 15892  042F  0020               	movlb	0	; select bank0
 15893  0430  00DF               	movwf	___fladd@a+1
 15894  0431  0022               	movlb	2	; select bank2
 15895  0432  0828               	movf	logf@t2^(0+256),w
 15896  0433  0020               	movlb	0	; select bank0
 15897  0434  00DE               	movwf	___fladd@a
 15898  0435  3185  25FE  3180   	fcall	___fladd
 15899  0438  0020               	movlb	0	; select bank0
 15900  0439  085D               	movf	?___fladd+3,w
 15901  043A  0022               	movlb	2	; select bank2
 15902  043B  00A3               	movwf	(logf@R+3)^(0+256)
 15903  043C  0020               	movlb	0	; select bank0
 15904  043D  085C               	movf	?___fladd+2,w
 15905  043E  0022               	movlb	2	; select bank2
 15906  043F  00A2               	movwf	(logf@R+2)^(0+256)
 15907  0440  0020               	movlb	0	; select bank0
 15908  0441  085B               	movf	?___fladd+1,w
 15909  0442  0022               	movlb	2	; select bank2
 15910  0443  00A1               	movwf	(logf@R+1)^(0+256)
 15911  0444  0020               	movlb	0	; select bank0
 15912  0445  085A               	movf	?___fladd,w
 15913  0446  0022               	movlb	2	; select bank2
 15914  0447  00A0               	movwf	logf@R^(0+256)
 15915  0448  303F               	movlw	63
 15916  0449  0020               	movlb	0	; select bank0
 15917  044A  00A9               	movwf	___flmul@b+3
 15918  044B  3000               	movlw	0
 15919  044C  00A8               	movwf	___flmul@b+2
 15920  044D  3000               	movlw	0
 15921  044E  00A7               	movwf	___flmul@b+1
 15922  044F  3000               	movlw	0
 15923  0450  00A6               	movwf	___flmul@b
 15924  0451  0022               	movlb	2	; select bank2
 15925  0452  085D               	movf	(logf@f+3)^(0+256),w
 15926  0453  0020               	movlb	0	; select bank0
 15927  0454  00AD               	movwf	___flmul@a+3
 15928  0455  0022               	movlb	2	; select bank2
 15929  0456  085C               	movf	(logf@f+2)^(0+256),w
 15930  0457  0020               	movlb	0	; select bank0
 15931  0458  00AC               	movwf	___flmul@a+2
 15932  0459  0022               	movlb	2	; select bank2
 15933  045A  085B               	movf	(logf@f+1)^(0+256),w
 15934  045B  0020               	movlb	0	; select bank0
 15935  045C  00AB               	movwf	___flmul@a+1
 15936  045D  0022               	movlb	2	; select bank2
 15937  045E  085A               	movf	logf@f^(0+256),w
 15938  045F  0020               	movlb	0	; select bank0
 15939  0460  00AA               	movwf	___flmul@a
 15940  0461  3190  2023  3180   	fcall	___flmul
 15941  0464  0020               	movlb	0	; select bank0
 15942  0465  0829               	movf	?___flmul+3,w
 15943  0466  0022               	movlb	2	; select bank2
 15944  0467  00D5               	movwf	(_logf$2100+3)^(0+256)
 15945  0468  0020               	movlb	0	; select bank0
 15946  0469  0828               	movf	?___flmul+2,w
 15947  046A  0022               	movlb	2	; select bank2
 15948  046B  00D4               	movwf	(_logf$2100+2)^(0+256)
 15949  046C  0020               	movlb	0	; select bank0
 15950  046D  0827               	movf	?___flmul+1,w
 15951  046E  0022               	movlb	2	; select bank2
 15952  046F  00D3               	movwf	(_logf$2100+1)^(0+256)
 15953  0470  0020               	movlb	0	; select bank0
 15954  0471  0826               	movf	?___flmul,w
 15955  0472  0022               	movlb	2	; select bank2
 15956  0473  00D2               	movwf	_logf$2100^(0+256)
 15957  0474  085D               	movf	(logf@f+3)^(0+256),w
 15958  0475  0020               	movlb	0	; select bank0
 15959  0476  00A9               	movwf	___flmul@b+3
 15960  0477  0022               	movlb	2	; select bank2
 15961  0478  085C               	movf	(logf@f+2)^(0+256),w
 15962  0479  0020               	movlb	0	; select bank0
 15963  047A  00A8               	movwf	___flmul@b+2
 15964  047B  0022               	movlb	2	; select bank2
 15965  047C  085B               	movf	(logf@f+1)^(0+256),w
 15966  047D  0020               	movlb	0	; select bank0
 15967  047E  00A7               	movwf	___flmul@b+1
 15968  047F  0022               	movlb	2	; select bank2
 15969  0480  085A               	movf	logf@f^(0+256),w
 15970  0481  0020               	movlb	0	; select bank0
 15971  0482  00A6               	movwf	___flmul@b
 15972  0483  0022               	movlb	2	; select bank2
 15973  0484  0855               	movf	(_logf$2100+3)^(0+256),w
 15974  0485  0020               	movlb	0	; select bank0
 15975  0486  00AD               	movwf	___flmul@a+3
 15976  0487  0022               	movlb	2	; select bank2
 15977  0488  0854               	movf	(_logf$2100+2)^(0+256),w
 15978  0489  0020               	movlb	0	; select bank0
 15979  048A  00AC               	movwf	___flmul@a+2
 15980  048B  0022               	movlb	2	; select bank2
 15981  048C  0853               	movf	(_logf$2100+1)^(0+256),w
 15982  048D  0020               	movlb	0	; select bank0
 15983  048E  00AB               	movwf	___flmul@a+1
 15984  048F  0022               	movlb	2	; select bank2
 15985  0490  0852               	movf	_logf$2100^(0+256),w
 15986  0491  0020               	movlb	0	; select bank0
 15987  0492  00AA               	movwf	___flmul@a
 15988  0493  3190  2023  3180   	fcall	___flmul
 15989  0496  0020               	movlb	0	; select bank0
 15990  0497  0829               	movf	?___flmul+3,w
 15991  0498  0022               	movlb	2	; select bank2
 15992  0499  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15993  049A  0020               	movlb	0	; select bank0
 15994  049B  0828               	movf	?___flmul+2,w
 15995  049C  0022               	movlb	2	; select bank2
 15996  049D  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15997  049E  0020               	movlb	0	; select bank0
 15998  049F  0827               	movf	?___flmul+1,w
 15999  04A0  0022               	movlb	2	; select bank2
 16000  04A1  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16001  04A2  0020               	movlb	0	; select bank0
 16002  04A3  0826               	movf	?___flmul,w
 16003  04A4  0022               	movlb	2	; select bank2
 16004  04A5  00BE               	movwf	logf@hfsq^(0+256)
 16005  04A6  083C               	movf	logf@k^(0+256),w
 16006  04A7  00F1               	movwf	___xxtofl@val
 16007  04A8  083D               	movf	(logf@k+1)^(0+256),w
 16008  04A9  00F2               	movwf	___xxtofl@val+1
 16009  04AA  0D89               	rlf	9,f
 16010  04AB  3B89               	subwfb	9,f
 16011  04AC  0989               	comf	9,f
 16012  04AD  00F3               	movwf	___xxtofl@val+2
 16013  04AE  00F4               	movwf	___xxtofl@val+3
 16014  04AF  3001               	movlw	1
 16015  04B0  31AA  22E9  3180   	fcall	___xxtofl
 16016  04B3  0874               	movf	?___xxtofl+3,w
 16017  04B4  0022               	movlb	2	; select bank2
 16018  04B5  00C5               	movwf	(logf@dk+3)^(0+256)
 16019  04B6  0873               	movf	?___xxtofl+2,w
 16020  04B7  00C4               	movwf	(logf@dk+2)^(0+256)
 16021  04B8  0872               	movf	?___xxtofl+1,w
 16022  04B9  00C3               	movwf	(logf@dk+1)^(0+256)
 16023  04BA  0871               	movf	?___xxtofl,w
 16024  04BB  00C2               	movwf	logf@dk^(0+256)
 16025  04BC  0849               	movf	(logf@s+3)^(0+256),w
 16026  04BD  0020               	movlb	0	; select bank0
 16027  04BE  00A9               	movwf	___flmul@b+3
 16028  04BF  0022               	movlb	2	; select bank2
 16029  04C0  0848               	movf	(logf@s+2)^(0+256),w
 16030  04C1  0020               	movlb	0	; select bank0
 16031  04C2  00A8               	movwf	___flmul@b+2
 16032  04C3  0022               	movlb	2	; select bank2
 16033  04C4  0847               	movf	(logf@s+1)^(0+256),w
 16034  04C5  0020               	movlb	0	; select bank0
 16035  04C6  00A7               	movwf	___flmul@b+1
 16036  04C7  0022               	movlb	2	; select bank2
 16037  04C8  0846               	movf	logf@s^(0+256),w
 16038  04C9  0020               	movlb	0	; select bank0
 16039  04CA  00A6               	movwf	___flmul@b
 16040  04CB  0022               	movlb	2	; select bank2
 16041  04CC  0823               	movf	(logf@R+3)^(0+256),w
 16042  04CD  0020               	movlb	0	; select bank0
 16043  04CE  00DD               	movwf	___fladd@b+3
 16044  04CF  0022               	movlb	2	; select bank2
 16045  04D0  0822               	movf	(logf@R+2)^(0+256),w
 16046  04D1  0020               	movlb	0	; select bank0
 16047  04D2  00DC               	movwf	___fladd@b+2
 16048  04D3  0022               	movlb	2	; select bank2
 16049  04D4  0821               	movf	(logf@R+1)^(0+256),w
 16050  04D5  0020               	movlb	0	; select bank0
 16051  04D6  00DB               	movwf	___fladd@b+1
 16052  04D7  0022               	movlb	2	; select bank2
 16053  04D8  0820               	movf	logf@R^(0+256),w
 16054  04D9  0020               	movlb	0	; select bank0
 16055  04DA  00DA               	movwf	___fladd@b
 16056  04DB  0022               	movlb	2	; select bank2
 16057  04DC  0841               	movf	(logf@hfsq+3)^(0+256),w
 16058  04DD  0020               	movlb	0	; select bank0
 16059  04DE  00E1               	movwf	___fladd@a+3
 16060  04DF  0022               	movlb	2	; select bank2
 16061  04E0  0840               	movf	(logf@hfsq+2)^(0+256),w
 16062  04E1  0020               	movlb	0	; select bank0
 16063  04E2  00E0               	movwf	___fladd@a+2
 16064  04E3  0022               	movlb	2	; select bank2
 16065  04E4  083F               	movf	(logf@hfsq+1)^(0+256),w
 16066  04E5  0020               	movlb	0	; select bank0
 16067  04E6  00DF               	movwf	___fladd@a+1
 16068  04E7  0022               	movlb	2	; select bank2
 16069  04E8  083E               	movf	logf@hfsq^(0+256),w
 16070  04E9  0020               	movlb	0	; select bank0
 16071  04EA  00DE               	movwf	___fladd@a
 16072  04EB  3185  25FE  3180   	fcall	___fladd
 16073  04EE  0020               	movlb	0	; select bank0
 16074  04EF  085D               	movf	?___fladd+3,w
 16075  04F0  00AD               	movwf	___flmul@a+3
 16076  04F1  085C               	movf	?___fladd+2,w
 16077  04F2  00AC               	movwf	___flmul@a+2
 16078  04F3  085B               	movf	?___fladd+1,w
 16079  04F4  00AB               	movwf	___flmul@a+1
 16080  04F5  085A               	movf	?___fladd,w
 16081  04F6  00AA               	movwf	___flmul@a
 16082  04F7  3190  2023  3180   	fcall	___flmul
 16083  04FA  0020               	movlb	0	; select bank0
 16084  04FB  0829               	movf	?___flmul+3,w
 16085  04FC  0022               	movlb	2	; select bank2
 16086  04FD  00AF               	movwf	(_logf$2101+3)^(0+256)
 16087  04FE  0020               	movlb	0	; select bank0
 16088  04FF  0828               	movf	?___flmul+2,w
 16089  0500  0022               	movlb	2	; select bank2
 16090  0501  00AE               	movwf	(_logf$2101+2)^(0+256)
 16091  0502  0020               	movlb	0	; select bank0
 16092  0503  0827               	movf	?___flmul+1,w
 16093  0504  0022               	movlb	2	; select bank2
 16094  0505  00AD               	movwf	(_logf$2101+1)^(0+256)
 16095  0506  0020               	movlb	0	; select bank0
 16096  0507  0826               	movf	?___flmul,w
 16097  0508  0022               	movlb	2	; select bank2
 16098  0509  00AC               	movwf	_logf$2101^(0+256)
 16099  050A  3037               	movlw	55
 16100  050B  0020               	movlb	0	; select bank0
 16101  050C  00A9               	movwf	___flmul@b+3
 16102  050D  3017               	movlw	23
 16103  050E  00A8               	movwf	___flmul@b+2
 16104  050F  30F7               	movlw	247
 16105  0510  00A7               	movwf	___flmul@b+1
 16106  0511  30D1               	movlw	209
 16107  0512  00A6               	movwf	___flmul@b
 16108  0513  0022               	movlb	2	; select bank2
 16109  0514  0845               	movf	(logf@dk+3)^(0+256),w
 16110  0515  0020               	movlb	0	; select bank0
 16111  0516  00AD               	movwf	___flmul@a+3
 16112  0517  0022               	movlb	2	; select bank2
 16113  0518  0844               	movf	(logf@dk+2)^(0+256),w
 16114  0519  0020               	movlb	0	; select bank0
 16115  051A  00AC               	movwf	___flmul@a+2
 16116  051B  0022               	movlb	2	; select bank2
 16117  051C  0843               	movf	(logf@dk+1)^(0+256),w
 16118  051D  0020               	movlb	0	; select bank0
 16119  051E  00AB               	movwf	___flmul@a+1
 16120  051F  0022               	movlb	2	; select bank2
 16121  0520  0842               	movf	logf@dk^(0+256),w
 16122  0521  0020               	movlb	0	; select bank0
 16123  0522  00AA               	movwf	___flmul@a
 16124  0523  3190  2023  3180   	fcall	___flmul
 16125  0526  0020               	movlb	0	; select bank0
 16126  0527  0829               	movf	?___flmul+3,w
 16127  0528  00DD               	movwf	___fladd@b+3
 16128  0529  0828               	movf	?___flmul+2,w
 16129  052A  00DC               	movwf	___fladd@b+2
 16130  052B  0827               	movf	?___flmul+1,w
 16131  052C  00DB               	movwf	___fladd@b+1
 16132  052D  0826               	movf	?___flmul,w
 16133  052E  00DA               	movwf	___fladd@b
 16134  052F  0022               	movlb	2	; select bank2
 16135  0530  082F               	movf	(_logf$2101+3)^(0+256),w
 16136  0531  0020               	movlb	0	; select bank0
 16137  0532  00E1               	movwf	___fladd@a+3
 16138  0533  0022               	movlb	2	; select bank2
 16139  0534  082E               	movf	(_logf$2101+2)^(0+256),w
 16140  0535  0020               	movlb	0	; select bank0
 16141  0536  00E0               	movwf	___fladd@a+2
 16142  0537  0022               	movlb	2	; select bank2
 16143  0538  082D               	movf	(_logf$2101+1)^(0+256),w
 16144  0539  0020               	movlb	0	; select bank0
 16145  053A  00DF               	movwf	___fladd@a+1
 16146  053B  0022               	movlb	2	; select bank2
 16147  053C  082C               	movf	_logf$2101^(0+256),w
 16148  053D  0020               	movlb	0	; select bank0
 16149  053E  00DE               	movwf	___fladd@a
 16150  053F  3185  25FE  3180   	fcall	___fladd
 16151  0542  0020               	movlb	0	; select bank0
 16152  0543  085D               	movf	?___fladd+3,w
 16153  0544  0022               	movlb	2	; select bank2
 16154  0545  00B3               	movwf	(_logf$2102+3)^(0+256)
 16155  0546  0020               	movlb	0	; select bank0
 16156  0547  085C               	movf	?___fladd+2,w
 16157  0548  0022               	movlb	2	; select bank2
 16158  0549  00B2               	movwf	(_logf$2102+2)^(0+256)
 16159  054A  0020               	movlb	0	; select bank0
 16160  054B  085B               	movf	?___fladd+1,w
 16161  054C  0022               	movlb	2	; select bank2
 16162  054D  00B1               	movwf	(_logf$2102+1)^(0+256)
 16163  054E  0020               	movlb	0	; select bank0
 16164  054F  085A               	movf	?___fladd,w
 16165  0550  0022               	movlb	2	; select bank2
 16166  0551  00B0               	movwf	_logf$2102^(0+256)
 16167  0552  0841               	movf	(logf@hfsq+3)^(0+256),w
 16168  0553  0021               	movlb	1	; select bank1
 16169  0554  00A3               	movwf	(___flsub@a+3)^(0+128)
 16170  0555  0022               	movlb	2	; select bank2
 16171  0556  0840               	movf	(logf@hfsq+2)^(0+256),w
 16172  0557  0021               	movlb	1	; select bank1
 16173  0558  00A2               	movwf	(___flsub@a+2)^(0+128)
 16174  0559  0022               	movlb	2	; select bank2
 16175  055A  083F               	movf	(logf@hfsq+1)^(0+256),w
 16176  055B  0021               	movlb	1	; select bank1
 16177  055C  00A1               	movwf	(___flsub@a+1)^(0+128)
 16178  055D  0022               	movlb	2	; select bank2
 16179  055E  083E               	movf	logf@hfsq^(0+256),w
 16180  055F  0021               	movlb	1	; select bank1
 16181  0560  00A0               	movwf	___flsub@a^(0+128)
 16182  0561  0022               	movlb	2	; select bank2
 16183  0562  0833               	movf	(_logf$2102+3)^(0+256),w
 16184  0563  0021               	movlb	1	; select bank1
 16185  0564  00A7               	movwf	(___flsub@b+3)^(0+128)
 16186  0565  0022               	movlb	2	; select bank2
 16187  0566  0832               	movf	(_logf$2102+2)^(0+256),w
 16188  0567  0021               	movlb	1	; select bank1
 16189  0568  00A6               	movwf	(___flsub@b+2)^(0+128)
 16190  0569  0022               	movlb	2	; select bank2
 16191  056A  0831               	movf	(_logf$2102+1)^(0+256),w
 16192  056B  0021               	movlb	1	; select bank1
 16193  056C  00A5               	movwf	(___flsub@b+1)^(0+128)
 16194  056D  0022               	movlb	2	; select bank2
 16195  056E  0830               	movf	_logf$2102^(0+256),w
 16196  056F  0021               	movlb	1	; select bank1
 16197  0570  00A4               	movwf	___flsub@b^(0+128)
 16198  0571  31B5  2530  3180   	fcall	___flsub
 16199  0574  0021               	movlb	1	; select bank1
 16200  0575  0823               	movf	(?___flsub+3)^(0+128),w
 16201  0576  0022               	movlb	2	; select bank2
 16202  0577  00B7               	movwf	(_logf$2103+3)^(0+256)
 16203  0578  0021               	movlb	1	; select bank1
 16204  0579  0822               	movf	(?___flsub+2)^(0+128),w
 16205  057A  0022               	movlb	2	; select bank2
 16206  057B  00B6               	movwf	(_logf$2103+2)^(0+256)
 16207  057C  0021               	movlb	1	; select bank1
 16208  057D  0821               	movf	(?___flsub+1)^(0+128),w
 16209  057E  0022               	movlb	2	; select bank2
 16210  057F  00B5               	movwf	(_logf$2103+1)^(0+256)
 16211  0580  0021               	movlb	1	; select bank1
 16212  0581  0820               	movf	?___flsub^(0+128),w
 16213  0582  0022               	movlb	2	; select bank2
 16214  0583  00B4               	movwf	_logf$2103^(0+256)
 16215  0584  085D               	movf	(logf@f+3)^(0+256),w
 16216  0585  0020               	movlb	0	; select bank0
 16217  0586  00DD               	movwf	___fladd@b+3
 16218  0587  0022               	movlb	2	; select bank2
 16219  0588  085C               	movf	(logf@f+2)^(0+256),w
 16220  0589  0020               	movlb	0	; select bank0
 16221  058A  00DC               	movwf	___fladd@b+2
 16222  058B  0022               	movlb	2	; select bank2
 16223  058C  085B               	movf	(logf@f+1)^(0+256),w
 16224  058D  0020               	movlb	0	; select bank0
 16225  058E  00DB               	movwf	___fladd@b+1
 16226  058F  0022               	movlb	2	; select bank2
 16227  0590  085A               	movf	logf@f^(0+256),w
 16228  0591  0020               	movlb	0	; select bank0
 16229  0592  00DA               	movwf	___fladd@b
 16230  0593  0022               	movlb	2	; select bank2
 16231  0594  0837               	movf	(_logf$2103+3)^(0+256),w
 16232  0595  0020               	movlb	0	; select bank0
 16233  0596  00E1               	movwf	___fladd@a+3
 16234  0597  0022               	movlb	2	; select bank2
 16235  0598  0836               	movf	(_logf$2103+2)^(0+256),w
 16236  0599  0020               	movlb	0	; select bank0
 16237  059A  00E0               	movwf	___fladd@a+2
 16238  059B  0022               	movlb	2	; select bank2
 16239  059C  0835               	movf	(_logf$2103+1)^(0+256),w
 16240  059D  0020               	movlb	0	; select bank0
 16241  059E  00DF               	movwf	___fladd@a+1
 16242  059F  0022               	movlb	2	; select bank2
 16243  05A0  0834               	movf	_logf$2103^(0+256),w
 16244  05A1  0020               	movlb	0	; select bank0
 16245  05A2  00DE               	movwf	___fladd@a
 16246  05A3  3185  25FE  3180   	fcall	___fladd
 16247  05A6  0020               	movlb	0	; select bank0
 16248  05A7  085D               	movf	?___fladd+3,w
 16249  05A8  0022               	movlb	2	; select bank2
 16250  05A9  00BB               	movwf	(_logf$2104+3)^(0+256)
 16251  05AA  0020               	movlb	0	; select bank0
 16252  05AB  085C               	movf	?___fladd+2,w
 16253  05AC  0022               	movlb	2	; select bank2
 16254  05AD  00BA               	movwf	(_logf$2104+2)^(0+256)
 16255  05AE  0020               	movlb	0	; select bank0
 16256  05AF  085B               	movf	?___fladd+1,w
 16257  05B0  0022               	movlb	2	; select bank2
 16258  05B1  00B9               	movwf	(_logf$2104+1)^(0+256)
 16259  05B2  0020               	movlb	0	; select bank0
 16260  05B3  085A               	movf	?___fladd,w
 16261  05B4  0022               	movlb	2	; select bank2
 16262  05B5  00B8               	movwf	_logf$2104^(0+256)
 16263  05B6  303F               	movlw	63
 16264  05B7  0020               	movlb	0	; select bank0
 16265  05B8  00A9               	movwf	___flmul@b+3
 16266  05B9  3031               	movlw	49
 16267  05BA  00A8               	movwf	___flmul@b+2
 16268  05BB  3071               	movlw	113
 16269  05BC  00A7               	movwf	___flmul@b+1
 16270  05BD  3080               	movlw	128
 16271  05BE  00A6               	movwf	___flmul@b
 16272  05BF  0022               	movlb	2	; select bank2
 16273  05C0  0845               	movf	(logf@dk+3)^(0+256),w
 16274  05C1  0020               	movlb	0	; select bank0
 16275  05C2  00AD               	movwf	___flmul@a+3
 16276  05C3  0022               	movlb	2	; select bank2
 16277  05C4  0844               	movf	(logf@dk+2)^(0+256),w
 16278  05C5  0020               	movlb	0	; select bank0
 16279  05C6  00AC               	movwf	___flmul@a+2
 16280  05C7  0022               	movlb	2	; select bank2
 16281  05C8  0843               	movf	(logf@dk+1)^(0+256),w
 16282  05C9  0020               	movlb	0	; select bank0
 16283  05CA  00AB               	movwf	___flmul@a+1
 16284  05CB  0022               	movlb	2	; select bank2
 16285  05CC  0842               	movf	logf@dk^(0+256),w
 16286  05CD  0020               	movlb	0	; select bank0
 16287  05CE  00AA               	movwf	___flmul@a
 16288  05CF  3190  2023  3180   	fcall	___flmul
 16289  05D2  0020               	movlb	0	; select bank0
 16290  05D3  0829               	movf	?___flmul+3,w
 16291  05D4  00DD               	movwf	___fladd@b+3
 16292  05D5  0828               	movf	?___flmul+2,w
 16293  05D6  00DC               	movwf	___fladd@b+2
 16294  05D7  0827               	movf	?___flmul+1,w
 16295  05D8  00DB               	movwf	___fladd@b+1
 16296  05D9  0826               	movf	?___flmul,w
 16297  05DA  00DA               	movwf	___fladd@b
 16298  05DB  0022               	movlb	2	; select bank2
 16299  05DC  083B               	movf	(_logf$2104+3)^(0+256),w
 16300  05DD  0020               	movlb	0	; select bank0
 16301  05DE  00E1               	movwf	___fladd@a+3
 16302  05DF  0022               	movlb	2	; select bank2
 16303  05E0  083A               	movf	(_logf$2104+2)^(0+256),w
 16304  05E1  0020               	movlb	0	; select bank0
 16305  05E2  00E0               	movwf	___fladd@a+2
 16306  05E3  0022               	movlb	2	; select bank2
 16307  05E4  0839               	movf	(_logf$2104+1)^(0+256),w
 16308  05E5  0020               	movlb	0	; select bank0
 16309  05E6  00DF               	movwf	___fladd@a+1
 16310  05E7  0022               	movlb	2	; select bank2
 16311  05E8  0838               	movf	_logf$2104^(0+256),w
 16312  05E9  0020               	movlb	0	; select bank0
 16313  05EA  00DE               	movwf	___fladd@a
 16314  05EB  3185  25FE         	fcall	___fladd
 16315  05ED  0020               	movlb	0	; select bank0
 16316  05EE  085D               	movf	?___fladd+3,w
 16317  05EF  0021               	movlb	1	; select bank1
 16318  05F0  00AB               	movwf	(?_logf+3)^(0+128)
 16319  05F1  0020               	movlb	0	; select bank0
 16320  05F2  085C               	movf	?___fladd+2,w
 16321  05F3  0021               	movlb	1	; select bank1
 16322  05F4  00AA               	movwf	(?_logf+2)^(0+128)
 16323  05F5  0020               	movlb	0	; select bank0
 16324  05F6  085B               	movf	?___fladd+1,w
 16325  05F7  0021               	movlb	1	; select bank1
 16326  05F8  00A9               	movwf	(?_logf+1)^(0+128)
 16327  05F9  0020               	movlb	0	; select bank0
 16328  05FA  085A               	movf	?___fladd,w
 16329  05FB  0021               	movlb	1	; select bank1
 16330  05FC  00A8               	movwf	?_logf^(0+128)
 16331  05FD  0008               	return
 16332  05FE                     __end_of_logf:	
 16333                           
 16334                           	psect	text51
 16335  2CDC                     __ptext51:	
 16336 ;; *************** function _updateCurrent *****************
 16337 ;; Defined at:
 16338 ;;		line 195 in file "BQ76920.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;		None
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  adcVal          2   21[BANK1 ] int 
 16343 ;;  sys_stat        1    0        struct regSYS_STAT
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  1    wreg      void 
 16346 ;; Registers used:
 16347 ;;		wreg, status,2, status,0, pclath, cstack
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16354 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16355 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16356 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16357 ;;Total ram usage:        6 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:    3
 16360 ;; This function calls:
 16361 ;;		_I2C_writeRegister
 16362 ;;		___fldiv
 16363 ;;		___flmul
 16364 ;;		___flneg
 16365 ;;		___fltol
 16366 ;;		___xxtofl
 16367 ;;		_readRegister
 16368 ;; This function is called by:
 16369 ;;		_AFE_UPDATE
 16370 ;; This function uses a non-reentrant model
 16371 ;;
 16372                           
 16373                           
 16374                           ;psect for function _updateCurrent
 16375  2CDC                     _updateCurrent:	
 16376                           
 16377                           ;incstack = 0
 16378                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16379  2CDC  3018               	movlw	24
 16380  2CDD  00F5               	movwf	readRegister@slaveAddress
 16381  2CDE  3000               	movlw	0
 16382  2CDF  00F6               	movwf	readRegister@slaveAddress+1
 16383  2CE0  3000               	movlw	0
 16384  2CE1  00F7               	movwf	readRegister@regAddress
 16385  2CE2  00F8               	movwf	readRegister@regAddress+1
 16386  2CE3  31B5  2565  31AC   	fcall	_readRegister
 16387                           
 16388                           ;BQ76920.c: 202:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16389  2CE6  3018               	movlw	24
 16390  2CE7  00F5               	movwf	readRegister@slaveAddress
 16391  2CE8  3000               	movlw	0
 16392  2CE9  00F6               	movwf	readRegister@slaveAddress+1
 16393  2CEA  3032               	movlw	50
 16394  2CEB  00F7               	movwf	readRegister@regAddress
 16395  2CEC  3000               	movlw	0
 16396  2CED  00F8               	movwf	readRegister@regAddress+1
 16397  2CEE  31B5  2565  31AC   	fcall	_readRegister
 16398  2CF1  0875               	movf	?_readRegister,w
 16399  2CF2  0021               	movlb	1	; select bank1
 16400  2CF3  00B1               	movwf	??_updateCurrent^(0+128)
 16401  2CF4  0876               	movf	?_readRegister+1,w
 16402  2CF5  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16403  2CF6  0831               	movf	??_updateCurrent^(0+128),w
 16404  2CF7  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16405  2CF8  01B1               	clrf	??_updateCurrent^(0+128)
 16406  2CF9  3018               	movlw	24
 16407  2CFA  00F5               	movwf	readRegister@slaveAddress
 16408  2CFB  3000               	movlw	0
 16409  2CFC  00F6               	movwf	readRegister@slaveAddress+1
 16410  2CFD  3033               	movlw	51
 16411  2CFE  00F7               	movwf	readRegister@regAddress
 16412  2CFF  3000               	movlw	0
 16413  2D00  00F8               	movwf	readRegister@regAddress+1
 16414  2D01  31B5  2565  31AC   	fcall	_readRegister
 16415  2D04  0875               	movf	?_readRegister,w
 16416  2D05  0021               	movlb	1	; select bank1
 16417  2D06  0431               	iorwf	??_updateCurrent^(0+128),w
 16418  2D07  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16419  2D08  0876               	movf	?_readRegister+1,w
 16420  2D09  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16421  2D0A  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16422                           
 16423                           ;BQ76920.c: 203:     batCurrent = -(adcVal * 8.44 / 19.6);
 16424  2D0B  0835               	movf	updateCurrent@adcVal^(0+128),w
 16425  2D0C  00F1               	movwf	___xxtofl@val
 16426  2D0D  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16427  2D0E  00F2               	movwf	___xxtofl@val+1
 16428  2D0F  0D89               	rlf	9,f
 16429  2D10  3B89               	subwfb	9,f
 16430  2D11  0989               	comf	9,f
 16431  2D12  00F3               	movwf	___xxtofl@val+2
 16432  2D13  00F4               	movwf	___xxtofl@val+3
 16433  2D14  3001               	movlw	1
 16434  2D15  31AA  22E9  31AC   	fcall	___xxtofl
 16435  2D18  0874               	movf	?___xxtofl+3,w
 16436  2D19  0020               	movlb	0	; select bank0
 16437  2D1A  00AD               	movwf	___flmul@a+3
 16438  2D1B  0873               	movf	?___xxtofl+2,w
 16439  2D1C  00AC               	movwf	___flmul@a+2
 16440  2D1D  0872               	movf	?___xxtofl+1,w
 16441  2D1E  00AB               	movwf	___flmul@a+1
 16442  2D1F  0871               	movf	?___xxtofl,w
 16443  2D20  00AA               	movwf	___flmul@a
 16444  2D21  3041               	movlw	65
 16445  2D22  00A9               	movwf	___flmul@b+3
 16446  2D23  3007               	movlw	7
 16447  2D24  00A8               	movwf	___flmul@b+2
 16448  2D25  300A               	movlw	10
 16449  2D26  00A7               	movwf	___flmul@b+1
 16450  2D27  303D               	movlw	61
 16451  2D28  00A6               	movwf	___flmul@b
 16452  2D29  3190  2023  31AC   	fcall	___flmul
 16453  2D2C  0020               	movlb	0	; select bank0
 16454  2D2D  0829               	movf	?___flmul+3,w
 16455  2D2E  00C7               	movwf	___fldiv@b+3
 16456  2D2F  0828               	movf	?___flmul+2,w
 16457  2D30  00C6               	movwf	___fldiv@b+2
 16458  2D31  0827               	movf	?___flmul+1,w
 16459  2D32  00C5               	movwf	___fldiv@b+1
 16460  2D33  0826               	movf	?___flmul,w
 16461  2D34  00C4               	movwf	___fldiv@b
 16462  2D35  3041               	movlw	65
 16463  2D36  00C3               	movwf	___fldiv@a+3
 16464  2D37  309C               	movlw	156
 16465  2D38  00C2               	movwf	___fldiv@a+2
 16466  2D39  30CC               	movlw	204
 16467  2D3A  00C1               	movwf	___fldiv@a+1
 16468  2D3B  30CD               	movlw	205
 16469  2D3C  00C0               	movwf	___fldiv@a
 16470  2D3D  319C  24E2  31AC   	fcall	___fldiv
 16471  2D40  0020               	movlb	0	; select bank0
 16472  2D41  0843               	movf	?___fldiv+3,w
 16473  2D42  00DD               	movwf	___flneg@f1+3
 16474  2D43  0842               	movf	?___fldiv+2,w
 16475  2D44  00DC               	movwf	___flneg@f1+2
 16476  2D45  0841               	movf	?___fldiv+1,w
 16477  2D46  00DB               	movwf	___flneg@f1+1
 16478  2D47  0840               	movf	?___fldiv,w
 16479  2D48  00DA               	movwf	___flneg@f1
 16480  2D49  31B2  2261  31AC   	fcall	___flneg
 16481  2D4C  0020               	movlb	0	; select bank0
 16482  2D4D  085D               	movf	?___flneg+3,w
 16483  2D4E  0021               	movlb	1	; select bank1
 16484  2D4F  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16485  2D50  0020               	movlb	0	; select bank0
 16486  2D51  085C               	movf	?___flneg+2,w
 16487  2D52  0021               	movlb	1	; select bank1
 16488  2D53  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16489  2D54  0020               	movlb	0	; select bank0
 16490  2D55  085B               	movf	?___flneg+1,w
 16491  2D56  0021               	movlb	1	; select bank1
 16492  2D57  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16493  2D58  0020               	movlb	0	; select bank0
 16494  2D59  085A               	movf	?___flneg,w
 16495  2D5A  0021               	movlb	1	; select bank1
 16496  2D5B  00A8               	movwf	___fltol@f1^(0+128)
 16497  2D5C  31B7  279A  31AC   	fcall	___fltol
 16498  2D5F  0021               	movlb	1	; select bank1
 16499  2D60  082B               	movf	(?___fltol+3)^(0+128),w
 16500  2D61  0023               	movlb	3	; select bank3
 16501  2D62  00CD               	movwf	(_batCurrent+3)^(0+384)
 16502  2D63  0021               	movlb	1	; select bank1
 16503  2D64  082A               	movf	(?___fltol+2)^(0+128),w
 16504  2D65  0023               	movlb	3	; select bank3
 16505  2D66  00CC               	movwf	(_batCurrent+2)^(0+384)
 16506  2D67  0021               	movlb	1	; select bank1
 16507  2D68  0829               	movf	(?___fltol+1)^(0+128),w
 16508  2D69  0023               	movlb	3	; select bank3
 16509  2D6A  00CB               	movwf	(_batCurrent+1)^(0+384)
 16510  2D6B  0021               	movlb	1	; select bank1
 16511  2D6C  0828               	movf	?___fltol^(0+128),w
 16512  2D6D  0023               	movlb	3	; select bank3
 16513  2D6E  00CA               	movwf	_batCurrent^(0+384)
 16514                           
 16515                           ;BQ76920.c: 205:     if (batCurrent > -10 && batCurrent < 10)
 16516  2D6F  1FCD               	btfss	(_batCurrent+3)^(0+384),7
 16517  2D70  2D7B               	goto	l7433
 16518  2D71  30F7               	movlw	247
 16519  2D72  024A               	subwf	_batCurrent^(0+384),w
 16520  2D73  30FF               	movlw	255
 16521  2D74  3B4B               	subwfb	(_batCurrent+1)^(0+384),w
 16522  2D75  30FF               	movlw	255
 16523  2D76  3B4C               	subwfb	(_batCurrent+2)^(0+384),w
 16524  2D77  30FF               	movlw	255
 16525  2D78  3B4D               	subwfb	(_batCurrent+3)^(0+384),w
 16526  2D79  1C03               	btfss	3,0
 16527  2D7A  2D92               	goto	l7437
 16528  2D7B                     l7433:	
 16529  2D7B  1BCD               	btfsc	(_batCurrent+3)^(0+384),7
 16530  2D7C  2D8A               	goto	l7435
 16531  2D7D  084D               	movf	(_batCurrent+3)^(0+384),w
 16532  2D7E  1D03               	btfss	3,2
 16533  2D7F  2D92               	goto	l7437
 16534  2D80  084C               	movf	(_batCurrent+2)^(0+384),w
 16535  2D81  1D03               	btfss	3,2
 16536  2D82  2D92               	goto	l7437
 16537  2D83  084B               	movf	(_batCurrent+1)^(0+384),w
 16538  2D84  1D03               	btfss	3,2
 16539  2D85  2D92               	goto	l7437
 16540  2D86  300A               	movlw	10
 16541  2D87  024A               	subwf	_batCurrent^(0+384),w
 16542  2D88  1803               	btfsc	3,0
 16543  2D89  2D92               	goto	l7437
 16544  2D8A                     l7435:	
 16545                           
 16546                           ;BQ76920.c: 206:     {;BQ76920.c: 207:       batCurrent = 0;
 16547  2D8A  3000               	movlw	0
 16548  2D8B  00CD               	movwf	(_batCurrent+3)^(0+384)
 16549  2D8C  3000               	movlw	0
 16550  2D8D  00CC               	movwf	(_batCurrent+2)^(0+384)
 16551  2D8E  3000               	movlw	0
 16552  2D8F  00CB               	movwf	(_batCurrent+1)^(0+384)
 16553  2D90  3000               	movlw	0
 16554  2D91  00CA               	movwf	_batCurrent^(0+384)
 16555  2D92                     l7437:	
 16556                           
 16557                           ;BQ76920.c: 210:     I2C_writeRegister(0x18, 0x00, 0x80);
 16558  2D92  3018               	movlw	24
 16559  2D93  00F5               	movwf	I2C_writeRegister@slaveAddress
 16560  2D94  3000               	movlw	0
 16561  2D95  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16562  2D96  3000               	movlw	0
 16563  2D97  00F7               	movwf	I2C_writeRegister@regAddress
 16564  2D98  00F8               	movwf	I2C_writeRegister@regAddress+1
 16565  2D99  3080               	movlw	128
 16566  2D9A  00F9               	movwf	I2C_writeRegister@data
 16567  2D9B  3000               	movlw	0
 16568  2D9C  00FA               	movwf	I2C_writeRegister@data+1
 16569  2D9D  31B3  23B3         	fcall	_I2C_writeRegister
 16570  2D9F  0008               	return
 16571  2DA0                     __end_of_updateCurrent:	
 16572                           
 16573                           	psect	text52
 16574  3261                     __ptext52:	
 16575 ;; *************** function ___flneg *****************
 16576 ;; Defined at:
 16577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;  f1              4   58[BANK0 ] void 
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;		None
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  4   58[BANK0 ] void 
 16584 ;; Registers used:
 16585 ;;		wreg
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16595 ;;Total ram usage:        4 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:    1
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_updateCurrent
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           
 16606                           ;psect for function ___flneg
 16607  3261                     ___flneg:	
 16608                           
 16609                           ;incstack = 0
 16610                           ; Regs used in ___flneg: [wreg]
 16611  3261  0020               	movlb	0	; select bank0
 16612  3262  085D               	movf	___flneg@f1+3,w
 16613  3263  045C               	iorwf	___flneg@f1+2,w
 16614  3264  045B               	iorwf	___flneg@f1+1,w
 16615  3265  045A               	iorwf	___flneg@f1,w
 16616  3266  1903               	skipnz
 16617  3267  0008               	return
 16618  3268  3080               	movlw	128
 16619  3269  06DD               	xorwf	___flneg@f1+3,f
 16620  326A  0008               	return
 16621  326B                     __end_of___flneg:	
 16622                           
 16623                           	psect	text53
 16624  35D2                     __ptext53:	
 16625 ;; *************** function _enableDischarging *****************
 16626 ;; Defined at:
 16627 ;;		line 286 in file "BQ76920.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  enable          2    0[BANK0 ] unsigned int 
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  1    wreg      void 
 16634 ;; Registers used:
 16635 ;;		wreg, status,2, status,0, pclath, cstack
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16644 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16645 ;;Total ram usage:        5 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; Hardware stack levels required when called:    3
 16648 ;; This function calls:
 16649 ;;		_I2C_writeRegister
 16650 ;;		_readRegister
 16651 ;; This function is called by:
 16652 ;;		_AFE_UPDATE
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           
 16657                           ;psect for function _enableDischarging
 16658  35D2                     _enableDischarging:	
 16659                           
 16660                           ;BQ76920.c: 287:     uint8_t sys_ctrl2;;BQ76920.c: 288:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16661                           
 16662                           ;incstack = 0
 16663                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 16664  35D2  3018               	movlw	24
 16665  35D3  00F5               	movwf	readRegister@slaveAddress
 16666  35D4  3000               	movlw	0
 16667  35D5  00F6               	movwf	readRegister@slaveAddress+1
 16668  35D6  3005               	movlw	5
 16669  35D7  00F7               	movwf	readRegister@regAddress
 16670  35D8  3000               	movlw	0
 16671  35D9  00F8               	movwf	readRegister@regAddress+1
 16672  35DA  31B5  2565  31B5   	fcall	_readRegister
 16673  35DD  0875               	movf	?_readRegister,w
 16674  35DE  0020               	movlb	0	; select bank0
 16675  35DF  00A2               	movwf	??_enableDischarging
 16676  35E0  0822               	movf	??_enableDischarging,w
 16677  35E1  00FB               	movwf	enableDischarging@sys_ctrl2
 16678                           
 16679                           ;BQ76920.c: 289:     if(enable){
 16680  35E2  0820               	movf	enableDischarging@enable,w
 16681  35E3  0421               	iorwf	enableDischarging@enable+1,w
 16682  35E4  1903               	btfsc	3,2
 16683  35E5  2DF6               	goto	l7483
 16684                           
 16685                           ;BQ76920.c: 290:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 16686  35E6  3018               	movlw	24
 16687  35E7  00F5               	movwf	I2C_writeRegister@slaveAddress
 16688  35E8  3000               	movlw	0
 16689  35E9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16690  35EA  3005               	movlw	5
 16691  35EB  00F7               	movwf	I2C_writeRegister@regAddress
 16692  35EC  3000               	movlw	0
 16693  35ED  00F8               	movwf	I2C_writeRegister@regAddress+1
 16694  35EE  3002               	movlw	2
 16695  35EF  047B               	iorwf	enableDischarging@sys_ctrl2,w
 16696  35F0  00F9               	movwf	I2C_writeRegister@data
 16697  35F1  3000               	movlw	0
 16698  35F2  00FA               	movwf	I2C_writeRegister@data+1
 16699  35F3  31B3  23B3         	fcall	_I2C_writeRegister
 16700                           
 16701                           ;BQ76920.c: 291:     }else{
 16702  35F5  0008               	return
 16703  35F6                     l7483:	
 16704                           
 16705                           ;BQ76920.c: 292:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 16706  35F6  3018               	movlw	24
 16707  35F7  00F5               	movwf	I2C_writeRegister@slaveAddress
 16708  35F8  3000               	movlw	0
 16709  35F9  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16710  35FA  3005               	movlw	5
 16711  35FB  00F7               	movwf	I2C_writeRegister@regAddress
 16712  35FC  3000               	movlw	0
 16713  35FD  00F8               	movwf	I2C_writeRegister@regAddress+1
 16714  35FE  087B               	movf	enableDischarging@sys_ctrl2,w
 16715  35FF  39FD               	andlw	253
 16716  3600  00A2               	movwf	??_enableDischarging
 16717  3601  01A3               	clrf	??_enableDischarging+1
 16718  3602  0822               	movf	??_enableDischarging,w
 16719  3603  00F9               	movwf	I2C_writeRegister@data
 16720  3604  0823               	movf	??_enableDischarging+1,w
 16721  3605  00FA               	movwf	I2C_writeRegister@data+1
 16722  3606  31B3  23B3         	fcall	_I2C_writeRegister
 16723  3608  0008               	return
 16724  3609                     __end_of_enableDischarging:	
 16725                           
 16726                           	psect	text54
 16727  359B                     __ptext54:	
 16728 ;; *************** function _enableCharging *****************
 16729 ;; Defined at:
 16730 ;;		line 296 in file "BQ76920.c"
 16731 ;; Parameters:    Size  Location     Type
 16732 ;;  enable          2    0[BANK0 ] unsigned int 
 16733 ;; Auto vars:     Size  Location     Type
 16734 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16735 ;; Return value:  Size  Location     Type
 16736 ;;                  1    wreg      void 
 16737 ;; Registers used:
 16738 ;;		wreg, status,2, status,0, pclath, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16747 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16748 ;;Total ram usage:        5 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:    3
 16751 ;; This function calls:
 16752 ;;		_I2C_writeRegister
 16753 ;;		_readRegister
 16754 ;; This function is called by:
 16755 ;;		_AFE_UPDATE
 16756 ;; This function uses a non-reentrant model
 16757 ;;
 16758                           
 16759                           
 16760                           ;psect for function _enableCharging
 16761  359B                     _enableCharging:	
 16762                           
 16763                           ;BQ76920.c: 297:     uint8_t sys_ctrl2;;BQ76920.c: 298:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16764                           
 16765                           ;incstack = 0
 16766                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 16767  359B  3018               	movlw	24
 16768  359C  00F5               	movwf	readRegister@slaveAddress
 16769  359D  3000               	movlw	0
 16770  359E  00F6               	movwf	readRegister@slaveAddress+1
 16771  359F  3005               	movlw	5
 16772  35A0  00F7               	movwf	readRegister@regAddress
 16773  35A1  3000               	movlw	0
 16774  35A2  00F8               	movwf	readRegister@regAddress+1
 16775  35A3  31B5  2565  31B5   	fcall	_readRegister
 16776  35A6  0875               	movf	?_readRegister,w
 16777  35A7  0020               	movlb	0	; select bank0
 16778  35A8  00A2               	movwf	??_enableCharging
 16779  35A9  0822               	movf	??_enableCharging,w
 16780  35AA  00FB               	movwf	enableCharging@sys_ctrl2
 16781                           
 16782                           ;BQ76920.c: 299:     if(enable){
 16783  35AB  0820               	movf	enableCharging@enable,w
 16784  35AC  0421               	iorwf	enableCharging@enable+1,w
 16785  35AD  1903               	btfsc	3,2
 16786  35AE  2DBF               	goto	l7491
 16787                           
 16788                           ;BQ76920.c: 300:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 16789  35AF  3018               	movlw	24
 16790  35B0  00F5               	movwf	I2C_writeRegister@slaveAddress
 16791  35B1  3000               	movlw	0
 16792  35B2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16793  35B3  3005               	movlw	5
 16794  35B4  00F7               	movwf	I2C_writeRegister@regAddress
 16795  35B5  3000               	movlw	0
 16796  35B6  00F8               	movwf	I2C_writeRegister@regAddress+1
 16797  35B7  3001               	movlw	1
 16798  35B8  047B               	iorwf	enableCharging@sys_ctrl2,w
 16799  35B9  00F9               	movwf	I2C_writeRegister@data
 16800  35BA  3000               	movlw	0
 16801  35BB  00FA               	movwf	I2C_writeRegister@data+1
 16802  35BC  31B3  23B3         	fcall	_I2C_writeRegister
 16803                           
 16804                           ;BQ76920.c: 301:     }else{
 16805  35BE  0008               	return
 16806  35BF                     l7491:	
 16807                           
 16808                           ;BQ76920.c: 302:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 16809  35BF  3018               	movlw	24
 16810  35C0  00F5               	movwf	I2C_writeRegister@slaveAddress
 16811  35C1  3000               	movlw	0
 16812  35C2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16813  35C3  3005               	movlw	5
 16814  35C4  00F7               	movwf	I2C_writeRegister@regAddress
 16815  35C5  3000               	movlw	0
 16816  35C6  00F8               	movwf	I2C_writeRegister@regAddress+1
 16817  35C7  087B               	movf	enableCharging@sys_ctrl2,w
 16818  35C8  39FE               	andlw	254
 16819  35C9  00A2               	movwf	??_enableCharging
 16820  35CA  01A3               	clrf	??_enableCharging+1
 16821  35CB  0822               	movf	??_enableCharging,w
 16822  35CC  00F9               	movwf	I2C_writeRegister@data
 16823  35CD  0823               	movf	??_enableCharging+1,w
 16824  35CE  00FA               	movwf	I2C_writeRegister@data+1
 16825  35CF  31B3  23B3         	fcall	_I2C_writeRegister
 16826  35D1  0008               	return
 16827  35D2                     __end_of_enableCharging:	
 16828                           
 16829                           	psect	text55
 16830  3565                     __ptext55:	
 16831 ;; *************** function _readRegister *****************
 16832 ;; Defined at:
 16833 ;;		line 115 in file "I2C.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;  slaveAddress    2    5[COMMON] int 
 16836 ;;  regAddress      2    7[COMMON] int 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;  recievedData    2    9[COMMON] int 
 16839 ;; Return value:  Size  Location     Type
 16840 ;;                  2    5[COMMON] int 
 16841 ;; Registers used:
 16842 ;;		wreg, status,2, status,0, pclath, cstack
 16843 ;; Tracked objects:
 16844 ;;		On entry : 0/0
 16845 ;;		On exit  : 0/0
 16846 ;;		Unchanged: 0/0
 16847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16852 ;;Total ram usage:        6 bytes
 16853 ;; Hardware stack levels used:    1
 16854 ;; Hardware stack levels required when called:    2
 16855 ;; This function calls:
 16856 ;;		_read_I2C_data
 16857 ;;		_send_I2C_NACK
 16858 ;;		_send_I2C_controlByte
 16859 ;;		_send_I2C_data
 16860 ;;		_send_I2C_startBit
 16861 ;;		_send_I2C_stopBit
 16862 ;; This function is called by:
 16863 ;;		_beginAFEcommunication
 16864 ;;		_setCellUndervoltageProtection
 16865 ;;		_setCellOvervoltageProtection
 16866 ;;		_updateCurrent
 16867 ;;		_updateVoltages
 16868 ;;		_updateTemperatures
 16869 ;;		_enableDischarging
 16870 ;;		_enableCharging
 16871 ;;		_printotAFERegisters
 16872 ;; This function uses a non-reentrant model
 16873 ;;
 16874                           
 16875                           
 16876                           ;psect for function _readRegister
 16877  3565                     _readRegister:	
 16878                           
 16879                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 16880                           
 16881                           ;incstack = 0
 16882                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 16883  3565  31B2  2235  31B5   	fcall	_send_I2C_startBit
 16884                           
 16885                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 16886  3568  0876               	movf	readRegister@slaveAddress+1,w
 16887  3569  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16888  356A  0875               	movf	readRegister@slaveAddress,w
 16889  356B  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16890  356C  3000               	movlw	0
 16891  356D  00F3               	movwf	send_I2C_controlByte@RW_bit
 16892  356E  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16893  356F  31B2  2257  31B5   	fcall	_send_I2C_controlByte
 16894                           
 16895                           ;I2C.c: 119:     send_I2C_data(regAddress);
 16896  3572  0878               	movf	readRegister@regAddress+1,w
 16897  3573  00F2               	movwf	send_I2C_data@databyte+1
 16898  3574  0877               	movf	readRegister@regAddress,w
 16899  3575  00F1               	movwf	send_I2C_data@databyte
 16900  3576  31B2  224E  31B5   	fcall	_send_I2C_data
 16901                           
 16902                           ;I2C.c: 120:     send_I2C_stopBit();
 16903  3579  31B2  223D  31B5   	fcall	_send_I2C_stopBit
 16904                           
 16905                           ;I2C.c: 121:     send_I2C_startBit();
 16906  357C  31B2  2235  31B5   	fcall	_send_I2C_startBit
 16907                           
 16908                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 16909  357F  0876               	movf	readRegister@slaveAddress+1,w
 16910  3580  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16911  3581  0875               	movf	readRegister@slaveAddress,w
 16912  3582  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16913  3583  3001               	movlw	1
 16914  3584  00F3               	movwf	send_I2C_controlByte@RW_bit
 16915  3585  3000               	movlw	0
 16916  3586  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16917  3587  31B2  2257  31B5   	fcall	_send_I2C_controlByte
 16918                           
 16919                           ;I2C.c: 123:     recievedData = read_I2C_data();
 16920  358A  31A8  2001  31B5   	fcall	_read_I2C_data
 16921  358D  0872               	movf	?_read_I2C_data+1,w
 16922  358E  00FA               	movwf	readRegister@recievedData+1
 16923  358F  0871               	movf	?_read_I2C_data,w
 16924  3590  00F9               	movwf	readRegister@recievedData
 16925                           
 16926                           ;I2C.c: 124:     send_I2C_NACK();
 16927  3591  3198  2000  31B5   	fcall	_send_I2C_NACK
 16928                           
 16929                           ;I2C.c: 125:     send_I2C_stopBit();
 16930  3594  31B2  223D         	fcall	_send_I2C_stopBit
 16931                           
 16932                           ;I2C.c: 126:     return recievedData;
 16933  3596  087A               	movf	readRegister@recievedData+1,w
 16934  3597  00F6               	movwf	?_readRegister+1
 16935  3598  0879               	movf	readRegister@recievedData,w
 16936  3599  00F5               	movwf	?_readRegister
 16937  359A  0008               	return
 16938  359B                     __end_of_readRegister:	
 16939                           
 16940                           	psect	text56
 16941  1800                     __ptext56:	
 16942 ;; *************** function _send_I2C_NACK *****************
 16943 ;; Defined at:
 16944 ;;		line 91 in file "I2C.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		None
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; Hardware stack levels required when called:    1
 16965 ;; This function calls:
 16966 ;;		Nothing
 16967 ;; This function is called by:
 16968 ;;		_readRegister
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           
 16973                           ;psect for function _send_I2C_NACK
 16974  1800                     _send_I2C_NACK:	
 16975                           
 16976                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 16977                           
 16978                           ;incstack = 0
 16979                           ; Regs used in _send_I2C_NACK: []
 16980  1800  0020               	movlb	0	; select bank0
 16981  1801  1191               	bcf	17,3	;volatile
 16982                           
 16983                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 16984  1802  0024               	movlb	4	; select bank4
 16985  1803  1696               	bsf	22,5	;volatile
 16986                           
 16987                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 16988  1804  1616               	bsf	22,4	;volatile
 16989  1805                     l330:	
 16990                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 16991                           
 16992  1805  0020               	movlb	0	; select bank0
 16993  1806  1991               	btfsc	17,3	;volatile
 16994  1807  0008               	return
 16995  1808  2805               	goto	l330
 16996  1809                     __end_of_send_I2C_NACK:	
 16997                           
 16998                           	psect	text57
 16999  2801                     __ptext57:	
 17000 ;; *************** function _read_I2C_data *****************
 17001 ;; Defined at:
 17002 ;;		line 43 in file "I2C.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;		None
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;		None
 17007 ;; Return value:  Size  Location     Type
 17008 ;;                  2    1[COMMON] unsigned int 
 17009 ;; Registers used:
 17010 ;;		wreg
 17011 ;; Tracked objects:
 17012 ;;		On entry : 0/0
 17013 ;;		On exit  : 0/0
 17014 ;;		Unchanged: 0/0
 17015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17020 ;;Total ram usage:        4 bytes
 17021 ;; Hardware stack levels used:    1
 17022 ;; Hardware stack levels required when called:    1
 17023 ;; This function calls:
 17024 ;;		Nothing
 17025 ;; This function is called by:
 17026 ;;		_readRegister
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           
 17031                           ;psect for function _read_I2C_data
 17032  2801                     _read_I2C_data:	
 17033                           
 17034                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 17035                           
 17036                           ;incstack = 0
 17037                           ; Regs used in _read_I2C_data: [wreg]
 17038  2801  0020               	movlb	0	; select bank0
 17039  2802  1191               	bcf	17,3	;volatile
 17040                           
 17041                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 17042  2803  0024               	movlb	4	; select bank4
 17043  2804  1596               	bsf	22,3	;volatile
 17044  2805                     l294:	
 17045                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 17046                           
 17047  2805  0020               	movlb	0	; select bank0
 17048  2806  1D91               	btfss	17,3	;volatile
 17049  2807  2805               	goto	l294
 17050                           
 17051                           ;I2C.c: 47:     return (SSPBUF);
 17052  2808  0024               	movlb	4	; select bank4
 17053  2809  0811               	movf	17,w	;volatile
 17054  280A  00F3               	movwf	??_read_I2C_data
 17055  280B  01F4               	clrf	??_read_I2C_data+1
 17056  280C  0873               	movf	??_read_I2C_data,w
 17057  280D  00F1               	movwf	?_read_I2C_data
 17058  280E  0874               	movf	??_read_I2C_data+1,w
 17059  280F  00F2               	movwf	?_read_I2C_data+1
 17060  2810  0008               	return
 17061  2811                     __end_of_read_I2C_data:	
 17062                           
 17063                           	psect	text58
 17064  33B3                     __ptext58:	
 17065 ;; *************** function _I2C_writeRegister *****************
 17066 ;; Defined at:
 17067 ;;		line 104 in file "I2C.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;  slaveAddress    2    5[COMMON] int 
 17070 ;;  regAddress      2    7[COMMON] int 
 17071 ;;  data            2    9[COMMON] int 
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;		None
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  1    wreg      void 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0, pclath, cstack
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17083 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17087 ;;Total ram usage:        6 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:    2
 17090 ;; This function calls:
 17091 ;;		_send_I2C_controlByte
 17092 ;;		_send_I2C_data
 17093 ;;		_send_I2C_startBit
 17094 ;;		_send_I2C_stopBit
 17095 ;; This function is called by:
 17096 ;;		_beginAFEcommunication
 17097 ;;		_setShortCircuitProtection
 17098 ;;		_setOverCurrentDischargeProtection
 17099 ;;		_setCellUndervoltageProtection
 17100 ;;		_setCellOvervoltageProtection
 17101 ;;		_updateCurrent
 17102 ;;		_enableDischarging
 17103 ;;		_enableCharging
 17104 ;; This function uses a non-reentrant model
 17105 ;;
 17106                           
 17107                           
 17108                           ;psect for function _I2C_writeRegister
 17109  33B3                     _I2C_writeRegister:	
 17110                           
 17111                           ;I2C.c: 105:     send_I2C_startBit();
 17112                           
 17113                           ;incstack = 0
 17114                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17115  33B3  31B2  2235  31B3   	fcall	_send_I2C_startBit
 17116                           
 17117                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 17118  33B6  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17119  33B7  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17120  33B8  0875               	movf	I2C_writeRegister@slaveAddress,w
 17121  33B9  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17122  33BA  3000               	movlw	0
 17123  33BB  00F3               	movwf	send_I2C_controlByte@RW_bit
 17124  33BC  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17125  33BD  31B2  2257  31B3   	fcall	_send_I2C_controlByte
 17126                           
 17127                           ;I2C.c: 107:     send_I2C_data(regAddress);
 17128  33C0  0878               	movf	I2C_writeRegister@regAddress+1,w
 17129  33C1  00F2               	movwf	send_I2C_data@databyte+1
 17130  33C2  0877               	movf	I2C_writeRegister@regAddress,w
 17131  33C3  00F1               	movwf	send_I2C_data@databyte
 17132  33C4  31B2  224E  31B3   	fcall	_send_I2C_data
 17133                           
 17134                           ;I2C.c: 108:     send_I2C_data(data);
 17135  33C7  087A               	movf	I2C_writeRegister@data+1,w
 17136  33C8  00F2               	movwf	send_I2C_data@databyte+1
 17137  33C9  0879               	movf	I2C_writeRegister@data,w
 17138  33CA  00F1               	movwf	send_I2C_data@databyte
 17139  33CB  31B2  224E  31B3   	fcall	_send_I2C_data
 17140                           
 17141                           ;I2C.c: 109:     send_I2C_stopBit();
 17142  33CE  31B2  223D         	fcall	_send_I2C_stopBit
 17143  33D0  0008               	return
 17144  33D1                     __end_of_I2C_writeRegister:	
 17145                           
 17146                           	psect	text59
 17147  323D                     __ptext59:	
 17148 ;; *************** function _send_I2C_stopBit *****************
 17149 ;; Defined at:
 17150 ;;		line 78 in file "I2C.c"
 17151 ;; Parameters:    Size  Location     Type
 17152 ;;		None
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;		None
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  1    wreg      void 
 17157 ;; Registers used:
 17158 ;;		None
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;Total ram usage:        0 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    1
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_I2C_writeRegister
 17175 ;;		_readRegister
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           
 17180                           ;psect for function _send_I2C_stopBit
 17181  323D                     _send_I2C_stopBit:	
 17182                           
 17183                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 17184                           
 17185                           ;incstack = 0
 17186                           ; Regs used in _send_I2C_stopBit: []
 17187  323D  0020               	movlb	0	; select bank0
 17188  323E  1191               	bcf	17,3	;volatile
 17189                           
 17190                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 17191  323F  0024               	movlb	4	; select bank4
 17192  3240  1516               	bsf	22,2	;volatile
 17193  3241                     l318:	
 17194                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 17195                           
 17196  3241  0020               	movlb	0	; select bank0
 17197  3242  1991               	btfsc	17,3	;volatile
 17198  3243  0008               	return
 17199  3244  2A41               	goto	l318
 17200  3245                     __end_of_send_I2C_stopBit:	
 17201                           
 17202                           	psect	text60
 17203  3235                     __ptext60:	
 17204 ;; *************** function _send_I2C_startBit *****************
 17205 ;; Defined at:
 17206 ;;		line 65 in file "I2C.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;		None
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;		None
 17211 ;; Return value:  Size  Location     Type
 17212 ;;                  1    wreg      void 
 17213 ;; Registers used:
 17214 ;;		None
 17215 ;; Tracked objects:
 17216 ;;		On entry : 0/0
 17217 ;;		On exit  : 0/0
 17218 ;;		Unchanged: 0/0
 17219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17224 ;;Total ram usage:        0 bytes
 17225 ;; Hardware stack levels used:    1
 17226 ;; Hardware stack levels required when called:    1
 17227 ;; This function calls:
 17228 ;;		Nothing
 17229 ;; This function is called by:
 17230 ;;		_I2C_writeRegister
 17231 ;;		_readRegister
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235                           
 17236                           ;psect for function _send_I2C_startBit
 17237  3235                     _send_I2C_startBit:	
 17238                           
 17239                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 17240                           
 17241                           ;incstack = 0
 17242                           ; Regs used in _send_I2C_startBit: []
 17243  3235  0020               	movlb	0	; select bank0
 17244  3236  1191               	bcf	17,3	;volatile
 17245                           
 17246                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 17247  3237  0024               	movlb	4	; select bank4
 17248  3238  1416               	bsf	22,0	;volatile
 17249  3239                     l306:	
 17250                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 17251                           
 17252  3239  0020               	movlb	0	; select bank0
 17253  323A  1991               	btfsc	17,3	;volatile
 17254  323B  0008               	return
 17255  323C  2A39               	goto	l306
 17256  323D                     __end_of_send_I2C_startBit:	
 17257                           
 17258                           	psect	text61
 17259  324E                     __ptext61:	
 17260 ;; *************** function _send_I2C_data *****************
 17261 ;; Defined at:
 17262 ;;		line 33 in file "I2C.c"
 17263 ;; Parameters:    Size  Location     Type
 17264 ;;  databyte        2    1[COMMON] unsigned int 
 17265 ;; Auto vars:     Size  Location     Type
 17266 ;;		None
 17267 ;; Return value:  Size  Location     Type
 17268 ;;                  1    wreg      void 
 17269 ;; Registers used:
 17270 ;;		wreg
 17271 ;; Tracked objects:
 17272 ;;		On entry : 0/0
 17273 ;;		On exit  : 0/0
 17274 ;;		Unchanged: 0/0
 17275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17280 ;;Total ram usage:        2 bytes
 17281 ;; Hardware stack levels used:    1
 17282 ;; Hardware stack levels required when called:    1
 17283 ;; This function calls:
 17284 ;;		Nothing
 17285 ;; This function is called by:
 17286 ;;		_I2C_writeRegister
 17287 ;;		_readRegister
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           
 17292                           ;psect for function _send_I2C_data
 17293  324E                     _send_I2C_data:	
 17294                           
 17295                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 17296                           
 17297                           ;incstack = 0
 17298                           ; Regs used in _send_I2C_data: [wreg]
 17299  324E  0020               	movlb	0	; select bank0
 17300  324F  1191               	bcf	17,3	;volatile
 17301                           
 17302                           ;I2C.c: 35:     SSPBUF = databyte;
 17303  3250  0871               	movf	send_I2C_data@databyte,w
 17304  3251  0024               	movlb	4	; select bank4
 17305  3252  0091               	movwf	17	;volatile
 17306  3253                     l288:	
 17307                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 17308                           
 17309  3253  0020               	movlb	0	; select bank0
 17310  3254  1991               	btfsc	17,3	;volatile
 17311  3255  0008               	return
 17312  3256  2A53               	goto	l288
 17313  3257                     __end_of_send_I2C_data:	
 17314                           
 17315                           	psect	text62
 17316  3257                     __ptext62:	
 17317 ;; *************** function _send_I2C_controlByte *****************
 17318 ;; Defined at:
 17319 ;;		line 53 in file "I2C.c"
 17320 ;; Parameters:    Size  Location     Type
 17321 ;;  BlockAddress    2    1[COMMON] unsigned int 
 17322 ;;  RW_bit          2    3[COMMON] unsigned int 
 17323 ;; Auto vars:     Size  Location     Type
 17324 ;;		None
 17325 ;; Return value:  Size  Location     Type
 17326 ;;                  1    wreg      void 
 17327 ;; Registers used:
 17328 ;;		wreg, status,2, status,0
 17329 ;; Tracked objects:
 17330 ;;		On entry : 0/0
 17331 ;;		On exit  : 0/0
 17332 ;;		Unchanged: 0/0
 17333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17338 ;;Total ram usage:        4 bytes
 17339 ;; Hardware stack levels used:    1
 17340 ;; Hardware stack levels required when called:    1
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		_I2C_writeRegister
 17345 ;;		_readRegister
 17346 ;; This function uses a non-reentrant model
 17347 ;;
 17348                           
 17349                           
 17350                           ;psect for function _send_I2C_controlByte
 17351  3257                     _send_I2C_controlByte:	
 17352                           
 17353                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 17354                           
 17355                           ;incstack = 0
 17356                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 17357  3257  0020               	movlb	0	; select bank0
 17358  3258  1191               	bcf	17,3	;volatile
 17359                           
 17360                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 17361  3259  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 17362  325A  0773               	addwf	send_I2C_controlByte@RW_bit,w
 17363  325B  0024               	movlb	4	; select bank4
 17364  325C  0091               	movwf	17	;volatile
 17365  325D                     l300:	
 17366                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 17367                           
 17368  325D  0020               	movlb	0	; select bank0
 17369  325E  1991               	btfsc	17,3	;volatile
 17370  325F  0008               	return
 17371  3260  2A5D               	goto	l300
 17372  3261                     __end_of_send_I2C_controlByte:	
 17373                           
 17374                           	psect	text63
 17375  20A3                     __ptext63:	
 17376 ;; *************** function _coulomb_counter *****************
 17377 ;; Defined at:
 17378 ;;		line 38 in file "algorithms.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;		None
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;  i               2   17[BANK1 ] int 
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      void 
 17385 ;; Registers used:
 17386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17393 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17395 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17396 ;;Total ram usage:        4 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:    3
 17399 ;; This function calls:
 17400 ;;		___fldiv
 17401 ;;		___flmul
 17402 ;;		___flsub
 17403 ;;		___fltol
 17404 ;;		___xxtofl
 17405 ;; This function is called by:
 17406 ;;		_AFE_UPDATE
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           
 17411                           ;psect for function _coulomb_counter
 17412  20A3                     _coulomb_counter:	
 17413                           
 17414                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 17415                           
 17416                           ;incstack = 0
 17417                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17418  20A3  0021               	movlb	1	; select bank1
 17419  20A4  01B1               	clrf	coulomb_counter@i^(0+128)
 17420  20A5  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 17421  20A6                     l6021:	
 17422                           
 17423                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (5000/ 3600000.0
      +                          ));
 17424  20A6  0021               	movlb	1	; select bank1
 17425  20A7  3531               	lslf	coulomb_counter@i^(0+128),w
 17426  20A8  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17427  20A9  0086               	movwf	6
 17428  20AA  3001               	movlw	1	; select bank3/4
 17429  20AB  0087               	movwf	7
 17430  20AC  3F40               	moviw [0]fsr1
 17431  20AD  0020               	movlb	0	; select bank0
 17432  20AE  00EE               	movwf	??_coulomb_counter
 17433  20AF  3F41               	moviw [1]fsr1
 17434  20B0  00EF               	movwf	??_coulomb_counter+1
 17435  20B1  086E               	movf	??_coulomb_counter,w
 17436  20B2  00F1               	movwf	___xxtofl@val
 17437  20B3  086F               	movf	??_coulomb_counter+1,w
 17438  20B4  00F2               	movwf	___xxtofl@val+1
 17439  20B5  0D89               	rlf	9,f
 17440  20B6  3B89               	subwfb	9,f
 17441  20B7  0989               	comf	9,f
 17442  20B8  00F3               	movwf	___xxtofl@val+2
 17443  20B9  00F4               	movwf	___xxtofl@val+3
 17444  20BA  3001               	movlw	1
 17445  20BB  31AA  22E9  31A0   	fcall	___xxtofl
 17446  20BE  0874               	movf	?___xxtofl+3,w
 17447  20BF  0021               	movlb	1	; select bank1
 17448  20C0  00A7               	movwf	(___flsub@b+3)^(0+128)
 17449  20C1  0873               	movf	?___xxtofl+2,w
 17450  20C2  00A6               	movwf	(___flsub@b+2)^(0+128)
 17451  20C3  0872               	movf	?___xxtofl+1,w
 17452  20C4  00A5               	movwf	(___flsub@b+1)^(0+128)
 17453  20C5  0871               	movf	?___xxtofl,w
 17454  20C6  00A4               	movwf	___flsub@b^(0+128)
 17455  20C7  0023               	movlb	3	; select bank3
 17456  20C8  084D               	movf	(_batCurrent+3)^(0+384),w
 17457  20C9  00F4               	movwf	___xxtofl@val+3
 17458  20CA  084C               	movf	(_batCurrent+2)^(0+384),w
 17459  20CB  00F3               	movwf	___xxtofl@val+2
 17460  20CC  084B               	movf	(_batCurrent+1)^(0+384),w
 17461  20CD  00F2               	movwf	___xxtofl@val+1
 17462  20CE  084A               	movf	_batCurrent^(0+384),w
 17463  20CF  00F1               	movwf	___xxtofl@val
 17464  20D0  3001               	movlw	1
 17465  20D1  31AA  22E9  31A0   	fcall	___xxtofl
 17466  20D4  0874               	movf	?___xxtofl+3,w
 17467  20D5  0020               	movlb	0	; select bank0
 17468  20D6  00AD               	movwf	___flmul@a+3
 17469  20D7  0873               	movf	?___xxtofl+2,w
 17470  20D8  00AC               	movwf	___flmul@a+2
 17471  20D9  0872               	movf	?___xxtofl+1,w
 17472  20DA  00AB               	movwf	___flmul@a+1
 17473  20DB  0871               	movf	?___xxtofl,w
 17474  20DC  00AA               	movwf	___flmul@a
 17475  20DD  303A               	movlw	58
 17476  20DE  00A9               	movwf	___flmul@b+3
 17477  20DF  30B6               	movlw	182
 17478  20E0  00A8               	movwf	___flmul@b+2
 17479  20E1  300B               	movlw	11
 17480  20E2  00A7               	movwf	___flmul@b+1
 17481  20E3  3061               	movlw	97
 17482  20E4  00A6               	movwf	___flmul@b
 17483  20E5  3190  2023  31A0   	fcall	___flmul
 17484  20E8  0020               	movlb	0	; select bank0
 17485  20E9  0829               	movf	?___flmul+3,w
 17486  20EA  0021               	movlb	1	; select bank1
 17487  20EB  00A3               	movwf	(___flsub@a+3)^(0+128)
 17488  20EC  0020               	movlb	0	; select bank0
 17489  20ED  0828               	movf	?___flmul+2,w
 17490  20EE  0021               	movlb	1	; select bank1
 17491  20EF  00A2               	movwf	(___flsub@a+2)^(0+128)
 17492  20F0  0020               	movlb	0	; select bank0
 17493  20F1  0827               	movf	?___flmul+1,w
 17494  20F2  0021               	movlb	1	; select bank1
 17495  20F3  00A1               	movwf	(___flsub@a+1)^(0+128)
 17496  20F4  0020               	movlb	0	; select bank0
 17497  20F5  0826               	movf	?___flmul,w
 17498  20F6  0021               	movlb	1	; select bank1
 17499  20F7  00A0               	movwf	___flsub@a^(0+128)
 17500  20F8  31B5  2530  31A0   	fcall	___flsub
 17501  20FB  0021               	movlb	1	; select bank1
 17502  20FC  0823               	movf	(?___flsub+3)^(0+128),w
 17503  20FD  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17504  20FE  0822               	movf	(?___flsub+2)^(0+128),w
 17505  20FF  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17506  2100  0821               	movf	(?___flsub+1)^(0+128),w
 17507  2101  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17508  2102  0820               	movf	?___flsub^(0+128),w
 17509  2103  00A8               	movwf	___fltol@f1^(0+128)
 17510  2104  31B7  279A  31A0   	fcall	___fltol
 17511  2107  0021               	movlb	1	; select bank1
 17512  2108  3531               	lslf	coulomb_counter@i^(0+128),w
 17513  2109  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17514  210A  0086               	movwf	6
 17515  210B  3001               	movlw	1	; select bank3/4
 17516  210C  0087               	movwf	7
 17517  210D  0828               	movf	?___fltol^(0+128),w
 17518  210E  3FC0               	movwi [0]fsr1
 17519  210F  0829               	movf	(?___fltol+1)^(0+128),w
 17520  2110  3FC1               	movwi [1]fsr1
 17521                           
 17522                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 17523  2111  3531               	lslf	coulomb_counter@i^(0+128),w
 17524  2112  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17525  2113  0086               	movwf	6
 17526  2114  3001               	movlw	1	; select bank3/4
 17527  2115  0087               	movwf	7
 17528  2116  3F40               	moviw [0]fsr1
 17529  2117  0020               	movlb	0	; select bank0
 17530  2118  00EE               	movwf	??_coulomb_counter
 17531  2119  3F41               	moviw [1]fsr1
 17532  211A  00EF               	movwf	??_coulomb_counter+1
 17533  211B  086E               	movf	??_coulomb_counter,w
 17534  211C  00F1               	movwf	___xxtofl@val
 17535  211D  086F               	movf	??_coulomb_counter+1,w
 17536  211E  00F2               	movwf	___xxtofl@val+1
 17537  211F  0D89               	rlf	9,f
 17538  2120  3B89               	subwfb	9,f
 17539  2121  0989               	comf	9,f
 17540  2122  00F3               	movwf	___xxtofl@val+2
 17541  2123  00F4               	movwf	___xxtofl@val+3
 17542  2124  3001               	movlw	1
 17543  2125  31AA  22E9  31A0   	fcall	___xxtofl
 17544  2128  0874               	movf	?___xxtofl+3,w
 17545  2129  0020               	movlb	0	; select bank0
 17546  212A  00AD               	movwf	___flmul@a+3
 17547  212B  0873               	movf	?___xxtofl+2,w
 17548  212C  00AC               	movwf	___flmul@a+2
 17549  212D  0872               	movf	?___xxtofl+1,w
 17550  212E  00AB               	movwf	___flmul@a+1
 17551  212F  0871               	movf	?___xxtofl,w
 17552  2130  00AA               	movwf	___flmul@a
 17553  2131  3042               	movlw	66
 17554  2132  00A9               	movwf	___flmul@b+3
 17555  2133  30C8               	movlw	200
 17556  2134  00A8               	movwf	___flmul@b+2
 17557  2135  3000               	movlw	0
 17558  2136  00A7               	movwf	___flmul@b+1
 17559  2137  3000               	movlw	0
 17560  2138  00A6               	movwf	___flmul@b
 17561  2139  3190  2023  31A0   	fcall	___flmul
 17562  213C  0020               	movlb	0	; select bank0
 17563  213D  0829               	movf	?___flmul+3,w
 17564  213E  00C7               	movwf	___fldiv@b+3
 17565  213F  0828               	movf	?___flmul+2,w
 17566  2140  00C6               	movwf	___fldiv@b+2
 17567  2141  0827               	movf	?___flmul+1,w
 17568  2142  00C5               	movwf	___fldiv@b+1
 17569  2143  0826               	movf	?___flmul,w
 17570  2144  00C4               	movwf	___fldiv@b
 17571  2145  3045               	movlw	69
 17572  2146  00C3               	movwf	___fldiv@a+3
 17573  2147  301C               	movlw	28
 17574  2148  00C2               	movwf	___fldiv@a+2
 17575  2149  3040               	movlw	64
 17576  214A  00C1               	movwf	___fldiv@a+1
 17577  214B  3000               	movlw	0
 17578  214C  00C0               	movwf	___fldiv@a
 17579  214D  319C  24E2  31A0   	fcall	___fldiv
 17580  2150  0020               	movlb	0	; select bank0
 17581  2151  0843               	movf	?___fldiv+3,w
 17582  2152  0021               	movlb	1	; select bank1
 17583  2153  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17584  2154  0020               	movlb	0	; select bank0
 17585  2155  0842               	movf	?___fldiv+2,w
 17586  2156  0021               	movlb	1	; select bank1
 17587  2157  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17588  2158  0020               	movlb	0	; select bank0
 17589  2159  0841               	movf	?___fldiv+1,w
 17590  215A  0021               	movlb	1	; select bank1
 17591  215B  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17592  215C  0020               	movlb	0	; select bank0
 17593  215D  0840               	movf	?___fldiv,w
 17594  215E  0021               	movlb	1	; select bank1
 17595  215F  00A8               	movwf	___fltol@f1^(0+128)
 17596  2160  31B7  279A  31A0   	fcall	___fltol
 17597  2163  0021               	movlb	1	; select bank1
 17598  2164  3531               	lslf	coulomb_counter@i^(0+128),w
 17599  2165  3EAA               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 17600  2166  0086               	movwf	6
 17601  2167  3001               	movlw	1	; select bank3/4
 17602  2168  0087               	movwf	7
 17603  2169  0828               	movf	?___fltol^(0+128),w
 17604  216A  3FC0               	movwi [0]fsr1
 17605  216B  0829               	movf	(?___fltol+1)^(0+128),w
 17606  216C  3FC1               	movwi [1]fsr1
 17607                           
 17608                           ;algorithms.c: 42:      }
 17609  216D  3001               	movlw	1
 17610  216E  07B1               	addwf	coulomb_counter@i^(0+128),f
 17611  216F  3000               	movlw	0
 17612  2170  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 17613  2171  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 17614  2172  3A80               	xorlw	128
 17615  2173  0020               	movlb	0	; select bank0
 17616  2174  00EE               	movwf	??_coulomb_counter
 17617  2175  3080               	movlw	128
 17618  2176  026E               	subwf	??_coulomb_counter,w
 17619  2177  1D03               	skipz
 17620  2178  297C               	goto	u7545
 17621  2179  3005               	movlw	5
 17622  217A  0021               	movlb	1	; select bank1
 17623  217B  0231               	subwf	coulomb_counter@i^(0+128),w
 17624  217C                     u7545:	
 17625  217C  1803               	btfsc	3,0
 17626  217D  0008               	return
 17627  217E  28A6               	goto	l6021
 17628  217F                     __end_of_coulomb_counter:	
 17629                           
 17630                           	psect	text64
 17631  3530                     __ptext64:	
 17632 ;; *************** function ___flsub *****************
 17633 ;; Defined at:
 17634 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;  a               4    0[BANK1 ] void 
 17637 ;;  b               4    4[BANK1 ] void 
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;		None
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  4    0[BANK1 ] void 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0, pclath, cstack
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17649 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17652 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17653 ;;Total ram usage:        8 bytes
 17654 ;; Hardware stack levels used:    1
 17655 ;; Hardware stack levels required when called:    2
 17656 ;; This function calls:
 17657 ;;		___fladd
 17658 ;; This function is called by:
 17659 ;;		_updateTemperatures
 17660 ;;		_coulomb_counter
 17661 ;;		_logf
 17662 ;; This function uses a non-reentrant model
 17663 ;;
 17664                           
 17665                           
 17666                           ;psect for function ___flsub
 17667  3530                     ___flsub:	
 17668                           
 17669                           ;incstack = 0
 17670                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17671  3530  3080               	movlw	128
 17672  3531  0021               	movlb	1	; select bank1
 17673  3532  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 17674  3533  0827               	movf	(___flsub@b+3)^(0+128),w
 17675  3534  0020               	movlb	0	; select bank0
 17676  3535  00DD               	movwf	___fladd@b+3
 17677  3536  0021               	movlb	1	; select bank1
 17678  3537  0826               	movf	(___flsub@b+2)^(0+128),w
 17679  3538  0020               	movlb	0	; select bank0
 17680  3539  00DC               	movwf	___fladd@b+2
 17681  353A  0021               	movlb	1	; select bank1
 17682  353B  0825               	movf	(___flsub@b+1)^(0+128),w
 17683  353C  0020               	movlb	0	; select bank0
 17684  353D  00DB               	movwf	___fladd@b+1
 17685  353E  0021               	movlb	1	; select bank1
 17686  353F  0824               	movf	___flsub@b^(0+128),w
 17687  3540  0020               	movlb	0	; select bank0
 17688  3541  00DA               	movwf	___fladd@b
 17689  3542  0021               	movlb	1	; select bank1
 17690  3543  0823               	movf	(___flsub@a+3)^(0+128),w
 17691  3544  0020               	movlb	0	; select bank0
 17692  3545  00E1               	movwf	___fladd@a+3
 17693  3546  0021               	movlb	1	; select bank1
 17694  3547  0822               	movf	(___flsub@a+2)^(0+128),w
 17695  3548  0020               	movlb	0	; select bank0
 17696  3549  00E0               	movwf	___fladd@a+2
 17697  354A  0021               	movlb	1	; select bank1
 17698  354B  0821               	movf	(___flsub@a+1)^(0+128),w
 17699  354C  0020               	movlb	0	; select bank0
 17700  354D  00DF               	movwf	___fladd@a+1
 17701  354E  0021               	movlb	1	; select bank1
 17702  354F  0820               	movf	___flsub@a^(0+128),w
 17703  3550  0020               	movlb	0	; select bank0
 17704  3551  00DE               	movwf	___fladd@a
 17705  3552  3185  25FE         	fcall	___fladd
 17706  3554  0020               	movlb	0	; select bank0
 17707  3555  085D               	movf	?___fladd+3,w
 17708  3556  0021               	movlb	1	; select bank1
 17709  3557  00A3               	movwf	(?___flsub+3)^(0+128)
 17710  3558  0020               	movlb	0	; select bank0
 17711  3559  085C               	movf	?___fladd+2,w
 17712  355A  0021               	movlb	1	; select bank1
 17713  355B  00A2               	movwf	(?___flsub+2)^(0+128)
 17714  355C  0020               	movlb	0	; select bank0
 17715  355D  085B               	movf	?___fladd+1,w
 17716  355E  0021               	movlb	1	; select bank1
 17717  355F  00A1               	movwf	(?___flsub+1)^(0+128)
 17718  3560  0020               	movlb	0	; select bank0
 17719  3561  085A               	movf	?___fladd,w
 17720  3562  0021               	movlb	1	; select bank1
 17721  3563  00A0               	movwf	?___flsub^(0+128)
 17722  3564  0008               	return
 17723  3565                     __end_of___flsub:	
 17724                           
 17725                           	psect	text65
 17726  05FE                     __ptext65:	
 17727 ;; *************** function ___fladd *****************
 17728 ;; Defined at:
 17729 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;  b               4   58[BANK0 ] void 
 17732 ;;  a               4   62[BANK0 ] void 
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;  grs             1   77[BANK0 ] unsigned char 
 17735 ;;  bexp            1   76[BANK0 ] unsigned char 
 17736 ;;  aexp            1   75[BANK0 ] unsigned char 
 17737 ;;  signs           1   74[BANK0 ] unsigned char 
 17738 ;; Return value:  Size  Location     Type
 17739 ;;                  4   58[BANK0 ] unsigned char 
 17740 ;; Registers used:
 17741 ;;		wreg, status,2, status,0
 17742 ;; Tracked objects:
 17743 ;;		On entry : 0/0
 17744 ;;		On exit  : 0/0
 17745 ;;		Unchanged: 0/0
 17746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17747 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17748 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17749 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17750 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17751 ;;Total ram usage:       20 bytes
 17752 ;; Hardware stack levels used:    1
 17753 ;; Hardware stack levels required when called:    1
 17754 ;; This function calls:
 17755 ;;		Nothing
 17756 ;; This function is called by:
 17757 ;;		_updateVoltages
 17758 ;;		_updateTemperatures
 17759 ;;		___flsub
 17760 ;;		_logf
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           
 17765                           ;psect for function ___fladd
 17766  05FE                     ___fladd:	
 17767                           
 17768                           ;incstack = 0
 17769                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17770  05FE  0020               	movlb	0	; select bank0
 17771  05FF  085D               	movf	___fladd@b+3,w
 17772  0600  3980               	andlw	128
 17773  0601  00E2               	movwf	??___fladd
 17774  0602  0862               	movf	??___fladd,w
 17775  0603  00EA               	movwf	___fladd@signs
 17776  0604  355D               	lslf	___fladd@b+3,w
 17777  0605  00E2               	movwf	??___fladd
 17778  0606  0862               	movf	??___fladd,w
 17779  0607  00EC               	movwf	___fladd@bexp
 17780  0608  1BDC               	btfsc	___fladd@b+2,7
 17781  0609  146C               	bsf	___fladd@bexp,0
 17782  060A  086C               	movf	___fladd@bexp,w
 17783  060B  1903               	btfsc	3,2
 17784  060C  2E1B               	goto	l4985
 17785  060D  0A6C               	incf	___fladd@bexp,w
 17786  060E  1D03               	btfss	3,2
 17787  060F  2E18               	goto	l4981
 17788  0610  3000               	movlw	0
 17789  0611  00DD               	movwf	___fladd@b+3
 17790  0612  3000               	movlw	0
 17791  0613  00DC               	movwf	___fladd@b+2
 17792  0614  3000               	movlw	0
 17793  0615  00DB               	movwf	___fladd@b+1
 17794  0616  3000               	movlw	0
 17795  0617  00DA               	movwf	___fladd@b
 17796  0618                     l4981:	
 17797  0618  17DC               	bsf	___fladd@b+2,7
 17798  0619  01DD               	clrf	___fladd@b+3
 17799  061A  2E23               	goto	l4987
 17800  061B                     l4985:	
 17801  061B  3000               	movlw	0
 17802  061C  00DD               	movwf	___fladd@b+3
 17803  061D  3000               	movlw	0
 17804  061E  00DC               	movwf	___fladd@b+2
 17805  061F  3000               	movlw	0
 17806  0620  00DB               	movwf	___fladd@b+1
 17807  0621  3000               	movlw	0
 17808  0622  00DA               	movwf	___fladd@b
 17809  0623                     l4987:	
 17810  0623  0861               	movf	___fladd@a+3,w
 17811  0624  3980               	andlw	128
 17812  0625  00E2               	movwf	??___fladd
 17813  0626  0862               	movf	??___fladd,w
 17814  0627  00EB               	movwf	___fladd@aexp
 17815  0628  086B               	movf	___fladd@aexp,w
 17816  0629  066A               	xorwf	___fladd@signs,w
 17817  062A  1D03               	btfss	3,2
 17818  062B  176A               	bsf	___fladd@signs,6
 17819  062C  3561               	lslf	___fladd@a+3,w
 17820  062D  00E2               	movwf	??___fladd
 17821  062E  0862               	movf	??___fladd,w
 17822  062F  00EB               	movwf	___fladd@aexp
 17823  0630  1BE0               	btfsc	___fladd@a+2,7
 17824  0631  146B               	bsf	___fladd@aexp,0
 17825  0632  086B               	movf	___fladd@aexp,w
 17826  0633  1903               	btfsc	3,2
 17827  0634  2E43               	goto	l5009
 17828  0635  0A6B               	incf	___fladd@aexp,w
 17829  0636  1D03               	btfss	3,2
 17830  0637  2E40               	goto	l5005
 17831  0638  3000               	movlw	0
 17832  0639  00E1               	movwf	___fladd@a+3
 17833  063A  3000               	movlw	0
 17834  063B  00E0               	movwf	___fladd@a+2
 17835  063C  3000               	movlw	0
 17836  063D  00DF               	movwf	___fladd@a+1
 17837  063E  3000               	movlw	0
 17838  063F  00DE               	movwf	___fladd@a
 17839  0640                     l5005:	
 17840  0640  17E0               	bsf	___fladd@a+2,7
 17841  0641  01E1               	clrf	___fladd@a+3
 17842  0642  2E4B               	goto	l1247
 17843  0643                     l5009:	
 17844  0643  3000               	movlw	0
 17845  0644  00E1               	movwf	___fladd@a+3
 17846  0645  3000               	movlw	0
 17847  0646  00E0               	movwf	___fladd@a+2
 17848  0647  3000               	movlw	0
 17849  0648  00DF               	movwf	___fladd@a+1
 17850  0649  3000               	movlw	0
 17851  064A  00DE               	movwf	___fladd@a
 17852  064B                     l1247:	
 17853  064B  086C               	movf	___fladd@bexp,w
 17854  064C  026B               	subwf	___fladd@aexp,w
 17855  064D  1803               	skipnc
 17856  064E  2E91               	goto	l5045
 17857  064F  1F6A               	btfss	___fladd@signs,6
 17858  0650  2E55               	goto	l5015
 17859  0651  3080               	movlw	128
 17860  0652  00E2               	movwf	??___fladd
 17861  0653  0862               	movf	??___fladd,w
 17862  0654  06EA               	xorwf	___fladd@signs,f
 17863  0655                     l5015:	
 17864  0655  086C               	movf	___fladd@bexp,w
 17865  0656  00E2               	movwf	??___fladd
 17866  0657  0862               	movf	??___fladd,w
 17867  0658  00ED               	movwf	___fladd@grs
 17868  0659  086B               	movf	___fladd@aexp,w
 17869  065A  00E2               	movwf	??___fladd
 17870  065B  0862               	movf	??___fladd,w
 17871  065C  00EC               	movwf	___fladd@bexp
 17872  065D  086D               	movf	___fladd@grs,w
 17873  065E  00E2               	movwf	??___fladd
 17874  065F  0862               	movf	??___fladd,w
 17875  0660  00EB               	movwf	___fladd@aexp
 17876  0661  085A               	movf	___fladd@b,w
 17877  0662  00E2               	movwf	??___fladd
 17878  0663  0862               	movf	??___fladd,w
 17879  0664  00ED               	movwf	___fladd@grs
 17880  0665  085E               	movf	___fladd@a,w
 17881  0666  00E2               	movwf	??___fladd
 17882  0667  0862               	movf	??___fladd,w
 17883  0668  00DA               	movwf	___fladd@b
 17884  0669  086D               	movf	___fladd@grs,w
 17885  066A  00E2               	movwf	??___fladd
 17886  066B  0862               	movf	??___fladd,w
 17887  066C  00DE               	movwf	___fladd@a
 17888  066D  085B               	movf	___fladd@b+1,w
 17889  066E  00E2               	movwf	??___fladd
 17890  066F  0862               	movf	??___fladd,w
 17891  0670  00ED               	movwf	___fladd@grs
 17892  0671  085F               	movf	___fladd@a+1,w
 17893  0672  00E2               	movwf	??___fladd
 17894  0673  0862               	movf	??___fladd,w
 17895  0674  00DB               	movwf	___fladd@b+1
 17896  0675  086D               	movf	___fladd@grs,w
 17897  0676  00E2               	movwf	??___fladd
 17898  0677  0862               	movf	??___fladd,w
 17899  0678  00DF               	movwf	___fladd@a+1
 17900  0679  085C               	movf	___fladd@b+2,w
 17901  067A  00E2               	movwf	??___fladd
 17902  067B  0862               	movf	??___fladd,w
 17903  067C  00ED               	movwf	___fladd@grs
 17904  067D  0860               	movf	___fladd@a+2,w
 17905  067E  00E2               	movwf	??___fladd
 17906  067F  0862               	movf	??___fladd,w
 17907  0680  00DC               	movwf	___fladd@b+2
 17908  0681  086D               	movf	___fladd@grs,w
 17909  0682  00E2               	movwf	??___fladd
 17910  0683  0862               	movf	??___fladd,w
 17911  0684  00E0               	movwf	___fladd@a+2
 17912  0685  085D               	movf	___fladd@b+3,w
 17913  0686  00E2               	movwf	??___fladd
 17914  0687  0862               	movf	??___fladd,w
 17915  0688  00ED               	movwf	___fladd@grs
 17916  0689  0861               	movf	___fladd@a+3,w
 17917  068A  00E2               	movwf	??___fladd
 17918  068B  0862               	movf	??___fladd,w
 17919  068C  00DD               	movwf	___fladd@b+3
 17920  068D  086D               	movf	___fladd@grs,w
 17921  068E  00E2               	movwf	??___fladd
 17922  068F  0862               	movf	??___fladd,w
 17923  0690  00E1               	movwf	___fladd@a+3
 17924  0691                     l5045:	
 17925  0691  01ED               	clrf	___fladd@grs
 17926  0692  086B               	movf	___fladd@aexp,w
 17927  0693  00E2               	movwf	??___fladd
 17928  0694  01E3               	clrf	??___fladd+1
 17929  0695  0863               	movf	??___fladd+1,w
 17930  0696  00E5               	movwf	??___fladd+3
 17931  0697  086C               	movf	___fladd@bexp,w
 17932  0698  0262               	subwf	??___fladd,w
 17933  0699  00E4               	movwf	??___fladd+2
 17934  069A  1C03               	skipc
 17935  069B  03E5               	decf	??___fladd+3,f
 17936  069C  0865               	movf	??___fladd+3,w
 17937  069D  3A80               	xorlw	128
 17938  069E  00E6               	movwf	??___fladd+4
 17939  069F  3080               	movlw	128
 17940  06A0  0266               	subwf	??___fladd+4,w
 17941  06A1  1D03               	skipz
 17942  06A2  2EA5               	goto	u5775
 17943  06A3  301A               	movlw	26
 17944  06A4  0264               	subwf	??___fladd+2,w
 17945  06A5                     u5775:	
 17946  06A5  1C03               	skipc
 17947  06A6  2ED9               	goto	l5063
 17948  06A7  0020               	movlb	0	; select bank0
 17949  06A8  085D               	movf	___fladd@b+3,w
 17950  06A9  045C               	iorwf	___fladd@b+2,w
 17951  06AA  045B               	iorwf	___fladd@b+1,w
 17952  06AB  045A               	iorwf	___fladd@b,w
 17953  06AC  1903               	btfsc	3,2
 17954  06AD  2EB0               	goto	u5780
 17955  06AE  3001               	movlw	1
 17956  06AF  2EB1               	goto	u5790
 17957  06B0                     u5780:	
 17958  06B0  3000               	movlw	0
 17959  06B1                     u5790:	
 17960  06B1  00E2               	movwf	??___fladd
 17961  06B2  0862               	movf	??___fladd,w
 17962  06B3  00ED               	movwf	___fladd@grs
 17963  06B4  3000               	movlw	0
 17964  06B5  00DD               	movwf	___fladd@b+3
 17965  06B6  3000               	movlw	0
 17966  06B7  00DC               	movwf	___fladd@b+2
 17967  06B8  3000               	movlw	0
 17968  06B9  00DB               	movwf	___fladd@b+1
 17969  06BA  3000               	movlw	0
 17970  06BB  00DA               	movwf	___fladd@b
 17971  06BC  086B               	movf	___fladd@aexp,w
 17972  06BD  00E2               	movwf	??___fladd
 17973  06BE  0862               	movf	??___fladd,w
 17974  06BF  00EC               	movwf	___fladd@bexp
 17975  06C0  2EDE               	goto	l1251
 17976  06C1                     l1253:	
 17977  06C1  1C6D               	btfss	___fladd@grs,0
 17978  06C2  2EC9               	goto	l5053
 17979  06C3  366D               	lsrf	___fladd@grs,w
 17980  06C4  3801               	iorlw	1
 17981  06C5  00E2               	movwf	??___fladd
 17982  06C6  0862               	movf	??___fladd,w
 17983  06C7  00ED               	movwf	___fladd@grs
 17984  06C8  2ECB               	goto	l5055
 17985  06C9                     l5053:	
 17986  06C9  1003               	clrc
 17987  06CA  0CED               	rrf	___fladd@grs,f
 17988  06CB                     l5055:	
 17989  06CB  185A               	btfsc	___fladd@b,0
 17990  06CC  17ED               	bsf	___fladd@grs,7
 17991  06CD  3001               	movlw	1
 17992  06CE  00E2               	movwf	??___fladd
 17993  06CF                     u5825:	
 17994  06CF  37DD               	asrf	___fladd@b+3,f
 17995  06D0  0CDC               	rrf	___fladd@b+2,f
 17996  06D1  0CDB               	rrf	___fladd@b+1,f
 17997  06D2  0CDA               	rrf	___fladd@b,f
 17998  06D3  0BE2               	decfsz	??___fladd& (0+127),f
 17999  06D4  2ECF               	goto	u5825
 18000  06D5  3001               	movlw	1
 18001  06D6  00E2               	movwf	??___fladd
 18002  06D7  0862               	movf	??___fladd,w
 18003  06D8  07EC               	addwf	___fladd@bexp,f
 18004  06D9                     l5063:	
 18005  06D9  0020               	movlb	0	; select bank0
 18006  06DA  086B               	movf	___fladd@aexp,w
 18007  06DB  026C               	subwf	___fladd@bexp,w
 18008  06DC  1C03               	skipc
 18009  06DD  2EC1               	goto	l1253
 18010  06DE                     l1251:	
 18011  06DE  1B6A               	btfsc	___fladd@signs,6
 18012  06DF  2F0F               	goto	l5089
 18013  06E0  086C               	movf	___fladd@bexp,w
 18014  06E1  1D03               	btfss	3,2
 18015  06E2  2EEC               	goto	l5071
 18016  06E3  3000               	movlw	0
 18017  06E4  00DD               	movwf	?___fladd+3
 18018  06E5  3000               	movlw	0
 18019  06E6  00DC               	movwf	?___fladd+2
 18020  06E7  3000               	movlw	0
 18021  06E8  00DB               	movwf	?___fladd+1
 18022  06E9  3000               	movlw	0
 18023  06EA  00DA               	movwf	?___fladd
 18024  06EB  0008               	return
 18025  06EC                     l5071:	
 18026  06EC  085E               	movf	___fladd@a,w
 18027  06ED  07DA               	addwf	___fladd@b,f
 18028  06EE  085F               	movf	___fladd@a+1,w
 18029  06EF  3DDB               	addwfc	___fladd@b+1,f
 18030  06F0  0860               	movf	___fladd@a+2,w
 18031  06F1  3DDC               	addwfc	___fladd@b+2,f
 18032  06F2  0861               	movf	___fladd@a+3,w
 18033  06F3  3DDD               	addwfc	___fladd@b+3,f
 18034  06F4  1C5D               	btfss	___fladd@b+3,0
 18035  06F5  2F89               	goto	l5123
 18036  06F6  1C6D               	btfss	___fladd@grs,0
 18037  06F7  2EFE               	goto	l5079
 18038  06F8  366D               	lsrf	___fladd@grs,w
 18039  06F9  3801               	iorlw	1
 18040  06FA  00E2               	movwf	??___fladd
 18041  06FB  0862               	movf	??___fladd,w
 18042  06FC  00ED               	movwf	___fladd@grs
 18043  06FD  2F00               	goto	l5081
 18044  06FE                     l5079:	
 18045  06FE  1003               	clrc
 18046  06FF  0CED               	rrf	___fladd@grs,f
 18047  0700                     l5081:	
 18048  0700  185A               	btfsc	___fladd@b,0
 18049  0701  17ED               	bsf	___fladd@grs,7
 18050  0702  3001               	movlw	1
 18051  0703  00E2               	movwf	??___fladd
 18052  0704                     u5895:	
 18053  0704  37DD               	asrf	___fladd@b+3,f
 18054  0705  0CDC               	rrf	___fladd@b+2,f
 18055  0706  0CDB               	rrf	___fladd@b+1,f
 18056  0707  0CDA               	rrf	___fladd@b,f
 18057  0708  0BE2               	decfsz	??___fladd& (0+127),f
 18058  0709  2F04               	goto	u5895
 18059  070A  3001               	movlw	1
 18060  070B  00E2               	movwf	??___fladd
 18061  070C  0862               	movf	??___fladd,w
 18062  070D  07EC               	addwf	___fladd@bexp,f
 18063  070E  2F89               	goto	l5123
 18064  070F                     l5089:	
 18065  070F  085D               	movf	___fladd@b+3,w
 18066  0710  3A80               	xorlw	128
 18067  0711  00E2               	movwf	??___fladd
 18068  0712  0861               	movf	___fladd@a+3,w
 18069  0713  3A80               	xorlw	128
 18070  0714  0262               	subwf	??___fladd,w
 18071  0715  1D03               	skipz
 18072  0716  2F21               	goto	u5903
 18073  0717  0860               	movf	___fladd@a+2,w
 18074  0718  025C               	subwf	___fladd@b+2,w
 18075  0719  1D03               	skipz
 18076  071A  2F21               	goto	u5903
 18077  071B  085F               	movf	___fladd@a+1,w
 18078  071C  025B               	subwf	___fladd@b+1,w
 18079  071D  1D03               	skipz
 18080  071E  2F21               	goto	u5903
 18081  071F  085E               	movf	___fladd@a,w
 18082  0720  025A               	subwf	___fladd@b,w
 18083  0721                     u5903:	
 18084  0721  1803               	skipnc
 18085  0722  2F59               	goto	l5099
 18086  0723  30FF               	movlw	255
 18087  0724  00E2               	movwf	??___fladd
 18088  0725  30FF               	movlw	255
 18089  0726  00E3               	movwf	??___fladd+1
 18090  0727  30FF               	movlw	255
 18091  0728  00E4               	movwf	??___fladd+2
 18092  0729  30FF               	movlw	255
 18093  072A  00E5               	movwf	??___fladd+3
 18094  072B  085A               	movf	___fladd@b,w
 18095  072C  025E               	subwf	___fladd@a,w
 18096  072D  00E6               	movwf	??___fladd+4
 18097  072E  085B               	movf	___fladd@b+1,w
 18098  072F  3B5F               	subwfb	___fladd@a+1,w
 18099  0730  00E7               	movwf	??___fladd+5
 18100  0731  085C               	movf	___fladd@b+2,w
 18101  0732  3B60               	subwfb	___fladd@a+2,w
 18102  0733  00E8               	movwf	??___fladd+6
 18103  0734  085D               	movf	___fladd@b+3,w
 18104  0735  3B61               	subwfb	___fladd@a+3,w
 18105  0736  00E9               	movwf	??___fladd+7
 18106  0737  0866               	movf	??___fladd+4,w
 18107  0738  07E2               	addwf	??___fladd,f
 18108  0739  0867               	movf	??___fladd+5,w
 18109  073A  3DE3               	addwfc	??___fladd+1,f
 18110  073B  0868               	movf	??___fladd+6,w
 18111  073C  3DE4               	addwfc	??___fladd+2,f
 18112  073D  0869               	movf	??___fladd+7,w
 18113  073E  3DE5               	addwfc	??___fladd+3,f
 18114  073F  0865               	movf	??___fladd+3,w
 18115  0740  00DD               	movwf	___fladd@b+3
 18116  0741  0864               	movf	??___fladd+2,w
 18117  0742  00DC               	movwf	___fladd@b+2
 18118  0743  0863               	movf	??___fladd+1,w
 18119  0744  00DB               	movwf	___fladd@b+1
 18120  0745  0862               	movf	??___fladd,w
 18121  0746  00DA               	movwf	___fladd@b
 18122  0747  3080               	movlw	128
 18123  0748  00E2               	movwf	??___fladd
 18124  0749  0862               	movf	??___fladd,w
 18125  074A  06EA               	xorwf	___fladd@signs,f
 18126  074B  09ED               	comf	___fladd@grs,f
 18127  074C  0AED               	incf	___fladd@grs,f
 18128  074D  086D               	movf	___fladd@grs,w
 18129  074E  1D03               	btfss	3,2
 18130  074F  2F61               	goto	l1268
 18131  0750  3001               	movlw	1
 18132  0751  07DA               	addwf	___fladd@b,f
 18133  0752  3000               	movlw	0
 18134  0753  3DDB               	addwfc	___fladd@b+1,f
 18135  0754  3000               	movlw	0
 18136  0755  3DDC               	addwfc	___fladd@b+2,f
 18137  0756  3000               	movlw	0
 18138  0757  3DDD               	addwfc	___fladd@b+3,f
 18139  0758  2F61               	goto	l1268
 18140  0759                     l5099:	
 18141  0759  085E               	movf	___fladd@a,w
 18142  075A  02DA               	subwf	___fladd@b,f
 18143  075B  085F               	movf	___fladd@a+1,w
 18144  075C  3BDB               	subwfb	___fladd@b+1,f
 18145  075D  0860               	movf	___fladd@a+2,w
 18146  075E  3BDC               	subwfb	___fladd@b+2,f
 18147  075F  0861               	movf	___fladd@a+3,w
 18148  0760  3BDD               	subwfb	___fladd@b+3,f
 18149  0761                     l1268:	
 18150  0761  085D               	movf	___fladd@b+3,w
 18151  0762  045C               	iorwf	___fladd@b+2,w
 18152  0763  045B               	iorwf	___fladd@b+1,w
 18153  0764  045A               	iorwf	___fladd@b,w
 18154  0765  1D03               	skipz
 18155  0766  2F87               	goto	l5121
 18156  0767  086D               	movf	___fladd@grs,w
 18157  0768  1D03               	btfss	3,2
 18158  0769  2F87               	goto	l5121
 18159  076A  3000               	movlw	0
 18160  076B  00DD               	movwf	?___fladd+3
 18161  076C  3000               	movlw	0
 18162  076D  00DC               	movwf	?___fladd+2
 18163  076E  3000               	movlw	0
 18164  076F  00DB               	movwf	?___fladd+1
 18165  0770  3000               	movlw	0
 18166  0771  00DA               	movwf	?___fladd
 18167  0772  0008               	return
 18168  0773                     l5107:	
 18169  0773  3001               	movlw	1
 18170  0774                     u5945:	
 18171  0774  35DA               	lslf	___fladd@b,f
 18172  0775  0DDB               	rlf	___fladd@b+1,f
 18173  0776  0DDC               	rlf	___fladd@b+2,f
 18174  0777  0DDD               	rlf	___fladd@b+3,f
 18175  0778  0B89               	decfsz	9,f
 18176  0779  2F74               	goto	u5945
 18177  077A  1BED               	btfsc	___fladd@grs,7
 18178  077B  145A               	bsf	___fladd@b,0
 18179  077C  1C6D               	btfss	___fladd@grs,0
 18180  077D  2F80               	goto	l5115
 18181  077E  1403               	setc
 18182  077F  2F81               	goto	L4
 18183  0780                     l5115:	
 18184  0780  1003               	clrc
 18185  0781                     L4:	
 18186  0781  0DED               	rlf	___fladd@grs,f
 18187  0782  086C               	movf	___fladd@bexp,w
 18188  0783  1903               	btfsc	3,2
 18189  0784  2F87               	goto	l5121
 18190  0785  3001               	movlw	1
 18191  0786  02EC               	subwf	___fladd@bexp,f
 18192  0787                     l5121:	
 18193  0787  1FDC               	btfss	___fladd@b+2,7
 18194  0788  2F73               	goto	l5107
 18195  0789                     l5123:	
 18196  0789  01EB               	clrf	___fladd@aexp
 18197  078A  1FED               	btfss	___fladd@grs,7
 18198  078B  2F94               	goto	l5133
 18199  078C  086D               	movf	___fladd@grs,w
 18200  078D  397F               	andlw	127
 18201  078E  1903               	btfsc	3,2
 18202  078F  185A               	btfsc	___fladd@b,0
 18203  0790  2F92               	goto	l5129
 18204  0791  2F94               	goto	l5133
 18205  0792                     l5129:	
 18206  0792  01EB               	clrf	___fladd@aexp
 18207  0793  0AEB               	incf	___fladd@aexp,f
 18208  0794                     l5133:	
 18209  0794  086B               	movf	___fladd@aexp,w
 18210  0795  1903               	btfsc	3,2
 18211  0796  2FC0               	goto	l1281
 18212  0797  3001               	movlw	1
 18213  0798  07DA               	addwf	___fladd@b,f
 18214  0799  3000               	movlw	0
 18215  079A  3DDB               	addwfc	___fladd@b+1,f
 18216  079B  3000               	movlw	0
 18217  079C  3DDC               	addwfc	___fladd@b+2,f
 18218  079D  3000               	movlw	0
 18219  079E  3DDD               	addwfc	___fladd@b+3,f
 18220  079F  1C5D               	btfss	___fladd@b+3,0
 18221  07A0  2FC0               	goto	l1281
 18222  07A1  085A               	movf	___fladd@b,w
 18223  07A2  00E2               	movwf	??___fladd
 18224  07A3  085B               	movf	___fladd@b+1,w
 18225  07A4  00E3               	movwf	??___fladd+1
 18226  07A5  085C               	movf	___fladd@b+2,w
 18227  07A6  00E4               	movwf	??___fladd+2
 18228  07A7  085D               	movf	___fladd@b+3,w
 18229  07A8  00E5               	movwf	??___fladd+3
 18230  07A9  3001               	movlw	1
 18231  07AA  00E6               	movwf	??___fladd+4
 18232  07AB                     u6045:	
 18233  07AB  37E5               	asrf	??___fladd+3,f
 18234  07AC  0CE4               	rrf	??___fladd+2,f
 18235  07AD  0CE3               	rrf	??___fladd+1,f
 18236  07AE  0CE2               	rrf	??___fladd,f
 18237  07AF  0BE6               	decfsz	??___fladd+4,f
 18238  07B0  2FAB               	goto	u6045
 18239  07B1  0865               	movf	??___fladd+3,w
 18240  07B2  00DD               	movwf	___fladd@b+3
 18241  07B3  0864               	movf	??___fladd+2,w
 18242  07B4  00DC               	movwf	___fladd@b+2
 18243  07B5  0863               	movf	??___fladd+1,w
 18244  07B6  00DB               	movwf	___fladd@b+1
 18245  07B7  0862               	movf	??___fladd,w
 18246  07B8  00DA               	movwf	___fladd@b
 18247  07B9  0A6C               	incf	___fladd@bexp,w
 18248  07BA  1903               	btfsc	3,2
 18249  07BB  2FC0               	goto	l1281
 18250  07BC  3001               	movlw	1
 18251  07BD  00E2               	movwf	??___fladd
 18252  07BE  0862               	movf	??___fladd,w
 18253  07BF  07EC               	addwf	___fladd@bexp,f
 18254  07C0                     l1281:	
 18255  07C0  0A6C               	incf	___fladd@bexp,w
 18256  07C1  1D03               	btfss	3,2
 18257  07C2  086C               	movf	___fladd@bexp,w
 18258  07C3  1D03               	btfss	3,2
 18259  07C4  2FD0               	goto	l5151
 18260  07C5  3000               	movlw	0
 18261  07C6  00DD               	movwf	___fladd@b+3
 18262  07C7  3000               	movlw	0
 18263  07C8  00DC               	movwf	___fladd@b+2
 18264  07C9  3000               	movlw	0
 18265  07CA  00DB               	movwf	___fladd@b+1
 18266  07CB  3000               	movlw	0
 18267  07CC  00DA               	movwf	___fladd@b
 18268  07CD  086C               	movf	___fladd@bexp,w
 18269  07CE  1903               	btfsc	3,2
 18270  07CF  01EA               	clrf	___fladd@signs
 18271  07D0                     l5151:	
 18272  07D0  1C6C               	btfss	___fladd@bexp,0
 18273  07D1  2FD4               	goto	l5155
 18274  07D2  17DC               	bsf	___fladd@b+2,7
 18275  07D3  2FD8               	goto	l1289
 18276  07D4                     l5155:	
 18277  07D4  307F               	movlw	127
 18278  07D5  00E2               	movwf	??___fladd
 18279  07D6  0862               	movf	??___fladd,w
 18280  07D7  05DC               	andwf	___fladd@b+2,f
 18281  07D8                     l1289:	
 18282  07D8  366C               	lsrf	___fladd@bexp,w
 18283  07D9  00E2               	movwf	??___fladd
 18284  07DA  0862               	movf	??___fladd,w
 18285  07DB  00DD               	movwf	___fladd@b+3
 18286  07DC  1FEA               	btfss	___fladd@signs,7
 18287  07DD  0008               	return
 18288  07DE  17DD               	bsf	___fladd@b+3,7
 18289  07DF  0008               	return
 18290  07E0                     __end_of___fladd:	
 18291                           
 18292                           	psect	text66
 18293  2E65                     __ptext66:	
 18294 ;; *************** function _calibrate_BATTSOC *****************
 18295 ;; Defined at:
 18296 ;;		line 23 in file "algorithms.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;		None
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;  j               2   24[BANK1 ] int 
 18301 ;;  i               2   22[BANK1 ] int 
 18302 ;; Return value:  Size  Location     Type
 18303 ;;                  1    wreg      void 
 18304 ;; Registers used:
 18305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18306 ;; Tracked objects:
 18307 ;;		On entry : 0/0
 18308 ;;		On exit  : 0/0
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18312 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18313 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18314 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18315 ;;Total ram usage:        9 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; Hardware stack levels required when called:    3
 18318 ;; This function calls:
 18319 ;;		___fldiv
 18320 ;;		___flmul
 18321 ;;		___fltol
 18322 ;;		___xxtofl
 18323 ;; This function is called by:
 18324 ;;		_AFE_UPDATE
 18325 ;; This function uses a non-reentrant model
 18326 ;;
 18327                           
 18328                           
 18329                           ;psect for function _calibrate_BATTSOC
 18330  2E65                     _calibrate_BATTSOC:	
 18331                           
 18332                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 18333                           
 18334                           ;incstack = 0
 18335                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18336  2E65  0021               	movlb	1	; select bank1
 18337  2E66  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 18338  2E67  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 18339  2E68                     l5999:	
 18340                           
 18341                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 18342  2E68  0021               	movlb	1	; select bank1
 18343  2E69  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 18344  2E6A  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 18345  2E6B                     l6005:	
 18346                           
 18347                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 18348  2E6B  0021               	movlb	1	; select bank1
 18349  2E6C  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18350  2E6D  0085               	movwf	5
 18351  2E6E  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18352  2E6F  0084               	movwf	4
 18353  2E70  3584               	lslf	4,f
 18354  2E71  0D85               	rlf	5,f
 18355  2E72  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 18356  2E73  0784               	addwf	4,f
 18357  2E74  30B8               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 18358  2E75  3D85               	addwfc	5,f
 18359  2E76  3F00               	moviw [0]fsr0
 18360  2E77  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18361  2E78  3F01               	moviw [1]fsr0
 18362  2E79  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18363  2E7A  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18364  2E7B  3EB4               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 18365  2E7C  0086               	movwf	6
 18366  2E7D  3001               	movlw	1	; select bank3/4
 18367  2E7E  0087               	movwf	7
 18368  2E7F  3F40               	moviw [0]fsr1
 18369  2E80  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18370  2E81  3F41               	moviw [1]fsr1
 18371  2E82  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18372  2E83  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 18373  2E84  3A80               	xorlw	128
 18374  2E85  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 18375  2E86  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18376  2E87  3A80               	xorlw	128
 18377  2E88  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 18378  2E89  1D03               	skipz
 18379  2E8A  2E8D               	goto	u7515
 18380  2E8B  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18381  2E8C  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18382  2E8D                     u7515:	
 18383  2E8D  1C03               	skipc
 18384  2E8E  2F0A               	goto	l6011
 18385                           
 18386                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 18387  2E8F  0021               	movlb	1	; select bank1
 18388  2E90  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18389  2E91  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18390  2E92  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18391  2E93  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18392  2E94  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 18393  2E95  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 18394  2E96  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18395  2E97  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18396  2E98  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18397  2E99  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18398  2E9A  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18399  2E9B  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18400  2E9C  0086               	movwf	6
 18401  2E9D  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18402  2E9E  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 18403  2E9F  0087               	movwf	7
 18404  2EA0  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18405  2EA1  3EAA               	addlw	(low (_cellSOC| (0+256)))& (0+255)
 18406  2EA2  0084               	movwf	4
 18407  2EA3  3001               	movlw	1	; select bank3/4
 18408  2EA4  0085               	movwf	5
 18409  2EA5  3F40               	moviw [0]fsr1
 18410  2EA6  3F80               	movwi [0]fsr0
 18411  2EA7  3F41               	moviw [1]fsr1
 18412  2EA8  3F81               	movwi [1]fsr0
 18413                           
 18414                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 18415  2EA9  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18416  2EAA  0085               	movwf	5
 18417  2EAB  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18418  2EAC  0084               	movwf	4
 18419  2EAD  3584               	lslf	4,f
 18420  2EAE  0D85               	rlf	5,f
 18421  2EAF  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18422  2EB0  0784               	addwf	4,f
 18423  2EB1  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18424  2EB2  3D85               	addwfc	5,f
 18425  2EB3  3F00               	moviw [0]fsr0
 18426  2EB4  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18427  2EB5  3F01               	moviw [1]fsr0
 18428  2EB6  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18429  2EB7  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18430  2EB8  00F1               	movwf	___xxtofl@val
 18431  2EB9  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18432  2EBA  00F2               	movwf	___xxtofl@val+1
 18433  2EBB  0D89               	rlf	9,f
 18434  2EBC  3B89               	subwfb	9,f
 18435  2EBD  0989               	comf	9,f
 18436  2EBE  00F3               	movwf	___xxtofl@val+2
 18437  2EBF  00F4               	movwf	___xxtofl@val+3
 18438  2EC0  3001               	movlw	1
 18439  2EC1  31AA  22E9  31AE   	fcall	___xxtofl
 18440  2EC4  0874               	movf	?___xxtofl+3,w
 18441  2EC5  0020               	movlb	0	; select bank0
 18442  2EC6  00C7               	movwf	___fldiv@b+3
 18443  2EC7  0873               	movf	?___xxtofl+2,w
 18444  2EC8  00C6               	movwf	___fldiv@b+2
 18445  2EC9  0872               	movf	?___xxtofl+1,w
 18446  2ECA  00C5               	movwf	___fldiv@b+1
 18447  2ECB  0871               	movf	?___xxtofl,w
 18448  2ECC  00C4               	movwf	___fldiv@b
 18449  2ECD  3042               	movlw	66
 18450  2ECE  00C3               	movwf	___fldiv@a+3
 18451  2ECF  30C8               	movlw	200
 18452  2ED0  00C2               	movwf	___fldiv@a+2
 18453  2ED1  3000               	movlw	0
 18454  2ED2  00C1               	movwf	___fldiv@a+1
 18455  2ED3  3000               	movlw	0
 18456  2ED4  00C0               	movwf	___fldiv@a
 18457  2ED5  319C  24E2  31AE   	fcall	___fldiv
 18458  2ED8  0020               	movlb	0	; select bank0
 18459  2ED9  0843               	movf	?___fldiv+3,w
 18460  2EDA  00AD               	movwf	___flmul@a+3
 18461  2EDB  0842               	movf	?___fldiv+2,w
 18462  2EDC  00AC               	movwf	___flmul@a+2
 18463  2EDD  0841               	movf	?___fldiv+1,w
 18464  2EDE  00AB               	movwf	___flmul@a+1
 18465  2EDF  0840               	movf	?___fldiv,w
 18466  2EE0  00AA               	movwf	___flmul@a
 18467  2EE1  3045               	movlw	69
 18468  2EE2  00A9               	movwf	___flmul@b+3
 18469  2EE3  301C               	movlw	28
 18470  2EE4  00A8               	movwf	___flmul@b+2
 18471  2EE5  3040               	movlw	64
 18472  2EE6  00A7               	movwf	___flmul@b+1
 18473  2EE7  3000               	movlw	0
 18474  2EE8  00A6               	movwf	___flmul@b
 18475  2EE9  3190  2023  31AE   	fcall	___flmul
 18476  2EEC  0020               	movlb	0	; select bank0
 18477  2EED  0829               	movf	?___flmul+3,w
 18478  2EEE  0021               	movlb	1	; select bank1
 18479  2EEF  00AB               	movwf	(___fltol@f1+3)^(0+128)
 18480  2EF0  0020               	movlb	0	; select bank0
 18481  2EF1  0828               	movf	?___flmul+2,w
 18482  2EF2  0021               	movlb	1	; select bank1
 18483  2EF3  00AA               	movwf	(___fltol@f1+2)^(0+128)
 18484  2EF4  0020               	movlb	0	; select bank0
 18485  2EF5  0827               	movf	?___flmul+1,w
 18486  2EF6  0021               	movlb	1	; select bank1
 18487  2EF7  00A9               	movwf	(___fltol@f1+1)^(0+128)
 18488  2EF8  0020               	movlb	0	; select bank0
 18489  2EF9  0826               	movf	?___flmul,w
 18490  2EFA  0021               	movlb	1	; select bank1
 18491  2EFB  00A8               	movwf	___fltol@f1^(0+128)
 18492  2EFC  31B7  279A  31AE   	fcall	___fltol
 18493  2EFF  0021               	movlb	1	; select bank1
 18494  2F00  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18495  2F01  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 18496  2F02  0086               	movwf	6
 18497  2F03  3001               	movlw	1	; select bank3/4
 18498  2F04  0087               	movwf	7
 18499  2F05  0828               	movf	?___fltol^(0+128),w
 18500  2F06  3FC0               	movwi [0]fsr1
 18501  2F07  0829               	movf	(?___fltol+1)^(0+128),w
 18502  2F08  3FC1               	movwi [1]fsr1
 18503                           
 18504                           ;algorithms.c: 31:                 break;
 18505  2F09  2F1A               	goto	l6013
 18506  2F0A                     l6011:	
 18507                           
 18508                           ;algorithms.c: 33:         }
 18509  2F0A  3001               	movlw	1
 18510  2F0B  0021               	movlb	1	; select bank1
 18511  2F0C  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 18512  2F0D  3000               	movlw	0
 18513  2F0E  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 18514  2F0F  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18515  2F10  3A80               	xorlw	128
 18516  2F11  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18517  2F12  3080               	movlw	128
 18518  2F13  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18519  2F14  1D03               	skipz
 18520  2F15  2F18               	goto	u7525
 18521  2F16  302E               	movlw	46
 18522  2F17  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 18523  2F18                     u7525:	
 18524  2F18  1C03               	skipc
 18525  2F19  2E6B               	goto	l6005
 18526  2F1A                     l6013:	
 18527                           
 18528                           ;algorithms.c: 34:     }
 18529  2F1A  3001               	movlw	1
 18530  2F1B  0021               	movlb	1	; select bank1
 18531  2F1C  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 18532  2F1D  3000               	movlw	0
 18533  2F1E  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 18534  2F1F  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 18535  2F20  3A80               	xorlw	128
 18536  2F21  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18537  2F22  3080               	movlw	128
 18538  2F23  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18539  2F24  1D03               	skipz
 18540  2F25  2F28               	goto	u7535
 18541  2F26  3005               	movlw	5
 18542  2F27  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 18543  2F28                     u7535:	
 18544  2F28  1803               	btfsc	3,0
 18545  2F29  0008               	return
 18546  2F2A  2E68               	goto	l5999
 18547  2F2B                     __end_of_calibrate_BATTSOC:	
 18548                           
 18549                           	psect	text67
 18550  2AE9                     __ptext67:	
 18551 ;; *************** function ___xxtofl *****************
 18552 ;; Defined at:
 18553 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18554 ;; Parameters:    Size  Location     Type
 18555 ;;  sign            1    wreg     unsigned char 
 18556 ;;  val             4    1[COMMON] long 
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;  sign            1    0[BANK0 ] unsigned char 
 18559 ;;  arg             4    2[BANK0 ] unsigned long 
 18560 ;;  exp             1    1[BANK0 ] unsigned char 
 18561 ;; Return value:  Size  Location     Type
 18562 ;;                  4    1[COMMON] unsigned char 
 18563 ;; Registers used:
 18564 ;;		wreg, status,2, status,0
 18565 ;; Tracked objects:
 18566 ;;		On entry : 0/0
 18567 ;;		On exit  : 0/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18571 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18573 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18574 ;;Total ram usage:       14 bytes
 18575 ;; Hardware stack levels used:    1
 18576 ;; Hardware stack levels required when called:    1
 18577 ;; This function calls:
 18578 ;;		Nothing
 18579 ;; This function is called by:
 18580 ;;		_setShortCircuitProtection
 18581 ;;		_setOverCurrentDischargeProtection
 18582 ;;		_updateCurrent
 18583 ;;		_updateVoltages
 18584 ;;		_updateTemperatures
 18585 ;;		_calibrate_BATTSOC
 18586 ;;		_coulomb_counter
 18587 ;;		_logf
 18588 ;;		_AFE_getSetShortCircuitCurrent
 18589 ;;		_AFE_getOverCurrentDischargeCurrent
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593                           
 18594                           ;psect for function ___xxtofl
 18595  2AE9                     ___xxtofl:	
 18596                           
 18597                           ;incstack = 0
 18598                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18599                           ;___xxtofl@sign stored from wreg
 18600  2AE9  0020               	movlb	0	; select bank0
 18601  2AEA  00A0               	movwf	___xxtofl@sign
 18602  2AEB  0820               	movf	___xxtofl@sign,w
 18603  2AEC  1D03               	btfss	3,2
 18604  2AED  1FF4               	btfss	___xxtofl@val+3,7
 18605  2AEE  2AFF               	goto	l5499
 18606  2AEF  0971               	comf	___xxtofl@val,w
 18607  2AF0  00A2               	movwf	___xxtofl@arg
 18608  2AF1  0972               	comf	___xxtofl@val+1,w
 18609  2AF2  00A3               	movwf	___xxtofl@arg+1
 18610  2AF3  0973               	comf	___xxtofl@val+2,w
 18611  2AF4  00A4               	movwf	___xxtofl@arg+2
 18612  2AF5  0974               	comf	___xxtofl@val+3,w
 18613  2AF6  00A5               	movwf	___xxtofl@arg+3
 18614  2AF7  0AA2               	incf	___xxtofl@arg,f
 18615  2AF8  1903               	skipnz
 18616  2AF9  0AA3               	incf	___xxtofl@arg+1,f
 18617  2AFA  1903               	skipnz
 18618  2AFB  0AA4               	incf	___xxtofl@arg+2,f
 18619  2AFC  1903               	skipnz
 18620  2AFD  0AA5               	incf	___xxtofl@arg+3,f
 18621  2AFE  2B07               	goto	l1381
 18622  2AFF                     l5499:	
 18623  2AFF  0874               	movf	___xxtofl@val+3,w
 18624  2B00  00A5               	movwf	___xxtofl@arg+3
 18625  2B01  0873               	movf	___xxtofl@val+2,w
 18626  2B02  00A4               	movwf	___xxtofl@arg+2
 18627  2B03  0872               	movf	___xxtofl@val+1,w
 18628  2B04  00A3               	movwf	___xxtofl@arg+1
 18629  2B05  0871               	movf	___xxtofl@val,w
 18630  2B06  00A2               	movwf	___xxtofl@arg
 18631  2B07                     l1381:	
 18632  2B07  0874               	movf	___xxtofl@val+3,w
 18633  2B08  0473               	iorwf	___xxtofl@val+2,w
 18634  2B09  0472               	iorwf	___xxtofl@val+1,w
 18635  2B0A  0471               	iorwf	___xxtofl@val,w
 18636  2B0B  1D03               	skipz
 18637  2B0C  2B16               	goto	l5505
 18638  2B0D  3000               	movlw	0
 18639  2B0E  00F4               	movwf	?___xxtofl+3
 18640  2B0F  3000               	movlw	0
 18641  2B10  00F3               	movwf	?___xxtofl+2
 18642  2B11  3000               	movlw	0
 18643  2B12  00F2               	movwf	?___xxtofl+1
 18644  2B13  3000               	movlw	0
 18645  2B14  00F1               	movwf	?___xxtofl
 18646  2B15  0008               	return
 18647  2B16                     l5505:	
 18648  2B16  3096               	movlw	150
 18649  2B17  00F5               	movwf	??___xxtofl
 18650  2B18  0875               	movf	??___xxtofl,w
 18651  2B19  00A1               	movwf	___xxtofl@exp
 18652  2B1A                     l5509:	
 18653  2B1A  30FE               	movlw	254
 18654  2B1B  0525               	andwf	___xxtofl@arg+3,w
 18655  2B1C  1903               	btfsc	3,2
 18656  2B1D  2B3D               	goto	l1387
 18657  2B1E  3001               	movlw	1
 18658  2B1F  00F5               	movwf	??___xxtofl
 18659  2B20  0875               	movf	??___xxtofl,w
 18660  2B21  07A1               	addwf	___xxtofl@exp,f
 18661  2B22  3001               	movlw	1
 18662  2B23                     u6795:	
 18663  2B23  36A5               	lsrf	___xxtofl@arg+3,f
 18664  2B24  0CA4               	rrf	___xxtofl@arg+2,f
 18665  2B25  0CA3               	rrf	___xxtofl@arg+1,f
 18666  2B26  0CA2               	rrf	___xxtofl@arg,f
 18667  2B27  0B89               	decfsz	9,f
 18668  2B28  2B23               	goto	u6795
 18669  2B29  2B1A               	goto	l5509
 18670  2B2A                     l5511:	
 18671  2B2A  3001               	movlw	1
 18672  2B2B  00F5               	movwf	??___xxtofl
 18673  2B2C  0875               	movf	??___xxtofl,w
 18674  2B2D  07A1               	addwf	___xxtofl@exp,f
 18675  2B2E  3001               	movlw	1
 18676  2B2F  07A2               	addwf	___xxtofl@arg,f
 18677  2B30  3000               	movlw	0
 18678  2B31  3DA3               	addwfc	___xxtofl@arg+1,f
 18679  2B32  3000               	movlw	0
 18680  2B33  3DA4               	addwfc	___xxtofl@arg+2,f
 18681  2B34  3000               	movlw	0
 18682  2B35  3DA5               	addwfc	___xxtofl@arg+3,f
 18683  2B36  3001               	movlw	1
 18684  2B37                     u6815:	
 18685  2B37  36A5               	lsrf	___xxtofl@arg+3,f
 18686  2B38  0CA4               	rrf	___xxtofl@arg+2,f
 18687  2B39  0CA3               	rrf	___xxtofl@arg+1,f
 18688  2B3A  0CA2               	rrf	___xxtofl@arg,f
 18689  2B3B  0B89               	decfsz	9,f
 18690  2B3C  2B37               	goto	u6815
 18691  2B3D                     l1387:	
 18692  2B3D  30FF               	movlw	255
 18693  2B3E  0525               	andwf	___xxtofl@arg+3,w
 18694  2B3F  1903               	btfsc	3,2
 18695  2B40  2B4F               	goto	l5519
 18696  2B41  2B2A               	goto	l5511
 18697  2B42                     l5521:	
 18698  2B42  3002               	movlw	2
 18699  2B43  0221               	subwf	___xxtofl@exp,w
 18700  2B44  1C03               	btfss	3,0
 18701  2B45  2B51               	goto	l1394
 18702  2B46  3001               	movlw	1
 18703  2B47  02A1               	subwf	___xxtofl@exp,f
 18704  2B48  3001               	movlw	1
 18705  2B49                     u6835:	
 18706  2B49  35A2               	lslf	___xxtofl@arg,f
 18707  2B4A  0DA3               	rlf	___xxtofl@arg+1,f
 18708  2B4B  0DA4               	rlf	___xxtofl@arg+2,f
 18709  2B4C  0DA5               	rlf	___xxtofl@arg+3,f
 18710  2B4D  0B89               	decfsz	9,f
 18711  2B4E  2B49               	goto	u6835
 18712  2B4F                     l5519:	
 18713  2B4F  1FA4               	btfss	___xxtofl@arg+2,7
 18714  2B50  2B42               	goto	l5521
 18715  2B51                     l1394:	
 18716  2B51  1821               	btfsc	___xxtofl@exp,0
 18717  2B52  2B5B               	goto	l1395
 18718  2B53  30FF               	movlw	255
 18719  2B54  05A2               	andwf	___xxtofl@arg,f
 18720  2B55  30FF               	movlw	255
 18721  2B56  05A3               	andwf	___xxtofl@arg+1,f
 18722  2B57  307F               	movlw	127
 18723  2B58  05A4               	andwf	___xxtofl@arg+2,f
 18724  2B59  30FF               	movlw	255
 18725  2B5A  05A5               	andwf	___xxtofl@arg+3,f
 18726  2B5B                     l1395:	
 18727  2B5B  1003               	clrc
 18728  2B5C  0CA1               	rrf	___xxtofl@exp,f
 18729  2B5D  0821               	movf	___xxtofl@exp,w
 18730  2B5E  00F5               	movwf	??___xxtofl
 18731  2B5F  01F6               	clrf	??___xxtofl+1
 18732  2B60  01F7               	clrf	??___xxtofl+2
 18733  2B61  01F8               	clrf	??___xxtofl+3
 18734  2B62  3018               	movlw	24
 18735  2B63                     u6875:	
 18736  2B63  35F5               	lslf	??___xxtofl,f
 18737  2B64  0DF6               	rlf	??___xxtofl+1,f
 18738  2B65  0DF7               	rlf	??___xxtofl+2,f
 18739  2B66  0DF8               	rlf	??___xxtofl+3,f
 18740  2B67  0B89               	decfsz	9,f
 18741  2B68  2B63               	goto	u6875
 18742  2B69  0875               	movf	??___xxtofl,w
 18743  2B6A  04A2               	iorwf	___xxtofl@arg,f
 18744  2B6B  0876               	movf	??___xxtofl+1,w
 18745  2B6C  04A3               	iorwf	___xxtofl@arg+1,f
 18746  2B6D  0877               	movf	??___xxtofl+2,w
 18747  2B6E  04A4               	iorwf	___xxtofl@arg+2,f
 18748  2B6F  0878               	movf	??___xxtofl+3,w
 18749  2B70  04A5               	iorwf	___xxtofl@arg+3,f
 18750  2B71  0820               	movf	___xxtofl@sign,w
 18751  2B72  1D03               	btfss	3,2
 18752  2B73  1FF4               	btfss	___xxtofl@val+3,7
 18753  2B74  2B76               	goto	l5533
 18754  2B75  17A5               	bsf	___xxtofl@arg+3,7
 18755  2B76                     l5533:	
 18756  2B76  0825               	movf	___xxtofl@arg+3,w
 18757  2B77  00F4               	movwf	?___xxtofl+3
 18758  2B78  0824               	movf	___xxtofl@arg+2,w
 18759  2B79  00F3               	movwf	?___xxtofl+2
 18760  2B7A  0823               	movf	___xxtofl@arg+1,w
 18761  2B7B  00F2               	movwf	?___xxtofl+1
 18762  2B7C  0822               	movf	___xxtofl@arg,w
 18763  2B7D  00F1               	movwf	?___xxtofl
 18764  2B7E  0008               	return
 18765  2B7F                     __end_of___xxtofl:	
 18766                           
 18767                           	psect	text68
 18768  379A                     __ptext68:	
 18769 ;; *************** function ___fltol *****************
 18770 ;; Defined at:
 18771 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  f1              4    8[BANK1 ] unsigned char 
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;  exp1            1   11[COMMON] unsigned char 
 18776 ;;  sign1           1   10[COMMON] unsigned char 
 18777 ;; Return value:  Size  Location     Type
 18778 ;;                  4    8[BANK1 ] long 
 18779 ;; Registers used:
 18780 ;;		wreg, status,2, status,0
 18781 ;; Tracked objects:
 18782 ;;		On entry : 0/0
 18783 ;;		On exit  : 0/0
 18784 ;;		Unchanged: 0/0
 18785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18786 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18788 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18789 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18790 ;;Total ram usage:       11 bytes
 18791 ;; Hardware stack levels used:    1
 18792 ;; Hardware stack levels required when called:    1
 18793 ;; This function calls:
 18794 ;;		Nothing
 18795 ;; This function is called by:
 18796 ;;		_updateCurrent
 18797 ;;		_updateVoltages
 18798 ;;		_updateTemperatures
 18799 ;;		_calibrate_BATTSOC
 18800 ;;		_coulomb_counter
 18801 ;;		_AFE_getSetShortCircuitCurrent
 18802 ;;		_AFE_getOverCurrentDischargeCurrent
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           
 18807                           ;psect for function ___fltol
 18808  379A                     ___fltol:	
 18809                           
 18810                           ;incstack = 0
 18811                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18812  379A  1003               	clrc
 18813  379B  0021               	movlb	1	; select bank1
 18814  379C  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18815  379D  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18816  379E  00AC               	movwf	??___fltol^(0+128)
 18817  379F  082C               	movf	??___fltol^(0+128),w
 18818  37A0  00FB               	movwf	___fltol@exp1
 18819  37A1  087B               	movf	___fltol@exp1,w
 18820  37A2  1D03               	btfss	3,2
 18821  37A3  2FAD               	goto	l5743
 18822  37A4                     l5739:	
 18823  37A4  3000               	movlw	0
 18824  37A5  00AB               	movwf	(?___fltol+3)^(0+128)
 18825  37A6  3000               	movlw	0
 18826  37A7  00AA               	movwf	(?___fltol+2)^(0+128)
 18827  37A8  3000               	movlw	0
 18828  37A9  00A9               	movwf	(?___fltol+1)^(0+128)
 18829  37AA  3000               	movlw	0
 18830  37AB  00A8               	movwf	?___fltol^(0+128)
 18831  37AC  0008               	return
 18832  37AD                     l5743:	
 18833  37AD  0828               	movf	___fltol@f1^(0+128),w
 18834  37AE  00AC               	movwf	??___fltol^(0+128)
 18835  37AF  0829               	movf	(___fltol@f1+1)^(0+128),w
 18836  37B0  00AD               	movwf	(??___fltol^(0+128)+1)
 18837  37B1  082A               	movf	(___fltol@f1+2)^(0+128),w
 18838  37B2  00AE               	movwf	(??___fltol^(0+128)+2)
 18839  37B3  082B               	movf	(___fltol@f1+3)^(0+128),w
 18840  37B4  00AF               	movwf	(??___fltol^(0+128)+3)
 18841  37B5  301F               	movlw	31
 18842  37B6                     u7225:	
 18843  37B6  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18844  37B7  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18845  37B8  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18846  37B9  0CAC               	rrf	??___fltol^(0+128),f
 18847  37BA  0B89               	decfsz	9,f
 18848  37BB  2FB6               	goto	u7225
 18849  37BC  082C               	movf	??___fltol^(0+128),w
 18850  37BD  00B0               	movwf	(??___fltol+4)^(0+128)
 18851  37BE  0830               	movf	(??___fltol+4)^(0+128),w
 18852  37BF  00FA               	movwf	___fltol@sign1
 18853  37C0  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18854  37C1  30FF               	movlw	255
 18855  37C2  05A8               	andwf	___fltol@f1^(0+128),f
 18856  37C3  30FF               	movlw	255
 18857  37C4  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18858  37C5  30FF               	movlw	255
 18859  37C6  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18860  37C7  3000               	movlw	0
 18861  37C8  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18862  37C9  3096               	movlw	150
 18863  37CA  02FB               	subwf	___fltol@exp1,f
 18864  37CB  1FFB               	btfss	___fltol@exp1,7
 18865  37CC  2FE0               	goto	l5761
 18866  37CD  087B               	movf	___fltol@exp1,w
 18867  37CE  3A80               	xorlw	128
 18868  37CF  3E97               	addlw	151
 18869  37D0  1C03               	btfss	3,0
 18870  37D1  2FA4               	goto	l5739
 18871  37D2                     l5759:	
 18872  37D2  3001               	movlw	1
 18873  37D3                     u7255:	
 18874  37D3  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18875  37D4  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18876  37D5  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18877  37D6  0CA8               	rrf	___fltol@f1^(0+128),f
 18878  37D7  0B89               	decfsz	9,f
 18879  37D8  2FD3               	goto	u7255
 18880  37D9  3001               	movlw	1
 18881  37DA  00AC               	movwf	??___fltol^(0+128)
 18882  37DB  082C               	movf	??___fltol^(0+128),w
 18883  37DC  07FB               	addwf	___fltol@exp1,f
 18884  37DD  1903               	btfsc	3,2
 18885  37DE  2FF1               	goto	l5769
 18886  37DF  2FD2               	goto	l5759
 18887  37E0                     l5761:	
 18888  37E0  3020               	movlw	32
 18889  37E1  027B               	subwf	___fltol@exp1,w
 18890  37E2  1803               	btfsc	3,0
 18891  37E3  2FA4               	goto	l5739
 18892  37E4                     l1147:	
 18893  37E4  087B               	movf	___fltol@exp1,w
 18894  37E5  1903               	btfsc	3,2
 18895  37E6  2FF1               	goto	l5769
 18896  37E7  3001               	movlw	1
 18897  37E8                     u7285:	
 18898  37E8  35A8               	lslf	___fltol@f1^(0+128),f
 18899  37E9  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18900  37EA  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18901  37EB  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18902  37EC  0B89               	decfsz	9,f
 18903  37ED  2FE8               	goto	u7285
 18904  37EE  3001               	movlw	1
 18905  37EF  02FB               	subwf	___fltol@exp1,f
 18906  37F0  2FE4               	goto	l1147
 18907  37F1                     l5769:	
 18908  37F1  087A               	movf	___fltol@sign1,w
 18909  37F2  1903               	btfsc	3,2
 18910  37F3  0008               	return
 18911  37F4  09A8               	comf	___fltol@f1^(0+128),f
 18912  37F5  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18913  37F6  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18914  37F7  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18915  37F8  0AA8               	incf	___fltol@f1^(0+128),f
 18916  37F9  1903               	skipnz
 18917  37FA  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18918  37FB  1903               	skipnz
 18919  37FC  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18920  37FD  1903               	skipnz
 18921  37FE  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18922  37FF  0008               	return
 18923  3800                     __end_of___fltol:	
 18924                           
 18925                           	psect	text69
 18926  1023                     __ptext69:	
 18927 ;; *************** function ___flmul *****************
 18928 ;; Defined at:
 18929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18930 ;; Parameters:    Size  Location     Type
 18931 ;;  b               4    6[BANK0 ] long 
 18932 ;;  a               4   10[BANK0 ] long 
 18933 ;; Auto vars:     Size  Location     Type
 18934 ;;  prod            4   26[BANK0 ] struct .
 18935 ;;  grs             4   20[BANK0 ] unsigned long 
 18936 ;;  temp            2   30[BANK0 ] struct .
 18937 ;;  bexp            1   25[BANK0 ] unsigned char 
 18938 ;;  aexp            1   24[BANK0 ] unsigned char 
 18939 ;;  sign            1   19[BANK0 ] unsigned char 
 18940 ;; Return value:  Size  Location     Type
 18941 ;;                  4    6[BANK0 ] unsigned char 
 18942 ;; Registers used:
 18943 ;;		wreg, status,2, status,0, pclath, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18949 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18950 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18951 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18952 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18953 ;;Total ram usage:       26 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:    2
 18956 ;; This function calls:
 18957 ;;		__Umul8_16
 18958 ;; This function is called by:
 18959 ;;		_setShortCircuitProtection
 18960 ;;		_setOverCurrentDischargeProtection
 18961 ;;		_updateCurrent
 18962 ;;		_updateVoltages
 18963 ;;		_updateTemperatures
 18964 ;;		_calibrate_BATTSOC
 18965 ;;		_coulomb_counter
 18966 ;;		_logf
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970                           
 18971                           ;psect for function ___flmul
 18972  1023                     ___flmul:	
 18973                           
 18974                           ;incstack = 0
 18975                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18976  1023  0020               	movlb	0	; select bank0
 18977  1024  0829               	movf	___flmul@b+3,w
 18978  1025  3980               	andlw	128
 18979  1026  00AE               	movwf	??___flmul
 18980  1027  082E               	movf	??___flmul,w
 18981  1028  00B3               	movwf	___flmul@sign
 18982  1029  3529               	lslf	___flmul@b+3,w
 18983  102A  00AE               	movwf	??___flmul
 18984  102B  082E               	movf	??___flmul,w
 18985  102C  00B9               	movwf	___flmul@bexp
 18986  102D  1BA8               	btfsc	___flmul@b+2,7
 18987  102E  1439               	bsf	___flmul@bexp,0
 18988  102F  0839               	movf	___flmul@bexp,w
 18989  1030  1903               	btfsc	3,2
 18990  1031  283F               	goto	l5369
 18991  1032  0A39               	incf	___flmul@bexp,w
 18992  1033  1D03               	btfss	3,2
 18993  1034  283D               	goto	l5367
 18994  1035  3000               	movlw	0
 18995  1036  00A9               	movwf	___flmul@b+3
 18996  1037  3000               	movlw	0
 18997  1038  00A8               	movwf	___flmul@b+2
 18998  1039  3000               	movlw	0
 18999  103A  00A7               	movwf	___flmul@b+1
 19000  103B  3000               	movlw	0
 19001  103C  00A6               	movwf	___flmul@b
 19002  103D                     l5367:	
 19003  103D  17A8               	bsf	___flmul@b+2,7
 19004  103E  2847               	goto	l5371
 19005  103F                     l5369:	
 19006  103F  3000               	movlw	0
 19007  1040  00A9               	movwf	___flmul@b+3
 19008  1041  3000               	movlw	0
 19009  1042  00A8               	movwf	___flmul@b+2
 19010  1043  3000               	movlw	0
 19011  1044  00A7               	movwf	___flmul@b+1
 19012  1045  3000               	movlw	0
 19013  1046  00A6               	movwf	___flmul@b
 19014  1047                     l5371:	
 19015  1047  082D               	movf	___flmul@a+3,w
 19016  1048  3980               	andlw	128
 19017  1049  00AE               	movwf	??___flmul
 19018  104A  082E               	movf	??___flmul,w
 19019  104B  06B3               	xorwf	___flmul@sign,f
 19020  104C  352D               	lslf	___flmul@a+3,w
 19021  104D  00AE               	movwf	??___flmul
 19022  104E  082E               	movf	??___flmul,w
 19023  104F  00B8               	movwf	___flmul@aexp
 19024  1050  1BAC               	btfsc	___flmul@a+2,7
 19025  1051  1438               	bsf	___flmul@aexp,0
 19026  1052  0838               	movf	___flmul@aexp,w
 19027  1053  1903               	btfsc	3,2
 19028  1054  2862               	goto	l5387
 19029  1055  0A38               	incf	___flmul@aexp,w
 19030  1056  1D03               	btfss	3,2
 19031  1057  2860               	goto	l5385
 19032  1058  3000               	movlw	0
 19033  1059  00AD               	movwf	___flmul@a+3
 19034  105A  3000               	movlw	0
 19035  105B  00AC               	movwf	___flmul@a+2
 19036  105C  3000               	movlw	0
 19037  105D  00AB               	movwf	___flmul@a+1
 19038  105E  3000               	movlw	0
 19039  105F  00AA               	movwf	___flmul@a
 19040  1060                     l5385:	
 19041  1060  17AC               	bsf	___flmul@a+2,7
 19042  1061  286A               	goto	l5389
 19043  1062                     l5387:	
 19044  1062  3000               	movlw	0
 19045  1063  00AD               	movwf	___flmul@a+3
 19046  1064  3000               	movlw	0
 19047  1065  00AC               	movwf	___flmul@a+2
 19048  1066  3000               	movlw	0
 19049  1067  00AB               	movwf	___flmul@a+1
 19050  1068  3000               	movlw	0
 19051  1069  00AA               	movwf	___flmul@a
 19052  106A                     l5389:	
 19053  106A  0838               	movf	___flmul@aexp,w
 19054  106B  1D03               	btfss	3,2
 19055  106C  0839               	movf	___flmul@bexp,w
 19056  106D  1D03               	btfss	3,2
 19057  106E  2878               	goto	l5397
 19058  106F  3000               	movlw	0
 19059  1070  00A9               	movwf	?___flmul+3
 19060  1071  3000               	movlw	0
 19061  1072  00A8               	movwf	?___flmul+2
 19062  1073  3000               	movlw	0
 19063  1074  00A7               	movwf	?___flmul+1
 19064  1075  3000               	movlw	0
 19065  1076  00A6               	movwf	?___flmul
 19066  1077  0008               	return
 19067  1078                     l5397:	
 19068  1078  0826               	movf	___flmul@b,w
 19069  1079  00AE               	movwf	??___flmul
 19070  107A  082E               	movf	??___flmul,w
 19071  107B  00F1               	movwf	__Umul8_16@multiplicand
 19072  107C  082C               	movf	___flmul@a+2,w
 19073  107D  3187  27E0  3190   	fcall	__Umul8_16
 19074  1080  0872               	movf	?__Umul8_16+1,w
 19075  1081  0020               	movlb	0	; select bank0
 19076  1082  00BF               	movwf	___flmul@temp+1
 19077  1083  0871               	movf	?__Umul8_16,w
 19078  1084  00BE               	movwf	___flmul@temp
 19079  1085  083E               	movf	___flmul@temp,w
 19080  1086  00AE               	movwf	??___flmul
 19081  1087  01AF               	clrf	??___flmul+1
 19082  1088  01B0               	clrf	??___flmul+2
 19083  1089  01B1               	clrf	??___flmul+3
 19084  108A  0831               	movf	??___flmul+3,w
 19085  108B  00B7               	movwf	___flmul@grs+3
 19086  108C  0830               	movf	??___flmul+2,w
 19087  108D  00B6               	movwf	___flmul@grs+2
 19088  108E  082F               	movf	??___flmul+1,w
 19089  108F  00B5               	movwf	___flmul@grs+1
 19090  1090  082E               	movf	??___flmul,w
 19091  1091  00B4               	movwf	___flmul@grs
 19092  1092  083F               	movf	___flmul@temp+1,w
 19093  1093  00AE               	movwf	??___flmul
 19094  1094  01AF               	clrf	??___flmul+1
 19095  1095  01B0               	clrf	??___flmul+2
 19096  1096  01B1               	clrf	??___flmul+3
 19097  1097  0831               	movf	??___flmul+3,w
 19098  1098  00BD               	movwf	___flmul@prod+3
 19099  1099  0830               	movf	??___flmul+2,w
 19100  109A  00BC               	movwf	___flmul@prod+2
 19101  109B  082F               	movf	??___flmul+1,w
 19102  109C  00BB               	movwf	___flmul@prod+1
 19103  109D  082E               	movf	??___flmul,w
 19104  109E  00BA               	movwf	___flmul@prod
 19105  109F  0827               	movf	___flmul@b+1,w
 19106  10A0  00AE               	movwf	??___flmul
 19107  10A1  082E               	movf	??___flmul,w
 19108  10A2  00F1               	movwf	__Umul8_16@multiplicand
 19109  10A3  082B               	movf	___flmul@a+1,w
 19110  10A4  3187  27E0  3190   	fcall	__Umul8_16
 19111  10A7  0872               	movf	?__Umul8_16+1,w
 19112  10A8  0020               	movlb	0	; select bank0
 19113  10A9  00BF               	movwf	___flmul@temp+1
 19114  10AA  0871               	movf	?__Umul8_16,w
 19115  10AB  00BE               	movwf	___flmul@temp
 19116  10AC  083E               	movf	___flmul@temp,w
 19117  10AD  00AE               	movwf	??___flmul
 19118  10AE  01AF               	clrf	??___flmul+1
 19119  10AF  01B0               	clrf	??___flmul+2
 19120  10B0  01B1               	clrf	??___flmul+3
 19121  10B1  082E               	movf	??___flmul,w
 19122  10B2  07B4               	addwf	___flmul@grs,f
 19123  10B3  082F               	movf	??___flmul+1,w
 19124  10B4  3DB5               	addwfc	___flmul@grs+1,f
 19125  10B5  0830               	movf	??___flmul+2,w
 19126  10B6  3DB6               	addwfc	___flmul@grs+2,f
 19127  10B7  0831               	movf	??___flmul+3,w
 19128  10B8  3DB7               	addwfc	___flmul@grs+3,f
 19129  10B9  083F               	movf	___flmul@temp+1,w
 19130  10BA  00AE               	movwf	??___flmul
 19131  10BB  01AF               	clrf	??___flmul+1
 19132  10BC  01B0               	clrf	??___flmul+2
 19133  10BD  01B1               	clrf	??___flmul+3
 19134  10BE  082E               	movf	??___flmul,w
 19135  10BF  07BA               	addwf	___flmul@prod,f
 19136  10C0  082F               	movf	??___flmul+1,w
 19137  10C1  3DBB               	addwfc	___flmul@prod+1,f
 19138  10C2  0830               	movf	??___flmul+2,w
 19139  10C3  3DBC               	addwfc	___flmul@prod+2,f
 19140  10C4  0831               	movf	??___flmul+3,w
 19141  10C5  3DBD               	addwfc	___flmul@prod+3,f
 19142  10C6  0828               	movf	___flmul@b+2,w
 19143  10C7  00AE               	movwf	??___flmul
 19144  10C8  082E               	movf	??___flmul,w
 19145  10C9  00F1               	movwf	__Umul8_16@multiplicand
 19146  10CA  082A               	movf	___flmul@a,w
 19147  10CB  3187  27E0  3190   	fcall	__Umul8_16
 19148  10CE  0872               	movf	?__Umul8_16+1,w
 19149  10CF  0020               	movlb	0	; select bank0
 19150  10D0  00BF               	movwf	___flmul@temp+1
 19151  10D1  0871               	movf	?__Umul8_16,w
 19152  10D2  00BE               	movwf	___flmul@temp
 19153  10D3  083E               	movf	___flmul@temp,w
 19154  10D4  00AE               	movwf	??___flmul
 19155  10D5  01AF               	clrf	??___flmul+1
 19156  10D6  01B0               	clrf	??___flmul+2
 19157  10D7  01B1               	clrf	??___flmul+3
 19158  10D8  082E               	movf	??___flmul,w
 19159  10D9  07B4               	addwf	___flmul@grs,f
 19160  10DA  082F               	movf	??___flmul+1,w
 19161  10DB  3DB5               	addwfc	___flmul@grs+1,f
 19162  10DC  0830               	movf	??___flmul+2,w
 19163  10DD  3DB6               	addwfc	___flmul@grs+2,f
 19164  10DE  0831               	movf	??___flmul+3,w
 19165  10DF  3DB7               	addwfc	___flmul@grs+3,f
 19166  10E0  083F               	movf	___flmul@temp+1,w
 19167  10E1  00AE               	movwf	??___flmul
 19168  10E2  01AF               	clrf	??___flmul+1
 19169  10E3  01B0               	clrf	??___flmul+2
 19170  10E4  01B1               	clrf	??___flmul+3
 19171  10E5  082E               	movf	??___flmul,w
 19172  10E6  07BA               	addwf	___flmul@prod,f
 19173  10E7  082F               	movf	??___flmul+1,w
 19174  10E8  3DBB               	addwfc	___flmul@prod+1,f
 19175  10E9  0830               	movf	??___flmul+2,w
 19176  10EA  3DBC               	addwfc	___flmul@prod+2,f
 19177  10EB  0831               	movf	??___flmul+3,w
 19178  10EC  3DBD               	addwfc	___flmul@prod+3,f
 19179  10ED  3008               	movlw	8
 19180  10EE                     u6585:	
 19181  10EE  35B4               	lslf	___flmul@grs,f
 19182  10EF  0DB5               	rlf	___flmul@grs+1,f
 19183  10F0  0DB6               	rlf	___flmul@grs+2,f
 19184  10F1  0DB7               	rlf	___flmul@grs+3,f
 19185  10F2  0B89               	decfsz	9,f
 19186  10F3  28EE               	goto	u6585
 19187  10F4  0827               	movf	___flmul@b+1,w
 19188  10F5  00AE               	movwf	??___flmul
 19189  10F6  082E               	movf	??___flmul,w
 19190  10F7  00F1               	movwf	__Umul8_16@multiplicand
 19191  10F8  082A               	movf	___flmul@a,w
 19192  10F9  3187  27E0  3190   	fcall	__Umul8_16
 19193  10FC  0872               	movf	?__Umul8_16+1,w
 19194  10FD  0020               	movlb	0	; select bank0
 19195  10FE  00BF               	movwf	___flmul@temp+1
 19196  10FF  0871               	movf	?__Umul8_16,w
 19197  1100  00BE               	movwf	___flmul@temp
 19198  1101  083E               	movf	___flmul@temp,w
 19199  1102  07B4               	addwf	___flmul@grs,f
 19200  1103  083F               	movf	___flmul@temp+1,w
 19201  1104  3DB5               	addwfc	___flmul@grs+1,f
 19202  1105  3000               	movlw	0
 19203  1106  3DB6               	addwfc	___flmul@grs+2,f
 19204  1107  3DB7               	addwfc	___flmul@grs+3,f
 19205  1108  0826               	movf	___flmul@b,w
 19206  1109  00AE               	movwf	??___flmul
 19207  110A  082E               	movf	??___flmul,w
 19208  110B  00F1               	movwf	__Umul8_16@multiplicand
 19209  110C  082B               	movf	___flmul@a+1,w
 19210  110D  3187  27E0  3190   	fcall	__Umul8_16
 19211  1110  0872               	movf	?__Umul8_16+1,w
 19212  1111  0020               	movlb	0	; select bank0
 19213  1112  00BF               	movwf	___flmul@temp+1
 19214  1113  0871               	movf	?__Umul8_16,w
 19215  1114  00BE               	movwf	___flmul@temp
 19216  1115  083E               	movf	___flmul@temp,w
 19217  1116  07B4               	addwf	___flmul@grs,f
 19218  1117  083F               	movf	___flmul@temp+1,w
 19219  1118  3DB5               	addwfc	___flmul@grs+1,f
 19220  1119  3000               	movlw	0
 19221  111A  3DB6               	addwfc	___flmul@grs+2,f
 19222  111B  3DB7               	addwfc	___flmul@grs+3,f
 19223  111C  3008               	movlw	8
 19224  111D                     u6595:	
 19225  111D  35B4               	lslf	___flmul@grs,f
 19226  111E  0DB5               	rlf	___flmul@grs+1,f
 19227  111F  0DB6               	rlf	___flmul@grs+2,f
 19228  1120  0DB7               	rlf	___flmul@grs+3,f
 19229  1121  0B89               	decfsz	9,f
 19230  1122  291D               	goto	u6595
 19231  1123  0826               	movf	___flmul@b,w
 19232  1124  00AE               	movwf	??___flmul
 19233  1125  082E               	movf	??___flmul,w
 19234  1126  00F1               	movwf	__Umul8_16@multiplicand
 19235  1127  082A               	movf	___flmul@a,w
 19236  1128  3187  27E0  3190   	fcall	__Umul8_16
 19237  112B  0872               	movf	?__Umul8_16+1,w
 19238  112C  0020               	movlb	0	; select bank0
 19239  112D  00BF               	movwf	___flmul@temp+1
 19240  112E  0871               	movf	?__Umul8_16,w
 19241  112F  00BE               	movwf	___flmul@temp
 19242  1130  083E               	movf	___flmul@temp,w
 19243  1131  07B4               	addwf	___flmul@grs,f
 19244  1132  083F               	movf	___flmul@temp+1,w
 19245  1133  3DB5               	addwfc	___flmul@grs+1,f
 19246  1134  3000               	movlw	0
 19247  1135  3DB6               	addwfc	___flmul@grs+2,f
 19248  1136  3DB7               	addwfc	___flmul@grs+3,f
 19249  1137  0827               	movf	___flmul@b+1,w
 19250  1138  00AE               	movwf	??___flmul
 19251  1139  082E               	movf	??___flmul,w
 19252  113A  00F1               	movwf	__Umul8_16@multiplicand
 19253  113B  082C               	movf	___flmul@a+2,w
 19254  113C  3187  27E0  3190   	fcall	__Umul8_16
 19255  113F  0872               	movf	?__Umul8_16+1,w
 19256  1140  0020               	movlb	0	; select bank0
 19257  1141  00BF               	movwf	___flmul@temp+1
 19258  1142  0871               	movf	?__Umul8_16,w
 19259  1143  00BE               	movwf	___flmul@temp
 19260  1144  083E               	movf	___flmul@temp,w
 19261  1145  07BA               	addwf	___flmul@prod,f
 19262  1146  083F               	movf	___flmul@temp+1,w
 19263  1147  3DBB               	addwfc	___flmul@prod+1,f
 19264  1148  3000               	movlw	0
 19265  1149  3DBC               	addwfc	___flmul@prod+2,f
 19266  114A  3DBD               	addwfc	___flmul@prod+3,f
 19267  114B  0828               	movf	___flmul@b+2,w
 19268  114C  00AE               	movwf	??___flmul
 19269  114D  082E               	movf	??___flmul,w
 19270  114E  00F1               	movwf	__Umul8_16@multiplicand
 19271  114F  082B               	movf	___flmul@a+1,w
 19272  1150  3187  27E0  3190   	fcall	__Umul8_16
 19273  1153  0872               	movf	?__Umul8_16+1,w
 19274  1154  0020               	movlb	0	; select bank0
 19275  1155  00BF               	movwf	___flmul@temp+1
 19276  1156  0871               	movf	?__Umul8_16,w
 19277  1157  00BE               	movwf	___flmul@temp
 19278  1158  083E               	movf	___flmul@temp,w
 19279  1159  07BA               	addwf	___flmul@prod,f
 19280  115A  083F               	movf	___flmul@temp+1,w
 19281  115B  3DBB               	addwfc	___flmul@prod+1,f
 19282  115C  3000               	movlw	0
 19283  115D  3DBC               	addwfc	___flmul@prod+2,f
 19284  115E  3DBD               	addwfc	___flmul@prod+3,f
 19285  115F  0828               	movf	___flmul@b+2,w
 19286  1160  00AE               	movwf	??___flmul
 19287  1161  082E               	movf	??___flmul,w
 19288  1162  00F1               	movwf	__Umul8_16@multiplicand
 19289  1163  082C               	movf	___flmul@a+2,w
 19290  1164  3187  27E0  3190   	fcall	__Umul8_16
 19291  1167  0872               	movf	?__Umul8_16+1,w
 19292  1168  0020               	movlb	0	; select bank0
 19293  1169  00BF               	movwf	___flmul@temp+1
 19294  116A  0871               	movf	?__Umul8_16,w
 19295  116B  00BE               	movwf	___flmul@temp
 19296  116C  083E               	movf	___flmul@temp,w
 19297  116D  00AE               	movwf	??___flmul
 19298  116E  083F               	movf	___flmul@temp+1,w
 19299  116F  00AF               	movwf	??___flmul+1
 19300  1170  01B0               	clrf	??___flmul+2
 19301  1171  01B1               	clrf	??___flmul+3
 19302  1172  3008               	movlw	8
 19303  1173                     u6605:	
 19304  1173  35AE               	lslf	??___flmul,f
 19305  1174  0DAF               	rlf	??___flmul+1,f
 19306  1175  0DB0               	rlf	??___flmul+2,f
 19307  1176  0DB1               	rlf	??___flmul+3,f
 19308  1177  0B89               	decfsz	9,f
 19309  1178  2973               	goto	u6605
 19310  1179  082E               	movf	??___flmul,w
 19311  117A  07BA               	addwf	___flmul@prod,f
 19312  117B  082F               	movf	??___flmul+1,w
 19313  117C  3DBB               	addwfc	___flmul@prod+1,f
 19314  117D  0830               	movf	??___flmul+2,w
 19315  117E  3DBC               	addwfc	___flmul@prod+2,f
 19316  117F  0831               	movf	??___flmul+3,w
 19317  1180  3DBD               	addwfc	___flmul@prod+3,f
 19318  1181  0834               	movf	___flmul@grs,w
 19319  1182  00AE               	movwf	??___flmul
 19320  1183  0835               	movf	___flmul@grs+1,w
 19321  1184  00AF               	movwf	??___flmul+1
 19322  1185  0836               	movf	___flmul@grs+2,w
 19323  1186  00B0               	movwf	??___flmul+2
 19324  1187  0837               	movf	___flmul@grs+3,w
 19325  1188  00B1               	movwf	??___flmul+3
 19326  1189  3018               	movlw	24
 19327  118A                     u6615:	
 19328  118A  36B1               	lsrf	??___flmul+3,f
 19329  118B  0CB0               	rrf	??___flmul+2,f
 19330  118C  0CAF               	rrf	??___flmul+1,f
 19331  118D  0CAE               	rrf	??___flmul,f
 19332  118E  0B89               	decfsz	9,f
 19333  118F  298A               	goto	u6615
 19334  1190  082E               	movf	??___flmul,w
 19335  1191  07BA               	addwf	___flmul@prod,f
 19336  1192  082F               	movf	??___flmul+1,w
 19337  1193  3DBB               	addwfc	___flmul@prod+1,f
 19338  1194  0830               	movf	??___flmul+2,w
 19339  1195  3DBC               	addwfc	___flmul@prod+2,f
 19340  1196  0831               	movf	??___flmul+3,w
 19341  1197  3DBD               	addwfc	___flmul@prod+3,f
 19342  1198  3008               	movlw	8
 19343  1199                     u6625:	
 19344  1199  35B4               	lslf	___flmul@grs,f
 19345  119A  0DB5               	rlf	___flmul@grs+1,f
 19346  119B  0DB6               	rlf	___flmul@grs+2,f
 19347  119C  0DB7               	rlf	___flmul@grs+3,f
 19348  119D  0B89               	decfsz	9,f
 19349  119E  2999               	goto	u6625
 19350  119F  0839               	movf	___flmul@bexp,w
 19351  11A0  0738               	addwf	___flmul@aexp,w
 19352  11A1  00AE               	movwf	??___flmul
 19353  11A2  01AF               	clrf	??___flmul+1
 19354  11A3  0DAF               	rlf	??___flmul+1,f
 19355  11A4  082E               	movf	??___flmul,w
 19356  11A5  3E82               	addlw	130
 19357  11A6  00BE               	movwf	___flmul@temp
 19358  11A7  30FF               	movlw	255
 19359  11A8  3D2F               	addwfc	??___flmul+1,w
 19360  11A9  00BF               	movwf	___flmul@temp+1
 19361  11AA                     l5449:	
 19362  11AA  1BBC               	btfsc	___flmul@prod+2,7
 19363  11AB  29C1               	goto	l5451
 19364  11AC  3001               	movlw	1
 19365  11AD                     u6635:	
 19366  11AD  35BA               	lslf	___flmul@prod,f
 19367  11AE  0DBB               	rlf	___flmul@prod+1,f
 19368  11AF  0DBC               	rlf	___flmul@prod+2,f
 19369  11B0  0DBD               	rlf	___flmul@prod+3,f
 19370  11B1  0B89               	decfsz	9,f
 19371  11B2  29AD               	goto	u6635
 19372  11B3  1BB7               	btfsc	___flmul@grs+3,7
 19373  11B4  143A               	bsf	___flmul@prod,0
 19374  11B5  3001               	movlw	1
 19375  11B6                     u6655:	
 19376  11B6  35B4               	lslf	___flmul@grs,f
 19377  11B7  0DB5               	rlf	___flmul@grs+1,f
 19378  11B8  0DB6               	rlf	___flmul@grs+2,f
 19379  11B9  0DB7               	rlf	___flmul@grs+3,f
 19380  11BA  0B89               	decfsz	9,f
 19381  11BB  29B6               	goto	u6655
 19382  11BC  30FF               	movlw	255
 19383  11BD  07BE               	addwf	___flmul@temp,f
 19384  11BE  30FF               	movlw	255
 19385  11BF  3DBF               	addwfc	___flmul@temp+1,f
 19386  11C0  29AA               	goto	l5449
 19387  11C1                     l5451:	
 19388  11C1  01B8               	clrf	___flmul@aexp
 19389  11C2  1FB7               	btfss	___flmul@grs+3,7
 19390  11C3  29DA               	goto	l5461
 19391  11C4  30FF               	movlw	255
 19392  11C5  0534               	andwf	___flmul@grs,w
 19393  11C6  00AE               	movwf	??___flmul
 19394  11C7  30FF               	movlw	255
 19395  11C8  0535               	andwf	___flmul@grs+1,w
 19396  11C9  00AF               	movwf	??___flmul+1
 19397  11CA  30FF               	movlw	255
 19398  11CB  0536               	andwf	___flmul@grs+2,w
 19399  11CC  00B0               	movwf	??___flmul+2
 19400  11CD  307F               	movlw	127
 19401  11CE  0537               	andwf	___flmul@grs+3,w
 19402  11CF  00B1               	movwf	??___flmul+3
 19403  11D0  0831               	movf	??___flmul+3,w
 19404  11D1  0430               	iorwf	??___flmul+2,w
 19405  11D2  042F               	iorwf	??___flmul+1,w
 19406  11D3  042E               	iorwf	??___flmul,w
 19407  11D4  1903               	skipnz
 19408  11D5  183A               	btfsc	___flmul@prod,0
 19409  11D6  29D8               	goto	l5457
 19410  11D7  29DA               	goto	l5461
 19411  11D8                     l5457:	
 19412  11D8  01B8               	clrf	___flmul@aexp
 19413  11D9  0AB8               	incf	___flmul@aexp,f
 19414  11DA                     l5461:	
 19415  11DA  0838               	movf	___flmul@aexp,w
 19416  11DB  1903               	btfsc	3,2
 19417  11DC  2A03               	goto	l5471
 19418  11DD  3001               	movlw	1
 19419  11DE  07BA               	addwf	___flmul@prod,f
 19420  11DF  3000               	movlw	0
 19421  11E0  3DBB               	addwfc	___flmul@prod+1,f
 19422  11E1  3000               	movlw	0
 19423  11E2  3DBC               	addwfc	___flmul@prod+2,f
 19424  11E3  3000               	movlw	0
 19425  11E4  3DBD               	addwfc	___flmul@prod+3,f
 19426  11E5  1C3D               	btfss	___flmul@prod+3,0
 19427  11E6  2A03               	goto	l5471
 19428  11E7  083A               	movf	___flmul@prod,w
 19429  11E8  00AE               	movwf	??___flmul
 19430  11E9  083B               	movf	___flmul@prod+1,w
 19431  11EA  00AF               	movwf	??___flmul+1
 19432  11EB  083C               	movf	___flmul@prod+2,w
 19433  11EC  00B0               	movwf	??___flmul+2
 19434  11ED  083D               	movf	___flmul@prod+3,w
 19435  11EE  00B1               	movwf	??___flmul+3
 19436  11EF  3001               	movlw	1
 19437  11F0  00B2               	movwf	??___flmul+4
 19438  11F1                     u6725:	
 19439  11F1  37B1               	asrf	??___flmul+3,f
 19440  11F2  0CB0               	rrf	??___flmul+2,f
 19441  11F3  0CAF               	rrf	??___flmul+1,f
 19442  11F4  0CAE               	rrf	??___flmul,f
 19443  11F5  0BB2               	decfsz	??___flmul+4,f
 19444  11F6  29F1               	goto	u6725
 19445  11F7  0831               	movf	??___flmul+3,w
 19446  11F8  00BD               	movwf	___flmul@prod+3
 19447  11F9  0830               	movf	??___flmul+2,w
 19448  11FA  00BC               	movwf	___flmul@prod+2
 19449  11FB  082F               	movf	??___flmul+1,w
 19450  11FC  00BB               	movwf	___flmul@prod+1
 19451  11FD  082E               	movf	??___flmul,w
 19452  11FE  00BA               	movwf	___flmul@prod
 19453  11FF  3001               	movlw	1
 19454  1200  07BE               	addwf	___flmul@temp,f
 19455  1201  3000               	movlw	0
 19456  1202  3DBF               	addwfc	___flmul@temp+1,f
 19457  1203                     l5471:	
 19458  1203  083F               	movf	___flmul@temp+1,w
 19459  1204  3A80               	xorlw	128
 19460  1205  00AE               	movwf	??___flmul
 19461  1206  3080               	movlw	128
 19462  1207  022E               	subwf	??___flmul,w
 19463  1208  1D03               	skipz
 19464  1209  2A0C               	goto	u6735
 19465  120A  30FF               	movlw	255
 19466  120B  023E               	subwf	___flmul@temp,w
 19467  120C                     u6735:	
 19468  120C  1C03               	skipc
 19469  120D  2A18               	goto	l5475
 19470  120E  307F               	movlw	127
 19471  120F  0020               	movlb	0	; select bank0
 19472  1210  00BD               	movwf	___flmul@prod+3
 19473  1211  3080               	movlw	128
 19474  1212  00BC               	movwf	___flmul@prod+2
 19475  1213  3000               	movlw	0
 19476  1214  00BB               	movwf	___flmul@prod+1
 19477  1215  3000               	movlw	0
 19478  1216  00BA               	movwf	___flmul@prod
 19479  1217  2A42               	goto	l1355
 19480  1218                     l5475:	
 19481  1218  0020               	movlb	0	; select bank0
 19482  1219  083F               	movf	___flmul@temp+1,w
 19483  121A  3A80               	xorlw	128
 19484  121B  00AE               	movwf	??___flmul
 19485  121C  3080               	movlw	128
 19486  121D  022E               	subwf	??___flmul,w
 19487  121E  1D03               	skipz
 19488  121F  2A22               	goto	u6745
 19489  1220  3001               	movlw	1
 19490  1221  023E               	subwf	___flmul@temp,w
 19491  1222                     u6745:	
 19492  1222  1803               	skipnc
 19493  1223  2A2F               	goto	l5481
 19494  1224  3000               	movlw	0
 19495  1225  0020               	movlb	0	; select bank0
 19496  1226  00BD               	movwf	___flmul@prod+3
 19497  1227  3000               	movlw	0
 19498  1228  00BC               	movwf	___flmul@prod+2
 19499  1229  3000               	movlw	0
 19500  122A  00BB               	movwf	___flmul@prod+1
 19501  122B  3000               	movlw	0
 19502  122C  00BA               	movwf	___flmul@prod
 19503  122D  01B3               	clrf	___flmul@sign
 19504  122E  2A42               	goto	l1355
 19505  122F                     l5481:	
 19506  122F  0020               	movlb	0	; select bank0
 19507  1230  083E               	movf	___flmul@temp,w
 19508  1231  00AE               	movwf	??___flmul
 19509  1232  082E               	movf	??___flmul,w
 19510  1233  00B9               	movwf	___flmul@bexp
 19511  1234  30FF               	movlw	255
 19512  1235  05BA               	andwf	___flmul@prod,f
 19513  1236  30FF               	movlw	255
 19514  1237  05BB               	andwf	___flmul@prod+1,f
 19515  1238  307F               	movlw	127
 19516  1239  05BC               	andwf	___flmul@prod+2,f
 19517  123A  3000               	movlw	0
 19518  123B  05BD               	andwf	___flmul@prod+3,f
 19519  123C  1839               	btfsc	___flmul@bexp,0
 19520  123D  17BC               	bsf	___flmul@prod+2,7
 19521  123E  3639               	lsrf	___flmul@bexp,w
 19522  123F  00AE               	movwf	??___flmul
 19523  1240  082E               	movf	??___flmul,w
 19524  1241  00BD               	movwf	___flmul@prod+3
 19525  1242                     l1355:	
 19526  1242  0833               	movf	___flmul@sign,w
 19527  1243  00AE               	movwf	??___flmul
 19528  1244  082E               	movf	??___flmul,w
 19529  1245  04BD               	iorwf	___flmul@prod+3,f
 19530  1246  083D               	movf	___flmul@prod+3,w
 19531  1247  00A9               	movwf	?___flmul+3
 19532  1248  083C               	movf	___flmul@prod+2,w
 19533  1249  00A8               	movwf	?___flmul+2
 19534  124A  083B               	movf	___flmul@prod+1,w
 19535  124B  00A7               	movwf	?___flmul+1
 19536  124C  083A               	movf	___flmul@prod,w
 19537  124D  00A6               	movwf	?___flmul
 19538  124E  0008               	return
 19539  124F                     __end_of___flmul:	
 19540                           
 19541                           	psect	text70
 19542  07E0                     __ptext70:	
 19543 ;; *************** function __Umul8_16 *****************
 19544 ;; Defined at:
 19545 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  multiplier      1    wreg     unsigned char 
 19548 ;;  multiplicand    1    1[COMMON] unsigned char 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  multiplier      1    9[COMMON] unsigned char 
 19551 ;;  word_mpld       2    7[COMMON] unsigned int 
 19552 ;;  product         2    5[COMMON] unsigned int 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  2    1[COMMON] unsigned int 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2, status,0
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19563 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19565 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19566 ;;Total ram usage:        9 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:    1
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		___flmul
 19573 ;; This function uses a non-reentrant model
 19574 ;;
 19575                           
 19576                           
 19577                           ;psect for function __Umul8_16
 19578  07E0                     __Umul8_16:	
 19579                           
 19580                           ;incstack = 0
 19581                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19582                           ;__Umul8_16@multiplier stored from wreg
 19583  07E0  00F9               	movwf	__Umul8_16@multiplier
 19584  07E1  01F5               	clrf	__Umul8_16@product
 19585  07E2  01F6               	clrf	__Umul8_16@product+1
 19586  07E3  0871               	movf	__Umul8_16@multiplicand,w
 19587  07E4  00F3               	movwf	??__Umul8_16
 19588  07E5  01F4               	clrf	??__Umul8_16+1
 19589  07E6  0873               	movf	??__Umul8_16,w
 19590  07E7  00F7               	movwf	__Umul8_16@word_mpld
 19591  07E8  0874               	movf	??__Umul8_16+1,w
 19592  07E9  00F8               	movwf	__Umul8_16@word_mpld+1
 19593  07EA                     l5165:	
 19594  07EA  1C79               	btfss	__Umul8_16@multiplier,0
 19595  07EB  2FF0               	goto	l1548
 19596  07EC  0877               	movf	__Umul8_16@word_mpld,w
 19597  07ED  07F5               	addwf	__Umul8_16@product,f
 19598  07EE  0878               	movf	__Umul8_16@word_mpld+1,w
 19599  07EF  3DF6               	addwfc	__Umul8_16@product+1,f
 19600  07F0                     l1548:	
 19601  07F0  3001               	movlw	1
 19602  07F1                     u6125:	
 19603  07F1  35F7               	lslf	__Umul8_16@word_mpld,f
 19604  07F2  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19605  07F3  0B89               	decfsz	9,f
 19606  07F4  2FF1               	goto	u6125
 19607  07F5  1003               	clrc
 19608  07F6  0CF9               	rrf	__Umul8_16@multiplier,f
 19609  07F7  0879               	movf	__Umul8_16@multiplier,w
 19610  07F8  1D03               	btfss	3,2
 19611  07F9  2FEA               	goto	l5165
 19612  07FA  0876               	movf	__Umul8_16@product+1,w
 19613  07FB  00F2               	movwf	?__Umul8_16+1
 19614  07FC  0875               	movf	__Umul8_16@product,w
 19615  07FD  00F1               	movwf	?__Umul8_16
 19616  07FE  0008               	return
 19617  07FF                     __end_of__Umul8_16:	
 19618                           
 19619                           	psect	text71
 19620  1CE2                     __ptext71:	
 19621 ;; *************** function ___fldiv *****************
 19622 ;; Defined at:
 19623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;  a               4   32[BANK0 ] unsigned int 
 19626 ;;  b               4   36[BANK0 ] unsigned int 
 19627 ;; Auto vars:     Size  Location     Type
 19628 ;;  grs             4   52[BANK0 ] unsigned long 
 19629 ;;  rem             4   45[BANK0 ] unsigned long 
 19630 ;;  new_exp         2   50[BANK0 ] int 
 19631 ;;  aexp            1   57[BANK0 ] unsigned char 
 19632 ;;  bexp            1   56[BANK0 ] unsigned char 
 19633 ;;  sign            1   49[BANK0 ] unsigned char 
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  4   32[BANK0 ] unsigned char 
 19636 ;; Registers used:
 19637 ;;		wreg, status,2, status,0
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19643 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19644 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19645 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19646 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19647 ;;Total ram usage:       26 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:    1
 19650 ;; This function calls:
 19651 ;;		Nothing
 19652 ;; This function is called by:
 19653 ;;		_setShortCircuitProtection
 19654 ;;		_setOverCurrentDischargeProtection
 19655 ;;		_updateCurrent
 19656 ;;		_updateVoltages
 19657 ;;		_updateTemperatures
 19658 ;;		_calibrate_BATTSOC
 19659 ;;		_coulomb_counter
 19660 ;;		_logf
 19661 ;;		_AFE_getSetShortCircuitCurrent
 19662 ;;		_AFE_getOverCurrentDischargeCurrent
 19663 ;; This function uses a non-reentrant model
 19664 ;;
 19665                           
 19666                           
 19667                           ;psect for function ___fldiv
 19668  1CE2                     ___fldiv:	
 19669                           
 19670                           ;incstack = 0
 19671                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19672  1CE2  0020               	movlb	0	; select bank0
 19673  1CE3  0847               	movf	___fldiv@b+3,w
 19674  1CE4  3980               	andlw	128
 19675  1CE5  00C8               	movwf	??___fldiv
 19676  1CE6  0848               	movf	??___fldiv,w
 19677  1CE7  00D1               	movwf	___fldiv@sign
 19678  1CE8  3547               	lslf	___fldiv@b+3,w
 19679  1CE9  00C8               	movwf	??___fldiv
 19680  1CEA  0848               	movf	??___fldiv,w
 19681  1CEB  00D8               	movwf	___fldiv@bexp
 19682  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 19683  1CED  1458               	bsf	___fldiv@bexp,0
 19684  1CEE  0858               	movf	___fldiv@bexp,w
 19685  1CEF  1903               	btfsc	3,2
 19686  1CF0  2CFF               	goto	l5231
 19687  1CF1  0A58               	incf	___fldiv@bexp,w
 19688  1CF2  1D03               	btfss	3,2
 19689  1CF3  2CFC               	goto	l5227
 19690  1CF4  3000               	movlw	0
 19691  1CF5  00C7               	movwf	___fldiv@b+3
 19692  1CF6  3000               	movlw	0
 19693  1CF7  00C6               	movwf	___fldiv@b+2
 19694  1CF8  3000               	movlw	0
 19695  1CF9  00C5               	movwf	___fldiv@b+1
 19696  1CFA  3000               	movlw	0
 19697  1CFB  00C4               	movwf	___fldiv@b
 19698  1CFC                     l5227:	
 19699  1CFC  17C6               	bsf	___fldiv@b+2,7
 19700  1CFD  01C7               	clrf	___fldiv@b+3
 19701  1CFE  2D07               	goto	l5233
 19702  1CFF                     l5231:	
 19703  1CFF  3000               	movlw	0
 19704  1D00  00C7               	movwf	___fldiv@b+3
 19705  1D01  3000               	movlw	0
 19706  1D02  00C6               	movwf	___fldiv@b+2
 19707  1D03  3000               	movlw	0
 19708  1D04  00C5               	movwf	___fldiv@b+1
 19709  1D05  3000               	movlw	0
 19710  1D06  00C4               	movwf	___fldiv@b
 19711  1D07                     l5233:	
 19712  1D07  0843               	movf	___fldiv@a+3,w
 19713  1D08  3980               	andlw	128
 19714  1D09  00C8               	movwf	??___fldiv
 19715  1D0A  0848               	movf	??___fldiv,w
 19716  1D0B  06D1               	xorwf	___fldiv@sign,f
 19717  1D0C  3543               	lslf	___fldiv@a+3,w
 19718  1D0D  00C8               	movwf	??___fldiv
 19719  1D0E  0848               	movf	??___fldiv,w
 19720  1D0F  00D9               	movwf	___fldiv@aexp
 19721  1D10  1BC2               	btfsc	___fldiv@a+2,7
 19722  1D11  1459               	bsf	___fldiv@aexp,0
 19723  1D12  0859               	movf	___fldiv@aexp,w
 19724  1D13  1903               	btfsc	3,2
 19725  1D14  2D23               	goto	l5251
 19726  1D15  0A59               	incf	___fldiv@aexp,w
 19727  1D16  1D03               	btfss	3,2
 19728  1D17  2D20               	goto	l5247
 19729  1D18  3000               	movlw	0
 19730  1D19  00C3               	movwf	___fldiv@a+3
 19731  1D1A  3000               	movlw	0
 19732  1D1B  00C2               	movwf	___fldiv@a+2
 19733  1D1C  3000               	movlw	0
 19734  1D1D  00C1               	movwf	___fldiv@a+1
 19735  1D1E  3000               	movlw	0
 19736  1D1F  00C0               	movwf	___fldiv@a
 19737  1D20                     l5247:	
 19738  1D20  17C2               	bsf	___fldiv@a+2,7
 19739  1D21  01C3               	clrf	___fldiv@a+3
 19740  1D22  2D2B               	goto	l1303
 19741  1D23                     l5251:	
 19742  1D23  3000               	movlw	0
 19743  1D24  00C3               	movwf	___fldiv@a+3
 19744  1D25  3000               	movlw	0
 19745  1D26  00C2               	movwf	___fldiv@a+2
 19746  1D27  3000               	movlw	0
 19747  1D28  00C1               	movwf	___fldiv@a+1
 19748  1D29  3000               	movlw	0
 19749  1D2A  00C0               	movwf	___fldiv@a
 19750  1D2B                     l1303:	
 19751  1D2B  0843               	movf	___fldiv@a+3,w
 19752  1D2C  0442               	iorwf	___fldiv@a+2,w
 19753  1D2D  0441               	iorwf	___fldiv@a+1,w
 19754  1D2E  0440               	iorwf	___fldiv@a,w
 19755  1D2F  1D03               	skipz
 19756  1D30  2D4A               	goto	l5261
 19757  1D31  3000               	movlw	0
 19758  1D32  00C7               	movwf	___fldiv@b+3
 19759  1D33  3000               	movlw	0
 19760  1D34  00C6               	movwf	___fldiv@b+2
 19761  1D35  3000               	movlw	0
 19762  1D36  00C5               	movwf	___fldiv@b+1
 19763  1D37  3000               	movlw	0
 19764  1D38  00C4               	movwf	___fldiv@b
 19765  1D39  3080               	movlw	128
 19766  1D3A  04C6               	iorwf	___fldiv@b+2,f
 19767  1D3B  307F               	movlw	127
 19768  1D3C  04C7               	iorwf	___fldiv@b+3,f
 19769  1D3D                     L5:	
 19770  1D3D  0851               	movf	___fldiv@sign,w
 19771  1D3E  00C8               	movwf	??___fldiv
 19772  1D3F  0848               	movf	??___fldiv,w
 19773  1D40  04C7               	iorwf	___fldiv@b+3,f
 19774  1D41  0847               	movf	___fldiv@b+3,w
 19775  1D42  00C3               	movwf	?___fldiv+3
 19776  1D43  0846               	movf	___fldiv@b+2,w
 19777  1D44  00C2               	movwf	?___fldiv+2
 19778  1D45  0845               	movf	___fldiv@b+1,w
 19779  1D46  00C1               	movwf	?___fldiv+1
 19780  1D47  0844               	movf	___fldiv@b,w
 19781  1D48  00C0               	movwf	?___fldiv
 19782  1D49  0008               	return
 19783  1D4A                     l5261:	
 19784  1D4A  0858               	movf	___fldiv@bexp,w
 19785  1D4B  1D03               	btfss	3,2
 19786  1D4C  2D56               	goto	l5267
 19787  1D4D  3000               	movlw	0
 19788  1D4E  00C3               	movwf	?___fldiv+3
 19789  1D4F  3000               	movlw	0
 19790  1D50  00C2               	movwf	?___fldiv+2
 19791  1D51  3000               	movlw	0
 19792  1D52  00C1               	movwf	?___fldiv+1
 19793  1D53  3000               	movlw	0
 19794  1D54  00C0               	movwf	?___fldiv
 19795  1D55  0008               	return
 19796  1D56                     l5267:	
 19797  1D56  0858               	movf	___fldiv@bexp,w
 19798  1D57  00C8               	movwf	??___fldiv
 19799  1D58  01C9               	clrf	??___fldiv+1
 19800  1D59  0849               	movf	??___fldiv+1,w
 19801  1D5A  00CB               	movwf	??___fldiv+3
 19802  1D5B  0859               	movf	___fldiv@aexp,w
 19803  1D5C  0248               	subwf	??___fldiv,w
 19804  1D5D  00CA               	movwf	??___fldiv+2
 19805  1D5E  1C03               	skipc
 19806  1D5F  03CB               	decf	??___fldiv+3,f
 19807  1D60  084A               	movf	??___fldiv+2,w
 19808  1D61  3E7F               	addlw	127
 19809  1D62  00D2               	movwf	___fldiv@new_exp
 19810  1D63  3000               	movlw	0
 19811  1D64  3D4B               	addwfc	??___fldiv+3,w
 19812  1D65  00D3               	movwf	___fldiv@new_exp+1
 19813  1D66  0847               	movf	___fldiv@b+3,w
 19814  1D67  00D0               	movwf	___fldiv@rem+3
 19815  1D68  0846               	movf	___fldiv@b+2,w
 19816  1D69  00CF               	movwf	___fldiv@rem+2
 19817  1D6A  0845               	movf	___fldiv@b+1,w
 19818  1D6B  00CE               	movwf	___fldiv@rem+1
 19819  1D6C  0844               	movf	___fldiv@b,w
 19820  1D6D  00CD               	movwf	___fldiv@rem
 19821  1D6E  3000               	movlw	0
 19822  1D6F  00C7               	movwf	___fldiv@b+3
 19823  1D70  3000               	movlw	0
 19824  1D71  00C6               	movwf	___fldiv@b+2
 19825  1D72  3000               	movlw	0
 19826  1D73  00C5               	movwf	___fldiv@b+1
 19827  1D74  3000               	movlw	0
 19828  1D75  00C4               	movwf	___fldiv@b
 19829  1D76  3000               	movlw	0
 19830  1D77  00D7               	movwf	___fldiv@grs+3
 19831  1D78  3000               	movlw	0
 19832  1D79  00D6               	movwf	___fldiv@grs+2
 19833  1D7A  3000               	movlw	0
 19834  1D7B  00D5               	movwf	___fldiv@grs+1
 19835  1D7C  3000               	movlw	0
 19836  1D7D  00D4               	movwf	___fldiv@grs
 19837  1D7E  01D9               	clrf	___fldiv@aexp
 19838  1D7F                     l5295:	
 19839  1D7F  301A               	movlw	26
 19840  1D80  0259               	subwf	___fldiv@aexp,w
 19841  1D81  1803               	btfsc	3,0
 19842  1D82  2DBB               	goto	l5297
 19843  1D83  0859               	movf	___fldiv@aexp,w
 19844  1D84  1903               	btfsc	3,2
 19845  1D85  2D9D               	goto	l5287
 19846  1D86  3001               	movlw	1
 19847  1D87                     u6305:	
 19848  1D87  35CD               	lslf	___fldiv@rem,f
 19849  1D88  0DCE               	rlf	___fldiv@rem+1,f
 19850  1D89  0DCF               	rlf	___fldiv@rem+2,f
 19851  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 19852  1D8B  0B89               	decfsz	9,f
 19853  1D8C  2D87               	goto	u6305
 19854  1D8D  3001               	movlw	1
 19855  1D8E                     u6315:	
 19856  1D8E  35C4               	lslf	___fldiv@b,f
 19857  1D8F  0DC5               	rlf	___fldiv@b+1,f
 19858  1D90  0DC6               	rlf	___fldiv@b+2,f
 19859  1D91  0DC7               	rlf	___fldiv@b+3,f
 19860  1D92  0B89               	decfsz	9,f
 19861  1D93  2D8E               	goto	u6315
 19862  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 19863  1D95  1444               	bsf	___fldiv@b,0
 19864  1D96  3001               	movlw	1
 19865  1D97                     u6335:	
 19866  1D97  35D4               	lslf	___fldiv@grs,f
 19867  1D98  0DD5               	rlf	___fldiv@grs+1,f
 19868  1D99  0DD6               	rlf	___fldiv@grs+2,f
 19869  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 19870  1D9B  0B89               	decfsz	9,f
 19871  1D9C  2D97               	goto	u6335
 19872  1D9D                     l5287:	
 19873  1D9D  0843               	movf	___fldiv@a+3,w
 19874  1D9E  0250               	subwf	___fldiv@rem+3,w
 19875  1D9F  1D03               	skipz
 19876  1DA0  2DAB               	goto	u6345
 19877  1DA1  0842               	movf	___fldiv@a+2,w
 19878  1DA2  024F               	subwf	___fldiv@rem+2,w
 19879  1DA3  1D03               	skipz
 19880  1DA4  2DAB               	goto	u6345
 19881  1DA5  0841               	movf	___fldiv@a+1,w
 19882  1DA6  024E               	subwf	___fldiv@rem+1,w
 19883  1DA7  1D03               	skipz
 19884  1DA8  2DAB               	goto	u6345
 19885  1DA9  0840               	movf	___fldiv@a,w
 19886  1DAA  024D               	subwf	___fldiv@rem,w
 19887  1DAB                     u6345:	
 19888  1DAB  1C03               	skipc
 19889  1DAC  2DB6               	goto	l5293
 19890  1DAD  1757               	bsf	___fldiv@grs+3,6
 19891  1DAE  0840               	movf	___fldiv@a,w
 19892  1DAF  02CD               	subwf	___fldiv@rem,f
 19893  1DB0  0841               	movf	___fldiv@a+1,w
 19894  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 19895  1DB2  0842               	movf	___fldiv@a+2,w
 19896  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 19897  1DB4  0843               	movf	___fldiv@a+3,w
 19898  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 19899  1DB6                     l5293:	
 19900  1DB6  3001               	movlw	1
 19901  1DB7  00C8               	movwf	??___fldiv
 19902  1DB8  0848               	movf	??___fldiv,w
 19903  1DB9  07D9               	addwf	___fldiv@aexp,f
 19904  1DBA  2D7F               	goto	l5295
 19905  1DBB                     l5297:	
 19906  1DBB  0850               	movf	___fldiv@rem+3,w
 19907  1DBC  044F               	iorwf	___fldiv@rem+2,w
 19908  1DBD  044E               	iorwf	___fldiv@rem+1,w
 19909  1DBE  044D               	iorwf	___fldiv@rem,w
 19910  1DBF  1D03               	btfss	3,2
 19911  1DC0  1454               	bsf	___fldiv@grs,0
 19912  1DC1                     l5311:	
 19913  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 19914  1DC2  2DD8               	goto	l5313
 19915  1DC3  3001               	movlw	1
 19916  1DC4                     u6375:	
 19917  1DC4  35C4               	lslf	___fldiv@b,f
 19918  1DC5  0DC5               	rlf	___fldiv@b+1,f
 19919  1DC6  0DC6               	rlf	___fldiv@b+2,f
 19920  1DC7  0DC7               	rlf	___fldiv@b+3,f
 19921  1DC8  0B89               	decfsz	9,f
 19922  1DC9  2DC4               	goto	u6375
 19923  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 19924  1DCB  1444               	bsf	___fldiv@b,0
 19925  1DCC  3001               	movlw	1
 19926  1DCD                     u6395:	
 19927  1DCD  35D4               	lslf	___fldiv@grs,f
 19928  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 19929  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 19930  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 19931  1DD1  0B89               	decfsz	9,f
 19932  1DD2  2DCD               	goto	u6395
 19933  1DD3  30FF               	movlw	255
 19934  1DD4  07D2               	addwf	___fldiv@new_exp,f
 19935  1DD5  30FF               	movlw	255
 19936  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 19937  1DD7  2DC1               	goto	l5311
 19938  1DD8                     l5313:	
 19939  1DD8  01D9               	clrf	___fldiv@aexp
 19940  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 19941  1DDA  2DF1               	goto	l5323
 19942  1DDB  30FF               	movlw	255
 19943  1DDC  0554               	andwf	___fldiv@grs,w
 19944  1DDD  00C8               	movwf	??___fldiv
 19945  1DDE  30FF               	movlw	255
 19946  1DDF  0555               	andwf	___fldiv@grs+1,w
 19947  1DE0  00C9               	movwf	??___fldiv+1
 19948  1DE1  30FF               	movlw	255
 19949  1DE2  0556               	andwf	___fldiv@grs+2,w
 19950  1DE3  00CA               	movwf	??___fldiv+2
 19951  1DE4  307F               	movlw	127
 19952  1DE5  0557               	andwf	___fldiv@grs+3,w
 19953  1DE6  00CB               	movwf	??___fldiv+3
 19954  1DE7  084B               	movf	??___fldiv+3,w
 19955  1DE8  044A               	iorwf	??___fldiv+2,w
 19956  1DE9  0449               	iorwf	??___fldiv+1,w
 19957  1DEA  0448               	iorwf	??___fldiv,w
 19958  1DEB  1903               	skipnz
 19959  1DEC  1844               	btfsc	___fldiv@b,0
 19960  1DED  2DEF               	goto	l5319
 19961  1DEE  2DF1               	goto	l5323
 19962  1DEF                     l5319:	
 19963  1DEF  01D9               	clrf	___fldiv@aexp
 19964  1DF0  0AD9               	incf	___fldiv@aexp,f
 19965  1DF1                     l5323:	
 19966  1DF1  0859               	movf	___fldiv@aexp,w
 19967  1DF2  1903               	btfsc	3,2
 19968  1DF3  2E1A               	goto	l5333
 19969  1DF4  3001               	movlw	1
 19970  1DF5  07C4               	addwf	___fldiv@b,f
 19971  1DF6  3000               	movlw	0
 19972  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 19973  1DF8  3000               	movlw	0
 19974  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 19975  1DFA  3000               	movlw	0
 19976  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 19977  1DFC  1C47               	btfss	___fldiv@b+3,0
 19978  1DFD  2E1A               	goto	l5333
 19979  1DFE  0844               	movf	___fldiv@b,w
 19980  1DFF  00C8               	movwf	??___fldiv
 19981  1E00  0845               	movf	___fldiv@b+1,w
 19982  1E01  00C9               	movwf	??___fldiv+1
 19983  1E02  0846               	movf	___fldiv@b+2,w
 19984  1E03  00CA               	movwf	??___fldiv+2
 19985  1E04  0847               	movf	___fldiv@b+3,w
 19986  1E05  00CB               	movwf	??___fldiv+3
 19987  1E06  3001               	movlw	1
 19988  1E07  00CC               	movwf	??___fldiv+4
 19989  1E08                     u6465:	
 19990  1E08  37CB               	asrf	??___fldiv+3,f
 19991  1E09  0CCA               	rrf	??___fldiv+2,f
 19992  1E0A  0CC9               	rrf	??___fldiv+1,f
 19993  1E0B  0CC8               	rrf	??___fldiv,f
 19994  1E0C  0BCC               	decfsz	??___fldiv+4,f
 19995  1E0D  2E08               	goto	u6465
 19996  1E0E  084B               	movf	??___fldiv+3,w
 19997  1E0F  00C7               	movwf	___fldiv@b+3
 19998  1E10  084A               	movf	??___fldiv+2,w
 19999  1E11  00C6               	movwf	___fldiv@b+2
 20000  1E12  0849               	movf	??___fldiv+1,w
 20001  1E13  00C5               	movwf	___fldiv@b+1
 20002  1E14  0848               	movf	??___fldiv,w
 20003  1E15  00C4               	movwf	___fldiv@b
 20004  1E16  3001               	movlw	1
 20005  1E17  07D2               	addwf	___fldiv@new_exp,f
 20006  1E18  3000               	movlw	0
 20007  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 20008  1E1A                     l5333:	
 20009  1E1A  0853               	movf	___fldiv@new_exp+1,w
 20010  1E1B  3A80               	xorlw	128
 20011  1E1C  00C8               	movwf	??___fldiv
 20012  1E1D  3080               	movlw	128
 20013  1E1E  0248               	subwf	??___fldiv,w
 20014  1E1F  1D03               	skipz
 20015  1E20  2E23               	goto	u6475
 20016  1E21  30FF               	movlw	255
 20017  1E22  0252               	subwf	___fldiv@new_exp,w
 20018  1E23                     u6475:	
 20019  1E23  1C03               	skipc
 20020  1E24  2E32               	goto	l1324
 20021  1E25  30FF               	movlw	255
 20022  1E26  0020               	movlb	0	; select bank0
 20023  1E27  00D2               	movwf	___fldiv@new_exp
 20024  1E28  3000               	movlw	0
 20025  1E29  00D3               	movwf	___fldiv@new_exp+1
 20026  1E2A  3000               	movlw	0
 20027  1E2B  00C7               	movwf	___fldiv@b+3
 20028  1E2C  3000               	movlw	0
 20029  1E2D  00C6               	movwf	___fldiv@b+2
 20030  1E2E  3000               	movlw	0
 20031  1E2F  00C5               	movwf	___fldiv@b+1
 20032  1E30  3000               	movlw	0
 20033  1E31  00C4               	movwf	___fldiv@b
 20034  1E32                     l1324:	
 20035  1E32  0020               	movlb	0	; select bank0
 20036  1E33  0853               	movf	___fldiv@new_exp+1,w
 20037  1E34  3A80               	xorlw	128
 20038  1E35  00C8               	movwf	??___fldiv
 20039  1E36  3080               	movlw	128
 20040  1E37  0248               	subwf	??___fldiv,w
 20041  1E38  1D03               	skipz
 20042  1E39  2E3C               	goto	u6485
 20043  1E3A  3001               	movlw	1
 20044  1E3B  0252               	subwf	___fldiv@new_exp,w
 20045  1E3C                     u6485:	
 20046  1E3C  1803               	skipnc
 20047  1E3D  2E4A               	goto	l1325
 20048  1E3E  0020               	movlb	0	; select bank0
 20049  1E3F  01D2               	clrf	___fldiv@new_exp
 20050  1E40  01D3               	clrf	___fldiv@new_exp+1
 20051  1E41  3000               	movlw	0
 20052  1E42  00C7               	movwf	___fldiv@b+3
 20053  1E43  3000               	movlw	0
 20054  1E44  00C6               	movwf	___fldiv@b+2
 20055  1E45  3000               	movlw	0
 20056  1E46  00C5               	movwf	___fldiv@b+1
 20057  1E47  3000               	movlw	0
 20058  1E48  00C4               	movwf	___fldiv@b
 20059  1E49  01D1               	clrf	___fldiv@sign
 20060  1E4A                     l1325:	
 20061  1E4A  0020               	movlb	0	; select bank0
 20062  1E4B  0852               	movf	___fldiv@new_exp,w
 20063  1E4C  00C8               	movwf	??___fldiv
 20064  1E4D  0848               	movf	??___fldiv,w
 20065  1E4E  00D8               	movwf	___fldiv@bexp
 20066  1E4F  1C58               	btfss	___fldiv@bexp,0
 20067  1E50  2E53               	goto	l5347
 20068  1E51  17C6               	bsf	___fldiv@b+2,7
 20069  1E52  2E57               	goto	l1327
 20070  1E53                     l5347:	
 20071  1E53  307F               	movlw	127
 20072  1E54  00C8               	movwf	??___fldiv
 20073  1E55  0848               	movf	??___fldiv,w
 20074  1E56  05C6               	andwf	___fldiv@b+2,f
 20075  1E57                     l1327:	
 20076  1E57  3658               	lsrf	___fldiv@bexp,w
 20077  1E58  00C8               	movwf	??___fldiv
 20078  1E59  0848               	movf	??___fldiv,w
 20079  1E5A  00C7               	movwf	___fldiv@b+3
 20080  1E5B  2D3D               	goto	L5
 20081  1E5C                     __end_of___fldiv:	
 20082                           
 20083                           	psect	text72
 20084  3275                     __ptext72:	
 20085 ;; *************** function _init_TMR1 *****************
 20086 ;; Defined at:
 20087 ;;		line 189 in file "main.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;		None
 20090 ;; Auto vars:     Size  Location     Type
 20091 ;;		None
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  1    wreg      void 
 20094 ;; Registers used:
 20095 ;;		wreg, status,2, status,0
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/0
 20098 ;;		On exit  : 0/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20105 ;;Total ram usage:        0 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; Hardware stack levels required when called:    1
 20108 ;; This function calls:
 20109 ;;		Nothing
 20110 ;; This function is called by:
 20111 ;;		_main
 20112 ;; This function uses a non-reentrant model
 20113 ;;
 20114                           
 20115                           
 20116                           ;psect for function _init_TMR1
 20117  3275                     _init_TMR1:	
 20118                           
 20119                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 20120                           
 20121                           ;incstack = 0
 20122                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20123  3275  30CF               	movlw	-49
 20124  3276  0020               	movlb	0	; select bank0
 20125  3277  0598               	andwf	24,f	;volatile
 20126                           
 20127                           ;main.c: 194:     TMR1 = 0;
 20128  3278  0196               	clrf	22	;volatile
 20129  3279  0197               	clrf	23	;volatile
 20130                           
 20131                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 20132  327A  1418               	bsf	24,0	;volatile
 20133                           
 20134                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 20135  327B  0021               	movlb	1	; select bank1
 20136  327C  1411               	bsf	17,0	;volatile
 20137                           
 20138                           ;main.c: 200:     INTCONbits.PEIE = 1;
 20139  327D  170B               	bsf	11,6	;volatile
 20140                           
 20141                           ;main.c: 202:     (INTCONbits.GIE = 1);
 20142  327E  178B               	bsf	11,7	;volatile
 20143  327F  0008               	return
 20144  3280                     __end_of_init_TMR1:	
 20145                           
 20146                           	psect	text73
 20147  3223                     __ptext73:	
 20148 ;; *************** function _init_RGB *****************
 20149 ;; Defined at:
 20150 ;;		line 6 in file "RGB.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;		None
 20153 ;; Auto vars:     Size  Location     Type
 20154 ;;		None
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1    wreg      void 
 20157 ;; Registers used:
 20158 ;;		None
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20168 ;;Total ram usage:        0 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    1
 20171 ;; This function calls:
 20172 ;;		Nothing
 20173 ;; This function is called by:
 20174 ;;		_main
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           
 20179                           ;psect for function _init_RGB
 20180  3223                     _init_RGB:	
 20181                           
 20182                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20183                           
 20184                           ;incstack = 0
 20185                           ; Regs used in _init_RGB: []
 20186  3223  0022               	movlb	2	; select bank2
 20187  3224  160C               	bsf	12,4	;volatile
 20188                           
 20189                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20190  3225  168C               	bsf	12,5	;volatile
 20191                           
 20192                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20193  3226  1410               	bsf	16,0	;volatile
 20194  3227  0008               	return
 20195  3228                     __end_of_init_RGB:	
 20196                           
 20197                           	psect	text74
 20198  328C                     __ptext74:	
 20199 ;; *************** function _init_I2C *****************
 20200 ;; Defined at:
 20201 ;;		line 10 in file "I2C.c"
 20202 ;; Parameters:    Size  Location     Type
 20203 ;;		None
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;		None
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  1    wreg      void 
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20219 ;;Total ram usage:        1 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:    1
 20222 ;; This function calls:
 20223 ;;		Nothing
 20224 ;; This function is called by:
 20225 ;;		_main
 20226 ;; This function uses a non-reentrant model
 20227 ;;
 20228                           
 20229                           
 20230                           ;psect for function _init_I2C
 20231  328C                     _init_I2C:	
 20232                           
 20233                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20234                           
 20235                           ;incstack = 0
 20236                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20237  328C  0024               	movlb	4	; select bank4
 20238  328D  0815               	movf	21,w	;volatile
 20239  328E  39F0               	andlw	-16
 20240  328F  3808               	iorlw	8
 20241  3290  0095               	movwf	21	;volatile
 20242                           
 20243                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20244  3291  1695               	bsf	21,5	;volatile
 20245                           
 20246                           ;I2C.c: 24:     SSPADD = 39;
 20247  3292  3027               	movlw	39
 20248  3293  0092               	movwf	18	;volatile
 20249                           
 20250                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20251  3294  3034               	movlw	52
 20252  3295  00F1               	movwf	??_init_I2C
 20253  3296  30F2               	movlw	242
 20254  3297                     u9517:	
 20255  3297  0B89               	decfsz	9,f
 20256  3298  2A97               	goto	u9517
 20257  3299  0BF1               	decfsz	??_init_I2C,f
 20258  329A  2A97               	goto	u9517
 20259  329B  0008               	return
 20260  329C                     __end_of_init_I2C:	
 20261                           
 20262                           	psect	text75
 20263  0808                     __ptext75:	
 20264 ;; *************** function _init_GPIO *****************
 20265 ;; Defined at:
 20266 ;;		line 206 in file "main.c"
 20267 ;; Parameters:    Size  Location     Type
 20268 ;;		None
 20269 ;; Auto vars:     Size  Location     Type
 20270 ;;		None
 20271 ;; Return value:  Size  Location     Type
 20272 ;;                  1    wreg      void 
 20273 ;; Registers used:
 20274 ;;		wreg, status,2, status,0
 20275 ;; Tracked objects:
 20276 ;;		On entry : 0/0
 20277 ;;		On exit  : 0/0
 20278 ;;		Unchanged: 0/0
 20279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20284 ;;Total ram usage:        0 bytes
 20285 ;; Hardware stack levels used:    1
 20286 ;; Hardware stack levels required when called:    1
 20287 ;; This function calls:
 20288 ;;		Nothing
 20289 ;; This function is called by:
 20290 ;;		_main
 20291 ;; This function uses a non-reentrant model
 20292 ;;
 20293                           
 20294                           
 20295                           ;psect for function _init_GPIO
 20296  0808                     _init_GPIO:	
 20297                           
 20298                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20299                           
 20300                           ;incstack = 0
 20301                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20302  0808  0021               	movlb	1	; select bank1
 20303  0809  110D               	bcf	13,2	;volatile
 20304                           
 20305                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20306  080A  0023               	movlb	3	; select bank3
 20307  080B  110D               	bcf	13,2	;volatile
 20308                           
 20309                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20310  080C  0021               	movlb	1	; select bank1
 20311  080D  158D               	bsf	13,3	;volatile
 20312                           
 20313                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20314  080E  0023               	movlb	3	; select bank3
 20315  080F  118D               	bcf	13,3	;volatile
 20316                           
 20317                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20318  0810  120E               	bcf	14,4	;volatile
 20319                           
 20320                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20321  0811  128E               	bcf	14,5	;volatile
 20322                           
 20323                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20324  0812  0021               	movlb	1	; select bank1
 20325  0813  160E               	bsf	14,4	;volatile
 20326                           
 20327                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20328  0814  168E               	bsf	14,5	;volatile
 20329                           
 20330                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20331  0815  120C               	bcf	12,4	;volatile
 20332                           
 20333                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20334  0816  128C               	bcf	12,5	;volatile
 20335                           
 20336                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20337  0817  1010               	bcf	16,0	;volatile
 20338                           
 20339                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20340  0818  118C               	bcf	12,3	;volatile
 20341                           
 20342                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20343  0819  0022               	movlb	2	; select bank2
 20344  081A  118C               	bcf	12,3	;volatile
 20345                           
 20346                           ;main.c: 246:     PPSLOCK = 0x55;
 20347  081B  3055               	movlw	85
 20348  081C  003C               	movlb	28	; select bank28
 20349  081D  008F               	movwf	15	;volsfr
 20350                           
 20351                           ;main.c: 247:     PPSLOCK = 0xAA;
 20352  081E  30AA               	movlw	170
 20353  081F  008F               	movwf	15	;volsfr
 20354                           
 20355                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20356  0820  100F               	bcf	15,0	;volsfr
 20357                           
 20358                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20359  0821  003D               	movlb	29	; select bank29
 20360  0822  0824               	movf	36,w	;volatile
 20361  0823  39E0               	andlw	-32
 20362  0824  3811               	iorlw	17
 20363  0825  00A4               	movwf	36	;volatile
 20364                           
 20365                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20366  0826  003C               	movlb	28	; select bank28
 20367  0827  0821               	movf	33,w	;volatile
 20368  0828  39E0               	andlw	-32
 20369  0829  3814               	iorlw	20
 20370  082A  00A1               	movwf	33	;volatile
 20371                           
 20372                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20373  082B  0820               	movf	32,w	;volatile
 20374  082C  39E0               	andlw	-32
 20375  082D  3815               	iorlw	21
 20376  082E  00A0               	movwf	32	;volatile
 20377                           
 20378                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20379  082F  003D               	movlb	29	; select bank29
 20380  0830  0825               	movf	37,w	;volatile
 20381  0831  39E0               	andlw	-32
 20382  0832  3810               	iorlw	16
 20383  0833  00A5               	movwf	37	;volatile
 20384                           
 20385                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20386  0834  081A               	movf	26,w	;volatile
 20387  0835  39E0               	andlw	-32
 20388  0836  3814               	iorlw	20
 20389  0837  009A               	movwf	26	;volatile
 20390                           
 20391                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20392  0838  003C               	movlb	28	; select bank28
 20393  0839  0824               	movf	36,w	;volatile
 20394  083A  39E0               	andlw	-32
 20395  083B  380B               	iorlw	11
 20396  083C  00A4               	movwf	36	;volatile
 20397                           
 20398                           ;main.c: 261:     PPSLOCK = 0x55;
 20399  083D  3055               	movlw	85
 20400  083E  008F               	movwf	15	;volsfr
 20401                           
 20402                           ;main.c: 262:     PPSLOCK = 0xAA;
 20403  083F  30AA               	movlw	170
 20404  0840  008F               	movwf	15	;volsfr
 20405                           
 20406                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20407  0841  140F               	bsf	15,0	;volsfr
 20408  0842  0008               	return
 20409  0843                     __end_of_init_GPIO:	
 20410                           
 20411                           	psect	text76
 20412  3228                     __ptext76:	
 20413 ;; *************** function _initWDT *****************
 20414 ;; Defined at:
 20415 ;;		line 267 in file "main.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;		None
 20418 ;; Auto vars:     Size  Location     Type
 20419 ;;		None
 20420 ;; Return value:  Size  Location     Type
 20421 ;;                  1    wreg      void 
 20422 ;; Registers used:
 20423 ;;		wreg, status,2, status,0
 20424 ;; Tracked objects:
 20425 ;;		On entry : 0/0
 20426 ;;		On exit  : 0/0
 20427 ;;		Unchanged: 0/0
 20428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20433 ;;Total ram usage:        0 bytes
 20434 ;; Hardware stack levels used:    1
 20435 ;; Hardware stack levels required when called:    1
 20436 ;; This function calls:
 20437 ;;		Nothing
 20438 ;; This function is called by:
 20439 ;;		_main
 20440 ;; This function uses a non-reentrant model
 20441 ;;
 20442                           
 20443                           
 20444                           ;psect for function _initWDT
 20445  3228                     _initWDT:	
 20446                           
 20447                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20448                           
 20449                           ;incstack = 0
 20450                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20451  3228  0021               	movlb	1	; select bank1
 20452  3229  0817               	movf	23,w	;volatile
 20453  322A  39C1               	andlw	-63
 20454  322B  381A               	iorlw	26
 20455  322C  0097               	movwf	23	;volatile
 20456  322D  0008               	return
 20457  322E                     __end_of_initWDT:	
 20458                           
 20459                           	psect	text77
 20460  321C                     __ptext77:	
 20461 ;; *************** function _initClock *****************
 20462 ;; Defined at:
 20463 ;;		line 180 in file "main.c"
 20464 ;; Parameters:    Size  Location     Type
 20465 ;;		None
 20466 ;; Auto vars:     Size  Location     Type
 20467 ;;		None
 20468 ;; Return value:  Size  Location     Type
 20469 ;;                  1    wreg      void 
 20470 ;; Registers used:
 20471 ;;		status,2, status,0, pclath, cstack
 20472 ;; Tracked objects:
 20473 ;;		On entry : 0/0
 20474 ;;		On exit  : 0/0
 20475 ;;		Unchanged: 0/0
 20476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20481 ;;Total ram usage:        0 bytes
 20482 ;; Hardware stack levels used:    1
 20483 ;; Hardware stack levels required when called:    2
 20484 ;; This function calls:
 20485 ;;		_internal_16
 20486 ;; This function is called by:
 20487 ;;		_main
 20488 ;; This function uses a non-reentrant model
 20489 ;;
 20490                           
 20491                           
 20492                           ;psect for function _initClock
 20493  321C                     _initClock:	
 20494                           
 20495                           ;main.c: 182:     internal_16();
 20496                           
 20497                           ;incstack = 0
 20498                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20499  321C  31B2  2245         	fcall	_internal_16
 20500  321E  0008               	return
 20501  321F                     __end_of_initClock:	
 20502                           
 20503                           	psect	text78
 20504  3245                     __ptext78:	
 20505 ;; *************** function _internal_16 *****************
 20506 ;; Defined at:
 20507 ;;		line 26 in file "pic16f1719_internals.c"
 20508 ;; Parameters:    Size  Location     Type
 20509 ;;		None
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;		None
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  1    wreg      void 
 20514 ;; Registers used:
 20515 ;;		None
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;Total ram usage:        0 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:    1
 20528 ;; This function calls:
 20529 ;;		Nothing
 20530 ;; This function is called by:
 20531 ;;		_initClock
 20532 ;; This function uses a non-reentrant model
 20533 ;;
 20534                           
 20535                           
 20536                           ;psect for function _internal_16
 20537  3245                     _internal_16:	
 20538                           
 20539                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20540                           
 20541                           ;incstack = 0
 20542                           ; Regs used in _internal_16: []
 20543  3245  0021               	movlb	1	; select bank1
 20544  3246  1019               	bcf	25,0	;volatile
 20545                           
 20546                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20547  3247  1099               	bcf	25,1	;volatile
 20548                           
 20549                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20550  3248  1599               	bsf	25,3	;volatile
 20551                           
 20552                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20553  3249  1619               	bsf	25,4	;volatile
 20554                           
 20555                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20556  324A  1699               	bsf	25,5	;volatile
 20557                           
 20558                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20559  324B  1719               	bsf	25,6	;volatile
 20560                           
 20561                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20562  324C  1399               	bcf	25,7	;volatile
 20563  324D  0008               	return
 20564  324E                     __end_of_internal_16:	
 20565                           
 20566                           	psect	text79
 20567  2B7F                     __ptext79:	
 20568 ;; *************** function _EUSART_Initialize *****************
 20569 ;; Defined at:
 20570 ;;		line 6 in file "EUSART.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;  baudrate        4   18[BANK0 ] const long 
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;  x               2   10[COMMON] unsigned int 
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      unsigned char 
 20577 ;; Registers used:
 20578 ;;		wreg, status,2, status,0, pclath, cstack
 20579 ;; Tracked objects:
 20580 ;;		On entry : 0/0
 20581 ;;		On exit  : 0/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20586 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20587 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20588 ;;Total ram usage:       18 bytes
 20589 ;; Hardware stack levels used:    1
 20590 ;; Hardware stack levels required when called:    2
 20591 ;; This function calls:
 20592 ;;		___aldiv
 20593 ;; This function is called by:
 20594 ;;		_main
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           
 20599                           ;psect for function _EUSART_Initialize
 20600  2B7F                     _EUSART_Initialize:	
 20601                           
 20602                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20603                           
 20604                           ;incstack = 0
 20605                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20606  2B7F  0020               	movlb	0	; select bank0
 20607  2B80  0832               	movf	EUSART_Initialize@baudrate,w
 20608  2B81  00B6               	movwf	??_EUSART_Initialize
 20609  2B82  0833               	movf	EUSART_Initialize@baudrate+1,w
 20610  2B83  00B7               	movwf	??_EUSART_Initialize+1
 20611  2B84  0834               	movf	EUSART_Initialize@baudrate+2,w
 20612  2B85  00B8               	movwf	??_EUSART_Initialize+2
 20613  2B86  0835               	movf	EUSART_Initialize@baudrate+3,w
 20614  2B87  00B9               	movwf	??_EUSART_Initialize+3
 20615  2B88  3006               	movlw	6
 20616  2B89                     u9405:	
 20617  2B89  35B6               	lslf	??_EUSART_Initialize,f
 20618  2B8A  0DB7               	rlf	??_EUSART_Initialize+1,f
 20619  2B8B  0DB8               	rlf	??_EUSART_Initialize+2,f
 20620  2B8C  0DB9               	rlf	??_EUSART_Initialize+3,f
 20621  2B8D  0B89               	decfsz	9,f
 20622  2B8E  2B89               	goto	u9405
 20623  2B8F  0839               	movf	??_EUSART_Initialize+3,w
 20624  2B90  00A7               	movwf	___aldiv@divisor+3
 20625  2B91  0838               	movf	??_EUSART_Initialize+2,w
 20626  2B92  00A6               	movwf	___aldiv@divisor+2
 20627  2B93  0837               	movf	??_EUSART_Initialize+1,w
 20628  2B94  00A5               	movwf	___aldiv@divisor+1
 20629  2B95  0836               	movf	??_EUSART_Initialize,w
 20630  2B96  00A4               	movwf	___aldiv@divisor
 20631  2B97  0832               	movf	EUSART_Initialize@baudrate,w
 20632  2B98  00BA               	movwf	??_EUSART_Initialize+4
 20633  2B99  0833               	movf	EUSART_Initialize@baudrate+1,w
 20634  2B9A  00BB               	movwf	??_EUSART_Initialize+5
 20635  2B9B  0834               	movf	EUSART_Initialize@baudrate+2,w
 20636  2B9C  00BC               	movwf	??_EUSART_Initialize+6
 20637  2B9D  0835               	movf	EUSART_Initialize@baudrate+3,w
 20638  2B9E  00BD               	movwf	??_EUSART_Initialize+7
 20639  2B9F  3006               	movlw	6
 20640  2BA0                     u9415:	
 20641  2BA0  35BA               	lslf	??_EUSART_Initialize+4,f
 20642  2BA1  0DBB               	rlf	??_EUSART_Initialize+5,f
 20643  2BA2  0DBC               	rlf	??_EUSART_Initialize+6,f
 20644  2BA3  0DBD               	rlf	??_EUSART_Initialize+7,f
 20645  2BA4  0B89               	decfsz	9,f
 20646  2BA5  2BA0               	goto	u9415
 20647  2BA6  3000               	movlw	0
 20648  2BA7  00BE               	movwf	??_EUSART_Initialize+8
 20649  2BA8  3024               	movlw	36
 20650  2BA9  00BF               	movwf	??_EUSART_Initialize+9
 20651  2BAA  30F4               	movlw	244
 20652  2BAB  00C0               	movwf	??_EUSART_Initialize+10
 20653  2BAC  3000               	movlw	0
 20654  2BAD  00C1               	movwf	??_EUSART_Initialize+11
 20655  2BAE  083A               	movf	??_EUSART_Initialize+4,w
 20656  2BAF  02BE               	subwf	??_EUSART_Initialize+8,f
 20657  2BB0  083B               	movf	??_EUSART_Initialize+5,w
 20658  2BB1  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20659  2BB2  083C               	movf	??_EUSART_Initialize+6,w
 20660  2BB3  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20661  2BB4  083D               	movf	??_EUSART_Initialize+7,w
 20662  2BB5  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20663  2BB6  0841               	movf	??_EUSART_Initialize+11,w
 20664  2BB7  00AB               	movwf	___aldiv@dividend+3
 20665  2BB8  0840               	movf	??_EUSART_Initialize+10,w
 20666  2BB9  00AA               	movwf	___aldiv@dividend+2
 20667  2BBA  083F               	movf	??_EUSART_Initialize+9,w
 20668  2BBB  00A9               	movwf	___aldiv@dividend+1
 20669  2BBC  083E               	movf	??_EUSART_Initialize+8,w
 20670  2BBD  00A8               	movwf	___aldiv@dividend
 20671  2BBE  31AA  2267  31AB   	fcall	___aldiv
 20672  2BC1  0020               	movlb	0	; select bank0
 20673  2BC2  0825               	movf	?___aldiv+1,w
 20674  2BC3  00FB               	movwf	EUSART_Initialize@x+1
 20675  2BC4  0824               	movf	?___aldiv,w
 20676  2BC5  00FA               	movwf	EUSART_Initialize@x
 20677                           
 20678                           ;EUSART.c: 10:  if(x>255)
 20679  2BC6  3001               	movlw	1
 20680  2BC7  027B               	subwf	EUSART_Initialize@x+1,w
 20681  2BC8  3000               	movlw	0
 20682  2BC9  1903               	skipnz
 20683  2BCA  027A               	subwf	EUSART_Initialize@x,w
 20684  2BCB  1C03               	skipc
 20685  2BCC  2C15               	goto	l7571
 20686                           
 20687                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20688  2BCD  0832               	movf	EUSART_Initialize@baudrate,w
 20689  2BCE  00B6               	movwf	??_EUSART_Initialize
 20690  2BCF  0833               	movf	EUSART_Initialize@baudrate+1,w
 20691  2BD0  00B7               	movwf	??_EUSART_Initialize+1
 20692  2BD1  0834               	movf	EUSART_Initialize@baudrate+2,w
 20693  2BD2  00B8               	movwf	??_EUSART_Initialize+2
 20694  2BD3  0835               	movf	EUSART_Initialize@baudrate+3,w
 20695  2BD4  00B9               	movwf	??_EUSART_Initialize+3
 20696  2BD5  3004               	movlw	4
 20697  2BD6                     u9435:	
 20698  2BD6  35B6               	lslf	??_EUSART_Initialize,f
 20699  2BD7  0DB7               	rlf	??_EUSART_Initialize+1,f
 20700  2BD8  0DB8               	rlf	??_EUSART_Initialize+2,f
 20701  2BD9  0DB9               	rlf	??_EUSART_Initialize+3,f
 20702  2BDA  0B89               	decfsz	9,f
 20703  2BDB  2BD6               	goto	u9435
 20704  2BDC  0839               	movf	??_EUSART_Initialize+3,w
 20705  2BDD  00A7               	movwf	___aldiv@divisor+3
 20706  2BDE  0838               	movf	??_EUSART_Initialize+2,w
 20707  2BDF  00A6               	movwf	___aldiv@divisor+2
 20708  2BE0  0837               	movf	??_EUSART_Initialize+1,w
 20709  2BE1  00A5               	movwf	___aldiv@divisor+1
 20710  2BE2  0836               	movf	??_EUSART_Initialize,w
 20711  2BE3  00A4               	movwf	___aldiv@divisor
 20712  2BE4  0832               	movf	EUSART_Initialize@baudrate,w
 20713  2BE5  00BA               	movwf	??_EUSART_Initialize+4
 20714  2BE6  0833               	movf	EUSART_Initialize@baudrate+1,w
 20715  2BE7  00BB               	movwf	??_EUSART_Initialize+5
 20716  2BE8  0834               	movf	EUSART_Initialize@baudrate+2,w
 20717  2BE9  00BC               	movwf	??_EUSART_Initialize+6
 20718  2BEA  0835               	movf	EUSART_Initialize@baudrate+3,w
 20719  2BEB  00BD               	movwf	??_EUSART_Initialize+7
 20720  2BEC  3004               	movlw	4
 20721  2BED                     u9445:	
 20722  2BED  35BA               	lslf	??_EUSART_Initialize+4,f
 20723  2BEE  0DBB               	rlf	??_EUSART_Initialize+5,f
 20724  2BEF  0DBC               	rlf	??_EUSART_Initialize+6,f
 20725  2BF0  0DBD               	rlf	??_EUSART_Initialize+7,f
 20726  2BF1  0B89               	decfsz	9,f
 20727  2BF2  2BED               	goto	u9445
 20728  2BF3  3000               	movlw	0
 20729  2BF4  00BE               	movwf	??_EUSART_Initialize+8
 20730  2BF5  3024               	movlw	36
 20731  2BF6  00BF               	movwf	??_EUSART_Initialize+9
 20732  2BF7  30F4               	movlw	244
 20733  2BF8  00C0               	movwf	??_EUSART_Initialize+10
 20734  2BF9  3000               	movlw	0
 20735  2BFA  00C1               	movwf	??_EUSART_Initialize+11
 20736  2BFB  083A               	movf	??_EUSART_Initialize+4,w
 20737  2BFC  02BE               	subwf	??_EUSART_Initialize+8,f
 20738  2BFD  083B               	movf	??_EUSART_Initialize+5,w
 20739  2BFE  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20740  2BFF  083C               	movf	??_EUSART_Initialize+6,w
 20741  2C00  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20742  2C01  083D               	movf	??_EUSART_Initialize+7,w
 20743  2C02  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20744  2C03  0841               	movf	??_EUSART_Initialize+11,w
 20745  2C04  00AB               	movwf	___aldiv@dividend+3
 20746  2C05  0840               	movf	??_EUSART_Initialize+10,w
 20747  2C06  00AA               	movwf	___aldiv@dividend+2
 20748  2C07  083F               	movf	??_EUSART_Initialize+9,w
 20749  2C08  00A9               	movwf	___aldiv@dividend+1
 20750  2C09  083E               	movf	??_EUSART_Initialize+8,w
 20751  2C0A  00A8               	movwf	___aldiv@dividend
 20752  2C0B  31AA  2267  31AB   	fcall	___aldiv
 20753  2C0E  0020               	movlb	0	; select bank0
 20754  2C0F  0825               	movf	?___aldiv+1,w
 20755  2C10  00FB               	movwf	EUSART_Initialize@x+1
 20756  2C11  0824               	movf	?___aldiv,w
 20757  2C12  00FA               	movwf	EUSART_Initialize@x
 20758                           
 20759                           ;EUSART.c: 13:   BRGH = 1;
 20760  2C13  0023               	movlb	3	; select bank3
 20761  2C14  151E               	bsf	30,2	;volatile
 20762  2C15                     l7571:	
 20763                           
 20764                           ;EUSART.c: 15:  if(x<256)
 20765  2C15  3001               	movlw	1
 20766  2C16  027B               	subwf	EUSART_Initialize@x+1,w
 20767  2C17  3000               	movlw	0
 20768  2C18  1903               	skipnz
 20769  2C19  027A               	subwf	EUSART_Initialize@x,w
 20770  2C1A  1803               	skipnc
 20771  2C1B  0008               	return
 20772                           
 20773                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20774  2C1C  087A               	movf	EUSART_Initialize@x,w
 20775  2C1D  0023               	movlb	3	; select bank3
 20776  2C1E  009B               	movwf	27	;volatile
 20777                           
 20778                           ;EUSART.c: 18:    SYNC = 0;
 20779  2C1F  121E               	bcf	30,4	;volatile
 20780                           
 20781                           ;EUSART.c: 19:    SPEN = 1;
 20782  2C20  179D               	bsf	29,7	;volatile
 20783                           
 20784                           ;EUSART.c: 20:           TRISC7 = 1;
 20785  2C21  0021               	movlb	1	; select bank1
 20786  2C22  178E               	bsf	14,7	;volatile
 20787                           
 20788                           ;EUSART.c: 21:           TRISC6 = 1;
 20789  2C23  170E               	bsf	14,6	;volatile
 20790                           
 20791                           ;EUSART.c: 22:           CREN = 1;
 20792  2C24  0023               	movlb	3	; select bank3
 20793  2C25  161D               	bsf	29,4	;volatile
 20794                           
 20795                           ;EUSART.c: 23:           TXEN = 1;
 20796  2C26  169E               	bsf	30,5	;volatile
 20797  2C27  0008               	return
 20798  2C28                     __end_of_EUSART_Initialize:	
 20799                           
 20800                           	psect	text80
 20801  2A67                     __ptext80:	
 20802 ;; *************** function ___aldiv *****************
 20803 ;; Defined at:
 20804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20805 ;; Parameters:    Size  Location     Type
 20806 ;;  divisor         4    4[BANK0 ] long 
 20807 ;;  dividend        4    8[BANK0 ] long 
 20808 ;; Auto vars:     Size  Location     Type
 20809 ;;  quotient        4   14[BANK0 ] long 
 20810 ;;  sign            1   13[BANK0 ] unsigned char 
 20811 ;;  counter         1   12[BANK0 ] unsigned char 
 20812 ;; Return value:  Size  Location     Type
 20813 ;;                  4    4[BANK0 ] long 
 20814 ;; Registers used:
 20815 ;;		wreg, status,2, status,0
 20816 ;; Tracked objects:
 20817 ;;		On entry : 0/0
 20818 ;;		On exit  : 0/0
 20819 ;;		Unchanged: 0/0
 20820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20821 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20822 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20824 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20825 ;;Total ram usage:       15 bytes
 20826 ;; Hardware stack levels used:    1
 20827 ;; Hardware stack levels required when called:    1
 20828 ;; This function calls:
 20829 ;;		Nothing
 20830 ;; This function is called by:
 20831 ;;		_EUSART_Initialize
 20832 ;;		_setCellUndervoltageProtection
 20833 ;;		_setCellOvervoltageProtection
 20834 ;;		_updateVoltages
 20835 ;; This function uses a non-reentrant model
 20836 ;;
 20837                           
 20838                           
 20839                           ;psect for function ___aldiv
 20840  2A67                     ___aldiv:	
 20841                           
 20842                           ;incstack = 0
 20843                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20844  2A67  0020               	movlb	0	; select bank0
 20845  2A68  01AD               	clrf	___aldiv@sign
 20846  2A69  1FA7               	btfss	___aldiv@divisor+3,7
 20847  2A6A  2A78               	goto	l1011
 20848  2A6B  09A4               	comf	___aldiv@divisor,f
 20849  2A6C  09A5               	comf	___aldiv@divisor+1,f
 20850  2A6D  09A6               	comf	___aldiv@divisor+2,f
 20851  2A6E  09A7               	comf	___aldiv@divisor+3,f
 20852  2A6F  0AA4               	incf	___aldiv@divisor,f
 20853  2A70  1903               	skipnz
 20854  2A71  0AA5               	incf	___aldiv@divisor+1,f
 20855  2A72  1903               	skipnz
 20856  2A73  0AA6               	incf	___aldiv@divisor+2,f
 20857  2A74  1903               	skipnz
 20858  2A75  0AA7               	incf	___aldiv@divisor+3,f
 20859  2A76  01AD               	clrf	___aldiv@sign
 20860  2A77  0AAD               	incf	___aldiv@sign,f
 20861  2A78                     l1011:	
 20862  2A78  1FAB               	btfss	___aldiv@dividend+3,7
 20863  2A79  2A89               	goto	l7195
 20864  2A7A  09A8               	comf	___aldiv@dividend,f
 20865  2A7B  09A9               	comf	___aldiv@dividend+1,f
 20866  2A7C  09AA               	comf	___aldiv@dividend+2,f
 20867  2A7D  09AB               	comf	___aldiv@dividend+3,f
 20868  2A7E  0AA8               	incf	___aldiv@dividend,f
 20869  2A7F  1903               	skipnz
 20870  2A80  0AA9               	incf	___aldiv@dividend+1,f
 20871  2A81  1903               	skipnz
 20872  2A82  0AAA               	incf	___aldiv@dividend+2,f
 20873  2A83  1903               	skipnz
 20874  2A84  0AAB               	incf	___aldiv@dividend+3,f
 20875  2A85  3001               	movlw	1
 20876  2A86  00F9               	movwf	??___aldiv
 20877  2A87  0879               	movf	??___aldiv,w
 20878  2A88  06AD               	xorwf	___aldiv@sign,f
 20879  2A89                     l7195:	
 20880  2A89  3000               	movlw	0
 20881  2A8A  00B1               	movwf	___aldiv@quotient+3
 20882  2A8B  3000               	movlw	0
 20883  2A8C  00B0               	movwf	___aldiv@quotient+2
 20884  2A8D  3000               	movlw	0
 20885  2A8E  00AF               	movwf	___aldiv@quotient+1
 20886  2A8F  3000               	movlw	0
 20887  2A90  00AE               	movwf	___aldiv@quotient
 20888  2A91  0827               	movf	___aldiv@divisor+3,w
 20889  2A92  0426               	iorwf	___aldiv@divisor+2,w
 20890  2A93  0425               	iorwf	___aldiv@divisor+1,w
 20891  2A94  0424               	iorwf	___aldiv@divisor,w
 20892  2A95  1903               	skipnz
 20893  2A96  2AD2               	goto	l7217
 20894  2A97  01AC               	clrf	___aldiv@counter
 20895  2A98  0AAC               	incf	___aldiv@counter,f
 20896  2A99                     l7203:	
 20897  2A99  1BA7               	btfsc	___aldiv@divisor+3,7
 20898  2A9A  2AA7               	goto	l7205
 20899  2A9B  3001               	movlw	1
 20900  2A9C                     u9065:	
 20901  2A9C  35A4               	lslf	___aldiv@divisor,f
 20902  2A9D  0DA5               	rlf	___aldiv@divisor+1,f
 20903  2A9E  0DA6               	rlf	___aldiv@divisor+2,f
 20904  2A9F  0DA7               	rlf	___aldiv@divisor+3,f
 20905  2AA0  0B89               	decfsz	9,f
 20906  2AA1  2A9C               	goto	u9065
 20907  2AA2  3001               	movlw	1
 20908  2AA3  00F9               	movwf	??___aldiv
 20909  2AA4  0879               	movf	??___aldiv,w
 20910  2AA5  07AC               	addwf	___aldiv@counter,f
 20911  2AA6  2A99               	goto	l7203
 20912  2AA7                     l7205:	
 20913  2AA7  3001               	movlw	1
 20914  2AA8                     u9085:	
 20915  2AA8  35AE               	lslf	___aldiv@quotient,f
 20916  2AA9  0DAF               	rlf	___aldiv@quotient+1,f
 20917  2AAA  0DB0               	rlf	___aldiv@quotient+2,f
 20918  2AAB  0DB1               	rlf	___aldiv@quotient+3,f
 20919  2AAC  0B89               	decfsz	9,f
 20920  2AAD  2AA8               	goto	u9085
 20921  2AAE  0827               	movf	___aldiv@divisor+3,w
 20922  2AAF  022B               	subwf	___aldiv@dividend+3,w
 20923  2AB0  1D03               	skipz
 20924  2AB1  2ABC               	goto	u9095
 20925  2AB2  0826               	movf	___aldiv@divisor+2,w
 20926  2AB3  022A               	subwf	___aldiv@dividend+2,w
 20927  2AB4  1D03               	skipz
 20928  2AB5  2ABC               	goto	u9095
 20929  2AB6  0825               	movf	___aldiv@divisor+1,w
 20930  2AB7  0229               	subwf	___aldiv@dividend+1,w
 20931  2AB8  1D03               	skipz
 20932  2AB9  2ABC               	goto	u9095
 20933  2ABA  0824               	movf	___aldiv@divisor,w
 20934  2ABB  0228               	subwf	___aldiv@dividend,w
 20935  2ABC                     u9095:	
 20936  2ABC  1C03               	skipc
 20937  2ABD  2AC7               	goto	l7213
 20938  2ABE  0824               	movf	___aldiv@divisor,w
 20939  2ABF  02A8               	subwf	___aldiv@dividend,f
 20940  2AC0  0825               	movf	___aldiv@divisor+1,w
 20941  2AC1  3BA9               	subwfb	___aldiv@dividend+1,f
 20942  2AC2  0826               	movf	___aldiv@divisor+2,w
 20943  2AC3  3BAA               	subwfb	___aldiv@dividend+2,f
 20944  2AC4  0827               	movf	___aldiv@divisor+3,w
 20945  2AC5  3BAB               	subwfb	___aldiv@dividend+3,f
 20946  2AC6  142E               	bsf	___aldiv@quotient,0
 20947  2AC7                     l7213:	
 20948  2AC7  3001               	movlw	1
 20949  2AC8                     u9105:	
 20950  2AC8  36A7               	lsrf	___aldiv@divisor+3,f
 20951  2AC9  0CA6               	rrf	___aldiv@divisor+2,f
 20952  2ACA  0CA5               	rrf	___aldiv@divisor+1,f
 20953  2ACB  0CA4               	rrf	___aldiv@divisor,f
 20954  2ACC  0B89               	decfsz	9,f
 20955  2ACD  2AC8               	goto	u9105
 20956  2ACE  3001               	movlw	1
 20957  2ACF  02AC               	subwf	___aldiv@counter,f
 20958  2AD0  1D03               	btfss	3,2
 20959  2AD1  2AA7               	goto	l7205
 20960  2AD2                     l7217:	
 20961  2AD2  082D               	movf	___aldiv@sign,w
 20962  2AD3  1903               	btfsc	3,2
 20963  2AD4  2AE0               	goto	l7221
 20964  2AD5  09AE               	comf	___aldiv@quotient,f
 20965  2AD6  09AF               	comf	___aldiv@quotient+1,f
 20966  2AD7  09B0               	comf	___aldiv@quotient+2,f
 20967  2AD8  09B1               	comf	___aldiv@quotient+3,f
 20968  2AD9  0AAE               	incf	___aldiv@quotient,f
 20969  2ADA  1903               	skipnz
 20970  2ADB  0AAF               	incf	___aldiv@quotient+1,f
 20971  2ADC  1903               	skipnz
 20972  2ADD  0AB0               	incf	___aldiv@quotient+2,f
 20973  2ADE  1903               	skipnz
 20974  2ADF  0AB1               	incf	___aldiv@quotient+3,f
 20975  2AE0                     l7221:	
 20976  2AE0  0831               	movf	___aldiv@quotient+3,w
 20977  2AE1  00A7               	movwf	?___aldiv+3
 20978  2AE2  0830               	movf	___aldiv@quotient+2,w
 20979  2AE3  00A6               	movwf	?___aldiv+2
 20980  2AE4  082F               	movf	___aldiv@quotient+1,w
 20981  2AE5  00A5               	movwf	?___aldiv+1
 20982  2AE6  082E               	movf	___aldiv@quotient,w
 20983  2AE7  00A4               	movwf	?___aldiv
 20984  2AE8  0008               	return
 20985  2AE9                     __end_of___aldiv:	
 20986                           
 20987                           	psect	intentry
 20988  0004                     __pintentry:	
 20989 ;; *************** function _myIsr *****************
 20990 ;; Defined at:
 20991 ;;		line 54 in file "main.c"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;		None
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;		None
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, status,2, status,0
 21000 ;; Tracked objects:
 21001 ;;		On entry : 0/0
 21002 ;;		On exit  : 0/0
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21009 ;;Total ram usage:        1 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; This function calls:
 21012 ;;		Nothing
 21013 ;; This function is called by:
 21014 ;;		Interrupt level 1
 21015 ;; This function uses a non-reentrant model
 21016 ;;
 21017                           
 21018  0004                     _myIsr:	
 21019                           
 21020                           ;incstack = 0
 21021  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21022                           
 21023                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21024  0005  3180               	pagesel	$
 21025                           
 21026                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21027  0006  0020               	movlb	0	; select bank0
 21028  0007  1C11               	btfss	17,0	;volatile
 21029  0008  281C               	goto	i1l155
 21030  0009  0021               	movlb	1	; select bank1
 21031  000A  1C11               	btfss	17,0	;volatile
 21032  000B  281C               	goto	i1l155
 21033                           
 21034                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 21035  000C  0020               	movlb	0	; select bank0
 21036  000D  1011               	bcf	17,0	;volatile
 21037                           
 21038                           ;main.c: 60:         count++;
 21039  000E  3001               	movlw	1
 21040  000F  00F0               	movwf	??_myIsr
 21041  0010  0870               	movf	??_myIsr,w
 21042  0011  0023               	movlb	3	; select bank3
 21043  0012  07E2               	addwf	myIsr@count^(0+384),f
 21044                           
 21045                           ;main.c: 63:         if (count == 61) {
 21046  0013  303D               	movlw	61
 21047  0014  0662               	xorwf	myIsr@count^(0+384),w
 21048  0015  1D03               	btfss	3,2
 21049  0016  281C               	goto	i1l155
 21050                           
 21051                           ;main.c: 64:             tmr1_flag = 1;
 21052  0017  3001               	movlw	1
 21053  0018  00F0               	movwf	??_myIsr
 21054  0019  0870               	movf	??_myIsr,w
 21055  001A  00E3               	movwf	_tmr1_flag^(0+384)	;volatile
 21056                           
 21057                           ;main.c: 65:             count = 0;
 21058  001B  01E2               	clrf	myIsr@count^(0+384)
 21059  001C                     i1l155:	
 21060  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21061  001D  0009               	retfie
 21062  001E                     __end_of_myIsr:	
 21063  007E                     btemp	set	126	;btemp
 21064  007E                     int$flags	set	126
 21065  007E                     wtemp0	set	126
 21066  2771                     
 21067                           	psect	text7_split_1
 21068  25FC                     l6831:	
 21069                           
 21070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21071  25FC  0859               	movf	vfpfcnvrt@fmt,w
 21072  25FD  0086               	movwf	6
 21073  25FE  0187               	clrf	7
 21074  25FF  3F40               	moviw [0]fsr1
 21075  2600  00F1               	movwf	strncmp@_l
 21076  2601  3F41               	moviw [1]fsr1
 21077  2602  00F2               	movwf	strncmp@_l+1
 21078  2603  309B               	movlw	low (STR_23| (0+32768))
 21079  2604  00F3               	movwf	strncmp@_r
 21080  2605  30BA               	movlw	high (STR_23| (0+32768))
 21081  2606  00F4               	movwf	strncmp@_r+1
 21082  2607  3003               	movlw	3
 21083  2608  00F5               	movwf	strncmp@n
 21084  2609  3000               	movlw	0
 21085  260A  00F6               	movwf	strncmp@n+1
 21086  260B  31B6  269E  31A5   	fcall	_strncmp
 21087  260E  0871               	movf	?_strncmp,w
 21088  260F  0472               	iorwf	?_strncmp+1,w
 21089  2610  1903               	btfsc	3,2
 21090  2611  2E29               	goto	l6835
 21091  2612  0020               	movlb	0	; select bank0
 21092  2613  0859               	movf	vfpfcnvrt@fmt,w
 21093  2614  0086               	movwf	6
 21094  2615  0187               	clrf	7
 21095  2616  3F40               	moviw [0]fsr1
 21096  2617  00F1               	movwf	strncmp@_l
 21097  2618  3F41               	moviw [1]fsr1
 21098  2619  00F2               	movwf	strncmp@_l+1
 21099  261A  309F               	movlw	low (STR_27| (0+32768))
 21100  261B  00F3               	movwf	strncmp@_r
 21101  261C  30BA               	movlw	high (STR_27| (0+32768))
 21102  261D  00F4               	movwf	strncmp@_r+1
 21103  261E  3003               	movlw	3
 21104  261F  00F5               	movwf	strncmp@n
 21105  2620  3000               	movlw	0
 21106  2621  00F6               	movwf	strncmp@n+1
 21107  2622  31B6  269E  31A5   	fcall	_strncmp
 21108  2625  0871               	movf	?_strncmp,w
 21109  2626  0472               	iorwf	?_strncmp+1,w
 21110  2627  1D03               	btfss	3,2
 21111  2628  2E74               	goto	l6843
 21112  2629                     l6835:	
 21113                           
 21114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21115  2629  0020               	movlb	0	; select bank0
 21116  262A  0859               	movf	vfpfcnvrt@fmt,w
 21117  262B  0086               	movwf	6
 21118  262C  0187               	clrf	7
 21119  262D  3003               	movlw	3
 21120  262E  0781               	addwf	1,f
 21121  262F  3141               	addfsr 1,1
 21122  2630  1803               	skipnc
 21123  2631  0A81               	incf	1,f
 21124                           
 21125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21126  2632  085A               	movf	vfpfcnvrt@ap,w
 21127  2633  0086               	movwf	6
 21128  2634  0187               	clrf	7
 21129  2635  0801               	movf	1,w
 21130  2636  0084               	movwf	4
 21131  2637  0185               	clrf	5
 21132  2638  3002               	movlw	2
 21133  2639  0781               	addwf	1,f
 21134  263A  0800               	movf	0,w
 21135  263B  0021               	movlb	1	; select bank1
 21136  263C  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21137  263D  3980               	andlw	128
 21138  263E  1D03               	skipz
 21139  263F  30FF               	movlw	255
 21140  2640  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21141  2641  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21142  2642  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21143  2643  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21144  2644  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21145  2645  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21146  2646  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21147                           
 21148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21149  2647  0020               	movlb	0	; select bank0
 21150  2648  0858               	movf	vfpfcnvrt@fp+1,w
 21151  2649  00B1               	movwf	dtoa@fp+1
 21152  264A  0857               	movf	vfpfcnvrt@fp,w
 21153  264B  00B0               	movwf	dtoa@fp
 21154  264C  0021               	movlb	1	; select bank1
 21155  264D  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21156  264E  0020               	movlb	0	; select bank0
 21157  264F  00B2               	movwf	dtoa@d
 21158  2650  0021               	movlb	1	; select bank1
 21159  2651  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21160  2652  0020               	movlb	0	; select bank0
 21161  2653  00B3               	movwf	dtoa@d+1
 21162  2654  0021               	movlb	1	; select bank1
 21163  2655  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21164  2656  0020               	movlb	0	; select bank0
 21165  2657  00B4               	movwf	dtoa@d+2
 21166  2658  0021               	movlb	1	; select bank1
 21167  2659  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21168  265A  0020               	movlb	0	; select bank0
 21169  265B  00B5               	movwf	dtoa@d+3
 21170  265C  0021               	movlb	1	; select bank1
 21171  265D  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21172  265E  0020               	movlb	0	; select bank0
 21173  265F  00B6               	movwf	dtoa@d+4
 21174  2660  0021               	movlb	1	; select bank1
 21175  2661  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21176  2662  0020               	movlb	0	; select bank0
 21177  2663  00B7               	movwf	dtoa@d+5
 21178  2664  0021               	movlb	1	; select bank1
 21179  2665  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21180  2666  0020               	movlb	0	; select bank0
 21181  2667  00B8               	movwf	dtoa@d+6
 21182  2668  0021               	movlb	1	; select bank1
 21183  2669  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21184  266A  0020               	movlb	0	; select bank0
 21185  266B  00B9               	movwf	dtoa@d+7
 21186  266C  319A  2236         	fcall	_dtoa
 21187  266E  0020               	movlb	0	; select bank0
 21188  266F  0831               	movf	?_dtoa+1,w
 21189  2670  00D8               	movwf	?_vfpfcnvrt+1
 21190  2671  0830               	movf	?_dtoa,w
 21191  2672  00D7               	movwf	?_vfpfcnvrt
 21192  2673  0008               	return
 21193  2674                     l6843:	
 21194                           
 21195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21196  2674  0020               	movlb	0	; select bank0
 21197  2675  0859               	movf	vfpfcnvrt@fmt,w
 21198  2676  0086               	movwf	6
 21199  2677  0187               	clrf	7
 21200  2678  3F40               	moviw [0]fsr1
 21201  2679  00F1               	movwf	strncmp@_l
 21202  267A  3F41               	moviw [1]fsr1
 21203  267B  00F2               	movwf	strncmp@_l+1
 21204  267C  309C               	movlw	low ((STR_23+1)| (0+32768))
 21205  267D  00F3               	movwf	strncmp@_r
 21206  267E  30BA               	movlw	high ((STR_23+1)| (0+32768))
 21207  267F  00F4               	movwf	strncmp@_r+1
 21208  2680  3002               	movlw	2
 21209  2681  00F5               	movwf	strncmp@n
 21210  2682  3000               	movlw	0
 21211  2683  00F6               	movwf	strncmp@n+1
 21212  2684  31B6  269E  31A5   	fcall	_strncmp
 21213  2687  0871               	movf	?_strncmp,w
 21214  2688  0472               	iorwf	?_strncmp+1,w
 21215  2689  1903               	btfsc	3,2
 21216  268A  2EA2               	goto	l6847
 21217  268B  0020               	movlb	0	; select bank0
 21218  268C  0859               	movf	vfpfcnvrt@fmt,w
 21219  268D  0086               	movwf	6
 21220  268E  0187               	clrf	7
 21221  268F  3F40               	moviw [0]fsr1
 21222  2690  00F1               	movwf	strncmp@_l
 21223  2691  3F41               	moviw [1]fsr1
 21224  2692  00F2               	movwf	strncmp@_l+1
 21225  2693  30A0               	movlw	low ((STR_27+1)| (0+32768))
 21226  2694  00F3               	movwf	strncmp@_r
 21227  2695  30BA               	movlw	high ((STR_27+1)| (0+32768))
 21228  2696  00F4               	movwf	strncmp@_r+1
 21229  2697  3002               	movlw	2
 21230  2698  00F5               	movwf	strncmp@n
 21231  2699  3000               	movlw	0
 21232  269A  00F6               	movwf	strncmp@n+1
 21233  269B  31B6  269E  31A5   	fcall	_strncmp
 21234  269E  0871               	movf	?_strncmp,w
 21235  269F  0472               	iorwf	?_strncmp+1,w
 21236  26A0  1D03               	btfss	3,2
 21237  26A1  2EF4               	goto	L9
 21238  26A2                     l6847:	
 21239                           
 21240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21241  26A2  0020               	movlb	0	; select bank0
 21242  26A3  0859               	movf	vfpfcnvrt@fmt,w
 21243  26A4  0086               	movwf	6
 21244  26A5  0187               	clrf	7
 21245  26A6  3002               	movlw	2
 21246  26A7  0781               	addwf	1,f
 21247  26A8  3141               	addfsr 1,1
 21248  26A9  1803               	skipnc
 21249  26AA  0A81               	incf	1,f
 21250                           
 21251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21252  26AB  085A               	movf	vfpfcnvrt@ap,w
 21253  26AC  0086               	movwf	6
 21254  26AD  0187               	clrf	7
 21255  26AE  0801               	movf	1,w
 21256  26AF  0084               	movwf	4
 21257  26B0  0185               	clrf	5
 21258  26B1  3002               	movlw	2
 21259  26B2  0781               	addwf	1,f
 21260  26B3  3F00               	moviw [0]fsr0
 21261  26B4  00DB               	movwf	??_vfpfcnvrt
 21262  26B5  3F01               	moviw [1]fsr0
 21263  26B6  00DC               	movwf	??_vfpfcnvrt+1
 21264  26B7  085B               	movf	??_vfpfcnvrt,w
 21265  26B8  0021               	movlb	1	; select bank1
 21266  26B9  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21267  26BA  0020               	movlb	0	; select bank0
 21268  26BB  085C               	movf	??_vfpfcnvrt+1,w
 21269  26BC  0021               	movlb	1	; select bank1
 21270  26BD  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21271  26BE  0D89               	rlf	9,f
 21272  26BF  3B89               	subwfb	9,f
 21273  26C0  0989               	comf	9,f
 21274  26C1  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21275  26C2  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21276  26C3  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21277  26C4  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21278  26C5  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21279  26C6  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21280                           
 21281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21282  26C7  0020               	movlb	0	; select bank0
 21283  26C8  0858               	movf	vfpfcnvrt@fp+1,w
 21284  26C9  00B1               	movwf	dtoa@fp+1
 21285  26CA  0857               	movf	vfpfcnvrt@fp,w
 21286  26CB  00B0               	movwf	dtoa@fp
 21287  26CC  0021               	movlb	1	; select bank1
 21288  26CD  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21289  26CE  0020               	movlb	0	; select bank0
 21290  26CF  00B2               	movwf	dtoa@d
 21291  26D0  0021               	movlb	1	; select bank1
 21292  26D1  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21293  26D2  0020               	movlb	0	; select bank0
 21294  26D3  00B3               	movwf	dtoa@d+1
 21295  26D4  0021               	movlb	1	; select bank1
 21296  26D5  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21297  26D6  0020               	movlb	0	; select bank0
 21298  26D7  00B4               	movwf	dtoa@d+2
 21299  26D8  0021               	movlb	1	; select bank1
 21300  26D9  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21301  26DA  0020               	movlb	0	; select bank0
 21302  26DB  00B5               	movwf	dtoa@d+3
 21303  26DC  0021               	movlb	1	; select bank1
 21304  26DD  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21305  26DE  0020               	movlb	0	; select bank0
 21306  26DF  00B6               	movwf	dtoa@d+4
 21307  26E0  0021               	movlb	1	; select bank1
 21308  26E1  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21309  26E2  0020               	movlb	0	; select bank0
 21310  26E3  00B7               	movwf	dtoa@d+5
 21311  26E4  0021               	movlb	1	; select bank1
 21312  26E5  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21313  26E6  0020               	movlb	0	; select bank0
 21314  26E7  00B8               	movwf	dtoa@d+6
 21315  26E8  0021               	movlb	1	; select bank1
 21316  26E9  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21317  26EA  0020               	movlb	0	; select bank0
 21318  26EB  00B9               	movwf	dtoa@d+7
 21319  26EC  319A  2236         	fcall	_dtoa
 21320  26EE  0020               	movlb	0	; select bank0
 21321  26EF  0831               	movf	?_dtoa+1,w
 21322  26F0  00D8               	movwf	?_vfpfcnvrt+1
 21323  26F1  0830               	movf	?_dtoa,w
 21324  26F2  00D7               	movwf	?_vfpfcnvrt
 21325  26F3  0008               	return
 21326  26F4                     L9:	
 21327  26F4                     L8:	
 21328  26F4  3188  2843         	ljmp	l6855
 21329                           
 21330                           	psect	text7_split_2
 21331  0843                     l6855:	
 21332                           
 21333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21334  0843  0020               	movlb	0	; select bank0
 21335  0844  0859               	movf	vfpfcnvrt@fmt,w
 21336  0845  0086               	movwf	6
 21337  0846  0187               	clrf	7
 21338  0847  3F40               	moviw [0]fsr1
 21339  0848  00DB               	movwf	??_vfpfcnvrt
 21340  0849  3F41               	moviw [1]fsr1
 21341  084A  00DC               	movwf	??_vfpfcnvrt+1
 21342  084B  085B               	movf	??_vfpfcnvrt,w
 21343  084C  0084               	movwf	4
 21344  084D  085C               	movf	??_vfpfcnvrt+1,w
 21345  084E  0085               	movwf	5
 21346  084F  0012               	moviw fsr0++
 21347  0850  3A64               	xorlw	100
 21348  0851  1903               	btfsc	3,2
 21349  0852  2862               	goto	l6859
 21350  0853  0859               	movf	vfpfcnvrt@fmt,w
 21351  0854  0086               	movwf	6
 21352  0855  0187               	clrf	7
 21353  0856  3F40               	moviw [0]fsr1
 21354  0857  00DB               	movwf	??_vfpfcnvrt
 21355  0858  3F41               	moviw [1]fsr1
 21356  0859  00DC               	movwf	??_vfpfcnvrt+1
 21357  085A  085B               	movf	??_vfpfcnvrt,w
 21358  085B  0084               	movwf	4
 21359  085C  085C               	movf	??_vfpfcnvrt+1,w
 21360  085D  0085               	movwf	5
 21361  085E  0012               	moviw fsr0++
 21362  085F  3A69               	xorlw	105
 21363  0860  1D03               	btfss	3,2
 21364  0861  28B3               	goto	l6867
 21365  0862                     l6859:	
 21366                           
 21367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21368  0862  0859               	movf	vfpfcnvrt@fmt,w
 21369  0863  0086               	movwf	6
 21370  0864  0187               	clrf	7
 21371  0865  3001               	movlw	1
 21372  0866  0781               	addwf	1,f
 21373  0867  3141               	addfsr 1,1
 21374  0868  1803               	skipnc
 21375  0869  0A81               	incf	1,f
 21376                           
 21377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21378  086A  085A               	movf	vfpfcnvrt@ap,w
 21379  086B  0086               	movwf	6
 21380  086C  0187               	clrf	7
 21381  086D  0801               	movf	1,w
 21382  086E  0084               	movwf	4
 21383  086F  0185               	clrf	5
 21384  0870  3002               	movlw	2
 21385  0871  0781               	addwf	1,f
 21386  0872  3F00               	moviw [0]fsr0
 21387  0873  00DB               	movwf	??_vfpfcnvrt
 21388  0874  3F01               	moviw [1]fsr0
 21389  0875  00DC               	movwf	??_vfpfcnvrt+1
 21390  0876  085B               	movf	??_vfpfcnvrt,w
 21391  0877  0021               	movlb	1	; select bank1
 21392  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21393  0879  0020               	movlb	0	; select bank0
 21394  087A  085C               	movf	??_vfpfcnvrt+1,w
 21395  087B  0021               	movlb	1	; select bank1
 21396  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21397  087D  0D89               	rlf	9,f
 21398  087E  3B89               	subwfb	9,f
 21399  087F  0989               	comf	9,f
 21400  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21401  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21402  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21403  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21404  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21405  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21406                           
 21407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21408  0886  0020               	movlb	0	; select bank0
 21409  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21410  0888  00B1               	movwf	dtoa@fp+1
 21411  0889  0857               	movf	vfpfcnvrt@fp,w
 21412  088A  00B0               	movwf	dtoa@fp
 21413  088B  0021               	movlb	1	; select bank1
 21414  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21415  088D  0020               	movlb	0	; select bank0
 21416  088E  00B2               	movwf	dtoa@d
 21417  088F  0021               	movlb	1	; select bank1
 21418  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21419  0891  0020               	movlb	0	; select bank0
 21420  0892  00B3               	movwf	dtoa@d+1
 21421  0893  0021               	movlb	1	; select bank1
 21422  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21423  0895  0020               	movlb	0	; select bank0
 21424  0896  00B4               	movwf	dtoa@d+2
 21425  0897  0021               	movlb	1	; select bank1
 21426  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21427  0899  0020               	movlb	0	; select bank0
 21428  089A  00B5               	movwf	dtoa@d+3
 21429  089B  0021               	movlb	1	; select bank1
 21430  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21431  089D  0020               	movlb	0	; select bank0
 21432  089E  00B6               	movwf	dtoa@d+4
 21433  089F  0021               	movlb	1	; select bank1
 21434  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21435  08A1  0020               	movlb	0	; select bank0
 21436  08A2  00B7               	movwf	dtoa@d+5
 21437  08A3  0021               	movlb	1	; select bank1
 21438  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21439  08A5  0020               	movlb	0	; select bank0
 21440  08A6  00B8               	movwf	dtoa@d+6
 21441  08A7  0021               	movlb	1	; select bank1
 21442  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21443  08A9  0020               	movlb	0	; select bank0
 21444  08AA  00B9               	movwf	dtoa@d+7
 21445  08AB  319A  2236         	fcall	_dtoa
 21446  08AD  0020               	movlb	0	; select bank0
 21447  08AE  0831               	movf	?_dtoa+1,w
 21448  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21449  08B0  0830               	movf	?_dtoa,w
 21450  08B1  00D7               	movwf	?_vfpfcnvrt
 21451  08B2  0008               	return
 21452  08B3                     l6867:	
 21453                           
 21454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21455  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21456  08B4  0086               	movwf	6
 21457  08B5  0187               	clrf	7
 21458  08B6  3F40               	moviw [0]fsr1
 21459  08B7  00F1               	movwf	strncmp@_l
 21460  08B8  3F41               	moviw [1]fsr1
 21461  08B9  00F2               	movwf	strncmp@_l+1
 21462  08BA  30B6               	movlw	low (STR_41| (0+32768))
 21463  08BB  00F3               	movwf	strncmp@_r
 21464  08BC  30BA               	movlw	high (STR_41| (0+32768))
 21465  08BD  00F4               	movwf	strncmp@_r+1
 21466  08BE  3002               	movlw	2
 21467  08BF  00F5               	movwf	strncmp@n
 21468  08C0  3000               	movlw	0
 21469  08C1  00F6               	movwf	strncmp@n+1
 21470  08C2  31B6  269E  3188   	fcall	_strncmp
 21471  08C5  0871               	movf	?_strncmp,w
 21472  08C6  0472               	iorwf	?_strncmp+1,w
 21473  08C7  1903               	btfsc	3,2
 21474  08C8  28E0               	goto	l6871
 21475  08C9  0020               	movlb	0	; select bank0
 21476  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21477  08CB  0086               	movwf	6
 21478  08CC  0187               	clrf	7
 21479  08CD  3F40               	moviw [0]fsr1
 21480  08CE  00F1               	movwf	strncmp@_l
 21481  08CF  3F41               	moviw [1]fsr1
 21482  08D0  00F2               	movwf	strncmp@_l+1
 21483  08D1  30B9               	movlw	low (STR_45| (0+32768))
 21484  08D2  00F3               	movwf	strncmp@_r
 21485  08D3  30BA               	movlw	high (STR_45| (0+32768))
 21486  08D4  00F4               	movwf	strncmp@_r+1
 21487  08D5  3002               	movlw	2
 21488  08D6  00F5               	movwf	strncmp@n
 21489  08D7  3000               	movlw	0
 21490  08D8  00F6               	movwf	strncmp@n+1
 21491  08D9  31B6  269E  3188   	fcall	_strncmp
 21492  08DC  0871               	movf	?_strncmp,w
 21493  08DD  0472               	iorwf	?_strncmp+1,w
 21494  08DE  1D03               	btfss	3,2
 21495  08DF  2929               	goto	l6879
 21496  08E0                     l6871:	
 21497                           
 21498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21499  08E0  0020               	movlb	0	; select bank0
 21500  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21501  08E2  0086               	movwf	6
 21502  08E3  0187               	clrf	7
 21503  08E4  3002               	movlw	2
 21504  08E5  0781               	addwf	1,f
 21505  08E6  3141               	addfsr 1,1
 21506  08E7  1803               	skipnc
 21507  08E8  0A81               	incf	1,f
 21508                           
 21509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21510  08E9  085A               	movf	vfpfcnvrt@ap,w
 21511  08EA  0086               	movwf	6
 21512  08EB  0187               	clrf	7
 21513  08EC  0801               	movf	1,w
 21514  08ED  0084               	movwf	4
 21515  08EE  0185               	clrf	5
 21516  08EF  3002               	movlw	2
 21517  08F0  0781               	addwf	1,f
 21518  08F1  3F00               	moviw [0]fsr0
 21519  08F2  0021               	movlb	1	; select bank1
 21520  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21521  08F4  3F01               	moviw [1]fsr0
 21522  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21523  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21524  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21525  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21526  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21527  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21528  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21529                           
 21530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21531  08FC  0020               	movlb	0	; select bank0
 21532  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21533  08FE  00B1               	movwf	dtoa@fp+1
 21534  08FF  0857               	movf	vfpfcnvrt@fp,w
 21535  0900  00B0               	movwf	dtoa@fp
 21536  0901  0021               	movlb	1	; select bank1
 21537  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21538  0903  0020               	movlb	0	; select bank0
 21539  0904  00B2               	movwf	dtoa@d
 21540  0905  0021               	movlb	1	; select bank1
 21541  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21542  0907  0020               	movlb	0	; select bank0
 21543  0908  00B3               	movwf	dtoa@d+1
 21544  0909  0021               	movlb	1	; select bank1
 21545  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21546  090B  0020               	movlb	0	; select bank0
 21547  090C  00B4               	movwf	dtoa@d+2
 21548  090D  0021               	movlb	1	; select bank1
 21549  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21550  090F  0020               	movlb	0	; select bank0
 21551  0910  00B5               	movwf	dtoa@d+3
 21552  0911  0021               	movlb	1	; select bank1
 21553  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21554  0913  0020               	movlb	0	; select bank0
 21555  0914  00B6               	movwf	dtoa@d+4
 21556  0915  0021               	movlb	1	; select bank1
 21557  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21558  0917  0020               	movlb	0	; select bank0
 21559  0918  00B7               	movwf	dtoa@d+5
 21560  0919  0021               	movlb	1	; select bank1
 21561  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21562  091B  0020               	movlb	0	; select bank0
 21563  091C  00B8               	movwf	dtoa@d+6
 21564  091D  0021               	movlb	1	; select bank1
 21565  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21566  091F  0020               	movlb	0	; select bank0
 21567  0920  00B9               	movwf	dtoa@d+7
 21568  0921  319A  2236         	fcall	_dtoa
 21569  0923  0020               	movlb	0	; select bank0
 21570  0924  0831               	movf	?_dtoa+1,w
 21571  0925  00D8               	movwf	?_vfpfcnvrt+1
 21572  0926  0830               	movf	?_dtoa,w
 21573  0927  00D7               	movwf	?_vfpfcnvrt
 21574  0928  0008               	return
 21575  0929                     l6879:	
 21576                           
 21577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21578  0929  0020               	movlb	0	; select bank0
 21579  092A  0859               	movf	vfpfcnvrt@fmt,w
 21580  092B  0086               	movwf	6
 21581  092C  0187               	clrf	7
 21582  092D  3F40               	moviw [0]fsr1
 21583  092E  00F1               	movwf	strncmp@_l
 21584  092F  3F41               	moviw [1]fsr1
 21585  0930  00F2               	movwf	strncmp@_l+1
 21586  0931  30A7               	movlw	low (STR_50| (0+32768))
 21587  0932  00F3               	movwf	strncmp@_r
 21588  0933  30BA               	movlw	high (STR_50| (0+32768))
 21589  0934  00F4               	movwf	strncmp@_r+1
 21590  0935  3003               	movlw	3
 21591  0936  00F5               	movwf	strncmp@n
 21592  0937  3000               	movlw	0
 21593  0938  00F6               	movwf	strncmp@n+1
 21594  0939  31B6  269E  3188   	fcall	_strncmp
 21595  093C  0871               	movf	?_strncmp,w
 21596  093D  0472               	iorwf	?_strncmp+1,w
 21597  093E  1D03               	btfss	3,2
 21598  093F  2988               	goto	l6889
 21599                           
 21600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21601  0940  0020               	movlb	0	; select bank0
 21602  0941  0859               	movf	vfpfcnvrt@fmt,w
 21603  0942  0086               	movwf	6
 21604  0943  0187               	clrf	7
 21605  0944  3003               	movlw	3
 21606  0945  0781               	addwf	1,f
 21607  0946  3141               	addfsr 1,1
 21608  0947  1803               	skipnc
 21609  0948  0A81               	incf	1,f
 21610                           
 21611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21612  0949  085A               	movf	vfpfcnvrt@ap,w
 21613  094A  0086               	movwf	6
 21614  094B  0187               	clrf	7
 21615  094C  0801               	movf	1,w
 21616  094D  0084               	movwf	4
 21617  094E  0185               	clrf	5
 21618  094F  3002               	movlw	2
 21619  0950  0781               	addwf	1,f
 21620  0951  0800               	movf	0,w
 21621  0952  0021               	movlb	1	; select bank1
 21622  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21623  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21624  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21625  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21626  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21627  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21628  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21629  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21630                           
 21631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21632  095B  0020               	movlb	0	; select bank0
 21633  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21634  095D  00B1               	movwf	otoa@fp+1
 21635  095E  0857               	movf	vfpfcnvrt@fp,w
 21636  095F  00B0               	movwf	otoa@fp
 21637  0960  0021               	movlb	1	; select bank1
 21638  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21639  0962  0020               	movlb	0	; select bank0
 21640  0963  00B2               	movwf	otoa@d
 21641  0964  0021               	movlb	1	; select bank1
 21642  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21643  0966  0020               	movlb	0	; select bank0
 21644  0967  00B3               	movwf	otoa@d+1
 21645  0968  0021               	movlb	1	; select bank1
 21646  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21647  096A  0020               	movlb	0	; select bank0
 21648  096B  00B4               	movwf	otoa@d+2
 21649  096C  0021               	movlb	1	; select bank1
 21650  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21651  096E  0020               	movlb	0	; select bank0
 21652  096F  00B5               	movwf	otoa@d+3
 21653  0970  0021               	movlb	1	; select bank1
 21654  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21655  0972  0020               	movlb	0	; select bank0
 21656  0973  00B6               	movwf	otoa@d+4
 21657  0974  0021               	movlb	1	; select bank1
 21658  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21659  0976  0020               	movlb	0	; select bank0
 21660  0977  00B7               	movwf	otoa@d+5
 21661  0978  0021               	movlb	1	; select bank1
 21662  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21663  097A  0020               	movlb	0	; select bank0
 21664  097B  00B8               	movwf	otoa@d+6
 21665  097C  0021               	movlb	1	; select bank1
 21666  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21667  097E  0020               	movlb	0	; select bank0
 21668  097F  00B9               	movwf	otoa@d+7
 21669  0980  31A4  2418         	fcall	_otoa
 21670  0982  0020               	movlb	0	; select bank0
 21671  0983  0831               	movf	?_otoa+1,w
 21672  0984  00D8               	movwf	?_vfpfcnvrt+1
 21673  0985  0830               	movf	?_otoa,w
 21674  0986  00D7               	movwf	?_vfpfcnvrt
 21675  0987  0008               	return
 21676  0988                     l6889:	
 21677                           
 21678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21679  0988  0020               	movlb	0	; select bank0
 21680  0989  0859               	movf	vfpfcnvrt@fmt,w
 21681  098A  0086               	movwf	6
 21682  098B  0187               	clrf	7
 21683  098C  3F40               	moviw [0]fsr1
 21684  098D  00F1               	movwf	strncmp@_l
 21685  098E  3F41               	moviw [1]fsr1
 21686  098F  00F2               	movwf	strncmp@_l+1
 21687  0990  30A8               	movlw	low ((STR_50+1)| (0+32768))
 21688  0991  00F3               	movwf	strncmp@_r
 21689  0992  30BA               	movlw	high ((STR_50+1)| (0+32768))
 21690  0993  00F4               	movwf	strncmp@_r+1
 21691  0994  3002               	movlw	2
 21692  0995  00F5               	movwf	strncmp@n
 21693  0996  3000               	movlw	0
 21694  0997  00F6               	movwf	strncmp@n+1
 21695  0998  31B6  269E  3188   	fcall	_strncmp
 21696  099B  0871               	movf	?_strncmp,w
 21697  099C  0472               	iorwf	?_strncmp+1,w
 21698  099D  1D03               	btfss	3,2
 21699  099E  29E8               	goto	l6899
 21700                           
 21701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21702  099F  0020               	movlb	0	; select bank0
 21703  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21704  09A1  0086               	movwf	6
 21705  09A2  0187               	clrf	7
 21706  09A3  3002               	movlw	2
 21707  09A4  0781               	addwf	1,f
 21708  09A5  3141               	addfsr 1,1
 21709  09A6  1803               	skipnc
 21710  09A7  0A81               	incf	1,f
 21711                           
 21712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21713  09A8  085A               	movf	vfpfcnvrt@ap,w
 21714  09A9  0086               	movwf	6
 21715  09AA  0187               	clrf	7
 21716  09AB  0801               	movf	1,w
 21717  09AC  0084               	movwf	4
 21718  09AD  0185               	clrf	5
 21719  09AE  3002               	movlw	2
 21720  09AF  0781               	addwf	1,f
 21721  09B0  3F00               	moviw [0]fsr0
 21722  09B1  0021               	movlb	1	; select bank1
 21723  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21724  09B3  3F01               	moviw [1]fsr0
 21725  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21726  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21727  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21728  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21729  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21730  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21731  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21732                           
 21733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21734  09BB  0020               	movlb	0	; select bank0
 21735  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21736  09BD  00B1               	movwf	otoa@fp+1
 21737  09BE  0857               	movf	vfpfcnvrt@fp,w
 21738  09BF  00B0               	movwf	otoa@fp
 21739  09C0  0021               	movlb	1	; select bank1
 21740  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21741  09C2  0020               	movlb	0	; select bank0
 21742  09C3  00B2               	movwf	otoa@d
 21743  09C4  0021               	movlb	1	; select bank1
 21744  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21745  09C6  0020               	movlb	0	; select bank0
 21746  09C7  00B3               	movwf	otoa@d+1
 21747  09C8  0021               	movlb	1	; select bank1
 21748  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21749  09CA  0020               	movlb	0	; select bank0
 21750  09CB  00B4               	movwf	otoa@d+2
 21751  09CC  0021               	movlb	1	; select bank1
 21752  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21753  09CE  0020               	movlb	0	; select bank0
 21754  09CF  00B5               	movwf	otoa@d+3
 21755  09D0  0021               	movlb	1	; select bank1
 21756  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21757  09D2  0020               	movlb	0	; select bank0
 21758  09D3  00B6               	movwf	otoa@d+4
 21759  09D4  0021               	movlb	1	; select bank1
 21760  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21761  09D6  0020               	movlb	0	; select bank0
 21762  09D7  00B7               	movwf	otoa@d+5
 21763  09D8  0021               	movlb	1	; select bank1
 21764  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21765  09DA  0020               	movlb	0	; select bank0
 21766  09DB  00B8               	movwf	otoa@d+6
 21767  09DC  0021               	movlb	1	; select bank1
 21768  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21769  09DE  0020               	movlb	0	; select bank0
 21770  09DF  00B9               	movwf	otoa@d+7
 21771  09E0  31A4  2418         	fcall	_otoa
 21772  09E2  0020               	movlb	0	; select bank0
 21773  09E3  0831               	movf	?_otoa+1,w
 21774  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21775  09E5  0830               	movf	?_otoa,w
 21776  09E6  00D7               	movwf	?_vfpfcnvrt
 21777  09E7  0008               	return
 21778  09E8                     l6899:	
 21779                           
 21780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21781  09E8  0020               	movlb	0	; select bank0
 21782  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21783  09EA  0086               	movwf	6
 21784  09EB  0187               	clrf	7
 21785  09EC  3F40               	moviw [0]fsr1
 21786  09ED  00DB               	movwf	??_vfpfcnvrt
 21787  09EE  3F41               	moviw [1]fsr1
 21788  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21789  09F0  085B               	movf	??_vfpfcnvrt,w
 21790  09F1  0084               	movwf	4
 21791  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21792  09F3  0085               	movwf	5
 21793  09F4  0012               	moviw fsr0++
 21794  09F5  3A6F               	xorlw	111
 21795  09F6  1D03               	btfss	3,2
 21796  09F7  2A40               	goto	l6909
 21797                           
 21798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21799  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21800  09F9  0086               	movwf	6
 21801  09FA  0187               	clrf	7
 21802  09FB  3001               	movlw	1
 21803  09FC  0781               	addwf	1,f
 21804  09FD  3141               	addfsr 1,1
 21805  09FE  1803               	skipnc
 21806  09FF  0A81               	incf	1,f
 21807                           
 21808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21809  0A00  085A               	movf	vfpfcnvrt@ap,w
 21810  0A01  0086               	movwf	6
 21811  0A02  0187               	clrf	7
 21812  0A03  0801               	movf	1,w
 21813  0A04  0084               	movwf	4
 21814  0A05  0185               	clrf	5
 21815  0A06  3002               	movlw	2
 21816  0A07  0781               	addwf	1,f
 21817  0A08  3F00               	moviw [0]fsr0
 21818  0A09  0021               	movlb	1	; select bank1
 21819  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21820  0A0B  3F01               	moviw [1]fsr0
 21821  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21822  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21823  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21824  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21825  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21826  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21827  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21828                           
 21829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21830  0A13  0020               	movlb	0	; select bank0
 21831  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21832  0A15  00B1               	movwf	otoa@fp+1
 21833  0A16  0857               	movf	vfpfcnvrt@fp,w
 21834  0A17  00B0               	movwf	otoa@fp
 21835  0A18  0021               	movlb	1	; select bank1
 21836  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21837  0A1A  0020               	movlb	0	; select bank0
 21838  0A1B  00B2               	movwf	otoa@d
 21839  0A1C  0021               	movlb	1	; select bank1
 21840  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21841  0A1E  0020               	movlb	0	; select bank0
 21842  0A1F  00B3               	movwf	otoa@d+1
 21843  0A20  0021               	movlb	1	; select bank1
 21844  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21845  0A22  0020               	movlb	0	; select bank0
 21846  0A23  00B4               	movwf	otoa@d+2
 21847  0A24  0021               	movlb	1	; select bank1
 21848  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21849  0A26  0020               	movlb	0	; select bank0
 21850  0A27  00B5               	movwf	otoa@d+3
 21851  0A28  0021               	movlb	1	; select bank1
 21852  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21853  0A2A  0020               	movlb	0	; select bank0
 21854  0A2B  00B6               	movwf	otoa@d+4
 21855  0A2C  0021               	movlb	1	; select bank1
 21856  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21857  0A2E  0020               	movlb	0	; select bank0
 21858  0A2F  00B7               	movwf	otoa@d+5
 21859  0A30  0021               	movlb	1	; select bank1
 21860  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21861  0A32  0020               	movlb	0	; select bank0
 21862  0A33  00B8               	movwf	otoa@d+6
 21863  0A34  0021               	movlb	1	; select bank1
 21864  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21865  0A36  0020               	movlb	0	; select bank0
 21866  0A37  00B9               	movwf	otoa@d+7
 21867  0A38  31A4  2418         	fcall	_otoa
 21868  0A3A  0020               	movlb	0	; select bank0
 21869  0A3B  0831               	movf	?_otoa+1,w
 21870  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21871  0A3D  0830               	movf	?_otoa,w
 21872  0A3E  00D7               	movwf	?_vfpfcnvrt
 21873  0A3F  0008               	return
 21874  0A40                     l6909:	
 21875                           
 21876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21877  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21878  0A41  0086               	movwf	6
 21879  0A42  0187               	clrf	7
 21880  0A43  3F40               	moviw [0]fsr1
 21881  0A44  00F1               	movwf	strncmp@_l
 21882  0A45  3F41               	moviw [1]fsr1
 21883  0A46  00F2               	movwf	strncmp@_l+1
 21884  0A47  30BF               	movlw	low (STR_60| (0+32768))
 21885  0A48  00F3               	movwf	strncmp@_r
 21886  0A49  30BA               	movlw	high (STR_60| (0+32768))
 21887  0A4A  00F4               	movwf	strncmp@_r+1
 21888  0A4B  3002               	movlw	2
 21889  0A4C  00F5               	movwf	strncmp@n
 21890  0A4D  3000               	movlw	0
 21891  0A4E  00F6               	movwf	strncmp@n+1
 21892  0A4F  31B6  269E  3188   	fcall	_strncmp
 21893  0A52  0871               	movf	?_strncmp,w
 21894  0A53  0472               	iorwf	?_strncmp+1,w
 21895  0A54  1D03               	btfss	3,2
 21896  0A55  2A9F               	goto	l6919
 21897                           
 21898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21899  0A56  0020               	movlb	0	; select bank0
 21900  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21901  0A58  0086               	movwf	6
 21902  0A59  0187               	clrf	7
 21903  0A5A  3002               	movlw	2
 21904  0A5B  0781               	addwf	1,f
 21905  0A5C  3141               	addfsr 1,1
 21906  0A5D  1803               	skipnc
 21907  0A5E  0A81               	incf	1,f
 21908                           
 21909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21910  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21911  0A60  0086               	movwf	6
 21912  0A61  0187               	clrf	7
 21913  0A62  0801               	movf	1,w
 21914  0A63  0084               	movwf	4
 21915  0A64  0185               	clrf	5
 21916  0A65  3002               	movlw	2
 21917  0A66  0781               	addwf	1,f
 21918  0A67  3F00               	moviw [0]fsr0
 21919  0A68  0021               	movlb	1	; select bank1
 21920  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21921  0A6A  3F01               	moviw [1]fsr0
 21922  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21923  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21924  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21925  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21926  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21927  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21928  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21929                           
 21930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21931  0A72  0020               	movlb	0	; select bank0
 21932  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21933  0A74  00B1               	movwf	otoa@fp+1
 21934  0A75  0857               	movf	vfpfcnvrt@fp,w
 21935  0A76  00B0               	movwf	otoa@fp
 21936  0A77  0021               	movlb	1	; select bank1
 21937  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21938  0A79  0020               	movlb	0	; select bank0
 21939  0A7A  00B2               	movwf	otoa@d
 21940  0A7B  0021               	movlb	1	; select bank1
 21941  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21942  0A7D  0020               	movlb	0	; select bank0
 21943  0A7E  00B3               	movwf	otoa@d+1
 21944  0A7F  0021               	movlb	1	; select bank1
 21945  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21946  0A81  0020               	movlb	0	; select bank0
 21947  0A82  00B4               	movwf	otoa@d+2
 21948  0A83  0021               	movlb	1	; select bank1
 21949  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21950  0A85  0020               	movlb	0	; select bank0
 21951  0A86  00B5               	movwf	otoa@d+3
 21952  0A87  0021               	movlb	1	; select bank1
 21953  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21954  0A89  0020               	movlb	0	; select bank0
 21955  0A8A  00B6               	movwf	otoa@d+4
 21956  0A8B  0021               	movlb	1	; select bank1
 21957  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21958  0A8D  0020               	movlb	0	; select bank0
 21959  0A8E  00B7               	movwf	otoa@d+5
 21960  0A8F  0021               	movlb	1	; select bank1
 21961  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21962  0A91  0020               	movlb	0	; select bank0
 21963  0A92  00B8               	movwf	otoa@d+6
 21964  0A93  0021               	movlb	1	; select bank1
 21965  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21966  0A95  0020               	movlb	0	; select bank0
 21967  0A96  00B9               	movwf	otoa@d+7
 21968  0A97  31A4  2418         	fcall	_otoa
 21969  0A99  0020               	movlb	0	; select bank0
 21970  0A9A  0831               	movf	?_otoa+1,w
 21971  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21972  0A9C  0830               	movf	?_otoa,w
 21973  0A9D  00D7               	movwf	?_vfpfcnvrt
 21974  0A9E  0008               	return
 21975  0A9F                     l6919:	
 21976                           
 21977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21978  0A9F  0020               	movlb	0	; select bank0
 21979  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21980  0AA1  0086               	movwf	6
 21981  0AA2  0187               	clrf	7
 21982  0AA3  3F40               	moviw [0]fsr1
 21983  0AA4  00F1               	movwf	strncmp@_l
 21984  0AA5  3F41               	moviw [1]fsr1
 21985  0AA6  00F2               	movwf	strncmp@_l+1
 21986  0AA7  30A3               	movlw	low (STR_65| (0+32768))
 21987  0AA8  00F3               	movwf	strncmp@_r
 21988  0AA9  30BA               	movlw	high (STR_65| (0+32768))
 21989  0AAA  00F4               	movwf	strncmp@_r+1
 21990  0AAB  3003               	movlw	3
 21991  0AAC  00F5               	movwf	strncmp@n
 21992  0AAD  3000               	movlw	0
 21993  0AAE  00F6               	movwf	strncmp@n+1
 21994  0AAF  31B6  269E  3188   	fcall	_strncmp
 21995  0AB2  0871               	movf	?_strncmp,w
 21996  0AB3  0472               	iorwf	?_strncmp+1,w
 21997  0AB4  1D03               	btfss	3,2
 21998  0AB5  2B36               	goto	l6931
 21999                           
 22000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22001  0AB6  0020               	movlb	0	; select bank0
 22002  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22003  0AB8  0086               	movwf	6
 22004  0AB9  0187               	clrf	7
 22005  0ABA  3003               	movlw	3
 22006  0ABB  0781               	addwf	1,f
 22007  0ABC  3141               	addfsr 1,1
 22008  0ABD  1803               	skipnc
 22009  0ABE  0A81               	incf	1,f
 22010                           
 22011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22012  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22013  0AC0  0086               	movwf	6
 22014  0AC1  0187               	clrf	7
 22015  0AC2  0801               	movf	1,w
 22016  0AC3  0084               	movwf	4
 22017  0AC4  0185               	clrf	5
 22018  0AC5  3002               	movlw	2
 22019  0AC6  0781               	addwf	1,f
 22020  0AC7  3F00               	moviw [0]fsr0
 22021  0AC8  0021               	movlb	1	; select bank1
 22022  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22023  0ACA  3F01               	moviw [1]fsr0
 22024  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22025                           
 22026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22027  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22028  0ACD  0086               	movwf	6
 22029  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22030  0ACF  0087               	movwf	7
 22031  0AD0  0023               	movlb	3	; select bank3
 22032  0AD1  0854               	movf	_nout^(0+384),w
 22033  0AD2  0081               	movwf	1
 22034  0AD3  2B32               	goto	l6927
 22035  0AD4                     l6933:	
 22036                           
 22037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22038  0AD4  0020               	movlb	0	; select bank0
 22039  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22040  0AD6  0086               	movwf	6
 22041  0AD7  0187               	clrf	7
 22042  0AD8  3002               	movlw	2
 22043  0AD9  0781               	addwf	1,f
 22044  0ADA  3141               	addfsr 1,1
 22045  0ADB  1803               	skipnc
 22046  0ADC  0A81               	incf	1,f
 22047                           
 22048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22049  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22050  0ADE  0086               	movwf	6
 22051  0ADF  0187               	clrf	7
 22052  0AE0  0801               	movf	1,w
 22053  0AE1  0084               	movwf	4
 22054  0AE2  0185               	clrf	5
 22055  0AE3  3002               	movlw	2
 22056  0AE4  0781               	addwf	1,f
 22057  0AE5  3F00               	moviw [0]fsr0
 22058  0AE6  0021               	movlb	1	; select bank1
 22059  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22060  0AE8  3F01               	moviw [1]fsr0
 22061  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22062                           
 22063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22064  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22065  0AEB  0086               	movwf	6
 22066  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22067  0AED  0087               	movwf	7
 22068  0AEE  0023               	movlb	3	; select bank3
 22069  0AEF  0854               	movf	_nout^(0+384),w
 22070  0AF0  3FC0               	movwi [0]fsr1
 22071  0AF1  0855               	movf	(_nout+1)^(0+384),w
 22072  0AF2  3FC1               	movwi [1]fsr1
 22073  0AF3  2B32               	goto	l6927
 22074  0AF4                     l6945:	
 22075                           
 22076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22077  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22078  0AF5  0086               	movwf	6
 22079  0AF6  0187               	clrf	7
 22080  0AF7  3001               	movlw	1
 22081  0AF8  0781               	addwf	1,f
 22082  0AF9  3141               	addfsr 1,1
 22083  0AFA  1803               	skipnc
 22084  0AFB  0A81               	incf	1,f
 22085                           
 22086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22087  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22088  0AFD  0086               	movwf	6
 22089  0AFE  0187               	clrf	7
 22090  0AFF  0801               	movf	1,w
 22091  0B00  0084               	movwf	4
 22092  0B01  0185               	clrf	5
 22093  0B02  3002               	movlw	2
 22094  0B03  0781               	addwf	1,f
 22095  0B04  3F00               	moviw [0]fsr0
 22096  0B05  0021               	movlb	1	; select bank1
 22097  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22098  0B07  3F01               	moviw [1]fsr0
 22099  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22100                           
 22101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22102  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22103  0B0A  0086               	movwf	6
 22104  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22105  0B0C  0087               	movwf	7
 22106  0B0D  0023               	movlb	3	; select bank3
 22107  0B0E  0854               	movf	_nout^(0+384),w
 22108  0B0F  3FC0               	movwi [0]fsr1
 22109  0B10  0855               	movf	(_nout+1)^(0+384),w
 22110  0B11  3FC1               	movwi [1]fsr1
 22111  0B12  2B32               	goto	l6927
 22112  0B13                     l6957:	
 22113                           
 22114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22115  0B13  0020               	movlb	0	; select bank0
 22116  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22117  0B15  0086               	movwf	6
 22118  0B16  0187               	clrf	7
 22119  0B17  3002               	movlw	2
 22120  0B18  0781               	addwf	1,f
 22121  0B19  3141               	addfsr 1,1
 22122  0B1A  1803               	skipnc
 22123  0B1B  0A81               	incf	1,f
 22124                           
 22125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22126  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22127  0B1D  0086               	movwf	6
 22128  0B1E  0187               	clrf	7
 22129  0B1F  0801               	movf	1,w
 22130  0B20  0084               	movwf	4
 22131  0B21  0185               	clrf	5
 22132  0B22  3002               	movlw	2
 22133  0B23  0781               	addwf	1,f
 22134  0B24  3F00               	moviw [0]fsr0
 22135  0B25  0021               	movlb	1	; select bank1
 22136  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22137  0B27  3F01               	moviw [1]fsr0
 22138  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22139                           
 22140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22141  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22142  0B2A  0086               	movwf	6
 22143  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22144  0B2C  0087               	movwf	7
 22145  0B2D  0023               	movlb	3	; select bank3
 22146  0B2E  0854               	movf	_nout^(0+384),w
 22147  0B2F  3FC0               	movwi [0]fsr1
 22148  0B30  0855               	movf	(_nout+1)^(0+384),w
 22149  0B31  3FC1               	movwi [1]fsr1
 22150  0B32                     l6927:	
 22151                           
 22152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22153  0B32  0020               	movlb	0	; select bank0
 22154  0B33  01D7               	clrf	?_vfpfcnvrt
 22155  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22156  0B35  0008               	return
 22157  0B36                     l6931:	
 22158                           
 22159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22160  0B36  0020               	movlb	0	; select bank0
 22161  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22162  0B38  0086               	movwf	6
 22163  0B39  0187               	clrf	7
 22164  0B3A  3F40               	moviw [0]fsr1
 22165  0B3B  00F1               	movwf	strncmp@_l
 22166  0B3C  3F41               	moviw [1]fsr1
 22167  0B3D  00F2               	movwf	strncmp@_l+1
 22168  0B3E  30A4               	movlw	low ((STR_65+1)| (0+32768))
 22169  0B3F  00F3               	movwf	strncmp@_r
 22170  0B40  30BA               	movlw	high ((STR_65+1)| (0+32768))
 22171  0B41  00F4               	movwf	strncmp@_r+1
 22172  0B42  3002               	movlw	2
 22173  0B43  00F5               	movwf	strncmp@n
 22174  0B44  3000               	movlw	0
 22175  0B45  00F6               	movwf	strncmp@n+1
 22176  0B46  31B6  269E  3188   	fcall	_strncmp
 22177  0B49  0871               	movf	?_strncmp,w
 22178  0B4A  0472               	iorwf	?_strncmp+1,w
 22179  0B4B  1903               	btfsc	3,2
 22180  0B4C  2AD4               	goto	l6933
 22181                           
 22182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22183  0B4D  0020               	movlb	0	; select bank0
 22184  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22185  0B4F  0086               	movwf	6
 22186  0B50  0187               	clrf	7
 22187  0B51  3F40               	moviw [0]fsr1
 22188  0B52  00DB               	movwf	??_vfpfcnvrt
 22189  0B53  3F41               	moviw [1]fsr1
 22190  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22191  0B55  085B               	movf	??_vfpfcnvrt,w
 22192  0B56  0084               	movwf	4
 22193  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22194  0B58  0085               	movwf	5
 22195  0B59  0012               	moviw fsr0++
 22196  0B5A  3A6E               	xorlw	110
 22197  0B5B  1903               	btfsc	3,2
 22198  0B5C  2AF4               	goto	l6945
 22199                           
 22200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22201  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22202  0B5E  0086               	movwf	6
 22203  0B5F  0187               	clrf	7
 22204  0B60  3F40               	moviw [0]fsr1
 22205  0B61  00F1               	movwf	strncmp@_l
 22206  0B62  3F41               	moviw [1]fsr1
 22207  0B63  00F2               	movwf	strncmp@_l+1
 22208  0B64  30BC               	movlw	low (STR_75| (0+32768))
 22209  0B65  00F3               	movwf	strncmp@_r
 22210  0B66  30BA               	movlw	high (STR_75| (0+32768))
 22211  0B67  00F4               	movwf	strncmp@_r+1
 22212  0B68  3002               	movlw	2
 22213  0B69  00F5               	movwf	strncmp@n
 22214  0B6A  3000               	movlw	0
 22215  0B6B  00F6               	movwf	strncmp@n+1
 22216  0B6C  31B6  269E  3188   	fcall	_strncmp
 22217  0B6F  0871               	movf	?_strncmp,w
 22218  0B70  0472               	iorwf	?_strncmp+1,w
 22219  0B71  1903               	btfsc	3,2
 22220  0B72  2B13               	goto	l6957
 22221                           
 22222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22223  0B73  0020               	movlb	0	; select bank0
 22224  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22225  0B75  0086               	movwf	6
 22226  0B76  0187               	clrf	7
 22227  0B77  3F40               	moviw [0]fsr1
 22228  0B78  00DB               	movwf	??_vfpfcnvrt
 22229  0B79  3F41               	moviw [1]fsr1
 22230  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22231  0B7B  085B               	movf	??_vfpfcnvrt,w
 22232  0B7C  0084               	movwf	4
 22233  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22234  0B7E  0085               	movwf	5
 22235  0B7F  0012               	moviw fsr0++
 22236  0B80  3A70               	xorlw	112
 22237  0B81  1D03               	btfss	3,2
 22238  0B82  2BCF               	goto	l6977
 22239                           
 22240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22241  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22242  0B84  0086               	movwf	6
 22243  0B85  0187               	clrf	7
 22244  0B86  3001               	movlw	1
 22245  0B87  0781               	addwf	1,f
 22246  0B88  3141               	addfsr 1,1
 22247  0B89  1803               	skipnc
 22248  0B8A  0A81               	incf	1,f
 22249                           
 22250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22251  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22252  0B8C  0086               	movwf	6
 22253  0B8D  0187               	clrf	7
 22254  0B8E  0801               	movf	1,w
 22255  0B8F  0084               	movwf	4
 22256  0B90  0185               	clrf	5
 22257  0B91  3002               	movlw	2
 22258  0B92  0781               	addwf	1,f
 22259  0B93  3F00               	moviw [0]fsr0
 22260  0B94  0021               	movlb	1	; select bank1
 22261  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22262  0B96  3F01               	moviw [1]fsr0
 22263  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22264  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22265  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22266  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22267  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22268  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22269  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22270                           
 22271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22272  0B9E  0020               	movlb	0	; select bank0
 22273  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22274  0BA0  00B1               	movwf	xtoa@fp+1
 22275  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22276  0BA2  00B0               	movwf	xtoa@fp
 22277  0BA3  0021               	movlb	1	; select bank1
 22278  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22279  0BA5  0020               	movlb	0	; select bank0
 22280  0BA6  00B2               	movwf	xtoa@d
 22281  0BA7  0021               	movlb	1	; select bank1
 22282  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22283  0BA9  0020               	movlb	0	; select bank0
 22284  0BAA  00B3               	movwf	xtoa@d+1
 22285  0BAB  0021               	movlb	1	; select bank1
 22286  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22287  0BAD  0020               	movlb	0	; select bank0
 22288  0BAE  00B4               	movwf	xtoa@d+2
 22289  0BAF  0021               	movlb	1	; select bank1
 22290  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22291  0BB1  0020               	movlb	0	; select bank0
 22292  0BB2  00B5               	movwf	xtoa@d+3
 22293  0BB3  0021               	movlb	1	; select bank1
 22294  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22295  0BB5  0020               	movlb	0	; select bank0
 22296  0BB6  00B6               	movwf	xtoa@d+4
 22297  0BB7  0021               	movlb	1	; select bank1
 22298  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22299  0BB9  0020               	movlb	0	; select bank0
 22300  0BBA  00B7               	movwf	xtoa@d+5
 22301  0BBB  0021               	movlb	1	; select bank1
 22302  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22303  0BBD  0020               	movlb	0	; select bank0
 22304  0BBE  00B8               	movwf	xtoa@d+6
 22305  0BBF  0021               	movlb	1	; select bank1
 22306  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22307  0BC1  0020               	movlb	0	; select bank0
 22308  0BC2  00B9               	movwf	xtoa@d+7
 22309  0BC3  3078               	movlw	120
 22310  0BC4  00DB               	movwf	??_vfpfcnvrt
 22311  0BC5  085B               	movf	??_vfpfcnvrt,w
 22312  0BC6  00BA               	movwf	xtoa@x
 22313  0BC7  319B  2389         	fcall	_xtoa
 22314  0BC9  0020               	movlb	0	; select bank0
 22315  0BCA  0831               	movf	?_xtoa+1,w
 22316  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22317  0BCC  0830               	movf	?_xtoa,w
 22318  0BCD  00D7               	movwf	?_vfpfcnvrt
 22319  0BCE  0008               	return
 22320  0BCF                     l6977:	
 22321                           
 22322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22323  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22324  0BD0  0086               	movwf	6
 22325  0BD1  0187               	clrf	7
 22326  0BD2  3F40               	moviw [0]fsr1
 22327  0BD3  00DB               	movwf	??_vfpfcnvrt
 22328  0BD4  3F41               	moviw [1]fsr1
 22329  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22330  0BD6  085B               	movf	??_vfpfcnvrt,w
 22331  0BD7  0084               	movwf	4
 22332  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22333  0BD9  0085               	movwf	5
 22334  0BDA  0012               	moviw fsr0++
 22335  0BDB  3A73               	xorlw	115
 22336  0BDC  1D03               	btfss	3,2
 22337  0BDD  2C08               	goto	l6987
 22338                           
 22339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22340  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22341  0BDF  0086               	movwf	6
 22342  0BE0  0187               	clrf	7
 22343  0BE1  3001               	movlw	1
 22344  0BE2  0781               	addwf	1,f
 22345  0BE3  3141               	addfsr 1,1
 22346  0BE4  1803               	skipnc
 22347  0BE5  0A81               	incf	1,f
 22348                           
 22349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22350  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22351  0BE7  0086               	movwf	6
 22352  0BE8  0187               	clrf	7
 22353  0BE9  0801               	movf	1,w
 22354  0BEA  0084               	movwf	4
 22355  0BEB  0185               	clrf	5
 22356  0BEC  3002               	movlw	2
 22357  0BED  0781               	addwf	1,f
 22358  0BEE  3F00               	moviw [0]fsr0
 22359  0BEF  0021               	movlb	1	; select bank1
 22360  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22361  0BF1  3F01               	moviw [1]fsr0
 22362  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22363                           
 22364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22365  0BF3  0020               	movlb	0	; select bank0
 22366  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22367  0BF5  00A1               	movwf	stoa@fp+1
 22368  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22369  0BF7  00A0               	movwf	stoa@fp
 22370  0BF8  0021               	movlb	1	; select bank1
 22371  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22372  0BFA  0020               	movlb	0	; select bank0
 22373  0BFB  00A3               	movwf	stoa@s+1
 22374  0BFC  0021               	movlb	1	; select bank1
 22375  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22376  0BFE  0020               	movlb	0	; select bank0
 22377  0BFF  00A2               	movwf	stoa@s
 22378  0C00  31AD  25A0         	fcall	_stoa
 22379  0C02  0020               	movlb	0	; select bank0
 22380  0C03  0821               	movf	?_stoa+1,w
 22381  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22382  0C05  0820               	movf	?_stoa,w
 22383  0C06  00D7               	movwf	?_vfpfcnvrt
 22384  0C07  0008               	return
 22385  0C08                     l6987:	
 22386                           
 22387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22388  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22389  0C09  0086               	movwf	6
 22390  0C0A  0187               	clrf	7
 22391  0C0B  3F40               	moviw [0]fsr1
 22392  0C0C  00F1               	movwf	strncmp@_l
 22393  0C0D  3F41               	moviw [1]fsr1
 22394  0C0E  00F2               	movwf	strncmp@_l+1
 22395  0C0F  30AB               	movlw	low (STR_80| (0+32768))
 22396  0C10  00F3               	movwf	strncmp@_r
 22397  0C11  30BA               	movlw	high (STR_80| (0+32768))
 22398  0C12  00F4               	movwf	strncmp@_r+1
 22399  0C13  3003               	movlw	3
 22400  0C14  00F5               	movwf	strncmp@n
 22401  0C15  3000               	movlw	0
 22402  0C16  00F6               	movwf	strncmp@n+1
 22403  0C17  31B6  269E  3188   	fcall	_strncmp
 22404  0C1A  0871               	movf	?_strncmp,w
 22405  0C1B  0472               	iorwf	?_strncmp+1,w
 22406  0C1C  1D03               	btfss	3,2
 22407  0C1D  2C66               	goto	l6997
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22410  0C1E  0020               	movlb	0	; select bank0
 22411  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22412  0C20  0086               	movwf	6
 22413  0C21  0187               	clrf	7
 22414  0C22  3003               	movlw	3
 22415  0C23  0781               	addwf	1,f
 22416  0C24  3141               	addfsr 1,1
 22417  0C25  1803               	skipnc
 22418  0C26  0A81               	incf	1,f
 22419                           
 22420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22421  0C27  085A               	movf	vfpfcnvrt@ap,w
 22422  0C28  0086               	movwf	6
 22423  0C29  0187               	clrf	7
 22424  0C2A  0801               	movf	1,w
 22425  0C2B  0084               	movwf	4
 22426  0C2C  0185               	clrf	5
 22427  0C2D  3002               	movlw	2
 22428  0C2E  0781               	addwf	1,f
 22429  0C2F  0800               	movf	0,w
 22430  0C30  0021               	movlb	1	; select bank1
 22431  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22432  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22433  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22434  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22435  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22436  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22437  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22438  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22439                           
 22440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22441  0C39  0020               	movlb	0	; select bank0
 22442  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22443  0C3B  00B1               	movwf	utoa@fp+1
 22444  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22445  0C3D  00B0               	movwf	utoa@fp
 22446  0C3E  0021               	movlb	1	; select bank1
 22447  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22448  0C40  0020               	movlb	0	; select bank0
 22449  0C41  00B2               	movwf	utoa@d
 22450  0C42  0021               	movlb	1	; select bank1
 22451  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22452  0C44  0020               	movlb	0	; select bank0
 22453  0C45  00B3               	movwf	utoa@d+1
 22454  0C46  0021               	movlb	1	; select bank1
 22455  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22456  0C48  0020               	movlb	0	; select bank0
 22457  0C49  00B4               	movwf	utoa@d+2
 22458  0C4A  0021               	movlb	1	; select bank1
 22459  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22460  0C4C  0020               	movlb	0	; select bank0
 22461  0C4D  00B5               	movwf	utoa@d+3
 22462  0C4E  0021               	movlb	1	; select bank1
 22463  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22464  0C50  0020               	movlb	0	; select bank0
 22465  0C51  00B6               	movwf	utoa@d+4
 22466  0C52  0021               	movlb	1	; select bank1
 22467  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22468  0C54  0020               	movlb	0	; select bank0
 22469  0C55  00B7               	movwf	utoa@d+5
 22470  0C56  0021               	movlb	1	; select bank1
 22471  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22472  0C58  0020               	movlb	0	; select bank0
 22473  0C59  00B8               	movwf	utoa@d+6
 22474  0C5A  0021               	movlb	1	; select bank1
 22475  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22476  0C5C  0020               	movlb	0	; select bank0
 22477  0C5D  00B9               	movwf	utoa@d+7
 22478  0C5E  31A3  2337         	fcall	_utoa
 22479  0C60  0020               	movlb	0	; select bank0
 22480  0C61  0831               	movf	?_utoa+1,w
 22481  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22482  0C63  0830               	movf	?_utoa,w
 22483  0C64  00D7               	movwf	?_vfpfcnvrt
 22484  0C65  0008               	return
 22485  0C66                     l6997:	
 22486                           
 22487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22488  0C66  0020               	movlb	0	; select bank0
 22489  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22490  0C68  0086               	movwf	6
 22491  0C69  0187               	clrf	7
 22492  0C6A  3F40               	moviw [0]fsr1
 22493  0C6B  00F1               	movwf	strncmp@_l
 22494  0C6C  3F41               	moviw [1]fsr1
 22495  0C6D  00F2               	movwf	strncmp@_l+1
 22496  0C6E  30AC               	movlw	low ((STR_80+1)| (0+32768))
 22497  0C6F  00F3               	movwf	strncmp@_r
 22498  0C70  30BA               	movlw	high ((STR_80+1)| (0+32768))
 22499  0C71  00F4               	movwf	strncmp@_r+1
 22500  0C72  3002               	movlw	2
 22501  0C73  00F5               	movwf	strncmp@n
 22502  0C74  3000               	movlw	0
 22503  0C75  00F6               	movwf	strncmp@n+1
 22504  0C76  31B6  269E  3188   	fcall	_strncmp
 22505  0C79  0871               	movf	?_strncmp,w
 22506  0C7A  0472               	iorwf	?_strncmp+1,w
 22507  0C7B  1D03               	btfss	3,2
 22508  0C7C  2CC6               	goto	l7007
 22509                           
 22510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22511  0C7D  0020               	movlb	0	; select bank0
 22512  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22513  0C7F  0086               	movwf	6
 22514  0C80  0187               	clrf	7
 22515  0C81  3002               	movlw	2
 22516  0C82  0781               	addwf	1,f
 22517  0C83  3141               	addfsr 1,1
 22518  0C84  1803               	skipnc
 22519  0C85  0A81               	incf	1,f
 22520                           
 22521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22522  0C86  085A               	movf	vfpfcnvrt@ap,w
 22523  0C87  0086               	movwf	6
 22524  0C88  0187               	clrf	7
 22525  0C89  0801               	movf	1,w
 22526  0C8A  0084               	movwf	4
 22527  0C8B  0185               	clrf	5
 22528  0C8C  3002               	movlw	2
 22529  0C8D  0781               	addwf	1,f
 22530  0C8E  3F00               	moviw [0]fsr0
 22531  0C8F  0021               	movlb	1	; select bank1
 22532  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22533  0C91  3F01               	moviw [1]fsr0
 22534  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22535  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22536  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22537  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22538  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22539  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22540  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22541                           
 22542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22543  0C99  0020               	movlb	0	; select bank0
 22544  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22545  0C9B  00B1               	movwf	utoa@fp+1
 22546  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22547  0C9D  00B0               	movwf	utoa@fp
 22548  0C9E  0021               	movlb	1	; select bank1
 22549  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22550  0CA0  0020               	movlb	0	; select bank0
 22551  0CA1  00B2               	movwf	utoa@d
 22552  0CA2  0021               	movlb	1	; select bank1
 22553  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22554  0CA4  0020               	movlb	0	; select bank0
 22555  0CA5  00B3               	movwf	utoa@d+1
 22556  0CA6  0021               	movlb	1	; select bank1
 22557  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22558  0CA8  0020               	movlb	0	; select bank0
 22559  0CA9  00B4               	movwf	utoa@d+2
 22560  0CAA  0021               	movlb	1	; select bank1
 22561  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22562  0CAC  0020               	movlb	0	; select bank0
 22563  0CAD  00B5               	movwf	utoa@d+3
 22564  0CAE  0021               	movlb	1	; select bank1
 22565  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22566  0CB0  0020               	movlb	0	; select bank0
 22567  0CB1  00B6               	movwf	utoa@d+4
 22568  0CB2  0021               	movlb	1	; select bank1
 22569  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22570  0CB4  0020               	movlb	0	; select bank0
 22571  0CB5  00B7               	movwf	utoa@d+5
 22572  0CB6  0021               	movlb	1	; select bank1
 22573  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22574  0CB8  0020               	movlb	0	; select bank0
 22575  0CB9  00B8               	movwf	utoa@d+6
 22576  0CBA  0021               	movlb	1	; select bank1
 22577  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22578  0CBC  0020               	movlb	0	; select bank0
 22579  0CBD  00B9               	movwf	utoa@d+7
 22580  0CBE  31A3  2337         	fcall	_utoa
 22581  0CC0  0020               	movlb	0	; select bank0
 22582  0CC1  0831               	movf	?_utoa+1,w
 22583  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22584  0CC3  0830               	movf	?_utoa,w
 22585  0CC4  00D7               	movwf	?_vfpfcnvrt
 22586  0CC5  0008               	return
 22587  0CC6                     l7007:	
 22588                           
 22589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22590  0CC6  0020               	movlb	0	; select bank0
 22591  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22592  0CC8  0086               	movwf	6
 22593  0CC9  0187               	clrf	7
 22594  0CCA  3F40               	moviw [0]fsr1
 22595  0CCB  00DB               	movwf	??_vfpfcnvrt
 22596  0CCC  3F41               	moviw [1]fsr1
 22597  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22598  0CCE  085B               	movf	??_vfpfcnvrt,w
 22599  0CCF  0084               	movwf	4
 22600  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22601  0CD1  0085               	movwf	5
 22602  0CD2  0012               	moviw fsr0++
 22603  0CD3  3A75               	xorlw	117
 22604  0CD4  1D03               	btfss	3,2
 22605  0CD5  2D1E               	goto	l7017
 22606                           
 22607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22608  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22609  0CD7  0086               	movwf	6
 22610  0CD8  0187               	clrf	7
 22611  0CD9  3001               	movlw	1
 22612  0CDA  0781               	addwf	1,f
 22613  0CDB  3141               	addfsr 1,1
 22614  0CDC  1803               	skipnc
 22615  0CDD  0A81               	incf	1,f
 22616                           
 22617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22618  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22619  0CDF  0086               	movwf	6
 22620  0CE0  0187               	clrf	7
 22621  0CE1  0801               	movf	1,w
 22622  0CE2  0084               	movwf	4
 22623  0CE3  0185               	clrf	5
 22624  0CE4  3002               	movlw	2
 22625  0CE5  0781               	addwf	1,f
 22626  0CE6  3F00               	moviw [0]fsr0
 22627  0CE7  0021               	movlb	1	; select bank1
 22628  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22629  0CE9  3F01               	moviw [1]fsr0
 22630  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22631  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22632  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22633  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22634  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22635  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22636  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22637                           
 22638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22639  0CF1  0020               	movlb	0	; select bank0
 22640  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22641  0CF3  00B1               	movwf	utoa@fp+1
 22642  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22643  0CF5  00B0               	movwf	utoa@fp
 22644  0CF6  0021               	movlb	1	; select bank1
 22645  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22646  0CF8  0020               	movlb	0	; select bank0
 22647  0CF9  00B2               	movwf	utoa@d
 22648  0CFA  0021               	movlb	1	; select bank1
 22649  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22650  0CFC  0020               	movlb	0	; select bank0
 22651  0CFD  00B3               	movwf	utoa@d+1
 22652  0CFE  0021               	movlb	1	; select bank1
 22653  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22654  0D00  0020               	movlb	0	; select bank0
 22655  0D01  00B4               	movwf	utoa@d+2
 22656  0D02  0021               	movlb	1	; select bank1
 22657  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22658  0D04  0020               	movlb	0	; select bank0
 22659  0D05  00B5               	movwf	utoa@d+3
 22660  0D06  0021               	movlb	1	; select bank1
 22661  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22662  0D08  0020               	movlb	0	; select bank0
 22663  0D09  00B6               	movwf	utoa@d+4
 22664  0D0A  0021               	movlb	1	; select bank1
 22665  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22666  0D0C  0020               	movlb	0	; select bank0
 22667  0D0D  00B7               	movwf	utoa@d+5
 22668  0D0E  0021               	movlb	1	; select bank1
 22669  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22670  0D10  0020               	movlb	0	; select bank0
 22671  0D11  00B8               	movwf	utoa@d+6
 22672  0D12  0021               	movlb	1	; select bank1
 22673  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22674  0D14  0020               	movlb	0	; select bank0
 22675  0D15  00B9               	movwf	utoa@d+7
 22676  0D16  31A3  2337         	fcall	_utoa
 22677  0D18  0020               	movlb	0	; select bank0
 22678  0D19  0831               	movf	?_utoa+1,w
 22679  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22680  0D1B  0830               	movf	?_utoa,w
 22681  0D1C  00D7               	movwf	?_vfpfcnvrt
 22682  0D1D  0008               	return
 22683  0D1E                     l7017:	
 22684                           
 22685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22686  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22687  0D1F  0086               	movwf	6
 22688  0D20  0187               	clrf	7
 22689  0D21  3F40               	moviw [0]fsr1
 22690  0D22  00F1               	movwf	strncmp@_l
 22691  0D23  3F41               	moviw [1]fsr1
 22692  0D24  00F2               	movwf	strncmp@_l+1
 22693  0D25  30C2               	movlw	low (STR_90| (0+32768))
 22694  0D26  00F3               	movwf	strncmp@_r
 22695  0D27  30BA               	movlw	high (STR_90| (0+32768))
 22696  0D28  00F4               	movwf	strncmp@_r+1
 22697  0D29  3002               	movlw	2
 22698  0D2A  00F5               	movwf	strncmp@n
 22699  0D2B  3000               	movlw	0
 22700  0D2C  00F6               	movwf	strncmp@n+1
 22701  0D2D  31B6  269E  3188   	fcall	_strncmp
 22702  0D30  0871               	movf	?_strncmp,w
 22703  0D31  0472               	iorwf	?_strncmp+1,w
 22704  0D32  1D03               	btfss	3,2
 22705  0D33  2D7D               	goto	l7027
 22706                           
 22707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22708  0D34  0020               	movlb	0	; select bank0
 22709  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22710  0D36  0086               	movwf	6
 22711  0D37  0187               	clrf	7
 22712  0D38  3002               	movlw	2
 22713  0D39  0781               	addwf	1,f
 22714  0D3A  3141               	addfsr 1,1
 22715  0D3B  1803               	skipnc
 22716  0D3C  0A81               	incf	1,f
 22717                           
 22718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22719  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22720  0D3E  0086               	movwf	6
 22721  0D3F  0187               	clrf	7
 22722  0D40  0801               	movf	1,w
 22723  0D41  0084               	movwf	4
 22724  0D42  0185               	clrf	5
 22725  0D43  3002               	movlw	2
 22726  0D44  0781               	addwf	1,f
 22727  0D45  3F00               	moviw [0]fsr0
 22728  0D46  0021               	movlb	1	; select bank1
 22729  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22730  0D48  3F01               	moviw [1]fsr0
 22731  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22732  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22733  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22734  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22735  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22736  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22737  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22738                           
 22739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22740  0D50  0020               	movlb	0	; select bank0
 22741  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22742  0D52  00B1               	movwf	utoa@fp+1
 22743  0D53  0857               	movf	vfpfcnvrt@fp,w
 22744  0D54  00B0               	movwf	utoa@fp
 22745  0D55  0021               	movlb	1	; select bank1
 22746  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22747  0D57  0020               	movlb	0	; select bank0
 22748  0D58  00B2               	movwf	utoa@d
 22749  0D59  0021               	movlb	1	; select bank1
 22750  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22751  0D5B  0020               	movlb	0	; select bank0
 22752  0D5C  00B3               	movwf	utoa@d+1
 22753  0D5D  0021               	movlb	1	; select bank1
 22754  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22755  0D5F  0020               	movlb	0	; select bank0
 22756  0D60  00B4               	movwf	utoa@d+2
 22757  0D61  0021               	movlb	1	; select bank1
 22758  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22759  0D63  0020               	movlb	0	; select bank0
 22760  0D64  00B5               	movwf	utoa@d+3
 22761  0D65  0021               	movlb	1	; select bank1
 22762  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22763  0D67  0020               	movlb	0	; select bank0
 22764  0D68  00B6               	movwf	utoa@d+4
 22765  0D69  0021               	movlb	1	; select bank1
 22766  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22767  0D6B  0020               	movlb	0	; select bank0
 22768  0D6C  00B7               	movwf	utoa@d+5
 22769  0D6D  0021               	movlb	1	; select bank1
 22770  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22771  0D6F  0020               	movlb	0	; select bank0
 22772  0D70  00B8               	movwf	utoa@d+6
 22773  0D71  0021               	movlb	1	; select bank1
 22774  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22775  0D73  0020               	movlb	0	; select bank0
 22776  0D74  00B9               	movwf	utoa@d+7
 22777  0D75  31A3  2337         	fcall	_utoa
 22778  0D77  0020               	movlb	0	; select bank0
 22779  0D78  0831               	movf	?_utoa+1,w
 22780  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22781  0D7A  0830               	movf	?_utoa,w
 22782  0D7B  00D7               	movwf	?_vfpfcnvrt
 22783  0D7C  0008               	return
 22784  0D7D                     l7027:	
 22785                           
 22786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22787  0D7D  0020               	movlb	0	; select bank0
 22788  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22789  0D7F  0086               	movwf	6
 22790  0D80  0187               	clrf	7
 22791  0D81  3F40               	moviw [0]fsr1
 22792  0D82  00F1               	movwf	strncmp@_l
 22793  0D83  3F41               	moviw [1]fsr1
 22794  0D84  00F2               	movwf	strncmp@_l+1
 22795  0D85  30AF               	movlw	low (STR_95| (0+32768))
 22796  0D86  00F3               	movwf	strncmp@_r
 22797  0D87  30BA               	movlw	high (STR_95| (0+32768))
 22798  0D88  00F4               	movwf	strncmp@_r+1
 22799  0D89  3003               	movlw	3
 22800  0D8A  00F5               	movwf	strncmp@n
 22801  0D8B  3000               	movlw	0
 22802  0D8C  00F6               	movwf	strncmp@n+1
 22803  0D8D  31B6  269E  3188   	fcall	_strncmp
 22804  0D90  0871               	movf	?_strncmp,w
 22805  0D91  0472               	iorwf	?_strncmp+1,w
 22806  0D92  1903               	btfsc	3,2
 22807  0D93  2DAB               	goto	l7031
 22808  0D94  0020               	movlb	0	; select bank0
 22809  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22810  0D96  0086               	movwf	6
 22811  0D97  0187               	clrf	7
 22812  0D98  3F40               	moviw [0]fsr1
 22813  0D99  00F1               	movwf	strncmp@_l
 22814  0D9A  3F41               	moviw [1]fsr1
 22815  0D9B  00F2               	movwf	strncmp@_l+1
 22816  0D9C  3097               	movlw	low (STR_99| (0+32768))
 22817  0D9D  00F3               	movwf	strncmp@_r
 22818  0D9E  30BA               	movlw	high (STR_99| (0+32768))
 22819  0D9F  00F4               	movwf	strncmp@_r+1
 22820  0DA0  3003               	movlw	3
 22821  0DA1  00F5               	movwf	strncmp@n
 22822  0DA2  3000               	movlw	0
 22823  0DA3  00F6               	movwf	strncmp@n+1
 22824  0DA4  31B6  269E  3188   	fcall	_strncmp
 22825  0DA7  0871               	movf	?_strncmp,w
 22826  0DA8  0472               	iorwf	?_strncmp+1,w
 22827  0DA9  1D03               	btfss	3,2
 22828  0DAA  2E0D               	goto	l7041
 22829  0DAB                     l7031:	
 22830                           
 22831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22832  0DAB  0020               	movlb	0	; select bank0
 22833  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22834  0DAD  0086               	movwf	6
 22835  0DAE  0187               	clrf	7
 22836  0DAF  3F40               	moviw [0]fsr1
 22837  0DB0  00DB               	movwf	??_vfpfcnvrt
 22838  0DB1  3F41               	moviw [1]fsr1
 22839  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22840  0DB3  3002               	movlw	2
 22841  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22842  0DB5  0084               	movwf	4
 22843  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22844  0DB7  1803               	skipnc
 22845  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22846  0DB9  0085               	movwf	5
 22847  0DBA  0800               	movf	0,w	;code access
 22848  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22849  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22850  0DBD  0021               	movlb	1	; select bank1
 22851  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22852                           
 22853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22854  0DBF  0020               	movlb	0	; select bank0
 22855  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22856  0DC1  0086               	movwf	6
 22857  0DC2  0187               	clrf	7
 22858  0DC3  3003               	movlw	3
 22859  0DC4  0781               	addwf	1,f
 22860  0DC5  3141               	addfsr 1,1
 22861  0DC6  1803               	skipnc
 22862  0DC7  0A81               	incf	1,f
 22863                           
 22864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22865  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22866  0DC9  0086               	movwf	6
 22867  0DCA  0187               	clrf	7
 22868  0DCB  0801               	movf	1,w
 22869  0DCC  0084               	movwf	4
 22870  0DCD  0185               	clrf	5
 22871  0DCE  3002               	movlw	2
 22872  0DCF  0781               	addwf	1,f
 22873  0DD0  0800               	movf	0,w
 22874  0DD1  0021               	movlb	1	; select bank1
 22875  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22876  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22877  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22878  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22879  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22880  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22881  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22882  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22883                           
 22884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22885  0DDA  0020               	movlb	0	; select bank0
 22886  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22887  0DDC  00B1               	movwf	xtoa@fp+1
 22888  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22889  0DDE  00B0               	movwf	xtoa@fp
 22890  0DDF  0021               	movlb	1	; select bank1
 22891  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22892  0DE1  0020               	movlb	0	; select bank0
 22893  0DE2  00B2               	movwf	xtoa@d
 22894  0DE3  0021               	movlb	1	; select bank1
 22895  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22896  0DE5  0020               	movlb	0	; select bank0
 22897  0DE6  00B3               	movwf	xtoa@d+1
 22898  0DE7  0021               	movlb	1	; select bank1
 22899  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22900  0DE9  0020               	movlb	0	; select bank0
 22901  0DEA  00B4               	movwf	xtoa@d+2
 22902  0DEB  0021               	movlb	1	; select bank1
 22903  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22904  0DED  0020               	movlb	0	; select bank0
 22905  0DEE  00B5               	movwf	xtoa@d+3
 22906  0DEF  0021               	movlb	1	; select bank1
 22907  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22908  0DF1  0020               	movlb	0	; select bank0
 22909  0DF2  00B6               	movwf	xtoa@d+4
 22910  0DF3  0021               	movlb	1	; select bank1
 22911  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22912  0DF5  0020               	movlb	0	; select bank0
 22913  0DF6  00B7               	movwf	xtoa@d+5
 22914  0DF7  0021               	movlb	1	; select bank1
 22915  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22916  0DF9  0020               	movlb	0	; select bank0
 22917  0DFA  00B8               	movwf	xtoa@d+6
 22918  0DFB  0021               	movlb	1	; select bank1
 22919  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22920  0DFD  0020               	movlb	0	; select bank0
 22921  0DFE  00B9               	movwf	xtoa@d+7
 22922  0DFF  0021               	movlb	1	; select bank1
 22923  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22924  0E01  0020               	movlb	0	; select bank0
 22925  0E02  00DB               	movwf	??_vfpfcnvrt
 22926  0E03  085B               	movf	??_vfpfcnvrt,w
 22927  0E04  00BA               	movwf	xtoa@x
 22928  0E05  319B  2389         	fcall	_xtoa
 22929  0E07  0020               	movlb	0	; select bank0
 22930  0E08  0831               	movf	?_xtoa+1,w
 22931  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22932  0E0A  0830               	movf	?_xtoa,w
 22933  0E0B  00D7               	movwf	?_vfpfcnvrt
 22934  0E0C  0008               	return
 22935  0E0D                     l7041:	
 22936                           
 22937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22938  0E0D  0020               	movlb	0	; select bank0
 22939  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22940  0E0F  0086               	movwf	6
 22941  0E10  0187               	clrf	7
 22942  0E11  3F40               	moviw [0]fsr1
 22943  0E12  00F1               	movwf	strncmp@_l
 22944  0E13  3F41               	moviw [1]fsr1
 22945  0E14  00F2               	movwf	strncmp@_l+1
 22946  0E15  30B0               	movlw	low ((STR_95+1)| (0+32768))
 22947  0E16  00F3               	movwf	strncmp@_r
 22948  0E17  30BA               	movlw	high ((STR_95+1)| (0+32768))
 22949  0E18  00F4               	movwf	strncmp@_r+1
 22950  0E19  3002               	movlw	2
 22951  0E1A  00F5               	movwf	strncmp@n
 22952  0E1B  3000               	movlw	0
 22953  0E1C  00F6               	movwf	strncmp@n+1
 22954  0E1D  31B6  269E  3188   	fcall	_strncmp
 22955  0E20  0871               	movf	?_strncmp,w
 22956  0E21  0472               	iorwf	?_strncmp+1,w
 22957  0E22  1903               	btfsc	3,2
 22958  0E23  2E3B               	goto	l7045
 22959  0E24  0020               	movlb	0	; select bank0
 22960  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22961  0E26  0086               	movwf	6
 22962  0E27  0187               	clrf	7
 22963  0E28  3F40               	moviw [0]fsr1
 22964  0E29  00F1               	movwf	strncmp@_l
 22965  0E2A  3F41               	moviw [1]fsr1
 22966  0E2B  00F2               	movwf	strncmp@_l+1
 22967  0E2C  3098               	movlw	low ((STR_99+1)| (0+32768))
 22968  0E2D  00F3               	movwf	strncmp@_r
 22969  0E2E  30BA               	movlw	high ((STR_99+1)| (0+32768))
 22970  0E2F  00F4               	movwf	strncmp@_r+1
 22971  0E30  3002               	movlw	2
 22972  0E31  00F5               	movwf	strncmp@n
 22973  0E32  3000               	movlw	0
 22974  0E33  00F6               	movwf	strncmp@n+1
 22975  0E34  31B6  269E  3188   	fcall	_strncmp
 22976  0E37  0871               	movf	?_strncmp,w
 22977  0E38  0472               	iorwf	?_strncmp+1,w
 22978  0E39  1D03               	btfss	3,2
 22979  0E3A  2E9E               	goto	l7055
 22980  0E3B                     l7045:	
 22981                           
 22982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22983  0E3B  0020               	movlb	0	; select bank0
 22984  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22985  0E3D  0086               	movwf	6
 22986  0E3E  0187               	clrf	7
 22987  0E3F  3F40               	moviw [0]fsr1
 22988  0E40  00DB               	movwf	??_vfpfcnvrt
 22989  0E41  3F41               	moviw [1]fsr1
 22990  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22991  0E43  3001               	movlw	1
 22992  0E44  075B               	addwf	??_vfpfcnvrt,w
 22993  0E45  0084               	movwf	4
 22994  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22995  0E47  1803               	skipnc
 22996  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22997  0E49  0085               	movwf	5
 22998  0E4A  0800               	movf	0,w	;code access
 22999  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23000  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23001  0E4D  0021               	movlb	1	; select bank1
 23002  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23003                           
 23004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23005  0E4F  0020               	movlb	0	; select bank0
 23006  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23007  0E51  0086               	movwf	6
 23008  0E52  0187               	clrf	7
 23009  0E53  3002               	movlw	2
 23010  0E54  0781               	addwf	1,f
 23011  0E55  3141               	addfsr 1,1
 23012  0E56  1803               	skipnc
 23013  0E57  0A81               	incf	1,f
 23014                           
 23015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23016  0E58  085A               	movf	vfpfcnvrt@ap,w
 23017  0E59  0086               	movwf	6
 23018  0E5A  0187               	clrf	7
 23019  0E5B  0801               	movf	1,w
 23020  0E5C  0084               	movwf	4
 23021  0E5D  0185               	clrf	5
 23022  0E5E  3002               	movlw	2
 23023  0E5F  0781               	addwf	1,f
 23024  0E60  3F00               	moviw [0]fsr0
 23025  0E61  0021               	movlb	1	; select bank1
 23026  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23027  0E63  3F01               	moviw [1]fsr0
 23028  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23029  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23030  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23031  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23032  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23033  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23034  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23035                           
 23036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23037  0E6B  0020               	movlb	0	; select bank0
 23038  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23039  0E6D  00B1               	movwf	xtoa@fp+1
 23040  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23041  0E6F  00B0               	movwf	xtoa@fp
 23042  0E70  0021               	movlb	1	; select bank1
 23043  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23044  0E72  0020               	movlb	0	; select bank0
 23045  0E73  00B2               	movwf	xtoa@d
 23046  0E74  0021               	movlb	1	; select bank1
 23047  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23048  0E76  0020               	movlb	0	; select bank0
 23049  0E77  00B3               	movwf	xtoa@d+1
 23050  0E78  0021               	movlb	1	; select bank1
 23051  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23052  0E7A  0020               	movlb	0	; select bank0
 23053  0E7B  00B4               	movwf	xtoa@d+2
 23054  0E7C  0021               	movlb	1	; select bank1
 23055  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23056  0E7E  0020               	movlb	0	; select bank0
 23057  0E7F  00B5               	movwf	xtoa@d+3
 23058  0E80  0021               	movlb	1	; select bank1
 23059  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23060  0E82  0020               	movlb	0	; select bank0
 23061  0E83  00B6               	movwf	xtoa@d+4
 23062  0E84  0021               	movlb	1	; select bank1
 23063  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23064  0E86  0020               	movlb	0	; select bank0
 23065  0E87  00B7               	movwf	xtoa@d+5
 23066  0E88  0021               	movlb	1	; select bank1
 23067  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23068  0E8A  0020               	movlb	0	; select bank0
 23069  0E8B  00B8               	movwf	xtoa@d+6
 23070  0E8C  0021               	movlb	1	; select bank1
 23071  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23072  0E8E  0020               	movlb	0	; select bank0
 23073  0E8F  00B9               	movwf	xtoa@d+7
 23074  0E90  0021               	movlb	1	; select bank1
 23075  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23076  0E92  0020               	movlb	0	; select bank0
 23077  0E93  00DB               	movwf	??_vfpfcnvrt
 23078  0E94  085B               	movf	??_vfpfcnvrt,w
 23079  0E95  00BA               	movwf	xtoa@x
 23080  0E96  319B  2389         	fcall	_xtoa
 23081  0E98  0020               	movlb	0	; select bank0
 23082  0E99  0831               	movf	?_xtoa+1,w
 23083  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23084  0E9B  0830               	movf	?_xtoa,w
 23085  0E9C  00D7               	movwf	?_vfpfcnvrt
 23086  0E9D  0008               	return
 23087  0E9E                     l7055:	
 23088                           
 23089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23090  0E9E  0020               	movlb	0	; select bank0
 23091  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23092  0EA0  0086               	movwf	6
 23093  0EA1  0187               	clrf	7
 23094  0EA2  3F40               	moviw [0]fsr1
 23095  0EA3  00DB               	movwf	??_vfpfcnvrt
 23096  0EA4  3F41               	moviw [1]fsr1
 23097  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23098  0EA6  085B               	movf	??_vfpfcnvrt,w
 23099  0EA7  0084               	movwf	4
 23100  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23101  0EA9  0085               	movwf	5
 23102  0EAA  0012               	moviw fsr0++
 23103  0EAB  3A78               	xorlw	120
 23104  0EAC  1903               	btfsc	3,2
 23105  0EAD  2EBD               	goto	l7059
 23106  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23107  0EAF  0086               	movwf	6
 23108  0EB0  0187               	clrf	7
 23109  0EB1  3F40               	moviw [0]fsr1
 23110  0EB2  00DB               	movwf	??_vfpfcnvrt
 23111  0EB3  3F41               	moviw [1]fsr1
 23112  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23113  0EB5  085B               	movf	??_vfpfcnvrt,w
 23114  0EB6  0084               	movwf	4
 23115  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23116  0EB8  0085               	movwf	5
 23117  0EB9  0012               	moviw fsr0++
 23118  0EBA  3A58               	xorlw	88
 23119  0EBB  1D03               	btfss	3,2
 23120  0EBC  2F1C               	goto	l7069
 23121  0EBD                     l7059:	
 23122                           
 23123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23124  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23125  0EBE  0086               	movwf	6
 23126  0EBF  0187               	clrf	7
 23127  0EC0  3F40               	moviw [0]fsr1
 23128  0EC1  00DB               	movwf	??_vfpfcnvrt
 23129  0EC2  3F41               	moviw [1]fsr1
 23130  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23131  0EC4  085B               	movf	??_vfpfcnvrt,w
 23132  0EC5  0084               	movwf	4
 23133  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23134  0EC7  0085               	movwf	5
 23135  0EC8  0800               	movf	0,w	;code access
 23136  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23137  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23138  0ECB  0021               	movlb	1	; select bank1
 23139  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23140                           
 23141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23142  0ECD  0020               	movlb	0	; select bank0
 23143  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23144  0ECF  0086               	movwf	6
 23145  0ED0  0187               	clrf	7
 23146  0ED1  3001               	movlw	1
 23147  0ED2  0781               	addwf	1,f
 23148  0ED3  3141               	addfsr 1,1
 23149  0ED4  1803               	skipnc
 23150  0ED5  0A81               	incf	1,f
 23151                           
 23152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23153  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23154  0ED7  0086               	movwf	6
 23155  0ED8  0187               	clrf	7
 23156  0ED9  0801               	movf	1,w
 23157  0EDA  0084               	movwf	4
 23158  0EDB  0185               	clrf	5
 23159  0EDC  3002               	movlw	2
 23160  0EDD  0781               	addwf	1,f
 23161  0EDE  3F00               	moviw [0]fsr0
 23162  0EDF  0021               	movlb	1	; select bank1
 23163  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23164  0EE1  3F01               	moviw [1]fsr0
 23165  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23166  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23167  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23168  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23169  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23170  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23171  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23172                           
 23173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23174  0EE9  0020               	movlb	0	; select bank0
 23175  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23176  0EEB  00B1               	movwf	xtoa@fp+1
 23177  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23178  0EED  00B0               	movwf	xtoa@fp
 23179  0EEE  0021               	movlb	1	; select bank1
 23180  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23181  0EF0  0020               	movlb	0	; select bank0
 23182  0EF1  00B2               	movwf	xtoa@d
 23183  0EF2  0021               	movlb	1	; select bank1
 23184  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23185  0EF4  0020               	movlb	0	; select bank0
 23186  0EF5  00B3               	movwf	xtoa@d+1
 23187  0EF6  0021               	movlb	1	; select bank1
 23188  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23189  0EF8  0020               	movlb	0	; select bank0
 23190  0EF9  00B4               	movwf	xtoa@d+2
 23191  0EFA  0021               	movlb	1	; select bank1
 23192  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23193  0EFC  0020               	movlb	0	; select bank0
 23194  0EFD  00B5               	movwf	xtoa@d+3
 23195  0EFE  0021               	movlb	1	; select bank1
 23196  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23197  0F00  0020               	movlb	0	; select bank0
 23198  0F01  00B6               	movwf	xtoa@d+4
 23199  0F02  0021               	movlb	1	; select bank1
 23200  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23201  0F04  0020               	movlb	0	; select bank0
 23202  0F05  00B7               	movwf	xtoa@d+5
 23203  0F06  0021               	movlb	1	; select bank1
 23204  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23205  0F08  0020               	movlb	0	; select bank0
 23206  0F09  00B8               	movwf	xtoa@d+6
 23207  0F0A  0021               	movlb	1	; select bank1
 23208  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23209  0F0C  0020               	movlb	0	; select bank0
 23210  0F0D  00B9               	movwf	xtoa@d+7
 23211  0F0E  0021               	movlb	1	; select bank1
 23212  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23213  0F10  0020               	movlb	0	; select bank0
 23214  0F11  00DB               	movwf	??_vfpfcnvrt
 23215  0F12  085B               	movf	??_vfpfcnvrt,w
 23216  0F13  00BA               	movwf	xtoa@x
 23217  0F14  319B  2389         	fcall	_xtoa
 23218  0F16  0020               	movlb	0	; select bank0
 23219  0F17  0831               	movf	?_xtoa+1,w
 23220  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23221  0F19  0830               	movf	?_xtoa,w
 23222  0F1A  00D7               	movwf	?_vfpfcnvrt
 23223  0F1B  0008               	return
 23224  0F1C                     l7069:	
 23225                           
 23226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23227  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23228  0F1D  0086               	movwf	6
 23229  0F1E  0187               	clrf	7
 23230  0F1F  3F40               	moviw [0]fsr1
 23231  0F20  00F1               	movwf	strncmp@_l
 23232  0F21  3F41               	moviw [1]fsr1
 23233  0F22  00F2               	movwf	strncmp@_l+1
 23234  0F23  30C5               	movlw	low (STR_113| (0+32768))
 23235  0F24  00F3               	movwf	strncmp@_r
 23236  0F25  30BA               	movlw	high (STR_113| (0+32768))
 23237  0F26  00F4               	movwf	strncmp@_r+1
 23238  0F27  3002               	movlw	2
 23239  0F28  00F5               	movwf	strncmp@n
 23240  0F29  3000               	movlw	0
 23241  0F2A  00F6               	movwf	strncmp@n+1
 23242  0F2B  31B6  269E  3188   	fcall	_strncmp
 23243  0F2E  0871               	movf	?_strncmp,w
 23244  0F2F  0472               	iorwf	?_strncmp+1,w
 23245  0F30  1903               	btfsc	3,2
 23246  0F31  2F49               	goto	l7073
 23247  0F32  0020               	movlb	0	; select bank0
 23248  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23249  0F34  0086               	movwf	6
 23250  0F35  0187               	clrf	7
 23251  0F36  3F40               	moviw [0]fsr1
 23252  0F37  00F1               	movwf	strncmp@_l
 23253  0F38  3F41               	moviw [1]fsr1
 23254  0F39  00F2               	movwf	strncmp@_l+1
 23255  0F3A  30B3               	movlw	low (STR_117| (0+32768))
 23256  0F3B  00F3               	movwf	strncmp@_r
 23257  0F3C  30BA               	movlw	high (STR_117| (0+32768))
 23258  0F3D  00F4               	movwf	strncmp@_r+1
 23259  0F3E  3002               	movlw	2
 23260  0F3F  00F5               	movwf	strncmp@n
 23261  0F40  3000               	movlw	0
 23262  0F41  00F6               	movwf	strncmp@n+1
 23263  0F42  31B6  269E  3188   	fcall	_strncmp
 23264  0F45  0871               	movf	?_strncmp,w
 23265  0F46  0472               	iorwf	?_strncmp+1,w
 23266  0F47  1D03               	btfss	3,2
 23267  0F48  2FAC               	goto	l7083
 23268  0F49                     l7073:	
 23269                           
 23270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23271  0F49  0020               	movlb	0	; select bank0
 23272  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23273  0F4B  0086               	movwf	6
 23274  0F4C  0187               	clrf	7
 23275  0F4D  3F40               	moviw [0]fsr1
 23276  0F4E  00DB               	movwf	??_vfpfcnvrt
 23277  0F4F  3F41               	moviw [1]fsr1
 23278  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23279  0F51  3001               	movlw	1
 23280  0F52  075B               	addwf	??_vfpfcnvrt,w
 23281  0F53  0084               	movwf	4
 23282  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23283  0F55  1803               	skipnc
 23284  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23285  0F57  0085               	movwf	5
 23286  0F58  0800               	movf	0,w	;code access
 23287  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23288  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23289  0F5B  0021               	movlb	1	; select bank1
 23290  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23291                           
 23292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23293  0F5D  0020               	movlb	0	; select bank0
 23294  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23295  0F5F  0086               	movwf	6
 23296  0F60  0187               	clrf	7
 23297  0F61  3002               	movlw	2
 23298  0F62  0781               	addwf	1,f
 23299  0F63  3141               	addfsr 1,1
 23300  0F64  1803               	skipnc
 23301  0F65  0A81               	incf	1,f
 23302                           
 23303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23304  0F66  085A               	movf	vfpfcnvrt@ap,w
 23305  0F67  0086               	movwf	6
 23306  0F68  0187               	clrf	7
 23307  0F69  0801               	movf	1,w
 23308  0F6A  0084               	movwf	4
 23309  0F6B  0185               	clrf	5
 23310  0F6C  3002               	movlw	2
 23311  0F6D  0781               	addwf	1,f
 23312  0F6E  3F00               	moviw [0]fsr0
 23313  0F6F  0021               	movlb	1	; select bank1
 23314  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23315  0F71  3F01               	moviw [1]fsr0
 23316  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23317  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23318  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23319  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23320  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23321  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23322  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23323                           
 23324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23325  0F79  0020               	movlb	0	; select bank0
 23326  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23327  0F7B  00B1               	movwf	xtoa@fp+1
 23328  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23329  0F7D  00B0               	movwf	xtoa@fp
 23330  0F7E  0021               	movlb	1	; select bank1
 23331  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23332  0F80  0020               	movlb	0	; select bank0
 23333  0F81  00B2               	movwf	xtoa@d
 23334  0F82  0021               	movlb	1	; select bank1
 23335  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23336  0F84  0020               	movlb	0	; select bank0
 23337  0F85  00B3               	movwf	xtoa@d+1
 23338  0F86  0021               	movlb	1	; select bank1
 23339  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23340  0F88  0020               	movlb	0	; select bank0
 23341  0F89  00B4               	movwf	xtoa@d+2
 23342  0F8A  0021               	movlb	1	; select bank1
 23343  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23344  0F8C  0020               	movlb	0	; select bank0
 23345  0F8D  00B5               	movwf	xtoa@d+3
 23346  0F8E  0021               	movlb	1	; select bank1
 23347  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23348  0F90  0020               	movlb	0	; select bank0
 23349  0F91  00B6               	movwf	xtoa@d+4
 23350  0F92  0021               	movlb	1	; select bank1
 23351  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23352  0F94  0020               	movlb	0	; select bank0
 23353  0F95  00B7               	movwf	xtoa@d+5
 23354  0F96  0021               	movlb	1	; select bank1
 23355  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23356  0F98  0020               	movlb	0	; select bank0
 23357  0F99  00B8               	movwf	xtoa@d+6
 23358  0F9A  0021               	movlb	1	; select bank1
 23359  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23360  0F9C  0020               	movlb	0	; select bank0
 23361  0F9D  00B9               	movwf	xtoa@d+7
 23362  0F9E  0021               	movlb	1	; select bank1
 23363  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23364  0FA0  0020               	movlb	0	; select bank0
 23365  0FA1  00DB               	movwf	??_vfpfcnvrt
 23366  0FA2  085B               	movf	??_vfpfcnvrt,w
 23367  0FA3  00BA               	movwf	xtoa@x
 23368  0FA4  319B  2389         	fcall	_xtoa
 23369  0FA6  0020               	movlb	0	; select bank0
 23370  0FA7  0831               	movf	?_xtoa+1,w
 23371  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23372  0FA9  0830               	movf	?_xtoa,w
 23373  0FAA  00D7               	movwf	?_vfpfcnvrt
 23374  0FAB  0008               	return
 23375  0FAC                     l7083:	
 23376                           
 23377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23378  0FAC  0020               	movlb	0	; select bank0
 23379  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23380  0FAE  0086               	movwf	6
 23381  0FAF  0187               	clrf	7
 23382  0FB0  3F40               	moviw [0]fsr1
 23383  0FB1  00DB               	movwf	??_vfpfcnvrt
 23384  0FB2  3F41               	moviw [1]fsr1
 23385  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23386  0FB4  085B               	movf	??_vfpfcnvrt,w
 23387  0FB5  0084               	movwf	4
 23388  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23389  0FB7  0085               	movwf	5
 23390  0FB8  0012               	moviw fsr0++
 23391  0FB9  3A25               	xorlw	37
 23392  0FBA  1D03               	btfss	3,2
 23393  0FBB  2FD4               	goto	l7093
 23394                           
 23395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23396  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23397  0FBD  0086               	movwf	6
 23398  0FBE  0187               	clrf	7
 23399  0FBF  3001               	movlw	1
 23400  0FC0  0781               	addwf	1,f
 23401  0FC1  3141               	addfsr 1,1
 23402  0FC2  1803               	skipnc
 23403  0FC3  0A81               	incf	1,f
 23404                           
 23405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23406  0FC4  3025               	movlw	37
 23407  0FC5  00F1               	movwf	fputc@c
 23408  0FC6  3000               	movlw	0
 23409  0FC7  00F2               	movwf	fputc@c+1
 23410  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23411  0FC9  00F4               	movwf	fputc@fp+1
 23412  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23413  0FCB  00F3               	movwf	fputc@fp
 23414  0FCC  31B6  26F0         	fcall	_fputc
 23415  0FCE                     l7089:	
 23416                           
 23417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23418  0FCE  3001               	movlw	1
 23419  0FCF  0020               	movlb	0	; select bank0
 23420  0FD0  00D7               	movwf	?_vfpfcnvrt
 23421  0FD1  3000               	movlw	0
 23422  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23423  0FD3  0008               	return
 23424  0FD4                     l7093:	
 23425                           
 23426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23427  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23428  0FD5  0086               	movwf	6
 23429  0FD6  0187               	clrf	7
 23430  0FD7  3001               	movlw	1
 23431  0FD8  0781               	addwf	1,f
 23432  0FD9  3141               	addfsr 1,1
 23433  0FDA  1803               	skipnc
 23434  0FDB  0A81               	incf	1,f
 23435  0FDC  2B32               	goto	l6927
 23436  0FDD                     l7099:	
 23437                           
 23438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23439  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23440  0FDE  0086               	movwf	6
 23441  0FDF  0187               	clrf	7
 23442  0FE0  3F40               	moviw [0]fsr1
 23443  0FE1  00DB               	movwf	??_vfpfcnvrt
 23444  0FE2  3F41               	moviw [1]fsr1
 23445  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23446  0FE4  085B               	movf	??_vfpfcnvrt,w
 23447  0FE5  0084               	movwf	4
 23448  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23449  0FE7  0085               	movwf	5
 23450  0FE8  0800               	movf	0,w	;code access
 23451  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23452  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23453  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23454  0FEC  00F1               	movwf	fputc@c
 23455  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23456  0FEE  00F2               	movwf	fputc@c+1
 23457  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23458  0FF0  00F4               	movwf	fputc@fp+1
 23459  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23460  0FF2  00F3               	movwf	fputc@fp
 23461  0FF3  31B6  26F0  3188   	fcall	_fputc
 23462                           
 23463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23464  0FF6  0020               	movlb	0	; select bank0
 23465  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23466  0FF8  0086               	movwf	6
 23467  0FF9  0187               	clrf	7
 23468  0FFA  3001               	movlw	1
 23469  0FFB  0781               	addwf	1,f
 23470  0FFC  3141               	addfsr 1,1
 23471  0FFD  1803               	skipnc
 23472  0FFE  0A81               	incf	1,f
 23473  0FFF  2FCE               	goto	l7089
 23474  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     417
    Constant    298
    Data        11
    BSS         115
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     70      80
    BANK3            80      0      76
    BANK4            80      0      39
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[4]), 
		 -> STR_25(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_119(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), STR_106(CODE[3]), 
		 -> STR_101(CODE[4]), STR_97(CODE[4]), STR_92(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[4]), 
		 -> STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), STR_47(CODE[3]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[4]), 
		 -> STR_25(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1778_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[19]), STR_18(CODE[20]), 
		 -> STR_17(CODE[20]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_22(CODE[3]), STR_9(CODE[3]), STR_8(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  363145
                                             68 BANK2      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  360365
                                             79 BANK1      1     1      0
                                             66 BANK2      2     2      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   56870
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            20     4     16   55086
                                             76 BANK0      4     4      0
                                             44 BANK1     16     0     16
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1784
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   69847
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16370
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16367
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12602
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  163338
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   28545
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   52616
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   25668
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   12652
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   12652
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    7690
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     46      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      27      13       48.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     170      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     170      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 15 20:06:17 2020

          __end_of_setShortCircuitProtection 1A36                               _maxCellVoltage 01D8  
                      __end_of_send_I2C_data 3257                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 326B                          __Umul8_16@word_mpld 0077  
                                        l300 325D                                          l306 3239  
                                        l330 1805                                          l253 0801  
                                        l318 3241                                          l174 28F1  
                    enableDischarging@enable 0020                                          l352 33D2  
                                        l354 33D7                                          l355 33DC  
                                        l356 33F1                                          l294 2805  
                                        l471 2CD6                                          l288 3253  
                                        l801 2DE2                                          l810 2E3D  
                                        l741 3683                                          l822 2359  
                                        l753 1A7B                                          l833 1B90  
                                        l738 3663                                          l762 1B47  
                                        l754 1A82                                          l818 233E  
                                        l837 1BAB                                          l758 1A9D  
                                        l790 24DA                                          l870 1E90  
                                        l759 1AB1                                          l783 243A  
                                        l871 1E93                                          l784 24CF  
                                        l872 1E96                                          l946 3331  
                                        l858 1CAE                                          l874 1EC9  
                                        l779 241F                                          l867 1E81  
                                        l869 1E8D                                          _Lg1 3A8B  
                                        _Lg2 3A87                                          _Lg3 3A83  
                                        _Lg4 3A7F                          __size_of_AFE_UPDATE 0030  
                        ??_calibrate_BATTSOC 00B1                                          _abs 32CA  
                             RGB_color@color 0071                                          _pad 364D  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 287A                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1011 2A78  
                                       ?_abs 0074                                         l1124 290D  
                                       l1046 25EA                                         l1303 1D2B  
                                       l1127 295B                                         l1147 37E4  
                                       l1251 06DE                                         l1059 2325  
                                       l1324 1E32                                         l1325 1E4A  
                                       l1253 06C1                                         l1421 206B  
                                       l1327 1E57                                         l1247 064B  
                                       l1281 07C0                                         l1355 1242  
                                       l1179 29D9                                         l1268 0761  
                                       l1381 2B07                                         l1189 2869  
                                       l1289 07D8                                         l1394 2B51  
                                       l1395 2B5B                                         l1387 2B3D  
                                       l1548 07F0                                         l5005 0640  
                                       l4061 3723                                         l4213 22F8  
                                       l5015 0655                                         l4055 36F8  
                                       l4207 22B9                                         l4215 2304  
                                       l4231 2994                                         l5121 0787  
                                       l5009 0643                                         l4057 36FC  
                                       l4073 3418                                         l4081 32C3  
                                       l4161 255A                                         l4209 22C8  
                                       l6011 2F0A                                         l5115 0780  
                                       l5107 0773                                         l5123 0789  
                                       l4139 332B                                         l4163 255E  
                                       l4411 2E04                                         l4251 282D  
                                       l6013 2F1A                                         l6005 2E6B  
                                       l5133 0794                                         l5053 06C9  
                                       l5045 0691                                         l6021 20A6  
                                       l4173 2575                                         l4157 2533  
                                       l4421 2E14                                         l4413 2E11  
                                       l4229 2985                                         l5311 1DC1  
                                       l5231 1CFF                                         l5151 07D0  
                                       l5071 06EC                                         l5055 06CB  
                                       l5063 06D9                                         l6103 3404  
                                       l4079 32B7                                         l4183 25BD  
                                       l4175 2584                                         l4431 2E5F  
                                       l4407 2DF3                                         l4239 29CD  
                                       l4255 285D                                         l5313 1DD8  
                                       l5233 1D07                                         l5129 0792  
                                       l5081 0700                                         l4265 338E  
                                       l4185 25C9                                         l4425 2E41  
                                       l4249 281E                                         l5323 1DF1  
                                       l5251 1D23                                         l5227 1CFC  
                                       l5155 07D4                                         l4195 2285  
                                       l5333 1E1A                                         l5261 1D4A  
                                       l5165 07EA                                         l4429 2E52  
                                       ?_pad 0026                                         l5319 1DEF  
                                       l5247 1D20                                         l5511 2B2A  
                                       l5079 06FE                                         l4199 22AC  
                                       l7031 0DAB                                         l7007 0CC6  
                                       l5521 2B42                                         l5505 2B16  
                                       l5089 070F                                         l4393 2DBB  
                                       l7041 0E0D                                         l7017 0D1E  
                                       l7203 2A99                                         l5347 1E53  
                                       l5267 1D56                                         l5451 11C1  
                                       l5371 1047                                         l5099 0759  
                                       l7027 0D7D                                         l7221 2AE0  
                                       l7213 2AC7                                         l7205 2AA7  
                                       l5293 1DB6                                         l5461 11DA  
                                       l5533 2B76                                         l5509 2B1A  
                                       l7045 0E3B                                         l5287 1D9D  
                                       l5295 1D7F                                         l5471 1203  
                                       l5367 103D                                         l5519 2B4F  
                                       l7311 1818                                         l6511 1A95  
                                       l4591 36D8                                         l7055 0E9E  
                                       l7231 29FD                                         l7217 2AD2  
                                       l5297 1DBB                                         l5481 122F  
                                       l5457 11D8                                         l5449 11AA  
                                       l5385 1060                                         l5369 103F  
                                       l5609 01E4                                         l6521 1ADE  
                                       l4593 36B3                                         l7073 0F49  
                                       l7137 34A3                                         l5475 1218  
                                       l5387 1062                                         l5715 2927  
                                       l6531 1AB9                                         l7083 0FAC  
                                       l7059 0EBD                                         l7139 34C3  
                                       l7251 2A5B                                         l5397 1078  
                                       l5389 106A                                         l7173 34D5  
                                       l7333 18FE                                         l7317 18C4  
                                       l6461 3661                                         l6517 1AAC  
                                       l6613 239C                                         l7093 0FD4  
                                       l7069 0F1C                                         l7253 2A62  
                                       l7237 2A11                                         l5743 37AD  
                                       l5583 0124                                         l5575 00A5  
                                       l5719 2941                                         l6471 368F  
                                       l6543 1B5B                                         l4599 36DF  
                                       l6623 23FD                                         l6607 2351  
                                       l7239 2A19                                         l5761 37E0  
                                       l7433 2D7B                                         l5577 00C1  
                                       l7177 34E0                                         l5809 33E1  
                                       l7329 18D6                                         l7273 192D  
                                       l6721 2038                                         l6713 2023  
                                       l6705 2007                                         l6457 3659  
                                       l6553 1B73                                         l6625 2378  
                                       l6633 2402                                         l7089 0FCE  
                                       l7249 2A57                                         l7195 2A89  
                                       l5739 37A4                                         l5499 2AFF  
                                       l7435 2D8A                                         l7363 223B  
                                       l7291 19EB                                         l5827 3311  
                                       l6723 204C                                         l6467 3665  
                                       l6491 3480                                         l6539 1B53  
                                       l6571 2481                                         l6563 2432  
                                       l6643 1BA3                                         l6811 1F82  
                                       l7099 0FDD                                         l4981 0618  
                                       l7437 2D92                                         l5589 0181  
                                       l5597 01CA                                         l7533 344D  
                                       l6549 1B66                                         l6581 245C  
                                       l6653 1BD3                                         l6813 1F92  
                                       l6821 1FC5                                         l7613 28AE  
                                       l5759 37D2                                         l7535 3451  
                                       l7359 2213                                         l7295 1A15  
                                       l7279 19D9                                         l6727 206F  
                                       l6719 2033                                         l6831 25FC  
                                       l6815 1F9B                                         l7623 28D9  
                                       l5769 37F1                                         l4985 061B  
                                       l7537 3454                                         l7385 2FB8  
                                       l6737 209E                                         l6489 3477  
                                       l6673 1C3B                                         l6657 1BED  
                                       l6681 1C7D                                         l6649 1BBB  
                                       l7617 28C2                                         l7609 289E  
                                       l7571 2C15                                         l4987 0623  
                                       l7491 35BF                                         l7483 35F6  
                                       l7811 2044                                         l6931 0B36  
                                       l6843 2674                                         l6835 2629  
                                       l7813 33E6                                         l7389 2FE0  
                                       l6597 24F3                                         l6933 0AD4  
                                       l6909 0A40                                         l6757 1E83  
                                       l6773 1E9E                                         l6927 0B32  
                                       l6919 0A9F                                         l6871 08E0  
                                       l6855 0843                                         l6847 26A2  
                                       l6791 1F0E                                         l6767 1E99  
                                       l7807 28E3                                         l7591 287B  
                                       l7647 351F                                         l6697 1CCC  
                                       l6945 0AF4                                         l6793 1F17  
                                       l6777 1ED0                                         l7809 1EB7  
                                       l7499 2C2D                                         l6867 08B3  
                                       l6859 0862                                         l6957 0B13  
                                       l6789 1EFE                                         l5999 2E68  
                                       l6879 0929                                         l6799 1F41  
                                       l6977 0BCF                                         l6889 0988  
                                       l6987 0C08                                         l6899 09E8  
                                       l6997 0C66                                         STR_1 38BA  
                               __CFG_WDTE$ON 0000                                         STR_2 39E4  
                                       STR_3 39E4                                         STR_4 39E4  
                                       STR_5 3AC8                                         STR_6 39D3  
                                       STR_7 3928                                         STR_8 38E2  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u4130 32AB                                         u4140 32AC  
                                       u4060 32F0                                         u4230 2565  
                                       u4070 32F1                                         u4055 32D3  
                                       u4400 2975                                         u4080 33AB  
                                       u4090 33AC                                         u4165 3332  
                                       u4175 3337                                         u4265 25AA  
                                       u4435 29BA                                         u6125 07F1  
                                       u6045 07AB                                         u7005 01FC  
                                       u4365 22E6                   enableDischarging@sys_ctrl2 007B  
                                       u6305 1D87                                         u6315 1D8E  
                                       u4475 284B                                         u8005 1ACD  
                                       u6335 1D97                                         u8015 1AD9  
                                       u4815 2DDB                                         u6345 1DAB  
                                       u7225 37B6                                         _SCS0 04C8  
                                       u8115 2470                                         u4835 2E0F  
                                       _SCS1 04C9                                         u4780 2DAA  
                                       u8300 1C24                                         u6605 1173  
                                       u9005 34E1                                         u3965 3721  
                                       u8125 247C                                         u4845 2E1E  
                                       u8205 238B                                         u8310 1C25  
                                       u6375 1DC4                                         u6615 118A  
                                       u7255 37D3                                         u5903 0721  
                                       u9015 34E8                                         u8215 2397  
                                       u7600 33FA                                         u9105 2AC8  
                                       u6465 1E08                                         u6625 1199  
                                       u5825 06CF                                         u4865 2E5D  
                                       u7610 33FB                                         u6475 1E23  
                                       u6395 1DCD                                         u6635 11AD  
                                       u7515 2E8D                                         u8075 242A  
                                       u5780 06B0                                         u7620 3409  
                                       u6485 1E3C                                         u6725 11F1  
                                       u7285 37E8                                         u7525 2F18  
                                       u9205 1A04                                         u8085 24B3  
                                       u8245 1B9B                                         u5790 06B1  
                                       u7630 340A                                         u8430 2083  
                                       u8270 1C04                                         u6735 120C  
                                       u6655 11B6                                         u6815 2B37  
                                       u7535 2F28                                         u5775 06A5  
                                       u8095 24D8                                         u8175 2349  
                                       u8335 1C61                                         u8440 2084  
                                       u7800 3307                                         u8280 1C05  
                                       u8520 1F33                                         u9065 2A9C  
                                       u6745 1222                                         u6585 10EE  
                                       u5945 0774                                         u7545 217C  
                                       u9305 2FD0                                         u8345 1C87  
                                       u8265 1BE7                                         u7810 3308  
                                       u8530 1F34                                         u6595 111D  
                                       u6835 2B49                                         u7900 1A51  
                                       u9085 2AA8                                         u9405 2B89  
                                       u6925 00B5                                         u9245 18EF  
                                       u8365 1C9D                                         u7910 1A52  
                                       u9095 2ABC                                         u9415 2BA0  
                                       u5895 0704                                         u8375 1CA9  
                                       u9175 2A4E                                         u6945 00D2  
                                       u9265 21ED                                         u8570 1FB7  
                                       u9435 2BD6                                         u6875 2B63  
                                       u6795 2B23                                         u9275 222B  
                                       u9507 28BB                                         u7860 1011  
                                       u8580 1FB8                                         u9445 2BED  
                                       u9517 3297                                         u6965 0135  
                                       u9365 2C43                                         u7845 366F  
                                       u7870 1012                                         u9295 2F99  
                                       u9385 2CA9                                         u7955 1A8D  
                                       u9487 3528                                         u7985 1B51  
                                       u9497 336D                                         _TMR1 0016  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                               ?_updateCurrent 0070  
                                       _atoi 2002                                         _ctoa 346A  
                                       _main 34FE                                         _dtoa 1A36  
                                       _logf 0074                                         _prec 0168  
                                       _otoa 2418                                         _nout 01D4  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2DA0  
                                       btemp 007E                                         _utoa 2337  
                                       _xtoa 1B89                                         start 001E  
                  __end_of_calibrate_BATTSOC 2F2B                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 3245  
                          _enableDischarging 35D2                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3257  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2AE9  
                            __end_of___aodiv 25FC                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07E0  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2337                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                            __end_of___flneg 326B                                        STR_10 39BE  
                                      STR_11 396A                                        STR_20 3A23  
                                      STR_12 393E                                        STR_21 3A35  
                                      STR_13 3954                                        STR_14 397F  
                                      STR_23 3A9B                                        STR_15 3994  
                                      STR_16 39A9                                        STR_25 3A9B  
                                      STR_41 3AB6                                        STR_17 39E8  
                                      STR_34 3A9C                                        STR_50 3AA7  
                                      STR_18 39FC                                        STR_43 3AB6  
                                      STR_27 3A9F                                        STR_19 3A10  
                                      STR_52 3AA7                                        STR_60 3ABF  
                                      STR_29 3A9F                                        STR_45 3AB9  
                                      STR_38 3AA0                                        STR_62 3ABF  
                                      STR_47 3AB9                                        STR_72 3AA4  
                                      STR_80 3AAB                                        STR_57 3AA8  
                                      STR_65 3AA3                                        STR_82 3AAB  
                                      STR_90 3AC2                                        STR_67 3AA3  
                                      STR_75 3ABC                                        STR_92 3AC2  
                                      STR_77 3ABC                                        STR_87 3AAC  
                                      STR_95 3AAF                              __end_of___flmul 124F  
                                      STR_97 3AAF                                        ?_otoa 0030  
                                      STR_99 3A97                              __end_of___flsub 3565  
                            __end_of___fltol 3800                                        ?_stoa 0020  
                                      ?_utoa 0030                              __end_of___lodiv 29EA  
                                      ?_xtoa 0030                              __end_of___lomod 287A  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l155 001C  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 322E  
                                      _flags 016A                                        _errno 01D2  
                                      _fputc 36F0                              __end_of_isalpha 33B3  
                                      _fputs 3414                                        _myIsr 0004  
                            __end_of_isdigit 32B3                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0166                                        ctoa@c 0032  
                                      _putch 07FF                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 330F                              __end_of_isspace 3396  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
         __end_of_lookupTableSamsung_voltage 38B8                   _lookupTableSamsung_voltage 385C  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 32F8  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3A77                              __end_of_strncmp 36F0  
                            __end_of_toupper 1023                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                     __size_of_coulomb_counter 00DC  
                               _toupper$1845 0079                               __CFG_MCLRE$OFF 0000  
                  __end_of_enableDischarging 3609                              __initialization 0020  
                            ?_updateVoltages 0070                     updateTemperatures@adcVal 00E7  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 20A3  
                               __end_of_ctoa 349B                                 __end_of_main 3530  
                               __end_of_dtoa 1B89                                 __end_of_logf 05FE  
                               __end_of_otoa 2509                                 __end_of_stoa 2E65  
                               __end_of_utoa 2418                                 __end_of_xtoa 1CE2  
                   __end_of_UV_delay_setting 3A77                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                    _watchdog_timeout_shutdown 335F  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 38B8  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 0164                                       ??_dtoa 003A  
                                     ??_logf 00AC                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 2800  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_101 3A97                                       STR_110 3A98  
                                     ?_fputs 007A                                       STR_113 3AC5  
                                     STR_106 3AB0                                       STR_115 3AC5  
                                     ?_myIsr 0070                                       STR_117 3AB3  
                                     STR_119 3AB3                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3928  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3A7F                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       u420lld 2531  
                                     _TX1REG 019A                                       u431lld 2283  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_983 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                              _read_I2C_data 2801                             __end_of___xxtofl 2B7F  
                 __size_of_calibrate_BATTSOC 00C6                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 33F2                                 vfprintf@cfmt 0068  
                                     ___flge 28F2                                       ___lmul 34CC  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01D6                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3329  
                                     _ln2_hi 3A93                                    ??___fldiv 0048  
                                     _ln2_lo 3A8F                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 329C  
                                  ??___lomod 0071                             __end_of_init_AFE 379A  
                           __end_of_init_RGB 3228                    __end_of_ATmega328_address 38BA  
                      _beginAFEcommunication 2C28                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 32B3                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 346A                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2088 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 34CC  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 335F                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0070  
                             ?_read_I2C_data 0071                                   ___flneg@f1 005A  
                           coulomb_counter@i 00B1                                   ___fltol@f1 00A8  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 321F  
                               __pidataBANK4 322E                                __end_of_fputc 3744  
                              __end_of_fputs 343A                                __end_of_myIsr 001E  
                               _cellVoltages 01B4                                __end_of_putch 0800  
                          ??_coulomb_counter 006E                                   _batCurrent 01CA  
                         _RGB_AWAIT_AFE_CONN 33F2                       updateTemperatures@vtsx 00E9  
                __size_of_updateTemperatures 02D9                                   _batVoltage 01CE  
                        ?_RGB_AWAIT_AFE_CONN 0070                      __size_of_enableCharging 0037  
                                 _cellCharge 01A0                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK2 0166                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 0808  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 00EF  
                          __end_of__Umul8_16 07FF                                   __pmaintext 34FE  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01C2  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_974 00AA  
                         __size_of_vfpfcnvrt F1A4           __size_of_watchdog_timeout_shutdown 001B  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 3000        __size_of_setCellOvervoltageProtection 00D5  
               _setCellOvervoltageProtection 2F2B                             ??_updateVoltages 00B1  
      __end_of_setCellUndervoltageProtection 225B       __size_of_setCellUndervoltageProtection 00DC  
              _setCellUndervoltageProtection 217F                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                      _samsung_cell_max_charge 01E8  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 359B  
                                    ___aldiv 2A67                                      _adcGain 016E  
                            __size_of___flge 007C                                      ___aodiv 2509  
                                    ___fladd 05FE                                      ___aomod 225B  
                                    ___fldiv 1CE2                                      ___flneg 3261  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 3530                                      ___fltol 379A  
                            __size_of___wmul 001B                                      ___lodiv 296E  
                                    ___lomod 2811                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                      _cellSOC 01AA  
                              _messageBuffer 2771                                      __ptext1 335F  
                                    __ptext2 287A                                      __ptext3 26F6  
                                    __ptext4 3344                                      __ptext5 29EA  
                                    __ptext6 349B                                      __ptext7 1E5C  
                                    __ptext8 1B89                                      __ptext9 1001  
                          __end_of_init_GPIO 0843                            __end_of_initClock 321F  
                          __end_of_init_TMR1 3280                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 3228  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 3396                                      _isdigit 329C  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 32F8                                      _isspace 337A  
  __end_of_setOverCurrentDischargeProtection 191E   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 1809                                      _isupper 32E1  
                                    atoi@neg 0024                                      clrloop0 3281  
          __end_of_watchdog_timeout_shutdown 337A                                      _strncmp 369E  
                                    _toupper 1001                         end_of_initialization 0070  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2B7F                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 1800  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 450090                                      psplit$1 900091  
                              _send_I2C_data 324E                                    _RGB_color 33D1  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                             _enableCharging 359B                            __end_of_vsnprintf 2A67  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 010A                __end_of_SCD_threshold_setting 3A67  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 33B3  
                                ___flmul@grs 0034                       _lookupTableSamsung_SOC 3800  
                  __end_of_EUSART_Initialize 2C28                        __end_of_updateCurrent 2DA0  
                      _OCD_threshold_setting 3908                              _coulomb_counter 20A3  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
             ?_setCellUndervoltageProtection 0032                               ?_send_I2C_data 0071  
                        ??_I2C_writeRegister 007B                                   ?_RGB_color 0071  
                             __end_of___flge 296E                               __end_of___lmul 34FE  
                                vfpfcnvrt@ap 005A                                  vfpfcnvrt@cp 00A0  
                                vfpfcnvrt@fp 0057                                  vfpfcnvrt@ll 00A8  
                             __end_of___wmul 3344                                  vfpfcnvrt@vp 00B0  
                             __end_of_ln2_hi 3A97                               __end_of_ln2_lo 3A93  
                               _EUSART_Write 0800                  I2C_writeRegister@regAddress 0077  
              setShuntResistorValue@res_mOhm 0071                       __end_of_enableCharging 35D2  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 32CA  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 01EA  
                                __end_of_Lg1 3A8F                                  __end_of_Lg2 3A8B  
                                __end_of_Lg3 3A87                                  __end_of_Lg4 3A83  
                              ?_statemachine 0070                                  __end_of_abs 32E1  
                                __end_of_pad 369E                            _minCellTempCharge 01E0  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01DA  
                       updateVoltages@adcVal 00B8                         _minCellTempDischarge 01DE  
                          pnum$text7_split_1 0090                            pnum$text7_split_2 0091  
                  __end_of_I2C_writeRegister 33D1       _setOverCurrentDischargeProtection$2087 00A4  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 330F                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                                  __Umul8_16 07E0                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01E8                                  __pdataBANK4 0240  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016C                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01E2  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 00D0  
                          __size_of___xxtofl 0096                                 _readRegister 3565  
                    __end_of_coulomb_counter 217F     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 3329                           calibrate_BATTSOC@i 00B6  
                         calibrate_BATTSOC@j 00B8                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1710 0026  
                                  _atoi$1711 002A                                    _atoi$1712 0028  
                           _OV_delay_setting 3A67                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 3235                                    _dtoa$1259 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 3275  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2100 0152                                    _logf$2101 012C  
                                  _logf$2102 0130                                    _logf$2103 0134  
                                  _logf$2104 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
                            ___lomod@divisor 0020                                     ?_initWDT 0070  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                     ?_islower 0071  
                                   ?_isspace 0071                                    _init_GPIO 0808  
                                   ?_isupper 0071                                    _initClock 321C  
                                  _init_TMR1 3275                                    _currState 01E7  
                  _setShortCircuitProtection 191E                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 2811  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 323D                                    clear_ram0 3280  
                                  _tmr1_flag 01E3                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 324E  
                        _printcellParameters 26F6                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1295 0043                                    _xtoa$1296 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 3609  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                                 _isspace$1737 0075  
                      send_I2C_data@databyte 0071                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                           ?_coulomb_counter 0070                        _temperatureThermistor 01C6  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 29EA                                   _AFE_UPDATE 343A  
                          _OCD_delay_setting 3A47                         __end_of_statemachine 28F2  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 02D8                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___flneg 000A  
             _setShortCircuitProtection$2086 00A4                                  vsnprintf@ap 00C1  
                           __size_of___flmul 022C                             __size_of___flsub 0035  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 0057                                   snprintf@ap 006F  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                                   ___xxtofl 2AE9  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_initWDT 0006                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017               __end_of_lookupTableSamsung_SOC 385C  
                           _send_I2C_stopBit 323D                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 32F8  
                                   __ptext11 32E1                                     __ptext20 32CA  
                                   __ptext12 3396                                     __ptext21 225B  
                                   __ptext13 2337                                     __ptext30 337A  
                                   __ptext22 2509                                     __ptext14 2811  
                                   __ptext31 329C                                     __ptext23 346A  
                                   __ptext15 296E                                     __ptext40 28F2  
                                   __ptext32 330F                                     __ptext24 364D  
                                   __ptext16 369E                                     __ptext41 217F  
                                   __ptext33 0800                                     __ptext25 32B3  
                                   __ptext17 2DA0                                     __ptext50 0074  
                                   __ptext42 2F2B                                     __ptext34 3744  
                                   __ptext26 3414                                     __ptext18 2418  
                                   __ptext51 2CDC                                     __ptext43 2C28  
                                   __ptext35 3609                                     __ptext27 36F0  
                                   __ptext19 1A36                                     __ptext60 3235  
                                   __ptext52 3261                                     __ptext44 33F2  
                                   __ptext36 3329                                     __ptext28 07FF  
                                   __ptext61 324E                                     __ptext53 35D2  
                                   __ptext45 33D1                                     __ptext37 326B  
                                   __ptext29 2002                                     __ptext70 07E0  
                                   __ptext62 3257                                     __ptext54 359B  
                                   __ptext46 343A                                     __ptext38 191E  
                                   __ptext71 1CE2                                     __ptext63 20A3  
                                   __ptext55 3565                                     __ptext47 124F  
                                   __ptext39 1809                                     __ptext80 2A67  
                                   __ptext72 3275                                     __ptext64 3530  
                                   __ptext56 1800                                     __ptext48 34CC  
                                   __ptext73 3223                                     __ptext65 05FE  
                                   __ptext57 2801                                     __ptext49 1527  
                                   __ptext74 328C                                     __ptext66 2E65  
                                   __ptext58 33B3                                     __ptext75 0808  
                                   __ptext67 2AE9                                     __ptext59 323D  
                                   __ptext76 3228                                     __ptext68 379A  
                                   __ptext77 321C                                     __ptext69 1023  
                                   __ptext78 3245                                     __ptext79 2B7F  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 3A57  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 328C                                     _init_AFE 3744  
                                   _init_RGB 3223                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0045                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3A57  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3245                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 0240  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2CDC  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01E6                                     _protect2 01E5  
                                   _protect3 01E4                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 349B                             ??_enableCharging 0022  
                                   _snprintf 3344                             ___aomod@dividend 0028  
                                   logf@F469 01BE                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3A6F  
                             _vfpfcnvrt$1310 00A4                               _vfpfcnvrt$1311 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A83  
                             __pstringtext11 3A87                               __pstringtext20 396A  
                             __pstringtext12 3A8B                               __pstringtext21 397F  
                             __pstringtext13 3A8F                               __pstringtext30 3A35  
                             __pstringtext22 3994                               __pstringtext14 3A93  
                             __pstringtext31 3A97                               __pstringtext23 39A9  
                             __pstringtext15 38B8                               __pstringtext40 3AB9  
                             __pstringtext32 3A9B                               __pstringtext24 39BE  
                             __pstringtext16 38E2                               __pstringtext41 3ABC  
                             __pstringtext33 3A9F                               __pstringtext25 39D3  
                             __pstringtext17 3928                               __pstringtext42 3ABF  
                             __pstringtext34 3AA3                               __pstringtext26 39E8  
                             __pstringtext18 393E                               __pstringtext43 3AC2  
                             __pstringtext35 3AA7                               __pstringtext27 39FC  
                             __pstringtext19 3954                               __pstringtext44 3AC5  
                             __pstringtext36 3AAB                               __pstringtext28 3A10  
                             __pstringtext45 3AC8                               __pstringtext37 3AAF  
                             __pstringtext29 3A23                               __pstringtext46 0000  
                             __pstringtext38 3AB3                               __pstringtext39 3AB6  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 3A6F                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 3261  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01DC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3800  
                              __pstringtext2 385C                                __pstringtext3 3908  
                              __pstringtext4 3A47                                __pstringtext5 3A57  
                              __pstringtext6 3A67                                __pstringtext7 3A6F  
                              __pstringtext8 3A77                                __pstringtext9 3A7F  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1882 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 364D                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2090 00BB  
                    _updateTemperatures$2091 00BF                      _updateTemperatures$2092 00C3  
                    _updateTemperatures$2093 00C7                      _updateTemperatures$2094 00CB  
                    _updateTemperatures$2095 00CF                      _updateTemperatures$2096 00D3  
                    _updateTemperatures$2097 00D7                      _updateTemperatures$2089 00B7  
                    _updateTemperatures$2098 00DB                      _updateTemperatures$2099 00DF  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 2CDC                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 3414                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 1809  
                          __Umul8_16@product 0075                            _calibrate_BATTSOC 2E65  
