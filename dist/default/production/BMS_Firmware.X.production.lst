

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jan 01 16:14:29 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	cinit,global,class=CODE,merge=1,delta=2
    61                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    63                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	clrtext,global,class=CODE,delta=2
    66                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    67                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    68                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    69                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    70                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    72                           	psect	text1,local,class=CODE,merge=1,delta=2
    73                           	psect	text2,local,class=CODE,merge=1,delta=2
    74                           	psect	text3,local,class=CODE,merge=1,delta=2
    75                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text6,local,class=CODE,merge=1,delta=2
    78                           	psect	text7,local,class=CODE,merge=1,delta=2
    79                           	psect	text8,local,class=CODE,merge=1,delta=2
    80                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text12,local,class=CODE,merge=1,delta=2
    84                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text16,local,class=CODE,merge=1,delta=2
    88                           	psect	text17,local,class=CODE,merge=1,delta=2
    89                           	psect	text18,local,class=CODE,merge=1,delta=2
    90                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text30,local,class=CODE,merge=1,delta=2
   102                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text34,local,class=CODE,merge=1,delta=2
   106                           	psect	text35,local,class=CODE,merge=1,delta=2
   107                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text43,local,class=CODE,merge=1,delta=2
   115                           	psect	text44,local,class=CODE,merge=1,delta=2
   116                           	psect	text45,local,class=CODE,merge=1,delta=2
   117                           	psect	text46,local,class=CODE,merge=1,delta=2
   118                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text48,local,class=CODE,merge=1,delta=2
   120                           	psect	text49,local,class=CODE,merge=1,delta=2
   121                           	psect	text50,local,class=CODE,merge=1,delta=2
   122                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text54,local,class=CODE,merge=1,delta=2
   126                           	psect	text55,local,class=CODE,merge=1,delta=2
   127                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text57,local,class=CODE,merge=1,delta=2
   129                           	psect	text58,local,class=CODE,merge=1,delta=2
   130                           	psect	text59,local,class=CODE,merge=1,delta=2
   131                           	psect	text60,local,class=CODE,merge=1,delta=2
   132                           	psect	text61,local,class=CODE,merge=1,delta=2
   133                           	psect	text62,local,class=CODE,merge=1,delta=2
   134                           	psect	text63,local,class=CODE,merge=1,delta=2
   135                           	psect	text64,local,class=CODE,merge=1,delta=2
   136                           	psect	text65,local,class=CODE,merge=1,delta=2
   137                           	psect	text66,local,class=CODE,merge=1,delta=2
   138                           	psect	text67,local,class=CODE,merge=1,delta=2
   139                           	psect	text68,local,class=CODE,merge=1,delta=2
   140                           	psect	text69,local,class=CODE,merge=1,delta=2
   141                           	psect	text70,local,class=CODE,merge=1,delta=2
   142                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   143                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   144                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   145                           	psect	text74,local,class=CODE,merge=1,delta=2
   146                           	psect	text75,local,class=CODE,merge=1,delta=2
   147                           	psect	text76,local,class=CODE,merge=1,delta=2
   148                           	psect	text77,local,class=CODE,merge=1,delta=2
   149                           	psect	text78,local,class=CODE,merge=1,delta=2
   150                           	psect	text79,local,class=CODE,merge=1,delta=2
   151                           	psect	text80,local,class=CODE,merge=1,delta=2
   152                           	psect	text81,local,class=CODE,merge=1,delta=2
   153                           	psect	text82,local,class=CODE,merge=1,delta=2
   154                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
   155                           	psect	intentry,global,class=CODE,delta=2
   156                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   157                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   158                           	psect	text7_split_3,local,class=CODE,merge=1,delta=2
   159                           	psect	text7_split_4,local,class=CODE,merge=1,delta=2
   160                           	psect	text7_split_5,local,class=CODE,merge=1,delta=2
   161                           	psect	text7_split_6,local,class=CODE,merge=1,delta=2
   162                           	psect	text7_split_7,local,class=CODE,merge=1,delta=2
   163                           	psect	text7_split_8,local,class=CODE,merge=1,delta=2
   164                           	dabs	1,0xCA0,32
   165                           	dabs	1,0xC20,80
   166                           	dabs	1,0xBE1,15
   167                           	dabs	1,0x2771,0,_messageBuffer
   168                           	dabs	1,0x7E,2
   169  0000                     
   170                           ; Version 2.05
   171                           ; Generated 20/12/2018 GMT
   172                           ; 
   173                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   174                           ; All rights reserved.
   175                           ; 
   176                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   177                           ; 
   178                           ; Redistribution and use in source and binary forms, with or without modification, are
   179                           ; permitted provided that the following conditions are met:
   180                           ; 
   181                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   182                           ;        conditions and the following disclaimer.
   183                           ; 
   184                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   185                           ;        of conditions and the following disclaimer in the documentation and/or other
   186                           ;        materials provided with the distribution.
   187                           ; 
   188                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   189                           ;        software without specific prior written permission.
   190                           ; 
   191                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   192                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   193                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   194                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   195                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   196                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   197                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   198                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   199                           ; 
   200                           ; 
   201                           ; Code-generator required, PIC16F1719 Definitions
   202                           ; 
   203                           ; SFR Addresses
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0110                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011B                     	;# 
   270  011C                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018E                     	;# 
   274  018F                     	;# 
   275  0190                     	;# 
   276  0191                     	;# 
   277  0191                     	;# 
   278  0192                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0197                     	;# 
   285  0199                     	;# 
   286  0199                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019A                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019C                     	;# 
   297  019C                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019D                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019E                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  019F                     	;# 
   307  019F                     	;# 
   308  019F                     	;# 
   309  019F                     	;# 
   310  020C                     	;# 
   311  020D                     	;# 
   312  020E                     	;# 
   313  020F                     	;# 
   314  0210                     	;# 
   315  0211                     	;# 
   316  0211                     	;# 
   317  0212                     	;# 
   318  0212                     	;# 
   319  0213                     	;# 
   320  0213                     	;# 
   321  0214                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0216                     	;# 
   328  0216                     	;# 
   329  0217                     	;# 
   330  0217                     	;# 
   331  028C                     	;# 
   332  028D                     	;# 
   333  028E                     	;# 
   334  028F                     	;# 
   335  0290                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0293                     	;# 
   341  0298                     	;# 
   342  0298                     	;# 
   343  0299                     	;# 
   344  029A                     	;# 
   345  029A                     	;# 
   346  029E                     	;# 
   347  030C                     	;# 
   348  030D                     	;# 
   349  030E                     	;# 
   350  030F                     	;# 
   351  0310                     	;# 
   352  038C                     	;# 
   353  038D                     	;# 
   354  038E                     	;# 
   355  038F                     	;# 
   356  0390                     	;# 
   357  0391                     	;# 
   358  0392                     	;# 
   359  0393                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0397                     	;# 
   364  0398                     	;# 
   365  0399                     	;# 
   366  039D                     	;# 
   367  039E                     	;# 
   368  039F                     	;# 
   369  0415                     	;# 
   370  0416                     	;# 
   371  0417                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  0498                     	;# 
   376  0498                     	;# 
   377  0499                     	;# 
   378  049A                     	;# 
   379  049B                     	;# 
   380  049B                     	;# 
   381  049C                     	;# 
   382  049D                     	;# 
   383  049E                     	;# 
   384  049F                     	;# 
   385  0511                     	;# 
   386  0515                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  0619                     	;# 
   391  061A                     	;# 
   392  061B                     	;# 
   393  061C                     	;# 
   394  061C                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  0695                     	;# 
   400  0696                     	;# 
   401  0697                     	;# 
   402  0698                     	;# 
   403  0699                     	;# 
   404  069A                     	;# 
   405  069B                     	;# 
   406  069C                     	;# 
   407  069D                     	;# 
   408  069E                     	;# 
   409  069F                     	;# 
   410  0E0F                     	;# 
   411  0E10                     	;# 
   412  0E11                     	;# 
   413  0E12                     	;# 
   414  0E13                     	;# 
   415  0E14                     	;# 
   416  0E15                     	;# 
   417  0E17                     	;# 
   418  0E20                     	;# 
   419  0E21                     	;# 
   420  0E22                     	;# 
   421  0E24                     	;# 
   422  0E25                     	;# 
   423  0E28                     	;# 
   424  0E29                     	;# 
   425  0E2A                     	;# 
   426  0E2B                     	;# 
   427  0E90                     	;# 
   428  0E91                     	;# 
   429  0E92                     	;# 
   430  0E93                     	;# 
   431  0E94                     	;# 
   432  0E95                     	;# 
   433  0E96                     	;# 
   434  0E97                     	;# 
   435  0E98                     	;# 
   436  0E99                     	;# 
   437  0E9A                     	;# 
   438  0E9B                     	;# 
   439  0E9C                     	;# 
   440  0E9D                     	;# 
   441  0E9E                     	;# 
   442  0E9F                     	;# 
   443  0EA0                     	;# 
   444  0EA1                     	;# 
   445  0EA2                     	;# 
   446  0EA3                     	;# 
   447  0EA4                     	;# 
   448  0EA5                     	;# 
   449  0EA6                     	;# 
   450  0EA7                     	;# 
   451  0EA8                     	;# 
   452  0EA9                     	;# 
   453  0EAA                     	;# 
   454  0EAB                     	;# 
   455  0EAC                     	;# 
   456  0EAD                     	;# 
   457  0EAE                     	;# 
   458  0EAF                     	;# 
   459  0EB0                     	;# 
   460  0EB1                     	;# 
   461  0EB2                     	;# 
   462  0F0F                     	;# 
   463  0F10                     	;# 
   464  0F11                     	;# 
   465  0F12                     	;# 
   466  0F13                     	;# 
   467  0F14                     	;# 
   468  0F15                     	;# 
   469  0F16                     	;# 
   470  0F17                     	;# 
   471  0F18                     	;# 
   472  0F19                     	;# 
   473  0F1A                     	;# 
   474  0F1B                     	;# 
   475  0F1C                     	;# 
   476  0F1D                     	;# 
   477  0F1E                     	;# 
   478  0F1F                     	;# 
   479  0F20                     	;# 
   480  0F21                     	;# 
   481  0F22                     	;# 
   482  0F23                     	;# 
   483  0F24                     	;# 
   484  0F25                     	;# 
   485  0F26                     	;# 
   486  0F27                     	;# 
   487  0F28                     	;# 
   488  0F29                     	;# 
   489  0F2A                     	;# 
   490  0F2B                     	;# 
   491  0F2C                     	;# 
   492  0F2D                     	;# 
   493  0F2E                     	;# 
   494  0F2F                     	;# 
   495  0F30                     	;# 
   496  0F31                     	;# 
   497  0F32                     	;# 
   498  0F33                     	;# 
   499  0F34                     	;# 
   500  0F35                     	;# 
   501  0F36                     	;# 
   502  0F37                     	;# 
   503  0FE4                     	;# 
   504  0FE5                     	;# 
   505  0FE6                     	;# 
   506  0FE7                     	;# 
   507  0FE8                     	;# 
   508  0FE9                     	;# 
   509  0FEA                     	;# 
   510  0FEB                     	;# 
   511  0FED                     	;# 
   512  0FEE                     	;# 
   513  0FEF                     	;# 
   514  0000                     	;# 
   515  0001                     	;# 
   516  0002                     	;# 
   517  0003                     	;# 
   518  0004                     	;# 
   519  0005                     	;# 
   520  0006                     	;# 
   521  0007                     	;# 
   522  0008                     	;# 
   523  0009                     	;# 
   524  000A                     	;# 
   525  000B                     	;# 
   526  000C                     	;# 
   527  000D                     	;# 
   528  000E                     	;# 
   529  000F                     	;# 
   530  0010                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0013                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  008F                     	;# 
   547  0090                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  010F                     	;# 
   567  0110                     	;# 
   568  0111                     	;# 
   569  0112                     	;# 
   570  0113                     	;# 
   571  0114                     	;# 
   572  0115                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  0118                     	;# 
   576  0119                     	;# 
   577  011A                     	;# 
   578  011B                     	;# 
   579  011B                     	;# 
   580  011C                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583  018E                     	;# 
   584  018F                     	;# 
   585  0190                     	;# 
   586  0191                     	;# 
   587  0191                     	;# 
   588  0192                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0194                     	;# 
   592  0195                     	;# 
   593  0196                     	;# 
   594  0197                     	;# 
   595  0199                     	;# 
   596  0199                     	;# 
   597  0199                     	;# 
   598  019A                     	;# 
   599  019A                     	;# 
   600  019A                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019C                     	;# 
   607  019C                     	;# 
   608  019C                     	;# 
   609  019D                     	;# 
   610  019D                     	;# 
   611  019D                     	;# 
   612  019E                     	;# 
   613  019E                     	;# 
   614  019E                     	;# 
   615  019F                     	;# 
   616  019F                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  020C                     	;# 
   621  020D                     	;# 
   622  020E                     	;# 
   623  020F                     	;# 
   624  0210                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028E                     	;# 
   644  028F                     	;# 
   645  0290                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0293                     	;# 
   651  0298                     	;# 
   652  0298                     	;# 
   653  0299                     	;# 
   654  029A                     	;# 
   655  029A                     	;# 
   656  029E                     	;# 
   657  030C                     	;# 
   658  030D                     	;# 
   659  030E                     	;# 
   660  030F                     	;# 
   661  0310                     	;# 
   662  038C                     	;# 
   663  038D                     	;# 
   664  038E                     	;# 
   665  038F                     	;# 
   666  0390                     	;# 
   667  0391                     	;# 
   668  0392                     	;# 
   669  0393                     	;# 
   670  0394                     	;# 
   671  0395                     	;# 
   672  0396                     	;# 
   673  0397                     	;# 
   674  0398                     	;# 
   675  0399                     	;# 
   676  039D                     	;# 
   677  039E                     	;# 
   678  039F                     	;# 
   679  0415                     	;# 
   680  0416                     	;# 
   681  0417                     	;# 
   682  041C                     	;# 
   683  041D                     	;# 
   684  041E                     	;# 
   685  0498                     	;# 
   686  0498                     	;# 
   687  0499                     	;# 
   688  049A                     	;# 
   689  049B                     	;# 
   690  049B                     	;# 
   691  049C                     	;# 
   692  049D                     	;# 
   693  049E                     	;# 
   694  049F                     	;# 
   695  0511                     	;# 
   696  0515                     	;# 
   697  0617                     	;# 
   698  0618                     	;# 
   699  0619                     	;# 
   700  0619                     	;# 
   701  061A                     	;# 
   702  061B                     	;# 
   703  061C                     	;# 
   704  061C                     	;# 
   705  0691                     	;# 
   706  0692                     	;# 
   707  0693                     	;# 
   708  0694                     	;# 
   709  0695                     	;# 
   710  0696                     	;# 
   711  0697                     	;# 
   712  0698                     	;# 
   713  0699                     	;# 
   714  069A                     	;# 
   715  069B                     	;# 
   716  069C                     	;# 
   717  069D                     	;# 
   718  069E                     	;# 
   719  069F                     	;# 
   720  0E0F                     	;# 
   721  0E10                     	;# 
   722  0E11                     	;# 
   723  0E12                     	;# 
   724  0E13                     	;# 
   725  0E14                     	;# 
   726  0E15                     	;# 
   727  0E17                     	;# 
   728  0E20                     	;# 
   729  0E21                     	;# 
   730  0E22                     	;# 
   731  0E24                     	;# 
   732  0E25                     	;# 
   733  0E28                     	;# 
   734  0E29                     	;# 
   735  0E2A                     	;# 
   736  0E2B                     	;# 
   737  0E90                     	;# 
   738  0E91                     	;# 
   739  0E92                     	;# 
   740  0E93                     	;# 
   741  0E94                     	;# 
   742  0E95                     	;# 
   743  0E96                     	;# 
   744  0E97                     	;# 
   745  0E98                     	;# 
   746  0E99                     	;# 
   747  0E9A                     	;# 
   748  0E9B                     	;# 
   749  0E9C                     	;# 
   750  0E9D                     	;# 
   751  0E9E                     	;# 
   752  0E9F                     	;# 
   753  0EA0                     	;# 
   754  0EA1                     	;# 
   755  0EA2                     	;# 
   756  0EA3                     	;# 
   757  0EA4                     	;# 
   758  0EA5                     	;# 
   759  0EA6                     	;# 
   760  0EA7                     	;# 
   761  0EA8                     	;# 
   762  0EA9                     	;# 
   763  0EAA                     	;# 
   764  0EAB                     	;# 
   765  0EAC                     	;# 
   766  0EAD                     	;# 
   767  0EAE                     	;# 
   768  0EAF                     	;# 
   769  0EB0                     	;# 
   770  0EB1                     	;# 
   771  0EB2                     	;# 
   772  0F0F                     	;# 
   773  0F10                     	;# 
   774  0F11                     	;# 
   775  0F12                     	;# 
   776  0F13                     	;# 
   777  0F14                     	;# 
   778  0F15                     	;# 
   779  0F16                     	;# 
   780  0F17                     	;# 
   781  0F18                     	;# 
   782  0F19                     	;# 
   783  0F1A                     	;# 
   784  0F1B                     	;# 
   785  0F1C                     	;# 
   786  0F1D                     	;# 
   787  0F1E                     	;# 
   788  0F1F                     	;# 
   789  0F20                     	;# 
   790  0F21                     	;# 
   791  0F22                     	;# 
   792  0F23                     	;# 
   793  0F24                     	;# 
   794  0F25                     	;# 
   795  0F26                     	;# 
   796  0F27                     	;# 
   797  0F28                     	;# 
   798  0F29                     	;# 
   799  0F2A                     	;# 
   800  0F2B                     	;# 
   801  0F2C                     	;# 
   802  0F2D                     	;# 
   803  0F2E                     	;# 
   804  0F2F                     	;# 
   805  0F30                     	;# 
   806  0F31                     	;# 
   807  0F32                     	;# 
   808  0F33                     	;# 
   809  0F34                     	;# 
   810  0F35                     	;# 
   811  0F36                     	;# 
   812  0F37                     	;# 
   813  0FE4                     	;# 
   814  0FE5                     	;# 
   815  0FE6                     	;# 
   816  0FE7                     	;# 
   817  0FE8                     	;# 
   818  0FE9                     	;# 
   819  0FEA                     	;# 
   820  0FEB                     	;# 
   821  0FED                     	;# 
   822  0FEE                     	;# 
   823  0FEF                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0008                     	;# 
   833  0009                     	;# 
   834  000A                     	;# 
   835  000B                     	;# 
   836  000C                     	;# 
   837  000D                     	;# 
   838  000E                     	;# 
   839  000F                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  001A                     	;# 
   851  001B                     	;# 
   852  001C                     	;# 
   853  008C                     	;# 
   854  008D                     	;# 
   855  008E                     	;# 
   856  008F                     	;# 
   857  0090                     	;# 
   858  0091                     	;# 
   859  0092                     	;# 
   860  0093                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0098                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  009F                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  010F                     	;# 
   877  0110                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011B                     	;# 
   889  011B                     	;# 
   890  011C                     	;# 
   891  018C                     	;# 
   892  018D                     	;# 
   893  018E                     	;# 
   894  018F                     	;# 
   895  0190                     	;# 
   896  0191                     	;# 
   897  0191                     	;# 
   898  0192                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0197                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  0199                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019E                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  020C                     	;# 
   931  020D                     	;# 
   932  020E                     	;# 
   933  020F                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0216                     	;# 
   948  0216                     	;# 
   949  0217                     	;# 
   950  0217                     	;# 
   951  028C                     	;# 
   952  028D                     	;# 
   953  028E                     	;# 
   954  028F                     	;# 
   955  0290                     	;# 
   956  0291                     	;# 
   957  0291                     	;# 
   958  0292                     	;# 
   959  0293                     	;# 
   960  0293                     	;# 
   961  0298                     	;# 
   962  0298                     	;# 
   963  0299                     	;# 
   964  029A                     	;# 
   965  029A                     	;# 
   966  029E                     	;# 
   967  030C                     	;# 
   968  030D                     	;# 
   969  030E                     	;# 
   970  030F                     	;# 
   971  0310                     	;# 
   972  038C                     	;# 
   973  038D                     	;# 
   974  038E                     	;# 
   975  038F                     	;# 
   976  0390                     	;# 
   977  0391                     	;# 
   978  0392                     	;# 
   979  0393                     	;# 
   980  0394                     	;# 
   981  0395                     	;# 
   982  0396                     	;# 
   983  0397                     	;# 
   984  0398                     	;# 
   985  0399                     	;# 
   986  039D                     	;# 
   987  039E                     	;# 
   988  039F                     	;# 
   989  0415                     	;# 
   990  0416                     	;# 
   991  0417                     	;# 
   992  041C                     	;# 
   993  041D                     	;# 
   994  041E                     	;# 
   995  0498                     	;# 
   996  0498                     	;# 
   997  0499                     	;# 
   998  049A                     	;# 
   999  049B                     	;# 
  1000  049B                     	;# 
  1001  049C                     	;# 
  1002  049D                     	;# 
  1003  049E                     	;# 
  1004  049F                     	;# 
  1005  0511                     	;# 
  1006  0515                     	;# 
  1007  0617                     	;# 
  1008  0618                     	;# 
  1009  0619                     	;# 
  1010  0619                     	;# 
  1011  061A                     	;# 
  1012  061B                     	;# 
  1013  061C                     	;# 
  1014  061C                     	;# 
  1015  0691                     	;# 
  1016  0692                     	;# 
  1017  0693                     	;# 
  1018  0694                     	;# 
  1019  0695                     	;# 
  1020  0696                     	;# 
  1021  0697                     	;# 
  1022  0698                     	;# 
  1023  0699                     	;# 
  1024  069A                     	;# 
  1025  069B                     	;# 
  1026  069C                     	;# 
  1027  069D                     	;# 
  1028  069E                     	;# 
  1029  069F                     	;# 
  1030  0E0F                     	;# 
  1031  0E10                     	;# 
  1032  0E11                     	;# 
  1033  0E12                     	;# 
  1034  0E13                     	;# 
  1035  0E14                     	;# 
  1036  0E15                     	;# 
  1037  0E17                     	;# 
  1038  0E20                     	;# 
  1039  0E21                     	;# 
  1040  0E22                     	;# 
  1041  0E24                     	;# 
  1042  0E25                     	;# 
  1043  0E28                     	;# 
  1044  0E29                     	;# 
  1045  0E2A                     	;# 
  1046  0E2B                     	;# 
  1047  0E90                     	;# 
  1048  0E91                     	;# 
  1049  0E92                     	;# 
  1050  0E93                     	;# 
  1051  0E94                     	;# 
  1052  0E95                     	;# 
  1053  0E96                     	;# 
  1054  0E97                     	;# 
  1055  0E98                     	;# 
  1056  0E99                     	;# 
  1057  0E9A                     	;# 
  1058  0E9B                     	;# 
  1059  0E9C                     	;# 
  1060  0E9D                     	;# 
  1061  0E9E                     	;# 
  1062  0E9F                     	;# 
  1063  0EA0                     	;# 
  1064  0EA1                     	;# 
  1065  0EA2                     	;# 
  1066  0EA3                     	;# 
  1067  0EA4                     	;# 
  1068  0EA5                     	;# 
  1069  0EA6                     	;# 
  1070  0EA7                     	;# 
  1071  0EA8                     	;# 
  1072  0EA9                     	;# 
  1073  0EAA                     	;# 
  1074  0EAB                     	;# 
  1075  0EAC                     	;# 
  1076  0EAD                     	;# 
  1077  0EAE                     	;# 
  1078  0EAF                     	;# 
  1079  0EB0                     	;# 
  1080  0EB1                     	;# 
  1081  0EB2                     	;# 
  1082  0F0F                     	;# 
  1083  0F10                     	;# 
  1084  0F11                     	;# 
  1085  0F12                     	;# 
  1086  0F13                     	;# 
  1087  0F14                     	;# 
  1088  0F15                     	;# 
  1089  0F16                     	;# 
  1090  0F17                     	;# 
  1091  0F18                     	;# 
  1092  0F19                     	;# 
  1093  0F1A                     	;# 
  1094  0F1B                     	;# 
  1095  0F1C                     	;# 
  1096  0F1D                     	;# 
  1097  0F1E                     	;# 
  1098  0F1F                     	;# 
  1099  0F20                     	;# 
  1100  0F21                     	;# 
  1101  0F22                     	;# 
  1102  0F23                     	;# 
  1103  0F24                     	;# 
  1104  0F25                     	;# 
  1105  0F26                     	;# 
  1106  0F27                     	;# 
  1107  0F28                     	;# 
  1108  0F29                     	;# 
  1109  0F2A                     	;# 
  1110  0F2B                     	;# 
  1111  0F2C                     	;# 
  1112  0F2D                     	;# 
  1113  0F2E                     	;# 
  1114  0F2F                     	;# 
  1115  0F30                     	;# 
  1116  0F31                     	;# 
  1117  0F32                     	;# 
  1118  0F33                     	;# 
  1119  0F34                     	;# 
  1120  0F35                     	;# 
  1121  0F36                     	;# 
  1122  0F37                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  000F                     	;# 
  1150  0010                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0015                     	;# 
  1155  0016                     	;# 
  1156  0016                     	;# 
  1157  0017                     	;# 
  1158  0018                     	;# 
  1159  0019                     	;# 
  1160  001A                     	;# 
  1161  001B                     	;# 
  1162  001C                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  008F                     	;# 
  1167  0090                     	;# 
  1168  0091                     	;# 
  1169  0092                     	;# 
  1170  0093                     	;# 
  1171  0095                     	;# 
  1172  0096                     	;# 
  1173  0097                     	;# 
  1174  0098                     	;# 
  1175  0099                     	;# 
  1176  009A                     	;# 
  1177  009B                     	;# 
  1178  009B                     	;# 
  1179  009C                     	;# 
  1180  009D                     	;# 
  1181  009E                     	;# 
  1182  009F                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  010F                     	;# 
  1187  0110                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  011A                     	;# 
  1198  011B                     	;# 
  1199  011B                     	;# 
  1200  011C                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  018F                     	;# 
  1205  0190                     	;# 
  1206  0191                     	;# 
  1207  0191                     	;# 
  1208  0192                     	;# 
  1209  0193                     	;# 
  1210  0193                     	;# 
  1211  0194                     	;# 
  1212  0195                     	;# 
  1213  0196                     	;# 
  1214  0197                     	;# 
  1215  0199                     	;# 
  1216  0199                     	;# 
  1217  0199                     	;# 
  1218  019A                     	;# 
  1219  019A                     	;# 
  1220  019A                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019B                     	;# 
  1225  019B                     	;# 
  1226  019C                     	;# 
  1227  019C                     	;# 
  1228  019C                     	;# 
  1229  019D                     	;# 
  1230  019D                     	;# 
  1231  019D                     	;# 
  1232  019E                     	;# 
  1233  019E                     	;# 
  1234  019E                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  019F                     	;# 
  1239  019F                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  020F                     	;# 
  1244  0210                     	;# 
  1245  0211                     	;# 
  1246  0211                     	;# 
  1247  0212                     	;# 
  1248  0212                     	;# 
  1249  0213                     	;# 
  1250  0213                     	;# 
  1251  0214                     	;# 
  1252  0214                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0216                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0217                     	;# 
  1261  028C                     	;# 
  1262  028D                     	;# 
  1263  028E                     	;# 
  1264  028F                     	;# 
  1265  0290                     	;# 
  1266  0291                     	;# 
  1267  0291                     	;# 
  1268  0292                     	;# 
  1269  0293                     	;# 
  1270  0293                     	;# 
  1271  0298                     	;# 
  1272  0298                     	;# 
  1273  0299                     	;# 
  1274  029A                     	;# 
  1275  029A                     	;# 
  1276  029E                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  038C                     	;# 
  1283  038D                     	;# 
  1284  038E                     	;# 
  1285  038F                     	;# 
  1286  0390                     	;# 
  1287  0391                     	;# 
  1288  0392                     	;# 
  1289  0393                     	;# 
  1290  0394                     	;# 
  1291  0395                     	;# 
  1292  0396                     	;# 
  1293  0397                     	;# 
  1294  0398                     	;# 
  1295  0399                     	;# 
  1296  039D                     	;# 
  1297  039E                     	;# 
  1298  039F                     	;# 
  1299  0415                     	;# 
  1300  0416                     	;# 
  1301  0417                     	;# 
  1302  041C                     	;# 
  1303  041D                     	;# 
  1304  041E                     	;# 
  1305  0498                     	;# 
  1306  0498                     	;# 
  1307  0499                     	;# 
  1308  049A                     	;# 
  1309  049B                     	;# 
  1310  049B                     	;# 
  1311  049C                     	;# 
  1312  049D                     	;# 
  1313  049E                     	;# 
  1314  049F                     	;# 
  1315  0511                     	;# 
  1316  0515                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  0619                     	;# 
  1321  061A                     	;# 
  1322  061B                     	;# 
  1323  061C                     	;# 
  1324  061C                     	;# 
  1325  0691                     	;# 
  1326  0692                     	;# 
  1327  0693                     	;# 
  1328  0694                     	;# 
  1329  0695                     	;# 
  1330  0696                     	;# 
  1331  0697                     	;# 
  1332  0698                     	;# 
  1333  0699                     	;# 
  1334  069A                     	;# 
  1335  069B                     	;# 
  1336  069C                     	;# 
  1337  069D                     	;# 
  1338  069E                     	;# 
  1339  069F                     	;# 
  1340  0E0F                     	;# 
  1341  0E10                     	;# 
  1342  0E11                     	;# 
  1343  0E12                     	;# 
  1344  0E13                     	;# 
  1345  0E14                     	;# 
  1346  0E15                     	;# 
  1347  0E17                     	;# 
  1348  0E20                     	;# 
  1349  0E21                     	;# 
  1350  0E22                     	;# 
  1351  0E24                     	;# 
  1352  0E25                     	;# 
  1353  0E28                     	;# 
  1354  0E29                     	;# 
  1355  0E2A                     	;# 
  1356  0E2B                     	;# 
  1357  0E90                     	;# 
  1358  0E91                     	;# 
  1359  0E92                     	;# 
  1360  0E93                     	;# 
  1361  0E94                     	;# 
  1362  0E95                     	;# 
  1363  0E96                     	;# 
  1364  0E97                     	;# 
  1365  0E98                     	;# 
  1366  0E99                     	;# 
  1367  0E9A                     	;# 
  1368  0E9B                     	;# 
  1369  0E9C                     	;# 
  1370  0E9D                     	;# 
  1371  0E9E                     	;# 
  1372  0E9F                     	;# 
  1373  0EA0                     	;# 
  1374  0EA1                     	;# 
  1375  0EA2                     	;# 
  1376  0EA3                     	;# 
  1377  0EA4                     	;# 
  1378  0EA5                     	;# 
  1379  0EA6                     	;# 
  1380  0EA7                     	;# 
  1381  0EA8                     	;# 
  1382  0EA9                     	;# 
  1383  0EAA                     	;# 
  1384  0EAB                     	;# 
  1385  0EAC                     	;# 
  1386  0EAD                     	;# 
  1387  0EAE                     	;# 
  1388  0EAF                     	;# 
  1389  0EB0                     	;# 
  1390  0EB1                     	;# 
  1391  0EB2                     	;# 
  1392  0F0F                     	;# 
  1393  0F10                     	;# 
  1394  0F11                     	;# 
  1395  0F12                     	;# 
  1396  0F13                     	;# 
  1397  0F14                     	;# 
  1398  0F15                     	;# 
  1399  0F16                     	;# 
  1400  0F17                     	;# 
  1401  0F18                     	;# 
  1402  0F19                     	;# 
  1403  0F1A                     	;# 
  1404  0F1B                     	;# 
  1405  0F1C                     	;# 
  1406  0F1D                     	;# 
  1407  0F1E                     	;# 
  1408  0F1F                     	;# 
  1409  0F20                     	;# 
  1410  0F21                     	;# 
  1411  0F22                     	;# 
  1412  0F23                     	;# 
  1413  0F24                     	;# 
  1414  0F25                     	;# 
  1415  0F26                     	;# 
  1416  0F27                     	;# 
  1417  0F28                     	;# 
  1418  0F29                     	;# 
  1419  0F2A                     	;# 
  1420  0F2B                     	;# 
  1421  0F2C                     	;# 
  1422  0F2D                     	;# 
  1423  0F2E                     	;# 
  1424  0F2F                     	;# 
  1425  0F30                     	;# 
  1426  0F31                     	;# 
  1427  0F32                     	;# 
  1428  0F33                     	;# 
  1429  0F34                     	;# 
  1430  0F35                     	;# 
  1431  0F36                     	;# 
  1432  0F37                     	;# 
  1433  0FE4                     	;# 
  1434  0FE5                     	;# 
  1435  0FE6                     	;# 
  1436  0FE7                     	;# 
  1437  0FE8                     	;# 
  1438  0FE9                     	;# 
  1439  0FEA                     	;# 
  1440  0FEB                     	;# 
  1441  0FED                     	;# 
  1442  0FEE                     	;# 
  1443  0FEF                     	;# 
  1444  0000                     	;# 
  1445  0001                     	;# 
  1446  0002                     	;# 
  1447  0003                     	;# 
  1448  0004                     	;# 
  1449  0005                     	;# 
  1450  0006                     	;# 
  1451  0007                     	;# 
  1452  0008                     	;# 
  1453  0009                     	;# 
  1454  000A                     	;# 
  1455  000B                     	;# 
  1456  000C                     	;# 
  1457  000D                     	;# 
  1458  000E                     	;# 
  1459  000F                     	;# 
  1460  0010                     	;# 
  1461  0011                     	;# 
  1462  0012                     	;# 
  1463  0013                     	;# 
  1464  0015                     	;# 
  1465  0016                     	;# 
  1466  0016                     	;# 
  1467  0017                     	;# 
  1468  0018                     	;# 
  1469  0019                     	;# 
  1470  001A                     	;# 
  1471  001B                     	;# 
  1472  001C                     	;# 
  1473  008C                     	;# 
  1474  008D                     	;# 
  1475  008E                     	;# 
  1476  008F                     	;# 
  1477  0090                     	;# 
  1478  0091                     	;# 
  1479  0092                     	;# 
  1480  0093                     	;# 
  1481  0095                     	;# 
  1482  0096                     	;# 
  1483  0097                     	;# 
  1484  0098                     	;# 
  1485  0099                     	;# 
  1486  009A                     	;# 
  1487  009B                     	;# 
  1488  009B                     	;# 
  1489  009C                     	;# 
  1490  009D                     	;# 
  1491  009E                     	;# 
  1492  009F                     	;# 
  1493  010C                     	;# 
  1494  010D                     	;# 
  1495  010E                     	;# 
  1496  010F                     	;# 
  1497  0110                     	;# 
  1498  0111                     	;# 
  1499  0112                     	;# 
  1500  0113                     	;# 
  1501  0114                     	;# 
  1502  0115                     	;# 
  1503  0116                     	;# 
  1504  0117                     	;# 
  1505  0118                     	;# 
  1506  0119                     	;# 
  1507  011A                     	;# 
  1508  011B                     	;# 
  1509  011B                     	;# 
  1510  011C                     	;# 
  1511  018C                     	;# 
  1512  018D                     	;# 
  1513  018E                     	;# 
  1514  018F                     	;# 
  1515  0190                     	;# 
  1516  0191                     	;# 
  1517  0191                     	;# 
  1518  0192                     	;# 
  1519  0193                     	;# 
  1520  0193                     	;# 
  1521  0194                     	;# 
  1522  0195                     	;# 
  1523  0196                     	;# 
  1524  0197                     	;# 
  1525  0199                     	;# 
  1526  0199                     	;# 
  1527  0199                     	;# 
  1528  019A                     	;# 
  1529  019A                     	;# 
  1530  019A                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019C                     	;# 
  1537  019C                     	;# 
  1538  019C                     	;# 
  1539  019D                     	;# 
  1540  019D                     	;# 
  1541  019D                     	;# 
  1542  019E                     	;# 
  1543  019E                     	;# 
  1544  019E                     	;# 
  1545  019F                     	;# 
  1546  019F                     	;# 
  1547  019F                     	;# 
  1548  019F                     	;# 
  1549  019F                     	;# 
  1550  020C                     	;# 
  1551  020D                     	;# 
  1552  020E                     	;# 
  1553  020F                     	;# 
  1554  0210                     	;# 
  1555  0211                     	;# 
  1556  0211                     	;# 
  1557  0212                     	;# 
  1558  0212                     	;# 
  1559  0213                     	;# 
  1560  0213                     	;# 
  1561  0214                     	;# 
  1562  0214                     	;# 
  1563  0215                     	;# 
  1564  0215                     	;# 
  1565  0215                     	;# 
  1566  0215                     	;# 
  1567  0216                     	;# 
  1568  0216                     	;# 
  1569  0217                     	;# 
  1570  0217                     	;# 
  1571  028C                     	;# 
  1572  028D                     	;# 
  1573  028E                     	;# 
  1574  028F                     	;# 
  1575  0290                     	;# 
  1576  0291                     	;# 
  1577  0291                     	;# 
  1578  0292                     	;# 
  1579  0293                     	;# 
  1580  0293                     	;# 
  1581  0298                     	;# 
  1582  0298                     	;# 
  1583  0299                     	;# 
  1584  029A                     	;# 
  1585  029A                     	;# 
  1586  029E                     	;# 
  1587  030C                     	;# 
  1588  030D                     	;# 
  1589  030E                     	;# 
  1590  030F                     	;# 
  1591  0310                     	;# 
  1592  038C                     	;# 
  1593  038D                     	;# 
  1594  038E                     	;# 
  1595  038F                     	;# 
  1596  0390                     	;# 
  1597  0391                     	;# 
  1598  0392                     	;# 
  1599  0393                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  0397                     	;# 
  1604  0398                     	;# 
  1605  0399                     	;# 
  1606  039D                     	;# 
  1607  039E                     	;# 
  1608  039F                     	;# 
  1609  0415                     	;# 
  1610  0416                     	;# 
  1611  0417                     	;# 
  1612  041C                     	;# 
  1613  041D                     	;# 
  1614  041E                     	;# 
  1615  0498                     	;# 
  1616  0498                     	;# 
  1617  0499                     	;# 
  1618  049A                     	;# 
  1619  049B                     	;# 
  1620  049B                     	;# 
  1621  049C                     	;# 
  1622  049D                     	;# 
  1623  049E                     	;# 
  1624  049F                     	;# 
  1625  0511                     	;# 
  1626  0515                     	;# 
  1627  0617                     	;# 
  1628  0618                     	;# 
  1629  0619                     	;# 
  1630  0619                     	;# 
  1631  061A                     	;# 
  1632  061B                     	;# 
  1633  061C                     	;# 
  1634  061C                     	;# 
  1635  0691                     	;# 
  1636  0692                     	;# 
  1637  0693                     	;# 
  1638  0694                     	;# 
  1639  0695                     	;# 
  1640  0696                     	;# 
  1641  0697                     	;# 
  1642  0698                     	;# 
  1643  0699                     	;# 
  1644  069A                     	;# 
  1645  069B                     	;# 
  1646  069C                     	;# 
  1647  069D                     	;# 
  1648  069E                     	;# 
  1649  069F                     	;# 
  1650  0E0F                     	;# 
  1651  0E10                     	;# 
  1652  0E11                     	;# 
  1653  0E12                     	;# 
  1654  0E13                     	;# 
  1655  0E14                     	;# 
  1656  0E15                     	;# 
  1657  0E17                     	;# 
  1658  0E20                     	;# 
  1659  0E21                     	;# 
  1660  0E22                     	;# 
  1661  0E24                     	;# 
  1662  0E25                     	;# 
  1663  0E28                     	;# 
  1664  0E29                     	;# 
  1665  0E2A                     	;# 
  1666  0E2B                     	;# 
  1667  0E90                     	;# 
  1668  0E91                     	;# 
  1669  0E92                     	;# 
  1670  0E93                     	;# 
  1671  0E94                     	;# 
  1672  0E95                     	;# 
  1673  0E96                     	;# 
  1674  0E97                     	;# 
  1675  0E98                     	;# 
  1676  0E99                     	;# 
  1677  0E9A                     	;# 
  1678  0E9B                     	;# 
  1679  0E9C                     	;# 
  1680  0E9D                     	;# 
  1681  0E9E                     	;# 
  1682  0E9F                     	;# 
  1683  0EA0                     	;# 
  1684  0EA1                     	;# 
  1685  0EA2                     	;# 
  1686  0EA3                     	;# 
  1687  0EA4                     	;# 
  1688  0EA5                     	;# 
  1689  0EA6                     	;# 
  1690  0EA7                     	;# 
  1691  0EA8                     	;# 
  1692  0EA9                     	;# 
  1693  0EAA                     	;# 
  1694  0EAB                     	;# 
  1695  0EAC                     	;# 
  1696  0EAD                     	;# 
  1697  0EAE                     	;# 
  1698  0EAF                     	;# 
  1699  0EB0                     	;# 
  1700  0EB1                     	;# 
  1701  0EB2                     	;# 
  1702  0F0F                     	;# 
  1703  0F10                     	;# 
  1704  0F11                     	;# 
  1705  0F12                     	;# 
  1706  0F13                     	;# 
  1707  0F14                     	;# 
  1708  0F15                     	;# 
  1709  0F16                     	;# 
  1710  0F17                     	;# 
  1711  0F18                     	;# 
  1712  0F19                     	;# 
  1713  0F1A                     	;# 
  1714  0F1B                     	;# 
  1715  0F1C                     	;# 
  1716  0F1D                     	;# 
  1717  0F1E                     	;# 
  1718  0F1F                     	;# 
  1719  0F20                     	;# 
  1720  0F21                     	;# 
  1721  0F22                     	;# 
  1722  0F23                     	;# 
  1723  0F24                     	;# 
  1724  0F25                     	;# 
  1725  0F26                     	;# 
  1726  0F27                     	;# 
  1727  0F28                     	;# 
  1728  0F29                     	;# 
  1729  0F2A                     	;# 
  1730  0F2B                     	;# 
  1731  0F2C                     	;# 
  1732  0F2D                     	;# 
  1733  0F2E                     	;# 
  1734  0F2F                     	;# 
  1735  0F30                     	;# 
  1736  0F31                     	;# 
  1737  0F32                     	;# 
  1738  0F33                     	;# 
  1739  0F34                     	;# 
  1740  0F35                     	;# 
  1741  0F36                     	;# 
  1742  0F37                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  000F                     	;# 
  1770  0010                     	;# 
  1771  0011                     	;# 
  1772  0012                     	;# 
  1773  0013                     	;# 
  1774  0015                     	;# 
  1775  0016                     	;# 
  1776  0016                     	;# 
  1777  0017                     	;# 
  1778  0018                     	;# 
  1779  0019                     	;# 
  1780  001A                     	;# 
  1781  001B                     	;# 
  1782  001C                     	;# 
  1783  008C                     	;# 
  1784  008D                     	;# 
  1785  008E                     	;# 
  1786  008F                     	;# 
  1787  0090                     	;# 
  1788  0091                     	;# 
  1789  0092                     	;# 
  1790  0093                     	;# 
  1791  0095                     	;# 
  1792  0096                     	;# 
  1793  0097                     	;# 
  1794  0098                     	;# 
  1795  0099                     	;# 
  1796  009A                     	;# 
  1797  009B                     	;# 
  1798  009B                     	;# 
  1799  009C                     	;# 
  1800  009D                     	;# 
  1801  009E                     	;# 
  1802  009F                     	;# 
  1803  010C                     	;# 
  1804  010D                     	;# 
  1805  010E                     	;# 
  1806  010F                     	;# 
  1807  0110                     	;# 
  1808  0111                     	;# 
  1809  0112                     	;# 
  1810  0113                     	;# 
  1811  0114                     	;# 
  1812  0115                     	;# 
  1813  0116                     	;# 
  1814  0117                     	;# 
  1815  0118                     	;# 
  1816  0119                     	;# 
  1817  011A                     	;# 
  1818  011B                     	;# 
  1819  011B                     	;# 
  1820  011C                     	;# 
  1821  018C                     	;# 
  1822  018D                     	;# 
  1823  018E                     	;# 
  1824  018F                     	;# 
  1825  0190                     	;# 
  1826  0191                     	;# 
  1827  0191                     	;# 
  1828  0192                     	;# 
  1829  0193                     	;# 
  1830  0193                     	;# 
  1831  0194                     	;# 
  1832  0195                     	;# 
  1833  0196                     	;# 
  1834  0197                     	;# 
  1835  0199                     	;# 
  1836  0199                     	;# 
  1837  0199                     	;# 
  1838  019A                     	;# 
  1839  019A                     	;# 
  1840  019A                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019B                     	;# 
  1844  019B                     	;# 
  1845  019B                     	;# 
  1846  019C                     	;# 
  1847  019C                     	;# 
  1848  019C                     	;# 
  1849  019D                     	;# 
  1850  019D                     	;# 
  1851  019D                     	;# 
  1852  019E                     	;# 
  1853  019E                     	;# 
  1854  019E                     	;# 
  1855  019F                     	;# 
  1856  019F                     	;# 
  1857  019F                     	;# 
  1858  019F                     	;# 
  1859  019F                     	;# 
  1860  020C                     	;# 
  1861  020D                     	;# 
  1862  020E                     	;# 
  1863  020F                     	;# 
  1864  0210                     	;# 
  1865  0211                     	;# 
  1866  0211                     	;# 
  1867  0212                     	;# 
  1868  0212                     	;# 
  1869  0213                     	;# 
  1870  0213                     	;# 
  1871  0214                     	;# 
  1872  0214                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0215                     	;# 
  1876  0215                     	;# 
  1877  0216                     	;# 
  1878  0216                     	;# 
  1879  0217                     	;# 
  1880  0217                     	;# 
  1881  028C                     	;# 
  1882  028D                     	;# 
  1883  028E                     	;# 
  1884  028F                     	;# 
  1885  0290                     	;# 
  1886  0291                     	;# 
  1887  0291                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0293                     	;# 
  1891  0298                     	;# 
  1892  0298                     	;# 
  1893  0299                     	;# 
  1894  029A                     	;# 
  1895  029A                     	;# 
  1896  029E                     	;# 
  1897  030C                     	;# 
  1898  030D                     	;# 
  1899  030E                     	;# 
  1900  030F                     	;# 
  1901  0310                     	;# 
  1902  038C                     	;# 
  1903  038D                     	;# 
  1904  038E                     	;# 
  1905  038F                     	;# 
  1906  0390                     	;# 
  1907  0391                     	;# 
  1908  0392                     	;# 
  1909  0393                     	;# 
  1910  0394                     	;# 
  1911  0395                     	;# 
  1912  0396                     	;# 
  1913  0397                     	;# 
  1914  0398                     	;# 
  1915  0399                     	;# 
  1916  039D                     	;# 
  1917  039E                     	;# 
  1918  039F                     	;# 
  1919  0415                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  041C                     	;# 
  1923  041D                     	;# 
  1924  041E                     	;# 
  1925  0498                     	;# 
  1926  0498                     	;# 
  1927  0499                     	;# 
  1928  049A                     	;# 
  1929  049B                     	;# 
  1930  049B                     	;# 
  1931  049C                     	;# 
  1932  049D                     	;# 
  1933  049E                     	;# 
  1934  049F                     	;# 
  1935  0511                     	;# 
  1936  0515                     	;# 
  1937  0617                     	;# 
  1938  0618                     	;# 
  1939  0619                     	;# 
  1940  0619                     	;# 
  1941  061A                     	;# 
  1942  061B                     	;# 
  1943  061C                     	;# 
  1944  061C                     	;# 
  1945  0691                     	;# 
  1946  0692                     	;# 
  1947  0693                     	;# 
  1948  0694                     	;# 
  1949  0695                     	;# 
  1950  0696                     	;# 
  1951  0697                     	;# 
  1952  0698                     	;# 
  1953  0699                     	;# 
  1954  069A                     	;# 
  1955  069B                     	;# 
  1956  069C                     	;# 
  1957  069D                     	;# 
  1958  069E                     	;# 
  1959  069F                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E17                     	;# 
  1968  0E20                     	;# 
  1969  0E21                     	;# 
  1970  0E22                     	;# 
  1971  0E24                     	;# 
  1972  0E25                     	;# 
  1973  0E28                     	;# 
  1974  0E29                     	;# 
  1975  0E2A                     	;# 
  1976  0E2B                     	;# 
  1977  0E90                     	;# 
  1978  0E91                     	;# 
  1979  0E92                     	;# 
  1980  0E93                     	;# 
  1981  0E94                     	;# 
  1982  0E95                     	;# 
  1983  0E96                     	;# 
  1984  0E97                     	;# 
  1985  0E98                     	;# 
  1986  0E99                     	;# 
  1987  0E9A                     	;# 
  1988  0E9B                     	;# 
  1989  0E9C                     	;# 
  1990  0E9D                     	;# 
  1991  0E9E                     	;# 
  1992  0E9F                     	;# 
  1993  0EA0                     	;# 
  1994  0EA1                     	;# 
  1995  0EA2                     	;# 
  1996  0EA3                     	;# 
  1997  0EA4                     	;# 
  1998  0EA5                     	;# 
  1999  0EA6                     	;# 
  2000  0EA7                     	;# 
  2001  0EA8                     	;# 
  2002  0EA9                     	;# 
  2003  0EAA                     	;# 
  2004  0EAB                     	;# 
  2005  0EAC                     	;# 
  2006  0EAD                     	;# 
  2007  0EAE                     	;# 
  2008  0EAF                     	;# 
  2009  0EB0                     	;# 
  2010  0EB1                     	;# 
  2011  0EB2                     	;# 
  2012  0F0F                     	;# 
  2013  0F10                     	;# 
  2014  0F11                     	;# 
  2015  0F12                     	;# 
  2016  0F13                     	;# 
  2017  0F14                     	;# 
  2018  0F15                     	;# 
  2019  0F16                     	;# 
  2020  0F17                     	;# 
  2021  0F18                     	;# 
  2022  0F19                     	;# 
  2023  0F1A                     	;# 
  2024  0F1B                     	;# 
  2025  0F1C                     	;# 
  2026  0F1D                     	;# 
  2027  0F1E                     	;# 
  2028  0F1F                     	;# 
  2029  0F20                     	;# 
  2030  0F21                     	;# 
  2031  0F22                     	;# 
  2032  0F23                     	;# 
  2033  0F24                     	;# 
  2034  0F25                     	;# 
  2035  0F26                     	;# 
  2036  0F27                     	;# 
  2037  0F28                     	;# 
  2038  0F29                     	;# 
  2039  0F2A                     	;# 
  2040  0F2B                     	;# 
  2041  0F2C                     	;# 
  2042  0F2D                     	;# 
  2043  0F2E                     	;# 
  2044  0F2F                     	;# 
  2045  0F30                     	;# 
  2046  0F31                     	;# 
  2047  0F32                     	;# 
  2048  0F33                     	;# 
  2049  0F34                     	;# 
  2050  0F35                     	;# 
  2051  0F36                     	;# 
  2052  0F37                     	;# 
  2053  0FE4                     	;# 
  2054  0FE5                     	;# 
  2055  0FE6                     	;# 
  2056  0FE7                     	;# 
  2057  0FE8                     	;# 
  2058  0FE9                     	;# 
  2059  0FEA                     	;# 
  2060  0FEB                     	;# 
  2061  0FED                     	;# 
  2062  0FEE                     	;# 
  2063  0FEF                     	;# 
  2064  0000                     	;# 
  2065  0001                     	;# 
  2066  0002                     	;# 
  2067  0003                     	;# 
  2068  0004                     	;# 
  2069  0005                     	;# 
  2070  0006                     	;# 
  2071  0007                     	;# 
  2072  0008                     	;# 
  2073  0009                     	;# 
  2074  000A                     	;# 
  2075  000B                     	;# 
  2076  000C                     	;# 
  2077  000D                     	;# 
  2078  000E                     	;# 
  2079  000F                     	;# 
  2080  0010                     	;# 
  2081  0011                     	;# 
  2082  0012                     	;# 
  2083  0013                     	;# 
  2084  0015                     	;# 
  2085  0016                     	;# 
  2086  0016                     	;# 
  2087  0017                     	;# 
  2088  0018                     	;# 
  2089  0019                     	;# 
  2090  001A                     	;# 
  2091  001B                     	;# 
  2092  001C                     	;# 
  2093  008C                     	;# 
  2094  008D                     	;# 
  2095  008E                     	;# 
  2096  008F                     	;# 
  2097  0090                     	;# 
  2098  0091                     	;# 
  2099  0092                     	;# 
  2100  0093                     	;# 
  2101  0095                     	;# 
  2102  0096                     	;# 
  2103  0097                     	;# 
  2104  0098                     	;# 
  2105  0099                     	;# 
  2106  009A                     	;# 
  2107  009B                     	;# 
  2108  009B                     	;# 
  2109  009C                     	;# 
  2110  009D                     	;# 
  2111  009E                     	;# 
  2112  009F                     	;# 
  2113  010C                     	;# 
  2114  010D                     	;# 
  2115  010E                     	;# 
  2116  010F                     	;# 
  2117  0110                     	;# 
  2118  0111                     	;# 
  2119  0112                     	;# 
  2120  0113                     	;# 
  2121  0114                     	;# 
  2122  0115                     	;# 
  2123  0116                     	;# 
  2124  0117                     	;# 
  2125  0118                     	;# 
  2126  0119                     	;# 
  2127  011A                     	;# 
  2128  011B                     	;# 
  2129  011B                     	;# 
  2130  011C                     	;# 
  2131  018C                     	;# 
  2132  018D                     	;# 
  2133  018E                     	;# 
  2134  018F                     	;# 
  2135  0190                     	;# 
  2136  0191                     	;# 
  2137  0191                     	;# 
  2138  0192                     	;# 
  2139  0193                     	;# 
  2140  0193                     	;# 
  2141  0194                     	;# 
  2142  0195                     	;# 
  2143  0196                     	;# 
  2144  0197                     	;# 
  2145  0199                     	;# 
  2146  0199                     	;# 
  2147  0199                     	;# 
  2148  019A                     	;# 
  2149  019A                     	;# 
  2150  019A                     	;# 
  2151  019B                     	;# 
  2152  019B                     	;# 
  2153  019B                     	;# 
  2154  019B                     	;# 
  2155  019B                     	;# 
  2156  019C                     	;# 
  2157  019C                     	;# 
  2158  019C                     	;# 
  2159  019D                     	;# 
  2160  019D                     	;# 
  2161  019D                     	;# 
  2162  019E                     	;# 
  2163  019E                     	;# 
  2164  019E                     	;# 
  2165  019F                     	;# 
  2166  019F                     	;# 
  2167  019F                     	;# 
  2168  019F                     	;# 
  2169  019F                     	;# 
  2170  020C                     	;# 
  2171  020D                     	;# 
  2172  020E                     	;# 
  2173  020F                     	;# 
  2174  0210                     	;# 
  2175  0211                     	;# 
  2176  0211                     	;# 
  2177  0212                     	;# 
  2178  0212                     	;# 
  2179  0213                     	;# 
  2180  0213                     	;# 
  2181  0214                     	;# 
  2182  0214                     	;# 
  2183  0215                     	;# 
  2184  0215                     	;# 
  2185  0215                     	;# 
  2186  0215                     	;# 
  2187  0216                     	;# 
  2188  0216                     	;# 
  2189  0217                     	;# 
  2190  0217                     	;# 
  2191  028C                     	;# 
  2192  028D                     	;# 
  2193  028E                     	;# 
  2194  028F                     	;# 
  2195  0290                     	;# 
  2196  0291                     	;# 
  2197  0291                     	;# 
  2198  0292                     	;# 
  2199  0293                     	;# 
  2200  0293                     	;# 
  2201  0298                     	;# 
  2202  0298                     	;# 
  2203  0299                     	;# 
  2204  029A                     	;# 
  2205  029A                     	;# 
  2206  029E                     	;# 
  2207  030C                     	;# 
  2208  030D                     	;# 
  2209  030E                     	;# 
  2210  030F                     	;# 
  2211  0310                     	;# 
  2212  038C                     	;# 
  2213  038D                     	;# 
  2214  038E                     	;# 
  2215  038F                     	;# 
  2216  0390                     	;# 
  2217  0391                     	;# 
  2218  0392                     	;# 
  2219  0393                     	;# 
  2220  0394                     	;# 
  2221  0395                     	;# 
  2222  0396                     	;# 
  2223  0397                     	;# 
  2224  0398                     	;# 
  2225  0399                     	;# 
  2226  039D                     	;# 
  2227  039E                     	;# 
  2228  039F                     	;# 
  2229  0415                     	;# 
  2230  0416                     	;# 
  2231  0417                     	;# 
  2232  041C                     	;# 
  2233  041D                     	;# 
  2234  041E                     	;# 
  2235  0498                     	;# 
  2236  0498                     	;# 
  2237  0499                     	;# 
  2238  049A                     	;# 
  2239  049B                     	;# 
  2240  049B                     	;# 
  2241  049C                     	;# 
  2242  049D                     	;# 
  2243  049E                     	;# 
  2244  049F                     	;# 
  2245  0511                     	;# 
  2246  0515                     	;# 
  2247  0617                     	;# 
  2248  0618                     	;# 
  2249  0619                     	;# 
  2250  0619                     	;# 
  2251  061A                     	;# 
  2252  061B                     	;# 
  2253  061C                     	;# 
  2254  061C                     	;# 
  2255  0691                     	;# 
  2256  0692                     	;# 
  2257  0693                     	;# 
  2258  0694                     	;# 
  2259  0695                     	;# 
  2260  0696                     	;# 
  2261  0697                     	;# 
  2262  0698                     	;# 
  2263  0699                     	;# 
  2264  069A                     	;# 
  2265  069B                     	;# 
  2266  069C                     	;# 
  2267  069D                     	;# 
  2268  069E                     	;# 
  2269  069F                     	;# 
  2270  0E0F                     	;# 
  2271  0E10                     	;# 
  2272  0E11                     	;# 
  2273  0E12                     	;# 
  2274  0E13                     	;# 
  2275  0E14                     	;# 
  2276  0E15                     	;# 
  2277  0E17                     	;# 
  2278  0E20                     	;# 
  2279  0E21                     	;# 
  2280  0E22                     	;# 
  2281  0E24                     	;# 
  2282  0E25                     	;# 
  2283  0E28                     	;# 
  2284  0E29                     	;# 
  2285  0E2A                     	;# 
  2286  0E2B                     	;# 
  2287  0E90                     	;# 
  2288  0E91                     	;# 
  2289  0E92                     	;# 
  2290  0E93                     	;# 
  2291  0E94                     	;# 
  2292  0E95                     	;# 
  2293  0E96                     	;# 
  2294  0E97                     	;# 
  2295  0E98                     	;# 
  2296  0E99                     	;# 
  2297  0E9A                     	;# 
  2298  0E9B                     	;# 
  2299  0E9C                     	;# 
  2300  0E9D                     	;# 
  2301  0E9E                     	;# 
  2302  0E9F                     	;# 
  2303  0EA0                     	;# 
  2304  0EA1                     	;# 
  2305  0EA2                     	;# 
  2306  0EA3                     	;# 
  2307  0EA4                     	;# 
  2308  0EA5                     	;# 
  2309  0EA6                     	;# 
  2310  0EA7                     	;# 
  2311  0EA8                     	;# 
  2312  0EA9                     	;# 
  2313  0EAA                     	;# 
  2314  0EAB                     	;# 
  2315  0EAC                     	;# 
  2316  0EAD                     	;# 
  2317  0EAE                     	;# 
  2318  0EAF                     	;# 
  2319  0EB0                     	;# 
  2320  0EB1                     	;# 
  2321  0EB2                     	;# 
  2322  0F0F                     	;# 
  2323  0F10                     	;# 
  2324  0F11                     	;# 
  2325  0F12                     	;# 
  2326  0F13                     	;# 
  2327  0F14                     	;# 
  2328  0F15                     	;# 
  2329  0F16                     	;# 
  2330  0F17                     	;# 
  2331  0F18                     	;# 
  2332  0F19                     	;# 
  2333  0F1A                     	;# 
  2334  0F1B                     	;# 
  2335  0F1C                     	;# 
  2336  0F1D                     	;# 
  2337  0F1E                     	;# 
  2338  0F1F                     	;# 
  2339  0F20                     	;# 
  2340  0F21                     	;# 
  2341  0F22                     	;# 
  2342  0F23                     	;# 
  2343  0F24                     	;# 
  2344  0F25                     	;# 
  2345  0F26                     	;# 
  2346  0F27                     	;# 
  2347  0F28                     	;# 
  2348  0F29                     	;# 
  2349  0F2A                     	;# 
  2350  0F2B                     	;# 
  2351  0F2C                     	;# 
  2352  0F2D                     	;# 
  2353  0F2E                     	;# 
  2354  0F2F                     	;# 
  2355  0F30                     	;# 
  2356  0F31                     	;# 
  2357  0F32                     	;# 
  2358  0F33                     	;# 
  2359  0F34                     	;# 
  2360  0F35                     	;# 
  2361  0F36                     	;# 
  2362  0F37                     	;# 
  2363  0FE4                     	;# 
  2364  0FE5                     	;# 
  2365  0FE6                     	;# 
  2366  0FE7                     	;# 
  2367  0FE8                     	;# 
  2368  0FE9                     	;# 
  2369  0FEA                     	;# 
  2370  0FEB                     	;# 
  2371  0FED                     	;# 
  2372  0FEE                     	;# 
  2373  0FEF                     	;_messageBuffer
  2374                           
  2375                           	psect	idataBANK3
  2376  30AA                     __pidataBANK3:	
  2377                           
  2378                           ;initializer for stoa@F1174
  2379  30AA  3428               	retlw	40
  2380  30AB  346E               	retlw	110
  2381  30AC  3475               	retlw	117
  2382  30AD  346C               	retlw	108
  2383  30AE  346C               	retlw	108
  2384  30AF  3429               	retlw	41
  2385  30B0  3400               	retlw	0
  2386                           
  2387                           	psect	stringtext1
  2388  39C4                     __pstringtext1:	
  2389  39C4                     _OCD_threshold_setting:	
  2390  39C4  3411               	retlw	17
  2391  39C5  3400               	retlw	0
  2392  39C6  3416               	retlw	22
  2393  39C7  3400               	retlw	0
  2394  39C8  341C               	retlw	28
  2395  39C9  3400               	retlw	0
  2396  39CA  3421               	retlw	33
  2397  39CB  3400               	retlw	0
  2398  39CC  3427               	retlw	39
  2399  39CD  3400               	retlw	0
  2400  39CE  342C               	retlw	44
  2401  39CF  3400               	retlw	0
  2402  39D0  3432               	retlw	50
  2403  39D1  3400               	retlw	0
  2404  39D2  3438               	retlw	56
  2405  39D3  3400               	retlw	0
  2406  39D4  343D               	retlw	61
  2407  39D5  3400               	retlw	0
  2408  39D6  3443               	retlw	67
  2409  39D7  3400               	retlw	0
  2410  39D8  3448               	retlw	72
  2411  39D9  3400               	retlw	0
  2412  39DA  344E               	retlw	78
  2413  39DB  3400               	retlw	0
  2414  39DC  3453               	retlw	83
  2415  39DD  3400               	retlw	0
  2416  39DE  3459               	retlw	89
  2417  39DF  3400               	retlw	0
  2418  39E0  345E               	retlw	94
  2419  39E1  3400               	retlw	0
  2420  39E2  3464               	retlw	100
  2421  39E3  3400               	retlw	0
  2422  39E4                     __end_of_OCD_threshold_setting:	
  2423                           
  2424                           	psect	stringtext2
  2425  3AD8                     __pstringtext2:	
  2426  3AD8                     _OCD_delay_setting:	
  2427  3AD8  3408               	retlw	8
  2428  3AD9  3400               	retlw	0
  2429  3ADA  3414               	retlw	20
  2430  3ADB  3400               	retlw	0
  2431  3ADC  3428               	retlw	40
  2432  3ADD  3400               	retlw	0
  2433  3ADE  3450               	retlw	80
  2434  3ADF  3400               	retlw	0
  2435  3AE0  34A0               	retlw	160
  2436  3AE1  3400               	retlw	0
  2437  3AE2  3440               	retlw	64
  2438  3AE3  3401               	retlw	1
  2439  3AE4  3480               	retlw	128
  2440  3AE5  3402               	retlw	2
  2441  3AE6  3400               	retlw	0
  2442  3AE7  3405               	retlw	5
  2443  3AE8                     __end_of_OCD_delay_setting:	
  2444                           
  2445                           	psect	stringtext3
  2446  3AE8                     __pstringtext3:	
  2447  3AE8                     _SCD_threshold_setting:	
  2448  3AE8  342C               	retlw	44
  2449  3AE9  3400               	retlw	0
  2450  3AEA  3443               	retlw	67
  2451  3AEB  3400               	retlw	0
  2452  3AEC  3459               	retlw	89
  2453  3AED  3400               	retlw	0
  2454  3AEE  346F               	retlw	111
  2455  3AEF  3400               	retlw	0
  2456  3AF0  3485               	retlw	133
  2457  3AF1  3400               	retlw	0
  2458  3AF2  349B               	retlw	155
  2459  3AF3  3400               	retlw	0
  2460  3AF4  34B2               	retlw	178
  2461  3AF5  3400               	retlw	0
  2462  3AF6  34C8               	retlw	200
  2463  3AF7  3400               	retlw	0
  2464  3AF8                     __end_of_SCD_threshold_setting:	
  2465                           
  2466                           	psect	stringtext4
  2467  3AF8                     __pstringtext4:	
  2468  3AF8                     _OV_delay_setting:	
  2469  3AF8  3401               	retlw	1
  2470  3AF9  3400               	retlw	0
  2471  3AFA  3402               	retlw	2
  2472  3AFB  3400               	retlw	0
  2473  3AFC  3404               	retlw	4
  2474  3AFD  3400               	retlw	0
  2475  3AFE  3408               	retlw	8
  2476  3AFF  3400               	retlw	0
  2477  3B00                     __end_of_OV_delay_setting:	
  2478                           
  2479                           	psect	stringtext5
  2480  3B00                     __pstringtext5:	
  2481  3B00                     _UV_delay_setting:	
  2482  3B00  3401               	retlw	1
  2483  3B01  3400               	retlw	0
  2484  3B02  3404               	retlw	4
  2485  3B03  3400               	retlw	0
  2486  3B04  3408               	retlw	8
  2487  3B05  3400               	retlw	0
  2488  3B06  3410               	retlw	16
  2489  3B07  3400               	retlw	0
  2490  3B08                     __end_of_UV_delay_setting:	
  2491                           
  2492                           	psect	stringtext6
  2493  3B08                     __pstringtext6:	
  2494  3B08                     _SCD_delay_setting:	
  2495  3B08  3446               	retlw	70
  2496  3B09  3400               	retlw	0
  2497  3B0A  3464               	retlw	100
  2498  3B0B  3400               	retlw	0
  2499  3B0C  34C8               	retlw	200
  2500  3B0D  3400               	retlw	0
  2501  3B0E  3490               	retlw	144
  2502  3B0F  3401               	retlw	1
  2503  3B10                     __end_of_SCD_delay_setting:	
  2504                           
  2505                           	psect	stringtext7
  2506  3800                     __pstringtext7:	
  2507  3800                     _ATmega328_address:	
  2508  3800  3402               	retlw	2
  2509  3801  3400               	retlw	0
  2510  3802                     __end_of_ATmega328_address:	
  2511  0016                     _TMR1	set	22
  2512  0003                     _STATUSbits	set	3
  2513  000B                     _INTCONbits	set	11
  2514  0018                     _T1CONbits	set	24
  2515  0011                     _PIR1bits	set	17
  2516  0097                     _WDTCONbits	set	151
  2517  0090                     _TRISEbits	set	144
  2518  008C                     _TRISAbits	set	140
  2519  008E                     _TRISCbits	set	142
  2520  008D                     _TRISBbits	set	141
  2521  0091                     _PIE1bits	set	145
  2522  0476                     _TRISC6	set	1142
  2523  0477                     _TRISC7	set	1143
  2524  04CF                     _SPLLEN	set	1231
  2525  04CE                     _IRCF3	set	1230
  2526  04CD                     _IRCF2	set	1229
  2527  04CC                     _IRCF1	set	1228
  2528  04CB                     _IRCF0	set	1227
  2529  04C9                     _SCS1	set	1225
  2530  04C8                     _SCS0	set	1224
  2531  0110                     _LATEbits	set	272
  2532  010C                     _LATAbits	set	268
  2533  019A                     _TX1REG	set	410
  2534  0199                     _RC1REG	set	409
  2535  019D                     _RC1STAbits	set	413
  2536  019B                     _SPBRG	set	411
  2537  018E                     _ANSELCbits	set	398
  2538  018D                     _ANSELBbits	set	397
  2539  0CF5                     _TXEN	set	3317
  2540  0CEC                     _CREN	set	3308
  2541  0CEF                     _SPEN	set	3311
  2542  0CF4                     _SYNC	set	3316
  2543  0CF2                     _BRGH	set	3314
  2544  0216                     _SSPCON2bits	set	534
  2545  0211                     _SSPBUF	set	529
  2546  0212                     _SSPADD	set	530
  2547  0215                     _SSPCONbits	set	533
  2548  0E24                     _RXPPSbits	set	3620
  2549  0E20                     _SSPCLKPPSbits	set	3616
  2550  0E21                     _SSPDATPPSbits	set	3617
  2551  0E0F                     _PPSLOCKbits	set	3599
  2552  0E0F                     _PPSLOCK	set	3599
  2553  0E9A                     _RB2PPSbits	set	3738
  2554  0EA5                     _RC5PPSbits	set	3749
  2555  0EA4                     _RC4PPSbits	set	3748
  2556  3802                     STR_8:	
  2557  3802  3453               	retlw	83	;'S'
  2558  3803  3465               	retlw	101	;'e'
  2559  3804  3474               	retlw	116	;'t'
  2560  3805  3420               	retlw	32	;' '
  2561  3806  344F               	retlw	79	;'O'
  2562  3807  3476               	retlw	118	;'v'
  2563  3808  3465               	retlw	101	;'e'
  2564  3809  3472               	retlw	114	;'r'
  2565  380A  342D               	retlw	45	;'-'
  2566  380B  3463               	retlw	99	;'c'
  2567  380C  3475               	retlw	117	;'u'
  2568  380D  3472               	retlw	114	;'r'
  2569  380E  3472               	retlw	114	;'r'
  2570  380F  3465               	retlw	101	;'e'
  2571  3810  346E               	retlw	110	;'n'
  2572  3811  3474               	retlw	116	;'t'
  2573  3812  3420               	retlw	32	;' '
  2574  3813  3464               	retlw	100	;'d'
  2575  3814  3469               	retlw	105	;'i'
  2576  3815  3473               	retlw	115	;'s'
  2577  3816  3463               	retlw	99	;'c'
  2578  3817  3468               	retlw	104	;'h'
  2579  3818  3461               	retlw	97	;'a'
  2580  3819  3472               	retlw	114	;'r'
  2581  381A  3467               	retlw	103	;'g'
  2582  381B  3465               	retlw	101	;'e'
  2583  381C  3420               	retlw	32	;' '
  2584  381D  3470               	retlw	112	;'p'
  2585  381E  3472               	retlw	114	;'r'
  2586  381F  346F               	retlw	111	;'o'
  2587  3820  3474               	retlw	116	;'t'
  2588  3821  3465               	retlw	101	;'e'
  2589  3822  3463               	retlw	99	;'c'
  2590  3823  3474               	retlw	116	;'t'
  2591  3824  3469               	retlw	105	;'i'
  2592  3825  346F               	retlw	111	;'o'
  2593  3826  346E               	retlw	110	;'n'
  2594  3827  3420               	retlw	32	;' '
  2595  3828  3420               	retlw	32	;' '
  2596  3829  3466               	retlw	102	;'f'
  2597  382A  346F               	retlw	111	;'o'
  2598  382B  3472               	retlw	114	;'r'
  2599  382C  3420               	retlw	32	;' '
  2600  382D  3441               	retlw	65	;'A'
  2601  382E  3446               	retlw	70	;'F'
  2602  382F  3445               	retlw	69	;'E'
  2603  3830  343A               	retlw	58	;':'
  2604  3831  3420               	retlw	32	;' '
  2605  3832  3425               	retlw	37	;'%'
  2606  3833  346C               	retlw	108	;'l'
  2607  3834  3475               	retlw	117	;'u'
  2608  3835  3420               	retlw	32	;' '
  2609  3836  346D               	retlw	109	;'m'
  2610  3837  3441               	retlw	65	;'A'
  2611  3838  340A               	retlw	10
  2612  3839  340D               	retlw	13
  2613  383A  3400               	retlw	0
  2614                           
  2615                           	psect	stringtext8
  2616  383B                     __pstringtext8:	
  2617  383B                     STR_4:	
  2618  383B  3441               	retlw	65	;'A'
  2619  383C  3474               	retlw	116	;'t'
  2620  383D  3474               	retlw	116	;'t'
  2621  383E  3465               	retlw	101	;'e'
  2622  383F  346D               	retlw	109	;'m'
  2623  3840  3470               	retlw	112	;'p'
  2624  3841  3474               	retlw	116	;'t'
  2625  3842  3420               	retlw	32	;' '
  2626  3843  3474               	retlw	116	;'t'
  2627  3844  346F               	retlw	111	;'o'
  2628  3845  3420               	retlw	32	;' '
  2629  3846  3473               	retlw	115	;'s'
  2630  3847  3465               	retlw	101	;'e'
  2631  3848  3474               	retlw	116	;'t'
  2632  3849  3420               	retlw	32	;' '
  2633  384A  3469               	retlw	105	;'i'
  2634  384B  346E               	retlw	110	;'n'
  2635  384C  3469               	retlw	105	;'i'
  2636  384D  3474               	retlw	116	;'t'
  2637  384E  3469               	retlw	105	;'i'
  2638  384F  3461               	retlw	97	;'a'
  2639  3850  346C               	retlw	108	;'l'
  2640  3851  3420               	retlw	32	;' '
  2641  3852  3473               	retlw	115	;'s'
  2642  3853  3479               	retlw	121	;'y'
  2643  3854  3473               	retlw	115	;'s'
  2644  3855  3474               	retlw	116	;'t'
  2645  3856  3465               	retlw	101	;'e'
  2646  3857  346D               	retlw	109	;'m'
  2647  3858  3420               	retlw	32	;' '
  2648  3859  3470               	retlw	112	;'p'
  2649  385A  3461               	retlw	97	;'a'
  2650  385B  3472               	retlw	114	;'r'
  2651  385C  3461               	retlw	97	;'a'
  2652  385D  346D               	retlw	109	;'m'
  2653  385E  3465               	retlw	101	;'e'
  2654  385F  3474               	retlw	116	;'t'
  2655  3860  3465               	retlw	101	;'e'
  2656  3861  3472               	retlw	114	;'r'
  2657  3862  3473               	retlw	115	;'s'
  2658  3863  3420               	retlw	32	;' '
  2659  3864  3474               	retlw	116	;'t'
  2660  3865  346F               	retlw	111	;'o'
  2661  3866  3420               	retlw	32	;' '
  2662  3867  3441               	retlw	65	;'A'
  2663  3868  3446               	retlw	70	;'F'
  2664  3869  3445               	retlw	69	;'E'
  2665  386A  342E               	retlw	46	;'.'
  2666  386B  342E               	retlw	46	;'.'
  2667  386C  342E               	retlw	46	;'.'
  2668  386D  340A               	retlw	10
  2669  386E  340D               	retlw	13
  2670  386F  3400               	retlw	0
  2671                           
  2672                           	psect	stringtext9
  2673  3870                     __pstringtext9:	
  2674  3870                     STR_2:	
  2675  3870  3443               	retlw	67	;'C'
  2676  3871  346F               	retlw	111	;'o'
  2677  3872  346D               	retlw	109	;'m'
  2678  3873  346D               	retlw	109	;'m'
  2679  3874  3475               	retlw	117	;'u'
  2680  3875  346E               	retlw	110	;'n'
  2681  3876  3469               	retlw	105	;'i'
  2682  3877  3463               	retlw	99	;'c'
  2683  3878  3461               	retlw	97	;'a'
  2684  3879  3474               	retlw	116	;'t'
  2685  387A  3469               	retlw	105	;'i'
  2686  387B  346F               	retlw	111	;'o'
  2687  387C  346E               	retlw	110	;'n'
  2688  387D  3420               	retlw	32	;' '
  2689  387E  3477               	retlw	119	;'w'
  2690  387F  3469               	retlw	105	;'i'
  2691  3880  3474               	retlw	116	;'t'
  2692  3881  3468               	retlw	104	;'h'
  2693  3882  3420               	retlw	32	;' '
  2694  3883  3442               	retlw	66	;'B'
  2695  3884  3451               	retlw	81	;'Q'
  2696  3885  3437               	retlw	55	;'7'
  2697  3886  3436               	retlw	54	;'6'
  2698  3887  3439               	retlw	57	;'9'
  2699  3888  3432               	retlw	50	;'2'
  2700  3889  3430               	retlw	48	;'0'
  2701  388A  3420               	retlw	32	;' '
  2702  388B  3441               	retlw	65	;'A'
  2703  388C  3446               	retlw	70	;'F'
  2704  388D  3445               	retlw	69	;'E'
  2705  388E  3420               	retlw	32	;' '
  2706  388F  3465               	retlw	101	;'e'
  2707  3890  3473               	retlw	115	;'s'
  2708  3891  3474               	retlw	116	;'t'
  2709  3892  3461               	retlw	97	;'a'
  2710  3893  3462               	retlw	98	;'b'
  2711  3894  346C               	retlw	108	;'l'
  2712  3895  3469               	retlw	105	;'i'
  2713  3896  3473               	retlw	115	;'s'
  2714  3897  3468               	retlw	104	;'h'
  2715  3898  3465               	retlw	101	;'e'
  2716  3899  3464               	retlw	100	;'d'
  2717  389A  3421               	retlw	33	;'!'
  2718  389B  340A               	retlw	10
  2719  389C  340D               	retlw	13
  2720  389D  3400               	retlw	0
  2721                           
  2722                           	psect	stringtext10
  2723  389E                     __pstringtext10:	
  2724  389E                     STR_10:	
  2725  389E  344E               	retlw	78	;'N'
  2726  389F  346F               	retlw	111	;'o'
  2727  38A0  3477               	retlw	119	;'w'
  2728  38A1  3420               	retlw	32	;' '
  2729  38A2  3472               	retlw	114	;'r'
  2730  38A3  3465               	retlw	101	;'e'
  2731  38A4  3461               	retlw	97	;'a'
  2732  38A5  3464               	retlw	100	;'d'
  2733  38A6  3469               	retlw	105	;'i'
  2734  38A7  346E               	retlw	110	;'n'
  2735  38A8  3467               	retlw	103	;'g'
  2736  38A9  3420               	retlw	32	;' '
  2737  38AA  3441               	retlw	65	;'A'
  2738  38AB  3446               	retlw	70	;'F'
  2739  38AC  3445               	retlw	69	;'E'
  2740  38AD  3420               	retlw	32	;' '
  2741  38AE  3464               	retlw	100	;'d'
  2742  38AF  3461               	retlw	97	;'a'
  2743  38B0  3474               	retlw	116	;'t'
  2744  38B1  3461               	retlw	97	;'a'
  2745  38B2  3420               	retlw	32	;' '
  2746  38B3  3461               	retlw	97	;'a'
  2747  38B4  3474               	retlw	116	;'t'
  2748  38B5  3420               	retlw	32	;' '
  2749  38B6  3472               	retlw	114	;'r'
  2750  38B7  3465               	retlw	101	;'e'
  2751  38B8  3467               	retlw	103	;'g'
  2752  38B9  3475               	retlw	117	;'u'
  2753  38BA  346C               	retlw	108	;'l'
  2754  38BB  3461               	retlw	97	;'a'
  2755  38BC  3472               	retlw	114	;'r'
  2756  38BD  3420               	retlw	32	;' '
  2757  38BE  3469               	retlw	105	;'i'
  2758  38BF  346E               	retlw	110	;'n'
  2759  38C0  3474               	retlw	116	;'t'
  2760  38C1  3465               	retlw	101	;'e'
  2761  38C2  3472               	retlw	114	;'r'
  2762  38C3  3476               	retlw	118	;'v'
  2763  38C4  3461               	retlw	97	;'a'
  2764  38C5  346C               	retlw	108	;'l'
  2765  38C6  3473               	retlw	115	;'s'
  2766  38C7  342E               	retlw	46	;'.'
  2767  38C8  340A               	retlw	10
  2768  38C9  340D               	retlw	13
  2769  38CA  3400               	retlw	0
  2770                           
  2771                           	psect	stringtext11
  2772  38CB                     __pstringtext11:	
  2773  38CB                     STR_7:	
  2774  38CB  3453               	retlw	83	;'S'
  2775  38CC  3465               	retlw	101	;'e'
  2776  38CD  3474               	retlw	116	;'t'
  2777  38CE  3420               	retlw	32	;' '
  2778  38CF  3473               	retlw	115	;'s'
  2779  38D0  3468               	retlw	104	;'h'
  2780  38D1  346F               	retlw	111	;'o'
  2781  38D2  3472               	retlw	114	;'r'
  2782  38D3  3474               	retlw	116	;'t'
  2783  38D4  3420               	retlw	32	;' '
  2784  38D5  3463               	retlw	99	;'c'
  2785  38D6  3469               	retlw	105	;'i'
  2786  38D7  3472               	retlw	114	;'r'
  2787  38D8  3463               	retlw	99	;'c'
  2788  38D9  3475               	retlw	117	;'u'
  2789  38DA  3469               	retlw	105	;'i'
  2790  38DB  3474               	retlw	116	;'t'
  2791  38DC  3420               	retlw	32	;' '
  2792  38DD  3463               	retlw	99	;'c'
  2793  38DE  3475               	retlw	117	;'u'
  2794  38DF  3472               	retlw	114	;'r'
  2795  38E0  3472               	retlw	114	;'r'
  2796  38E1  3465               	retlw	101	;'e'
  2797  38E2  346E               	retlw	110	;'n'
  2798  38E3  3474               	retlw	116	;'t'
  2799  38E4  3420               	retlw	32	;' '
  2800  38E5  3466               	retlw	102	;'f'
  2801  38E6  346F               	retlw	111	;'o'
  2802  38E7  3472               	retlw	114	;'r'
  2803  38E8  3420               	retlw	32	;' '
  2804  38E9  3441               	retlw	65	;'A'
  2805  38EA  3446               	retlw	70	;'F'
  2806  38EB  3445               	retlw	69	;'E'
  2807  38EC  343A               	retlw	58	;':'
  2808  38ED  3420               	retlw	32	;' '
  2809  38EE  3425               	retlw	37	;'%'
  2810  38EF  346C               	retlw	108	;'l'
  2811  38F0  3475               	retlw	117	;'u'
  2812  38F1  3420               	retlw	32	;' '
  2813  38F2  346D               	retlw	109	;'m'
  2814  38F3  3441               	retlw	65	;'A'
  2815  38F4  340A               	retlw	10
  2816  38F5  340D               	retlw	13
  2817  38F6  3400               	retlw	0
  2818                           
  2819                           	psect	stringtext12
  2820  38F7                     __pstringtext12:	
  2821  38F7                     STR_3:	
  2822  38F7  344F               	retlw	79	;'O'
  2823  38F8  3462               	retlw	98	;'b'
  2824  38F9  3474               	retlw	116	;'t'
  2825  38FA  3461               	retlw	97	;'a'
  2826  38FB  3469               	retlw	105	;'i'
  2827  38FC  346E               	retlw	110	;'n'
  2828  38FD  3465               	retlw	101	;'e'
  2829  38FE  3464               	retlw	100	;'d'
  2830  38FF  3420               	retlw	32	;' '
  2831  3900  3461               	retlw	97	;'a'
  2832  3901  3464               	retlw	100	;'d'
  2833  3902  3463               	retlw	99	;'c'
  2834  3903  344F               	retlw	79	;'O'
  2835  3904  3466               	retlw	102	;'f'
  2836  3905  3466               	retlw	102	;'f'
  2837  3906  3473               	retlw	115	;'s'
  2838  3907  3465               	retlw	101	;'e'
  2839  3908  3474               	retlw	116	;'t'
  2840  3909  3420               	retlw	32	;' '
  2841  390A  343D               	retlw	61	;'='
  2842  390B  3420               	retlw	32	;' '
  2843  390C  3425               	retlw	37	;'%'
  2844  390D  3469               	retlw	105	;'i'
  2845  390E  3420               	retlw	32	;' '
  2846  390F  3461               	retlw	97	;'a'
  2847  3910  346E               	retlw	110	;'n'
  2848  3911  3464               	retlw	100	;'d'
  2849  3912  3420               	retlw	32	;' '
  2850  3913  3461               	retlw	97	;'a'
  2851  3914  3464               	retlw	100	;'d'
  2852  3915  3463               	retlw	99	;'c'
  2853  3916  3447               	retlw	71	;'G'
  2854  3917  3461               	retlw	97	;'a'
  2855  3918  3469               	retlw	105	;'i'
  2856  3919  346E               	retlw	110	;'n'
  2857  391A  3420               	retlw	32	;' '
  2858  391B  343D               	retlw	61	;'='
  2859  391C  3420               	retlw	32	;' '
  2860  391D  3425               	retlw	37	;'%'
  2861  391E  3469               	retlw	105	;'i'
  2862  391F  340A               	retlw	10
  2863  3920  340D               	retlw	13
  2864  3921  3400               	retlw	0
  2865                           
  2866                           	psect	stringtext13
  2867  3922                     __pstringtext13:	
  2868  3922                     STR_9:	
  2869  3922  3449               	retlw	73	;'I'
  2870  3923  346E               	retlw	110	;'n'
  2871  3924  3469               	retlw	105	;'i'
  2872  3925  3474               	retlw	116	;'t'
  2873  3926  3469               	retlw	105	;'i'
  2874  3927  3461               	retlw	97	;'a'
  2875  3928  346C               	retlw	108	;'l'
  2876  3929  3420               	retlw	32	;' '
  2877  392A  3470               	retlw	112	;'p'
  2878  392B  3461               	retlw	97	;'a'
  2879  392C  3472               	retlw	114	;'r'
  2880  392D  3461               	retlw	97	;'a'
  2881  392E  346D               	retlw	109	;'m'
  2882  392F  3465               	retlw	101	;'e'
  2883  3930  3474               	retlw	116	;'t'
  2884  3931  3465               	retlw	101	;'e'
  2885  3932  3472               	retlw	114	;'r'
  2886  3933  3473               	retlw	115	;'s'
  2887  3934  3420               	retlw	32	;' '
  2888  3935  3466               	retlw	102	;'f'
  2889  3936  346F               	retlw	111	;'o'
  2890  3937  3472               	retlw	114	;'r'
  2891  3938  3420               	retlw	32	;' '
  2892  3939  3442               	retlw	66	;'B'
  2893  393A  3451               	retlw	81	;'Q'
  2894  393B  3437               	retlw	55	;'7'
  2895  393C  3436               	retlw	54	;'6'
  2896  393D  3439               	retlw	57	;'9'
  2897  393E  3432               	retlw	50	;'2'
  2898  393F  3430               	retlw	48	;'0'
  2899  3940  3420               	retlw	32	;' '
  2900  3941  3441               	retlw	65	;'A'
  2901  3942  3446               	retlw	70	;'F'
  2902  3943  3445               	retlw	69	;'E'
  2903  3944  3420               	retlw	32	;' '
  2904  3945  3473               	retlw	115	;'s'
  2905  3946  3465               	retlw	101	;'e'
  2906  3947  3474               	retlw	116	;'t'
  2907  3948  3421               	retlw	33	;'!'
  2908  3949  340A               	retlw	10
  2909  394A  340D               	retlw	13
  2910  394B  3400               	retlw	0
  2911                           
  2912                           	psect	stringtext14
  2913  394C                     __pstringtext14:	
  2914  394C                     STR_6:	
  2915  394C  3443               	retlw	67	;'C'
  2916  394D  3475               	retlw	117	;'u'
  2917  394E  3472               	retlw	114	;'r'
  2918  394F  3472               	retlw	114	;'r'
  2919  3950  3465               	retlw	101	;'e'
  2920  3951  346E               	retlw	110	;'n'
  2921  3952  3474               	retlw	116	;'t'
  2922  3953  3420               	retlw	32	;' '
  2923  3954  3473               	retlw	115	;'s'
  2924  3955  3465               	retlw	101	;'e'
  2925  3956  346E               	retlw	110	;'n'
  2926  3957  3473               	retlw	115	;'s'
  2927  3958  3465               	retlw	101	;'e'
  2928  3959  3420               	retlw	32	;' '
  2929  395A  3472               	retlw	114	;'r'
  2930  395B  3465               	retlw	101	;'e'
  2931  395C  3473               	retlw	115	;'s'
  2932  395D  3469               	retlw	105	;'i'
  2933  395E  3473               	retlw	115	;'s'
  2934  395F  3474               	retlw	116	;'t'
  2935  3960  346F               	retlw	111	;'o'
  2936  3961  3472               	retlw	114	;'r'
  2937  3962  3420               	retlw	32	;' '
  2938  3963  3476               	retlw	118	;'v'
  2939  3964  3461               	retlw	97	;'a'
  2940  3965  346C               	retlw	108	;'l'
  2941  3966  3475               	retlw	117	;'u'
  2942  3967  3465               	retlw	101	;'e'
  2943  3968  343A               	retlw	58	;':'
  2944  3969  3420               	retlw	32	;' '
  2945  396A  3425               	retlw	37	;'%'
  2946  396B  342E               	retlw	46	;'.'
  2947  396C  3434               	retlw	52	;'4'
  2948  396D  3466               	retlw	102	;'f'
  2949  396E  3420               	retlw	32	;' '
  2950  396F  346F               	retlw	111	;'o'
  2951  3970  3468               	retlw	104	;'h'
  2952  3971  346D               	retlw	109	;'m'
  2953  3972  3473               	retlw	115	;'s'
  2954  3973  340A               	retlw	10
  2955  3974  340D               	retlw	13
  2956  3975  3400               	retlw	0
  2957                           
  2958                           	psect	stringtext15
  2959  3976                     __pstringtext15:	
  2960  3976                     STR_1:	
  2961  3976  3441               	retlw	65	;'A'
  2962  3977  3474               	retlw	116	;'t'
  2963  3978  3474               	retlw	116	;'t'
  2964  3979  3465               	retlw	101	;'e'
  2965  397A  346D               	retlw	109	;'m'
  2966  397B  3470               	retlw	112	;'p'
  2967  397C  3474               	retlw	116	;'t'
  2968  397D  3469               	retlw	105	;'i'
  2969  397E  346E               	retlw	110	;'n'
  2970  397F  3467               	retlw	103	;'g'
  2971  3980  3420               	retlw	32	;' '
  2972  3981  3474               	retlw	116	;'t'
  2973  3982  346F               	retlw	111	;'o'
  2974  3983  3420               	retlw	32	;' '
  2975  3984  3463               	retlw	99	;'c'
  2976  3985  346F               	retlw	111	;'o'
  2977  3986  346D               	retlw	109	;'m'
  2978  3987  346D               	retlw	109	;'m'
  2979  3988  3475               	retlw	117	;'u'
  2980  3989  346E               	retlw	110	;'n'
  2981  398A  3469               	retlw	105	;'i'
  2982  398B  3463               	retlw	99	;'c'
  2983  398C  3461               	retlw	97	;'a'
  2984  398D  3474               	retlw	116	;'t'
  2985  398E  3465               	retlw	101	;'e'
  2986  398F  3420               	retlw	32	;' '
  2987  3990  3477               	retlw	119	;'w'
  2988  3991  3469               	retlw	105	;'i'
  2989  3992  3474               	retlw	116	;'t'
  2990  3993  3468               	retlw	104	;'h'
  2991  3994  3420               	retlw	32	;' '
  2992  3995  3441               	retlw	65	;'A'
  2993  3996  3446               	retlw	70	;'F'
  2994  3997  3445               	retlw	69	;'E'
  2995  3998  342E               	retlw	46	;'.'
  2996  3999  342E               	retlw	46	;'.'
  2997  399A  342E               	retlw	46	;'.'
  2998  399B  340A               	retlw	10
  2999  399C  340D               	retlw	13
  3000  399D  3400               	retlw	0
  3001                           
  3002                           	psect	stringtext16
  3003  399E                     __pstringtext16:	
  3004  399E                     STR_11:	
  3005  399E  3450               	retlw	80	;'P'
  3006  399F  3472               	retlw	114	;'r'
  3007  39A0  3469               	retlw	105	;'i'
  3008  39A1  346E               	retlw	110	;'n'
  3009  39A2  3474               	retlw	116	;'t'
  3010  39A3  3469               	retlw	105	;'i'
  3011  39A4  346E               	retlw	110	;'n'
  3012  39A5  3467               	retlw	103	;'g'
  3013  39A6  3420               	retlw	32	;' '
  3014  39A7  346F               	retlw	111	;'o'
  3015  39A8  3475               	retlw	117	;'u'
  3016  39A9  3474               	retlw	116	;'t'
  3017  39AA  3420               	retlw	32	;' '
  3018  39AB  3441               	retlw	65	;'A'
  3019  39AC  3446               	retlw	70	;'F'
  3020  39AD  3445               	retlw	69	;'E'
  3021  39AE  3420               	retlw	32	;' '
  3022  39AF  3472               	retlw	114	;'r'
  3023  39B0  3465               	retlw	101	;'e'
  3024  39B1  3467               	retlw	103	;'g'
  3025  39B2  3469               	retlw	105	;'i'
  3026  39B3  3473               	retlw	115	;'s'
  3027  39B4  3474               	retlw	116	;'t'
  3028  39B5  3465               	retlw	101	;'e'
  3029  39B6  3472               	retlw	114	;'r'
  3030  39B7  3420               	retlw	32	;' '
  3031  39B8  3476               	retlw	118	;'v'
  3032  39B9  3461               	retlw	97	;'a'
  3033  39BA  346C               	retlw	108	;'l'
  3034  39BB  3475               	retlw	117	;'u'
  3035  39BC  3465               	retlw	101	;'e'
  3036  39BD  3473               	retlw	115	;'s'
  3037  39BE  342E               	retlw	46	;'.'
  3038  39BF  342E               	retlw	46	;'.'
  3039  39C0  342E               	retlw	46	;'.'
  3040  39C1  340A               	retlw	10
  3041  39C2  340D               	retlw	13
  3042  39C3  3400               	retlw	0
  3043                           
  3044                           	psect	stringtext17
  3045  39E4                     __pstringtext17:	
  3046  39E4                     STR_15:	
  3047  39E4  3430               	retlw	48	;'0'
  3048  39E5  3478               	retlw	120	;'x'
  3049  39E6  3430               	retlw	48	;'0'
  3050  39E7  3434               	retlw	52	;'4'
  3051  39E8  3420               	retlw	32	;' '
  3052  39E9  3453               	retlw	83	;'S'
  3053  39EA  3459               	retlw	89	;'Y'
  3054  39EB  3453               	retlw	83	;'S'
  3055  39EC  345F               	retlw	95	;'_'
  3056  39ED  3443               	retlw	67	;'C'
  3057  39EE  3454               	retlw	84	;'T'
  3058  39EF  3452               	retlw	82	;'R'
  3059  39F0  344C               	retlw	76	;'L'
  3060  39F1  3431               	retlw	49	;'1'
  3061  39F2  343A               	retlw	58	;':'
  3062  39F3  3420               	retlw	32	;' '
  3063  39F4  3425               	retlw	37	;'%'
  3064  39F5  3469               	retlw	105	;'i'
  3065  39F6  3420               	retlw	32	;' '
  3066  39F7  340A               	retlw	10
  3067  39F8  340D               	retlw	13
  3068  39F9  3400               	retlw	0
  3069                           
  3070                           	psect	stringtext18
  3071  39FA                     __pstringtext18:	
  3072  39FA                     STR_16:	
  3073  39FA  3430               	retlw	48	;'0'
  3074  39FB  3478               	retlw	120	;'x'
  3075  39FC  3430               	retlw	48	;'0'
  3076  39FD  3435               	retlw	53	;'5'
  3077  39FE  3420               	retlw	32	;' '
  3078  39FF  3453               	retlw	83	;'S'
  3079  3A00  3459               	retlw	89	;'Y'
  3080  3A01  3453               	retlw	83	;'S'
  3081  3A02  345F               	retlw	95	;'_'
  3082  3A03  3443               	retlw	67	;'C'
  3083  3A04  3454               	retlw	84	;'T'
  3084  3A05  3452               	retlw	82	;'R'
  3085  3A06  344C               	retlw	76	;'L'
  3086  3A07  3432               	retlw	50	;'2'
  3087  3A08  343A               	retlw	58	;':'
  3088  3A09  3420               	retlw	32	;' '
  3089  3A0A  3425               	retlw	37	;'%'
  3090  3A0B  3469               	retlw	105	;'i'
  3091  3A0C  3420               	retlw	32	;' '
  3092  3A0D  340A               	retlw	10
  3093  3A0E  340D               	retlw	13
  3094  3A0F  3400               	retlw	0
  3095                           
  3096                           	psect	stringtext19
  3097  3A10                     __pstringtext19:	
  3098  3A10                     STR_14:	
  3099  3A10  3430               	retlw	48	;'0'
  3100  3A11  3478               	retlw	120	;'x'
  3101  3A12  3430               	retlw	48	;'0'
  3102  3A13  3431               	retlw	49	;'1'
  3103  3A14  3420               	retlw	32	;' '
  3104  3A15  3443               	retlw	67	;'C'
  3105  3A16  3445               	retlw	69	;'E'
  3106  3A17  344C               	retlw	76	;'L'
  3107  3A18  344C               	retlw	76	;'L'
  3108  3A19  3442               	retlw	66	;'B'
  3109  3A1A  3441               	retlw	65	;'A'
  3110  3A1B  344C               	retlw	76	;'L'
  3111  3A1C  3431               	retlw	49	;'1'
  3112  3A1D  343A               	retlw	58	;':'
  3113  3A1E  3420               	retlw	32	;' '
  3114  3A1F  3425               	retlw	37	;'%'
  3115  3A20  3469               	retlw	105	;'i'
  3116  3A21  3420               	retlw	32	;' '
  3117  3A22  340A               	retlw	10
  3118  3A23  340D               	retlw	13
  3119  3A24  3400               	retlw	0
  3120                           
  3121                           	psect	stringtext20
  3122  3A25                     __pstringtext20:	
  3123  3A25                     STR_17:	
  3124  3A25  3430               	retlw	48	;'0'
  3125  3A26  3478               	retlw	120	;'x'
  3126  3A27  3430               	retlw	48	;'0'
  3127  3A28  3436               	retlw	54	;'6'
  3128  3A29  3420               	retlw	32	;' '
  3129  3A2A  3450               	retlw	80	;'P'
  3130  3A2B  3452               	retlw	82	;'R'
  3131  3A2C  344F               	retlw	79	;'O'
  3132  3A2D  3454               	retlw	84	;'T'
  3133  3A2E  3445               	retlw	69	;'E'
  3134  3A2F  3443               	retlw	67	;'C'
  3135  3A30  3454               	retlw	84	;'T'
  3136  3A31  3431               	retlw	49	;'1'
  3137  3A32  343A               	retlw	58	;':'
  3138  3A33  3420               	retlw	32	;' '
  3139  3A34  3425               	retlw	37	;'%'
  3140  3A35  3469               	retlw	105	;'i'
  3141  3A36  3420               	retlw	32	;' '
  3142  3A37  340A               	retlw	10
  3143  3A38  340D               	retlw	13
  3144  3A39  3400               	retlw	0
  3145                           
  3146                           	psect	stringtext21
  3147  3A3A                     __pstringtext21:	
  3148  3A3A                     STR_18:	
  3149  3A3A  3430               	retlw	48	;'0'
  3150  3A3B  3478               	retlw	120	;'x'
  3151  3A3C  3430               	retlw	48	;'0'
  3152  3A3D  3437               	retlw	55	;'7'
  3153  3A3E  3420               	retlw	32	;' '
  3154  3A3F  3450               	retlw	80	;'P'
  3155  3A40  3452               	retlw	82	;'R'
  3156  3A41  344F               	retlw	79	;'O'
  3157  3A42  3454               	retlw	84	;'T'
  3158  3A43  3445               	retlw	69	;'E'
  3159  3A44  3443               	retlw	67	;'C'
  3160  3A45  3454               	retlw	84	;'T'
  3161  3A46  3432               	retlw	50	;'2'
  3162  3A47  343A               	retlw	58	;':'
  3163  3A48  3420               	retlw	32	;' '
  3164  3A49  3425               	retlw	37	;'%'
  3165  3A4A  3469               	retlw	105	;'i'
  3166  3A4B  3420               	retlw	32	;' '
  3167  3A4C  340A               	retlw	10
  3168  3A4D  340D               	retlw	13
  3169  3A4E  3400               	retlw	0
  3170                           
  3171                           	psect	stringtext22
  3172  3A4F                     __pstringtext22:	
  3173  3A4F                     STR_19:	
  3174  3A4F  3430               	retlw	48	;'0'
  3175  3A50  3478               	retlw	120	;'x'
  3176  3A51  3430               	retlw	48	;'0'
  3177  3A52  3438               	retlw	56	;'8'
  3178  3A53  3420               	retlw	32	;' '
  3179  3A54  3450               	retlw	80	;'P'
  3180  3A55  3452               	retlw	82	;'R'
  3181  3A56  344F               	retlw	79	;'O'
  3182  3A57  3454               	retlw	84	;'T'
  3183  3A58  3445               	retlw	69	;'E'
  3184  3A59  3443               	retlw	67	;'C'
  3185  3A5A  3454               	retlw	84	;'T'
  3186  3A5B  3433               	retlw	51	;'3'
  3187  3A5C  343A               	retlw	58	;':'
  3188  3A5D  3420               	retlw	32	;' '
  3189  3A5E  3425               	retlw	37	;'%'
  3190  3A5F  3469               	retlw	105	;'i'
  3191  3A60  3420               	retlw	32	;' '
  3192  3A61  340A               	retlw	10
  3193  3A62  340D               	retlw	13
  3194  3A63  3400               	retlw	0
  3195                           
  3196                           	psect	stringtext23
  3197  3A64                     __pstringtext23:	
  3198  3A64                     STR_13:	
  3199  3A64  3430               	retlw	48	;'0'
  3200  3A65  3478               	retlw	120	;'x'
  3201  3A66  3430               	retlw	48	;'0'
  3202  3A67  3430               	retlw	48	;'0'
  3203  3A68  3420               	retlw	32	;' '
  3204  3A69  3453               	retlw	83	;'S'
  3205  3A6A  3459               	retlw	89	;'Y'
  3206  3A6B  3453               	retlw	83	;'S'
  3207  3A6C  345F               	retlw	95	;'_'
  3208  3A6D  3453               	retlw	83	;'S'
  3209  3A6E  3454               	retlw	84	;'T'
  3210  3A6F  3441               	retlw	65	;'A'
  3211  3A70  3454               	retlw	84	;'T'
  3212  3A71  343A               	retlw	58	;':'
  3213  3A72  3420               	retlw	32	;' '
  3214  3A73  3425               	retlw	37	;'%'
  3215  3A74  3469               	retlw	105	;'i'
  3216  3A75  3420               	retlw	32	;' '
  3217  3A76  340A               	retlw	10
  3218  3A77  340D               	retlw	13
  3219  3A78  3400               	retlw	0
  3220                           
  3221                           	psect	stringtext24
  3222  3A79                     __pstringtext24:	
  3223  3A79                     STR_20:	
  3224  3A79  3430               	retlw	48	;'0'
  3225  3A7A  3478               	retlw	120	;'x'
  3226  3A7B  3430               	retlw	48	;'0'
  3227  3A7C  3439               	retlw	57	;'9'
  3228  3A7D  3420               	retlw	32	;' '
  3229  3A7E  344F               	retlw	79	;'O'
  3230  3A7F  3456               	retlw	86	;'V'
  3231  3A80  345F               	retlw	95	;'_'
  3232  3A81  3454               	retlw	84	;'T'
  3233  3A82  3452               	retlw	82	;'R'
  3234  3A83  3449               	retlw	73	;'I'
  3235  3A84  3450               	retlw	80	;'P'
  3236  3A85  343A               	retlw	58	;':'
  3237  3A86  3420               	retlw	32	;' '
  3238  3A87  3425               	retlw	37	;'%'
  3239  3A88  3469               	retlw	105	;'i'
  3240  3A89  3420               	retlw	32	;' '
  3241  3A8A  340A               	retlw	10
  3242  3A8B  340D               	retlw	13
  3243  3A8C  3400               	retlw	0
  3244                           
  3245                           	psect	stringtext25
  3246  3A8D                     __pstringtext25:	
  3247  3A8D                     STR_21:	
  3248  3A8D  3430               	retlw	48	;'0'
  3249  3A8E  3478               	retlw	120	;'x'
  3250  3A8F  3430               	retlw	48	;'0'
  3251  3A90  3441               	retlw	65	;'A'
  3252  3A91  3420               	retlw	32	;' '
  3253  3A92  3455               	retlw	85	;'U'
  3254  3A93  3456               	retlw	86	;'V'
  3255  3A94  345F               	retlw	95	;'_'
  3256  3A95  3454               	retlw	84	;'T'
  3257  3A96  3452               	retlw	82	;'R'
  3258  3A97  3449               	retlw	73	;'I'
  3259  3A98  3450               	retlw	80	;'P'
  3260  3A99  343A               	retlw	58	;':'
  3261  3A9A  3420               	retlw	32	;' '
  3262  3A9B  3425               	retlw	37	;'%'
  3263  3A9C  3469               	retlw	105	;'i'
  3264  3A9D  3420               	retlw	32	;' '
  3265  3A9E  340A               	retlw	10
  3266  3A9F  340D               	retlw	13
  3267  3AA0  3400               	retlw	0
  3268                           
  3269                           	psect	stringtext26
  3270  3AA1                     __pstringtext26:	
  3271  3AA1                     STR_22:	
  3272  3AA1  3430               	retlw	48	;'0'
  3273  3AA2  3478               	retlw	120	;'x'
  3274  3AA3  3430               	retlw	48	;'0'
  3275  3AA4  3442               	retlw	66	;'B'
  3276  3AA5  3420               	retlw	32	;' '
  3277  3AA6  3443               	retlw	67	;'C'
  3278  3AA7  3443               	retlw	67	;'C'
  3279  3AA8  345F               	retlw	95	;'_'
  3280  3AA9  3443               	retlw	67	;'C'
  3281  3AAA  3446               	retlw	70	;'F'
  3282  3AAB  3447               	retlw	71	;'G'
  3283  3AAC  343A               	retlw	58	;':'
  3284  3AAD  3420               	retlw	32	;' '
  3285  3AAE  3425               	retlw	37	;'%'
  3286  3AAF  3469               	retlw	105	;'i'
  3287  3AB0  3420               	retlw	32	;' '
  3288  3AB1  340A               	retlw	10
  3289  3AB2  340D               	retlw	13
  3290  3AB3  3400               	retlw	0
  3291                           
  3292                           	psect	stringtext27
  3293  3AB4                     __pstringtext27:	
  3294  3AB4                     STR_23:	
  3295  3AB4  3430               	retlw	48	;'0'
  3296  3AB5  3478               	retlw	120	;'x'
  3297  3AB6  3433               	retlw	51	;'3'
  3298  3AB7  3432               	retlw	50	;'2'
  3299  3AB8  3420               	retlw	32	;' '
  3300  3AB9  3443               	retlw	67	;'C'
  3301  3ABA  3443               	retlw	67	;'C'
  3302  3ABB  345F               	retlw	95	;'_'
  3303  3ABC  3448               	retlw	72	;'H'
  3304  3ABD  3449               	retlw	73	;'I'
  3305  3ABE  343A               	retlw	58	;':'
  3306  3ABF  3420               	retlw	32	;' '
  3307  3AC0  3425               	retlw	37	;'%'
  3308  3AC1  3469               	retlw	105	;'i'
  3309  3AC2  3420               	retlw	32	;' '
  3310  3AC3  340A               	retlw	10
  3311  3AC4  340D               	retlw	13
  3312  3AC5  3400               	retlw	0
  3313                           
  3314                           	psect	stringtext28
  3315  3AC6                     __pstringtext28:	
  3316  3AC6                     STR_24:	
  3317  3AC6  3430               	retlw	48	;'0'
  3318  3AC7  3478               	retlw	120	;'x'
  3319  3AC8  3433               	retlw	51	;'3'
  3320  3AC9  3433               	retlw	51	;'3'
  3321  3ACA  3420               	retlw	32	;' '
  3322  3ACB  3443               	retlw	67	;'C'
  3323  3ACC  3443               	retlw	67	;'C'
  3324  3ACD  345F               	retlw	95	;'_'
  3325  3ACE  344C               	retlw	76	;'L'
  3326  3ACF  344F               	retlw	79	;'O'
  3327  3AD0  343A               	retlw	58	;':'
  3328  3AD1  3420               	retlw	32	;' '
  3329  3AD2  3425               	retlw	37	;'%'
  3330  3AD3  3469               	retlw	105	;'i'
  3331  3AD4  3420               	retlw	32	;' '
  3332  3AD5  340A               	retlw	10
  3333  3AD6  340D               	retlw	13
  3334  3AD7  3400               	retlw	0
  3335                           
  3336                           	psect	stringtext29
  3337  3B10                     __pstringtext29:	
  3338  3B10                     STR_26:	
  3339  3B10  3449               	retlw	73	;'I'
  3340  3B11  344E               	retlw	78	;'N'
  3341  3B12  3446               	retlw	70	;'F'
  3342  3B13  3400               	retlw	0
  3343                           
  3344                           	psect	stringtext30
  3345  3B14                     __pstringtext30:	
  3346  3B14                     STR_30:	
  3347  3B14  344E               	retlw	78	;'N'
  3348  3B15  3441               	retlw	65	;'A'
  3349  3B16  344E               	retlw	78	;'N'
  3350  3B17  3400               	retlw	0
  3351                           
  3352                           	psect	stringtext31
  3353  3B18                     __pstringtext31:	
  3354  3B18                     STR_139:	
  3355  3B18  3468               	retlw	104	;'h'
  3356  3B19  3468               	retlw	104	;'h'
  3357  3B1A  3458               	retlw	88	;'X'
  3358  3B1B  3400               	retlw	0
  3359                           
  3360                           	psect	stringtext32
  3361  3B1C                     __pstringtext32:	
  3362  3B1C                     STR_34:	
  3363  3B1C  3468               	retlw	104	;'h'
  3364  3B1D  3468               	retlw	104	;'h'
  3365  3B1E  3464               	retlw	100	;'d'
  3366  3B1F  3400               	retlw	0
  3367                           
  3368                           	psect	stringtext33
  3369  3B20                     __pstringtext33:	
  3370  3B20                     STR_27:	
  3371  3B20  3469               	retlw	105	;'i'
  3372  3B21  346E               	retlw	110	;'n'
  3373  3B22  3466               	retlw	102	;'f'
  3374  3B23  3400               	retlw	0
  3375                           
  3376                           	psect	stringtext34
  3377  3B24                     __pstringtext34:	
  3378  3B24                     STR_38:	
  3379  3B24  3468               	retlw	104	;'h'
  3380  3B25  3468               	retlw	104	;'h'
  3381  3B26  3469               	retlw	105	;'i'
  3382  3B27  3400               	retlw	0
  3383                           
  3384                           	psect	stringtext35
  3385  3B28                     __pstringtext35:	
  3386  3B28                     STR_31:	
  3387  3B28  346E               	retlw	110	;'n'
  3388  3B29  3461               	retlw	97	;'a'
  3389  3B2A  346E               	retlw	110	;'n'
  3390  3B2B  3400               	retlw	0
  3391                           
  3392                           	psect	stringtext36
  3393  3B2C                     __pstringtext36:	
  3394  3B2C                     STR_95:	
  3395  3B2C  3468               	retlw	104	;'h'
  3396  3B2D  3468               	retlw	104	;'h'
  3397  3B2E  346E               	retlw	110	;'n'
  3398  3B2F  3400               	retlw	0
  3399                           
  3400                           	psect	stringtext37
  3401  3B30                     __pstringtext37:	
  3402  3B30                     STR_75:	
  3403  3B30  3468               	retlw	104	;'h'
  3404  3B31  3468               	retlw	104	;'h'
  3405  3B32  346F               	retlw	111	;'o'
  3406  3B33  3400               	retlw	0
  3407                           
  3408                           	psect	stringtext38
  3409  3B34                     __pstringtext38:	
  3410  3B34                     STR_115:	
  3411  3B34  3468               	retlw	104	;'h'
  3412  3B35  3468               	retlw	104	;'h'
  3413  3B36  3475               	retlw	117	;'u'
  3414  3B37  3400               	retlw	0
  3415                           
  3416                           	psect	stringtext39
  3417  3B38                     __pstringtext39:	
  3418  3B38                     STR_135:	
  3419  3B38  3468               	retlw	104	;'h'
  3420  3B39  3468               	retlw	104	;'h'
  3421  3B3A  3478               	retlw	120	;'x'
  3422  3B3B  3400               	retlw	0
  3423                           
  3424                           	psect	stringtext40
  3425  3B3C                     __pstringtext40:	
  3426  3B3C                     STR_157:	
  3427  3B3C  346C               	retlw	108	;'l'
  3428  3B3D  3458               	retlw	88	;'X'
  3429  3B3E  3400               	retlw	0
  3430                           
  3431                           	psect	stringtext41
  3432  3B3F                     __pstringtext41:	
  3433  3B3F                     STR_166:	
  3434  3B3F  347A               	retlw	122	;'z'
  3435  3B40  3458               	retlw	88	;'X'
  3436  3B41  3400               	retlw	0
  3437                           
  3438                           	psect	stringtext42
  3439  3B42                     __pstringtext42:	
  3440  3B42                     STR_52:	
  3441  3B42  346C               	retlw	108	;'l'
  3442  3B43  3464               	retlw	100	;'d'
  3443  3B44  3400               	retlw	0
  3444                           
  3445                           	psect	stringtext43
  3446  3B45                     __pstringtext43:	
  3447  3B45                     STR_61:	
  3448  3B45  347A               	retlw	122	;'z'
  3449  3B46  3464               	retlw	100	;'d'
  3450  3B47  3400               	retlw	0
  3451                           
  3452                           	psect	stringtext44
  3453  3B48                     __pstringtext44:	
  3454  3B48                     STR_70:	
  3455  3B48  346C               	retlw	108	;'l'
  3456  3B49  3466               	retlw	102	;'f'
  3457  3B4A  3400               	retlw	0
  3458                           
  3459                           	psect	stringtext45
  3460  3B4B                     __pstringtext45:	
  3461  3B4B                     STR_56:	
  3462  3B4B  346C               	retlw	108	;'l'
  3463  3B4C  3469               	retlw	105	;'i'
  3464  3B4D  3400               	retlw	0
  3465                           
  3466                           	psect	stringtext46
  3467  3B4E                     __pstringtext46:	
  3468  3B4E                     STR_65:	
  3469  3B4E  347A               	retlw	122	;'z'
  3470  3B4F  3469               	retlw	105	;'i'
  3471  3B50  3400               	retlw	0
  3472                           
  3473                           	psect	stringtext47
  3474  3B51                     __pstringtext47:	
  3475  3B51                     STR_105:	
  3476  3B51  346C               	retlw	108	;'l'
  3477  3B52  346E               	retlw	110	;'n'
  3478  3B53  3400               	retlw	0
  3479                           
  3480                           	psect	stringtext48
  3481  3B54                     __pstringtext48:	
  3482  3B54                     STR_110:	
  3483  3B54  347A               	retlw	122	;'z'
  3484  3B55  346E               	retlw	110	;'n'
  3485  3B56  3400               	retlw	0
  3486                           
  3487                           	psect	stringtext49
  3488  3B57                     __pstringtext49:	
  3489  3B57                     STR_85:	
  3490  3B57  346C               	retlw	108	;'l'
  3491  3B58  346F               	retlw	111	;'o'
  3492  3B59  3400               	retlw	0
  3493                           
  3494                           	psect	stringtext50
  3495  3B5A                     __pstringtext50:	
  3496  3B5A                     STR_90:	
  3497  3B5A  347A               	retlw	122	;'z'
  3498  3B5B  346F               	retlw	111	;'o'
  3499  3B5C  3400               	retlw	0
  3500                           
  3501                           	psect	stringtext51
  3502  3B5D                     __pstringtext51:	
  3503  3B5D                     STR_125:	
  3504  3B5D  346C               	retlw	108	;'l'
  3505  3B5E  3475               	retlw	117	;'u'
  3506  3B5F  3400               	retlw	0
  3507                           
  3508                           	psect	stringtext52
  3509  3B60                     __pstringtext52:	
  3510  3B60                     STR_130:	
  3511  3B60  347A               	retlw	122	;'z'
  3512  3B61  3475               	retlw	117	;'u'
  3513  3B62  3400               	retlw	0
  3514                           
  3515                           	psect	stringtext53
  3516  3B63                     __pstringtext53:	
  3517  3B63                     STR_153:	
  3518  3B63  346C               	retlw	108	;'l'
  3519  3B64  3478               	retlw	120	;'x'
  3520  3B65  3400               	retlw	0
  3521                           
  3522                           	psect	stringtext54
  3523  3B66                     __pstringtext54:	
  3524  3B66                     STR_162:	
  3525  3B66  347A               	retlw	122	;'z'
  3526  3B67  3478               	retlw	120	;'x'
  3527  3B68  3400               	retlw	0
  3528                           
  3529                           	psect	stringtext55
  3530  0000                     __pstringtext55:	
  3531  3A22                     
  3532                           ; #config settings
  3533  0000                     
  3534                           	psect	cinit
  3535  0020                     start_initialization:	
  3536  0020                     __initialization:		;BIGRAM
  3537                           
  3538                           ; Initialize objects allocated to BANK3
  3539  0020  30AA               	movlw	low __pidataBANK3
  3540  0021  0084               	movwf	4
  3541  0022  30B0               	movlw	(high __pidataBANK3)| (0+128)
  3542  0023  0085               	movwf	5
  3543  0024  0023               	movlb	3	; select bank3
  3544  0025  0012               	moviw fsr0++
  3545  0026  00DD               	movwf	__pdataBANK3& (0+127)
  3546  0027  0012               	moviw fsr0++
  3547  0028  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  3548  0029  0012               	moviw fsr0++
  3549  002A  00DF               	movwf	(__pdataBANK3+2)& (0+127)
  3550  002B  0012               	moviw fsr0++
  3551  002C  00E0               	movwf	(__pdataBANK3+3)& (0+127)
  3552  002D  0012               	moviw fsr0++
  3553  002E  00E1               	movwf	(__pdataBANK3+4)& (0+127)
  3554  002F  0012               	moviw fsr0++
  3555  0030  00E2               	movwf	(__pdataBANK3+5)& (0+127)
  3556  0031  0012               	moviw fsr0++
  3557  0032  00E3               	movwf	(__pdataBANK3+6)& (0+127)
  3558                           
  3559                           ; Clear objects allocated to BIGRAM
  3560  0033  3071               	movlw	low (0+10097)
  3561  0034  0084               	movwf	4
  3562  0035  3027               	movlw	high (0+10097)
  3563  0036  0085               	movwf	5
  3564  0037  307F               	movlw	127
  3565  0038  00FE               	movwf	btemp
  3566  0039  3000               	movlw	0
  3567  003A  00FF               	movwf	btemp+1
  3568  003B  31A8  2002  3180   	fcall	clear_ram0
  3569                           
  3570                           ; Clear objects allocated to COMMON
  3571  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3572                           
  3573                           ; Clear objects allocated to BANK3
  3574  003F  30A0               	movlw	low __pbssBANK3
  3575  0040  0084               	movwf	4
  3576  0041  3001               	movlw	high __pbssBANK3
  3577  0042  0085               	movwf	5
  3578  0043  303D               	movlw	61
  3579  0044  00FE               	movwf	btemp
  3580  0045  3000               	movlw	0
  3581  0046  00FF               	movwf	btemp+1
  3582  0047  31A8  2002  3180   	fcall	clear_ram0
  3583                           
  3584                           ; Clear objects allocated to BANK4
  3585  004A  3020               	movlw	low __pbssBANK4
  3586  004B  0084               	movwf	4
  3587  004C  3002               	movlw	high __pbssBANK4
  3588  004D  0085               	movwf	5
  3589  004E  3050               	movlw	80
  3590  004F  00FE               	movwf	btemp
  3591  0050  3000               	movlw	0
  3592  0051  00FF               	movwf	btemp+1
  3593  0052  31A8  2002         	fcall	clear_ram0
  3594  0054                     end_of_initialization:	
  3595                           ;End of C runtime variable initialization code
  3596                           
  3597  0054                     __end_of__initialization:	
  3598  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3599  0055  0020               	movlb	0
  3600  0056  31B3  2B5E         	ljmp	_main	;jump to C main() function
  3601                           
  3602                           	psect	bssCOMMON
  3603  007C                     __pbssCOMMON:	
  3604  007C                     _toggleColor:	
  3605  007C                     	ds	1
  3606                           
  3607                           	psect	bssBANK3
  3608  01A0                     __pbssBANK3:	
  3609  01A0                     _cellVoltages:	
  3610  01A0                     	ds	10
  3611  01AA                     floorf@F524:	
  3612  01AA                     	ds	4
  3613  01AE                     ___fpclassifyf@F463:	
  3614  01AE                     	ds	4
  3615  01B2                     BQ76920@shuntResistorValue_mOhm:	
  3616  01B2                     	ds	4
  3617  01B6                     _shuntResistorValue_mOhm:	
  3618  01B6                     	ds	4
  3619  01BA                     _errno:	
  3620  01BA                     	ds	2
  3621  01BC                     _nout:	
  3622  01BC                     	ds	2
  3623  01BE                     _width:	
  3624  01BE                     	ds	2
  3625  01C0                     _prec:	
  3626  01C0                     	ds	2
  3627  01C2                     _flags:	
  3628  01C2                     	ds	2
  3629  01C4                     _minCellVoltage:	
  3630  01C4                     	ds	2
  3631  01C6                     _maxCellVoltage:	
  3632  01C6                     	ds	2
  3633  01C8                     _maxCellTempDischarge:	
  3634  01C8                     	ds	2
  3635  01CA                     _maxCellTempCharge:	
  3636  01CA                     	ds	2
  3637  01CC                     _minCellTempDischarge:	
  3638  01CC                     	ds	2
  3639  01CE                     _minCellTempCharge:	
  3640  01CE                     	ds	2
  3641  01D0                     _adcOffset:	
  3642  01D0                     	ds	2
  3643  01D2                     _adcGain:	
  3644  01D2                     	ds	2
  3645  01D4                     BQ76920@protect3:	
  3646  01D4                     	ds	1
  3647  01D5                     BQ76920@protect2:	
  3648  01D5                     	ds	1
  3649  01D6                     BQ76920@protect1:	
  3650  01D6                     	ds	1
  3651  01D7                     myIsr@count:	
  3652  01D7                     	ds	1
  3653  01D8                     _tmr1_flag:	
  3654  01D8                     	ds	1
  3655  01D9                     _currState:	
  3656  01D9                     	ds	1
  3657  01DA                     _protect3:	
  3658  01DA                     	ds	1
  3659  01DB                     _protect2:	
  3660  01DB                     	ds	1
  3661  01DC                     _protect1:	
  3662  01DC                     	ds	1
  3663                           
  3664                           	psect	dataBANK3
  3665  01DD                     __pdataBANK3:	
  3666  01DD                     stoa@F1174:	
  3667  01DD                     	ds	7
  3668                           
  3669                           	psect	bssBANK4
  3670  0220                     __pbssBANK4:	
  3671  0220                     _dbuf:	
  3672  0220                     	ds	80
  3673                           
  3674                           	psect	clrtext
  3675  2802                     clear_ram0:	
  3676                           ;	Called with FSR0 containing the base address, and
  3677                           ;	btemp/btemp+1 has the size to clear
  3678                           
  3679  2802  0064               	clrwdt	;clear the watchdog before getting into this loop
  3680  2803                     clrloop0:	
  3681  2803  0180               	clrf	0	;clear RAM location pointed to by FSR
  3682  2804  3101               	addfsr 0,1
  3683  2805  3001               	movlw	1
  3684  2806  02FE               	subwf	126,f
  3685  2807  3000               	movlw	0
  3686  2808  3BFF               	subwfb	127,f
  3687  2809  087F               	movf	127,w
  3688  280A  047E               	iorwf	126,w
  3689  280B  1903               	btfsc	3,2
  3690  280C  3400               	retlw	0	;all done for this memory range, return
  3691  280D  2803               	goto	clrloop0	;have we reached the end yet?
  3692                           
  3693                           	psect	cstackBANK3
  3694  01E4                     __pcstackBANK3:	
  3695  01E4                     statemachine@success:	
  3696                           
  3697                           ; 1 bytes @ 0x0
  3698  01E4                     	ds	1
  3699  01E5                     ??_main:	
  3700                           
  3701                           ; 1 bytes @ 0x1
  3702  01E5                     	ds	2
  3703                           
  3704                           	psect	cstackBANK2
  3705  0120                     __pcstackBANK2:	
  3706  0120                     ??_vfpfcnvrt:	
  3707                           
  3708                           ; 1 bytes @ 0x0
  3709  0120                     	ds	12
  3710  012C                     vfpfcnvrt@cp:	
  3711                           
  3712                           ; 1 bytes @ 0xC
  3713  012C                     	ds	1
  3714  012D                     vfpfcnvrt@done:	
  3715                           
  3716                           ; 2 bytes @ 0xD
  3717  012D                     	ds	2
  3718  012F                     _vfpfcnvrt$1255:	
  3719                           
  3720                           ; 2 bytes @ 0xF
  3721  012F                     	ds	2
  3722  0131                     _vfpfcnvrt$1256:	
  3723                           
  3724                           ; 2 bytes @ 0x11
  3725  0131                     	ds	2
  3726  0133                     _vfpfcnvrt$1282:	
  3727                           
  3728                           ; 2 bytes @ 0x13
  3729  0133                     	ds	2
  3730  0135                     vfpfcnvrt@ct:	
  3731                           
  3732                           ; 3 bytes @ 0x15
  3733  0135                     	ds	3
  3734  0138                     vfpfcnvrt@f:	
  3735                           
  3736                           ; 4 bytes @ 0x18
  3737  0138                     	ds	4
  3738  013C                     vfpfcnvrt@ll:	
  3739                           
  3740                           ; 8 bytes @ 0x1C
  3741  013C                     	ds	8
  3742  0144                     vfpfcnvrt@vp:	
  3743                           
  3744                           ; 1 bytes @ 0x24
  3745  0144                     	ds	1
  3746  0145                     vfpfcnvrt@c:	
  3747                           
  3748                           ; 1 bytes @ 0x25
  3749  0145                     	ds	1
  3750  0146                     vfpfcnvrt@llu:	
  3751                           
  3752                           ; 8 bytes @ 0x26
  3753  0146                     	ds	8
  3754  014E                     ?_vsnprintf:	
  3755  014E                     vsnprintf@s:	
  3756                           ; 2 bytes @ 0x2E
  3757                           
  3758                           
  3759                           ; 2 bytes @ 0x2E
  3760  014E                     	ds	2
  3761  0150                     vsnprintf@n:	
  3762                           
  3763                           ; 2 bytes @ 0x30
  3764  0150                     	ds	2
  3765  0152                     vsnprintf@fmt:	
  3766                           
  3767                           ; 2 bytes @ 0x32
  3768  0152                     	ds	2
  3769  0154                     vsnprintf@ap:	
  3770                           
  3771                           ; 1 bytes @ 0x34
  3772  0154                     	ds	1
  3773  0155                     _vsnprintf$1884:	
  3774                           
  3775                           ; 2 bytes @ 0x35
  3776  0155                     	ds	2
  3777  0157                     vsnprintf@cnt:	
  3778                           
  3779                           ; 2 bytes @ 0x37
  3780  0157                     	ds	2
  3781  0159                     vsnprintf@f:	
  3782                           
  3783                           ; 6 bytes @ 0x39
  3784  0159                     	ds	6
  3785  015F                     ?_snprintf:	
  3786  015F                     snprintf@s:	
  3787                           ; 2 bytes @ 0x3F
  3788                           
  3789                           
  3790                           ; 2 bytes @ 0x3F
  3791  015F                     	ds	2
  3792  0161                     snprintf@n:	
  3793                           
  3794                           ; 2 bytes @ 0x41
  3795  0161                     	ds	2
  3796  0163                     snprintf@fmt:	
  3797                           
  3798                           ; 2 bytes @ 0x43
  3799  0163                     	ds	6
  3800  0169                     ??_snprintf:	
  3801                           
  3802                           ; 1 bytes @ 0x49
  3803  0169                     	ds	3
  3804  016C                     snprintf@ap:	
  3805                           
  3806                           ; 1 bytes @ 0x4C
  3807  016C                     	ds	1
  3808  016D                     ??_printotAFERegisters:	
  3809                           
  3810                           ; 1 bytes @ 0x4D
  3811  016D                     	ds	1
  3812  016E                     ??_statemachine:	
  3813                           
  3814                           ; 1 bytes @ 0x4E
  3815  016E                     	ds	2
  3816                           
  3817                           	psect	cstackBANK1
  3818  00A0                     __pcstackBANK1:	
  3819  00A0                     ?_efgtoa:	
  3820  00A0                     efgtoa@fp:	
  3821                           ; 2 bytes @ 0x0
  3822                           
  3823  00A0                     setShortCircuitProtection@scaler:	
  3824                           ; 2 bytes @ 0x0
  3825                           
  3826  00A0                     setOverCurrentDischargeProtection@scaler:	
  3827                           ; 4 bytes @ 0x0
  3828                           
  3829                           
  3830                           ; 4 bytes @ 0x0
  3831  00A0                     	ds	2
  3832  00A2                     efgtoa@f:	
  3833                           
  3834                           ; 4 bytes @ 0x2
  3835  00A2                     	ds	2
  3836  00A4                     _setShortCircuitProtection$2078:	
  3837  00A4                     _setOverCurrentDischargeProtection$2079:	
  3838                           ; 4 bytes @ 0x4
  3839                           
  3840                           
  3841                           ; 4 bytes @ 0x4
  3842  00A4                     	ds	2
  3843  00A6                     efgtoa@c:	
  3844                           
  3845                           ; 1 bytes @ 0x6
  3846  00A6                     	ds	1
  3847  00A7                     ??_efgtoa:	
  3848                           
  3849                           ; 1 bytes @ 0x7
  3850  00A7                     	ds	1
  3851  00A8                     setShortCircuitProtection@i:	
  3852  00A8                     setOverCurrentDischargeProtection@i:	
  3853                           ; 2 bytes @ 0x8
  3854                           
  3855                           
  3856                           ; 2 bytes @ 0x8
  3857  00A8                     	ds	2
  3858  00AA                     setShortCircuitProtection@i_943:	
  3859  00AA                     setOverCurrentDischargeProtection@i_952:	
  3860                           ; 2 bytes @ 0xA
  3861                           
  3862                           
  3863                           ; 2 bytes @ 0xA
  3864  00AA                     	ds	1
  3865  00AB                     efgtoa@ou:	
  3866                           
  3867                           ; 4 bytes @ 0xB
  3868  00AB                     	ds	4
  3869  00AF                     _efgtoa$1193:	
  3870                           
  3871                           ; 2 bytes @ 0xF
  3872  00AF                     	ds	2
  3873  00B1                     _efgtoa$1194:	
  3874                           
  3875                           ; 2 bytes @ 0x11
  3876  00B1                     	ds	2
  3877  00B3                     _efgtoa$1198:	
  3878                           
  3879                           ; 2 bytes @ 0x13
  3880  00B3                     	ds	2
  3881  00B5                     _efgtoa$1202:	
  3882                           
  3883                           ; 2 bytes @ 0x15
  3884  00B5                     	ds	2
  3885  00B7                     _efgtoa$1203:	
  3886                           
  3887                           ; 2 bytes @ 0x17
  3888  00B7                     	ds	2
  3889  00B9                     _efgtoa$1204:	
  3890                           
  3891                           ; 2 bytes @ 0x19
  3892  00B9                     	ds	2
  3893  00BB                     efgtoa@t:	
  3894                           
  3895                           ; 2 bytes @ 0x1B
  3896  00BB                     	ds	2
  3897  00BD                     efgtoa@pp:	
  3898                           
  3899                           ; 2 bytes @ 0x1D
  3900  00BD                     	ds	2
  3901  00BF                     efgtoa@m:	
  3902                           
  3903                           ; 2 bytes @ 0x1F
  3904  00BF                     	ds	2
  3905  00C1                     efgtoa@ne:	
  3906                           
  3907                           ; 2 bytes @ 0x21
  3908  00C1                     	ds	2
  3909  00C3                     efgtoa@d:	
  3910                           
  3911                           ; 2 bytes @ 0x23
  3912  00C3                     	ds	2
  3913  00C5                     efgtoa@sign:	
  3914                           
  3915                           ; 2 bytes @ 0x25
  3916  00C5                     	ds	2
  3917  00C7                     efgtoa@p:	
  3918                           
  3919                           ; 2 bytes @ 0x27
  3920  00C7                     	ds	2
  3921  00C9                     efgtoa@nmode:	
  3922                           
  3923                           ; 1 bytes @ 0x29
  3924  00C9                     	ds	1
  3925  00CA                     efgtoa@w:	
  3926                           
  3927                           ; 2 bytes @ 0x2A
  3928  00CA                     	ds	2
  3929  00CC                     efgtoa@mode:	
  3930                           
  3931                           ; 1 bytes @ 0x2C
  3932  00CC                     	ds	1
  3933  00CD                     efgtoa@h:	
  3934                           
  3935                           ; 4 bytes @ 0x2D
  3936  00CD                     	ds	4
  3937  00D1                     efgtoa@l:	
  3938                           
  3939                           ; 4 bytes @ 0x31
  3940  00D1                     	ds	4
  3941  00D5                     efgtoa@i:	
  3942                           
  3943                           ; 2 bytes @ 0x35
  3944  00D5                     	ds	2
  3945  00D7                     efgtoa@g:	
  3946                           
  3947                           ; 4 bytes @ 0x37
  3948  00D7                     	ds	4
  3949  00DB                     efgtoa@e:	
  3950                           
  3951                           ; 2 bytes @ 0x3B
  3952  00DB                     	ds	2
  3953  00DD                     efgtoa@n:	
  3954                           
  3955                           ; 2 bytes @ 0x3D
  3956  00DD                     	ds	2
  3957  00DF                     efgtoa@u:	
  3958                           
  3959                           ; 4 bytes @ 0x3F
  3960  00DF                     	ds	4
  3961  00E3                     ?_vfpfcnvrt:	
  3962  00E3                     vfpfcnvrt@fp:	
  3963                           ; 2 bytes @ 0x43
  3964                           
  3965                           
  3966                           ; 2 bytes @ 0x43
  3967  00E3                     	ds	2
  3968  00E5                     vfpfcnvrt@fmt:	
  3969                           
  3970                           ; 1 bytes @ 0x45
  3971  00E5                     	ds	1
  3972  00E6                     vfpfcnvrt@ap:	
  3973                           
  3974                           ; 1 bytes @ 0x46
  3975  00E6                     	ds	1
  3976  00E7                     ?_vfprintf:	
  3977  00E7                     vfprintf@fp:	
  3978                           ; 2 bytes @ 0x47
  3979                           
  3980                           
  3981                           ; 2 bytes @ 0x47
  3982  00E7                     	ds	2
  3983  00E9                     vfprintf@fmt:	
  3984                           
  3985                           ; 2 bytes @ 0x49
  3986  00E9                     	ds	2
  3987  00EB                     vfprintf@ap:	
  3988                           
  3989                           ; 1 bytes @ 0x4B
  3990  00EB                     	ds	1
  3991  00EC                     vfprintf@cfmt:	
  3992                           
  3993                           ; 2 bytes @ 0x4C
  3994  00EC                     	ds	2
  3995  00EE                     ??_vsnprintf:	
  3996                           
  3997                           ; 1 bytes @ 0x4E
  3998  00EE                     	ds	2
  3999                           
  4000                           	psect	cstackCOMMON
  4001  0070                     __pcstackCOMMON:	
  4002  0070                     ?_initClock:	
  4003  0070                     ?_init_GPIO:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006  0070                     ?_initWDT:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  0070                     ?_init_I2C:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  0070                     ?_init_TMR1:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015  0070                     ?_init_RGB:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018  0070                     ?_watchdog_timeout_shutdown:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  0070                     ?_statemachine:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0070                     ?_RGB_AWAIT_AFE_CONN:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0070                     ?_init_AFE:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0070                     ?_printotAFERegisters:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0070                     ?_AFE_UPDATE:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0070                     ?_internal_16:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0070                     ?_putch:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0070                     ?_myIsr:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0070                     ??_myIsr:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0070                     ?_main:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0070                     ?_EUSART_Write:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0070                     ?_send_I2C_startBit:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0070                     ?_send_I2C_stopBit:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0070                     ?_send_I2C_NACK:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0070                     putch@c:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066                           
  4067                           ; 1 bytes @ 0x0
  4068  0070                     	ds	1
  4069  0071                     ?___fleq:	
  4070  0071                     ??_initClock:	
  4071                           ; 1 bit 
  4072                           
  4073  0071                     ??_init_GPIO:	
  4074                           ; 1 bytes @ 0x1
  4075                           
  4076  0071                     ??_initWDT:	
  4077                           ; 1 bytes @ 0x1
  4078                           
  4079  0071                     ??_init_I2C:	
  4080                           ; 1 bytes @ 0x1
  4081                           
  4082  0071                     ??_init_TMR1:	
  4083                           ; 1 bytes @ 0x1
  4084                           
  4085  0071                     ??_init_RGB:	
  4086                           ; 1 bytes @ 0x1
  4087                           
  4088  0071                     ?_RGB_color:	
  4089                           ; 1 bytes @ 0x1
  4090                           
  4091  0071                     ??_AFE_UPDATE:	
  4092                           ; 1 bytes @ 0x1
  4093                           
  4094  0071                     ??_internal_16:	
  4095                           ; 1 bytes @ 0x1
  4096                           
  4097  0071                     ?_setShuntResistorValue:	
  4098                           ; 1 bytes @ 0x1
  4099                           
  4100  0071                     ?_strcpy:	
  4101                           ; 1 bytes @ 0x1
  4102                           
  4103  0071                     ??_putch:	
  4104                           ; 1 bytes @ 0x1
  4105                           
  4106  0071                     ??_EUSART_Write:	
  4107                           ; 1 bytes @ 0x1
  4108                           
  4109  0071                     ?_send_I2C_data:	
  4110                           ; 1 bytes @ 0x1
  4111                           
  4112  0071                     ?_send_I2C_controlByte:	
  4113                           ; 1 bytes @ 0x1
  4114                           
  4115  0071                     ??_send_I2C_startBit:	
  4116                           ; 1 bytes @ 0x1
  4117                           
  4118  0071                     ??_send_I2C_stopBit:	
  4119                           ; 1 bytes @ 0x1
  4120                           
  4121  0071                     ??_send_I2C_NACK:	
  4122                           ; 1 bytes @ 0x1
  4123                           
  4124  0071                     ??___aodiv:	
  4125                           ; 1 bytes @ 0x1
  4126                           
  4127  0071                     ??___aomod:	
  4128                           ; 1 bytes @ 0x1
  4129                           
  4130  0071                     ??___lodiv:	
  4131                           ; 1 bytes @ 0x1
  4132                           
  4133  0071                     ??___lomod:	
  4134                           ; 1 bytes @ 0x1
  4135                           
  4136  0071                     ?_fputc:	
  4137                           ; 1 bytes @ 0x1
  4138                           
  4139  0071                     ?_strlen:	
  4140                           ; 2 bytes @ 0x1
  4141                           
  4142  0071                     ?___fpclassifyf:	
  4143                           ; 2 bytes @ 0x1
  4144                           
  4145  0071                     ?_isupper:	
  4146                           ; 2 bytes @ 0x1
  4147                           
  4148  0071                     ?_isalpha:	
  4149                           ; 2 bytes @ 0x1
  4150                           
  4151  0071                     ?_isdigit:	
  4152                           ; 2 bytes @ 0x1
  4153                           
  4154  0071                     ?_strncmp:	
  4155                           ; 2 bytes @ 0x1
  4156                           
  4157  0071                     ?__Umul8_16:	
  4158                           ; 2 bytes @ 0x1
  4159                           
  4160  0071                     ?_isspace:	
  4161                           ; 2 bytes @ 0x1
  4162                           
  4163  0071                     ?_islower:	
  4164                           ; 2 bytes @ 0x1
  4165                           
  4166  0071                     ?_read_I2C_data:	
  4167                           ; 2 bytes @ 0x1
  4168                           
  4169  0071                     ?___wmul:	
  4170                           ; 2 bytes @ 0x1
  4171                           
  4172  0071                     ?___awdiv:	
  4173                           ; 2 bytes @ 0x1
  4174                           
  4175  0071                     ?___awmod:	
  4176                           ; 2 bytes @ 0x1
  4177                           
  4178  0071                     ?_AFE_getSetCurrentSenseRes:	
  4179                           ; 2 bytes @ 0x1
  4180                           
  4181  0071                     ?___lmul:	
  4182                           ; 4 bytes @ 0x1
  4183                           
  4184  0071                     ?___flneg:	
  4185                           ; 4 bytes @ 0x1
  4186                           
  4187  0071                     ?___fladd:	
  4188                           ; 4 bytes @ 0x1
  4189                           
  4190  0071                     ?___xxtofl:	
  4191                           ; 4 bytes @ 0x1
  4192                           
  4193  0071                     EUSART_Write@txData:	
  4194                           ; 4 bytes @ 0x1
  4195                           
  4196  0071                     __Umul8_16@multiplicand:	
  4197                           ; 1 bytes @ 0x1
  4198                           
  4199  0071                     send_I2C_data@databyte:	
  4200                           ; 1 bytes @ 0x1
  4201                           
  4202  0071                     send_I2C_controlByte@BlockAddress:	
  4203                           ; 2 bytes @ 0x1
  4204                           
  4205  0071                     RGB_color@color:	
  4206                           ; 2 bytes @ 0x1
  4207                           
  4208  0071                     ___wmul@multiplier:	
  4209                           ; 2 bytes @ 0x1
  4210                           
  4211  0071                     ___awdiv@divisor:	
  4212                           ; 2 bytes @ 0x1
  4213                           
  4214  0071                     ___awmod@divisor:	
  4215                           ; 2 bytes @ 0x1
  4216                           
  4217  0071                     isalpha@c:	
  4218                           ; 2 bytes @ 0x1
  4219                           
  4220  0071                     isdigit@c:	
  4221                           ; 2 bytes @ 0x1
  4222                           
  4223  0071                     isspace@c:	
  4224                           ; 2 bytes @ 0x1
  4225                           
  4226  0071                     isupper@c:	
  4227                           ; 2 bytes @ 0x1
  4228                           
  4229  0071                     fputc@c:	
  4230                           ; 2 bytes @ 0x1
  4231                           
  4232  0071                     strcpy@src:	
  4233                           ; 2 bytes @ 0x1
  4234                           
  4235  0071                     strlen@s:	
  4236                           ; 2 bytes @ 0x1
  4237                           
  4238  0071                     strncmp@_l:	
  4239                           ; 2 bytes @ 0x1
  4240                           
  4241  0071                     islower@c:	
  4242                           ; 2 bytes @ 0x1
  4243                           
  4244  0071                     setShuntResistorValue@res_mOhm:	
  4245                           ; 2 bytes @ 0x1
  4246                           
  4247  0071                     ___lmul@multiplier:	
  4248                           ; 4 bytes @ 0x1
  4249                           
  4250  0071                     ___fleq@ff1:	
  4251                           ; 4 bytes @ 0x1
  4252                           
  4253  0071                     ___flneg@f1:	
  4254                           ; 4 bytes @ 0x1
  4255                           
  4256  0071                     ___fladd@b:	
  4257                           ; 4 bytes @ 0x1
  4258                           
  4259  0071                     ___xxtofl@val:	
  4260                           ; 4 bytes @ 0x1
  4261                           
  4262  0071                     ___fpclassifyf@x:	
  4263                           ; 4 bytes @ 0x1
  4264                           
  4265                           
  4266                           ; 4 bytes @ 0x1
  4267  0071                     	ds	1
  4268  0072                     ?_EUSART_Write_Text:	
  4269  0072                     ___aodiv@counter:	
  4270                           ; 1 bytes @ 0x2
  4271                           
  4272  0072                     ___aomod@counter:	
  4273                           ; 1 bytes @ 0x2
  4274                           
  4275  0072                     ___lomod@counter:	
  4276                           ; 1 bytes @ 0x2
  4277                           
  4278  0072                     EUSART_Write_Text@text:	
  4279                           ; 1 bytes @ 0x2
  4280                           
  4281  0072                     ___lodiv@quotient:	
  4282                           ; 2 bytes @ 0x2
  4283                           
  4284                           
  4285                           ; 8 bytes @ 0x2
  4286  0072                     	ds	1
  4287  0073                     ??_watchdog_timeout_shutdown:	
  4288  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4289                           ; 1 bytes @ 0x3
  4290                           
  4291  0073                     ??_RGB_color:	
  4292                           ; 1 bytes @ 0x3
  4293                           
  4294  0073                     ??_strlen:	
  4295                           ; 1 bytes @ 0x3
  4296                           
  4297  0073                     ??_isupper:	
  4298                           ; 1 bytes @ 0x3
  4299                           
  4300  0073                     ??_strcpy:	
  4301                           ; 1 bytes @ 0x3
  4302                           
  4303  0073                     ??_isalpha:	
  4304                           ; 1 bytes @ 0x3
  4305                           
  4306  0073                     ??_isdigit:	
  4307                           ; 1 bytes @ 0x3
  4308                           
  4309  0073                     ??__Umul8_16:	
  4310                           ; 1 bytes @ 0x3
  4311                           
  4312  0073                     ??_isspace:	
  4313                           ; 1 bytes @ 0x3
  4314                           
  4315  0073                     ??_islower:	
  4316                           ; 1 bytes @ 0x3
  4317                           
  4318  0073                     ??_send_I2C_data:	
  4319                           ; 1 bytes @ 0x3
  4320                           
  4321  0073                     ??_read_I2C_data:	
  4322                           ; 1 bytes @ 0x3
  4323                           
  4324  0073                     ___aodiv@sign:	
  4325                           ; 1 bytes @ 0x3
  4326                           
  4327  0073                     ___aomod@sign:	
  4328                           ; 1 bytes @ 0x3
  4329                           
  4330  0073                     send_I2C_controlByte@RW_bit:	
  4331                           ; 1 bytes @ 0x3
  4332                           
  4333  0073                     ___wmul@multiplicand:	
  4334                           ; 2 bytes @ 0x3
  4335                           
  4336  0073                     ___awdiv@dividend:	
  4337                           ; 2 bytes @ 0x3
  4338                           
  4339  0073                     ___awmod@dividend:	
  4340                           ; 2 bytes @ 0x3
  4341                           
  4342  0073                     fputc@fp:	
  4343                           ; 2 bytes @ 0x3
  4344                           
  4345  0073                     strlen@a:	
  4346                           ; 2 bytes @ 0x3
  4347                           
  4348  0073                     strncmp@_r:	
  4349                           ; 2 bytes @ 0x3
  4350                           
  4351                           
  4352                           ; 2 bytes @ 0x3
  4353  0073                     	ds	1
  4354  0074                     ??_EUSART_Write_Text:	
  4355  0074                     ?_abs:	
  4356                           ; 1 bytes @ 0x4
  4357                           
  4358  0074                     abs@a:	
  4359                           ; 2 bytes @ 0x4
  4360                           
  4361  0074                     ___aodiv@quotient:	
  4362                           ; 2 bytes @ 0x4
  4363                           
  4364                           
  4365                           ; 8 bytes @ 0x4
  4366  0074                     	ds	1
  4367  0075                     ??_AFE_getSetCurrentSenseRes:	
  4368  0075                     ??_setShuntResistorValue:	
  4369                           ; 1 bytes @ 0x5
  4370                           
  4371  0075                     ??_fputc:	
  4372                           ; 1 bytes @ 0x5
  4373                           
  4374  0075                     ??___fpclassifyf:	
  4375                           ; 1 bytes @ 0x5
  4376                           
  4377  0075                     ??_send_I2C_controlByte:	
  4378                           ; 1 bytes @ 0x5
  4379                           
  4380  0075                     ?_I2C_writeRegister:	
  4381                           ; 1 bytes @ 0x5
  4382                           
  4383  0075                     ??___wmul:	
  4384                           ; 1 bytes @ 0x5
  4385                           
  4386  0075                     ??___awdiv:	
  4387                           ; 1 bytes @ 0x5
  4388                           
  4389  0075                     ??___awmod:	
  4390                           ; 1 bytes @ 0x5
  4391                           
  4392  0075                     ??___flneg:	
  4393                           ; 1 bytes @ 0x5
  4394                           
  4395  0075                     ??___xxtofl:	
  4396                           ; 1 bytes @ 0x5
  4397                           
  4398  0075                     ?_readRegister:	
  4399                           ; 1 bytes @ 0x5
  4400                           
  4401  0075                     _isspace$1749:	
  4402                           ; 2 bytes @ 0x5
  4403                           
  4404  0075                     EUSART_Write_Text@i:	
  4405                           ; 1 bytes @ 0x5
  4406                           
  4407  0075                     I2C_writeRegister@slaveAddress:	
  4408                           ; 2 bytes @ 0x5
  4409                           
  4410  0075                     readRegister@slaveAddress:	
  4411                           ; 2 bytes @ 0x5
  4412                           
  4413  0075                     ___wmul@product:	
  4414                           ; 2 bytes @ 0x5
  4415                           
  4416  0075                     strcpy@s:	
  4417                           ; 2 bytes @ 0x5
  4418                           
  4419  0075                     strncmp@n:	
  4420                           ; 2 bytes @ 0x5
  4421                           
  4422  0075                     __Umul8_16@product:	
  4423                           ; 2 bytes @ 0x5
  4424                           
  4425  0075                     ___lmul@multiplicand:	
  4426                           ; 2 bytes @ 0x5
  4427                           
  4428  0075                     ___fleq@ff2:	
  4429                           ; 4 bytes @ 0x5
  4430                           
  4431  0075                     ___fladd@a:	
  4432                           ; 4 bytes @ 0x5
  4433                           
  4434                           
  4435                           ; 4 bytes @ 0x5
  4436  0075                     	ds	1
  4437  0076                     ??_abs:	
  4438  0076                     ___awdiv@counter:	
  4439                           ; 1 bytes @ 0x6
  4440                           
  4441  0076                     ___awmod@counter:	
  4442                           ; 1 bytes @ 0x6
  4443                           
  4444                           
  4445                           ; 1 bytes @ 0x6
  4446  0076                     	ds	1
  4447  0077                     ??_setTemperatureLimitsint:	
  4448  0077                     ??_strncmp:	
  4449                           ; 1 bytes @ 0x7
  4450                           
  4451  0077                     ?_tolower:	
  4452                           ; 1 bytes @ 0x7
  4453                           
  4454  0077                     ?_toupper:	
  4455                           ; 2 bytes @ 0x7
  4456                           
  4457  0077                     ?_atoi:	
  4458                           ; 2 bytes @ 0x7
  4459                           
  4460  0077                     ___awdiv@sign:	
  4461                           ; 2 bytes @ 0x7
  4462                           
  4463  0077                     ___awmod@sign:	
  4464                           ; 1 bytes @ 0x7
  4465                           
  4466  0077                     strcpy@d:	
  4467                           ; 1 bytes @ 0x7
  4468                           
  4469  0077                     I2C_writeRegister@regAddress:	
  4470                           ; 1 bytes @ 0x7
  4471                           
  4472  0077                     readRegister@regAddress:	
  4473                           ; 2 bytes @ 0x7
  4474                           
  4475  0077                     atoi@s:	
  4476                           ; 2 bytes @ 0x7
  4477                           
  4478  0077                     tolower@c:	
  4479                           ; 2 bytes @ 0x7
  4480                           
  4481  0077                     toupper@c:	
  4482                           ; 2 bytes @ 0x7
  4483                           
  4484  0077                     __Umul8_16@word_mpld:	
  4485                           ; 2 bytes @ 0x7
  4486                           
  4487                           
  4488                           ; 2 bytes @ 0x7
  4489  0077                     	ds	1
  4490  0078                     strcpy@dest:	
  4491  0078                     ___awdiv@quotient:	
  4492                           ; 1 bytes @ 0x8
  4493                           
  4494  0078                     strncmp@l:	
  4495                           ; 2 bytes @ 0x8
  4496                           
  4497                           
  4498                           ; 2 bytes @ 0x8
  4499  0078                     	ds	1
  4500  0079                     ??_readRegister:	
  4501  0079                     ??___lmul:	
  4502                           ; 1 bytes @ 0x9
  4503                           
  4504  0079                     ??___aldiv:	
  4505                           ; 1 bytes @ 0x9
  4506                           
  4507  0079                     __Umul8_16@multiplier:	
  4508                           ; 1 bytes @ 0x9
  4509                           
  4510  0079                     I2C_writeRegister@data:	
  4511                           ; 1 bytes @ 0x9
  4512                           
  4513  0079                     readRegister@recievedData:	
  4514                           ; 2 bytes @ 0x9
  4515                           
  4516  0079                     _tolower$1832:	
  4517                           ; 2 bytes @ 0x9
  4518                           
  4519  0079                     _toupper$1847:	
  4520                           ; 2 bytes @ 0x9
  4521                           
  4522                           
  4523                           ; 2 bytes @ 0x9
  4524  0079                     	ds	1
  4525  007A                     ??_stoa:	
  4526  007A                     ??___flsub:	
  4527                           ; 1 bytes @ 0xA
  4528                           
  4529  007A                     ?_fputs:	
  4530                           ; 1 bytes @ 0xA
  4531                           
  4532  007A                     ___fltol@sign1:	
  4533                           ; 2 bytes @ 0xA
  4534                           
  4535  007A                     ___lodiv@counter:	
  4536                           ; 1 bytes @ 0xA
  4537                           
  4538  007A                     EUSART_Initialize@x:	
  4539                           ; 1 bytes @ 0xA
  4540                           
  4541  007A                     fputs@fp:	
  4542                           ; 2 bytes @ 0xA
  4543                           
  4544  007A                     strncmp@r:	
  4545                           ; 2 bytes @ 0xA
  4546                           
  4547                           
  4548                           ; 2 bytes @ 0xA
  4549  007A                     	ds	1
  4550  007B                     ??_init_AFE:	
  4551  007B                     ??_I2C_writeRegister:	
  4552                           ; 1 bytes @ 0xB
  4553                           
  4554  007B                     ___fltol@exp1:	
  4555                           ; 1 bytes @ 0xB
  4556                           
  4557                           
  4558                           ; 1 bytes @ 0xB
  4559  007B                     	ds	1
  4560                           
  4561                           	psect	cstackBANK0
  4562  0020                     __pcstackBANK0:	
  4563  0020                     ?_setTemperatureLimitsint:	
  4564  0020                     ??_fputs:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0020                     ??_tolower:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0020                     ??_toupper:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0020                     ??_atoi:	
  4574                           ; 1 bytes @ 0x0
  4575                           
  4576  0020                     ??___fleq:	
  4577                           ; 1 bytes @ 0x0
  4578                           
  4579  0020                     ??___fladd:	
  4580                           ; 1 bytes @ 0x0
  4581                           
  4582  0020                     ?_beginAFEcommunication:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0020                     ?_stoa:	
  4586                           ; 2 bytes @ 0x0
  4587                           
  4588  0020                     ?___aodiv:	
  4589                           ; 2 bytes @ 0x0
  4590                           
  4591  0020                     ?___aomod:	
  4592                           ; 8 bytes @ 0x0
  4593                           
  4594  0020                     ?___lodiv:	
  4595                           ; 8 bytes @ 0x0
  4596                           
  4597  0020                     ?___lomod:	
  4598                           ; 8 bytes @ 0x0
  4599                           
  4600  0020                     ___xxtofl@sign:	
  4601                           ; 8 bytes @ 0x0
  4602                           
  4603  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4604                           ; 1 bytes @ 0x0
  4605                           
  4606  0020                     stoa@fp:	
  4607                           ; 2 bytes @ 0x0
  4608                           
  4609  0020                     ___fpclassifyf@e:	
  4610                           ; 2 bytes @ 0x0
  4611                           
  4612  0020                     ___lmul@product:	
  4613                           ; 2 bytes @ 0x0
  4614                           
  4615  0020                     ___aodiv@divisor:	
  4616                           ; 4 bytes @ 0x0
  4617                           
  4618  0020                     ___aomod@divisor:	
  4619                           ; 8 bytes @ 0x0
  4620                           
  4621  0020                     ___lodiv@divisor:	
  4622                           ; 8 bytes @ 0x0
  4623                           
  4624  0020                     ___lomod@divisor:	
  4625                           ; 8 bytes @ 0x0
  4626                           
  4627                           
  4628                           ; 8 bytes @ 0x0
  4629  0020                     	ds	1
  4630  0021                     ___xxtofl@exp:	
  4631                           
  4632                           ; 1 bytes @ 0x1
  4633  0021                     	ds	1
  4634  0022                     ??_beginAFEcommunication:	
  4635  0022                     stoa@s:	
  4636                           ; 1 bytes @ 0x2
  4637                           
  4638  0022                     fputs@c:	
  4639                           ; 1 bytes @ 0x2
  4640                           
  4641  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4642                           ; 1 bytes @ 0x2
  4643                           
  4644  0022                     ___xxtofl@arg:	
  4645                           ; 2 bytes @ 0x2
  4646                           
  4647  0022                     ___fpclassifyf@u:	
  4648                           ; 4 bytes @ 0x2
  4649                           
  4650                           
  4651                           ; 4 bytes @ 0x2
  4652  0022                     	ds	1
  4653  0023                     fputs@i:	
  4654  0023                     stoa@nuls:	
  4655                           ; 2 bytes @ 0x3
  4656                           
  4657                           
  4658                           ; 7 bytes @ 0x3
  4659  0023                     	ds	1
  4660  0024                     ?___aldiv:	
  4661  0024                     setTemperatureLimitsint@minCharge_degC:	
  4662                           ; 4 bytes @ 0x4
  4663                           
  4664  0024                     atoi@neg:	
  4665                           ; 2 bytes @ 0x4
  4666                           
  4667  0024                     ___aldiv@divisor:	
  4668                           ; 2 bytes @ 0x4
  4669                           
  4670                           
  4671                           ; 4 bytes @ 0x4
  4672  0024                     	ds	1
  4673  0025                     fputs@s:	
  4674                           
  4675                           ; 1 bytes @ 0x5
  4676  0025                     	ds	1
  4677  0026                     ?_pad:	
  4678  0026                     ?___flmul:	
  4679                           ; 2 bytes @ 0x6
  4680                           
  4681  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4682                           ; 4 bytes @ 0x6
  4683                           
  4684  0026                     pad@fp:	
  4685                           ; 2 bytes @ 0x6
  4686                           
  4687  0026                     _atoi$1709:	
  4688                           ; 2 bytes @ 0x6
  4689                           
  4690  0026                     ___flmul@b:	
  4691                           ; 2 bytes @ 0x6
  4692                           
  4693                           
  4694                           ; 4 bytes @ 0x6
  4695  0026                     	ds	2
  4696  0028                     pad@buf:	
  4697  0028                     ___fladd@signs:	
  4698                           ; 1 bytes @ 0x8
  4699                           
  4700  0028                     _atoi$1711:	
  4701                           ; 1 bytes @ 0x8
  4702                           
  4703  0028                     ___aldiv@dividend:	
  4704                           ; 2 bytes @ 0x8
  4705                           
  4706  0028                     ___aodiv@dividend:	
  4707                           ; 4 bytes @ 0x8
  4708                           
  4709  0028                     ___aomod@dividend:	
  4710                           ; 8 bytes @ 0x8
  4711                           
  4712  0028                     ___lodiv@dividend:	
  4713                           ; 8 bytes @ 0x8
  4714                           
  4715  0028                     ___lomod@dividend:	
  4716                           ; 8 bytes @ 0x8
  4717                           
  4718                           
  4719                           ; 8 bytes @ 0x8
  4720  0028                     	ds	1
  4721  0029                     ___fladd@aexp:	
  4722  0029                     pad@p:	
  4723                           ; 1 bytes @ 0x9
  4724                           
  4725                           
  4726                           ; 2 bytes @ 0x9
  4727  0029                     	ds	1
  4728  002A                     ___fladd@bexp:	
  4729  002A                     _atoi$1710:	
  4730                           ; 1 bytes @ 0xA
  4731                           
  4732  002A                     stoa@i:	
  4733                           ; 1 bytes @ 0xA
  4734                           
  4735  002A                     ___flmul@a:	
  4736                           ; 2 bytes @ 0xA
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0xA
  4740  002A                     	ds	1
  4741  002B                     ??_pad:	
  4742  002B                     ___fladd@grs:	
  4743                           ; 1 bytes @ 0xB
  4744                           
  4745  002B                     beginAFEcommunication@commSuccess:	
  4746                           ; 1 bytes @ 0xB
  4747                           
  4748  002B                     atoi@n:	
  4749                           ; 2 bytes @ 0xB
  4750                           
  4751                           
  4752                           ; 2 bytes @ 0xB
  4753  002B                     	ds	1
  4754  002C                     ___aldiv@counter:	
  4755  002C                     pad@i:	
  4756                           ; 1 bytes @ 0xC
  4757                           
  4758  002C                     stoa@w:	
  4759                           ; 2 bytes @ 0xC
  4760                           
  4761                           
  4762                           ; 2 bytes @ 0xC
  4763  002C                     	ds	1
  4764  002D                     ___aldiv@sign:	
  4765  002D                     beginAFEcommunication@i:	
  4766                           ; 1 bytes @ 0xD
  4767                           
  4768                           
  4769                           ; 2 bytes @ 0xD
  4770  002D                     	ds	1
  4771  002E                     ??___flmul:	
  4772  002E                     pad@w:	
  4773                           ; 1 bytes @ 0xE
  4774                           
  4775  002E                     stoa@cp:	
  4776                           ; 2 bytes @ 0xE
  4777                           
  4778  002E                     ___aldiv@quotient:	
  4779                           ; 2 bytes @ 0xE
  4780                           
  4781                           
  4782                           ; 4 bytes @ 0xE
  4783  002E                     	ds	2
  4784  0030                     ?_ctoa:	
  4785  0030                     ?_dtoa:	
  4786                           ; 2 bytes @ 0x10
  4787                           
  4788  0030                     ?_otoa:	
  4789                           ; 2 bytes @ 0x10
  4790                           
  4791  0030                     ?_utoa:	
  4792                           ; 2 bytes @ 0x10
  4793                           
  4794  0030                     ?_xtoa:	
  4795                           ; 2 bytes @ 0x10
  4796                           
  4797  0030                     ctoa@fp:	
  4798                           ; 2 bytes @ 0x10
  4799                           
  4800  0030                     dtoa@fp:	
  4801                           ; 2 bytes @ 0x10
  4802                           
  4803  0030                     otoa@fp:	
  4804                           ; 2 bytes @ 0x10
  4805                           
  4806  0030                     stoa@p:	
  4807                           ; 2 bytes @ 0x10
  4808                           
  4809  0030                     utoa@fp:	
  4810                           ; 2 bytes @ 0x10
  4811                           
  4812  0030                     xtoa@fp:	
  4813                           ; 2 bytes @ 0x10
  4814                           
  4815                           
  4816                           ; 2 bytes @ 0x10
  4817  0030                     	ds	2
  4818  0032                     ?_EUSART_Initialize:	
  4819  0032                     ?_setCellUndervoltageProtection:	
  4820                           ; 1 bytes @ 0x12
  4821                           
  4822  0032                     ?_setCellOvervoltageProtection:	
  4823                           ; 1 bytes @ 0x12
  4824                           
  4825  0032                     ctoa@c:	
  4826                           ; 1 bytes @ 0x12
  4827                           
  4828  0032                     setCellUndervoltageProtection@voltage_mV:	
  4829                           ; 1 bytes @ 0x12
  4830                           
  4831  0032                     setCellOvervoltageProtection@voltage_mV:	
  4832                           ; 2 bytes @ 0x12
  4833                           
  4834  0032                     stoa@l:	
  4835                           ; 2 bytes @ 0x12
  4836                           
  4837  0032                     EUSART_Initialize@baudrate:	
  4838                           ; 2 bytes @ 0x12
  4839                           
  4840  0032                     dtoa@d:	
  4841                           ; 4 bytes @ 0x12
  4842                           
  4843  0032                     otoa@d:	
  4844                           ; 8 bytes @ 0x12
  4845                           
  4846  0032                     utoa@d:	
  4847                           ; 8 bytes @ 0x12
  4848                           
  4849  0032                     xtoa@d:	
  4850                           ; 8 bytes @ 0x12
  4851                           
  4852                           
  4853                           ; 8 bytes @ 0x12
  4854  0032                     	ds	1
  4855  0033                     ??_ctoa:	
  4856  0033                     ___flmul@sign:	
  4857                           ; 1 bytes @ 0x13
  4858                           
  4859                           
  4860                           ; 1 bytes @ 0x13
  4861  0033                     	ds	1
  4862  0034                     setCellUndervoltageProtection@delay_s:	
  4863  0034                     setCellOvervoltageProtection@delay_s:	
  4864                           ; 2 bytes @ 0x14
  4865                           
  4866  0034                     ctoa@w:	
  4867                           ; 2 bytes @ 0x14
  4868                           
  4869  0034                     ___flmul@grs:	
  4870                           ; 2 bytes @ 0x14
  4871                           
  4872                           
  4873                           ; 4 bytes @ 0x14
  4874  0034                     	ds	2
  4875  0036                     ??_EUSART_Initialize:	
  4876  0036                     ??_setCellUndervoltageProtection:	
  4877                           ; 1 bytes @ 0x16
  4878                           
  4879  0036                     ??_setCellOvervoltageProtection:	
  4880                           ; 1 bytes @ 0x16
  4881                           
  4882                           
  4883                           ; 1 bytes @ 0x16
  4884  0036                     	ds	2
  4885  0038                     ___flmul@aexp:	
  4886                           
  4887                           ; 1 bytes @ 0x18
  4888  0038                     	ds	1
  4889  0039                     ___flmul@bexp:	
  4890                           
  4891                           ; 1 bytes @ 0x19
  4892  0039                     	ds	1
  4893  003A                     ??_dtoa:	
  4894  003A                     ??_otoa:	
  4895                           ; 1 bytes @ 0x1A
  4896                           
  4897  003A                     ??_utoa:	
  4898                           ; 1 bytes @ 0x1A
  4899                           
  4900  003A                     xtoa@x:	
  4901                           ; 1 bytes @ 0x1A
  4902                           
  4903  003A                     ___flmul@prod:	
  4904                           ; 1 bytes @ 0x1A
  4905                           
  4906                           
  4907                           ; 4 bytes @ 0x1A
  4908  003A                     	ds	1
  4909  003B                     ??_xtoa:	
  4910  003B                     utoa@p:	
  4911                           ; 1 bytes @ 0x1B
  4912                           
  4913                           
  4914                           ; 2 bytes @ 0x1B
  4915  003B                     	ds	2
  4916  003D                     _dtoa$1170:	
  4917  003D                     utoa@w:	
  4918                           ; 2 bytes @ 0x1D
  4919                           
  4920                           
  4921                           ; 2 bytes @ 0x1D
  4922  003D                     	ds	1
  4923  003E                     ___flmul@temp:	
  4924                           
  4925                           ; 2 bytes @ 0x1E
  4926  003E                     	ds	1
  4927  003F                     dtoa@p:	
  4928  003F                     utoa@n:	
  4929                           ; 2 bytes @ 0x1F
  4930                           
  4931                           
  4932                           ; 8 bytes @ 0x1F
  4933  003F                     	ds	1
  4934  0040                     ?___flsub:	
  4935  0040                     ?___fldiv:	
  4936                           ; 4 bytes @ 0x20
  4937                           
  4938  0040                     ___flsub@a:	
  4939                           ; 4 bytes @ 0x20
  4940                           
  4941  0040                     ___fldiv@a:	
  4942                           ; 4 bytes @ 0x20
  4943                           
  4944                           
  4945                           ; 4 bytes @ 0x20
  4946  0040                     	ds	1
  4947  0041                     dtoa@w:	
  4948                           
  4949                           ; 2 bytes @ 0x21
  4950  0041                     	ds	1
  4951  0042                     otoa@p:	
  4952                           
  4953                           ; 2 bytes @ 0x22
  4954  0042                     	ds	1
  4955  0043                     dtoa@s:	
  4956  0043                     _xtoa$1240:	
  4957                           ; 2 bytes @ 0x23
  4958                           
  4959                           
  4960                           ; 2 bytes @ 0x23
  4961  0043                     	ds	1
  4962  0044                     setCellUndervoltageProtection@uv_trip:	
  4963  0044                     setCellOvervoltageProtection@ov_trip:	
  4964                           ; 1 bytes @ 0x24
  4965                           
  4966  0044                     otoa@t:	
  4967                           ; 1 bytes @ 0x24
  4968                           
  4969  0044                     ___flsub@b:	
  4970                           ; 2 bytes @ 0x24
  4971                           
  4972  0044                     ___fldiv@b:	
  4973                           ; 4 bytes @ 0x24
  4974                           
  4975                           
  4976                           ; 4 bytes @ 0x24
  4977  0044                     	ds	1
  4978  0045                     setCellUndervoltageProtection@i:	
  4979  0045                     setCellOvervoltageProtection@i:	
  4980                           ; 2 bytes @ 0x25
  4981                           
  4982  0045                     _xtoa$1241:	
  4983                           ; 2 bytes @ 0x25
  4984                           
  4985  0045                     dtoa@n:	
  4986                           ; 2 bytes @ 0x25
  4987                           
  4988                           
  4989                           ; 8 bytes @ 0x25
  4990  0045                     	ds	1
  4991  0046                     otoa@w:	
  4992                           
  4993                           ; 2 bytes @ 0x26
  4994  0046                     	ds	1
  4995  0047                     utoa@i:	
  4996  0047                     xtoa@p:	
  4997                           ; 2 bytes @ 0x27
  4998                           
  4999                           
  5000                           ; 2 bytes @ 0x27
  5001  0047                     	ds	1
  5002  0048                     ??___fldiv:	
  5003  0048                     otoa@n:	
  5004                           ; 1 bytes @ 0x28
  5005                           
  5006                           
  5007                           ; 8 bytes @ 0x28
  5008  0048                     	ds	1
  5009  0049                     xtoa@w:	
  5010                           
  5011                           ; 2 bytes @ 0x29
  5012  0049                     	ds	2
  5013  004B                     xtoa@n:	
  5014                           
  5015                           ; 8 bytes @ 0x2B
  5016  004B                     	ds	2
  5017  004D                     dtoa@i:	
  5018  004D                     ___fldiv@rem:	
  5019                           ; 2 bytes @ 0x2D
  5020                           
  5021                           
  5022                           ; 4 bytes @ 0x2D
  5023  004D                     	ds	3
  5024  0050                     otoa@i:	
  5025                           
  5026                           ; 2 bytes @ 0x30
  5027  0050                     	ds	1
  5028  0051                     ___fldiv@sign:	
  5029                           
  5030                           ; 1 bytes @ 0x31
  5031  0051                     	ds	1
  5032  0052                     ___fldiv@new_exp:	
  5033                           
  5034                           ; 2 bytes @ 0x32
  5035  0052                     	ds	1
  5036  0053                     xtoa@i:	
  5037                           
  5038                           ; 2 bytes @ 0x33
  5039  0053                     	ds	1
  5040  0054                     ___fldiv@grs:	
  5041                           
  5042                           ; 4 bytes @ 0x34
  5043  0054                     	ds	1
  5044  0055                     xtoa@c:	
  5045                           
  5046                           ; 2 bytes @ 0x35
  5047  0055                     	ds	3
  5048  0058                     ___fldiv@bexp:	
  5049                           
  5050                           ; 1 bytes @ 0x38
  5051  0058                     	ds	1
  5052  0059                     ___fldiv@aexp:	
  5053                           
  5054                           ; 1 bytes @ 0x39
  5055  0059                     	ds	1
  5056  005A                     ?___flge:	
  5057  005A                     ?_floorf:	
  5058                           ; 1 bit 
  5059                           
  5060  005A                     ?___fltol:	
  5061                           ; 4 bytes @ 0x3A
  5062                           
  5063  005A                     ___flge@ff1:	
  5064                           ; 4 bytes @ 0x3A
  5065                           
  5066  005A                     ___fltol@f1:	
  5067                           ; 4 bytes @ 0x3A
  5068                           
  5069  005A                     floorf@x:	
  5070                           ; 4 bytes @ 0x3A
  5071                           
  5072                           
  5073                           ; 4 bytes @ 0x3A
  5074  005A                     	ds	4
  5075  005E                     ??_floorf:	
  5076  005E                     ??___fltol:	
  5077                           ; 1 bytes @ 0x3E
  5078                           
  5079  005E                     ___flge@ff2:	
  5080                           ; 1 bytes @ 0x3E
  5081                           
  5082                           
  5083                           ; 4 bytes @ 0x3E
  5084  005E                     	ds	4
  5085  0062                     ??___flge:	
  5086                           
  5087                           ; 1 bytes @ 0x42
  5088  0062                     	ds	1
  5089  0063                     ?_AFE_getSetShortCircuitCurrent:	
  5090  0063                     ?_AFE_getOverCurrentDischargeCurrent:	
  5091                           ; 4 bytes @ 0x43
  5092                           
  5093                           
  5094                           ; 4 bytes @ 0x43
  5095  0063                     	ds	1
  5096  0064                     floorf@m:	
  5097                           
  5098                           ; 4 bytes @ 0x44
  5099  0064                     	ds	2
  5100  0066                     ?_setShortCircuitProtection:	
  5101  0066                     ?_setOverCurrentDischargeProtection:	
  5102                           ; 1 bytes @ 0x46
  5103                           
  5104  0066                     setShortCircuitProtection@current_mA:	
  5105                           ; 1 bytes @ 0x46
  5106                           
  5107  0066                     setOverCurrentDischargeProtection@current_mA:	
  5108                           ; 4 bytes @ 0x46
  5109                           
  5110                           
  5111                           ; 4 bytes @ 0x46
  5112  0066                     	ds	1
  5113  0067                     ??_AFE_getSetShortCircuitCurrent:	
  5114  0067                     ??_AFE_getOverCurrentDischargeCurrent:	
  5115                           ; 1 bytes @ 0x47
  5116                           
  5117                           
  5118                           ; 1 bytes @ 0x47
  5119  0067                     	ds	1
  5120  0068                     floorf@e:	
  5121                           
  5122                           ; 2 bytes @ 0x48
  5123  0068                     	ds	2
  5124  006A                     setShortCircuitProtection@delay_us:	
  5125  006A                     setOverCurrentDischargeProtection@delay_ms:	
  5126                           ; 2 bytes @ 0x4A
  5127                           
  5128  006A                     floorf@u:	
  5129                           ; 2 bytes @ 0x4A
  5130                           
  5131                           
  5132                           ; 4 bytes @ 0x4A
  5133  006A                     	ds	2
  5134  006C                     ??_setShortCircuitProtection:	
  5135  006C                     ??_setOverCurrentDischargeProtection:	
  5136                           ; 1 bytes @ 0x4C
  5137                           
  5138                           
  5139                           ; 1 bytes @ 0x4C
  5140  006C                     	ds	2
  5141  006E                     ??_vfprintf:	
  5142                           
  5143                           ; 1 bytes @ 0x4E
  5144  006E                     	ds	2
  5145                           
  5146                           	psect	maintext
  5147  335E                     __pmaintext:	
  5148 ;;
  5149 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5150 ;;
  5151 ;; *************** function _main *****************
  5152 ;; Defined at:
  5153 ;;		line 77 in file "main.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : B1F/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5170 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5171 ;;Total ram usage:        2 bytes
  5172 ;; Hardware stack levels required when called:   12
  5173 ;; This function calls:
  5174 ;;		_EUSART_Initialize
  5175 ;;		_initClock
  5176 ;;		_initWDT
  5177 ;;		_init_GPIO
  5178 ;;		_init_I2C
  5179 ;;		_init_RGB
  5180 ;;		_init_TMR1
  5181 ;;		_statemachine
  5182 ;;		_watchdog_timeout_shutdown
  5183 ;; This function is called by:
  5184 ;;		Startup code after reset
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _main
  5190  335E                     _main:	
  5191                           
  5192                           ;main.c: 80:     initClock();
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5196  335E  3187  27FC  31B3   	fcall	_initClock
  5197                           
  5198                           ;main.c: 81:     init_GPIO();
  5199  3361  3188  2004  31B3   	fcall	_init_GPIO
  5200                           
  5201                           ;main.c: 82:     initWDT();
  5202  3364  31B0  20A4  31B3   	fcall	_initWDT
  5203                           
  5204                           ;main.c: 83:     init_I2C();
  5205  3367  31B1  2116  31B3   	fcall	_init_I2C
  5206                           
  5207                           ;main.c: 84:     EUSART_Initialize(9600);
  5208  336A  3000               	movlw	0
  5209  336B  0020               	movlb	0	; select bank0
  5210  336C  00B5               	movwf	EUSART_Initialize@baudrate+3
  5211  336D  3000               	movlw	0
  5212  336E  00B4               	movwf	EUSART_Initialize@baudrate+2
  5213  336F  3025               	movlw	37
  5214  3370  00B3               	movwf	EUSART_Initialize@baudrate+1
  5215  3371  3080               	movlw	128
  5216  3372  00B2               	movwf	EUSART_Initialize@baudrate
  5217  3373  31AD  250D  31B3   	fcall	_EUSART_Initialize
  5218                           
  5219                           ;main.c: 85:     init_TMR1();
  5220  3376  31B1  210B  31B3   	fcall	_init_TMR1
  5221                           
  5222                           ;main.c: 86:     init_RGB();
  5223  3379  31B0  209F  31B3   	fcall	_init_RGB
  5224                           
  5225                           ;main.c: 89:     watchdog_timeout_shutdown();
  5226  337C  31B1  21B1  31B3   	fcall	_watchdog_timeout_shutdown
  5227  337F                     l8781:	
  5228                           
  5229                           ;main.c: 93:         statemachine();
  5230  337F  319A  2245  31B3   	fcall	_statemachine
  5231                           
  5232                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5233  3382  3015               	movlw	21
  5234  3383  0023               	movlb	3	; select bank3
  5235  3384  00E6               	movwf	(??_main^(0+384)+1)
  5236  3385  304B               	movlw	75
  5237  3386  00E5               	movwf	??_main^(0+384)
  5238  3387  30BE               	movlw	190
  5239  3388                     u12387:	
  5240  3388  0B89               	decfsz	9,f
  5241  3389  2B88               	goto	u12387
  5242  338A  0BE5               	decfsz	??_main^(0+384),f
  5243  338B  2B88               	goto	u12387
  5244  338C  0BE6               	decfsz	(??_main^(0+384)+1),f
  5245  338D  2B88               	goto	u12387
  5246  338E  0000               	nop
  5247  338F  2B7F               	goto	l8781
  5248  3390                     __end_of_main:	
  5249                           
  5250                           	psect	text1
  5251  31B1                     __ptext1:	
  5252 ;; *************** function _watchdog_timeout_shutdown *****************
  5253 ;; Defined at:
  5254 ;;		line 3 in file "algorithms.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:        2 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    2
  5275 ;; This function calls:
  5276 ;;		_RGB_color
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _watchdog_timeout_shutdown
  5284  31B1                     _watchdog_timeout_shutdown:	
  5285                           
  5286                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5290  31B1  0020               	movlb	0	; select bank0
  5291  31B2  1A03               	btfsc	3,4	;volatile
  5292  31B3  0008               	return
  5293                           
  5294                           ;algorithms.c: 6:         RGB_color(0);
  5295  31B4  3000               	movlw	0
  5296  31B5  00F1               	movwf	RGB_color@color
  5297  31B6  00F2               	movwf	RGB_color@color+1
  5298  31B7  31B2  2296  31B1   	fcall	_RGB_color
  5299                           
  5300                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5301  31BA  3029               	movlw	41
  5302  31BB  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5303  31BC  3096               	movlw	150
  5304  31BD  00F3               	movwf	??_watchdog_timeout_shutdown
  5305  31BE  307F               	movlw	127
  5306  31BF                     u12397:	
  5307  31BF  0B89               	decfsz	9,f
  5308  31C0  29BF               	goto	u12397
  5309  31C1  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5310  31C2  29BF               	goto	u12397
  5311  31C3  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5312  31C4  29BF               	goto	u12397
  5313  31C5  0000               	nop
  5314                           
  5315                           ;algorithms.c: 8:          LATAbits.LATA3 = 1;
  5316  31C6  0022               	movlb	2	; select bank2
  5317  31C7  158C               	bsf	12,3	;volatile
  5318  31C8  0008               	return
  5319  31C9                     __end_of_watchdog_timeout_shutdown:	
  5320                           
  5321                           	psect	text2
  5322  1A45                     __ptext2:	
  5323 ;; *************** function _statemachine *****************
  5324 ;; Defined at:
  5325 ;;		line 101 in file "main.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  success         1    0[BANK3 ] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5341 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5342 ;;      Totals:         0       0       0       2       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5343 ;;Total ram usage:        3 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:   11
  5346 ;; This function calls:
  5347 ;;		_AFE_UPDATE
  5348 ;;		_AFE_getOverCurrentDischargeCurrent
  5349 ;;		_AFE_getSetCurrentSenseRes
  5350 ;;		_AFE_getSetShortCircuitCurrent
  5351 ;;		_EUSART_Write_Text
  5352 ;;		_RGB_AWAIT_AFE_CONN
  5353 ;;		_RGB_color
  5354 ;;		_beginAFEcommunication
  5355 ;;		_init_AFE
  5356 ;;		_printotAFERegisters
  5357 ;;		_snprintf
  5358 ;; This function is called by:
  5359 ;;		_main
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _statemachine
  5365  1A45                     _statemachine:	
  5366                           
  5367                           ;main.c: 103:     switch (currState) {
  5368                           
  5369                           ;incstack = 0
  5370                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5371  1A45  2B5C               	goto	l8757
  5372  1A46                     l8697:	
  5373                           
  5374                           ;main.c: 106:             if (tmr1_flag) {
  5375  1A46  0023               	movlb	3	; select bank3
  5376  1A47  0858               	movf	_tmr1_flag^(0+384),w	;volatile
  5377  1A48  1903               	btfsc	3,2
  5378  1A49  0008               	return
  5379                           
  5380                           ;main.c: 107:                 tmr1_flag = 0;
  5381  1A4A  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  5382                           
  5383                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  5384  1A4B  31B2  22B7  319A   	fcall	_RGB_AWAIT_AFE_CONN
  5385                           
  5386                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  5387  1A4E  31AD  25B6  319A   	fcall	_beginAFEcommunication
  5388  1A51  0020               	movlb	0	; select bank0
  5389  1A52  0820               	movf	?_beginAFEcommunication,w
  5390  1A53  0022               	movlb	2	; select bank2
  5391  1A54  00EE               	movwf	??_statemachine^(0+256)
  5392  1A55  086E               	movf	??_statemachine^(0+256),w
  5393  1A56  0023               	movlb	3	; select bank3
  5394  1A57  00E4               	movwf	statemachine@success^(0+384)
  5395                           
  5396                           ;main.c: 112:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  5397  1A58  3076               	movlw	low (STR_1| (0+32768))
  5398  1A59  00F2               	movwf	EUSART_Write_Text@text
  5399  1A5A  30B9               	movlw	high (STR_1| (0+32768))
  5400  1A5B  00F3               	movwf	EUSART_Write_Text@text+1
  5401  1A5C  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5402                           
  5403                           ;main.c: 114:                 if (success) {
  5404  1A5F  0023               	movlb	3	; select bank3
  5405  1A60  0864               	movf	statemachine@success^(0+384),w
  5406  1A61  1903               	btfsc	3,2
  5407  1A62  0008               	return
  5408                           
  5409                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  5410  1A63  0020               	movlb	0	; select bank0
  5411  1A64  1018               	bcf	24,0	;volatile
  5412                           
  5413                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  5414  1A65  0021               	movlb	1	; select bank1
  5415  1A66  1011               	bcf	17,0	;volatile
  5416                           
  5417                           ;main.c: 117:                     RGB_color(0);
  5418  1A67  3000               	movlw	0
  5419  1A68  00F1               	movwf	RGB_color@color
  5420  1A69  00F2               	movwf	RGB_color@color+1
  5421  1A6A  31B2  2296  319A   	fcall	_RGB_color
  5422                           
  5423                           ;main.c: 118:                     tmr1_flag = 0;
  5424  1A6D  0023               	movlb	3	; select bank3
  5425  1A6E  01D8               	clrf	_tmr1_flag^(0+384)	;volatile
  5426                           
  5427                           ;main.c: 121:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  5428  1A6F  301A               	movlw	26
  5429  1A70  0022               	movlb	2	; select bank2
  5430  1A71  00EE               	movwf	??_statemachine^(0+256)
  5431  1A72  30F8               	movlw	248
  5432  1A73                     u12407:	
  5433  1A73  0B89               	decfsz	9,f
  5434  1A74  2A73               	goto	u12407
  5435  1A75  0BEE               	decfsz	??_statemachine^(0+256),f
  5436  1A76  2A73               	goto	u12407
  5437  1A77  0000               	nop
  5438                           
  5439                           ;main.c: 122:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  5440  1A78  3070               	movlw	low (STR_2| (0+32768))
  5441  1A79  00F2               	movwf	EUSART_Write_Text@text
  5442  1A7A  30B8               	movlw	high (STR_2| (0+32768))
  5443  1A7B  00F3               	movwf	EUSART_Write_Text@text+1
  5444  1A7C  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5445                           
  5446                           ;main.c: 123:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  5447  1A7F  3071               	movlw	113
  5448  1A80  0022               	movlb	2	; select bank2
  5449  1A81  00DF               	movwf	snprintf@s^(0+256)
  5450  1A82  3027               	movlw	39
  5451  1A83  00E0               	movwf	(snprintf@s^(0+256)+1)
  5452  1A84  307F               	movlw	127
  5453  1A85  00E1               	movwf	snprintf@n^(0+256)
  5454  1A86  3000               	movlw	0
  5455  1A87  00E2               	movwf	(snprintf@n^(0+256)+1)
  5456  1A88  30F7               	movlw	low (STR_3| (0+32768))
  5457  1A89  00E3               	movwf	snprintf@fmt^(0+256)
  5458  1A8A  30B8               	movlw	high (STR_3| (0+32768))
  5459  1A8B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5460  1A8C  0023               	movlb	3	; select bank3
  5461  1A8D  0851               	movf	(_adcOffset+1)^(0+384),w
  5462  1A8E  0022               	movlb	2	; select bank2
  5463  1A8F  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5464  1A90  0023               	movlb	3	; select bank3
  5465  1A91  0850               	movf	_adcOffset^(0+384),w
  5466  1A92  0022               	movlb	2	; select bank2
  5467  1A93  00E5               	movwf	(?_snprintf^(0+256)+6)
  5468  1A94  0023               	movlb	3	; select bank3
  5469  1A95  0853               	movf	(_adcGain+1)^(0+384),w
  5470  1A96  0022               	movlb	2	; select bank2
  5471  1A97  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  5472  1A98  0023               	movlb	3	; select bank3
  5473  1A99  0852               	movf	_adcGain^(0+384),w
  5474  1A9A  0022               	movlb	2	; select bank2
  5475  1A9B  00E7               	movwf	(?_snprintf^(0+256)+8)
  5476  1A9C  31B1  2199  319A   	fcall	_snprintf
  5477                           
  5478                           ;main.c: 124:                     EUSART_Write_Text(messageBuffer);
  5479  1A9F  3071               	movlw	113
  5480  1AA0  00F2               	movwf	EUSART_Write_Text@text
  5481  1AA1  3027               	movlw	39
  5482  1AA2  00F3               	movwf	EUSART_Write_Text@text+1
  5483  1AA3  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5484                           
  5485                           ;main.c: 125:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5486  1AA6  303B               	movlw	low (STR_4| (0+32768))
  5487  1AA7  00F2               	movwf	EUSART_Write_Text@text
  5488  1AA8  30B8               	movlw	high (STR_4| (0+32768))
  5489  1AA9  00F3               	movwf	EUSART_Write_Text@text+1
  5490  1AAA  31B1  21C9         	fcall	_EUSART_Write_Text
  5491                           
  5492                           ;main.c: 127:                     currState = 1;
  5493  1AAC  0023               	movlb	3	; select bank3
  5494  1AAD  01D9               	clrf	_currState^(0+384)
  5495  1AAE  0AD9               	incf	_currState^(0+384),f
  5496  1AAF  0008               	return
  5497  1AB0                     l8727:	
  5498                           
  5499                           ;main.c: 136:             init_AFE();
  5500  1AB0  31B6  2663  319A   	fcall	_init_AFE
  5501                           
  5502                           ;main.c: 139:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5503  1AB3  301A               	movlw	26
  5504  1AB4  0022               	movlb	2	; select bank2
  5505  1AB5  00EE               	movwf	??_statemachine^(0+256)
  5506  1AB6  30F8               	movlw	248
  5507  1AB7                     u12417:	
  5508  1AB7  0B89               	decfsz	9,f
  5509  1AB8  2AB7               	goto	u12417
  5510  1AB9  0BEE               	decfsz	??_statemachine^(0+256),f
  5511  1ABA  2AB7               	goto	u12417
  5512  1ABB  0000               	nop
  5513                           
  5514                           ;main.c: 140:             EUSART_Write_Text("\n\r");
  5515  1ABC  3022               	movlw	low ((STR_14+18)| (0+32768))
  5516  1ABD  00F2               	movwf	EUSART_Write_Text@text
  5517  1ABE  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5518  1ABF  00F3               	movwf	EUSART_Write_Text@text+1
  5519  1AC0  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5520                           
  5521                           ;main.c: 141:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5522  1AC3  3071               	movlw	113
  5523  1AC4  0022               	movlb	2	; select bank2
  5524  1AC5  00DF               	movwf	snprintf@s^(0+256)
  5525  1AC6  3027               	movlw	39
  5526  1AC7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5527  1AC8  307F               	movlw	127
  5528  1AC9  00E1               	movwf	snprintf@n^(0+256)
  5529  1ACA  3000               	movlw	0
  5530  1ACB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5531  1ACC  304C               	movlw	low (STR_6| (0+32768))
  5532  1ACD  00E3               	movwf	snprintf@fmt^(0+256)
  5533  1ACE  30B9               	movlw	high (STR_6| (0+32768))
  5534  1ACF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5535  1AD0  31B0  20ED  319A   	fcall	_AFE_getSetCurrentSenseRes
  5536  1AD3  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5537  1AD4  0022               	movlb	2	; select bank2
  5538  1AD5  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5539  1AD6  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5540  1AD7  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5541  1AD8  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5542  1AD9  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5543  1ADA  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5544  1ADB  00E5               	movwf	(?_snprintf^(0+256)+6)
  5545  1ADC  31B1  2199  319A   	fcall	_snprintf
  5546                           
  5547                           ;main.c: 142:             EUSART_Write_Text(messageBuffer);
  5548  1ADF  3071               	movlw	113
  5549  1AE0  00F2               	movwf	EUSART_Write_Text@text
  5550  1AE1  3027               	movlw	39
  5551  1AE2  00F3               	movwf	EUSART_Write_Text@text+1
  5552  1AE3  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5553                           
  5554                           ;main.c: 143:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5555  1AE6  3071               	movlw	113
  5556  1AE7  0022               	movlb	2	; select bank2
  5557  1AE8  00DF               	movwf	snprintf@s^(0+256)
  5558  1AE9  3027               	movlw	39
  5559  1AEA  00E0               	movwf	(snprintf@s^(0+256)+1)
  5560  1AEB  307F               	movlw	127
  5561  1AEC  00E1               	movwf	snprintf@n^(0+256)
  5562  1AED  3000               	movlw	0
  5563  1AEE  00E2               	movwf	(snprintf@n^(0+256)+1)
  5564  1AEF  30CB               	movlw	low (STR_7| (0+32768))
  5565  1AF0  00E3               	movwf	snprintf@fmt^(0+256)
  5566  1AF1  30B8               	movlw	high (STR_7| (0+32768))
  5567  1AF2  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5568  1AF3  31B5  251D  319A   	fcall	_AFE_getSetShortCircuitCurrent
  5569  1AF6  0020               	movlb	0	; select bank0
  5570  1AF7  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  5571  1AF8  0022               	movlb	2	; select bank2
  5572  1AF9  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5573  1AFA  0020               	movlb	0	; select bank0
  5574  1AFB  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  5575  1AFC  0022               	movlb	2	; select bank2
  5576  1AFD  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5577  1AFE  0020               	movlb	0	; select bank0
  5578  1AFF  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  5579  1B00  0022               	movlb	2	; select bank2
  5580  1B01  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5581  1B02  0020               	movlb	0	; select bank0
  5582  1B03  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  5583  1B04  0022               	movlb	2	; select bank2
  5584  1B05  00E5               	movwf	(?_snprintf^(0+256)+6)
  5585  1B06  31B1  2199  319A   	fcall	_snprintf
  5586                           
  5587                           ;main.c: 144:             EUSART_Write_Text(messageBuffer);
  5588  1B09  3071               	movlw	113
  5589  1B0A  00F2               	movwf	EUSART_Write_Text@text
  5590  1B0B  3027               	movlw	39
  5591  1B0C  00F3               	movwf	EUSART_Write_Text@text+1
  5592  1B0D  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5593                           
  5594                           ;main.c: 145:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5595  1B10  3071               	movlw	113
  5596  1B11  0022               	movlb	2	; select bank2
  5597  1B12  00DF               	movwf	snprintf@s^(0+256)
  5598  1B13  3027               	movlw	39
  5599  1B14  00E0               	movwf	(snprintf@s^(0+256)+1)
  5600  1B15  307F               	movlw	127
  5601  1B16  00E1               	movwf	snprintf@n^(0+256)
  5602  1B17  3000               	movlw	0
  5603  1B18  00E2               	movwf	(snprintf@n^(0+256)+1)
  5604  1B19  3002               	movlw	low (STR_8| (0+32768))
  5605  1B1A  00E3               	movwf	snprintf@fmt^(0+256)
  5606  1B1B  30B8               	movlw	high (STR_8| (0+32768))
  5607  1B1C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5608  1B1D  31B4  24CD  319A   	fcall	_AFE_getOverCurrentDischargeCurrent
  5609  1B20  0020               	movlb	0	; select bank0
  5610  1B21  0866               	movf	?_AFE_getOverCurrentDischargeCurrent+3,w
  5611  1B22  0022               	movlb	2	; select bank2
  5612  1B23  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  5613  1B24  0020               	movlb	0	; select bank0
  5614  1B25  0865               	movf	?_AFE_getOverCurrentDischargeCurrent+2,w
  5615  1B26  0022               	movlb	2	; select bank2
  5616  1B27  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  5617  1B28  0020               	movlb	0	; select bank0
  5618  1B29  0864               	movf	?_AFE_getOverCurrentDischargeCurrent+1,w
  5619  1B2A  0022               	movlb	2	; select bank2
  5620  1B2B  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5621  1B2C  0020               	movlb	0	; select bank0
  5622  1B2D  0863               	movf	?_AFE_getOverCurrentDischargeCurrent,w
  5623  1B2E  0022               	movlb	2	; select bank2
  5624  1B2F  00E5               	movwf	(?_snprintf^(0+256)+6)
  5625  1B30  31B1  2199  319A   	fcall	_snprintf
  5626                           
  5627                           ;main.c: 146:             EUSART_Write_Text(messageBuffer);
  5628  1B33  3071               	movlw	113
  5629  1B34  00F2               	movwf	EUSART_Write_Text@text
  5630  1B35  3027               	movlw	39
  5631  1B36  00F3               	movwf	EUSART_Write_Text@text+1
  5632  1B37  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5633                           
  5634                           ;main.c: 147:             printotAFERegisters();
  5635  1B3A  3191  21CC  319A   	fcall	_printotAFERegisters
  5636                           
  5637                           ;main.c: 148:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5638  1B3D  3022               	movlw	low (STR_9| (0+32768))
  5639  1B3E  00F2               	movwf	EUSART_Write_Text@text
  5640  1B3F  30B9               	movlw	high (STR_9| (0+32768))
  5641  1B40  00F3               	movwf	EUSART_Write_Text@text+1
  5642  1B41  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5643                           
  5644                           ;main.c: 149:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5645  1B44  309E               	movlw	low (STR_10| (0+32768))
  5646  1B45  00F2               	movwf	EUSART_Write_Text@text
  5647  1B46  30B8               	movlw	high (STR_10| (0+32768))
  5648  1B47  00F3               	movwf	EUSART_Write_Text@text+1
  5649  1B48  31B1  21C9  319A   	fcall	_EUSART_Write_Text
  5650                           
  5651                           ;main.c: 152:             RGB_color(1);
  5652  1B4B  3001               	movlw	1
  5653  1B4C  00F1               	movwf	RGB_color@color
  5654  1B4D  3000               	movlw	0
  5655  1B4E  00F2               	movwf	RGB_color@color+1
  5656  1B4F  31B2  2296         	fcall	_RGB_color
  5657                           
  5658                           ;main.c: 153:             currState = 2;
  5659  1B51  3002               	movlw	2
  5660  1B52  0022               	movlb	2	; select bank2
  5661  1B53  00EE               	movwf	??_statemachine^(0+256)
  5662  1B54  086E               	movf	??_statemachine^(0+256),w
  5663  1B55  0023               	movlb	3	; select bank3
  5664  1B56  00D9               	movwf	_currState^(0+384)
  5665                           
  5666                           ;main.c: 154:             break;
  5667  1B57  0008               	return
  5668  1B58                     l8753:	
  5669                           
  5670                           ;main.c: 158:             AFE_UPDATE();
  5671  1B58  3180  2003         	fcall	_AFE_UPDATE
  5672  1B5A  0064               	clrwdt	;# 
  5673                           
  5674                           ;main.c: 162:             break;
  5675  1B5B  0008               	return
  5676  1B5C                     l8757:	
  5677  1B5C  0023               	movlb	3	; select bank3
  5678  1B5D  0859               	movf	_currState^(0+384),w
  5679  1B5E  0022               	movlb	2	; select bank2
  5680  1B5F  00EE               	movwf	??_statemachine^(0+256)
  5681  1B60  01EF               	clrf	(??_statemachine^(0+256)+1)
  5682                           
  5683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5684                           ; Switch size 1, requested type "simple"
  5685                           ; Number of cases is 1, Range of values is 0 to 0
  5686                           ; switch strategies available:
  5687                           ; Name         Instructions Cycles
  5688                           ; simple_byte            4     3 (average)
  5689                           ; direct_byte            8     6 (fixed)
  5690                           ; jumptable            260     6 (fixed)
  5691                           ;	Chosen strategy is simple_byte
  5692  1B61  086F               	movf	(??_statemachine+1)^(0+256),w
  5693  1B62  3A00               	xorlw	0	; case 0
  5694  1B63  1903               	skipnz
  5695  1B64  2B66               	goto	l8885
  5696  1B65  2B71               	goto	l161
  5697  1B66                     l8885:	
  5698                           
  5699                           ; Switch size 1, requested type "simple"
  5700                           ; Number of cases is 3, Range of values is 0 to 2
  5701                           ; switch strategies available:
  5702                           ; Name         Instructions Cycles
  5703                           ; simple_byte           10     6 (average)
  5704                           ; direct_byte           12     6 (fixed)
  5705                           ; jumptable            260     6 (fixed)
  5706                           ;	Chosen strategy is simple_byte
  5707  1B66  086E               	movf	??_statemachine^(0+256),w
  5708  1B67  3A00               	xorlw	0	; case 0
  5709  1B68  1903               	skipnz
  5710  1B69  2A46               	goto	l8697
  5711  1B6A  3A01               	xorlw	1	; case 1
  5712  1B6B  1903               	skipnz
  5713  1B6C  2AB0               	goto	l8727
  5714  1B6D  3A03               	xorlw	3	; case 2
  5715  1B6E  1903               	skipnz
  5716  1B6F  2B58               	goto	l8753
  5717  1B70  2B71               	goto	l161
  5718  1B71                     l161:	
  5719  1B71  0008               	return
  5720  1B72                     __end_of_statemachine:	
  5721                           
  5722                           	psect	text3
  5723  11CC                     __ptext3:	
  5724 ;; *************** function _printotAFERegisters *****************
  5725 ;; Defined at:
  5726 ;;		line 184 in file "BQ76920.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5742 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5743 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5744 ;;Total ram usage:        1 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:   10
  5747 ;; This function calls:
  5748 ;;		_EUSART_Write_Text
  5749 ;;		_readRegister
  5750 ;;		_snprintf
  5751 ;; This function is called by:
  5752 ;;		_statemachine
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _printotAFERegisters
  5758  11CC                     _printotAFERegisters:	
  5759                           
  5760                           ;BQ76920.c: 186:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5764  11CC  301A               	movlw	26
  5765  11CD  0022               	movlb	2	; select bank2
  5766  11CE  00ED               	movwf	??_printotAFERegisters^(0+256)
  5767  11CF  30F8               	movlw	248
  5768  11D0                     u12427:	
  5769  11D0  0B89               	decfsz	9,f
  5770  11D1  29D0               	goto	u12427
  5771  11D2  0BED               	decfsz	??_printotAFERegisters^(0+256),f
  5772  11D3  29D0               	goto	u12427
  5773  11D4  0000               	nop
  5774                           
  5775                           ;BQ76920.c: 188:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5776  11D5  309E               	movlw	low (STR_11| (0+32768))
  5777  11D6  00F2               	movwf	EUSART_Write_Text@text
  5778  11D7  30B9               	movlw	high (STR_11| (0+32768))
  5779  11D8  00F3               	movwf	EUSART_Write_Text@text+1
  5780  11D9  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5781                           
  5782                           ;BQ76920.c: 189:     EUSART_Write_Text("\n\r");
  5783  11DC  3022               	movlw	low ((STR_14+18)| (0+32768))
  5784  11DD  00F2               	movwf	EUSART_Write_Text@text
  5785  11DE  30BA               	movlw	high ((STR_14+18)| (0+32768))
  5786  11DF  00F3               	movwf	EUSART_Write_Text@text+1
  5787  11E0  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5788                           
  5789                           ;BQ76920.c: 190:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5790  11E3  3071               	movlw	113
  5791  11E4  0022               	movlb	2	; select bank2
  5792  11E5  00DF               	movwf	snprintf@s^(0+256)
  5793  11E6  3027               	movlw	39
  5794  11E7  00E0               	movwf	(snprintf@s^(0+256)+1)
  5795  11E8  307F               	movlw	127
  5796  11E9  00E1               	movwf	snprintf@n^(0+256)
  5797  11EA  3000               	movlw	0
  5798  11EB  00E2               	movwf	(snprintf@n^(0+256)+1)
  5799  11EC  3064               	movlw	low (STR_13| (0+32768))
  5800  11ED  00E3               	movwf	snprintf@fmt^(0+256)
  5801  11EE  30BA               	movlw	high (STR_13| (0+32768))
  5802  11EF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5803  11F0  3018               	movlw	24
  5804  11F1  00F5               	movwf	readRegister@slaveAddress
  5805  11F2  3000               	movlw	0
  5806  11F3  00F6               	movwf	readRegister@slaveAddress+1
  5807  11F4  3000               	movlw	0
  5808  11F5  00F7               	movwf	readRegister@regAddress
  5809  11F6  00F8               	movwf	readRegister@regAddress+1
  5810  11F7  31B3  23C5  3191   	fcall	_readRegister
  5811  11FA  0876               	movf	?_readRegister+1,w
  5812  11FB  0022               	movlb	2	; select bank2
  5813  11FC  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5814  11FD  0875               	movf	?_readRegister,w
  5815  11FE  00E5               	movwf	(?_snprintf^(0+256)+6)
  5816  11FF  31B1  2199  3191   	fcall	_snprintf
  5817                           
  5818                           ;BQ76920.c: 191:     EUSART_Write_Text(messageBuffer);
  5819  1202  3071               	movlw	113
  5820  1203  00F2               	movwf	EUSART_Write_Text@text
  5821  1204  3027               	movlw	39
  5822  1205  00F3               	movwf	EUSART_Write_Text@text+1
  5823  1206  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5824                           
  5825                           ;BQ76920.c: 192:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5826  1209  3071               	movlw	113
  5827  120A  0022               	movlb	2	; select bank2
  5828  120B  00DF               	movwf	snprintf@s^(0+256)
  5829  120C  3027               	movlw	39
  5830  120D  00E0               	movwf	(snprintf@s^(0+256)+1)
  5831  120E  307F               	movlw	127
  5832  120F  00E1               	movwf	snprintf@n^(0+256)
  5833  1210  3000               	movlw	0
  5834  1211  00E2               	movwf	(snprintf@n^(0+256)+1)
  5835  1212  3010               	movlw	low (STR_14| (0+32768))
  5836  1213  00E3               	movwf	snprintf@fmt^(0+256)
  5837  1214  30BA               	movlw	high (STR_14| (0+32768))
  5838  1215  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5839  1216  3018               	movlw	24
  5840  1217  00F5               	movwf	readRegister@slaveAddress
  5841  1218  3000               	movlw	0
  5842  1219  00F6               	movwf	readRegister@slaveAddress+1
  5843  121A  3001               	movlw	1
  5844  121B  00F7               	movwf	readRegister@regAddress
  5845  121C  3000               	movlw	0
  5846  121D  00F8               	movwf	readRegister@regAddress+1
  5847  121E  31B3  23C5  3191   	fcall	_readRegister
  5848  1221  0876               	movf	?_readRegister+1,w
  5849  1222  0022               	movlb	2	; select bank2
  5850  1223  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5851  1224  0875               	movf	?_readRegister,w
  5852  1225  00E5               	movwf	(?_snprintf^(0+256)+6)
  5853  1226  31B1  2199  3191   	fcall	_snprintf
  5854                           
  5855                           ;BQ76920.c: 193:     EUSART_Write_Text(messageBuffer);
  5856  1229  3071               	movlw	113
  5857  122A  00F2               	movwf	EUSART_Write_Text@text
  5858  122B  3027               	movlw	39
  5859  122C  00F3               	movwf	EUSART_Write_Text@text+1
  5860  122D  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5861                           
  5862                           ;BQ76920.c: 194:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  5863  1230  3071               	movlw	113
  5864  1231  0022               	movlb	2	; select bank2
  5865  1232  00DF               	movwf	snprintf@s^(0+256)
  5866  1233  3027               	movlw	39
  5867  1234  00E0               	movwf	(snprintf@s^(0+256)+1)
  5868  1235  307F               	movlw	127
  5869  1236  00E1               	movwf	snprintf@n^(0+256)
  5870  1237  3000               	movlw	0
  5871  1238  00E2               	movwf	(snprintf@n^(0+256)+1)
  5872  1239  30E4               	movlw	low (STR_15| (0+32768))
  5873  123A  00E3               	movwf	snprintf@fmt^(0+256)
  5874  123B  30B9               	movlw	high (STR_15| (0+32768))
  5875  123C  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5876  123D  3018               	movlw	24
  5877  123E  00F5               	movwf	readRegister@slaveAddress
  5878  123F  3000               	movlw	0
  5879  1240  00F6               	movwf	readRegister@slaveAddress+1
  5880  1241  3004               	movlw	4
  5881  1242  00F7               	movwf	readRegister@regAddress
  5882  1243  3000               	movlw	0
  5883  1244  00F8               	movwf	readRegister@regAddress+1
  5884  1245  31B3  23C5  3191   	fcall	_readRegister
  5885  1248  0876               	movf	?_readRegister+1,w
  5886  1249  0022               	movlb	2	; select bank2
  5887  124A  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5888  124B  0875               	movf	?_readRegister,w
  5889  124C  00E5               	movwf	(?_snprintf^(0+256)+6)
  5890  124D  31B1  2199  3191   	fcall	_snprintf
  5891                           
  5892                           ;BQ76920.c: 195:     EUSART_Write_Text(messageBuffer);
  5893  1250  3071               	movlw	113
  5894  1251  00F2               	movwf	EUSART_Write_Text@text
  5895  1252  3027               	movlw	39
  5896  1253  00F3               	movwf	EUSART_Write_Text@text+1
  5897  1254  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5898                           
  5899                           ;BQ76920.c: 196:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5900  1257  3071               	movlw	113
  5901  1258  0022               	movlb	2	; select bank2
  5902  1259  00DF               	movwf	snprintf@s^(0+256)
  5903  125A  3027               	movlw	39
  5904  125B  00E0               	movwf	(snprintf@s^(0+256)+1)
  5905  125C  307F               	movlw	127
  5906  125D  00E1               	movwf	snprintf@n^(0+256)
  5907  125E  3000               	movlw	0
  5908  125F  00E2               	movwf	(snprintf@n^(0+256)+1)
  5909  1260  30FA               	movlw	low (STR_16| (0+32768))
  5910  1261  00E3               	movwf	snprintf@fmt^(0+256)
  5911  1262  30B9               	movlw	high (STR_16| (0+32768))
  5912  1263  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5913  1264  3018               	movlw	24
  5914  1265  00F5               	movwf	readRegister@slaveAddress
  5915  1266  3000               	movlw	0
  5916  1267  00F6               	movwf	readRegister@slaveAddress+1
  5917  1268  3005               	movlw	5
  5918  1269  00F7               	movwf	readRegister@regAddress
  5919  126A  3000               	movlw	0
  5920  126B  00F8               	movwf	readRegister@regAddress+1
  5921  126C  31B3  23C5  3191   	fcall	_readRegister
  5922  126F  0876               	movf	?_readRegister+1,w
  5923  1270  0022               	movlb	2	; select bank2
  5924  1271  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5925  1272  0875               	movf	?_readRegister,w
  5926  1273  00E5               	movwf	(?_snprintf^(0+256)+6)
  5927  1274  31B1  2199  3191   	fcall	_snprintf
  5928                           
  5929                           ;BQ76920.c: 197:     EUSART_Write_Text(messageBuffer);
  5930  1277  3071               	movlw	113
  5931  1278  00F2               	movwf	EUSART_Write_Text@text
  5932  1279  3027               	movlw	39
  5933  127A  00F3               	movwf	EUSART_Write_Text@text+1
  5934  127B  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5935                           
  5936                           ;BQ76920.c: 198:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  5937  127E  3071               	movlw	113
  5938  127F  0022               	movlb	2	; select bank2
  5939  1280  00DF               	movwf	snprintf@s^(0+256)
  5940  1281  3027               	movlw	39
  5941  1282  00E0               	movwf	(snprintf@s^(0+256)+1)
  5942  1283  307F               	movlw	127
  5943  1284  00E1               	movwf	snprintf@n^(0+256)
  5944  1285  3000               	movlw	0
  5945  1286  00E2               	movwf	(snprintf@n^(0+256)+1)
  5946  1287  3025               	movlw	low (STR_17| (0+32768))
  5947  1288  00E3               	movwf	snprintf@fmt^(0+256)
  5948  1289  30BA               	movlw	high (STR_17| (0+32768))
  5949  128A  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5950  128B  3018               	movlw	24
  5951  128C  00F5               	movwf	readRegister@slaveAddress
  5952  128D  3000               	movlw	0
  5953  128E  00F6               	movwf	readRegister@slaveAddress+1
  5954  128F  3006               	movlw	6
  5955  1290  00F7               	movwf	readRegister@regAddress
  5956  1291  3000               	movlw	0
  5957  1292  00F8               	movwf	readRegister@regAddress+1
  5958  1293  31B3  23C5  3191   	fcall	_readRegister
  5959  1296  0876               	movf	?_readRegister+1,w
  5960  1297  0022               	movlb	2	; select bank2
  5961  1298  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5962  1299  0875               	movf	?_readRegister,w
  5963  129A  00E5               	movwf	(?_snprintf^(0+256)+6)
  5964  129B  31B1  2199  3191   	fcall	_snprintf
  5965                           
  5966                           ;BQ76920.c: 199:     EUSART_Write_Text(messageBuffer);
  5967  129E  3071               	movlw	113
  5968  129F  00F2               	movwf	EUSART_Write_Text@text
  5969  12A0  3027               	movlw	39
  5970  12A1  00F3               	movwf	EUSART_Write_Text@text+1
  5971  12A2  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  5972                           
  5973                           ;BQ76920.c: 200:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  5974  12A5  3071               	movlw	113
  5975  12A6  0022               	movlb	2	; select bank2
  5976  12A7  00DF               	movwf	snprintf@s^(0+256)
  5977  12A8  3027               	movlw	39
  5978  12A9  00E0               	movwf	(snprintf@s^(0+256)+1)
  5979  12AA  307F               	movlw	127
  5980  12AB  00E1               	movwf	snprintf@n^(0+256)
  5981  12AC  3000               	movlw	0
  5982  12AD  00E2               	movwf	(snprintf@n^(0+256)+1)
  5983  12AE  303A               	movlw	low (STR_18| (0+32768))
  5984  12AF  00E3               	movwf	snprintf@fmt^(0+256)
  5985  12B0  30BA               	movlw	high (STR_18| (0+32768))
  5986  12B1  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  5987  12B2  3018               	movlw	24
  5988  12B3  00F5               	movwf	readRegister@slaveAddress
  5989  12B4  3000               	movlw	0
  5990  12B5  00F6               	movwf	readRegister@slaveAddress+1
  5991  12B6  3007               	movlw	7
  5992  12B7  00F7               	movwf	readRegister@regAddress
  5993  12B8  3000               	movlw	0
  5994  12B9  00F8               	movwf	readRegister@regAddress+1
  5995  12BA  31B3  23C5  3191   	fcall	_readRegister
  5996  12BD  0876               	movf	?_readRegister+1,w
  5997  12BE  0022               	movlb	2	; select bank2
  5998  12BF  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  5999  12C0  0875               	movf	?_readRegister,w
  6000  12C1  00E5               	movwf	(?_snprintf^(0+256)+6)
  6001  12C2  31B1  2199  3191   	fcall	_snprintf
  6002                           
  6003                           ;BQ76920.c: 201:     EUSART_Write_Text(messageBuffer);
  6004  12C5  3071               	movlw	113
  6005  12C6  00F2               	movwf	EUSART_Write_Text@text
  6006  12C7  3027               	movlw	39
  6007  12C8  00F3               	movwf	EUSART_Write_Text@text+1
  6008  12C9  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6009                           
  6010                           ;BQ76920.c: 202:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  6011  12CC  3071               	movlw	113
  6012  12CD  0022               	movlb	2	; select bank2
  6013  12CE  00DF               	movwf	snprintf@s^(0+256)
  6014  12CF  3027               	movlw	39
  6015  12D0  00E0               	movwf	(snprintf@s^(0+256)+1)
  6016  12D1  307F               	movlw	127
  6017  12D2  00E1               	movwf	snprintf@n^(0+256)
  6018  12D3  3000               	movlw	0
  6019  12D4  00E2               	movwf	(snprintf@n^(0+256)+1)
  6020  12D5  304F               	movlw	low (STR_19| (0+32768))
  6021  12D6  00E3               	movwf	snprintf@fmt^(0+256)
  6022  12D7  30BA               	movlw	high (STR_19| (0+32768))
  6023  12D8  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6024  12D9  3018               	movlw	24
  6025  12DA  00F5               	movwf	readRegister@slaveAddress
  6026  12DB  3000               	movlw	0
  6027  12DC  00F6               	movwf	readRegister@slaveAddress+1
  6028  12DD  3008               	movlw	8
  6029  12DE  00F7               	movwf	readRegister@regAddress
  6030  12DF  3000               	movlw	0
  6031  12E0  00F8               	movwf	readRegister@regAddress+1
  6032  12E1  31B3  23C5  3191   	fcall	_readRegister
  6033  12E4  0876               	movf	?_readRegister+1,w
  6034  12E5  0022               	movlb	2	; select bank2
  6035  12E6  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6036  12E7  0875               	movf	?_readRegister,w
  6037  12E8  00E5               	movwf	(?_snprintf^(0+256)+6)
  6038  12E9  31B1  2199  3191   	fcall	_snprintf
  6039                           
  6040                           ;BQ76920.c: 203:     EUSART_Write_Text(messageBuffer);
  6041  12EC  3071               	movlw	113
  6042  12ED  00F2               	movwf	EUSART_Write_Text@text
  6043  12EE  3027               	movlw	39
  6044  12EF  00F3               	movwf	EUSART_Write_Text@text+1
  6045  12F0  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6046                           
  6047                           ;BQ76920.c: 204:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  6048  12F3  3071               	movlw	113
  6049  12F4  0022               	movlb	2	; select bank2
  6050  12F5  00DF               	movwf	snprintf@s^(0+256)
  6051  12F6  3027               	movlw	39
  6052  12F7  00E0               	movwf	(snprintf@s^(0+256)+1)
  6053  12F8  307F               	movlw	127
  6054  12F9  00E1               	movwf	snprintf@n^(0+256)
  6055  12FA  3000               	movlw	0
  6056  12FB  00E2               	movwf	(snprintf@n^(0+256)+1)
  6057  12FC  3079               	movlw	low (STR_20| (0+32768))
  6058  12FD  00E3               	movwf	snprintf@fmt^(0+256)
  6059  12FE  30BA               	movlw	high (STR_20| (0+32768))
  6060  12FF  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6061  1300  3018               	movlw	24
  6062  1301  00F5               	movwf	readRegister@slaveAddress
  6063  1302  3000               	movlw	0
  6064  1303  00F6               	movwf	readRegister@slaveAddress+1
  6065  1304  3009               	movlw	9
  6066  1305  00F7               	movwf	readRegister@regAddress
  6067  1306  3000               	movlw	0
  6068  1307  00F8               	movwf	readRegister@regAddress+1
  6069  1308  31B3  23C5  3191   	fcall	_readRegister
  6070  130B  0876               	movf	?_readRegister+1,w
  6071  130C  0022               	movlb	2	; select bank2
  6072  130D  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6073  130E  0875               	movf	?_readRegister,w
  6074  130F  00E5               	movwf	(?_snprintf^(0+256)+6)
  6075  1310  31B1  2199  3191   	fcall	_snprintf
  6076                           
  6077                           ;BQ76920.c: 205:     EUSART_Write_Text(messageBuffer);
  6078  1313  3071               	movlw	113
  6079  1314  00F2               	movwf	EUSART_Write_Text@text
  6080  1315  3027               	movlw	39
  6081  1316  00F3               	movwf	EUSART_Write_Text@text+1
  6082  1317  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6083                           
  6084                           ;BQ76920.c: 206:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  6085  131A  3071               	movlw	113
  6086  131B  0022               	movlb	2	; select bank2
  6087  131C  00DF               	movwf	snprintf@s^(0+256)
  6088  131D  3027               	movlw	39
  6089  131E  00E0               	movwf	(snprintf@s^(0+256)+1)
  6090  131F  307F               	movlw	127
  6091  1320  00E1               	movwf	snprintf@n^(0+256)
  6092  1321  3000               	movlw	0
  6093  1322  00E2               	movwf	(snprintf@n^(0+256)+1)
  6094  1323  308D               	movlw	low (STR_21| (0+32768))
  6095  1324  00E3               	movwf	snprintf@fmt^(0+256)
  6096  1325  30BA               	movlw	high (STR_21| (0+32768))
  6097  1326  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6098  1327  3018               	movlw	24
  6099  1328  00F5               	movwf	readRegister@slaveAddress
  6100  1329  3000               	movlw	0
  6101  132A  00F6               	movwf	readRegister@slaveAddress+1
  6102  132B  300A               	movlw	10
  6103  132C  00F7               	movwf	readRegister@regAddress
  6104  132D  3000               	movlw	0
  6105  132E  00F8               	movwf	readRegister@regAddress+1
  6106  132F  31B3  23C5  3191   	fcall	_readRegister
  6107  1332  0876               	movf	?_readRegister+1,w
  6108  1333  0022               	movlb	2	; select bank2
  6109  1334  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6110  1335  0875               	movf	?_readRegister,w
  6111  1336  00E5               	movwf	(?_snprintf^(0+256)+6)
  6112  1337  31B1  2199  3191   	fcall	_snprintf
  6113                           
  6114                           ;BQ76920.c: 207:     EUSART_Write_Text(messageBuffer);
  6115  133A  3071               	movlw	113
  6116  133B  00F2               	movwf	EUSART_Write_Text@text
  6117  133C  3027               	movlw	39
  6118  133D  00F3               	movwf	EUSART_Write_Text@text+1
  6119  133E  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6120                           
  6121                           ;BQ76920.c: 208:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  6122  1341  3071               	movlw	113
  6123  1342  0022               	movlb	2	; select bank2
  6124  1343  00DF               	movwf	snprintf@s^(0+256)
  6125  1344  3027               	movlw	39
  6126  1345  00E0               	movwf	(snprintf@s^(0+256)+1)
  6127  1346  307F               	movlw	127
  6128  1347  00E1               	movwf	snprintf@n^(0+256)
  6129  1348  3000               	movlw	0
  6130  1349  00E2               	movwf	(snprintf@n^(0+256)+1)
  6131  134A  30A1               	movlw	low (STR_22| (0+32768))
  6132  134B  00E3               	movwf	snprintf@fmt^(0+256)
  6133  134C  30BA               	movlw	high (STR_22| (0+32768))
  6134  134D  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6135  134E  3018               	movlw	24
  6136  134F  00F5               	movwf	readRegister@slaveAddress
  6137  1350  3000               	movlw	0
  6138  1351  00F6               	movwf	readRegister@slaveAddress+1
  6139  1352  300B               	movlw	11
  6140  1353  00F7               	movwf	readRegister@regAddress
  6141  1354  3000               	movlw	0
  6142  1355  00F8               	movwf	readRegister@regAddress+1
  6143  1356  31B3  23C5  3191   	fcall	_readRegister
  6144  1359  0876               	movf	?_readRegister+1,w
  6145  135A  0022               	movlb	2	; select bank2
  6146  135B  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6147  135C  0875               	movf	?_readRegister,w
  6148  135D  00E5               	movwf	(?_snprintf^(0+256)+6)
  6149  135E  31B1  2199  3191   	fcall	_snprintf
  6150                           
  6151                           ;BQ76920.c: 209:     EUSART_Write_Text(messageBuffer);
  6152  1361  3071               	movlw	113
  6153  1362  00F2               	movwf	EUSART_Write_Text@text
  6154  1363  3027               	movlw	39
  6155  1364  00F3               	movwf	EUSART_Write_Text@text+1
  6156  1365  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6157                           
  6158                           ;BQ76920.c: 210:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  6159  1368  3071               	movlw	113
  6160  1369  0022               	movlb	2	; select bank2
  6161  136A  00DF               	movwf	snprintf@s^(0+256)
  6162  136B  3027               	movlw	39
  6163  136C  00E0               	movwf	(snprintf@s^(0+256)+1)
  6164  136D  307F               	movlw	127
  6165  136E  00E1               	movwf	snprintf@n^(0+256)
  6166  136F  3000               	movlw	0
  6167  1370  00E2               	movwf	(snprintf@n^(0+256)+1)
  6168  1371  30B4               	movlw	low (STR_23| (0+32768))
  6169  1372  00E3               	movwf	snprintf@fmt^(0+256)
  6170  1373  30BA               	movlw	high (STR_23| (0+32768))
  6171  1374  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6172  1375  3018               	movlw	24
  6173  1376  00F5               	movwf	readRegister@slaveAddress
  6174  1377  3000               	movlw	0
  6175  1378  00F6               	movwf	readRegister@slaveAddress+1
  6176  1379  3032               	movlw	50
  6177  137A  00F7               	movwf	readRegister@regAddress
  6178  137B  3000               	movlw	0
  6179  137C  00F8               	movwf	readRegister@regAddress+1
  6180  137D  31B3  23C5  3191   	fcall	_readRegister
  6181  1380  0876               	movf	?_readRegister+1,w
  6182  1381  0022               	movlb	2	; select bank2
  6183  1382  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6184  1383  0875               	movf	?_readRegister,w
  6185  1384  00E5               	movwf	(?_snprintf^(0+256)+6)
  6186  1385  31B1  2199  3191   	fcall	_snprintf
  6187                           
  6188                           ;BQ76920.c: 211:     EUSART_Write_Text(messageBuffer);
  6189  1388  3071               	movlw	113
  6190  1389  00F2               	movwf	EUSART_Write_Text@text
  6191  138A  3027               	movlw	39
  6192  138B  00F3               	movwf	EUSART_Write_Text@text+1
  6193  138C  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6194                           
  6195                           ;BQ76920.c: 212:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  6196  138F  3071               	movlw	113
  6197  1390  0022               	movlb	2	; select bank2
  6198  1391  00DF               	movwf	snprintf@s^(0+256)
  6199  1392  3027               	movlw	39
  6200  1393  00E0               	movwf	(snprintf@s^(0+256)+1)
  6201  1394  307F               	movlw	127
  6202  1395  00E1               	movwf	snprintf@n^(0+256)
  6203  1396  3000               	movlw	0
  6204  1397  00E2               	movwf	(snprintf@n^(0+256)+1)
  6205  1398  30C6               	movlw	low (STR_24| (0+32768))
  6206  1399  00E3               	movwf	snprintf@fmt^(0+256)
  6207  139A  30BA               	movlw	high (STR_24| (0+32768))
  6208  139B  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  6209  139C  3018               	movlw	24
  6210  139D  00F5               	movwf	readRegister@slaveAddress
  6211  139E  3000               	movlw	0
  6212  139F  00F6               	movwf	readRegister@slaveAddress+1
  6213  13A0  3033               	movlw	51
  6214  13A1  00F7               	movwf	readRegister@regAddress
  6215  13A2  3000               	movlw	0
  6216  13A3  00F8               	movwf	readRegister@regAddress+1
  6217  13A4  31B3  23C5  3191   	fcall	_readRegister
  6218  13A7  0876               	movf	?_readRegister+1,w
  6219  13A8  0022               	movlb	2	; select bank2
  6220  13A9  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  6221  13AA  0875               	movf	?_readRegister,w
  6222  13AB  00E5               	movwf	(?_snprintf^(0+256)+6)
  6223  13AC  31B1  2199  3191   	fcall	_snprintf
  6224                           
  6225                           ;BQ76920.c: 213:     EUSART_Write_Text(messageBuffer);
  6226  13AF  3071               	movlw	113
  6227  13B0  00F2               	movwf	EUSART_Write_Text@text
  6228  13B1  3027               	movlw	39
  6229  13B2  00F3               	movwf	EUSART_Write_Text@text+1
  6230  13B3  31B1  21C9  3191   	fcall	_EUSART_Write_Text
  6231                           
  6232                           ;BQ76920.c: 214:     EUSART_Write_Text("\n\r");
  6233  13B6  3022               	movlw	low ((STR_14+18)| (0+32768))
  6234  13B7  00F2               	movwf	EUSART_Write_Text@text
  6235  13B8  30BA               	movlw	high ((STR_14+18)| (0+32768))
  6236  13B9  00F3               	movwf	EUSART_Write_Text@text+1
  6237  13BA  31B1  21C9         	fcall	_EUSART_Write_Text
  6238  13BC  0008               	return
  6239  13BD                     __end_of_printotAFERegisters:	
  6240                           
  6241                           	psect	text4
  6242  3199                     __ptext4:	
  6243 ;; *************** function _snprintf *****************
  6244 ;; Defined at:
  6245 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  s               2   63[BANK2 ] PTR unsigned char 
  6248 ;;		 -> messageBuffer(127), 
  6249 ;;  n               2   65[BANK2 ] unsigned int 
  6250 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  6251 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6252 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6253 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6254 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  ret             2    0        int 
  6257 ;;  ap              1   76[BANK2 ] PTR void [1]
  6258 ;;		 -> ?_snprintf(2), 
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  2   63[BANK2 ] int 
  6261 ;; Registers used:
  6262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6268 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6269 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6270 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6271 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6272 ;;Total ram usage:       14 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    9
  6275 ;; This function calls:
  6276 ;;		_vsnprintf
  6277 ;; This function is called by:
  6278 ;;		_statemachine
  6279 ;;		_printotAFERegisters
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           
  6284                           ;psect for function _snprintf
  6285  3199                     _snprintf:	
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6289  3199  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  6290  319A  0022               	movlb	2	; select bank2
  6291  319B  00E9               	movwf	??_snprintf^(0+256)
  6292  319C  0869               	movf	??_snprintf^(0+256),w
  6293  319D  00EC               	movwf	snprintf@ap^(0+256)
  6294  319E  0860               	movf	(snprintf@s+1)^(0+256),w
  6295  319F  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  6296  31A0  085F               	movf	snprintf@s^(0+256),w
  6297  31A1  00CE               	movwf	vsnprintf@s^(0+256)
  6298  31A2  0862               	movf	(snprintf@n+1)^(0+256),w
  6299  31A3  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  6300  31A4  0861               	movf	snprintf@n^(0+256),w
  6301  31A5  00D0               	movwf	vsnprintf@n^(0+256)
  6302  31A6  0864               	movf	(snprintf@fmt+1)^(0+256),w
  6303  31A7  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  6304  31A8  0863               	movf	snprintf@fmt^(0+256),w
  6305  31A9  00D2               	movwf	vsnprintf@fmt^(0+256)
  6306  31AA  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  6307  31AB  00E9               	movwf	??_snprintf^(0+256)
  6308  31AC  0869               	movf	??_snprintf^(0+256),w
  6309  31AD  00D4               	movwf	vsnprintf@ap^(0+256)
  6310  31AE  31A9  2128         	fcall	_vsnprintf
  6311  31B0  0008               	return
  6312  31B1                     __end_of_snprintf:	
  6313                           
  6314                           	psect	text5
  6315  2928                     __ptext5:	
  6316 ;; *************** function _vsnprintf *****************
  6317 ;; Defined at:
  6318 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  s               2   46[BANK2 ] PTR unsigned char 
  6321 ;;		 -> messageBuffer(127), 
  6322 ;;  n               2   48[BANK2 ] unsigned int 
  6323 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  6324 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6325 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6326 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6327 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6328 ;;  ap              1   52[BANK2 ] PTR PTR void 
  6329 ;;		 -> snprintf@ap(1), 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  f               6   57[BANK2 ] struct _IO_FILE
  6332 ;;  cnt             2   55[BANK2 ] int 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  2   46[BANK2 ] int 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6342 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6344 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6345 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6346 ;;Total ram usage:       19 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    8
  6349 ;; This function calls:
  6350 ;;		_vfprintf
  6351 ;; This function is called by:
  6352 ;;		_snprintf
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _vsnprintf
  6358  2928                     _vsnprintf:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6362  2928  3080               	movlw	128
  6363  2929  0022               	movlb	2	; select bank2
  6364  292A  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  6365  292B  3000               	movlw	0
  6366  292C  1903               	skipnz
  6367  292D  0250               	subwf	vsnprintf@n^(0+256),w
  6368  292E  1C03               	skipc
  6369  292F  293B               	goto	l8489
  6370  2930  304B               	movlw	75
  6371  2931  0023               	movlb	3	; select bank3
  6372  2932  00BA               	movwf	_errno^(0+384)
  6373  2933  3000               	movlw	0
  6374  2934  00BB               	movwf	(_errno^(0+384)+1)
  6375  2935  30FF               	movlw	255
  6376  2936  0022               	movlb	2	; select bank2
  6377  2937  00CE               	movwf	?_vsnprintf^(0+256)
  6378  2938  30FF               	movlw	255
  6379  2939  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  6380  293A  0008               	return
  6381  293B                     l8489:	
  6382  293B  084F               	movf	(vsnprintf@s+1)^(0+256),w
  6383  293C  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  6384  293D  084E               	movf	vsnprintf@s^(0+256),w
  6385  293E  00D9               	movwf	vsnprintf@f^(0+256)
  6386  293F  3000               	movlw	0
  6387  2940  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  6388  2941  3002               	movlw	2
  6389  2942  1903               	skipnz
  6390  2943  0250               	subwf	vsnprintf@n^(0+256),w
  6391  2944  1C03               	skipc
  6392  2945  294F               	goto	l8495
  6393  2946  0850               	movf	vsnprintf@n^(0+256),w
  6394  2947  3EFF               	addlw	255
  6395  2948  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  6396  2949  30FF               	movlw	255
  6397  294A  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  6398  294B  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  6399  294C  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  6400  294D  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  6401  294E  2957               	goto	l8497
  6402  294F                     l8495:	
  6403  294F  3001               	movlw	1
  6404  2950  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  6405  2951  3000               	movlw	0
  6406  2952  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  6407  2953  3001               	movlw	1
  6408  2954  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  6409  2955  3000               	movlw	0
  6410  2956  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  6411  2957                     l8497:	
  6412  2957  3059               	movlw	low vsnprintf@f
  6413  2958  0021               	movlb	1	; select bank1
  6414  2959  00E7               	movwf	vfprintf@fp^(0+128)
  6415  295A  3001               	movlw	high vsnprintf@f
  6416  295B  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  6417  295C  0022               	movlb	2	; select bank2
  6418  295D  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  6419  295E  0021               	movlb	1	; select bank1
  6420  295F  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  6421  2960  0022               	movlb	2	; select bank2
  6422  2961  0852               	movf	vsnprintf@fmt^(0+256),w
  6423  2962  0021               	movlb	1	; select bank1
  6424  2963  00E9               	movwf	vfprintf@fmt^(0+128)
  6425  2964  0022               	movlb	2	; select bank2
  6426  2965  0854               	movf	vsnprintf@ap^(0+256),w
  6427  2966  0021               	movlb	1	; select bank1
  6428  2967  00EE               	movwf	??_vsnprintf^(0+128)
  6429  2968  086E               	movf	??_vsnprintf^(0+128),w
  6430  2969  00EB               	movwf	vfprintf@ap^(0+128)
  6431  296A  31B3  2390  31A9   	fcall	_vfprintf
  6432  296D  0021               	movlb	1	; select bank1
  6433  296E  0868               	movf	(?_vfprintf+1)^(0+128),w
  6434  296F  0022               	movlb	2	; select bank2
  6435  2970  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  6436  2971  0021               	movlb	1	; select bank1
  6437  2972  0867               	movf	?_vfprintf^(0+128),w
  6438  2973  0022               	movlb	2	; select bank2
  6439  2974  00D7               	movwf	vsnprintf@cnt^(0+256)
  6440  2975  0850               	movf	vsnprintf@n^(0+256),w
  6441  2976  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  6442  2977  1D03               	btfss	3,2
  6443  2978  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  6444  2979  29A0               	goto	l8511
  6445  297A  0850               	movf	vsnprintf@n^(0+256),w
  6446  297B  3EFF               	addlw	255
  6447  297C  0021               	movlb	1	; select bank1
  6448  297D  00EE               	movwf	??_vsnprintf^(0+128)
  6449  297E  30FF               	movlw	255
  6450  297F  0022               	movlb	2	; select bank2
  6451  2980  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  6452  2981  0021               	movlb	1	; select bank1
  6453  2982  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  6454  2983  086F               	movf	(??_vsnprintf+1)^(0+128),w
  6455  2984  0022               	movlb	2	; select bank2
  6456  2985  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  6457  2986  1D03               	skipz
  6458  2987  298C               	goto	u12205
  6459  2988  0021               	movlb	1	; select bank1
  6460  2989  086E               	movf	??_vsnprintf^(0+128),w
  6461  298A  0022               	movlb	2	; select bank2
  6462  298B  0257               	subwf	vsnprintf@cnt^(0+256),w
  6463  298C                     u12205:	
  6464  298C  1C03               	skipc
  6465  298D  2995               	goto	l8507
  6466  298E  0850               	movf	vsnprintf@n^(0+256),w
  6467  298F  3EFF               	addlw	255
  6468  2990  00D5               	movwf	_vsnprintf$1884^(0+256)
  6469  2991  30FF               	movlw	255
  6470  2992  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  6471  2993  00D6               	movwf	(_vsnprintf$1884+1)^(0+256)
  6472  2994  2999               	goto	l8509
  6473  2995                     l8507:	
  6474  2995  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6475  2996  00D6               	movwf	(_vsnprintf$1884+1)^(0+256)
  6476  2997  0857               	movf	vsnprintf@cnt^(0+256),w
  6477  2998  00D5               	movwf	_vsnprintf$1884^(0+256)
  6478  2999                     l8509:	
  6479  2999  0855               	movf	_vsnprintf$1884^(0+256),w
  6480  299A  074E               	addwf	vsnprintf@s^(0+256),w
  6481  299B  0086               	movwf	6
  6482  299C  0856               	movf	(_vsnprintf$1884+1)^(0+256),w
  6483  299D  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  6484  299E  0087               	movwf	7
  6485  299F  0181               	clrf	1
  6486  29A0                     l8511:	
  6487  29A0  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  6488  29A1  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  6489  29A2  0857               	movf	vsnprintf@cnt^(0+256),w
  6490  29A3  00CE               	movwf	?_vsnprintf^(0+256)
  6491  29A4  0008               	return
  6492  29A5                     __end_of_vsnprintf:	
  6493                           
  6494                           	psect	text6
  6495  3390                     __ptext6:	
  6496 ;; *************** function _vfprintf *****************
  6497 ;; Defined at:
  6498 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  6501 ;;		 -> vsnprintf@f(6), 
  6502 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  6503 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6504 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6505 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6506 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6507 ;;  ap              1   75[BANK1 ] PTR PTR void 
  6508 ;;		 -> snprintf@ap(1), 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  6511 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
  6512 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
  6513 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
  6514 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2   71[BANK1 ] int 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6524 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6527 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:        9 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    7
  6531 ;; This function calls:
  6532 ;;		_vfpfcnvrt
  6533 ;; This function is called by:
  6534 ;;		_vsnprintf
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function _vfprintf
  6540  3390                     _vfprintf:	
  6541                           
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6546  3390  0021               	movlb	1	; select bank1
  6547  3391  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  6548  3392  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  6549  3393  0869               	movf	vfprintf@fmt^(0+128),w
  6550  3394  00EC               	movwf	vfprintf@cfmt^(0+128)
  6551                           
  6552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6553  3395  0023               	movlb	3	; select bank3
  6554  3396  01BC               	clrf	_nout^(0+384)
  6555  3397  01BD               	clrf	(_nout+1)^(0+384)
  6556  3398                     l8423:	
  6557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6558                           
  6559                           
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6561  3398  0021               	movlb	1	; select bank1
  6562  3399  086C               	movf	vfprintf@cfmt^(0+128),w
  6563  339A  0084               	movwf	4
  6564  339B  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  6565  339C  0085               	movwf	5
  6566  339D  0012               	moviw fsr0++
  6567  339E  1903               	btfsc	3,2
  6568  339F  2BBC               	goto	l8425
  6569                           
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6571  33A0  0868               	movf	(vfprintf@fp+1)^(0+128),w
  6572  33A1  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6573  33A2  0867               	movf	vfprintf@fp^(0+128),w
  6574  33A3  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  6575  33A4  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6576  33A5  0020               	movlb	0	; select bank0
  6577  33A6  00EE               	movwf	??_vfprintf
  6578  33A7  086E               	movf	??_vfprintf,w
  6579  33A8  0021               	movlb	1	; select bank1
  6580  33A9  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  6581  33AA  086B               	movf	vfprintf@ap^(0+128),w
  6582  33AB  0020               	movlb	0	; select bank0
  6583  33AC  00EF               	movwf	??_vfprintf+1
  6584  33AD  086F               	movf	??_vfprintf+1,w
  6585  33AE  0021               	movlb	1	; select bank1
  6586  33AF  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  6587  33B0  3193  23BD  31B3   	fcall	_vfpfcnvrt
  6588  33B3  0021               	movlb	1	; select bank1
  6589  33B4  0863               	movf	?_vfpfcnvrt^(0+128),w
  6590  33B5  0023               	movlb	3	; select bank3
  6591  33B6  07BC               	addwf	_nout^(0+384),f
  6592  33B7  0021               	movlb	1	; select bank1
  6593  33B8  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6594  33B9  0023               	movlb	3	; select bank3
  6595  33BA  3DBD               	addwfc	(_nout+1)^(0+384),f
  6596  33BB  2B98               	goto	l8423
  6597  33BC                     l8425:	
  6598                           
  6599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6600  33BC  0023               	movlb	3	; select bank3
  6601  33BD  083D               	movf	(_nout+1)^(0+384),w
  6602  33BE  0021               	movlb	1	; select bank1
  6603  33BF  00E8               	movwf	(?_vfprintf+1)^(0+128)
  6604  33C0  0023               	movlb	3	; select bank3
  6605  33C1  083C               	movf	_nout^(0+384),w
  6606  33C2  0021               	movlb	1	; select bank1
  6607  33C3  00E7               	movwf	?_vfprintf^(0+128)
  6608  33C4  0008               	return
  6609  33C5                     __end_of_vfprintf:	
  6610                           
  6611                           	psect	text7
  6612  13BD                     __ptext7:	
  6613 ;; *************** function _vfpfcnvrt *****************
  6614 ;; Defined at:
  6615 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  6618 ;;		 -> vsnprintf@f(6), 
  6619 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  6620 ;;		 -> vfprintf@cfmt(2), 
  6621 ;;  ap              1   70[BANK1 ] PTR PTR void 
  6622 ;;		 -> snprintf@ap(1), 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  llu             8   38[BANK2 ] unsigned long long 
  6625 ;;  ll              8   28[BANK2 ] long long 
  6626 ;;  f               4   24[BANK2 ] long long 
  6627 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6628 ;;  done            2   13[BANK2 ] int 
  6629 ;;  i               2    0        int 
  6630 ;;  c               1   37[BANK2 ] unsigned char 
  6631 ;;  vp              1   36[BANK2 ] PTR void 
  6632 ;;		 -> ?_snprintf(2), 
  6633 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6634 ;;		 -> ?_snprintf(2), 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  2   67[BANK1 ] int 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6644 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6645 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6646 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6647 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6648 ;;Total ram usage:       50 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    6
  6651 ;; This function calls:
  6652 ;;		_atoi
  6653 ;;		_ctoa
  6654 ;;		_dtoa
  6655 ;;		_efgtoa
  6656 ;;		_fputc
  6657 ;;		_isdigit
  6658 ;;		_isupper
  6659 ;;		_otoa
  6660 ;;		_stoa
  6661 ;;		_strncmp
  6662 ;;		_tolower
  6663 ;;		_utoa
  6664 ;;		_xtoa
  6665 ;; This function is called by:
  6666 ;;		_vfprintf
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _vfpfcnvrt
  6672  13BD                     _vfpfcnvrt:	
  6673                           
  6674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6678  13BD  0021               	movlb	1	; select bank1
  6679  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6680  13BF  0086               	movwf	6
  6681  13C0  0187               	clrf	7
  6682  13C1  3F40               	moviw [0]fsr1
  6683  13C2  0022               	movlb	2	; select bank2
  6684  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6685  13C4  3F41               	moviw [1]fsr1
  6686  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6687  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  6688  13C7  0084               	movwf	4
  6689  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6690  13C9  0085               	movwf	5
  6691  13CA  0012               	moviw fsr0++
  6692  13CB  3A25               	xorlw	37
  6693  13CC  1D03               	btfss	3,2
  6694  13CD  2DD2               	goto	L16
  6695                           
  6696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6697  13CE  0021               	movlb	1	; select bank1
  6698  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6699  13D0  0086               	movwf	6
  6700  13D1  0187               	clrf	7
  6701  13D2  3001               	movlw	1
  6702  13D3  0781               	addwf	1,f
  6703  13D4  3141               	addfsr 1,1
  6704  13D5  1803               	skipnc
  6705  13D6  0A81               	incf	1,f
  6706                           
  6707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6708  13D7  0023               	movlb	3	; select bank3
  6709  13D8  01BE               	clrf	_width^(0+384)
  6710  13D9  01BF               	clrf	(_width+1)^(0+384)
  6711  13DA  01C2               	clrf	_flags^(0+384)
  6712  13DB  01C3               	clrf	(_flags+1)^(0+384)
  6713                           
  6714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6715  13DC  30FF               	movlw	255
  6716  13DD  00C0               	movwf	_prec^(0+384)
  6717  13DE  30FF               	movlw	255
  6718  13DF  00C1               	movwf	(_prec^(0+384)+1)
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6721  13E0  0022               	movlb	2	; select bank2
  6722  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  6723  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  6724                           
  6725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6726  13E3  2C00               	goto	l7981
  6727  13E4                     l811:	
  6728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6729                           
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6732  13E4  0023               	movlb	3	; select bank3
  6733  13E5  1442               	bsf	_flags^(0+384),0
  6734  13E6                     l7965:	
  6735                           
  6736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6737  13E6  0021               	movlb	1	; select bank1
  6738  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6739  13E8  0086               	movwf	6
  6740  13E9  0187               	clrf	7
  6741  13EA  3001               	movlw	1
  6742  13EB  0781               	addwf	1,f
  6743  13EC  3141               	addfsr 1,1
  6744  13ED  1803               	skipnc
  6745  13EE  0A81               	incf	1,f
  6746                           
  6747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6748  13EF  2C00               	goto	l7981
  6749  13F0                     l813:	
  6750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6751                           
  6752                           
  6753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6754  13F0  0023               	movlb	3	; select bank3
  6755  13F1  14C2               	bsf	_flags^(0+384),1
  6756  13F2  2BE6               	goto	l7965
  6757  13F3                     l814:	
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6759                           
  6760                           
  6761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6762  13F3  0023               	movlb	3	; select bank3
  6763  13F4  1542               	bsf	_flags^(0+384),2
  6764  13F5  2BE6               	goto	l7965
  6765  13F6                     l815:	
  6766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6767                           
  6768                           
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6770  13F6  0023               	movlb	3	; select bank3
  6771  13F7  15C2               	bsf	_flags^(0+384),3
  6772  13F8  2BE6               	goto	l7965
  6773  13F9                     l816:	
  6774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6775                           
  6776                           
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6778  13F9  0023               	movlb	3	; select bank3
  6779  13FA  1642               	bsf	_flags^(0+384),4
  6780  13FB  2BE6               	goto	l7965
  6781  13FC                     l7975:	
  6782                           
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6784  13FC  3001               	movlw	1
  6785  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  6786  13FE  3000               	movlw	0
  6787  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  6788  1400                     l7981:	
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6790                           
  6791                           
  6792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6793  1400  0022               	movlb	2	; select bank2
  6794  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  6795  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  6796  1403  1D03               	btfss	3,2
  6797  1404  2C2C               	goto	l818
  6798  1405  0021               	movlb	1	; select bank1
  6799  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6800  1407  0086               	movwf	6
  6801  1408  0187               	clrf	7
  6802  1409  3F40               	moviw [0]fsr1
  6803  140A  0022               	movlb	2	; select bank2
  6804  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6805  140C  3F41               	moviw [1]fsr1
  6806  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6807  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  6808  140F  0084               	movwf	4
  6809  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6810  1411  0085               	movwf	5
  6811  1412  0800               	movf	0,w	;code access
  6812  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6813  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  6814                           
  6815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6816                           ; Switch size 1, requested type "simple"
  6817                           ; Number of cases is 1, Range of values is 0 to 0
  6818                           ; switch strategies available:
  6819                           ; Name         Instructions Cycles
  6820                           ; simple_byte            4     3 (average)
  6821                           ; direct_byte            8     6 (fixed)
  6822                           ; jumptable            260     6 (fixed)
  6823                           ;	Chosen strategy is simple_byte
  6824  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  6825  1416  3A00               	xorlw	0	; case 0
  6826  1417  1903               	skipnz
  6827  1418  2C1A               	goto	l8887
  6828  1419  2BFC               	goto	l7975
  6829  141A                     l8887:	
  6830                           
  6831                           ; Switch size 1, requested type "simple"
  6832                           ; Number of cases is 5, Range of values is 32 to 48
  6833                           ; switch strategies available:
  6834                           ; Name         Instructions Cycles
  6835                           ; simple_byte           16     9 (average)
  6836                           ; direct_byte           43     9 (fixed)
  6837                           ; jumptable            263     9 (fixed)
  6838                           ;	Chosen strategy is simple_byte
  6839  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  6840  141B  3A20               	xorlw	32	; case 32
  6841  141C  1903               	skipnz
  6842  141D  2BF6               	goto	l815
  6843  141E  3A03               	xorlw	3	; case 35
  6844  141F  1903               	skipnz
  6845  1420  2BF9               	goto	l816
  6846  1421  3A08               	xorlw	8	; case 43
  6847  1422  1903               	skipnz
  6848  1423  2BF3               	goto	l814
  6849  1424  3A06               	xorlw	6	; case 45
  6850  1425  1903               	skipnz
  6851  1426  2BE4               	goto	l811
  6852  1427  3A1D               	xorlw	29	; case 48
  6853  1428  1903               	skipnz
  6854  1429  2BF0               	goto	l813
  6855  142A  2BFC               	goto	l7975
  6856  142B  2C00               	goto	l7981
  6857  142C                     l818:	
  6858                           
  6859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6860  142C  0023               	movlb	3	; select bank3
  6861  142D  1C42               	btfss	_flags^(0+384),0
  6862  142E  2C33               	goto	l7985
  6863                           
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6865  142F  30FD               	movlw	253
  6866  1430  05C2               	andwf	_flags^(0+384),f
  6867  1431  30FF               	movlw	255
  6868  1432  05C3               	andwf	(_flags+1)^(0+384),f
  6869  1433                     l7985:	
  6870                           
  6871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6872  1433  0021               	movlb	1	; select bank1
  6873  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6874  1435  0086               	movwf	6
  6875  1436  0187               	clrf	7
  6876  1437  3F40               	moviw [0]fsr1
  6877  1438  0022               	movlb	2	; select bank2
  6878  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6879  143A  3F41               	moviw [1]fsr1
  6880  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6881  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  6882  143D  0084               	movwf	4
  6883  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6884  143F  0085               	movwf	5
  6885  1440  0012               	moviw fsr0++
  6886  1441  3A2A               	xorlw	42
  6887  1442  1D03               	btfss	3,2
  6888  1443  2C65               	goto	l7997
  6889                           
  6890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6891  1444  0021               	movlb	1	; select bank1
  6892  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6893  1446  0086               	movwf	6
  6894  1447  0187               	clrf	7
  6895  1448  3001               	movlw	1
  6896  1449  0781               	addwf	1,f
  6897  144A  3141               	addfsr 1,1
  6898  144B  1803               	skipnc
  6899  144C  0A81               	incf	1,f
  6900                           
  6901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6902  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  6903  144E  0086               	movwf	6
  6904  144F  3001               	movlw	1	; select bank2/3
  6905  1450  0087               	movwf	7
  6906  1451  0801               	movf	1,w
  6907  1452  0084               	movwf	4
  6908  1453  3001               	movlw	1	; select bank2/3
  6909  1454  0085               	movwf	5
  6910  1455  3002               	movlw	2
  6911  1456  0781               	addwf	1,f
  6912  1457  3F00               	moviw [0]fsr0
  6913  1458  0023               	movlb	3	; select bank3
  6914  1459  00BE               	movwf	_width^(0+384)
  6915  145A  3F01               	moviw [1]fsr0
  6916  145B  00BF               	movwf	(_width+1)^(0+384)
  6917                           
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6919  145C  1FBF               	btfss	(_width+1)^(0+384),7
  6920  145D  2CA7               	goto	l8007
  6921                           
  6922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6923  145E  1442               	bsf	_flags^(0+384),0
  6924                           
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6926  145F  09BE               	comf	_width^(0+384),f
  6927  1460  09BF               	comf	(_width+1)^(0+384),f
  6928  1461  0ABE               	incf	_width^(0+384),f
  6929  1462  1903               	skipnz
  6930  1463  0ABF               	incf	(_width+1)^(0+384),f
  6931  1464  2CA7               	goto	l8007
  6932  1465                     l7997:	
  6933                           
  6934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6935  1465  0021               	movlb	1	; select bank1
  6936  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6937  1467  0086               	movwf	6
  6938  1468  0187               	clrf	7
  6939  1469  3F40               	moviw [0]fsr1
  6940  146A  00F7               	movwf	atoi@s
  6941  146B  3F41               	moviw [1]fsr1
  6942  146C  00F8               	movwf	atoi@s+1
  6943  146D  31AB  23C8  3193   	fcall	_atoi
  6944  1470  0878               	movf	?_atoi+1,w
  6945  1471  0023               	movlb	3	; select bank3
  6946  1472  00BF               	movwf	(_width+1)^(0+384)
  6947  1473  0877               	movf	?_atoi,w
  6948  1474  00BE               	movwf	_width^(0+384)
  6949                           
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6951  1475  2C7F               	goto	l8001
  6952  1476                     l7999:	
  6953                           
  6954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6955  1476  0021               	movlb	1	; select bank1
  6956  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6957  1478  0086               	movwf	6
  6958  1479  0187               	clrf	7
  6959  147A  3001               	movlw	1
  6960  147B  0781               	addwf	1,f
  6961  147C  3141               	addfsr 1,1
  6962  147D  1803               	skipnc
  6963  147E  0A81               	incf	1,f
  6964  147F                     l8001:	
  6965  147F  0021               	movlb	1	; select bank1
  6966  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  6967  1481  0086               	movwf	6
  6968  1482  0187               	clrf	7
  6969  1483  3F40               	moviw [0]fsr1
  6970  1484  0022               	movlb	2	; select bank2
  6971  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6972  1486  3F41               	moviw [1]fsr1
  6973  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6974  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  6975  1489  0084               	movwf	4
  6976  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6977  148B  0085               	movwf	5
  6978  148C  0800               	movf	0,w	;code access
  6979  148D  3ED0               	addlw	208
  6980  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  6981  148F  30FF               	movlw	255
  6982  1490  1803               	skipnc
  6983  1491  3000               	movlw	0
  6984  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  6985  1493  3000               	movlw	0
  6986  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  6987  1495  300A               	movlw	10
  6988  1496  1903               	skipnz
  6989  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  6990  1498  1803               	btfsc	3,0
  6991  1499  2C9C               	goto	u11470
  6992  149A  3001               	movlw	1
  6993  149B  2C9D               	goto	u11480
  6994  149C                     u11470:	
  6995  149C  3000               	movlw	0
  6996  149D                     u11480:	
  6997  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  6998  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  6999  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7000  14A0  00AF               	movwf	_vfpfcnvrt$1255^(0+256)
  7001  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7002  14A2  00B0               	movwf	(_vfpfcnvrt$1255+1)^(0+256)
  7003  14A3  082F               	movf	_vfpfcnvrt$1255^(0+256),w
  7004  14A4  0430               	iorwf	(_vfpfcnvrt$1255+1)^(0+256),w
  7005  14A5  1D03               	btfss	3,2
  7006  14A6  2C76               	goto	l7999
  7007  14A7                     l8007:	
  7008                           
  7009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7010  14A7  0021               	movlb	1	; select bank1
  7011  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7012  14A9  0086               	movwf	6
  7013  14AA  0187               	clrf	7
  7014  14AB  3F40               	moviw [0]fsr1
  7015  14AC  0022               	movlb	2	; select bank2
  7016  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7017  14AE  3F41               	moviw [1]fsr1
  7018  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7019  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  7020  14B1  0084               	movwf	4
  7021  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7022  14B3  0085               	movwf	5
  7023  14B4  0012               	moviw fsr0++
  7024  14B5  3A2E               	xorlw	46
  7025  14B6  1D03               	btfss	3,2
  7026  14B7  2D2F               	goto	l8029
  7027                           
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7029  14B8  0023               	movlb	3	; select bank3
  7030  14B9  01C0               	clrf	_prec^(0+384)
  7031  14BA  01C1               	clrf	(_prec+1)^(0+384)
  7032                           
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7034  14BB  0021               	movlb	1	; select bank1
  7035  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7036  14BD  0086               	movwf	6
  7037  14BE  0187               	clrf	7
  7038  14BF  3001               	movlw	1
  7039  14C0  0781               	addwf	1,f
  7040  14C1  3141               	addfsr 1,1
  7041  14C2  1803               	skipnc
  7042  14C3  0A81               	incf	1,f
  7043                           
  7044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7045  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7046  14C5  0086               	movwf	6
  7047  14C6  0187               	clrf	7
  7048  14C7  3F40               	moviw [0]fsr1
  7049  14C8  0022               	movlb	2	; select bank2
  7050  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7051  14CA  3F41               	moviw [1]fsr1
  7052  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7053  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  7054  14CD  0084               	movwf	4
  7055  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7056  14CF  0085               	movwf	5
  7057  14D0  0012               	moviw fsr0++
  7058  14D1  3A2A               	xorlw	42
  7059  14D2  1D03               	btfss	3,2
  7060  14D3  2CED               	goto	l8019
  7061                           
  7062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7063  14D4  0021               	movlb	1	; select bank1
  7064  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7065  14D6  0086               	movwf	6
  7066  14D7  0187               	clrf	7
  7067  14D8  3001               	movlw	1
  7068  14D9  0781               	addwf	1,f
  7069  14DA  3141               	addfsr 1,1
  7070  14DB  1803               	skipnc
  7071  14DC  0A81               	incf	1,f
  7072                           
  7073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7074  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  7075  14DE  0086               	movwf	6
  7076  14DF  3001               	movlw	1	; select bank2/3
  7077  14E0  0087               	movwf	7
  7078  14E1  0801               	movf	1,w
  7079  14E2  0084               	movwf	4
  7080  14E3  3001               	movlw	1	; select bank2/3
  7081  14E4  0085               	movwf	5
  7082  14E5  3002               	movlw	2
  7083  14E6  0781               	addwf	1,f
  7084  14E7  3F00               	moviw [0]fsr0
  7085  14E8  0023               	movlb	3	; select bank3
  7086  14E9  00C0               	movwf	_prec^(0+384)
  7087  14EA  3F01               	moviw [1]fsr0
  7088  14EB  00C1               	movwf	(_prec+1)^(0+384)
  7089                           
  7090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7091  14EC  2D2F               	goto	l8029
  7092  14ED                     l8019:	
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7095  14ED  0021               	movlb	1	; select bank1
  7096  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7097  14EF  0086               	movwf	6
  7098  14F0  0187               	clrf	7
  7099  14F1  3F40               	moviw [0]fsr1
  7100  14F2  00F7               	movwf	atoi@s
  7101  14F3  3F41               	moviw [1]fsr1
  7102  14F4  00F8               	movwf	atoi@s+1
  7103  14F5  31AB  23C8  3193   	fcall	_atoi
  7104  14F8  0878               	movf	?_atoi+1,w
  7105  14F9  0023               	movlb	3	; select bank3
  7106  14FA  00C1               	movwf	(_prec+1)^(0+384)
  7107  14FB  0877               	movf	?_atoi,w
  7108  14FC  00C0               	movwf	_prec^(0+384)
  7109                           
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7111  14FD  2D07               	goto	l8023
  7112  14FE                     l8021:	
  7113                           
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7115  14FE  0021               	movlb	1	; select bank1
  7116  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7117  1500  0086               	movwf	6
  7118  1501  0187               	clrf	7
  7119  1502  3001               	movlw	1
  7120  1503  0781               	addwf	1,f
  7121  1504  3141               	addfsr 1,1
  7122  1505  1803               	skipnc
  7123  1506  0A81               	incf	1,f
  7124  1507                     l8023:	
  7125  1507  0021               	movlb	1	; select bank1
  7126  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7127  1509  0086               	movwf	6
  7128  150A  0187               	clrf	7
  7129  150B  3F40               	moviw [0]fsr1
  7130  150C  0022               	movlb	2	; select bank2
  7131  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7132  150E  3F41               	moviw [1]fsr1
  7133  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7134  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  7135  1511  0084               	movwf	4
  7136  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7137  1513  0085               	movwf	5
  7138  1514  0800               	movf	0,w	;code access
  7139  1515  3ED0               	addlw	208
  7140  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7141  1517  30FF               	movlw	255
  7142  1518  1803               	skipnc
  7143  1519  3000               	movlw	0
  7144  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7145  151B  3000               	movlw	0
  7146  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7147  151D  300A               	movlw	10
  7148  151E  1903               	skipnz
  7149  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7150  1520  1803               	btfsc	3,0
  7151  1521  2D24               	goto	u11520
  7152  1522  3001               	movlw	1
  7153  1523  2D25               	goto	u11530
  7154  1524                     u11520:	
  7155  1524  3000               	movlw	0
  7156  1525                     u11530:	
  7157  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7158  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7159  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7160  1528  00B1               	movwf	_vfpfcnvrt$1256^(0+256)
  7161  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7162  152A  00B2               	movwf	(_vfpfcnvrt$1256+1)^(0+256)
  7163  152B  0831               	movf	_vfpfcnvrt$1256^(0+256),w
  7164  152C  0432               	iorwf	(_vfpfcnvrt$1256+1)^(0+256),w
  7165  152D  1D03               	btfss	3,2
  7166  152E  2CFE               	goto	l8021
  7167  152F                     l8029:	
  7168                           
  7169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  7170  152F  0021               	movlb	1	; select bank1
  7171  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7172  1531  0086               	movwf	6
  7173  1532  0187               	clrf	7
  7174  1533  3F40               	moviw [0]fsr1
  7175  1534  0022               	movlb	2	; select bank2
  7176  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7177  1536  3F41               	moviw [1]fsr1
  7178  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7179  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  7180  1539  0084               	movwf	4
  7181  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7182  153B  0085               	movwf	5
  7183  153C  0800               	movf	0,w	;code access
  7184  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7185  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7186  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7187  1540  00F7               	movwf	tolower@c
  7188  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7189  1542  00F8               	movwf	tolower@c+1
  7190  1543  31B2  22D9  3193   	fcall	_tolower
  7191  1546  0877               	movf	?_tolower,w
  7192  1547  0022               	movlb	2	; select bank2
  7193  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7194  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7195  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  7196                           
  7197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  7198  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  7199  154C  1903               	btfsc	3,2
  7200  154D  2D8F               	goto	l8039
  7201                           
  7202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  7203  154E  0021               	movlb	1	; select bank1
  7204  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7205  1550  0086               	movwf	6
  7206  1551  0187               	clrf	7
  7207  1552  3F40               	moviw [0]fsr1
  7208  1553  0022               	movlb	2	; select bank2
  7209  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7210  1555  3F41               	moviw [1]fsr1
  7211  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7212  1557  3001               	movlw	1
  7213  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7214  1559  0084               	movwf	4
  7215  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7216  155B  1803               	skipnc
  7217  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7218  155D  0085               	movwf	5
  7219  155E  0800               	movf	0,w	;code access
  7220  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7221  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7222  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7223  1562  00F7               	movwf	tolower@c
  7224  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7225  1564  00F8               	movwf	tolower@c+1
  7226  1565  31B2  22D9  3193   	fcall	_tolower
  7227  1568  0877               	movf	?_tolower,w
  7228  1569  0022               	movlb	2	; select bank2
  7229  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7230  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7231  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  7232                           
  7233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  7234  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  7235  156E  1903               	btfsc	3,2
  7236  156F  2D8F               	goto	l8039
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  7239  1570  0021               	movlb	1	; select bank1
  7240  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7241  1572  0086               	movwf	6
  7242  1573  0187               	clrf	7
  7243  1574  3F40               	moviw [0]fsr1
  7244  1575  0022               	movlb	2	; select bank2
  7245  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7246  1577  3F41               	moviw [1]fsr1
  7247  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7248  1579  3002               	movlw	2
  7249  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7250  157B  0084               	movwf	4
  7251  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7252  157D  1803               	skipnc
  7253  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7254  157F  0085               	movwf	5
  7255  1580  0800               	movf	0,w	;code access
  7256  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7257  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7258  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7259  1584  00F7               	movwf	tolower@c
  7260  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7261  1586  00F8               	movwf	tolower@c+1
  7262  1587  31B2  22D9  3193   	fcall	_tolower
  7263  158A  0877               	movf	?_tolower,w
  7264  158B  0022               	movlb	2	; select bank2
  7265  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7266  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7267  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  7268  158F                     l8039:	
  7269                           
  7270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7271  158F  0021               	movlb	1	; select bank1
  7272  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7273  1591  0086               	movwf	6
  7274  1592  0187               	clrf	7
  7275  1593  3F40               	moviw [0]fsr1
  7276  1594  0022               	movlb	2	; select bank2
  7277  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7278  1596  3F41               	moviw [1]fsr1
  7279  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7280  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  7281  1599  0084               	movwf	4
  7282  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7283  159B  0085               	movwf	5
  7284  159C  0012               	moviw fsr0++
  7285  159D  3A63               	xorlw	99
  7286  159E  31AA  1D03         	btfss	3,2
  7287  15A0  2A27               	goto	l8049
  7288                           
  7289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7290  15A1  0021               	movlb	1	; select bank1
  7291  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  7292  15A3  0086               	movwf	6
  7293  15A4  0187               	clrf	7
  7294  15A5  3001               	movlw	1
  7295  15A6  0781               	addwf	1,f
  7296  15A7  3141               	addfsr 1,1
  7297  15A8  1803               	skipnc
  7298  15A9  0A81               	incf	1,f
  7299                           
  7300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7301  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  7302  15AB  0086               	movwf	6
  7303  15AC  3001               	movlw	1	; select bank2/3
  7304  15AD  0087               	movwf	7
  7305  15AE  0801               	movf	1,w
  7306  15AF  0084               	movwf	4
  7307  15B0  3001               	movlw	1	; select bank2/3
  7308  15B1  0085               	movwf	5
  7309  15B2  3002               	movlw	2
  7310  15B3  0781               	addwf	1,f
  7311  15B4  0800               	movf	0,w
  7312  15B5  0022               	movlb	2	; select bank2
  7313  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7314  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  7315  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  7316                           
  7317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7318  15B9  0021               	movlb	1	; select bank1
  7319  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  7320  15BB  0020               	movlb	0	; select bank0
  7321  15BC  00B1               	movwf	ctoa@fp+1
  7322  15BD  0021               	movlb	1	; select bank1
  7323  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  7324  15BF  0020               	movlb	0	; select bank0
  7325  15C0  00B0               	movwf	ctoa@fp
  7326  15C1  0022               	movlb	2	; select bank2
  7327  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  7328  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7329  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  7330  15C5  0020               	movlb	0	; select bank0
  7331  15C6  00B2               	movwf	ctoa@c
  7332  15C7  31B2  22FB         	fcall	_ctoa
  7333  15C9  0020               	movlb	0	; select bank0
  7334  15CA  0831               	movf	?_ctoa+1,w
  7335  15CB  0021               	movlb	1	; select bank1
  7336  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  7337  15CD  0020               	movlb	0	; select bank0
  7338  15CE  0830               	movf	?_ctoa,w
  7339  15CF  0021               	movlb	1	; select bank1
  7340  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  7341  15D1  0008               	return
  7342  15D2                     L16:	
  7343  15D2                     L15:	
  7344  15D2  318F  2FDA         	ljmp	l8405
  7345                           
  7346                           	psect	text8
  7347  1CC5                     __ptext8:	
  7348 ;; *************** function _xtoa *****************
  7349 ;; Defined at:
  7350 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7353 ;;		 -> vsnprintf@f(6), 
  7354 ;;  d               8   18[BANK0 ] unsigned long long 
  7355 ;;  x               1   26[BANK0 ] unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  n               8   43[BANK0 ] unsigned long long 
  7358 ;;  c               2   53[BANK0 ] int 
  7359 ;;  i               2   51[BANK0 ] int 
  7360 ;;  w               2   41[BANK0 ] int 
  7361 ;;  p               2   39[BANK0 ] int 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  2   16[BANK0 ] int 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7371 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7372 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7373 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7374 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7375 ;;Total ram usage:       39 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    5
  7378 ;; This function calls:
  7379 ;;		_isalpha
  7380 ;;		_isupper
  7381 ;;		_pad
  7382 ;;		_toupper
  7383 ;; This function is called by:
  7384 ;;		_vfpfcnvrt
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function _xtoa
  7390  1CC5                     _xtoa:	
  7391                           
  7392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7393                           
  7394                           ;incstack = 0
  7395                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7396  1CC5  0023               	movlb	3	; select bank3
  7397  1CC6  1BC1               	btfsc	(_prec+1)^(0+384),7
  7398  1CC7  2CCC               	goto	l777
  7399                           
  7400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7401  1CC8  30FD               	movlw	253
  7402  1CC9  05C2               	andwf	_flags^(0+384),f
  7403  1CCA  30FF               	movlw	255
  7404  1CCB  05C3               	andwf	(_flags+1)^(0+384),f
  7405  1CCC                     l777:	
  7406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  7407                           
  7408                           
  7409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7410  1CCC  0841               	movf	(_prec+1)^(0+384),w
  7411  1CCD  3A80               	xorlw	128
  7412  1CCE  0020               	movlb	0	; select bank0
  7413  1CCF  00BB               	movwf	??_xtoa
  7414  1CD0  3080               	movlw	128
  7415  1CD1  023B               	subwf	??_xtoa,w
  7416  1CD2  1D03               	skipz
  7417  1CD3  2CD7               	goto	u11195
  7418  1CD4  3001               	movlw	1
  7419  1CD5  0023               	movlb	3	; select bank3
  7420  1CD6  0240               	subwf	_prec^(0+384),w
  7421  1CD7                     u11195:	
  7422  1CD7  1803               	skipnc
  7423  1CD8  2CDF               	goto	l7851
  7424  1CD9  3001               	movlw	1
  7425  1CDA  0020               	movlb	0	; select bank0
  7426  1CDB  00C7               	movwf	xtoa@p
  7427  1CDC  3000               	movlw	0
  7428  1CDD  00C8               	movwf	xtoa@p+1
  7429  1CDE  2CE7               	goto	l781
  7430  1CDF                     l7851:	
  7431  1CDF  0023               	movlb	3	; select bank3
  7432  1CE0  0841               	movf	(_prec+1)^(0+384),w
  7433  1CE1  0020               	movlb	0	; select bank0
  7434  1CE2  00C8               	movwf	xtoa@p+1
  7435  1CE3  0023               	movlb	3	; select bank3
  7436  1CE4  0840               	movf	_prec^(0+384),w
  7437  1CE5  0020               	movlb	0	; select bank0
  7438  1CE6  00C7               	movwf	xtoa@p
  7439  1CE7                     l781:	
  7440                           
  7441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7442  1CE7  0023               	movlb	3	; select bank3
  7443  1CE8  083F               	movf	(_width+1)^(0+384),w
  7444  1CE9  0020               	movlb	0	; select bank0
  7445  1CEA  00CA               	movwf	xtoa@w+1
  7446  1CEB  0023               	movlb	3	; select bank3
  7447  1CEC  083E               	movf	_width^(0+384),w
  7448  1CED  0020               	movlb	0	; select bank0
  7449  1CEE  00C9               	movwf	xtoa@w
  7450                           
  7451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7452  1CEF  0023               	movlb	3	; select bank3
  7453  1CF0  1E42               	btfss	_flags^(0+384),4
  7454  1CF1  2CF7               	goto	l7857
  7455                           
  7456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7457  1CF2  30FE               	movlw	254
  7458  1CF3  0020               	movlb	0	; select bank0
  7459  1CF4  07C9               	addwf	xtoa@w,f
  7460  1CF5  30FF               	movlw	255
  7461  1CF6  3DCA               	addwfc	xtoa@w+1,f
  7462  1CF7                     l7857:	
  7463                           
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7465  1CF7  0020               	movlb	0	; select bank0
  7466  1CF8  0832               	movf	xtoa@d,w
  7467  1CF9  00CB               	movwf	xtoa@n
  7468  1CFA  0833               	movf	xtoa@d+1,w
  7469  1CFB  00CC               	movwf	xtoa@n+1
  7470  1CFC  0834               	movf	xtoa@d+2,w
  7471  1CFD  00CD               	movwf	xtoa@n+2
  7472  1CFE  0835               	movf	xtoa@d+3,w
  7473  1CFF  00CE               	movwf	xtoa@n+3
  7474  1D00  0836               	movf	xtoa@d+4,w
  7475  1D01  00CF               	movwf	xtoa@n+4
  7476  1D02  0837               	movf	xtoa@d+5,w
  7477  1D03  00D0               	movwf	xtoa@n+5
  7478  1D04  0838               	movf	xtoa@d+6,w
  7479  1D05  00D1               	movwf	xtoa@n+6
  7480  1D06  0839               	movf	xtoa@d+7,w
  7481  1D07  00D2               	movwf	xtoa@n+7
  7482                           
  7483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7484  1D08  304F               	movlw	79
  7485  1D09  00D3               	movwf	xtoa@i
  7486  1D0A  3000               	movlw	0
  7487  1D0B  00D4               	movwf	xtoa@i+1
  7488                           
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7490  1D0C  0024               	movlb	4	; select bank4
  7491  1D0D  01EF               	clrf	(_dbuf^(0+512)+79)
  7492                           
  7493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7494  1D0E  2DB9               	goto	l7889
  7495  1D0F                     l7861:	
  7496                           
  7497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7498  1D0F  30FF               	movlw	255
  7499  1D10  0020               	movlb	0	; select bank0
  7500  1D11  07D3               	addwf	xtoa@i,f
  7501  1D12  30FF               	movlw	255
  7502  1D13  3DD4               	addwfc	xtoa@i+1,f
  7503                           
  7504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7505  1D14  300F               	movlw	15
  7506  1D15  054B               	andwf	xtoa@n,w
  7507  1D16  00D5               	movwf	xtoa@c
  7508  1D17  3000               	movlw	0
  7509  1D18  054C               	andwf	xtoa@n+1,w
  7510  1D19  00D6               	movwf	xtoa@c+1
  7511                           
  7512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7513  1D1A  0856               	movf	xtoa@c+1,w
  7514  1D1B  3A80               	xorlw	128
  7515  1D1C  00BB               	movwf	??_xtoa
  7516  1D1D  3080               	movlw	128
  7517  1D1E  023B               	subwf	??_xtoa,w
  7518  1D1F  1D03               	skipz
  7519  1D20  2D23               	goto	u11215
  7520  1D21  300A               	movlw	10
  7521  1D22  0255               	subwf	xtoa@c,w
  7522  1D23                     u11215:	
  7523  1D23  1C03               	skipc
  7524  1D24  2D29               	goto	l7865
  7525  1D25  0020               	movlb	0	; select bank0
  7526  1D26  0855               	movf	xtoa@c,w
  7527  1D27  3E57               	addlw	87
  7528  1D28  2D2C               	goto	L2
  7529  1D29                     l7865:	
  7530  1D29  0020               	movlb	0	; select bank0
  7531  1D2A  0855               	movf	xtoa@c,w
  7532  1D2B  3E30               	addlw	48
  7533  1D2C                     L2:	
  7534  1D2C  00D5               	movwf	xtoa@c
  7535  1D2D  3000               	movlw	0
  7536  1D2E  3D56               	addwfc	xtoa@c+1,w
  7537  1D2F  00D6               	movwf	xtoa@c+1
  7538  1D30  083A               	movf	xtoa@x,w
  7539  1D31  3EBF               	addlw	191
  7540  1D32  00BB               	movwf	??_xtoa
  7541  1D33  30FF               	movlw	255
  7542  1D34  1803               	skipnc
  7543  1D35  3000               	movlw	0
  7544  1D36  00BC               	movwf	??_xtoa+1
  7545  1D37  3000               	movlw	0
  7546  1D38  023C               	subwf	??_xtoa+1,w
  7547  1D39  301A               	movlw	26
  7548  1D3A  1903               	skipnz
  7549  1D3B  023B               	subwf	??_xtoa,w
  7550  1D3C  1803               	btfsc	3,0
  7551  1D3D  2D40               	goto	u11220
  7552  1D3E  3001               	movlw	1
  7553  1D3F  2D41               	goto	u11230
  7554  1D40                     u11220:	
  7555  1D40  3000               	movlw	0
  7556  1D41                     u11230:	
  7557  1D41  00BD               	movwf	??_xtoa+2
  7558  1D42  01BE               	clrf	??_xtoa+3
  7559  1D43  083D               	movf	??_xtoa+2,w
  7560  1D44  00C3               	movwf	_xtoa$1240
  7561  1D45  083E               	movf	??_xtoa+3,w
  7562  1D46  00C4               	movwf	_xtoa$1240+1
  7563  1D47  0843               	movf	_xtoa$1240,w
  7564  1D48  0444               	iorwf	_xtoa$1240+1,w
  7565  1D49  1903               	btfsc	3,2
  7566  1D4A  2D77               	goto	l7881
  7567  1D4B  3020               	movlw	32
  7568  1D4C  0455               	iorwf	xtoa@c,w
  7569  1D4D  00BB               	movwf	??_xtoa
  7570  1D4E  3000               	movlw	0
  7571  1D4F  0456               	iorwf	xtoa@c+1,w
  7572  1D50  00BC               	movwf	??_xtoa+1
  7573  1D51  083B               	movf	??_xtoa,w
  7574  1D52  3E9F               	addlw	159
  7575  1D53  00BD               	movwf	??_xtoa+2
  7576  1D54  30FF               	movlw	255
  7577  1D55  3D3C               	addwfc	??_xtoa+1,w
  7578  1D56  00BE               	movwf	??_xtoa+3
  7579  1D57  3000               	movlw	0
  7580  1D58  023E               	subwf	??_xtoa+3,w
  7581  1D59  301A               	movlw	26
  7582  1D5A  1903               	skipnz
  7583  1D5B  023D               	subwf	??_xtoa+2,w
  7584  1D5C  1803               	btfsc	3,0
  7585  1D5D  2D60               	goto	u11250
  7586  1D5E  3001               	movlw	1
  7587  1D5F  2D61               	goto	u11260
  7588  1D60                     u11250:	
  7589  1D60  3000               	movlw	0
  7590  1D61                     u11260:	
  7591  1D61  00BF               	movwf	??_xtoa+4
  7592  1D62  01C0               	clrf	??_xtoa+5
  7593  1D63  083F               	movf	??_xtoa+4,w
  7594  1D64  00C5               	movwf	_xtoa$1241
  7595  1D65  0840               	movf	??_xtoa+5,w
  7596  1D66  00C6               	movwf	_xtoa$1241+1
  7597  1D67  0845               	movf	_xtoa$1241,w
  7598  1D68  0446               	iorwf	_xtoa$1241+1,w
  7599  1D69  1903               	btfsc	3,2
  7600  1D6A  2D77               	goto	l7881
  7601                           
  7602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7603  1D6B  0856               	movf	xtoa@c+1,w
  7604  1D6C  00F8               	movwf	toupper@c+1
  7605  1D6D  0855               	movf	xtoa@c,w
  7606  1D6E  00F7               	movwf	toupper@c
  7607  1D6F  31A8  200E  319C   	fcall	_toupper
  7608  1D72  0878               	movf	?_toupper+1,w
  7609  1D73  0020               	movlb	0	; select bank0
  7610  1D74  00D6               	movwf	xtoa@c+1
  7611  1D75  0877               	movf	?_toupper,w
  7612  1D76  00D5               	movwf	xtoa@c
  7613  1D77                     l7881:	
  7614                           
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7616  1D77  0855               	movf	xtoa@c,w
  7617  1D78  00BB               	movwf	??_xtoa
  7618  1D79  0853               	movf	xtoa@i,w
  7619  1D7A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7620  1D7B  0086               	movwf	6
  7621  1D7C  3002               	movlw	2	; select bank4/5
  7622  1D7D  0087               	movwf	7
  7623  1D7E  083B               	movf	??_xtoa,w
  7624  1D7F  0081               	movwf	1
  7625                           
  7626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7627  1D80  30FF               	movlw	255
  7628  1D81  07C7               	addwf	xtoa@p,f
  7629  1D82  30FF               	movlw	255
  7630  1D83  3DC8               	addwfc	xtoa@p+1,f
  7631                           
  7632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7633  1D84  30FF               	movlw	255
  7634  1D85  07C9               	addwf	xtoa@w,f
  7635  1D86  30FF               	movlw	255
  7636  1D87  3DCA               	addwfc	xtoa@w+1,f
  7637                           
  7638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7639  1D88  304B               	movlw	low xtoa@n
  7640  1D89  0086               	movwf	6
  7641  1D8A  3000               	movlw	high xtoa@n
  7642  1D8B  0087               	movwf	7
  7643  1D8C  3F40               	moviw [0]fsr1
  7644  1D8D  00BB               	movwf	??_xtoa
  7645  1D8E  3F41               	moviw [1]fsr1
  7646  1D8F  00BC               	movwf	??_xtoa+1
  7647  1D90  3F42               	moviw [2]fsr1
  7648  1D91  00BD               	movwf	??_xtoa+2
  7649  1D92  3F43               	moviw [3]fsr1
  7650  1D93  00BE               	movwf	??_xtoa+3
  7651  1D94  3F44               	moviw [4]fsr1
  7652  1D95  00BF               	movwf	??_xtoa+4
  7653  1D96  3F45               	moviw [5]fsr1
  7654  1D97  00C0               	movwf	??_xtoa+5
  7655  1D98  3F46               	moviw [6]fsr1
  7656  1D99  00C1               	movwf	??_xtoa+6
  7657  1D9A  3F47               	moviw [7]fsr1
  7658  1D9B  00C2               	movwf	??_xtoa+7
  7659  1D9C  3004               	movlw	4
  7660  1D9D                     u11285:	
  7661  1D9D  0020               	movlb	0	; select bank0
  7662  1D9E  36C2               	lsrf	??_xtoa+7,f
  7663  1D9F  0CC1               	rrf	??_xtoa+6,f
  7664  1DA0  0CC0               	rrf	??_xtoa+5,f
  7665  1DA1  0CBF               	rrf	??_xtoa+4,f
  7666  1DA2  0CBE               	rrf	??_xtoa+3,f
  7667  1DA3  0CBD               	rrf	??_xtoa+2,f
  7668  1DA4  0CBC               	rrf	??_xtoa+1,f
  7669  1DA5  0CBB               	rrf	??_xtoa,f
  7670  1DA6  0B89               	decfsz	9,f
  7671  1DA7  2D9D               	goto	u11285
  7672  1DA8  0020               	movlb	0	; select bank0
  7673  1DA9  0842               	movf	??_xtoa+7,w
  7674  1DAA  00D2               	movwf	xtoa@n+7
  7675  1DAB  0841               	movf	??_xtoa+6,w
  7676  1DAC  00D1               	movwf	xtoa@n+6
  7677  1DAD  0840               	movf	??_xtoa+5,w
  7678  1DAE  00D0               	movwf	xtoa@n+5
  7679  1DAF  083F               	movf	??_xtoa+4,w
  7680  1DB0  00CF               	movwf	xtoa@n+4
  7681  1DB1  083E               	movf	??_xtoa+3,w
  7682  1DB2  00CE               	movwf	xtoa@n+3
  7683  1DB3  083D               	movf	??_xtoa+2,w
  7684  1DB4  00CD               	movwf	xtoa@n+2
  7685  1DB5  083C               	movf	??_xtoa+1,w
  7686  1DB6  00CC               	movwf	xtoa@n+1
  7687  1DB7  083B               	movf	??_xtoa,w
  7688  1DB8  00CB               	movwf	xtoa@n
  7689  1DB9                     l7889:	
  7690                           
  7691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7692  1DB9  0020               	movlb	0	; select bank0
  7693  1DBA  0854               	movf	xtoa@i+1,w
  7694  1DBB  3A80               	xorlw	128
  7695  1DBC  00BB               	movwf	??_xtoa
  7696  1DBD  3080               	movlw	128
  7697  1DBE  023B               	subwf	??_xtoa,w
  7698  1DBF  1D03               	skipz
  7699  1DC0  2DC3               	goto	u11295
  7700  1DC1  3002               	movlw	2
  7701  1DC2  0253               	subwf	xtoa@i,w
  7702  1DC3                     u11295:	
  7703  1DC3  1C03               	skipc
  7704  1DC4  2DEA               	goto	l802
  7705  1DC5  0020               	movlb	0	; select bank0
  7706  1DC6  084B               	movf	xtoa@n,w
  7707  1DC7  044C               	iorwf	xtoa@n+1,w
  7708  1DC8  044D               	iorwf	xtoa@n+2,w
  7709  1DC9  044E               	iorwf	xtoa@n+3,w
  7710  1DCA  044F               	iorwf	xtoa@n+4,w
  7711  1DCB  0450               	iorwf	xtoa@n+5,w
  7712  1DCC  0451               	iorwf	xtoa@n+6,w
  7713  1DCD  0452               	iorwf	xtoa@n+7,w
  7714  1DCE  1D03               	skipz
  7715  1DCF  2D0F               	goto	l7861
  7716  1DD0  0848               	movf	xtoa@p+1,w
  7717  1DD1  3A80               	xorlw	128
  7718  1DD2  00BB               	movwf	??_xtoa
  7719  1DD3  3080               	movlw	128
  7720  1DD4  023B               	subwf	??_xtoa,w
  7721  1DD5  1D03               	skipz
  7722  1DD6  2DD9               	goto	u11315
  7723  1DD7  3001               	movlw	1
  7724  1DD8  0247               	subwf	xtoa@p,w
  7725  1DD9                     u11315:	
  7726  1DD9  1803               	skipnc
  7727  1DDA  2D0F               	goto	l7861
  7728  1DDB  0020               	movlb	0	; select bank0
  7729  1DDC  084A               	movf	xtoa@w+1,w
  7730  1DDD  3A80               	xorlw	128
  7731  1DDE  00BB               	movwf	??_xtoa
  7732  1DDF  3080               	movlw	128
  7733  1DE0  023B               	subwf	??_xtoa,w
  7734  1DE1  1D03               	skipz
  7735  1DE2  2DE5               	goto	u11325
  7736  1DE3  3001               	movlw	1
  7737  1DE4  0249               	subwf	xtoa@w,w
  7738  1DE5                     u11325:	
  7739  1DE5  1C03               	skipc
  7740  1DE6  2DEA               	goto	l802
  7741  1DE7  0023               	movlb	3	; select bank3
  7742  1DE8  18C2               	btfsc	_flags^(0+384),1
  7743  1DE9  2D0F               	goto	l7861
  7744  1DEA                     l802:	
  7745                           
  7746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7747  1DEA  0023               	movlb	3	; select bank3
  7748  1DEB  1E42               	btfss	_flags^(0+384),4
  7749  1DEC  2E08               	goto	l7905
  7750                           
  7751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7752  1DED  30FF               	movlw	255
  7753  1DEE  0020               	movlb	0	; select bank0
  7754  1DEF  07D3               	addwf	xtoa@i,f
  7755  1DF0  30FF               	movlw	255
  7756  1DF1  3DD4               	addwfc	xtoa@i+1,f
  7757                           
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7759  1DF2  083A               	movf	xtoa@x,w
  7760  1DF3  00BB               	movwf	??_xtoa
  7761  1DF4  0853               	movf	xtoa@i,w
  7762  1DF5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7763  1DF6  0086               	movwf	6
  7764  1DF7  3002               	movlw	2	; select bank4/5
  7765  1DF8  0087               	movwf	7
  7766  1DF9  083B               	movf	??_xtoa,w
  7767  1DFA  0081               	movwf	1
  7768                           
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7770  1DFB  30FF               	movlw	255
  7771  1DFC  07D3               	addwf	xtoa@i,f
  7772  1DFD  30FF               	movlw	255
  7773  1DFE  3DD4               	addwfc	xtoa@i+1,f
  7774                           
  7775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7776  1DFF  3030               	movlw	48
  7777  1E00  00BB               	movwf	??_xtoa
  7778  1E01  0853               	movf	xtoa@i,w
  7779  1E02  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7780  1E03  0086               	movwf	6
  7781  1E04  3002               	movlw	2	; select bank4/5
  7782  1E05  0087               	movwf	7
  7783  1E06  083B               	movf	??_xtoa,w
  7784  1E07  0081               	movwf	1
  7785  1E08                     l7905:	
  7786                           
  7787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7788  1E08  0020               	movlb	0	; select bank0
  7789  1E09  0831               	movf	xtoa@fp+1,w
  7790  1E0A  00A7               	movwf	pad@fp+1
  7791  1E0B  0830               	movf	xtoa@fp,w
  7792  1E0C  00A6               	movwf	pad@fp
  7793  1E0D  0853               	movf	xtoa@i,w
  7794  1E0E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7795  1E0F  00BB               	movwf	??_xtoa
  7796  1E10  083B               	movf	??_xtoa,w
  7797  1E11  00A8               	movwf	pad@buf
  7798  1E12  084A               	movf	xtoa@w+1,w
  7799  1E13  00AA               	movwf	pad@p+1
  7800  1E14  0849               	movf	xtoa@w,w
  7801  1E15  00A9               	movwf	pad@p
  7802  1E16  31B5  256D         	fcall	_pad
  7803  1E18  0020               	movlb	0	; select bank0
  7804  1E19  0827               	movf	?_pad+1,w
  7805  1E1A  00B1               	movwf	?_xtoa+1
  7806  1E1B  0826               	movf	?_pad,w
  7807  1E1C  00B0               	movwf	?_xtoa
  7808  1E1D  0008               	return
  7809  1E1E                     __end_of_xtoa:	
  7810                           
  7811                           	psect	text9
  7812  280E                     __ptext9:	
  7813 ;; *************** function _toupper *****************
  7814 ;; Defined at:
  7815 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  c               2    7[COMMON] int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  2    7[COMMON] int 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7831 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7832 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7833 ;;Total ram usage:        8 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    2
  7836 ;; This function calls:
  7837 ;;		_islower
  7838 ;; This function is called by:
  7839 ;;		_xtoa
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _toupper
  7845  280E                     _toupper:	
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7849  280E  0877               	movf	toupper@c,w
  7850  280F  3E9F               	addlw	159
  7851  2810  0020               	movlb	0	; select bank0
  7852  2811  00A0               	movwf	??_toupper
  7853  2812  30FF               	movlw	255
  7854  2813  3D78               	addwfc	toupper@c+1,w
  7855  2814  00A1               	movwf	??_toupper+1
  7856  2815  3000               	movlw	0
  7857  2816  0221               	subwf	??_toupper+1,w
  7858  2817  301A               	movlw	26
  7859  2818  1903               	skipnz
  7860  2819  0220               	subwf	??_toupper,w
  7861  281A  1803               	btfsc	3,0
  7862  281B  281E               	goto	u10170
  7863  281C  3001               	movlw	1
  7864  281D  281F               	goto	u10180
  7865  281E                     u10170:	
  7866  281E  3000               	movlw	0
  7867  281F                     u10180:	
  7868  281F  00A2               	movwf	??_toupper+2
  7869  2820  01A3               	clrf	??_toupper+3
  7870  2821  0822               	movf	??_toupper+2,w
  7871  2822  00F9               	movwf	_toupper$1847
  7872  2823  0823               	movf	??_toupper+3,w
  7873  2824  00FA               	movwf	_toupper$1847+1
  7874  2825  0879               	movf	_toupper$1847,w
  7875  2826  047A               	iorwf	_toupper$1847+1,w
  7876  2827  1903               	btfsc	3,2
  7877  2828  0008               	return
  7878  2829  305F               	movlw	95
  7879  282A  0577               	andwf	toupper@c,w
  7880  282B  00F7               	movwf	?_toupper
  7881  282C  3000               	movlw	0
  7882  282D  0578               	andwf	toupper@c+1,w
  7883  282E  00F8               	movwf	?_toupper+1
  7884  282F  0008               	return
  7885  2830                     __end_of_toupper:	
  7886                           
  7887                           	psect	text10
  7888  3182                     __ptext10:	
  7889 ;; *************** function _islower *****************
  7890 ;; Defined at:
  7891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  c               2    1[COMMON] int 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2    1[COMMON] int 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7909 ;;Total ram usage:        6 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    1
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_toupper
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _islower
  7921  3182                     _islower:	
  7922                           
  7923                           ;incstack = 0
  7924                           ; Regs used in _islower: [wreg+status,2+status,0]
  7925  3182  0871               	movf	islower@c,w
  7926  3183  3E9F               	addlw	159
  7927  3184  00F3               	movwf	??_islower
  7928  3185  30FF               	movlw	255
  7929  3186  3D72               	addwfc	islower@c+1,w
  7930  3187  00F4               	movwf	??_islower+1
  7931  3188  3000               	movlw	0
  7932  3189  0274               	subwf	??_islower+1,w
  7933  318A  301A               	movlw	26
  7934  318B  1903               	skipnz
  7935  318C  0273               	subwf	??_islower,w
  7936  318D  1803               	btfsc	3,0
  7937  318E  2991               	goto	u10080
  7938  318F  3001               	movlw	1
  7939  3190  2992               	goto	u10090
  7940  3191                     u10080:	
  7941  3191  3000               	movlw	0
  7942  3192                     u10090:	
  7943  3192  00F5               	movwf	??_islower+2
  7944  3193  01F6               	clrf	??_islower+3
  7945  3194  0875               	movf	??_islower+2,w
  7946  3195  00F1               	movwf	?_islower
  7947  3196  0876               	movf	??_islower+3,w
  7948  3197  00F2               	movwf	?_islower+1
  7949  3198  0008               	return
  7950  3199                     __end_of_islower:	
  7951                           
  7952                           	psect	text11
  7953  31FE                     __ptext11:	
  7954 ;; *************** function _isalpha *****************
  7955 ;; Defined at:
  7956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  c               2    1[COMMON] int 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2    1[COMMON] int 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7972 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7973 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7974 ;;Total ram usage:        8 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    1
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_xtoa
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           
  7985                           ;psect for function _isalpha
  7986  31FE                     _isalpha:	
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7990  31FE  3020               	movlw	32
  7991  31FF  0471               	iorwf	isalpha@c,w
  7992  3200  00F3               	movwf	??_isalpha
  7993  3201  3000               	movlw	0
  7994  3202  0472               	iorwf	isalpha@c+1,w
  7995  3203  00F4               	movwf	??_isalpha+1
  7996  3204  0873               	movf	??_isalpha,w
  7997  3205  3E9F               	addlw	159
  7998  3206  00F5               	movwf	??_isalpha+2
  7999  3207  30FF               	movlw	255
  8000  3208  3D74               	addwfc	??_isalpha+1,w
  8001  3209  00F6               	movwf	??_isalpha+3
  8002  320A  3000               	movlw	0
  8003  320B  0276               	subwf	??_isalpha+3,w
  8004  320C  301A               	movlw	26
  8005  320D  1903               	skipnz
  8006  320E  0275               	subwf	??_isalpha+2,w
  8007  320F  1803               	btfsc	3,0
  8008  3210  2A13               	goto	u5680
  8009  3211  3001               	movlw	1
  8010  3212  2A14               	goto	u5690
  8011  3213                     u5680:	
  8012  3213  3000               	movlw	0
  8013  3214                     u5690:	
  8014  3214  00F7               	movwf	??_isalpha+4
  8015  3215  01F8               	clrf	??_isalpha+5
  8016  3216  0877               	movf	??_isalpha+4,w
  8017  3217  00F1               	movwf	?_isalpha
  8018  3218  0878               	movf	??_isalpha+5,w
  8019  3219  00F2               	movwf	?_isalpha+1
  8020  321A  0008               	return
  8021  321B                     __end_of_isalpha:	
  8022                           
  8023                           	psect	text12
  8024  2455                     __ptext12:	
  8025 ;; *************** function _utoa *****************
  8026 ;; Defined at:
  8027 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8030 ;;		 -> vsnprintf@f(6), 
  8031 ;;  d               8   18[BANK0 ] unsigned long long 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  n               8   31[BANK0 ] unsigned long long 
  8034 ;;  i               2   39[BANK0 ] int 
  8035 ;;  w               2   29[BANK0 ] int 
  8036 ;;  p               2   27[BANK0 ] int 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  2   16[BANK0 ] int 
  8039 ;; Registers used:
  8040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8046 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8047 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8049 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8050 ;;Total ram usage:       25 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    5
  8053 ;; This function calls:
  8054 ;;		___lodiv
  8055 ;;		___lomod
  8056 ;;		_pad
  8057 ;; This function is called by:
  8058 ;;		_vfpfcnvrt
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _utoa
  8064  2455                     _utoa:	
  8065                           
  8066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8067                           
  8068                           ;incstack = 0
  8069                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8070  2455  0023               	movlb	3	; select bank3
  8071  2456  1BC1               	btfsc	(_prec+1)^(0+384),7
  8072  2457  2C5C               	goto	l762
  8073                           
  8074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8075  2458  30FD               	movlw	253
  8076  2459  05C2               	andwf	_flags^(0+384),f
  8077  245A  30FF               	movlw	255
  8078  245B  05C3               	andwf	(_flags+1)^(0+384),f
  8079  245C                     l762:	
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  8081                           
  8082                           
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8084  245C  0841               	movf	(_prec+1)^(0+384),w
  8085  245D  3A80               	xorlw	128
  8086  245E  0020               	movlb	0	; select bank0
  8087  245F  00BA               	movwf	??_utoa
  8088  2460  3080               	movlw	128
  8089  2461  023A               	subwf	??_utoa,w
  8090  2462  1D03               	skipz
  8091  2463  2C67               	goto	u11125
  8092  2464  3001               	movlw	1
  8093  2465  0023               	movlb	3	; select bank3
  8094  2466  0240               	subwf	_prec^(0+384),w
  8095  2467                     u11125:	
  8096  2467  1803               	skipnc
  8097  2468  2C6F               	goto	l7815
  8098  2469  3001               	movlw	1
  8099  246A  0020               	movlb	0	; select bank0
  8100  246B  00BB               	movwf	utoa@p
  8101  246C  3000               	movlw	0
  8102  246D  00BC               	movwf	utoa@p+1
  8103  246E  2C77               	goto	l766
  8104  246F                     l7815:	
  8105  246F  0023               	movlb	3	; select bank3
  8106  2470  0841               	movf	(_prec+1)^(0+384),w
  8107  2471  0020               	movlb	0	; select bank0
  8108  2472  00BC               	movwf	utoa@p+1
  8109  2473  0023               	movlb	3	; select bank3
  8110  2474  0840               	movf	_prec^(0+384),w
  8111  2475  0020               	movlb	0	; select bank0
  8112  2476  00BB               	movwf	utoa@p
  8113  2477                     l766:	
  8114                           
  8115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8116  2477  0023               	movlb	3	; select bank3
  8117  2478  083F               	movf	(_width+1)^(0+384),w
  8118  2479  0020               	movlb	0	; select bank0
  8119  247A  00BE               	movwf	utoa@w+1
  8120  247B  0023               	movlb	3	; select bank3
  8121  247C  083E               	movf	_width^(0+384),w
  8122  247D  0020               	movlb	0	; select bank0
  8123  247E  00BD               	movwf	utoa@w
  8124                           
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8126  247F  0832               	movf	utoa@d,w
  8127  2480  00BF               	movwf	utoa@n
  8128  2481  0833               	movf	utoa@d+1,w
  8129  2482  00C0               	movwf	utoa@n+1
  8130  2483  0834               	movf	utoa@d+2,w
  8131  2484  00C1               	movwf	utoa@n+2
  8132  2485  0835               	movf	utoa@d+3,w
  8133  2486  00C2               	movwf	utoa@n+3
  8134  2487  0836               	movf	utoa@d+4,w
  8135  2488  00C3               	movwf	utoa@n+4
  8136  2489  0837               	movf	utoa@d+5,w
  8137  248A  00C4               	movwf	utoa@n+5
  8138  248B  0838               	movf	utoa@d+6,w
  8139  248C  00C5               	movwf	utoa@n+6
  8140  248D  0839               	movf	utoa@d+7,w
  8141  248E  00C6               	movwf	utoa@n+7
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8144  248F  304F               	movlw	79
  8145  2490  00C7               	movwf	utoa@i
  8146  2491  3000               	movlw	0
  8147  2492  00C8               	movwf	utoa@i+1
  8148                           
  8149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8150  2493  0024               	movlb	4	; select bank4
  8151  2494  01EF               	clrf	(_dbuf^(0+512)+79)
  8152                           
  8153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8154  2495  2D1B               	goto	l7831
  8155  2496                     l7833:	
  8156  2496  083F               	movf	utoa@n,w
  8157  2497  0440               	iorwf	utoa@n+1,w
  8158  2498  0441               	iorwf	utoa@n+2,w
  8159  2499  0442               	iorwf	utoa@n+3,w
  8160  249A  0443               	iorwf	utoa@n+4,w
  8161  249B  0444               	iorwf	utoa@n+5,w
  8162  249C  0445               	iorwf	utoa@n+6,w
  8163  249D  0446               	iorwf	utoa@n+7,w
  8164  249E  1D03               	skipz
  8165  249F  2CBA               	goto	l7821
  8166  24A0  083C               	movf	utoa@p+1,w
  8167  24A1  3A80               	xorlw	128
  8168  24A2  00BA               	movwf	??_utoa
  8169  24A3  3080               	movlw	128
  8170  24A4  023A               	subwf	??_utoa,w
  8171  24A5  1D03               	skipz
  8172  24A6  2CA9               	goto	u11155
  8173  24A7  3001               	movlw	1
  8174  24A8  023B               	subwf	utoa@p,w
  8175  24A9                     u11155:	
  8176  24A9  1803               	skipnc
  8177  24AA  2CBA               	goto	l7821
  8178  24AB  0020               	movlb	0	; select bank0
  8179  24AC  083E               	movf	utoa@w+1,w
  8180  24AD  3A80               	xorlw	128
  8181  24AE  00BA               	movwf	??_utoa
  8182  24AF  3080               	movlw	128
  8183  24B0  023A               	subwf	??_utoa,w
  8184  24B1  1D03               	skipz
  8185  24B2  2CB5               	goto	u11165
  8186  24B3  3001               	movlw	1
  8187  24B4  023D               	subwf	utoa@w,w
  8188  24B5                     u11165:	
  8189  24B5  1C03               	skipc
  8190  24B6  2D20               	goto	l7841
  8191  24B7  0023               	movlb	3	; select bank3
  8192  24B8  1CC2               	btfss	_flags^(0+384),1
  8193  24B9  2D20               	goto	l7841
  8194  24BA                     l7821:	
  8195                           
  8196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8197  24BA  30FF               	movlw	255
  8198  24BB  0020               	movlb	0	; select bank0
  8199  24BC  07C7               	addwf	utoa@i,f
  8200  24BD  30FF               	movlw	255
  8201  24BE  3DC8               	addwfc	utoa@i+1,f
  8202                           
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8204  24BF  300A               	movlw	10
  8205  24C0  00A0               	movwf	___lomod@divisor
  8206  24C1  01A1               	clrf	___lomod@divisor+1
  8207  24C2  01A2               	clrf	___lomod@divisor+2
  8208  24C3  01A3               	clrf	___lomod@divisor+3
  8209  24C4  01A4               	clrf	___lomod@divisor+4
  8210  24C5  01A5               	clrf	___lomod@divisor+5
  8211  24C6  01A6               	clrf	___lomod@divisor+6
  8212  24C7  01A7               	clrf	___lomod@divisor+7
  8213  24C8  083F               	movf	utoa@n,w
  8214  24C9  00A8               	movwf	___lomod@dividend
  8215  24CA  0840               	movf	utoa@n+1,w
  8216  24CB  00A9               	movwf	___lomod@dividend+1
  8217  24CC  0841               	movf	utoa@n+2,w
  8218  24CD  00AA               	movwf	___lomod@dividend+2
  8219  24CE  0842               	movf	utoa@n+3,w
  8220  24CF  00AB               	movwf	___lomod@dividend+3
  8221  24D0  0843               	movf	utoa@n+4,w
  8222  24D1  00AC               	movwf	___lomod@dividend+4
  8223  24D2  0844               	movf	utoa@n+5,w
  8224  24D3  00AD               	movwf	___lomod@dividend+5
  8225  24D4  0845               	movf	utoa@n+6,w
  8226  24D5  00AE               	movwf	___lomod@dividend+6
  8227  24D6  0846               	movf	utoa@n+7,w
  8228  24D7  00AF               	movwf	___lomod@dividend+7
  8229  24D8  31B7  271F  31A4   	fcall	___lomod
  8230  24DB  0020               	movlb	0	; select bank0
  8231  24DC  0820               	movf	?___lomod,w
  8232  24DD  3E30               	addlw	48
  8233  24DE  00BA               	movwf	??_utoa
  8234  24DF  0847               	movf	utoa@i,w
  8235  24E0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8236  24E1  0086               	movwf	6
  8237  24E2  3002               	movlw	2	; select bank4/5
  8238  24E3  0087               	movwf	7
  8239  24E4  083A               	movf	??_utoa,w
  8240  24E5  0081               	movwf	1
  8241                           
  8242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8243  24E6  30FF               	movlw	255
  8244  24E7  07BB               	addwf	utoa@p,f
  8245  24E8  30FF               	movlw	255
  8246  24E9  3DBC               	addwfc	utoa@p+1,f
  8247                           
  8248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8249  24EA  30FF               	movlw	255
  8250  24EB  07BD               	addwf	utoa@w,f
  8251  24EC  30FF               	movlw	255
  8252  24ED  3DBE               	addwfc	utoa@w+1,f
  8253                           
  8254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8255  24EE  300A               	movlw	10
  8256  24EF  00A0               	movwf	___lodiv@divisor
  8257  24F0  01A1               	clrf	___lodiv@divisor+1
  8258  24F1  01A2               	clrf	___lodiv@divisor+2
  8259  24F2  01A3               	clrf	___lodiv@divisor+3
  8260  24F3  01A4               	clrf	___lodiv@divisor+4
  8261  24F4  01A5               	clrf	___lodiv@divisor+5
  8262  24F5  01A6               	clrf	___lodiv@divisor+6
  8263  24F6  01A7               	clrf	___lodiv@divisor+7
  8264  24F7  083F               	movf	utoa@n,w
  8265  24F8  00A8               	movwf	___lodiv@dividend
  8266  24F9  0840               	movf	utoa@n+1,w
  8267  24FA  00A9               	movwf	___lodiv@dividend+1
  8268  24FB  0841               	movf	utoa@n+2,w
  8269  24FC  00AA               	movwf	___lodiv@dividend+2
  8270  24FD  0842               	movf	utoa@n+3,w
  8271  24FE  00AB               	movwf	___lodiv@dividend+3
  8272  24FF  0843               	movf	utoa@n+4,w
  8273  2500  00AC               	movwf	___lodiv@dividend+4
  8274  2501  0844               	movf	utoa@n+5,w
  8275  2502  00AD               	movwf	___lodiv@dividend+5
  8276  2503  0845               	movf	utoa@n+6,w
  8277  2504  00AE               	movwf	___lodiv@dividend+6
  8278  2505  0846               	movf	utoa@n+7,w
  8279  2506  00AF               	movwf	___lodiv@dividend+7
  8280  2507  31A8  20AC  31A4   	fcall	___lodiv
  8281  250A  0020               	movlb	0	; select bank0
  8282  250B  0820               	movf	?___lodiv,w
  8283  250C  00BF               	movwf	utoa@n
  8284  250D  0821               	movf	?___lodiv+1,w
  8285  250E  00C0               	movwf	utoa@n+1
  8286  250F  0822               	movf	?___lodiv+2,w
  8287  2510  00C1               	movwf	utoa@n+2
  8288  2511  0823               	movf	?___lodiv+3,w
  8289  2512  00C2               	movwf	utoa@n+3
  8290  2513  0824               	movf	?___lodiv+4,w
  8291  2514  00C3               	movwf	utoa@n+4
  8292  2515  0825               	movf	?___lodiv+5,w
  8293  2516  00C4               	movwf	utoa@n+5
  8294  2517  0826               	movf	?___lodiv+6,w
  8295  2518  00C5               	movwf	utoa@n+6
  8296  2519  0827               	movf	?___lodiv+7,w
  8297  251A  00C6               	movwf	utoa@n+7
  8298  251B                     l7831:	
  8299                           
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8301  251B  0020               	movlb	0	; select bank0
  8302  251C  0847               	movf	utoa@i,w
  8303  251D  0448               	iorwf	utoa@i+1,w
  8304  251E  1D03               	btfss	3,2
  8305  251F  2C96               	goto	l7833
  8306  2520                     l7841:	
  8307                           
  8308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8309  2520  0020               	movlb	0	; select bank0
  8310  2521  0831               	movf	utoa@fp+1,w
  8311  2522  00A7               	movwf	pad@fp+1
  8312  2523  0830               	movf	utoa@fp,w
  8313  2524  00A6               	movwf	pad@fp
  8314  2525  0847               	movf	utoa@i,w
  8315  2526  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8316  2527  00BA               	movwf	??_utoa
  8317  2528  083A               	movf	??_utoa,w
  8318  2529  00A8               	movwf	pad@buf
  8319  252A  083E               	movf	utoa@w+1,w
  8320  252B  00AA               	movwf	pad@p+1
  8321  252C  083D               	movf	utoa@w,w
  8322  252D  00A9               	movwf	pad@p
  8323  252E  31B5  256D         	fcall	_pad
  8324  2530  0020               	movlb	0	; select bank0
  8325  2531  0827               	movf	?_pad+1,w
  8326  2532  00B1               	movwf	?_utoa+1
  8327  2533  0826               	movf	?_pad,w
  8328  2534  00B0               	movwf	?_utoa
  8329  2535  0008               	return
  8330  2536                     __end_of_utoa:	
  8331                           
  8332                           	psect	text13
  8333  371F                     __ptext13:	
  8334 ;; *************** function ___lomod *****************
  8335 ;; Defined at:
  8336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8339 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  counter         1    2[COMMON] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  8    0[BANK0 ] unsigned long long 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8351 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;Total ram usage:       18 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    1
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_utoa
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function ___lomod
  8367  371F                     ___lomod:	
  8368                           
  8369                           ;incstack = 0
  8370                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  8371  371F  0020               	movlb	0	; select bank0
  8372  3720  0820               	movf	___lomod@divisor,w
  8373  3721  0421               	iorwf	___lomod@divisor+1,w
  8374  3722  0422               	iorwf	___lomod@divisor+2,w
  8375  3723  0423               	iorwf	___lomod@divisor+3,w
  8376  3724  0424               	iorwf	___lomod@divisor+4,w
  8377  3725  0425               	iorwf	___lomod@divisor+5,w
  8378  3726  0426               	iorwf	___lomod@divisor+6,w
  8379  3727  0427               	iorwf	___lomod@divisor+7,w
  8380  3728  1903               	skipnz
  8381  3729  2F77               	goto	l1152
  8382  372A  01F2               	clrf	___lomod@counter
  8383  372B  0AF2               	incf	___lomod@counter,f
  8384  372C                     l4991:	
  8385  372C  1BA7               	btfsc	___lomod@divisor+7,7
  8386  372D  2F3B               	goto	l4993
  8387  372E  35A0               	lslf	___lomod@divisor,f
  8388  372F  0DA1               	rlf	___lomod@divisor+1,f
  8389  3730  0DA2               	rlf	___lomod@divisor+2,f
  8390  3731  0DA3               	rlf	___lomod@divisor+3,f
  8391  3732  0DA4               	rlf	___lomod@divisor+4,f
  8392  3733  0DA5               	rlf	___lomod@divisor+5,f
  8393  3734  0DA6               	rlf	___lomod@divisor+6,f
  8394  3735  0DA7               	rlf	___lomod@divisor+7,f
  8395  3736  3001               	movlw	1
  8396  3737  00F1               	movwf	??___lomod
  8397  3738  0871               	movf	??___lomod,w
  8398  3739  07F2               	addwf	___lomod@counter,f
  8399  373A  2F2C               	goto	l4991
  8400  373B                     l4993:	
  8401  373B  0827               	movf	___lomod@divisor+7,w
  8402  373C  022F               	subwf	___lomod@dividend+7,w
  8403  373D  1D03               	skipz
  8404  373E  2F59               	goto	u6455
  8405  373F  0826               	movf	___lomod@divisor+6,w
  8406  3740  022E               	subwf	___lomod@dividend+6,w
  8407  3741  1D03               	skipz
  8408  3742  2F59               	goto	u6455
  8409  3743  0825               	movf	___lomod@divisor+5,w
  8410  3744  022D               	subwf	___lomod@dividend+5,w
  8411  3745  1D03               	skipz
  8412  3746  2F59               	goto	u6455
  8413  3747  0824               	movf	___lomod@divisor+4,w
  8414  3748  022C               	subwf	___lomod@dividend+4,w
  8415  3749  1D03               	skipz
  8416  374A  2F59               	goto	u6455
  8417  374B  0823               	movf	___lomod@divisor+3,w
  8418  374C  022B               	subwf	___lomod@dividend+3,w
  8419  374D  1D03               	skipz
  8420  374E  2F59               	goto	u6455
  8421  374F  0822               	movf	___lomod@divisor+2,w
  8422  3750  022A               	subwf	___lomod@dividend+2,w
  8423  3751  1D03               	skipz
  8424  3752  2F59               	goto	u6455
  8425  3753  0821               	movf	___lomod@divisor+1,w
  8426  3754  0229               	subwf	___lomod@dividend+1,w
  8427  3755  1D03               	skipz
  8428  3756  2F59               	goto	u6455
  8429  3757  0820               	movf	___lomod@divisor,w
  8430  3758  0228               	subwf	___lomod@dividend,w
  8431  3759                     u6455:	
  8432  3759  1C03               	skipc
  8433  375A  2F6B               	goto	l4997
  8434  375B  0820               	movf	___lomod@divisor,w
  8435  375C  02A8               	subwf	___lomod@dividend,f
  8436  375D  0821               	movf	___lomod@divisor+1,w
  8437  375E  3BA9               	subwfb	___lomod@dividend+1,f
  8438  375F  0822               	movf	___lomod@divisor+2,w
  8439  3760  3BAA               	subwfb	___lomod@dividend+2,f
  8440  3761  0823               	movf	___lomod@divisor+3,w
  8441  3762  3BAB               	subwfb	___lomod@dividend+3,f
  8442  3763  0824               	movf	___lomod@divisor+4,w
  8443  3764  3BAC               	subwfb	___lomod@dividend+4,f
  8444  3765  0825               	movf	___lomod@divisor+5,w
  8445  3766  3BAD               	subwfb	___lomod@dividend+5,f
  8446  3767  0826               	movf	___lomod@divisor+6,w
  8447  3768  3BAE               	subwfb	___lomod@dividend+6,f
  8448  3769  0827               	movf	___lomod@divisor+7,w
  8449  376A  3BAF               	subwfb	___lomod@dividend+7,f
  8450  376B                     l4997:	
  8451  376B  36A7               	lsrf	___lomod@divisor+7,f
  8452  376C  0CA6               	rrf	___lomod@divisor+6,f
  8453  376D  0CA5               	rrf	___lomod@divisor+5,f
  8454  376E  0CA4               	rrf	___lomod@divisor+4,f
  8455  376F  0CA3               	rrf	___lomod@divisor+3,f
  8456  3770  0CA2               	rrf	___lomod@divisor+2,f
  8457  3771  0CA1               	rrf	___lomod@divisor+1,f
  8458  3772  0CA0               	rrf	___lomod@divisor,f
  8459  3773  3001               	movlw	1
  8460  3774  02F2               	subwf	___lomod@counter,f
  8461  3775  1D03               	btfss	3,2
  8462  3776  2F3B               	goto	l4993
  8463  3777                     l1152:	
  8464  3777  0828               	movf	___lomod@dividend,w
  8465  3778  00A0               	movwf	?___lomod
  8466  3779  0829               	movf	___lomod@dividend+1,w
  8467  377A  00A1               	movwf	?___lomod+1
  8468  377B  082A               	movf	___lomod@dividend+2,w
  8469  377C  00A2               	movwf	?___lomod+2
  8470  377D  082B               	movf	___lomod@dividend+3,w
  8471  377E  00A3               	movwf	?___lomod+3
  8472  377F  082C               	movf	___lomod@dividend+4,w
  8473  3780  00A4               	movwf	?___lomod+4
  8474  3781  082D               	movf	___lomod@dividend+5,w
  8475  3782  00A5               	movwf	?___lomod+5
  8476  3783  082E               	movf	___lomod@dividend+6,w
  8477  3784  00A6               	movwf	?___lomod+6
  8478  3785  082F               	movf	___lomod@dividend+7,w
  8479  3786  00A7               	movwf	?___lomod+7
  8480  3787  0008               	return
  8481  3788                     __end_of___lomod:	
  8482                           
  8483                           	psect	text14
  8484  28AC                     __ptext14:	
  8485 ;; *************** function ___lodiv *****************
  8486 ;; Defined at:
  8487 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8490 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  quotient        8    2[COMMON] unsigned long long 
  8493 ;;  counter         1   10[COMMON] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  8    0[BANK0 ] unsigned long long 
  8496 ;; Registers used:
  8497 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8503 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8504 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8506 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8507 ;;Total ram usage:       26 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_utoa
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function ___lodiv
  8519  28AC                     ___lodiv:	
  8520                           
  8521                           ;incstack = 0
  8522                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8523  28AC  3072               	movlw	low ___lodiv@quotient
  8524  28AD  0086               	movwf	6
  8525  28AE  3000               	movlw	high ___lodiv@quotient
  8526  28AF  0087               	movwf	7
  8527  28B0  3008               	movlw	8
  8528  28B1  00F1               	movwf	??___lodiv
  8529  28B2  3000               	movlw	0
  8530  28B3                     u6380:	
  8531  28B3  001E               	movwi fsr1++
  8532  28B4  0BF1               	decfsz	??___lodiv,f
  8533  28B5  28B3               	goto	u6380
  8534  28B6  0020               	movlb	0	; select bank0
  8535  28B7  0820               	movf	___lodiv@divisor,w
  8536  28B8  0421               	iorwf	___lodiv@divisor+1,w
  8537  28B9  0422               	iorwf	___lodiv@divisor+2,w
  8538  28BA  0423               	iorwf	___lodiv@divisor+3,w
  8539  28BB  0424               	iorwf	___lodiv@divisor+4,w
  8540  28BC  0425               	iorwf	___lodiv@divisor+5,w
  8541  28BD  0426               	iorwf	___lodiv@divisor+6,w
  8542  28BE  0427               	iorwf	___lodiv@divisor+7,w
  8543  28BF  1903               	skipnz
  8544  28C0  2917               	goto	l1142
  8545  28C1  01FA               	clrf	___lodiv@counter
  8546  28C2  0AFA               	incf	___lodiv@counter,f
  8547  28C3                     l4971:	
  8548  28C3  1BA7               	btfsc	___lodiv@divisor+7,7
  8549  28C4  28D2               	goto	l4973
  8550  28C5  35A0               	lslf	___lodiv@divisor,f
  8551  28C6  0DA1               	rlf	___lodiv@divisor+1,f
  8552  28C7  0DA2               	rlf	___lodiv@divisor+2,f
  8553  28C8  0DA3               	rlf	___lodiv@divisor+3,f
  8554  28C9  0DA4               	rlf	___lodiv@divisor+4,f
  8555  28CA  0DA5               	rlf	___lodiv@divisor+5,f
  8556  28CB  0DA6               	rlf	___lodiv@divisor+6,f
  8557  28CC  0DA7               	rlf	___lodiv@divisor+7,f
  8558  28CD  3001               	movlw	1
  8559  28CE  00F1               	movwf	??___lodiv
  8560  28CF  0871               	movf	??___lodiv,w
  8561  28D0  07FA               	addwf	___lodiv@counter,f
  8562  28D1  28C3               	goto	l4971
  8563  28D2                     l4973:	
  8564  28D2  35F2               	lslf	___lodiv@quotient,f
  8565  28D3  0DF3               	rlf	___lodiv@quotient+1,f
  8566  28D4  0DF4               	rlf	___lodiv@quotient+2,f
  8567  28D5  0DF5               	rlf	___lodiv@quotient+3,f
  8568  28D6  0DF6               	rlf	___lodiv@quotient+4,f
  8569  28D7  0DF7               	rlf	___lodiv@quotient+5,f
  8570  28D8  0DF8               	rlf	___lodiv@quotient+6,f
  8571  28D9  0DF9               	rlf	___lodiv@quotient+7,f
  8572  28DA  0827               	movf	___lodiv@divisor+7,w
  8573  28DB  022F               	subwf	___lodiv@dividend+7,w
  8574  28DC  1D03               	skipz
  8575  28DD  28F8               	goto	u6415
  8576  28DE  0826               	movf	___lodiv@divisor+6,w
  8577  28DF  022E               	subwf	___lodiv@dividend+6,w
  8578  28E0  1D03               	skipz
  8579  28E1  28F8               	goto	u6415
  8580  28E2  0825               	movf	___lodiv@divisor+5,w
  8581  28E3  022D               	subwf	___lodiv@dividend+5,w
  8582  28E4  1D03               	skipz
  8583  28E5  28F8               	goto	u6415
  8584  28E6  0824               	movf	___lodiv@divisor+4,w
  8585  28E7  022C               	subwf	___lodiv@dividend+4,w
  8586  28E8  1D03               	skipz
  8587  28E9  28F8               	goto	u6415
  8588  28EA  0823               	movf	___lodiv@divisor+3,w
  8589  28EB  022B               	subwf	___lodiv@dividend+3,w
  8590  28EC  1D03               	skipz
  8591  28ED  28F8               	goto	u6415
  8592  28EE  0822               	movf	___lodiv@divisor+2,w
  8593  28EF  022A               	subwf	___lodiv@dividend+2,w
  8594  28F0  1D03               	skipz
  8595  28F1  28F8               	goto	u6415
  8596  28F2  0821               	movf	___lodiv@divisor+1,w
  8597  28F3  0229               	subwf	___lodiv@dividend+1,w
  8598  28F4  1D03               	skipz
  8599  28F5  28F8               	goto	u6415
  8600  28F6  0820               	movf	___lodiv@divisor,w
  8601  28F7  0228               	subwf	___lodiv@dividend,w
  8602  28F8                     u6415:	
  8603  28F8  1C03               	skipc
  8604  28F9  290B               	goto	l4981
  8605  28FA  0820               	movf	___lodiv@divisor,w
  8606  28FB  02A8               	subwf	___lodiv@dividend,f
  8607  28FC  0821               	movf	___lodiv@divisor+1,w
  8608  28FD  3BA9               	subwfb	___lodiv@dividend+1,f
  8609  28FE  0822               	movf	___lodiv@divisor+2,w
  8610  28FF  3BAA               	subwfb	___lodiv@dividend+2,f
  8611  2900  0823               	movf	___lodiv@divisor+3,w
  8612  2901  3BAB               	subwfb	___lodiv@dividend+3,f
  8613  2902  0824               	movf	___lodiv@divisor+4,w
  8614  2903  3BAC               	subwfb	___lodiv@dividend+4,f
  8615  2904  0825               	movf	___lodiv@divisor+5,w
  8616  2905  3BAD               	subwfb	___lodiv@dividend+5,f
  8617  2906  0826               	movf	___lodiv@divisor+6,w
  8618  2907  3BAE               	subwfb	___lodiv@dividend+6,f
  8619  2908  0827               	movf	___lodiv@divisor+7,w
  8620  2909  3BAF               	subwfb	___lodiv@dividend+7,f
  8621  290A  1472               	bsf	___lodiv@quotient,0
  8622  290B                     l4981:	
  8623  290B  36A7               	lsrf	___lodiv@divisor+7,f
  8624  290C  0CA6               	rrf	___lodiv@divisor+6,f
  8625  290D  0CA5               	rrf	___lodiv@divisor+5,f
  8626  290E  0CA4               	rrf	___lodiv@divisor+4,f
  8627  290F  0CA3               	rrf	___lodiv@divisor+3,f
  8628  2910  0CA2               	rrf	___lodiv@divisor+2,f
  8629  2911  0CA1               	rrf	___lodiv@divisor+1,f
  8630  2912  0CA0               	rrf	___lodiv@divisor,f
  8631  2913  3001               	movlw	1
  8632  2914  02FA               	subwf	___lodiv@counter,f
  8633  2915  1D03               	btfss	3,2
  8634  2916  28D2               	goto	l4973
  8635  2917                     l1142:	
  8636  2917  0872               	movf	___lodiv@quotient,w
  8637  2918  00A0               	movwf	?___lodiv
  8638  2919  0873               	movf	___lodiv@quotient+1,w
  8639  291A  00A1               	movwf	?___lodiv+1
  8640  291B  0874               	movf	___lodiv@quotient+2,w
  8641  291C  00A2               	movwf	?___lodiv+2
  8642  291D  0875               	movf	___lodiv@quotient+3,w
  8643  291E  00A3               	movwf	?___lodiv+3
  8644  291F  0876               	movf	___lodiv@quotient+4,w
  8645  2920  00A4               	movwf	?___lodiv+4
  8646  2921  0877               	movf	___lodiv@quotient+5,w
  8647  2922  00A5               	movwf	?___lodiv+5
  8648  2923  0878               	movf	___lodiv@quotient+6,w
  8649  2924  00A6               	movwf	?___lodiv+6
  8650  2925  0879               	movf	___lodiv@quotient+7,w
  8651  2926  00A7               	movwf	?___lodiv+7
  8652  2927  0008               	return
  8653  2928                     __end_of___lodiv:	
  8654                           
  8655                           	psect	text15
  8656  1000                     __ptext15:	
  8657 ;; *************** function _strncmp *****************
  8658 ;; Defined at:
  8659 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8662 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8663 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8664 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8665 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8666 ;;		 -> STR_3(43), 
  8667 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8668 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8669 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8670 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8671 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8672 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8673 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8674 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8675 ;;		 -> STR_36(4), 
  8676 ;;  n               2    5[COMMON] unsigned int 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  r               2   10[COMMON] PTR const unsigned char 
  8679 ;;		 -> STR_168(3), STR_164(3), STR_159(3), STR_155(3), 
  8680 ;;		 -> STR_150(3), STR_146(3), STR_141(4), STR_137(4), 
  8681 ;;		 -> STR_132(3), STR_127(3), STR_122(3), STR_117(4), 
  8682 ;;		 -> STR_112(3), STR_107(3), STR_102(3), STR_97(4), 
  8683 ;;		 -> STR_92(3), STR_87(3), STR_82(3), STR_77(4), 
  8684 ;;		 -> STR_72(3), STR_67(3), STR_63(3), STR_58(3), 
  8685 ;;		 -> STR_54(3), STR_49(3), STR_45(3), STR_40(4), 
  8686 ;;		 -> STR_36(4), 
  8687 ;;  l               2    8[COMMON] PTR const unsigned char 
  8688 ;;		 -> vfpfcnvrt@ct(3), STR_24(18), STR_23(18), STR_22(19), 
  8689 ;;		 -> STR_21(20), STR_20(20), STR_19(21), STR_18(21), 
  8690 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(21), 
  8691 ;;		 -> STR_13(21), STR_8(57), STR_7(44), STR_6(42), 
  8692 ;;		 -> STR_3(43), 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    1[COMMON] int 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8702 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8705 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:       11 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_vfpfcnvrt
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _strncmp
  8718  1000                     _strncmp:	
  8719                           
  8720                           ;incstack = 0
  8721                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8722  1000  0872               	movf	strncmp@_l+1,w
  8723  1001  00F9               	movwf	strncmp@l+1
  8724  1002  0871               	movf	strncmp@_l,w
  8725  1003  00F8               	movwf	strncmp@l
  8726  1004  0874               	movf	strncmp@_r+1,w
  8727  1005  00FB               	movwf	strncmp@r+1
  8728  1006  0873               	movf	strncmp@_r,w
  8729  1007  00FA               	movwf	strncmp@r
  8730  1008  3001               	movlw	1
  8731  1009  02F5               	subwf	strncmp@n,f
  8732  100A  3000               	movlw	0
  8733  100B  3BF6               	subwfb	strncmp@n+1,f
  8734  100C  0A75               	incf	strncmp@n,w
  8735  100D  1D03               	skipz
  8736  100E  283A               	goto	l5911
  8737  100F  0A76               	incf	strncmp@n+1,w
  8738  1010  1D03               	btfss	3,2
  8739  1011  283A               	goto	l5911
  8740  1012  01F1               	clrf	?_strncmp
  8741  1013  01F2               	clrf	?_strncmp+1
  8742  1014  0008               	return
  8743  1015                     l5913:	
  8744  1015  087A               	movf	strncmp@r,w
  8745  1016  0084               	movwf	4
  8746  1017  087B               	movf	strncmp@r+1,w
  8747  1018  0085               	movwf	5
  8748  1019  0012               	moviw fsr0++
  8749  101A  1903               	btfsc	3,2
  8750  101B  2841               	goto	l5919
  8751  101C  0875               	movf	strncmp@n,w
  8752  101D  0476               	iorwf	strncmp@n+1,w
  8753  101E  1903               	btfsc	3,2
  8754  101F  2841               	goto	l5919
  8755  1020  087A               	movf	strncmp@r,w
  8756  1021  0084               	movwf	4
  8757  1022  087B               	movf	strncmp@r+1,w
  8758  1023  0085               	movwf	5
  8759  1024  0800               	movf	0,w	;code access
  8760  1025  00F7               	movwf	??_strncmp
  8761  1026  0878               	movf	strncmp@l,w
  8762  1027  0084               	movwf	4
  8763  1028  0879               	movf	strncmp@l+1,w
  8764  1029  0085               	movwf	5
  8765  102A  0800               	movf	0,w	;code access
  8766  102B  0677               	xorwf	??_strncmp,w
  8767  102C  1D03               	btfss	3,2
  8768  102D  2841               	goto	l5919
  8769  102E  3001               	movlw	1
  8770  102F  07F8               	addwf	strncmp@l,f
  8771  1030  3000               	movlw	0
  8772  1031  3DF9               	addwfc	strncmp@l+1,f
  8773  1032  3001               	movlw	1
  8774  1033  07FA               	addwf	strncmp@r,f
  8775  1034  3000               	movlw	0
  8776  1035  3DFB               	addwfc	strncmp@r+1,f
  8777  1036  3001               	movlw	1
  8778  1037  02F5               	subwf	strncmp@n,f
  8779  1038  3000               	movlw	0
  8780  1039  3BF6               	subwfb	strncmp@n+1,f
  8781  103A                     l5911:	
  8782  103A  0878               	movf	strncmp@l,w
  8783  103B  0084               	movwf	4
  8784  103C  0879               	movf	strncmp@l+1,w
  8785  103D  0085               	movwf	5
  8786  103E  0012               	moviw fsr0++
  8787  103F  1D03               	btfss	3,2
  8788  1040  2815               	goto	l5913
  8789  1041                     l5919:	
  8790  1041  0878               	movf	strncmp@l,w
  8791  1042  0084               	movwf	4
  8792  1043  0879               	movf	strncmp@l+1,w
  8793  1044  0085               	movwf	5
  8794  1045  0800               	movf	0,w	;code access
  8795  1046  00F7               	movwf	??_strncmp
  8796  1047  087A               	movf	strncmp@r,w
  8797  1048  0084               	movwf	4
  8798  1049  087B               	movf	strncmp@r+1,w
  8799  104A  0085               	movwf	5
  8800  104B  0800               	movf	0,w	;code access
  8801  104C  0277               	subwf	??_strncmp,w
  8802  104D  00F1               	movwf	?_strncmp
  8803  104E  01F2               	clrf	?_strncmp+1
  8804  104F  1C03               	skipc
  8805  1050  03F2               	decf	?_strncmp+1,f
  8806  1051  0008               	return
  8807  1052                     __end_of_strncmp:	
  8808                           
  8809                           	psect	text16
  8810  2E6A                     __ptext16:	
  8811 ;; *************** function _stoa *****************
  8812 ;; Defined at:
  8813 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8816 ;;		 -> vsnprintf@f(6), 
  8817 ;;  s               1    2[BANK0 ] PTR unsigned char 
  8818 ;;		 -> ?_snprintf(2), 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8821 ;;  l               2   18[BANK0 ] int 
  8822 ;;  p               2   16[BANK0 ] int 
  8823 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  8824 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  8825 ;;  w               2   12[BANK0 ] int 
  8826 ;;  i               2   10[BANK0 ] int 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  2    0[BANK0 ] int 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8837 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8839 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8840 ;;Total ram usage:       22 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    3
  8843 ;; This function calls:
  8844 ;;		_fputc
  8845 ;;		_strlen
  8846 ;; This function is called by:
  8847 ;;		_vfpfcnvrt
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           
  8852                           ;psect for function _stoa
  8853  2E6A                     _stoa:	
  8854                           
  8855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8856                           
  8857                           ;incstack = 0
  8858                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8859  2E6A  30DD               	movlw	low stoa@F1174
  8860  2E6B  0086               	movwf	6
  8861  2E6C  3001               	movlw	high stoa@F1174
  8862  2E6D  0087               	movwf	7
  8863  2E6E  3023               	movlw	low stoa@nuls
  8864  2E6F  0084               	movwf	4
  8865  2E70  3000               	movlw	high stoa@nuls
  8866  2E71  0085               	movwf	5
  8867  2E72  3007               	movlw	7
  8868  2E73  00FA               	movwf	??_stoa
  8869  2E74                     u11020:	
  8870  2E74  0016               	moviw fsr1++
  8871  2E75  001A               	movwi fsr0++
  8872  2E76  0BFA               	decfsz	??_stoa,f
  8873  2E77  2E74               	goto	u11020
  8874                           
  8875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8876  2E78  0020               	movlb	0	; select bank0
  8877  2E79  0822               	movf	stoa@s,w
  8878  2E7A  00AE               	movwf	stoa@cp
  8879  2E7B  3001               	movlw	1
  8880  2E7C  00AF               	movwf	stoa@cp+1
  8881                           
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8883  2E7D  082E               	movf	stoa@cp,w
  8884  2E7E  042F               	iorwf	stoa@cp+1,w
  8885  2E7F  1D03               	btfss	3,2
  8886  2E80  2E85               	goto	l7767
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8889  2E81  3023               	movlw	low stoa@nuls
  8890  2E82  00AE               	movwf	stoa@cp
  8891  2E83  3000               	movlw	high stoa@nuls
  8892  2E84  00AF               	movwf	stoa@cp+1
  8893  2E85                     l7767:	
  8894                           
  8895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8896  2E85  082F               	movf	stoa@cp+1,w
  8897  2E86  00F2               	movwf	strlen@s+1
  8898  2E87  082E               	movf	stoa@cp,w
  8899  2E88  00F1               	movwf	strlen@s
  8900  2E89  31B1  213D  31AE   	fcall	_strlen
  8901  2E8C  0872               	movf	?_strlen+1,w
  8902  2E8D  0020               	movlb	0	; select bank0
  8903  2E8E  00B3               	movwf	stoa@l+1
  8904  2E8F  0871               	movf	?_strlen,w
  8905  2E90  00B2               	movwf	stoa@l
  8906                           
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8908  2E91  0023               	movlb	3	; select bank3
  8909  2E92  0841               	movf	(_prec+1)^(0+384),w
  8910  2E93  0020               	movlb	0	; select bank0
  8911  2E94  00B1               	movwf	stoa@p+1
  8912  2E95  0023               	movlb	3	; select bank3
  8913  2E96  0840               	movf	_prec^(0+384),w
  8914  2E97  0020               	movlb	0	; select bank0
  8915  2E98  00B0               	movwf	stoa@p
  8916                           
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8918  2E99  1BB1               	btfsc	stoa@p+1,7
  8919  2E9A  2EAC               	goto	l745
  8920  2E9B  0831               	movf	stoa@p+1,w
  8921  2E9C  3A80               	xorlw	128
  8922  2E9D  00FA               	movwf	??_stoa
  8923  2E9E  0833               	movf	stoa@l+1,w
  8924  2E9F  3A80               	xorlw	128
  8925  2EA0  027A               	subwf	??_stoa,w
  8926  2EA1  1D03               	skipz
  8927  2EA2  2EA5               	goto	u11055
  8928  2EA3  0832               	movf	stoa@l,w
  8929  2EA4  0230               	subwf	stoa@p,w
  8930  2EA5                     u11055:	
  8931  2EA5  1803               	btfsc	3,0
  8932  2EA6  2EAC               	goto	l745
  8933  2EA7  0020               	movlb	0	; select bank0
  8934  2EA8  0831               	movf	stoa@p+1,w
  8935  2EA9  00B3               	movwf	stoa@l+1
  8936  2EAA  0830               	movf	stoa@p,w
  8937  2EAB  00B2               	movwf	stoa@l
  8938  2EAC                     l745:	
  8939                           
  8940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8941  2EAC  0020               	movlb	0	; select bank0
  8942  2EAD  0833               	movf	stoa@l+1,w
  8943  2EAE  00B1               	movwf	stoa@p+1
  8944  2EAF  0832               	movf	stoa@l,w
  8945  2EB0  00B0               	movwf	stoa@p
  8946                           
  8947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8948  2EB1  0023               	movlb	3	; select bank3
  8949  2EB2  083F               	movf	(_width+1)^(0+384),w
  8950  2EB3  0020               	movlb	0	; select bank0
  8951  2EB4  00AD               	movwf	stoa@w+1
  8952  2EB5  0023               	movlb	3	; select bank3
  8953  2EB6  083E               	movf	_width^(0+384),w
  8954  2EB7  0020               	movlb	0	; select bank0
  8955  2EB8  00AC               	movwf	stoa@w
  8956                           
  8957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8958  2EB9  0023               	movlb	3	; select bank3
  8959  2EBA  1C42               	btfss	_flags^(0+384),0
  8960  2EBB  2ECE               	goto	l7785
  8961  2EBC  2EDB               	goto	l7787
  8962  2EBD                     l7781:	
  8963                           
  8964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8965  2EBD  3020               	movlw	32
  8966  2EBE  00F1               	movwf	fputc@c
  8967  2EBF  3000               	movlw	0
  8968  2EC0  00F2               	movwf	fputc@c+1
  8969  2EC1  0020               	movlb	0	; select bank0
  8970  2EC2  0821               	movf	stoa@fp+1,w
  8971  2EC3  00F4               	movwf	fputc@fp+1
  8972  2EC4  0820               	movf	stoa@fp,w
  8973  2EC5  00F3               	movwf	fputc@fp
  8974  2EC6  31B6  260F  31AE   	fcall	_fputc
  8975                           
  8976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8977  2EC9  3001               	movlw	1
  8978  2ECA  0020               	movlb	0	; select bank0
  8979  2ECB  07B2               	addwf	stoa@l,f
  8980  2ECC  3000               	movlw	0
  8981  2ECD  3DB3               	addwfc	stoa@l+1,f
  8982  2ECE                     l7785:	
  8983                           
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8985  2ECE  0020               	movlb	0	; select bank0
  8986  2ECF  0833               	movf	stoa@l+1,w
  8987  2ED0  3A80               	xorlw	128
  8988  2ED1  00FA               	movwf	??_stoa
  8989  2ED2  082D               	movf	stoa@w+1,w
  8990  2ED3  3A80               	xorlw	128
  8991  2ED4  027A               	subwf	??_stoa,w
  8992  2ED5  1D03               	skipz
  8993  2ED6  2ED9               	goto	u11075
  8994  2ED7  082C               	movf	stoa@w,w
  8995  2ED8  0232               	subwf	stoa@l,w
  8996  2ED9                     u11075:	
  8997  2ED9  1C03               	skipc
  8998  2EDA  2EBD               	goto	l7781
  8999  2EDB                     l7787:	
  9000                           
  9001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9002  2EDB  0020               	movlb	0	; select bank0
  9003  2EDC  01AA               	clrf	stoa@i
  9004  2EDD  01AB               	clrf	stoa@i+1
  9005  2EDE                     l7795:	
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9007                           
  9008                           
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9010  2EDE  082B               	movf	stoa@i+1,w
  9011  2EDF  3A80               	xorlw	128
  9012  2EE0  00FA               	movwf	??_stoa
  9013  2EE1  0831               	movf	stoa@p+1,w
  9014  2EE2  3A80               	xorlw	128
  9015  2EE3  027A               	subwf	??_stoa,w
  9016  2EE4  1D03               	skipz
  9017  2EE5  2EE8               	goto	u11085
  9018  2EE6  0830               	movf	stoa@p,w
  9019  2EE7  022A               	subwf	stoa@i,w
  9020  2EE8                     u11085:	
  9021  2EE8  1803               	btfsc	3,0
  9022  2EE9  2F07               	goto	l754
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9025  2EEA  0020               	movlb	0	; select bank0
  9026  2EEB  082E               	movf	stoa@cp,w
  9027  2EEC  0086               	movwf	6
  9028  2EED  082F               	movf	stoa@cp+1,w
  9029  2EEE  0087               	movwf	7
  9030  2EEF  0801               	movf	1,w
  9031  2EF0  00FA               	movwf	??_stoa
  9032  2EF1  01FB               	clrf	??_stoa+1
  9033  2EF2  087A               	movf	??_stoa,w
  9034  2EF3  00F1               	movwf	fputc@c
  9035  2EF4  087B               	movf	??_stoa+1,w
  9036  2EF5  00F2               	movwf	fputc@c+1
  9037  2EF6  0821               	movf	stoa@fp+1,w
  9038  2EF7  00F4               	movwf	fputc@fp+1
  9039  2EF8  0820               	movf	stoa@fp,w
  9040  2EF9  00F3               	movwf	fputc@fp
  9041  2EFA  31B6  260F  31AE   	fcall	_fputc
  9042                           
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9044  2EFD  3001               	movlw	1
  9045  2EFE  0020               	movlb	0	; select bank0
  9046  2EFF  07AE               	addwf	stoa@cp,f
  9047  2F00  3000               	movlw	0
  9048  2F01  3DAF               	addwfc	stoa@cp+1,f
  9049                           
  9050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9051  2F02  3001               	movlw	1
  9052  2F03  07AA               	addwf	stoa@i,f
  9053  2F04  3000               	movlw	0
  9054  2F05  3DAB               	addwfc	stoa@i+1,f
  9055  2F06  2EDE               	goto	l7795
  9056  2F07                     l754:	
  9057                           
  9058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9059  2F07  0023               	movlb	3	; select bank3
  9060  2F08  1842               	btfsc	_flags^(0+384),0
  9061  2F09  2F1C               	goto	l7803
  9062  2F0A  2F29               	goto	l7805
  9063  2F0B                     l7799:	
  9064                           
  9065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9066  2F0B  3020               	movlw	32
  9067  2F0C  00F1               	movwf	fputc@c
  9068  2F0D  3000               	movlw	0
  9069  2F0E  00F2               	movwf	fputc@c+1
  9070  2F0F  0020               	movlb	0	; select bank0
  9071  2F10  0821               	movf	stoa@fp+1,w
  9072  2F11  00F4               	movwf	fputc@fp+1
  9073  2F12  0820               	movf	stoa@fp,w
  9074  2F13  00F3               	movwf	fputc@fp
  9075  2F14  31B6  260F  31AE   	fcall	_fputc
  9076                           
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9078  2F17  3001               	movlw	1
  9079  2F18  0020               	movlb	0	; select bank0
  9080  2F19  07B2               	addwf	stoa@l,f
  9081  2F1A  3000               	movlw	0
  9082  2F1B  3DB3               	addwfc	stoa@l+1,f
  9083  2F1C                     l7803:	
  9084                           
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9086  2F1C  0020               	movlb	0	; select bank0
  9087  2F1D  0833               	movf	stoa@l+1,w
  9088  2F1E  3A80               	xorlw	128
  9089  2F1F  00FA               	movwf	??_stoa
  9090  2F20  082D               	movf	stoa@w+1,w
  9091  2F21  3A80               	xorlw	128
  9092  2F22  027A               	subwf	??_stoa,w
  9093  2F23  1D03               	skipz
  9094  2F24  2F27               	goto	u11105
  9095  2F25  082C               	movf	stoa@w,w
  9096  2F26  0232               	subwf	stoa@l,w
  9097  2F27                     u11105:	
  9098  2F27  1C03               	skipc
  9099  2F28  2F0B               	goto	l7799
  9100  2F29                     l7805:	
  9101                           
  9102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9103  2F29  0020               	movlb	0	; select bank0
  9104  2F2A  0833               	movf	stoa@l+1,w
  9105  2F2B  00A1               	movwf	?_stoa+1
  9106  2F2C  0832               	movf	stoa@l,w
  9107  2F2D  00A0               	movwf	?_stoa
  9108  2F2E  0008               	return
  9109  2F2F                     __end_of_stoa:	
  9110                           
  9111                           	psect	text17
  9112  261C                     __ptext17:	
  9113 ;; *************** function _otoa *****************
  9114 ;; Defined at:
  9115 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9118 ;;		 -> vsnprintf@f(6), 
  9119 ;;  d               8   18[BANK0 ] unsigned long long 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  n               8   40[BANK0 ] unsigned long long 
  9122 ;;  i               2   48[BANK0 ] int 
  9123 ;;  w               2   38[BANK0 ] int 
  9124 ;;  t               2   36[BANK0 ] int 
  9125 ;;  p               2   34[BANK0 ] int 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  2   16[BANK0 ] int 
  9128 ;; Registers used:
  9129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9135 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9136 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9137 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9138 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9139 ;;Total ram usage:       34 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    5
  9142 ;; This function calls:
  9143 ;;		_pad
  9144 ;; This function is called by:
  9145 ;;		_vfpfcnvrt
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _otoa
  9151  261C                     _otoa:	
  9152                           
  9153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9157  261C  0023               	movlb	3	; select bank3
  9158  261D  1BC1               	btfsc	(_prec+1)^(0+384),7
  9159  261E  2E23               	goto	l723
  9160                           
  9161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9162  261F  30FD               	movlw	253
  9163  2620  05C2               	andwf	_flags^(0+384),f
  9164  2621  30FF               	movlw	255
  9165  2622  05C3               	andwf	(_flags+1)^(0+384),f
  9166  2623                     l723:	
  9167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  9168                           
  9169                           
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9171  2623  0841               	movf	(_prec+1)^(0+384),w
  9172  2624  3A80               	xorlw	128
  9173  2625  0020               	movlb	0	; select bank0
  9174  2626  00BA               	movwf	??_otoa
  9175  2627  3080               	movlw	128
  9176  2628  023A               	subwf	??_otoa,w
  9177  2629  1D03               	skipz
  9178  262A  2E2E               	goto	u10935
  9179  262B  3001               	movlw	1
  9180  262C  0023               	movlb	3	; select bank3
  9181  262D  0240               	subwf	_prec^(0+384),w
  9182  262E                     u10935:	
  9183  262E  1803               	skipnc
  9184  262F  2E36               	goto	l7721
  9185  2630  3001               	movlw	1
  9186  2631  0020               	movlb	0	; select bank0
  9187  2632  00C2               	movwf	otoa@p
  9188  2633  3000               	movlw	0
  9189  2634  00C3               	movwf	otoa@p+1
  9190  2635  2E3E               	goto	l727
  9191  2636                     l7721:	
  9192  2636  0023               	movlb	3	; select bank3
  9193  2637  0841               	movf	(_prec+1)^(0+384),w
  9194  2638  0020               	movlb	0	; select bank0
  9195  2639  00C3               	movwf	otoa@p+1
  9196  263A  0023               	movlb	3	; select bank3
  9197  263B  0840               	movf	_prec^(0+384),w
  9198  263C  0020               	movlb	0	; select bank0
  9199  263D  00C2               	movwf	otoa@p
  9200  263E                     l727:	
  9201                           
  9202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9203  263E  0023               	movlb	3	; select bank3
  9204  263F  083F               	movf	(_width+1)^(0+384),w
  9205  2640  0020               	movlb	0	; select bank0
  9206  2641  00C7               	movwf	otoa@w+1
  9207  2642  0023               	movlb	3	; select bank3
  9208  2643  083E               	movf	_width^(0+384),w
  9209  2644  0020               	movlb	0	; select bank0
  9210  2645  00C6               	movwf	otoa@w
  9211                           
  9212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9213  2646  0832               	movf	otoa@d,w
  9214  2647  00C8               	movwf	otoa@n
  9215  2648  0833               	movf	otoa@d+1,w
  9216  2649  00C9               	movwf	otoa@n+1
  9217  264A  0834               	movf	otoa@d+2,w
  9218  264B  00CA               	movwf	otoa@n+2
  9219  264C  0835               	movf	otoa@d+3,w
  9220  264D  00CB               	movwf	otoa@n+3
  9221  264E  0836               	movf	otoa@d+4,w
  9222  264F  00CC               	movwf	otoa@n+4
  9223  2650  0837               	movf	otoa@d+5,w
  9224  2651  00CD               	movwf	otoa@n+5
  9225  2652  0838               	movf	otoa@d+6,w
  9226  2653  00CE               	movwf	otoa@n+6
  9227  2654  0839               	movf	otoa@d+7,w
  9228  2655  00CF               	movwf	otoa@n+7
  9229                           
  9230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9231  2656  304F               	movlw	79
  9232  2657  00D0               	movwf	otoa@i
  9233  2658  3000               	movlw	0
  9234  2659  00D1               	movwf	otoa@i+1
  9235                           
  9236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9237  265A  0024               	movlb	4	; select bank4
  9238  265B  01EF               	clrf	(_dbuf^(0+512)+79)
  9239                           
  9240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9241  265C  0020               	movlb	0	; select bank0
  9242  265D  01C4               	clrf	otoa@t
  9243  265E  01C5               	clrf	otoa@t+1
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9246  265F  2ED3               	goto	l728
  9247  2660                     l7739:	
  9248  2660  0020               	movlb	0	; select bank0
  9249  2661  0848               	movf	otoa@n,w
  9250  2662  0449               	iorwf	otoa@n+1,w
  9251  2663  044A               	iorwf	otoa@n+2,w
  9252  2664  044B               	iorwf	otoa@n+3,w
  9253  2665  044C               	iorwf	otoa@n+4,w
  9254  2666  044D               	iorwf	otoa@n+5,w
  9255  2667  044E               	iorwf	otoa@n+6,w
  9256  2668  044F               	iorwf	otoa@n+7,w
  9257  2669  1D03               	skipz
  9258  266A  2E85               	goto	l7729
  9259  266B  0843               	movf	otoa@p+1,w
  9260  266C  3A80               	xorlw	128
  9261  266D  00BA               	movwf	??_otoa
  9262  266E  3080               	movlw	128
  9263  266F  023A               	subwf	??_otoa,w
  9264  2670  1D03               	skipz
  9265  2671  2E74               	goto	u10975
  9266  2672  3001               	movlw	1
  9267  2673  0242               	subwf	otoa@p,w
  9268  2674                     u10975:	
  9269  2674  1803               	skipnc
  9270  2675  2E85               	goto	l7729
  9271  2676  0020               	movlb	0	; select bank0
  9272  2677  0847               	movf	otoa@w+1,w
  9273  2678  3A80               	xorlw	128
  9274  2679  00BA               	movwf	??_otoa
  9275  267A  3080               	movlw	128
  9276  267B  023A               	subwf	??_otoa,w
  9277  267C  1D03               	skipz
  9278  267D  2E80               	goto	u10985
  9279  267E  3001               	movlw	1
  9280  267F  0246               	subwf	otoa@w,w
  9281  2680                     u10985:	
  9282  2680  1C03               	skipc
  9283  2681  2EDE               	goto	l734
  9284  2682  0023               	movlb	3	; select bank3
  9285  2683  1CC2               	btfss	_flags^(0+384),1
  9286  2684  2EDE               	goto	l734
  9287  2685                     l7729:	
  9288                           
  9289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9290  2685  30FF               	movlw	255
  9291  2686  0020               	movlb	0	; select bank0
  9292  2687  07D0               	addwf	otoa@i,f
  9293  2688  30FF               	movlw	255
  9294  2689  3DD1               	addwfc	otoa@i+1,f
  9295                           
  9296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9297  268A  3007               	movlw	7
  9298  268B  0548               	andwf	otoa@n,w
  9299  268C  00C4               	movwf	otoa@t
  9300  268D  3000               	movlw	0
  9301  268E  0549               	andwf	otoa@n+1,w
  9302  268F  00C5               	movwf	otoa@t+1
  9303                           
  9304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9305  2690  0844               	movf	otoa@t,w
  9306  2691  3E30               	addlw	48
  9307  2692  00BA               	movwf	??_otoa
  9308  2693  0850               	movf	otoa@i,w
  9309  2694  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9310  2695  0086               	movwf	6
  9311  2696  3002               	movlw	2	; select bank4/5
  9312  2697  0087               	movwf	7
  9313  2698  083A               	movf	??_otoa,w
  9314  2699  0081               	movwf	1
  9315                           
  9316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9317  269A  30FF               	movlw	255
  9318  269B  07C2               	addwf	otoa@p,f
  9319  269C  30FF               	movlw	255
  9320  269D  3DC3               	addwfc	otoa@p+1,f
  9321                           
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9323  269E  30FF               	movlw	255
  9324  269F  07C6               	addwf	otoa@w,f
  9325  26A0  30FF               	movlw	255
  9326  26A1  3DC7               	addwfc	otoa@w+1,f
  9327                           
  9328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9329  26A2  3048               	movlw	low otoa@n
  9330  26A3  0086               	movwf	6
  9331  26A4  3000               	movlw	high otoa@n
  9332  26A5  0087               	movwf	7
  9333  26A6  3F40               	moviw [0]fsr1
  9334  26A7  00BA               	movwf	??_otoa
  9335  26A8  3F41               	moviw [1]fsr1
  9336  26A9  00BB               	movwf	??_otoa+1
  9337  26AA  3F42               	moviw [2]fsr1
  9338  26AB  00BC               	movwf	??_otoa+2
  9339  26AC  3F43               	moviw [3]fsr1
  9340  26AD  00BD               	movwf	??_otoa+3
  9341  26AE  3F44               	moviw [4]fsr1
  9342  26AF  00BE               	movwf	??_otoa+4
  9343  26B0  3F45               	moviw [5]fsr1
  9344  26B1  00BF               	movwf	??_otoa+5
  9345  26B2  3F46               	moviw [6]fsr1
  9346  26B3  00C0               	movwf	??_otoa+6
  9347  26B4  3F47               	moviw [7]fsr1
  9348  26B5  00C1               	movwf	??_otoa+7
  9349  26B6  3003               	movlw	3
  9350  26B7                     u10945:	
  9351  26B7  0020               	movlb	0	; select bank0
  9352  26B8  36C1               	lsrf	??_otoa+7,f
  9353  26B9  0CC0               	rrf	??_otoa+6,f
  9354  26BA  0CBF               	rrf	??_otoa+5,f
  9355  26BB  0CBE               	rrf	??_otoa+4,f
  9356  26BC  0CBD               	rrf	??_otoa+3,f
  9357  26BD  0CBC               	rrf	??_otoa+2,f
  9358  26BE  0CBB               	rrf	??_otoa+1,f
  9359  26BF  0CBA               	rrf	??_otoa,f
  9360  26C0  0B89               	decfsz	9,f
  9361  26C1  2EB7               	goto	u10945
  9362  26C2  0020               	movlb	0	; select bank0
  9363  26C3  0841               	movf	??_otoa+7,w
  9364  26C4  00CF               	movwf	otoa@n+7
  9365  26C5  0840               	movf	??_otoa+6,w
  9366  26C6  00CE               	movwf	otoa@n+6
  9367  26C7  083F               	movf	??_otoa+5,w
  9368  26C8  00CD               	movwf	otoa@n+5
  9369  26C9  083E               	movf	??_otoa+4,w
  9370  26CA  00CC               	movwf	otoa@n+4
  9371  26CB  083D               	movf	??_otoa+3,w
  9372  26CC  00CB               	movwf	otoa@n+3
  9373  26CD  083C               	movf	??_otoa+2,w
  9374  26CE  00CA               	movwf	otoa@n+2
  9375  26CF  083B               	movf	??_otoa+1,w
  9376  26D0  00C9               	movwf	otoa@n+1
  9377  26D1  083A               	movf	??_otoa,w
  9378  26D2  00C8               	movwf	otoa@n
  9379  26D3                     l728:	
  9380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  9381                           
  9382                           
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9384  26D3  0851               	movf	otoa@i+1,w
  9385  26D4  3A80               	xorlw	128
  9386  26D5  00BA               	movwf	??_otoa
  9387  26D6  3080               	movlw	128
  9388  26D7  023A               	subwf	??_otoa,w
  9389  26D8  1D03               	skipz
  9390  26D9  2EDC               	goto	u10955
  9391  26DA  3001               	movlw	1
  9392  26DB  0250               	subwf	otoa@i,w
  9393  26DC                     u10955:	
  9394  26DC  1803               	btfsc	3,0
  9395  26DD  2E60               	goto	l7739
  9396  26DE                     l734:	
  9397                           
  9398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9399  26DE  0023               	movlb	3	; select bank3
  9400  26DF  1E42               	btfss	_flags^(0+384),4
  9401  26E0  2EF7               	goto	l7755
  9402  26E1  0020               	movlb	0	; select bank0
  9403  26E2  0844               	movf	otoa@t,w
  9404  26E3  0445               	iorwf	otoa@t+1,w
  9405  26E4  1903               	btfsc	3,2
  9406  26E5  2EF7               	goto	l7755
  9407                           
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9409  26E6  30FF               	movlw	255
  9410  26E7  07D0               	addwf	otoa@i,f
  9411  26E8  30FF               	movlw	255
  9412  26E9  3DD1               	addwfc	otoa@i+1,f
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9415  26EA  3030               	movlw	48
  9416  26EB  00BA               	movwf	??_otoa
  9417  26EC  0850               	movf	otoa@i,w
  9418  26ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9419  26EE  0086               	movwf	6
  9420  26EF  3002               	movlw	2	; select bank4/5
  9421  26F0  0087               	movwf	7
  9422  26F1  083A               	movf	??_otoa,w
  9423  26F2  0081               	movwf	1
  9424                           
  9425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9426  26F3  30FF               	movlw	255
  9427  26F4  07C6               	addwf	otoa@w,f
  9428  26F5  30FF               	movlw	255
  9429  26F6  3DC7               	addwfc	otoa@w+1,f
  9430  26F7                     l7755:	
  9431                           
  9432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9433  26F7  0020               	movlb	0	; select bank0
  9434  26F8  0831               	movf	otoa@fp+1,w
  9435  26F9  00A7               	movwf	pad@fp+1
  9436  26FA  0830               	movf	otoa@fp,w
  9437  26FB  00A6               	movwf	pad@fp
  9438  26FC  0850               	movf	otoa@i,w
  9439  26FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9440  26FE  00BA               	movwf	??_otoa
  9441  26FF  083A               	movf	??_otoa,w
  9442  2700  00A8               	movwf	pad@buf
  9443  2701  0847               	movf	otoa@w+1,w
  9444  2702  00AA               	movwf	pad@p+1
  9445  2703  0846               	movf	otoa@w,w
  9446  2704  00A9               	movwf	pad@p
  9447  2705  31B5  256D         	fcall	_pad
  9448  2707  0020               	movlb	0	; select bank0
  9449  2708  0827               	movf	?_pad+1,w
  9450  2709  00B1               	movwf	?_otoa+1
  9451  270A  0826               	movf	?_pad,w
  9452  270B  00B0               	movwf	?_otoa
  9453  270C  0008               	return
  9454  270D                     __end_of_otoa:	
  9455                           
  9456                           	psect	text18
  9457  0058                     __ptext18:	
  9458 ;; *************** function _efgtoa *****************
  9459 ;; Defined at:
  9460 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  9463 ;;		 -> vsnprintf@f(6), 
  9464 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  9465 ;;  c               1    6[BANK1 ] unsigned char 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  u               4   63[BANK1 ] unsigned char 
  9468 ;;  g               4   55[BANK1 ] unsigned char 
  9469 ;;  l               4   49[BANK1 ] unsigned char 
  9470 ;;  h               4   45[BANK1 ] unsigned char 
  9471 ;;  ou              4   11[BANK1 ] unsigned char 
  9472 ;;  n               2   61[BANK1 ] int 
  9473 ;;  e               2   59[BANK1 ] int 
  9474 ;;  i               2   53[BANK1 ] int 
  9475 ;;  w               2   42[BANK1 ] int 
  9476 ;;  p               2   39[BANK1 ] int 
  9477 ;;  sign            2   37[BANK1 ] int 
  9478 ;;  d               2   35[BANK1 ] int 
  9479 ;;  ne              2   33[BANK1 ] int 
  9480 ;;  m               2   31[BANK1 ] int 
  9481 ;;  pp              2   29[BANK1 ] int 
  9482 ;;  t               2   27[BANK1 ] int 
  9483 ;;  mode            1   44[BANK1 ] unsigned char 
  9484 ;;  nmode           1   41[BANK1 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  2    0[BANK1 ] int 
  9487 ;; Registers used:
  9488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9494 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9495 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9496 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9497 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9498 ;;Total ram usage:       67 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    5
  9501 ;; This function calls:
  9502 ;;		___awdiv
  9503 ;;		___awmod
  9504 ;;		___fladd
  9505 ;;		___fldiv
  9506 ;;		___fleq
  9507 ;;		___flge
  9508 ;;		___flmul
  9509 ;;		___flneg
  9510 ;;		___flsub
  9511 ;;		___fltol
  9512 ;;		___fpclassifyf
  9513 ;;		_floorf
  9514 ;;		_isupper
  9515 ;;		_pad
  9516 ;;		_strcpy
  9517 ;;		_tolower
  9518 ;; This function is called by:
  9519 ;;		_vfpfcnvrt
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           
  9524                           ;psect for function _efgtoa
  9525  0058                     _efgtoa:	
  9526                           
  9527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9528                           
  9529                           ;incstack = 0
  9530                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9531  0058  0021               	movlb	1	; select bank1
  9532  0059  01C5               	clrf	efgtoa@sign^(0+128)
  9533  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9534                           
  9535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9536  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  9537  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9538  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  9539  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9540  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  9541  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9542  0061  0822               	movf	efgtoa@f^(0+128),w
  9543  0062  00D7               	movwf	efgtoa@g^(0+128)
  9544                           
  9545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9546  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  9547  0064  0020               	movlb	0	; select bank0
  9548  0065  00DD               	movwf	___flge@ff1+3
  9549  0066  0021               	movlb	1	; select bank1
  9550  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  9551  0068  0020               	movlb	0	; select bank0
  9552  0069  00DC               	movwf	___flge@ff1+2
  9553  006A  0021               	movlb	1	; select bank1
  9554  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  9555  006C  0020               	movlb	0	; select bank0
  9556  006D  00DB               	movwf	___flge@ff1+1
  9557  006E  0021               	movlb	1	; select bank1
  9558  006F  0857               	movf	efgtoa@g^(0+128),w
  9559  0070  0020               	movlb	0	; select bank0
  9560  0071  00DA               	movwf	___flge@ff1
  9561  0072  3000               	movlw	0
  9562  0073  00E1               	movwf	___flge@ff2+3
  9563  0074  3000               	movlw	0
  9564  0075  00E0               	movwf	___flge@ff2+2
  9565  0076  3000               	movlw	0
  9566  0077  00DF               	movwf	___flge@ff2+1
  9567  0078  3000               	movlw	0
  9568  0079  00DE               	movwf	___flge@ff2
  9569  007A  31A8  2030  3180   	fcall	___flge
  9570  007D  1803               	btfsc	3,0
  9571  007E  2898               	goto	l7433
  9572                           
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9574  007F  3001               	movlw	1
  9575  0080  0021               	movlb	1	; select bank1
  9576  0081  00C5               	movwf	efgtoa@sign^(0+128)
  9577  0082  3000               	movlw	0
  9578  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9579                           
  9580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9581  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  9582  0085  00F4               	movwf	___flneg@f1+3
  9583  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  9584  0087  00F3               	movwf	___flneg@f1+2
  9585  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  9586  0089  00F2               	movwf	___flneg@f1+1
  9587  008A  0857               	movf	efgtoa@g^(0+128),w
  9588  008B  00F1               	movwf	___flneg@f1
  9589  008C  31B0  20E4  3180   	fcall	___flneg
  9590  008F  0874               	movf	?___flneg+3,w
  9591  0090  0021               	movlb	1	; select bank1
  9592  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  9593  0092  0873               	movf	?___flneg+2,w
  9594  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  9595  0094  0872               	movf	?___flneg+1,w
  9596  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  9597  0096  0871               	movf	?___flneg,w
  9598  0097  00D7               	movwf	efgtoa@g^(0+128)
  9599  0098                     l7433:	
  9600                           
  9601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9602  0098  0021               	movlb	1	; select bank1
  9603  0099  01DD               	clrf	efgtoa@n^(0+128)
  9604  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  9605                           
  9606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9607  009B  0023               	movlb	3	; select bank3
  9608  009C  083F               	movf	(_width+1)^(0+384),w
  9609  009D  0021               	movlb	1	; select bank1
  9610  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  9611  009F  0023               	movlb	3	; select bank3
  9612  00A0  083E               	movf	_width^(0+384),w
  9613  00A1  0021               	movlb	1	; select bank1
  9614  00A2  00CA               	movwf	efgtoa@w^(0+128)
  9615                           
  9616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9617  00A3  0845               	movf	efgtoa@sign^(0+128),w
  9618  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9619  00A5  1D03               	btfss	3,2
  9620  00A6  28AA               	goto	l7441
  9621  00A7  0023               	movlb	3	; select bank3
  9622  00A8  1D42               	btfss	_flags^(0+384),2
  9623  00A9  28C3               	goto	l7453
  9624  00AA                     l7441:	
  9625                           
  9626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9627  00AA  0021               	movlb	1	; select bank1
  9628  00AB  0845               	movf	efgtoa@sign^(0+128),w
  9629  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9630  00AD  1D03               	btfss	3,2
  9631  00AE  28B1               	goto	l7445
  9632  00AF  302B               	movlw	43
  9633  00B0  28B2               	goto	L3
  9634  00B1                     l7445:	
  9635  00B1  302D               	movlw	45
  9636  00B2                     L3:	
  9637  00B2  00AF               	movwf	_efgtoa$1193^(0+128)
  9638  00B3  3000               	movlw	0
  9639  00B4  00B0               	movwf	(_efgtoa$1193^(0+128)+1)
  9640  00B5  082F               	movf	_efgtoa$1193^(0+128),w
  9641  00B6  00A7               	movwf	??_efgtoa^(0+128)
  9642  00B7  0827               	movf	??_efgtoa^(0+128),w
  9643  00B8  0024               	movlb	4	; select bank4
  9644  00B9  00A0               	movwf	_dbuf^(0+512)
  9645                           
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9647  00BA  3001               	movlw	1
  9648  00BB  0021               	movlb	1	; select bank1
  9649  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  9650  00BD  3000               	movlw	0
  9651  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9652                           
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9654  00BF  30FF               	movlw	255
  9655  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  9656  00C1  30FF               	movlw	255
  9657  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9658  00C3                     l7453:	
  9659                           
  9660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9661  00C3  0021               	movlb	1	; select bank1
  9662  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  9663  00C5  00F4               	movwf	___fpclassifyf@x+3
  9664  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  9665  00C7  00F3               	movwf	___fpclassifyf@x+2
  9666  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  9667  00C9  00F2               	movwf	___fpclassifyf@x+1
  9668  00CA  0857               	movf	efgtoa@g^(0+128),w
  9669  00CB  00F1               	movwf	___fpclassifyf@x
  9670  00CC  31B7  2788  3180   	fcall	___fpclassifyf
  9671  00CF  0371               	decf	?___fpclassifyf,w
  9672  00D0  0472               	iorwf	?___fpclassifyf+1,w
  9673  00D1  1D03               	btfss	3,2
  9674  00D2  2921               	goto	l7471
  9675  00D3  0021               	movlb	1	; select bank1
  9676  00D4  0826               	movf	efgtoa@c^(0+128),w
  9677  00D5  3EBF               	addlw	191
  9678  00D6  00A7               	movwf	??_efgtoa^(0+128)
  9679  00D7  30FF               	movlw	255
  9680  00D8  1803               	skipnc
  9681  00D9  3000               	movlw	0
  9682  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9683  00DB  3000               	movlw	0
  9684  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9685  00DD  301A               	movlw	26
  9686  00DE  1903               	skipnz
  9687  00DF  0227               	subwf	??_efgtoa^(0+128),w
  9688  00E0  1803               	btfsc	3,0
  9689  00E1  28E4               	goto	u10450
  9690  00E2  3001               	movlw	1
  9691  00E3  28E5               	goto	u10460
  9692  00E4                     u10450:	
  9693  00E4  3000               	movlw	0
  9694  00E5                     u10460:	
  9695  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9696  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9697  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  9698  00E8  00B1               	movwf	_efgtoa$1194^(0+128)
  9699  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  9700  00EA  00B2               	movwf	(_efgtoa$1194+1)^(0+128)
  9701  00EB  0831               	movf	_efgtoa$1194^(0+128),w
  9702  00EC  0432               	iorwf	(_efgtoa$1194+1)^(0+128),w
  9703  00ED  1903               	btfsc	3,2
  9704  00EE  28F3               	goto	l7463
  9705                           
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9707  00EF  3010               	movlw	low (STR_26| (0+32768))
  9708  00F0  00F1               	movwf	strcpy@src
  9709  00F1  30BB               	movlw	high (STR_26| (0+32768))
  9710  00F2  28F6               	goto	L4
  9711  00F3                     l7463:	
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9713                           
  9714                           
  9715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9716  00F3  3020               	movlw	low (STR_27| (0+32768))
  9717  00F4  00F1               	movwf	strcpy@src
  9718  00F5  30BB               	movlw	high (STR_27| (0+32768))
  9719  00F6                     L4:	
  9720  00F6  00F2               	movwf	strcpy@src+1
  9721  00F7  085D               	movf	efgtoa@n^(0+128),w
  9722  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9723  00F9  31B2  2277  3180   	fcall	_strcpy
  9724                           
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9726  00FC  30FD               	movlw	253
  9727  00FD  0021               	movlb	1	; select bank1
  9728  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  9729  00FF  30FF               	movlw	255
  9730  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9731                           
  9732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9733  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9734  0102  0020               	movlb	0	; select bank0
  9735  0103  00A7               	movwf	pad@fp+1
  9736  0104  0021               	movlb	1	; select bank1
  9737  0105  0820               	movf	efgtoa@fp^(0+128),w
  9738  0106  0020               	movlb	0	; select bank0
  9739  0107  00A6               	movwf	pad@fp
  9740  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9741  0109  0021               	movlb	1	; select bank1
  9742  010A  00A7               	movwf	??_efgtoa^(0+128)
  9743  010B  0827               	movf	??_efgtoa^(0+128),w
  9744  010C  0020               	movlb	0	; select bank0
  9745  010D  00A8               	movwf	pad@buf
  9746  010E  0021               	movlb	1	; select bank1
  9747  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  9748  0110  0020               	movlb	0	; select bank0
  9749  0111  00AA               	movwf	pad@p+1
  9750  0112  0021               	movlb	1	; select bank1
  9751  0113  084A               	movf	efgtoa@w^(0+128),w
  9752  0114  0020               	movlb	0	; select bank0
  9753  0115  00A9               	movwf	pad@p
  9754  0116  31B5  256D         	fcall	_pad
  9755  0118  0020               	movlb	0	; select bank0
  9756  0119  0827               	movf	?_pad+1,w
  9757  011A  0021               	movlb	1	; select bank1
  9758  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9759  011C  0020               	movlb	0	; select bank0
  9760  011D  0826               	movf	?_pad,w
  9761  011E  0021               	movlb	1	; select bank1
  9762  011F  00A0               	movwf	?_efgtoa^(0+128)
  9763  0120  0008               	return
  9764  0121                     l7471:	
  9765                           
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9767  0121  0021               	movlb	1	; select bank1
  9768  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  9769  0123  00F4               	movwf	___fpclassifyf@x+3
  9770  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  9771  0125  00F3               	movwf	___fpclassifyf@x+2
  9772  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  9773  0127  00F2               	movwf	___fpclassifyf@x+1
  9774  0128  0857               	movf	efgtoa@g^(0+128),w
  9775  0129  00F1               	movwf	___fpclassifyf@x
  9776  012A  31B7  2788  3180   	fcall	___fpclassifyf
  9777  012D  0871               	movf	?___fpclassifyf,w
  9778  012E  0472               	iorwf	?___fpclassifyf+1,w
  9779  012F  1D03               	btfss	3,2
  9780  0130  297F               	goto	l7489
  9781  0131  0021               	movlb	1	; select bank1
  9782  0132  0826               	movf	efgtoa@c^(0+128),w
  9783  0133  3EBF               	addlw	191
  9784  0134  00A7               	movwf	??_efgtoa^(0+128)
  9785  0135  30FF               	movlw	255
  9786  0136  1803               	skipnc
  9787  0137  3000               	movlw	0
  9788  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9789  0139  3000               	movlw	0
  9790  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9791  013B  301A               	movlw	26
  9792  013C  1903               	skipnz
  9793  013D  0227               	subwf	??_efgtoa^(0+128),w
  9794  013E  1803               	btfsc	3,0
  9795  013F  2942               	goto	u10490
  9796  0140  3001               	movlw	1
  9797  0141  2943               	goto	u10500
  9798  0142                     u10490:	
  9799  0142  3000               	movlw	0
  9800  0143                     u10500:	
  9801  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9802  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9803  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  9804  0146  00B3               	movwf	_efgtoa$1198^(0+128)
  9805  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  9806  0148  00B4               	movwf	(_efgtoa$1198+1)^(0+128)
  9807  0149  0833               	movf	_efgtoa$1198^(0+128),w
  9808  014A  0434               	iorwf	(_efgtoa$1198+1)^(0+128),w
  9809  014B  1903               	btfsc	3,2
  9810  014C  2951               	goto	l7481
  9811                           
  9812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9813  014D  3014               	movlw	low (STR_30| (0+32768))
  9814  014E  00F1               	movwf	strcpy@src
  9815  014F  30BB               	movlw	high (STR_30| (0+32768))
  9816  0150  2954               	goto	L5
  9817  0151                     l7481:	
  9818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9819                           
  9820                           
  9821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9822  0151  3028               	movlw	low (STR_31| (0+32768))
  9823  0152  00F1               	movwf	strcpy@src
  9824  0153  30BB               	movlw	high (STR_31| (0+32768))
  9825  0154                     L5:	
  9826  0154  00F2               	movwf	strcpy@src+1
  9827  0155  085D               	movf	efgtoa@n^(0+128),w
  9828  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9829  0157  31B2  2277  3180   	fcall	_strcpy
  9830                           
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9832  015A  30FD               	movlw	253
  9833  015B  0021               	movlb	1	; select bank1
  9834  015C  07CA               	addwf	efgtoa@w^(0+128),f
  9835  015D  30FF               	movlw	255
  9836  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9837                           
  9838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  9839  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9840  0160  0020               	movlb	0	; select bank0
  9841  0161  00A7               	movwf	pad@fp+1
  9842  0162  0021               	movlb	1	; select bank1
  9843  0163  0820               	movf	efgtoa@fp^(0+128),w
  9844  0164  0020               	movlb	0	; select bank0
  9845  0165  00A6               	movwf	pad@fp
  9846  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9847  0167  0021               	movlb	1	; select bank1
  9848  0168  00A7               	movwf	??_efgtoa^(0+128)
  9849  0169  0827               	movf	??_efgtoa^(0+128),w
  9850  016A  0020               	movlb	0	; select bank0
  9851  016B  00A8               	movwf	pad@buf
  9852  016C  0021               	movlb	1	; select bank1
  9853  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  9854  016E  0020               	movlb	0	; select bank0
  9855  016F  00AA               	movwf	pad@p+1
  9856  0170  0021               	movlb	1	; select bank1
  9857  0171  084A               	movf	efgtoa@w^(0+128),w
  9858  0172  0020               	movlb	0	; select bank0
  9859  0173  00A9               	movwf	pad@p
  9860  0174  31B5  256D         	fcall	_pad
  9861  0176  0020               	movlb	0	; select bank0
  9862  0177  0827               	movf	?_pad+1,w
  9863  0178  0021               	movlb	1	; select bank1
  9864  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9865  017A  0020               	movlb	0	; select bank0
  9866  017B  0826               	movf	?_pad,w
  9867  017C  0021               	movlb	1	; select bank1
  9868  017D  00A0               	movwf	?_efgtoa^(0+128)
  9869  017E  0008               	return
  9870  017F                     l7489:	
  9871                           
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9873  017F  303F               	movlw	63
  9874  0180  0021               	movlb	1	; select bank1
  9875  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9876  0182  3080               	movlw	128
  9877  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9878  0184  3000               	movlw	0
  9879  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9880  0186  3000               	movlw	0
  9881  0187  00DF               	movwf	efgtoa@u^(0+128)
  9882                           
  9883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9884  0188  01DB               	clrf	efgtoa@e^(0+128)
  9885  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  9886                           
  9887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9888  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  9889  018B  00F4               	movwf	___fleq@ff1+3
  9890  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  9891  018D  00F3               	movwf	___fleq@ff1+2
  9892  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  9893  018F  00F2               	movwf	___fleq@ff1+1
  9894  0190  0857               	movf	efgtoa@g^(0+128),w
  9895  0191  00F1               	movwf	___fleq@ff1
  9896  0192  3000               	movlw	0
  9897  0193  00F8               	movwf	___fleq@ff2+3
  9898  0194  3000               	movlw	0
  9899  0195  00F7               	movwf	___fleq@ff2+2
  9900  0196  3000               	movlw	0
  9901  0197  00F6               	movwf	___fleq@ff2+1
  9902  0198  3000               	movlw	0
  9903  0199  00F5               	movwf	___fleq@ff2
  9904  019A  31B4  2484  3180   	fcall	___fleq
  9905  019D  1C03               	btfss	3,0
  9906  019E  29D0               	goto	l7501
  9907  019F  2A5F               	goto	l7509
  9908  01A0                     l7497:	
  9909                           
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9911  01A0  3041               	movlw	65
  9912  01A1  0020               	movlb	0	; select bank0
  9913  01A2  00A9               	movwf	___flmul@b+3
  9914  01A3  3020               	movlw	32
  9915  01A4  00A8               	movwf	___flmul@b+2
  9916  01A5  3000               	movlw	0
  9917  01A6  00A7               	movwf	___flmul@b+1
  9918  01A7  3000               	movlw	0
  9919  01A8  00A6               	movwf	___flmul@b
  9920  01A9  0021               	movlb	1	; select bank1
  9921  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  9922  01AB  0020               	movlb	0	; select bank0
  9923  01AC  00AD               	movwf	___flmul@a+3
  9924  01AD  0021               	movlb	1	; select bank1
  9925  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  9926  01AF  0020               	movlb	0	; select bank0
  9927  01B0  00AC               	movwf	___flmul@a+2
  9928  01B1  0021               	movlb	1	; select bank1
  9929  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  9930  01B3  0020               	movlb	0	; select bank0
  9931  01B4  00AB               	movwf	___flmul@a+1
  9932  01B5  0021               	movlb	1	; select bank1
  9933  01B6  085F               	movf	efgtoa@u^(0+128),w
  9934  01B7  0020               	movlb	0	; select bank0
  9935  01B8  00AA               	movwf	___flmul@a
  9936  01B9  3195  25D4  3180   	fcall	___flmul
  9937  01BC  0020               	movlb	0	; select bank0
  9938  01BD  0829               	movf	?___flmul+3,w
  9939  01BE  0021               	movlb	1	; select bank1
  9940  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9941  01C0  0020               	movlb	0	; select bank0
  9942  01C1  0828               	movf	?___flmul+2,w
  9943  01C2  0021               	movlb	1	; select bank1
  9944  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9945  01C4  0020               	movlb	0	; select bank0
  9946  01C5  0827               	movf	?___flmul+1,w
  9947  01C6  0021               	movlb	1	; select bank1
  9948  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9949  01C8  0020               	movlb	0	; select bank0
  9950  01C9  0826               	movf	?___flmul,w
  9951  01CA  0021               	movlb	1	; select bank1
  9952  01CB  00DF               	movwf	efgtoa@u^(0+128)
  9953                           
  9954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9955  01CC  3001               	movlw	1
  9956  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  9957  01CE  3000               	movlw	0
  9958  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  9959  01D0                     l7501:	
  9960                           
  9961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9962  01D0  0021               	movlb	1	; select bank1
  9963  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  9964  01D2  0020               	movlb	0	; select bank0
  9965  01D3  00DD               	movwf	___flge@ff1+3
  9966  01D4  0021               	movlb	1	; select bank1
  9967  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  9968  01D6  0020               	movlb	0	; select bank0
  9969  01D7  00DC               	movwf	___flge@ff1+2
  9970  01D8  0021               	movlb	1	; select bank1
  9971  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  9972  01DA  0020               	movlb	0	; select bank0
  9973  01DB  00DB               	movwf	___flge@ff1+1
  9974  01DC  0021               	movlb	1	; select bank1
  9975  01DD  0857               	movf	efgtoa@g^(0+128),w
  9976  01DE  0020               	movlb	0	; select bank0
  9977  01DF  00DA               	movwf	___flge@ff1
  9978  01E0  3041               	movlw	65
  9979  01E1  00A9               	movwf	___flmul@b+3
  9980  01E2  3020               	movlw	32
  9981  01E3  00A8               	movwf	___flmul@b+2
  9982  01E4  3000               	movlw	0
  9983  01E5  00A7               	movwf	___flmul@b+1
  9984  01E6  3000               	movlw	0
  9985  01E7  00A6               	movwf	___flmul@b
  9986  01E8  0021               	movlb	1	; select bank1
  9987  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  9988  01EA  0020               	movlb	0	; select bank0
  9989  01EB  00AD               	movwf	___flmul@a+3
  9990  01EC  0021               	movlb	1	; select bank1
  9991  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  9992  01EE  0020               	movlb	0	; select bank0
  9993  01EF  00AC               	movwf	___flmul@a+2
  9994  01F0  0021               	movlb	1	; select bank1
  9995  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  9996  01F2  0020               	movlb	0	; select bank0
  9997  01F3  00AB               	movwf	___flmul@a+1
  9998  01F4  0021               	movlb	1	; select bank1
  9999  01F5  085F               	movf	efgtoa@u^(0+128),w
 10000  01F6  0020               	movlb	0	; select bank0
 10001  01F7  00AA               	movwf	___flmul@a
 10002  01F8  3195  25D4  3180   	fcall	___flmul
 10003  01FB  0020               	movlb	0	; select bank0
 10004  01FC  0829               	movf	?___flmul+3,w
 10005  01FD  00E1               	movwf	___flge@ff2+3
 10006  01FE  0828               	movf	?___flmul+2,w
 10007  01FF  00E0               	movwf	___flge@ff2+2
 10008  0200  0827               	movf	?___flmul+1,w
 10009  0201  00DF               	movwf	___flge@ff2+1
 10010  0202  0826               	movf	?___flmul,w
 10011  0203  00DE               	movwf	___flge@ff2
 10012  0204  31A8  2030  3180   	fcall	___flge
 10013  0207  1C03               	btfss	3,0
 10014  0208  2A3A               	goto	l7507
 10015  0209  29A0               	goto	l7497
 10016  020A                     l7503:	
 10017                           
 10018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 10019  020A  3041               	movlw	65
 10020  020B  0020               	movlb	0	; select bank0
 10021  020C  00C3               	movwf	___fldiv@a+3
 10022  020D  3020               	movlw	32
 10023  020E  00C2               	movwf	___fldiv@a+2
 10024  020F  3000               	movlw	0
 10025  0210  00C1               	movwf	___fldiv@a+1
 10026  0211  3000               	movlw	0
 10027  0212  00C0               	movwf	___fldiv@a
 10028  0213  0021               	movlb	1	; select bank1
 10029  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
 10030  0215  0020               	movlb	0	; select bank0
 10031  0216  00C7               	movwf	___fldiv@b+3
 10032  0217  0021               	movlb	1	; select bank1
 10033  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
 10034  0219  0020               	movlb	0	; select bank0
 10035  021A  00C6               	movwf	___fldiv@b+2
 10036  021B  0021               	movlb	1	; select bank1
 10037  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
 10038  021D  0020               	movlb	0	; select bank0
 10039  021E  00C5               	movwf	___fldiv@b+1
 10040  021F  0021               	movlb	1	; select bank1
 10041  0220  085F               	movf	efgtoa@u^(0+128),w
 10042  0221  0020               	movlb	0	; select bank0
 10043  0222  00C4               	movwf	___fldiv@b
 10044  0223  3190  2052  3180   	fcall	___fldiv
 10045  0226  0020               	movlb	0	; select bank0
 10046  0227  0843               	movf	?___fldiv+3,w
 10047  0228  0021               	movlb	1	; select bank1
 10048  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10049  022A  0020               	movlb	0	; select bank0
 10050  022B  0842               	movf	?___fldiv+2,w
 10051  022C  0021               	movlb	1	; select bank1
 10052  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10053  022E  0020               	movlb	0	; select bank0
 10054  022F  0841               	movf	?___fldiv+1,w
 10055  0230  0021               	movlb	1	; select bank1
 10056  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10057  0232  0020               	movlb	0	; select bank0
 10058  0233  0840               	movf	?___fldiv,w
 10059  0234  0021               	movlb	1	; select bank1
 10060  0235  00DF               	movwf	efgtoa@u^(0+128)
 10061                           
 10062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 10063  0236  30FF               	movlw	255
 10064  0237  07DB               	addwf	efgtoa@e^(0+128),f
 10065  0238  30FF               	movlw	255
 10066  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
 10067  023A                     l7507:	
 10068                           
 10069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 10070  023A  0021               	movlb	1	; select bank1
 10071  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
 10072  023C  0020               	movlb	0	; select bank0
 10073  023D  00DD               	movwf	___flge@ff1+3
 10074  023E  0021               	movlb	1	; select bank1
 10075  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
 10076  0240  0020               	movlb	0	; select bank0
 10077  0241  00DC               	movwf	___flge@ff1+2
 10078  0242  0021               	movlb	1	; select bank1
 10079  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
 10080  0244  0020               	movlb	0	; select bank0
 10081  0245  00DB               	movwf	___flge@ff1+1
 10082  0246  0021               	movlb	1	; select bank1
 10083  0247  0857               	movf	efgtoa@g^(0+128),w
 10084  0248  0020               	movlb	0	; select bank0
 10085  0249  00DA               	movwf	___flge@ff1
 10086  024A  0021               	movlb	1	; select bank1
 10087  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
 10088  024C  0020               	movlb	0	; select bank0
 10089  024D  00E1               	movwf	___flge@ff2+3
 10090  024E  0021               	movlb	1	; select bank1
 10091  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
 10092  0250  0020               	movlb	0	; select bank0
 10093  0251  00E0               	movwf	___flge@ff2+2
 10094  0252  0021               	movlb	1	; select bank1
 10095  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
 10096  0254  0020               	movlb	0	; select bank0
 10097  0255  00DF               	movwf	___flge@ff2+1
 10098  0256  0021               	movlb	1	; select bank1
 10099  0257  085F               	movf	efgtoa@u^(0+128),w
 10100  0258  0020               	movlb	0	; select bank0
 10101  0259  00DE               	movwf	___flge@ff2
 10102  025A  31A8  2030  3180   	fcall	___flge
 10103  025D  1C03               	btfss	3,0
 10104  025E  2A0A               	goto	l7503
 10105  025F                     l7509:	
 10106                           
 10107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 10108  025F  0021               	movlb	1	; select bank1
 10109  0260  0826               	movf	efgtoa@c^(0+128),w
 10110  0261  00A7               	movwf	??_efgtoa^(0+128)
 10111  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
 10112  0263  0827               	movf	??_efgtoa^(0+128),w
 10113  0264  00F7               	movwf	tolower@c
 10114  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
 10115  0266  00F8               	movwf	tolower@c+1
 10116  0267  31B2  22D9  3180   	fcall	_tolower
 10117  026A  0877               	movf	?_tolower,w
 10118  026B  0021               	movlb	1	; select bank1
 10119  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
 10120  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
 10121  026E  00CC               	movwf	efgtoa@mode^(0+128)
 10122                           
 10123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 10124  026F  084C               	movf	efgtoa@mode^(0+128),w
 10125  0270  00A7               	movwf	??_efgtoa^(0+128)
 10126  0271  0827               	movf	??_efgtoa^(0+128),w
 10127  0272  00C9               	movwf	efgtoa@nmode^(0+128)
 10128                           
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 10130  0273  3067               	movlw	103
 10131  0274  064C               	xorwf	efgtoa@mode^(0+128),w
 10132  0275  1D03               	btfss	3,2
 10133  0276  2A93               	goto	l662
 10134                           
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 10136  0277  0023               	movlb	3	; select bank3
 10137  0278  0840               	movf	_prec^(0+384),w
 10138  0279  0441               	iorwf	(_prec+1)^(0+384),w
 10139  027A  1D03               	btfss	3,2
 10140  027B  2A80               	goto	l663
 10141                           
 10142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 10143  027C  3001               	movlw	1
 10144  027D  00C0               	movwf	_prec^(0+384)
 10145  027E  3000               	movlw	0
 10146  027F  00C1               	movwf	(_prec^(0+384)+1)
 10147  0280                     l663:	
 10148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
 10149                           
 10150                           
 10151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 10152  0280  0841               	movf	(_prec+1)^(0+384),w
 10153  0281  3A80               	xorlw	128
 10154  0282  0021               	movlb	1	; select bank1
 10155  0283  00A7               	movwf	??_efgtoa^(0+128)
 10156  0284  3080               	movlw	128
 10157  0285  0227               	subwf	??_efgtoa^(0+128),w
 10158  0286  1D03               	skipz
 10159  0287  2A8B               	goto	u10575
 10160  0288  3001               	movlw	1
 10161  0289  0023               	movlb	3	; select bank3
 10162  028A  0240               	subwf	_prec^(0+384),w
 10163  028B                     u10575:	
 10164  028B  1803               	skipnc
 10165  028C  2A96               	goto	l7521
 10166  028D                     l7519:	
 10167  028D  3006               	movlw	6
 10168  028E  0021               	movlb	1	; select bank1
 10169  028F  00C7               	movwf	efgtoa@p^(0+128)
 10170  0290  3000               	movlw	0
 10171  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
 10172  0292  2A9E               	goto	l7527
 10173  0293                     l662:	
 10174                           
 10175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 10176  0293  0023               	movlb	3	; select bank3
 10177  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
 10178  0295  2A8D               	goto	l7519
 10179  0296                     l7521:	
 10180  0296  0023               	movlb	3	; select bank3
 10181  0297  0841               	movf	(_prec+1)^(0+384),w
 10182  0298  0021               	movlb	1	; select bank1
 10183  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
 10184  029A  0023               	movlb	3	; select bank3
 10185  029B  0840               	movf	_prec^(0+384),w
 10186  029C  0021               	movlb	1	; select bank1
 10187  029D  00C7               	movwf	efgtoa@p^(0+128)
 10188  029E                     l7527:	
 10189                           
 10190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10191  029E  3067               	movlw	103
 10192  029F  064C               	xorwf	efgtoa@mode^(0+128),w
 10193  02A0  1D03               	btfss	3,2
 10194  02A1  2AC7               	goto	l673
 10195                           
 10196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10197  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
 10198  02A3  3A80               	xorlw	128
 10199  02A4  00A7               	movwf	??_efgtoa^(0+128)
 10200  02A5  307F               	movlw	127
 10201  02A6  0227               	subwf	??_efgtoa^(0+128),w
 10202  02A7  1D03               	skipz
 10203  02A8  2AAB               	goto	u10605
 10204  02A9  30FC               	movlw	252
 10205  02AA  025B               	subwf	efgtoa@e^(0+128),w
 10206  02AB                     u10605:	
 10207  02AB  1C03               	skipc
 10208  02AC  2AC2               	goto	l7535
 10209  02AD  0021               	movlb	1	; select bank1
 10210  02AE  0847               	movf	efgtoa@p^(0+128),w
 10211  02AF  3EFF               	addlw	255
 10212  02B0  00A7               	movwf	??_efgtoa^(0+128)
 10213  02B1  30FF               	movlw	255
 10214  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
 10215  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
 10216  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
 10217  02B5  3A80               	xorlw	128
 10218  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
 10219  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
 10220  02B8  3A80               	xorlw	128
 10221  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
 10222  02BA  1D03               	skipz
 10223  02BB  2ABE               	goto	u10615
 10224  02BC  085B               	movf	efgtoa@e^(0+128),w
 10225  02BD  0227               	subwf	??_efgtoa^(0+128),w
 10226  02BE                     u10615:	
 10227  02BE  1C03               	skipc
 10228  02BF  2AC2               	goto	l7535
 10229                           
 10230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10231  02C0  3066               	movlw	102
 10232  02C1  2AC3               	goto	L6
 10233  02C2                     l7535:	
 10234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10235                           
 10236                           
 10237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10238  02C2  3065               	movlw	101
 10239  02C3                     L6:	
 10240  02C3  0021               	movlb	1	; select bank1
 10241  02C4  00A7               	movwf	??_efgtoa^(0+128)
 10242  02C5  0827               	movf	??_efgtoa^(0+128),w
 10243  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
 10244  02C7                     l673:	
 10245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
 10246                           
 10247                           
 10248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10249  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
 10250  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
 10251  02C9  0847               	movf	efgtoa@p^(0+128),w
 10252  02CA  00BF               	movwf	efgtoa@m^(0+128)
 10253                           
 10254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10255  02CB  3067               	movlw	103
 10256  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
 10257  02CD  1D03               	btfss	3,2
 10258  02CE  2AD4               	goto	l7543
 10259  02CF  3066               	movlw	102
 10260  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
 10261  02D1  1903               	btfsc	3,2
 10262  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 10263  02D3  2AD8               	goto	l7545
 10264  02D4                     l7543:	
 10265                           
 10266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10267  02D4  3001               	movlw	1
 10268  02D5  07BF               	addwf	efgtoa@m^(0+128),f
 10269  02D6  3000               	movlw	0
 10270  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
 10271  02D8                     l7545:	
 10272                           
 10273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10274  02D8  3066               	movlw	102
 10275  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
 10276  02DA  1D03               	btfss	3,2
 10277  02DB  2AF0               	goto	l7557
 10278                           
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10280  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 10281  02DD  2AE8               	goto	l7553
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10284  02DE  303F               	movlw	63
 10285  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10286  02E0  3080               	movlw	128
 10287  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10288  02E2  3000               	movlw	0
 10289  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10290  02E4  3000               	movlw	0
 10291  02E5  00DF               	movwf	efgtoa@u^(0+128)
 10292                           
 10293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10294  02E6  01DB               	clrf	efgtoa@e^(0+128)
 10295  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
 10296  02E8                     l7553:	
 10297                           
 10298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10299  02E8  3067               	movlw	103
 10300  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
 10301  02EA  1903               	btfsc	3,2
 10302  02EB  2AF0               	goto	l7557
 10303                           
 10304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10305  02EC  085B               	movf	efgtoa@e^(0+128),w
 10306  02ED  07BF               	addwf	efgtoa@m^(0+128),f
 10307  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
 10308  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
 10309  02F0                     l7557:	
 10310                           
 10311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10312  02F0  01D5               	clrf	efgtoa@i^(0+128)
 10313  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
 10314                           
 10315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10316  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
 10317  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10318  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
 10319  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10320  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
 10321  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10322  02F8  0857               	movf	efgtoa@g^(0+128),w
 10323  02F9  00CD               	movwf	efgtoa@h^(0+128)
 10324                           
 10325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10326  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
 10327  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
 10328  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
 10329  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
 10330  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
 10331  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
 10332  0300  085F               	movf	efgtoa@u^(0+128),w
 10333  0301  00AB               	movwf	efgtoa@ou^(0+128)
 10334  0302                     l7567:	
 10335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10336                           
 10337                           
 10338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10339  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
 10340  0303  3A80               	xorlw	128
 10341  0304  00A7               	movwf	??_efgtoa^(0+128)
 10342  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
 10343  0306  3A80               	xorlw	128
 10344  0307  0227               	subwf	??_efgtoa^(0+128),w
 10345  0308  1D03               	skipz
 10346  0309  2B0C               	goto	u10685
 10347  030A  083F               	movf	efgtoa@m^(0+128),w
 10348  030B  0255               	subwf	efgtoa@i^(0+128),w
 10349  030C                     u10685:	
 10350  030C  1803               	btfsc	3,0
 10351  030D  2BE6               	goto	l7569
 10352                           
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10354  030E  0021               	movlb	1	; select bank1
 10355  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
 10356  0310  0020               	movlb	0	; select bank0
 10357  0311  00C3               	movwf	___fldiv@a+3
 10358  0312  0021               	movlb	1	; select bank1
 10359  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
 10360  0314  0020               	movlb	0	; select bank0
 10361  0315  00C2               	movwf	___fldiv@a+2
 10362  0316  0021               	movlb	1	; select bank1
 10363  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
 10364  0318  0020               	movlb	0	; select bank0
 10365  0319  00C1               	movwf	___fldiv@a+1
 10366  031A  0021               	movlb	1	; select bank1
 10367  031B  085F               	movf	efgtoa@u^(0+128),w
 10368  031C  0020               	movlb	0	; select bank0
 10369  031D  00C0               	movwf	___fldiv@a
 10370  031E  0021               	movlb	1	; select bank1
 10371  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
 10372  0320  0020               	movlb	0	; select bank0
 10373  0321  00C7               	movwf	___fldiv@b+3
 10374  0322  0021               	movlb	1	; select bank1
 10375  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
 10376  0324  0020               	movlb	0	; select bank0
 10377  0325  00C6               	movwf	___fldiv@b+2
 10378  0326  0021               	movlb	1	; select bank1
 10379  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
 10380  0328  0020               	movlb	0	; select bank0
 10381  0329  00C5               	movwf	___fldiv@b+1
 10382  032A  0021               	movlb	1	; select bank1
 10383  032B  084D               	movf	efgtoa@h^(0+128),w
 10384  032C  0020               	movlb	0	; select bank0
 10385  032D  00C4               	movwf	___fldiv@b
 10386  032E  3190  2052  3180   	fcall	___fldiv
 10387  0331  0020               	movlb	0	; select bank0
 10388  0332  0843               	movf	?___fldiv+3,w
 10389  0333  00DD               	movwf	floorf@x+3
 10390  0334  0842               	movf	?___fldiv+2,w
 10391  0335  00DC               	movwf	floorf@x+2
 10392  0336  0841               	movf	?___fldiv+1,w
 10393  0337  00DB               	movwf	floorf@x+1
 10394  0338  0840               	movf	?___fldiv,w
 10395  0339  00DA               	movwf	floorf@x
 10396  033A  31A1  21C6  3180   	fcall	_floorf
 10397  033D  0020               	movlb	0	; select bank0
 10398  033E  085D               	movf	?_floorf+3,w
 10399  033F  0021               	movlb	1	; select bank1
 10400  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10401  0341  0020               	movlb	0	; select bank0
 10402  0342  085C               	movf	?_floorf+2,w
 10403  0343  0021               	movlb	1	; select bank1
 10404  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10405  0345  0020               	movlb	0	; select bank0
 10406  0346  085B               	movf	?_floorf+1,w
 10407  0347  0021               	movlb	1	; select bank1
 10408  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10409  0349  0020               	movlb	0	; select bank0
 10410  034A  085A               	movf	?_floorf,w
 10411  034B  0021               	movlb	1	; select bank1
 10412  034C  00D1               	movwf	efgtoa@l^(0+128)
 10413                           
 10414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10415  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
 10416  034E  0020               	movlb	0	; select bank0
 10417  034F  00DD               	movwf	___fltol@f1+3
 10418  0350  0021               	movlb	1	; select bank1
 10419  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
 10420  0352  0020               	movlb	0	; select bank0
 10421  0353  00DC               	movwf	___fltol@f1+2
 10422  0354  0021               	movlb	1	; select bank1
 10423  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
 10424  0356  0020               	movlb	0	; select bank0
 10425  0357  00DB               	movwf	___fltol@f1+1
 10426  0358  0021               	movlb	1	; select bank1
 10427  0359  0851               	movf	efgtoa@l^(0+128),w
 10428  035A  0020               	movlb	0	; select bank0
 10429  035B  00DA               	movwf	___fltol@f1
 10430  035C  31B6  26B9  3180   	fcall	___fltol
 10431  035F  0020               	movlb	0	; select bank0
 10432  0360  085B               	movf	?___fltol+1,w
 10433  0361  0021               	movlb	1	; select bank1
 10434  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10435  0363  0020               	movlb	0	; select bank0
 10436  0364  085A               	movf	?___fltol,w
 10437  0365  0021               	movlb	1	; select bank1
 10438  0366  00C3               	movwf	efgtoa@d^(0+128)
 10439                           
 10440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10441  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
 10442  0368  0020               	movlb	0	; select bank0
 10443  0369  00AD               	movwf	___flmul@a+3
 10444  036A  0021               	movlb	1	; select bank1
 10445  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
 10446  036C  0020               	movlb	0	; select bank0
 10447  036D  00AC               	movwf	___flmul@a+2
 10448  036E  0021               	movlb	1	; select bank1
 10449  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10450  0370  0020               	movlb	0	; select bank0
 10451  0371  00AB               	movwf	___flmul@a+1
 10452  0372  0021               	movlb	1	; select bank1
 10453  0373  0851               	movf	efgtoa@l^(0+128),w
 10454  0374  0020               	movlb	0	; select bank0
 10455  0375  00AA               	movwf	___flmul@a
 10456  0376  0021               	movlb	1	; select bank1
 10457  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
 10458  0378  0020               	movlb	0	; select bank0
 10459  0379  00A9               	movwf	___flmul@b+3
 10460  037A  0021               	movlb	1	; select bank1
 10461  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
 10462  037C  0020               	movlb	0	; select bank0
 10463  037D  00A8               	movwf	___flmul@b+2
 10464  037E  0021               	movlb	1	; select bank1
 10465  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
 10466  0380  0020               	movlb	0	; select bank0
 10467  0381  00A7               	movwf	___flmul@b+1
 10468  0382  0021               	movlb	1	; select bank1
 10469  0383  085F               	movf	efgtoa@u^(0+128),w
 10470  0384  0020               	movlb	0	; select bank0
 10471  0385  00A6               	movwf	___flmul@b
 10472  0386  3195  25D4  3180   	fcall	___flmul
 10473  0389  0020               	movlb	0	; select bank0
 10474  038A  0829               	movf	?___flmul+3,w
 10475  038B  00C3               	movwf	___flsub@a+3
 10476  038C  0828               	movf	?___flmul+2,w
 10477  038D  00C2               	movwf	___flsub@a+2
 10478  038E  0827               	movf	?___flmul+1,w
 10479  038F  00C1               	movwf	___flsub@a+1
 10480  0390  0826               	movf	?___flmul,w
 10481  0391  00C0               	movwf	___flsub@a
 10482  0392  0021               	movlb	1	; select bank1
 10483  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
 10484  0394  0020               	movlb	0	; select bank0
 10485  0395  00C7               	movwf	___flsub@b+3
 10486  0396  0021               	movlb	1	; select bank1
 10487  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
 10488  0398  0020               	movlb	0	; select bank0
 10489  0399  00C6               	movwf	___flsub@b+2
 10490  039A  0021               	movlb	1	; select bank1
 10491  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
 10492  039C  0020               	movlb	0	; select bank0
 10493  039D  00C5               	movwf	___flsub@b+1
 10494  039E  0021               	movlb	1	; select bank1
 10495  039F  084D               	movf	efgtoa@h^(0+128),w
 10496  03A0  0020               	movlb	0	; select bank0
 10497  03A1  00C4               	movwf	___flsub@b
 10498  03A2  31B2  2258  3180   	fcall	___flsub
 10499  03A5  0020               	movlb	0	; select bank0
 10500  03A6  0843               	movf	?___flsub+3,w
 10501  03A7  0021               	movlb	1	; select bank1
 10502  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10503  03A9  0020               	movlb	0	; select bank0
 10504  03AA  0842               	movf	?___flsub+2,w
 10505  03AB  0021               	movlb	1	; select bank1
 10506  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10507  03AD  0020               	movlb	0	; select bank0
 10508  03AE  0841               	movf	?___flsub+1,w
 10509  03AF  0021               	movlb	1	; select bank1
 10510  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10511  03B1  0020               	movlb	0	; select bank0
 10512  03B2  0840               	movf	?___flsub,w
 10513  03B3  0021               	movlb	1	; select bank1
 10514  03B4  00CD               	movwf	efgtoa@h^(0+128)
 10515                           
 10516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10517  03B5  3041               	movlw	65
 10518  03B6  0020               	movlb	0	; select bank0
 10519  03B7  00C3               	movwf	___fldiv@a+3
 10520  03B8  3020               	movlw	32
 10521  03B9  00C2               	movwf	___fldiv@a+2
 10522  03BA  3000               	movlw	0
 10523  03BB  00C1               	movwf	___fldiv@a+1
 10524  03BC  3000               	movlw	0
 10525  03BD  00C0               	movwf	___fldiv@a
 10526  03BE  0021               	movlb	1	; select bank1
 10527  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
 10528  03C0  0020               	movlb	0	; select bank0
 10529  03C1  00C7               	movwf	___fldiv@b+3
 10530  03C2  0021               	movlb	1	; select bank1
 10531  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
 10532  03C4  0020               	movlb	0	; select bank0
 10533  03C5  00C6               	movwf	___fldiv@b+2
 10534  03C6  0021               	movlb	1	; select bank1
 10535  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
 10536  03C8  0020               	movlb	0	; select bank0
 10537  03C9  00C5               	movwf	___fldiv@b+1
 10538  03CA  0021               	movlb	1	; select bank1
 10539  03CB  085F               	movf	efgtoa@u^(0+128),w
 10540  03CC  0020               	movlb	0	; select bank0
 10541  03CD  00C4               	movwf	___fldiv@b
 10542  03CE  3190  2052  3180   	fcall	___fldiv
 10543  03D1  0020               	movlb	0	; select bank0
 10544  03D2  0843               	movf	?___fldiv+3,w
 10545  03D3  0021               	movlb	1	; select bank1
 10546  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10547  03D5  0020               	movlb	0	; select bank0
 10548  03D6  0842               	movf	?___fldiv+2,w
 10549  03D7  0021               	movlb	1	; select bank1
 10550  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10551  03D9  0020               	movlb	0	; select bank0
 10552  03DA  0841               	movf	?___fldiv+1,w
 10553  03DB  0021               	movlb	1	; select bank1
 10554  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10555  03DD  0020               	movlb	0	; select bank0
 10556  03DE  0840               	movf	?___fldiv,w
 10557  03DF  0021               	movlb	1	; select bank1
 10558  03E0  00DF               	movwf	efgtoa@u^(0+128)
 10559                           
 10560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10561  03E1  3001               	movlw	1
 10562  03E2  07D5               	addwf	efgtoa@i^(0+128),f
 10563  03E3  3000               	movlw	0
 10564  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 10565  03E5  2B02               	goto	l7567
 10566  03E6                     l7569:	
 10567                           
 10568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10569  03E6  3040               	movlw	64
 10570  03E7  0020               	movlb	0	; select bank0
 10571  03E8  00A9               	movwf	___flmul@b+3
 10572  03E9  30A0               	movlw	160
 10573  03EA  00A8               	movwf	___flmul@b+2
 10574  03EB  3000               	movlw	0
 10575  03EC  00A7               	movwf	___flmul@b+1
 10576  03ED  3000               	movlw	0
 10577  03EE  00A6               	movwf	___flmul@b
 10578  03EF  0021               	movlb	1	; select bank1
 10579  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
 10580  03F1  0020               	movlb	0	; select bank0
 10581  03F2  00AD               	movwf	___flmul@a+3
 10582  03F3  0021               	movlb	1	; select bank1
 10583  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
 10584  03F5  0020               	movlb	0	; select bank0
 10585  03F6  00AC               	movwf	___flmul@a+2
 10586  03F7  0021               	movlb	1	; select bank1
 10587  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
 10588  03F9  0020               	movlb	0	; select bank0
 10589  03FA  00AB               	movwf	___flmul@a+1
 10590  03FB  0021               	movlb	1	; select bank1
 10591  03FC  085F               	movf	efgtoa@u^(0+128),w
 10592  03FD  0020               	movlb	0	; select bank0
 10593  03FE  00AA               	movwf	___flmul@a
 10594  03FF  3195  25D4  3180   	fcall	___flmul
 10595  0402  0020               	movlb	0	; select bank0
 10596  0403  0829               	movf	?___flmul+3,w
 10597  0404  0021               	movlb	1	; select bank1
 10598  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10599  0406  0020               	movlb	0	; select bank0
 10600  0407  0828               	movf	?___flmul+2,w
 10601  0408  0021               	movlb	1	; select bank1
 10602  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10603  040A  0020               	movlb	0	; select bank0
 10604  040B  0827               	movf	?___flmul+1,w
 10605  040C  0021               	movlb	1	; select bank1
 10606  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10607  040E  0020               	movlb	0	; select bank0
 10608  040F  0826               	movf	?___flmul,w
 10609  0410  0021               	movlb	1	; select bank1
 10610  0411  00D1               	movwf	efgtoa@l^(0+128)
 10611                           
 10612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10613  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
 10614  0413  0020               	movlb	0	; select bank0
 10615  0414  00DD               	movwf	___flge@ff1+3
 10616  0415  0021               	movlb	1	; select bank1
 10617  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
 10618  0417  0020               	movlb	0	; select bank0
 10619  0418  00DC               	movwf	___flge@ff1+2
 10620  0419  0021               	movlb	1	; select bank1
 10621  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
 10622  041B  0020               	movlb	0	; select bank0
 10623  041C  00DB               	movwf	___flge@ff1+1
 10624  041D  0021               	movlb	1	; select bank1
 10625  041E  084D               	movf	efgtoa@h^(0+128),w
 10626  041F  0020               	movlb	0	; select bank0
 10627  0420  00DA               	movwf	___flge@ff1
 10628  0421  0021               	movlb	1	; select bank1
 10629  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
 10630  0423  0020               	movlb	0	; select bank0
 10631  0424  00E1               	movwf	___flge@ff2+3
 10632  0425  0021               	movlb	1	; select bank1
 10633  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
 10634  0427  0020               	movlb	0	; select bank0
 10635  0428  00E0               	movwf	___flge@ff2+2
 10636  0429  0021               	movlb	1	; select bank1
 10637  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
 10638  042B  0020               	movlb	0	; select bank0
 10639  042C  00DF               	movwf	___flge@ff2+1
 10640  042D  0021               	movlb	1	; select bank1
 10641  042E  0851               	movf	efgtoa@l^(0+128),w
 10642  042F  0020               	movlb	0	; select bank0
 10643  0430  00DE               	movwf	___flge@ff2
 10644  0431  31A8  2030  3180   	fcall	___flge
 10645  0434  1803               	btfsc	3,0
 10646  0435  2C39               	goto	l7573
 10647                           
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10649  0436  3000               	movlw	0
 10650  0437  0021               	movlb	1	; select bank1
 10651  0438  2C53               	goto	L7
 10652  0439                     l7573:	
 10653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10654                           
 10655                           
 10656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10657  0439  0021               	movlb	1	; select bank1
 10658  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
 10659  043B  00F4               	movwf	___fleq@ff1+3
 10660  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
 10661  043D  00F3               	movwf	___fleq@ff1+2
 10662  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
 10663  043F  00F2               	movwf	___fleq@ff1+1
 10664  0440  084D               	movf	efgtoa@h^(0+128),w
 10665  0441  00F1               	movwf	___fleq@ff1
 10666  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
 10667  0443  00F8               	movwf	___fleq@ff2+3
 10668  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
 10669  0445  00F7               	movwf	___fleq@ff2+2
 10670  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
 10671  0447  00F6               	movwf	___fleq@ff2+1
 10672  0448  0851               	movf	efgtoa@l^(0+128),w
 10673  0449  00F5               	movwf	___fleq@ff2
 10674  044A  31B4  2484  3180   	fcall	___fleq
 10675  044D  1C03               	btfss	3,0
 10676  044E  2C5A               	goto	l7579
 10677  044F  0021               	movlb	1	; select bank1
 10678  0450  1843               	btfsc	efgtoa@d^(0+128),0
 10679  0451  2C5A               	goto	l7579
 10680                           
 10681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10682  0452  3000               	movlw	0
 10683  0453                     L7:	
 10684  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10685  0454  3000               	movlw	0
 10686  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10687  0456  3000               	movlw	0
 10688  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10689  0458  3000               	movlw	0
 10690  0459  00D1               	movwf	efgtoa@l^(0+128)
 10691  045A                     l7579:	
 10692                           
 10693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10694  045A  0021               	movlb	1	; select bank1
 10695  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
 10696  045C  00F4               	movwf	___fladd@b+3
 10697  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
 10698  045E  00F3               	movwf	___fladd@b+2
 10699  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
 10700  0460  00F2               	movwf	___fladd@b+1
 10701  0461  0851               	movf	efgtoa@l^(0+128),w
 10702  0462  00F1               	movwf	___fladd@b
 10703  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
 10704  0464  00F8               	movwf	___fladd@a+3
 10705  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
 10706  0466  00F7               	movwf	___fladd@a+2
 10707  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
 10708  0468  00F6               	movwf	___fladd@a+1
 10709  0469  0857               	movf	efgtoa@g^(0+128),w
 10710  046A  00F5               	movwf	___fladd@a
 10711  046B  319E  261E  3180   	fcall	___fladd
 10712  046E  0874               	movf	?___fladd+3,w
 10713  046F  0021               	movlb	1	; select bank1
 10714  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
 10715  0471  0873               	movf	?___fladd+2,w
 10716  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
 10717  0473  0872               	movf	?___fladd+1,w
 10718  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
 10719  0475  0871               	movf	?___fladd,w
 10720  0476  00CD               	movwf	efgtoa@h^(0+128)
 10721                           
 10722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10723  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
 10724  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
 10725  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
 10726  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
 10727  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
 10728  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
 10729  047D  082B               	movf	efgtoa@ou^(0+128),w
 10730  047E  00DF               	movwf	efgtoa@u^(0+128)
 10731                           
 10732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10733  047F  3065               	movlw	101
 10734  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
 10735  0481  1903               	btfsc	3,2
 10736  0482  2C88               	goto	l7587
 10737  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
 10738  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
 10739  0485  085B               	movf	efgtoa@e^(0+128),w
 10740  0486  00C1               	movwf	efgtoa@ne^(0+128)
 10741  0487  2C8A               	goto	l691
 10742  0488                     l7587:	
 10743  0488  01C1               	clrf	efgtoa@ne^(0+128)
 10744  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
 10745  048A                     l691:	
 10746                           
 10747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10748  048A  01BD               	clrf	efgtoa@pp^(0+128)
 10749  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
 10750                           
 10751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10752  048C  01BB               	clrf	efgtoa@t^(0+128)
 10753  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
 10754                           
 10755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10756  048E  01D5               	clrf	efgtoa@i^(0+128)
 10757  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
 10758                           
 10759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10760  0490  2DC5               	goto	l7637
 10761  0491                     l7589:	
 10762                           
 10763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10764  0491  0021               	movlb	1	; select bank1
 10765  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
 10766  0493  0020               	movlb	0	; select bank0
 10767  0494  00C3               	movwf	___fldiv@a+3
 10768  0495  0021               	movlb	1	; select bank1
 10769  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
 10770  0497  0020               	movlb	0	; select bank0
 10771  0498  00C2               	movwf	___fldiv@a+2
 10772  0499  0021               	movlb	1	; select bank1
 10773  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
 10774  049B  0020               	movlb	0	; select bank0
 10775  049C  00C1               	movwf	___fldiv@a+1
 10776  049D  0021               	movlb	1	; select bank1
 10777  049E  085F               	movf	efgtoa@u^(0+128),w
 10778  049F  0020               	movlb	0	; select bank0
 10779  04A0  00C0               	movwf	___fldiv@a
 10780  04A1  0021               	movlb	1	; select bank1
 10781  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
 10782  04A3  0020               	movlb	0	; select bank0
 10783  04A4  00C7               	movwf	___fldiv@b+3
 10784  04A5  0021               	movlb	1	; select bank1
 10785  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
 10786  04A7  0020               	movlb	0	; select bank0
 10787  04A8  00C6               	movwf	___fldiv@b+2
 10788  04A9  0021               	movlb	1	; select bank1
 10789  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
 10790  04AB  0020               	movlb	0	; select bank0
 10791  04AC  00C5               	movwf	___fldiv@b+1
 10792  04AD  0021               	movlb	1	; select bank1
 10793  04AE  084D               	movf	efgtoa@h^(0+128),w
 10794  04AF  0020               	movlb	0	; select bank0
 10795  04B0  00C4               	movwf	___fldiv@b
 10796  04B1  3190  2052  3180   	fcall	___fldiv
 10797  04B4  0020               	movlb	0	; select bank0
 10798  04B5  0843               	movf	?___fldiv+3,w
 10799  04B6  00DD               	movwf	floorf@x+3
 10800  04B7  0842               	movf	?___fldiv+2,w
 10801  04B8  00DC               	movwf	floorf@x+2
 10802  04B9  0841               	movf	?___fldiv+1,w
 10803  04BA  00DB               	movwf	floorf@x+1
 10804  04BB  0840               	movf	?___fldiv,w
 10805  04BC  00DA               	movwf	floorf@x
 10806  04BD  31A1  21C6  3180   	fcall	_floorf
 10807  04C0  0020               	movlb	0	; select bank0
 10808  04C1  085D               	movf	?_floorf+3,w
 10809  04C2  0021               	movlb	1	; select bank1
 10810  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
 10811  04C4  0020               	movlb	0	; select bank0
 10812  04C5  085C               	movf	?_floorf+2,w
 10813  04C6  0021               	movlb	1	; select bank1
 10814  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
 10815  04C8  0020               	movlb	0	; select bank0
 10816  04C9  085B               	movf	?_floorf+1,w
 10817  04CA  0021               	movlb	1	; select bank1
 10818  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
 10819  04CC  0020               	movlb	0	; select bank0
 10820  04CD  085A               	movf	?_floorf,w
 10821  04CE  0021               	movlb	1	; select bank1
 10822  04CF  00D1               	movwf	efgtoa@l^(0+128)
 10823                           
 10824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10825  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
 10826  04D1  0020               	movlb	0	; select bank0
 10827  04D2  00DD               	movwf	___fltol@f1+3
 10828  04D3  0021               	movlb	1	; select bank1
 10829  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
 10830  04D5  0020               	movlb	0	; select bank0
 10831  04D6  00DC               	movwf	___fltol@f1+2
 10832  04D7  0021               	movlb	1	; select bank1
 10833  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
 10834  04D9  0020               	movlb	0	; select bank0
 10835  04DA  00DB               	movwf	___fltol@f1+1
 10836  04DB  0021               	movlb	1	; select bank1
 10837  04DC  0851               	movf	efgtoa@l^(0+128),w
 10838  04DD  0020               	movlb	0	; select bank0
 10839  04DE  00DA               	movwf	___fltol@f1
 10840  04DF  31B6  26B9  3180   	fcall	___fltol
 10841  04E2  0020               	movlb	0	; select bank0
 10842  04E3  085B               	movf	?___fltol+1,w
 10843  04E4  0021               	movlb	1	; select bank1
 10844  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
 10845  04E6  0020               	movlb	0	; select bank0
 10846  04E7  085A               	movf	?___fltol,w
 10847  04E8  0021               	movlb	1	; select bank1
 10848  04E9  00C3               	movwf	efgtoa@d^(0+128)
 10849                           
 10850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10851  04EA  0023               	movlb	3	; select bank3
 10852  04EB  1A42               	btfsc	_flags^(0+384),4
 10853  04EC  2CFC               	goto	l7601
 10854  04ED  0021               	movlb	1	; select bank1
 10855  04EE  0843               	movf	efgtoa@d^(0+128),w
 10856  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
 10857  04F0  1D03               	btfss	3,2
 10858  04F1  2CFC               	goto	l7601
 10859  04F2  3067               	movlw	103
 10860  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
 10861  04F4  1903               	btfsc	3,2
 10862  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10863  04F6  2CFC               	goto	l7601
 10864                           
 10865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10866  04F7  3001               	movlw	1
 10867  04F8  07BB               	addwf	efgtoa@t^(0+128),f
 10868  04F9  3000               	movlw	0
 10869  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10870                           
 10871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10872  04FB  2D43               	goto	l7629
 10873  04FC                     l7601:	
 10874                           
 10875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10876  04FC  0021               	movlb	1	; select bank1
 10877  04FD  083D               	movf	efgtoa@pp^(0+128),w
 10878  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 10879  04FF  1903               	btfsc	3,2
 10880  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
 10881  0501  2D17               	goto	l7621
 10882                           
 10883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10884  0502  302E               	movlw	46
 10885  0503  00A7               	movwf	??_efgtoa^(0+128)
 10886  0504  085D               	movf	efgtoa@n^(0+128),w
 10887  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10888  0506  0086               	movwf	6
 10889  0507  3002               	movlw	2	; select bank4/5
 10890  0508  0087               	movwf	7
 10891  0509  0827               	movf	??_efgtoa^(0+128),w
 10892  050A  0081               	movwf	1
 10893  050B  3001               	movlw	1
 10894  050C  07DD               	addwf	efgtoa@n^(0+128),f
 10895  050D  3000               	movlw	0
 10896  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10897                           
 10898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10899  050F  30FF               	movlw	255
 10900  0510  07CA               	addwf	efgtoa@w^(0+128),f
 10901  0511  30FF               	movlw	255
 10902  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10903                           
 10904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10905  0513  3001               	movlw	1
 10906  0514  00BD               	movwf	efgtoa@pp^(0+128)
 10907  0515  3000               	movlw	0
 10908  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
 10909  0517                     l7621:	
 10910                           
 10911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10912  0517  083B               	movf	efgtoa@t^(0+128),w
 10913  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
 10914  0519  1903               	btfsc	3,2
 10915  051A  2D31               	goto	l7623
 10916                           
 10917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10918  051B  3030               	movlw	48
 10919  051C  00A7               	movwf	??_efgtoa^(0+128)
 10920  051D  085D               	movf	efgtoa@n^(0+128),w
 10921  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10922  051F  0086               	movwf	6
 10923  0520  3002               	movlw	2	; select bank4/5
 10924  0521  0087               	movwf	7
 10925  0522  0827               	movf	??_efgtoa^(0+128),w
 10926  0523  0081               	movwf	1
 10927  0524  3001               	movlw	1
 10928  0525  07DD               	addwf	efgtoa@n^(0+128),f
 10929  0526  3000               	movlw	0
 10930  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10931                           
 10932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10933  0528  30FF               	movlw	255
 10934  0529  07CA               	addwf	efgtoa@w^(0+128),f
 10935  052A  30FF               	movlw	255
 10936  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10937                           
 10938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10939  052C  30FF               	movlw	255
 10940  052D  07BB               	addwf	efgtoa@t^(0+128),f
 10941  052E  30FF               	movlw	255
 10942  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
 10943  0530  2D17               	goto	l7621
 10944  0531                     l7623:	
 10945                           
 10946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10947  0531  0843               	movf	efgtoa@d^(0+128),w
 10948  0532  3E30               	addlw	48
 10949  0533  00A7               	movwf	??_efgtoa^(0+128)
 10950  0534  085D               	movf	efgtoa@n^(0+128),w
 10951  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10952  0536  0086               	movwf	6
 10953  0537  3002               	movlw	2	; select bank4/5
 10954  0538  0087               	movwf	7
 10955  0539  0827               	movf	??_efgtoa^(0+128),w
 10956  053A  0081               	movwf	1
 10957  053B  3001               	movlw	1
 10958  053C  07DD               	addwf	efgtoa@n^(0+128),f
 10959  053D  3000               	movlw	0
 10960  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 10961                           
 10962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10963  053F  30FF               	movlw	255
 10964  0540  07CA               	addwf	efgtoa@w^(0+128),f
 10965  0541  30FF               	movlw	255
 10966  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 10967  0543                     l7629:	
 10968                           
 10969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10970  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
 10971  0544  0020               	movlb	0	; select bank0
 10972  0545  00AD               	movwf	___flmul@a+3
 10973  0546  0021               	movlb	1	; select bank1
 10974  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
 10975  0548  0020               	movlb	0	; select bank0
 10976  0549  00AC               	movwf	___flmul@a+2
 10977  054A  0021               	movlb	1	; select bank1
 10978  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
 10979  054C  0020               	movlb	0	; select bank0
 10980  054D  00AB               	movwf	___flmul@a+1
 10981  054E  0021               	movlb	1	; select bank1
 10982  054F  0851               	movf	efgtoa@l^(0+128),w
 10983  0550  0020               	movlb	0	; select bank0
 10984  0551  00AA               	movwf	___flmul@a
 10985  0552  0021               	movlb	1	; select bank1
 10986  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
 10987  0554  0020               	movlb	0	; select bank0
 10988  0555  00A9               	movwf	___flmul@b+3
 10989  0556  0021               	movlb	1	; select bank1
 10990  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
 10991  0558  0020               	movlb	0	; select bank0
 10992  0559  00A8               	movwf	___flmul@b+2
 10993  055A  0021               	movlb	1	; select bank1
 10994  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
 10995  055C  0020               	movlb	0	; select bank0
 10996  055D  00A7               	movwf	___flmul@b+1
 10997  055E  0021               	movlb	1	; select bank1
 10998  055F  085F               	movf	efgtoa@u^(0+128),w
 10999  0560  0020               	movlb	0	; select bank0
 11000  0561  00A6               	movwf	___flmul@b
 11001  0562  3195  25D4  3180   	fcall	___flmul
 11002  0565  0020               	movlb	0	; select bank0
 11003  0566  0829               	movf	?___flmul+3,w
 11004  0567  00C3               	movwf	___flsub@a+3
 11005  0568  0828               	movf	?___flmul+2,w
 11006  0569  00C2               	movwf	___flsub@a+2
 11007  056A  0827               	movf	?___flmul+1,w
 11008  056B  00C1               	movwf	___flsub@a+1
 11009  056C  0826               	movf	?___flmul,w
 11010  056D  00C0               	movwf	___flsub@a
 11011  056E  0021               	movlb	1	; select bank1
 11012  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
 11013  0570  0020               	movlb	0	; select bank0
 11014  0571  00C7               	movwf	___flsub@b+3
 11015  0572  0021               	movlb	1	; select bank1
 11016  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
 11017  0574  0020               	movlb	0	; select bank0
 11018  0575  00C6               	movwf	___flsub@b+2
 11019  0576  0021               	movlb	1	; select bank1
 11020  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
 11021  0578  0020               	movlb	0	; select bank0
 11022  0579  00C5               	movwf	___flsub@b+1
 11023  057A  0021               	movlb	1	; select bank1
 11024  057B  084D               	movf	efgtoa@h^(0+128),w
 11025  057C  0020               	movlb	0	; select bank0
 11026  057D  00C4               	movwf	___flsub@b
 11027  057E  31B2  2258  3180   	fcall	___flsub
 11028  0581  0020               	movlb	0	; select bank0
 11029  0582  0843               	movf	?___flsub+3,w
 11030  0583  0021               	movlb	1	; select bank1
 11031  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
 11032  0585  0020               	movlb	0	; select bank0
 11033  0586  0842               	movf	?___flsub+2,w
 11034  0587  0021               	movlb	1	; select bank1
 11035  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
 11036  0589  0020               	movlb	0	; select bank0
 11037  058A  0841               	movf	?___flsub+1,w
 11038  058B  0021               	movlb	1	; select bank1
 11039  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
 11040  058D  0020               	movlb	0	; select bank0
 11041  058E  0840               	movf	?___flsub,w
 11042  058F  0021               	movlb	1	; select bank1
 11043  0590  00CD               	movwf	efgtoa@h^(0+128)
 11044                           
 11045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 11046  0591  3041               	movlw	65
 11047  0592  0020               	movlb	0	; select bank0
 11048  0593  00C3               	movwf	___fldiv@a+3
 11049  0594  3020               	movlw	32
 11050  0595  00C2               	movwf	___fldiv@a+2
 11051  0596  3000               	movlw	0
 11052  0597  00C1               	movwf	___fldiv@a+1
 11053  0598  3000               	movlw	0
 11054  0599  00C0               	movwf	___fldiv@a
 11055  059A  0021               	movlb	1	; select bank1
 11056  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
 11057  059C  0020               	movlb	0	; select bank0
 11058  059D  00C7               	movwf	___fldiv@b+3
 11059  059E  0021               	movlb	1	; select bank1
 11060  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
 11061  05A0  0020               	movlb	0	; select bank0
 11062  05A1  00C6               	movwf	___fldiv@b+2
 11063  05A2  0021               	movlb	1	; select bank1
 11064  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
 11065  05A4  0020               	movlb	0	; select bank0
 11066  05A5  00C5               	movwf	___fldiv@b+1
 11067  05A6  0021               	movlb	1	; select bank1
 11068  05A7  085F               	movf	efgtoa@u^(0+128),w
 11069  05A8  0020               	movlb	0	; select bank0
 11070  05A9  00C4               	movwf	___fldiv@b
 11071  05AA  3190  2052  3180   	fcall	___fldiv
 11072  05AD  0020               	movlb	0	; select bank0
 11073  05AE  0843               	movf	?___fldiv+3,w
 11074  05AF  0021               	movlb	1	; select bank1
 11075  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
 11076  05B1  0020               	movlb	0	; select bank0
 11077  05B2  0842               	movf	?___fldiv+2,w
 11078  05B3  0021               	movlb	1	; select bank1
 11079  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
 11080  05B5  0020               	movlb	0	; select bank0
 11081  05B6  0841               	movf	?___fldiv+1,w
 11082  05B7  0021               	movlb	1	; select bank1
 11083  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
 11084  05B9  0020               	movlb	0	; select bank0
 11085  05BA  0840               	movf	?___fldiv,w
 11086  05BB  0021               	movlb	1	; select bank1
 11087  05BC  00DF               	movwf	efgtoa@u^(0+128)
 11088                           
 11089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 11090  05BD  30FF               	movlw	255
 11091  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
 11092  05BF  30FF               	movlw	255
 11093  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
 11094                           
 11095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 11096  05C1  3001               	movlw	1
 11097  05C2  07D5               	addwf	efgtoa@i^(0+128),f
 11098  05C3  3000               	movlw	0
 11099  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 11100  05C5                     l7637:	
 11101                           
 11102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11103  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
 11104  05C6  3A80               	xorlw	128
 11105  05C7  00A7               	movwf	??_efgtoa^(0+128)
 11106  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
 11107  05C9  3A80               	xorlw	128
 11108  05CA  0227               	subwf	??_efgtoa^(0+128),w
 11109  05CB  1D03               	skipz
 11110  05CC  2DCF               	goto	u10805
 11111  05CD  083F               	movf	efgtoa@m^(0+128),w
 11112  05CE  0255               	subwf	efgtoa@i^(0+128),w
 11113  05CF                     u10805:	
 11114  05CF  1803               	skipnc
 11115  05D0  2DDD               	goto	l7641
 11116  05D1  0021               	movlb	1	; select bank1
 11117  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
 11118  05D3  3A80               	xorlw	128
 11119  05D4  00A7               	movwf	??_efgtoa^(0+128)
 11120  05D5  3080               	movlw	128
 11121  05D6  0227               	subwf	??_efgtoa^(0+128),w
 11122  05D7  1D03               	skipz
 11123  05D8  2DDB               	goto	u10815
 11124  05D9  304B               	movlw	75
 11125  05DA  025D               	subwf	efgtoa@n^(0+128),w
 11126  05DB                     u10815:	
 11127  05DB  1C03               	skipc
 11128  05DC  2C91               	goto	l7589
 11129  05DD                     l7641:	
 11130                           
 11131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 11132  05DD  0021               	movlb	1	; select bank1
 11133  05DE  083D               	movf	efgtoa@pp^(0+128),w
 11134  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
 11135  05E0  1D03               	btfss	3,2
 11136  05E1  2DF3               	goto	l7649
 11137  05E2  0023               	movlb	3	; select bank3
 11138  05E3  1E42               	btfss	_flags^(0+384),4
 11139  05E4  2DF3               	goto	l7649
 11140                           
 11141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 11142  05E5  302E               	movlw	46
 11143  05E6  0021               	movlb	1	; select bank1
 11144  05E7  00A7               	movwf	??_efgtoa^(0+128)
 11145  05E8  085D               	movf	efgtoa@n^(0+128),w
 11146  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11147  05EA  0086               	movwf	6
 11148  05EB  3002               	movlw	2	; select bank4/5
 11149  05EC  0087               	movwf	7
 11150  05ED  0827               	movf	??_efgtoa^(0+128),w
 11151  05EE  0081               	movwf	1
 11152  05EF  3001               	movlw	1
 11153  05F0  07DD               	addwf	efgtoa@n^(0+128),f
 11154  05F1  3000               	movlw	0
 11155  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
 11156  05F3                     l7649:	
 11157                           
 11158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 11159  05F3  0021               	movlb	1	; select bank1
 11160  05F4  085D               	movf	efgtoa@n^(0+128),w
 11161  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11162  05F6  0086               	movwf	6
 11163  05F7  3002               	movlw	2	; select bank4/5
 11164  05F8  0087               	movwf	7
 11165  05F9  0181               	clrf	1
 11166                           
 11167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 11168  05FA  3065               	movlw	101
 11169  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
 11170  05FC  1D03               	btfss	3,2
 11171  05FD  2EB4               	goto	l7711
 11172                           
 11173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 11174  05FE  304F               	movlw	79
 11175  05FF  00D5               	movwf	efgtoa@i^(0+128)
 11176  0600  3000               	movlw	0
 11177  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
 11178                           
 11179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 11180  0602  0855               	movf	efgtoa@i^(0+128),w
 11181  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11182  0604  0086               	movwf	6
 11183  0605  3002               	movlw	2	; select bank4/5
 11184  0606  0087               	movwf	7
 11185  0607  0181               	clrf	1
 11186                           
 11187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 11188  0608  01C5               	clrf	efgtoa@sign^(0+128)
 11189  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
 11190                           
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 11192  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
 11193  060B  2E15               	goto	l7665
 11194                           
 11195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 11196  060C  3001               	movlw	1
 11197  060D  00C5               	movwf	efgtoa@sign^(0+128)
 11198  060E  3000               	movlw	0
 11199  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
 11200                           
 11201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 11202  0610  09DB               	comf	efgtoa@e^(0+128),f
 11203  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
 11204  0612  0ADB               	incf	efgtoa@e^(0+128),f
 11205  0613  1903               	skipnz
 11206  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
 11207  0615                     l7665:	
 11208                           
 11209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 11210  0615  3002               	movlw	2
 11211  0616  00C7               	movwf	efgtoa@p^(0+128)
 11212  0617  3000               	movlw	0
 11213  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
 11214  0619                     l7677:	
 11215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11216                           
 11217                           
 11218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11219  0619  085B               	movf	efgtoa@e^(0+128),w
 11220  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
 11221  061B  1903               	btfsc	3,2
 11222  061C  2E51               	goto	l7679
 11223  061D                     l7667:	
 11224                           
 11225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 11226  061D  30FF               	movlw	255
 11227  061E  0021               	movlb	1	; select bank1
 11228  061F  07D5               	addwf	efgtoa@i^(0+128),f
 11229  0620  30FF               	movlw	255
 11230  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 11231                           
 11232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 11233  0622  300A               	movlw	10
 11234  0623  00F1               	movwf	___awmod@divisor
 11235  0624  3000               	movlw	0
 11236  0625  00F2               	movwf	___awmod@divisor+1
 11237  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
 11238  0627  00F4               	movwf	___awmod@dividend+1
 11239  0628  085B               	movf	efgtoa@e^(0+128),w
 11240  0629  00F3               	movwf	___awmod@dividend
 11241  062A  31B4  243F  3180   	fcall	___awmod
 11242  062D  0871               	movf	?___awmod,w
 11243  062E  3E30               	addlw	48
 11244  062F  0021               	movlb	1	; select bank1
 11245  0630  00A7               	movwf	??_efgtoa^(0+128)
 11246  0631  0855               	movf	efgtoa@i^(0+128),w
 11247  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11248  0633  0086               	movwf	6
 11249  0634  3002               	movlw	2	; select bank4/5
 11250  0635  0087               	movwf	7
 11251  0636  0827               	movf	??_efgtoa^(0+128),w
 11252  0637  0081               	movwf	1
 11253                           
 11254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 11255  0638  300A               	movlw	10
 11256  0639  00F1               	movwf	___awdiv@divisor
 11257  063A  3000               	movlw	0
 11258  063B  00F2               	movwf	___awdiv@divisor+1
 11259  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
 11260  063D  00F4               	movwf	___awdiv@dividend+1
 11261  063E  085B               	movf	efgtoa@e^(0+128),w
 11262  063F  00F3               	movwf	___awdiv@dividend
 11263  0640  31B5  25BE  3180   	fcall	___awdiv
 11264  0643  0872               	movf	?___awdiv+1,w
 11265  0644  0021               	movlb	1	; select bank1
 11266  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
 11267  0646  0871               	movf	?___awdiv,w
 11268  0647  00DB               	movwf	efgtoa@e^(0+128)
 11269                           
 11270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 11271  0648  30FF               	movlw	255
 11272  0649  07C7               	addwf	efgtoa@p^(0+128),f
 11273  064A  30FF               	movlw	255
 11274  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
 11275                           
 11276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 11277  064C  30FF               	movlw	255
 11278  064D  07CA               	addwf	efgtoa@w^(0+128),f
 11279  064E  30FF               	movlw	255
 11280  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 11281  0650  2E19               	goto	l7677
 11282  0651                     l7679:	
 11283  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
 11284  0652  3A80               	xorlw	128
 11285  0653  00A7               	movwf	??_efgtoa^(0+128)
 11286  0654  3080               	movlw	128
 11287  0655  0227               	subwf	??_efgtoa^(0+128),w
 11288  0656  1D03               	skipz
 11289  0657  2E5A               	goto	u10875
 11290  0658  3001               	movlw	1
 11291  0659  0247               	subwf	efgtoa@p^(0+128),w
 11292  065A                     u10875:	
 11293  065A  1803               	skipnc
 11294  065B  2E1D               	goto	l7667
 11295                           
 11296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 11297  065C  30FF               	movlw	255
 11298  065D  0021               	movlb	1	; select bank1
 11299  065E  07D5               	addwf	efgtoa@i^(0+128),f
 11300  065F  30FF               	movlw	255
 11301  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 11302                           
 11303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 11304  0661  0845               	movf	efgtoa@sign^(0+128),w
 11305  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
 11306  0663  1D03               	btfss	3,2
 11307  0664  2E67               	goto	l7687
 11308  0665  302B               	movlw	43
 11309  0666  2E68               	goto	L8
 11310  0667                     l7687:	
 11311  0667  302D               	movlw	45
 11312  0668                     L8:	
 11313  0668  00B5               	movwf	_efgtoa$1202^(0+128)
 11314  0669  3000               	movlw	0
 11315  066A  00B6               	movwf	(_efgtoa$1202^(0+128)+1)
 11316  066B  0835               	movf	_efgtoa$1202^(0+128),w
 11317  066C  00A7               	movwf	??_efgtoa^(0+128)
 11318  066D  0855               	movf	efgtoa@i^(0+128),w
 11319  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11320  066F  0086               	movwf	6
 11321  0670  3002               	movlw	2	; select bank4/5
 11322  0671  0087               	movwf	7
 11323  0672  0827               	movf	??_efgtoa^(0+128),w
 11324  0673  0081               	movwf	1
 11325                           
 11326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 11327  0674  30FF               	movlw	255
 11328  0675  07CA               	addwf	efgtoa@w^(0+128),f
 11329  0676  30FF               	movlw	255
 11330  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 11331                           
 11332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11333  0678  30FF               	movlw	255
 11334  0679  07D5               	addwf	efgtoa@i^(0+128),f
 11335  067A  30FF               	movlw	255
 11336  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
 11337  067C  0826               	movf	efgtoa@c^(0+128),w
 11338  067D  3EBF               	addlw	191
 11339  067E  00A7               	movwf	??_efgtoa^(0+128)
 11340  067F  30FF               	movlw	255
 11341  0680  1803               	skipnc
 11342  0681  3000               	movlw	0
 11343  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
 11344  0683  3000               	movlw	0
 11345  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
 11346  0685  301A               	movlw	26
 11347  0686  1903               	skipnz
 11348  0687  0227               	subwf	??_efgtoa^(0+128),w
 11349  0688  1803               	btfsc	3,0
 11350  0689  2E8C               	goto	u10890
 11351  068A  3001               	movlw	1
 11352  068B  2E8D               	goto	u10900
 11353  068C                     u10890:	
 11354  068C  3000               	movlw	0
 11355  068D                     u10900:	
 11356  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
 11357  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
 11358  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
 11359  0690  00B9               	movwf	_efgtoa$1204^(0+128)
 11360  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
 11361  0692  00BA               	movwf	(_efgtoa$1204+1)^(0+128)
 11362  0693  0839               	movf	_efgtoa$1204^(0+128),w
 11363  0694  043A               	iorwf	(_efgtoa$1204+1)^(0+128),w
 11364  0695  1D03               	btfss	3,2
 11365  0696  2E99               	goto	l7703
 11366  0697  3065               	movlw	101
 11367  0698  2E9A               	goto	L9
 11368  0699                     l7703:	
 11369  0699  3045               	movlw	69
 11370  069A                     L9:	
 11371  069A  00B7               	movwf	_efgtoa$1203^(0+128)
 11372  069B  3000               	movlw	0
 11373  069C  00B8               	movwf	(_efgtoa$1203^(0+128)+1)
 11374  069D  0837               	movf	_efgtoa$1203^(0+128),w
 11375  069E  00A7               	movwf	??_efgtoa^(0+128)
 11376  069F  0855               	movf	efgtoa@i^(0+128),w
 11377  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11378  06A1  0086               	movwf	6
 11379  06A2  3002               	movlw	2	; select bank4/5
 11380  06A3  0087               	movwf	7
 11381  06A4  0827               	movf	??_efgtoa^(0+128),w
 11382  06A5  0081               	movwf	1
 11383                           
 11384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11385  06A6  30FF               	movlw	255
 11386  06A7  07CA               	addwf	efgtoa@w^(0+128),f
 11387  06A8  30FF               	movlw	255
 11388  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
 11389                           
 11390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11391  06AA  0855               	movf	efgtoa@i^(0+128),w
 11392  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11393  06AC  00F1               	movwf	strcpy@src
 11394  06AD  3002               	movlw	2
 11395  06AE  00F2               	movwf	strcpy@src+1
 11396  06AF  085D               	movf	efgtoa@n^(0+128),w
 11397  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11398  06B1  31B2  2277  3180   	fcall	_strcpy
 11399  06B4                     l7711:	
 11400                           
 11401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 11402  06B4  0021               	movlb	1	; select bank1
 11403  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
 11404  06B6  0020               	movlb	0	; select bank0
 11405  06B7  00A7               	movwf	pad@fp+1
 11406  06B8  0021               	movlb	1	; select bank1
 11407  06B9  0820               	movf	efgtoa@fp^(0+128),w
 11408  06BA  0020               	movlb	0	; select bank0
 11409  06BB  00A6               	movwf	pad@fp
 11410  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 11411  06BD  0021               	movlb	1	; select bank1
 11412  06BE  00A7               	movwf	??_efgtoa^(0+128)
 11413  06BF  0827               	movf	??_efgtoa^(0+128),w
 11414  06C0  0020               	movlb	0	; select bank0
 11415  06C1  00A8               	movwf	pad@buf
 11416  06C2  0021               	movlb	1	; select bank1
 11417  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
 11418  06C4  0020               	movlb	0	; select bank0
 11419  06C5  00AA               	movwf	pad@p+1
 11420  06C6  0021               	movlb	1	; select bank1
 11421  06C7  084A               	movf	efgtoa@w^(0+128),w
 11422  06C8  0020               	movlb	0	; select bank0
 11423  06C9  00A9               	movwf	pad@p
 11424  06CA  31B5  256D         	fcall	_pad
 11425  06CC  0020               	movlb	0	; select bank0
 11426  06CD  0827               	movf	?_pad+1,w
 11427  06CE  0021               	movlb	1	; select bank1
 11428  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
 11429  06D0  0020               	movlb	0	; select bank0
 11430  06D1  0826               	movf	?_pad,w
 11431  06D2  0021               	movlb	1	; select bank1
 11432  06D3  00A0               	movwf	?_efgtoa^(0+128)
 11433  06D4  0008               	return
 11434  06D5                     __end_of_efgtoa:	
 11435                           
 11436                           	psect	text19
 11437  32D9                     __ptext19:	
 11438 ;; *************** function _tolower *****************
 11439 ;; Defined at:
 11440 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  c               2    7[COMMON] int 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;		None
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  2    7[COMMON] int 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11456 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11457 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11458 ;;Total ram usage:        8 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:    2
 11461 ;; This function calls:
 11462 ;;		_isupper
 11463 ;; This function is called by:
 11464 ;;		_efgtoa
 11465 ;;		_vfpfcnvrt
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           
 11470                           ;psect for function _tolower
 11471  32D9                     _tolower:	
 11472                           
 11473                           ;incstack = 0
 11474                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11475  32D9  0877               	movf	tolower@c,w
 11476  32DA  3EBF               	addlw	191
 11477  32DB  0020               	movlb	0	; select bank0
 11478  32DC  00A0               	movwf	??_tolower
 11479  32DD  30FF               	movlw	255
 11480  32DE  3D78               	addwfc	tolower@c+1,w
 11481  32DF  00A1               	movwf	??_tolower+1
 11482  32E0  3000               	movlw	0
 11483  32E1  0221               	subwf	??_tolower+1,w
 11484  32E2  301A               	movlw	26
 11485  32E3  1903               	skipnz
 11486  32E4  0220               	subwf	??_tolower,w
 11487  32E5  1803               	btfsc	3,0
 11488  32E6  2AE9               	goto	u10140
 11489  32E7  3001               	movlw	1
 11490  32E8  2AEA               	goto	u10150
 11491  32E9                     u10140:	
 11492  32E9  3000               	movlw	0
 11493  32EA                     u10150:	
 11494  32EA  00A2               	movwf	??_tolower+2
 11495  32EB  01A3               	clrf	??_tolower+3
 11496  32EC  0822               	movf	??_tolower+2,w
 11497  32ED  00F9               	movwf	_tolower$1832
 11498  32EE  0823               	movf	??_tolower+3,w
 11499  32EF  00FA               	movwf	_tolower$1832+1
 11500  32F0  0879               	movf	_tolower$1832,w
 11501  32F1  047A               	iorwf	_tolower$1832+1,w
 11502  32F2  1903               	btfsc	3,2
 11503  32F3  0008               	return
 11504  32F4  3020               	movlw	32
 11505  32F5  0477               	iorwf	tolower@c,w
 11506  32F6  00F7               	movwf	?_tolower
 11507  32F7  3000               	movlw	0
 11508  32F8  0478               	iorwf	tolower@c+1,w
 11509  32F9  00F8               	movwf	?_tolower+1
 11510  32FA  0008               	return
 11511  32FB                     __end_of_tolower:	
 11512                           
 11513                           	psect	text20
 11514  316B                     __ptext20:	
 11515 ;; *************** function _isupper *****************
 11516 ;; Defined at:
 11517 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  c               2    1[COMMON] int 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;		None
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  2    1[COMMON] int 
 11524 ;; Registers used:
 11525 ;;		wreg, status,2, status,0
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11535 ;;Total ram usage:        6 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    1
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		_efgtoa
 11542 ;;		_xtoa
 11543 ;;		_vfpfcnvrt
 11544 ;;		_tolower
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           
 11549                           ;psect for function _isupper
 11550  316B                     _isupper:	
 11551                           
 11552                           ;incstack = 0
 11553                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11554  316B  0871               	movf	isupper@c,w
 11555  316C  3EBF               	addlw	191
 11556  316D  00F3               	movwf	??_isupper
 11557  316E  30FF               	movlw	255
 11558  316F  3D72               	addwfc	isupper@c+1,w
 11559  3170  00F4               	movwf	??_isupper+1
 11560  3171  3000               	movlw	0
 11561  3172  0274               	subwf	??_isupper+1,w
 11562  3173  301A               	movlw	26
 11563  3174  1903               	skipnz
 11564  3175  0273               	subwf	??_isupper,w
 11565  3176  1803               	btfsc	3,0
 11566  3177  297A               	goto	u9630
 11567  3178  3001               	movlw	1
 11568  3179  297B               	goto	u9640
 11569  317A                     u9630:	
 11570  317A  3000               	movlw	0
 11571  317B                     u9640:	
 11572  317B  00F5               	movwf	??_isupper+2
 11573  317C  01F6               	clrf	??_isupper+3
 11574  317D  0875               	movf	??_isupper+2,w
 11575  317E  00F1               	movwf	?_isupper
 11576  317F  0876               	movf	??_isupper+3,w
 11577  3180  00F2               	movwf	?_isupper+1
 11578  3181  0008               	return
 11579  3182                     __end_of_isupper:	
 11580                           
 11581                           	psect	text21
 11582  3277                     __ptext21:	
 11583 ;; *************** function _strcpy *****************
 11584 ;; Defined at:
 11585 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  dest            1    wreg     PTR unsigned char 
 11588 ;;		 -> dbuf(80), 
 11589 ;;  src             2    1[COMMON] PTR const unsigned char 
 11590 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11591 ;;		 -> dbuf(80), 
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  dest            1    8[COMMON] PTR unsigned char 
 11594 ;;		 -> dbuf(80), 
 11595 ;;  s               2    5[COMMON] PTR const unsigned char 
 11596 ;;		 -> STR_31(4), STR_30(4), STR_27(4), STR_26(4), 
 11597 ;;		 -> dbuf(80), 
 11598 ;;  d               1    7[COMMON] PTR unsigned char 
 11599 ;;		 -> dbuf(80), 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      PTR unsigned char 
 11602 ;; Registers used:
 11603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11610 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11612 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11613 ;;Total ram usage:        8 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    1
 11616 ;; This function calls:
 11617 ;;		Nothing
 11618 ;; This function is called by:
 11619 ;;		_efgtoa
 11620 ;; This function uses a non-reentrant model
 11621 ;;
 11622                           
 11623                           
 11624                           ;psect for function _strcpy
 11625  3277                     _strcpy:	
 11626                           
 11627                           ;incstack = 0
 11628                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11629                           ;strcpy@dest stored from wreg
 11630  3277  00F8               	movwf	strcpy@dest
 11631  3278  0872               	movf	strcpy@src+1,w
 11632  3279  00F6               	movwf	strcpy@s+1
 11633  327A  0871               	movf	strcpy@src,w
 11634  327B  00F5               	movwf	strcpy@s
 11635  327C  0878               	movf	strcpy@dest,w
 11636  327D  00F3               	movwf	??_strcpy
 11637  327E  0873               	movf	??_strcpy,w
 11638  327F  00F7               	movwf	strcpy@d
 11639  3280                     l4661:	
 11640  3280  0877               	movf	strcpy@d,w
 11641  3281  0086               	movwf	6
 11642  3282  3002               	movlw	2	; select bank4/5
 11643  3283  0087               	movwf	7
 11644  3284  0AF7               	incf	strcpy@d,f
 11645  3285  0876               	movf	strcpy@s+1,w
 11646  3286  00F4               	movwf	??_strcpy+1
 11647  3287  0875               	movf	strcpy@s,w
 11648  3288  00F3               	movwf	??_strcpy
 11649  3289  0AF5               	incf	strcpy@s,f
 11650  328A  1903               	skipnz
 11651  328B  0AF6               	incf	strcpy@s+1,f
 11652  328C  0873               	movf	??_strcpy,w
 11653  328D  0084               	movwf	4
 11654  328E  0874               	movf	??_strcpy+1,w
 11655  328F  0085               	movwf	5
 11656  3290  0800               	movf	0,w	;code access
 11657  3291  3FC0               	movwi [0]fsr1
 11658  3292  0889               	movf	9,f
 11659  3293  1903               	btfsc	3,2
 11660  3294  0008               	return
 11661  3295  2A80               	goto	l4661
 11662  3296                     __end_of_strcpy:	
 11663                           
 11664                           	psect	text22
 11665  21C6                     __ptext22:	
 11666 ;; *************** function _floorf *****************
 11667 ;; Defined at:
 11668 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  x               4   58[BANK0 ] float 
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  u               4   74[BANK0 ] struct .
 11673 ;;  m               4   68[BANK0 ] unsigned long 
 11674 ;;  e               2   72[BANK0 ] int 
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  4   58[BANK0 ] float 
 11677 ;; Registers used:
 11678 ;;		wreg, status,2, status,0
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11685 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11686 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11687 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11688 ;;Total ram usage:       20 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    1
 11691 ;; This function calls:
 11692 ;;		Nothing
 11693 ;; This function is called by:
 11694 ;;		_efgtoa
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           
 11699                           ;psect for function _floorf
 11700  21C6                     _floorf:	
 11701                           
 11702                           ;incstack = 0
 11703                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11704  21C6  0023               	movlb	3	; select bank3
 11705  21C7  082D               	movf	(floorf@F524+3)^(0+384),w
 11706  21C8  0020               	movlb	0	; select bank0
 11707  21C9  00ED               	movwf	floorf@u+3
 11708  21CA  0023               	movlb	3	; select bank3
 11709  21CB  082C               	movf	(floorf@F524+2)^(0+384),w
 11710  21CC  0020               	movlb	0	; select bank0
 11711  21CD  00EC               	movwf	floorf@u+2
 11712  21CE  0023               	movlb	3	; select bank3
 11713  21CF  082B               	movf	(floorf@F524+1)^(0+384),w
 11714  21D0  0020               	movlb	0	; select bank0
 11715  21D1  00EB               	movwf	floorf@u+1
 11716  21D2  0023               	movlb	3	; select bank3
 11717  21D3  082A               	movf	floorf@F524^(0+384),w
 11718  21D4  0020               	movlb	0	; select bank0
 11719  21D5  00EA               	movwf	floorf@u
 11720  21D6  085D               	movf	floorf@x+3,w
 11721  21D7  00ED               	movwf	floorf@u+3
 11722  21D8  085C               	movf	floorf@x+2,w
 11723  21D9  00EC               	movwf	floorf@u+2
 11724  21DA  085B               	movf	floorf@x+1,w
 11725  21DB  00EB               	movwf	floorf@u+1
 11726  21DC  085A               	movf	floorf@x,w
 11727  21DD  00EA               	movwf	floorf@u
 11728  21DE  086A               	movf	floorf@u,w
 11729  21DF  00DE               	movwf	??_floorf
 11730  21E0  086B               	movf	floorf@u+1,w
 11731  21E1  00DF               	movwf	??_floorf+1
 11732  21E2  086C               	movf	floorf@u+2,w
 11733  21E3  00E0               	movwf	??_floorf+2
 11734  21E4  086D               	movf	floorf@u+3,w
 11735  21E5  00E1               	movwf	??_floorf+3
 11736  21E6  3017               	movlw	23
 11737  21E7                     u5575:	
 11738  21E7  36E1               	lsrf	??_floorf+3,f
 11739  21E8  0CE0               	rrf	??_floorf+2,f
 11740  21E9  0CDF               	rrf	??_floorf+1,f
 11741  21EA  0CDE               	rrf	??_floorf,f
 11742  21EB  0B89               	decfsz	9,f
 11743  21EC  29E7               	goto	u5575
 11744  21ED  30FF               	movlw	255
 11745  21EE  055E               	andwf	??_floorf,w
 11746  21EF  00E2               	movwf	??_floorf+4
 11747  21F0  3000               	movlw	0
 11748  21F1  055F               	andwf	??_floorf+1,w
 11749  21F2  00E3               	movwf	??_floorf+5
 11750  21F3  0862               	movf	??_floorf+4,w
 11751  21F4  3E81               	addlw	129
 11752  21F5  00E8               	movwf	floorf@e
 11753  21F6  30FF               	movlw	255
 11754  21F7  3D63               	addwfc	??_floorf+5,w
 11755  21F8  00E9               	movwf	floorf@e+1
 11756  21F9  0869               	movf	floorf@e+1,w
 11757  21FA  3A80               	xorlw	128
 11758  21FB  00DE               	movwf	??_floorf
 11759  21FC  3080               	movlw	128
 11760  21FD  025E               	subwf	??_floorf,w
 11761  21FE  1D03               	skipz
 11762  21FF  2A02               	goto	u5585
 11763  2200  3017               	movlw	23
 11764  2201  0268               	subwf	floorf@e,w
 11765  2202                     u5585:	
 11766  2202  1803               	btfsc	3,0
 11767  2203  0008               	return
 11768  2204  0020               	movlb	0	; select bank0
 11769  2205  1BE9               	btfsc	floorf@e+1,7
 11770  2206  2A5F               	goto	l4693
 11771  2207  30FF               	movlw	255
 11772  2208  00DE               	movwf	??_floorf
 11773  2209  30FF               	movlw	255
 11774  220A  00DF               	movwf	??_floorf+1
 11775  220B  307F               	movlw	127
 11776  220C  00E0               	movwf	??_floorf+2
 11777  220D  3000               	movlw	0
 11778  220E  00E1               	movwf	??_floorf+3
 11779  220F  0A68               	incf	floorf@e,w
 11780  2210  2A15               	goto	u5600
 11781  2211                     u5605:	
 11782  2211  37E1               	asrf	??_floorf+3,f
 11783  2212  0CE0               	rrf	??_floorf+2,f
 11784  2213  0CDF               	rrf	??_floorf+1,f
 11785  2214  0CDE               	rrf	??_floorf,f
 11786  2215                     u5600:	
 11787  2215  0B89               	decfsz	9,f
 11788  2216  2A11               	goto	u5605
 11789  2217  0861               	movf	??_floorf+3,w
 11790  2218  00E7               	movwf	floorf@m+3
 11791  2219  0860               	movf	??_floorf+2,w
 11792  221A  00E6               	movwf	floorf@m+2
 11793  221B  085F               	movf	??_floorf+1,w
 11794  221C  00E5               	movwf	floorf@m+1
 11795  221D  085E               	movf	??_floorf,w
 11796  221E  00E4               	movwf	floorf@m
 11797  221F  086A               	movf	floorf@u,w
 11798  2220  0564               	andwf	floorf@m,w
 11799  2221  00DE               	movwf	??_floorf
 11800  2222  086B               	movf	floorf@u+1,w
 11801  2223  0565               	andwf	floorf@m+1,w
 11802  2224  00DF               	movwf	??_floorf+1
 11803  2225  086C               	movf	floorf@u+2,w
 11804  2226  0566               	andwf	floorf@m+2,w
 11805  2227  00E0               	movwf	??_floorf+2
 11806  2228  086D               	movf	floorf@u+3,w
 11807  2229  0567               	andwf	floorf@m+3,w
 11808  222A  00E1               	movwf	??_floorf+3
 11809  222B  0861               	movf	??_floorf+3,w
 11810  222C  0460               	iorwf	??_floorf+2,w
 11811  222D  045F               	iorwf	??_floorf+1,w
 11812  222E  045E               	iorwf	??_floorf,w
 11813  222F  1903               	btfsc	3,2
 11814  2230  0008               	return
 11815  2231  086A               	movf	floorf@u,w
 11816  2232  00DE               	movwf	??_floorf
 11817  2233  086B               	movf	floorf@u+1,w
 11818  2234  00DF               	movwf	??_floorf+1
 11819  2235  086C               	movf	floorf@u+2,w
 11820  2236  00E0               	movwf	??_floorf+2
 11821  2237  086D               	movf	floorf@u+3,w
 11822  2238  00E1               	movwf	??_floorf+3
 11823  2239  301F               	movlw	31
 11824  223A                     u5625:	
 11825  223A  36E1               	lsrf	??_floorf+3,f
 11826  223B  0CE0               	rrf	??_floorf+2,f
 11827  223C  0CDF               	rrf	??_floorf+1,f
 11828  223D  0CDE               	rrf	??_floorf,f
 11829  223E  0B89               	decfsz	9,f
 11830  223F  2A3A               	goto	u5625
 11831  2240  0861               	movf	??_floorf+3,w
 11832  2241  0460               	iorwf	??_floorf+2,w
 11833  2242  045F               	iorwf	??_floorf+1,w
 11834  2243  045E               	iorwf	??_floorf,w
 11835  2244  1903               	skipnz
 11836  2245  2A4E               	goto	l4691
 11837  2246  0864               	movf	floorf@m,w
 11838  2247  07EA               	addwf	floorf@u,f
 11839  2248  0865               	movf	floorf@m+1,w
 11840  2249  3DEB               	addwfc	floorf@u+1,f
 11841  224A  0866               	movf	floorf@m+2,w
 11842  224B  3DEC               	addwfc	floorf@u+2,f
 11843  224C  0867               	movf	floorf@m+3,w
 11844  224D  3DED               	addwfc	floorf@u+3,f
 11845  224E                     l4691:	
 11846  224E  0964               	comf	floorf@m,w
 11847  224F  00DE               	movwf	??_floorf
 11848  2250  0965               	comf	floorf@m+1,w
 11849  2251  00DF               	movwf	??_floorf+1
 11850  2252  0966               	comf	floorf@m+2,w
 11851  2253  00E0               	movwf	??_floorf+2
 11852  2254  0967               	comf	floorf@m+3,w
 11853  2255  00E1               	movwf	??_floorf+3
 11854  2256  085E               	movf	??_floorf,w
 11855  2257  05EA               	andwf	floorf@u,f
 11856  2258  085F               	movf	??_floorf+1,w
 11857  2259  05EB               	andwf	floorf@u+1,f
 11858  225A  0860               	movf	??_floorf+2,w
 11859  225B  05EC               	andwf	floorf@u+2,f
 11860  225C  0861               	movf	??_floorf+3,w
 11861  225D  05ED               	andwf	floorf@u+3,f
 11862  225E  2A95               	goto	l1418
 11863  225F                     l4693:	
 11864  225F  086A               	movf	floorf@u,w
 11865  2260  00DE               	movwf	??_floorf
 11866  2261  086B               	movf	floorf@u+1,w
 11867  2262  00DF               	movwf	??_floorf+1
 11868  2263  086C               	movf	floorf@u+2,w
 11869  2264  00E0               	movwf	??_floorf+2
 11870  2265  086D               	movf	floorf@u+3,w
 11871  2266  00E1               	movwf	??_floorf+3
 11872  2267  301F               	movlw	31
 11873  2268                     u5645:	
 11874  2268  36E1               	lsrf	??_floorf+3,f
 11875  2269  0CE0               	rrf	??_floorf+2,f
 11876  226A  0CDF               	rrf	??_floorf+1,f
 11877  226B  0CDE               	rrf	??_floorf,f
 11878  226C  0B89               	decfsz	9,f
 11879  226D  2A68               	goto	u5645
 11880  226E  0861               	movf	??_floorf+3,w
 11881  226F  0460               	iorwf	??_floorf+2,w
 11882  2270  045F               	iorwf	??_floorf+1,w
 11883  2271  045E               	iorwf	??_floorf,w
 11884  2272  1D03               	skipz
 11885  2273  2A78               	goto	l4697
 11886  2274  3000               	movlw	0
 11887  2275  00ED               	movwf	floorf@u+3
 11888  2276  3000               	movlw	0
 11889  2277  2A90               	goto	L10
 11890  2278                     l4697:	
 11891  2278  086A               	movf	floorf@u,w
 11892  2279  00DE               	movwf	??_floorf
 11893  227A  086B               	movf	floorf@u+1,w
 11894  227B  00DF               	movwf	??_floorf+1
 11895  227C  086C               	movf	floorf@u+2,w
 11896  227D  00E0               	movwf	??_floorf+2
 11897  227E  086D               	movf	floorf@u+3,w
 11898  227F  00E1               	movwf	??_floorf+3
 11899  2280  3001               	movlw	1
 11900  2281                     u5665:	
 11901  2281  35DE               	lslf	??_floorf,f
 11902  2282  0DDF               	rlf	??_floorf+1,f
 11903  2283  0DE0               	rlf	??_floorf+2,f
 11904  2284  0DE1               	rlf	??_floorf+3,f
 11905  2285  0B89               	decfsz	9,f
 11906  2286  2A81               	goto	u5665
 11907  2287  0861               	movf	??_floorf+3,w
 11908  2288  0460               	iorwf	??_floorf+2,w
 11909  2289  045F               	iorwf	??_floorf+1,w
 11910  228A  045E               	iorwf	??_floorf,w
 11911  228B  1903               	skipnz
 11912  228C  2A95               	goto	l1418
 11913  228D  30BF               	movlw	191
 11914  228E  00ED               	movwf	floorf@u+3
 11915  228F  3080               	movlw	128
 11916  2290                     L10:	
 11917  2290  00EC               	movwf	floorf@u+2
 11918  2291  3000               	movlw	0
 11919  2292  00EB               	movwf	floorf@u+1
 11920  2293  3000               	movlw	0
 11921  2294  00EA               	movwf	floorf@u
 11922  2295                     l1418:	
 11923  2295  086D               	movf	floorf@u+3,w
 11924  2296  00DD               	movwf	?_floorf+3
 11925  2297  086C               	movf	floorf@u+2,w
 11926  2298  00DC               	movwf	?_floorf+2
 11927  2299  086B               	movf	floorf@u+1,w
 11928  229A  00DB               	movwf	?_floorf+1
 11929  229B  086A               	movf	floorf@u,w
 11930  229C  00DA               	movwf	?_floorf
 11931  229D  0008               	return
 11932  229E                     __end_of_floorf:	
 11933                           
 11934                           	psect	text23
 11935  3788                     __ptext23:	
 11936 ;; *************** function ___fpclassifyf *****************
 11937 ;; Defined at:
 11938 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;  x               4    1[COMMON] float 
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;  u               4    2[BANK0 ] struct .
 11943 ;;  e               2    0[BANK0 ] int 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  2    1[COMMON] int 
 11946 ;; Registers used:
 11947 ;;		wreg, status,2, status,0
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;Total ram usage:       16 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:    1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_efgtoa
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function ___fpclassifyf
 11969  3788                     ___fpclassifyf:	
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 11973  3788  0023               	movlb	3	; select bank3
 11974  3789  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 11975  378A  0020               	movlb	0	; select bank0
 11976  378B  00A5               	movwf	___fpclassifyf@u+3
 11977  378C  0023               	movlb	3	; select bank3
 11978  378D  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 11979  378E  0020               	movlb	0	; select bank0
 11980  378F  00A4               	movwf	___fpclassifyf@u+2
 11981  3790  0023               	movlb	3	; select bank3
 11982  3791  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 11983  3792  0020               	movlb	0	; select bank0
 11984  3793  00A3               	movwf	___fpclassifyf@u+1
 11985  3794  0023               	movlb	3	; select bank3
 11986  3795  082E               	movf	___fpclassifyf@F463^(0+384),w
 11987  3796  0020               	movlb	0	; select bank0
 11988  3797  00A2               	movwf	___fpclassifyf@u
 11989  3798  0874               	movf	___fpclassifyf@x+3,w
 11990  3799  00A5               	movwf	___fpclassifyf@u+3
 11991  379A  0873               	movf	___fpclassifyf@x+2,w
 11992  379B  00A4               	movwf	___fpclassifyf@u+2
 11993  379C  0872               	movf	___fpclassifyf@x+1,w
 11994  379D  00A3               	movwf	___fpclassifyf@u+1
 11995  379E  0871               	movf	___fpclassifyf@x,w
 11996  379F  00A2               	movwf	___fpclassifyf@u
 11997  37A0  0822               	movf	___fpclassifyf@u,w
 11998  37A1  00F5               	movwf	??___fpclassifyf
 11999  37A2  0823               	movf	___fpclassifyf@u+1,w
 12000  37A3  00F6               	movwf	??___fpclassifyf+1
 12001  37A4  0824               	movf	___fpclassifyf@u+2,w
 12002  37A5  00F7               	movwf	??___fpclassifyf+2
 12003  37A6  0825               	movf	___fpclassifyf@u+3,w
 12004  37A7  00F8               	movwf	??___fpclassifyf+3
 12005  37A8  3017               	movlw	23
 12006  37A9                     u5455:	
 12007  37A9  36F8               	lsrf	??___fpclassifyf+3,f
 12008  37AA  0CF7               	rrf	??___fpclassifyf+2,f
 12009  37AB  0CF6               	rrf	??___fpclassifyf+1,f
 12010  37AC  0CF5               	rrf	??___fpclassifyf,f
 12011  37AD  0B89               	decfsz	9,f
 12012  37AE  2FA9               	goto	u5455
 12013  37AF  30FF               	movlw	255
 12014  37B0  0575               	andwf	??___fpclassifyf,w
 12015  37B1  00A0               	movwf	___fpclassifyf@e
 12016  37B2  3000               	movlw	0
 12017  37B3  0576               	andwf	??___fpclassifyf+1,w
 12018  37B4  00A1               	movwf	___fpclassifyf@e+1
 12019  37B5  0820               	movf	___fpclassifyf@e,w
 12020  37B6  0421               	iorwf	___fpclassifyf@e+1,w
 12021  37B7  1D03               	btfss	3,2
 12022  37B8  2FD8               	goto	l4649
 12023  37B9  0822               	movf	___fpclassifyf@u,w
 12024  37BA  00F5               	movwf	??___fpclassifyf
 12025  37BB  0823               	movf	___fpclassifyf@u+1,w
 12026  37BC  00F6               	movwf	??___fpclassifyf+1
 12027  37BD  0824               	movf	___fpclassifyf@u+2,w
 12028  37BE  00F7               	movwf	??___fpclassifyf+2
 12029  37BF  0825               	movf	___fpclassifyf@u+3,w
 12030  37C0  00F8               	movwf	??___fpclassifyf+3
 12031  37C1  3001               	movlw	1
 12032  37C2                     u5475:	
 12033  37C2  35F5               	lslf	??___fpclassifyf,f
 12034  37C3  0DF6               	rlf	??___fpclassifyf+1,f
 12035  37C4  0DF7               	rlf	??___fpclassifyf+2,f
 12036  37C5  0DF8               	rlf	??___fpclassifyf+3,f
 12037  37C6  0B89               	decfsz	9,f
 12038  37C7  2FC2               	goto	u5475
 12039  37C8  0878               	movf	??___fpclassifyf+3,w
 12040  37C9  0477               	iorwf	??___fpclassifyf+2,w
 12041  37CA  0476               	iorwf	??___fpclassifyf+1,w
 12042  37CB  0475               	iorwf	??___fpclassifyf,w
 12043  37CC  1D03               	skipz
 12044  37CD  2FD3               	goto	l4645
 12045  37CE  3002               	movlw	2
 12046  37CF  00F1               	movwf	?___fpclassifyf
 12047  37D0  3000               	movlw	0
 12048  37D1  00F2               	movwf	?___fpclassifyf+1
 12049  37D2  0008               	return
 12050  37D3                     l4645:	
 12051  37D3  3003               	movlw	3
 12052  37D4  00F1               	movwf	?___fpclassifyf
 12053  37D5  3000               	movlw	0
 12054  37D6  00F2               	movwf	?___fpclassifyf+1
 12055  37D7  0008               	return
 12056  37D8                     l4649:	
 12057  37D8  0A20               	incf	___fpclassifyf@e,w
 12058  37D9  0421               	iorwf	___fpclassifyf@e+1,w
 12059  37DA  1D03               	btfss	3,2
 12060  37DB  2FFB               	goto	l4655
 12061  37DC  0822               	movf	___fpclassifyf@u,w
 12062  37DD  00F5               	movwf	??___fpclassifyf
 12063  37DE  0823               	movf	___fpclassifyf@u+1,w
 12064  37DF  00F6               	movwf	??___fpclassifyf+1
 12065  37E0  0824               	movf	___fpclassifyf@u+2,w
 12066  37E1  00F7               	movwf	??___fpclassifyf+2
 12067  37E2  0825               	movf	___fpclassifyf@u+3,w
 12068  37E3  00F8               	movwf	??___fpclassifyf+3
 12069  37E4  3009               	movlw	9
 12070  37E5                     u5505:	
 12071  37E5  35F5               	lslf	??___fpclassifyf,f
 12072  37E6  0DF6               	rlf	??___fpclassifyf+1,f
 12073  37E7  0DF7               	rlf	??___fpclassifyf+2,f
 12074  37E8  0DF8               	rlf	??___fpclassifyf+3,f
 12075  37E9  0B89               	decfsz	9,f
 12076  37EA  2FE5               	goto	u5505
 12077  37EB  0878               	movf	??___fpclassifyf+3,w
 12078  37EC  0477               	iorwf	??___fpclassifyf+2,w
 12079  37ED  0476               	iorwf	??___fpclassifyf+1,w
 12080  37EE  0475               	iorwf	??___fpclassifyf,w
 12081  37EF  1D03               	btfss	3,2
 12082  37F0  2FF3               	goto	u5510
 12083  37F1  3001               	movlw	1
 12084  37F2  2FF4               	goto	u5520
 12085  37F3                     u5510:	
 12086  37F3  3000               	movlw	0
 12087  37F4                     u5520:	
 12088  37F4  00F9               	movwf	??___fpclassifyf+4
 12089  37F5  01FA               	clrf	??___fpclassifyf+5
 12090  37F6  0879               	movf	??___fpclassifyf+4,w
 12091  37F7  00F1               	movwf	?___fpclassifyf
 12092  37F8  087A               	movf	??___fpclassifyf+5,w
 12093  37F9  00F2               	movwf	?___fpclassifyf+1
 12094  37FA  0008               	return
 12095  37FB                     l4655:	
 12096  37FB  3004               	movlw	4
 12097  37FC  00F1               	movwf	?___fpclassifyf
 12098  37FD  3000               	movlw	0
 12099  37FE  00F2               	movwf	?___fpclassifyf+1
 12100  37FF  0008               	return
 12101  3800                     __end_of___fpclassifyf:	
 12102                           
 12103                           	psect	text24
 12104  3258                     __ptext24:	
 12105 ;; *************** function ___flsub *****************
 12106 ;; Defined at:
 12107 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;  a               4   32[BANK0 ] int 
 12110 ;;  b               4   36[BANK0 ] int 
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  4   32[BANK0 ] int 
 12115 ;; Registers used:
 12116 ;;		wreg, status,2, status,0, pclath, cstack
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12125 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12126 ;;Total ram usage:        8 bytes
 12127 ;; Hardware stack levels used:    1
 12128 ;; Hardware stack levels required when called:    2
 12129 ;; This function calls:
 12130 ;;		___fladd
 12131 ;; This function is called by:
 12132 ;;		_efgtoa
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           
 12137                           ;psect for function ___flsub
 12138  3258                     ___flsub:	
 12139                           
 12140                           ;incstack = 0
 12141                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12142  3258  3080               	movlw	128
 12143  3259  0020               	movlb	0	; select bank0
 12144  325A  06C3               	xorwf	___flsub@a+3,f
 12145  325B  0847               	movf	___flsub@b+3,w
 12146  325C  00F4               	movwf	___fladd@b+3
 12147  325D  0846               	movf	___flsub@b+2,w
 12148  325E  00F3               	movwf	___fladd@b+2
 12149  325F  0845               	movf	___flsub@b+1,w
 12150  3260  00F2               	movwf	___fladd@b+1
 12151  3261  0844               	movf	___flsub@b,w
 12152  3262  00F1               	movwf	___fladd@b
 12153  3263  0843               	movf	___flsub@a+3,w
 12154  3264  00F8               	movwf	___fladd@a+3
 12155  3265  0842               	movf	___flsub@a+2,w
 12156  3266  00F7               	movwf	___fladd@a+2
 12157  3267  0841               	movf	___flsub@a+1,w
 12158  3268  00F6               	movwf	___fladd@a+1
 12159  3269  0840               	movf	___flsub@a,w
 12160  326A  00F5               	movwf	___fladd@a
 12161  326B  319E  261E         	fcall	___fladd
 12162  326D  0874               	movf	?___fladd+3,w
 12163  326E  0020               	movlb	0	; select bank0
 12164  326F  00C3               	movwf	?___flsub+3
 12165  3270  0873               	movf	?___fladd+2,w
 12166  3271  00C2               	movwf	?___flsub+2
 12167  3272  0872               	movf	?___fladd+1,w
 12168  3273  00C1               	movwf	?___flsub+1
 12169  3274  0871               	movf	?___fladd,w
 12170  3275  00C0               	movwf	?___flsub
 12171  3276  0008               	return
 12172  3277                     __end_of___flsub:	
 12173                           
 12174                           	psect	text25
 12175  1E1E                     __ptext25:	
 12176 ;; *************** function ___fladd *****************
 12177 ;; Defined at:
 12178 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  b               4    1[COMMON] int 
 12181 ;;  a               4    5[COMMON] int 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  grs             1   11[BANK0 ] unsigned char 
 12184 ;;  bexp            1   10[BANK0 ] unsigned char 
 12185 ;;  aexp            1    9[BANK0 ] unsigned char 
 12186 ;;  signs           1    8[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  4    1[COMMON] unsigned char 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12198 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12199 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;Total ram usage:       20 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:    1
 12203 ;; This function calls:
 12204 ;;		Nothing
 12205 ;; This function is called by:
 12206 ;;		_efgtoa
 12207 ;;		___flsub
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           
 12212                           ;psect for function ___fladd
 12213  1E1E                     ___fladd:	
 12214                           
 12215                           ;incstack = 0
 12216                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 12217  1E1E  0874               	movf	___fladd@b+3,w
 12218  1E1F  3980               	andlw	128
 12219  1E20  0020               	movlb	0	; select bank0
 12220  1E21  00A0               	movwf	??___fladd
 12221  1E22  0820               	movf	??___fladd,w
 12222  1E23  00A8               	movwf	___fladd@signs
 12223  1E24  3574               	lslf	___fladd@b+3,w
 12224  1E25  00A0               	movwf	??___fladd
 12225  1E26  0820               	movf	??___fladd,w
 12226  1E27  00AA               	movwf	___fladd@bexp
 12227  1E28  1BF3               	btfsc	___fladd@b+2,7
 12228  1E29  142A               	bsf	___fladd@bexp,0
 12229  1E2A  082A               	movf	___fladd@bexp,w
 12230  1E2B  1903               	btfsc	3,2
 12231  1E2C  2E3B               	goto	l7111
 12232  1E2D  0A2A               	incf	___fladd@bexp,w
 12233  1E2E  1D03               	btfss	3,2
 12234  1E2F  2E38               	goto	l7107
 12235  1E30  3000               	movlw	0
 12236  1E31  00F4               	movwf	___fladd@b+3
 12237  1E32  3000               	movlw	0
 12238  1E33  00F3               	movwf	___fladd@b+2
 12239  1E34  3000               	movlw	0
 12240  1E35  00F2               	movwf	___fladd@b+1
 12241  1E36  3000               	movlw	0
 12242  1E37  00F1               	movwf	___fladd@b
 12243  1E38                     l7107:	
 12244  1E38  17F3               	bsf	___fladd@b+2,7
 12245  1E39  01F4               	clrf	___fladd@b+3
 12246  1E3A  2E43               	goto	l7113
 12247  1E3B                     l7111:	
 12248  1E3B  3000               	movlw	0
 12249  1E3C  00F4               	movwf	___fladd@b+3
 12250  1E3D  3000               	movlw	0
 12251  1E3E  00F3               	movwf	___fladd@b+2
 12252  1E3F  3000               	movlw	0
 12253  1E40  00F2               	movwf	___fladd@b+1
 12254  1E41  3000               	movlw	0
 12255  1E42  00F1               	movwf	___fladd@b
 12256  1E43                     l7113:	
 12257  1E43  0878               	movf	___fladd@a+3,w
 12258  1E44  3980               	andlw	128
 12259  1E45  00A0               	movwf	??___fladd
 12260  1E46  0820               	movf	??___fladd,w
 12261  1E47  00A9               	movwf	___fladd@aexp
 12262  1E48  0829               	movf	___fladd@aexp,w
 12263  1E49  0628               	xorwf	___fladd@signs,w
 12264  1E4A  1D03               	btfss	3,2
 12265  1E4B  1728               	bsf	___fladd@signs,6
 12266  1E4C  3578               	lslf	___fladd@a+3,w
 12267  1E4D  00A0               	movwf	??___fladd
 12268  1E4E  0820               	movf	??___fladd,w
 12269  1E4F  00A9               	movwf	___fladd@aexp
 12270  1E50  1BF7               	btfsc	___fladd@a+2,7
 12271  1E51  1429               	bsf	___fladd@aexp,0
 12272  1E52  0829               	movf	___fladd@aexp,w
 12273  1E53  1903               	btfsc	3,2
 12274  1E54  2E63               	goto	l7135
 12275  1E55  0A29               	incf	___fladd@aexp,w
 12276  1E56  1D03               	btfss	3,2
 12277  1E57  2E60               	goto	l7131
 12278  1E58  3000               	movlw	0
 12279  1E59  00F8               	movwf	___fladd@a+3
 12280  1E5A  3000               	movlw	0
 12281  1E5B  00F7               	movwf	___fladd@a+2
 12282  1E5C  3000               	movlw	0
 12283  1E5D  00F6               	movwf	___fladd@a+1
 12284  1E5E  3000               	movlw	0
 12285  1E5F  00F5               	movwf	___fladd@a
 12286  1E60                     l7131:	
 12287  1E60  17F7               	bsf	___fladd@a+2,7
 12288  1E61  01F8               	clrf	___fladd@a+3
 12289  1E62  2E6B               	goto	l1210
 12290  1E63                     l7135:	
 12291  1E63  3000               	movlw	0
 12292  1E64  00F8               	movwf	___fladd@a+3
 12293  1E65  3000               	movlw	0
 12294  1E66  00F7               	movwf	___fladd@a+2
 12295  1E67  3000               	movlw	0
 12296  1E68  00F6               	movwf	___fladd@a+1
 12297  1E69  3000               	movlw	0
 12298  1E6A  00F5               	movwf	___fladd@a
 12299  1E6B                     l1210:	
 12300  1E6B  082A               	movf	___fladd@bexp,w
 12301  1E6C  0229               	subwf	___fladd@aexp,w
 12302  1E6D  1803               	skipnc
 12303  1E6E  2EB1               	goto	l7171
 12304  1E6F  1F28               	btfss	___fladd@signs,6
 12305  1E70  2E75               	goto	l7141
 12306  1E71  3080               	movlw	128
 12307  1E72  00A0               	movwf	??___fladd
 12308  1E73  0820               	movf	??___fladd,w
 12309  1E74  06A8               	xorwf	___fladd@signs,f
 12310  1E75                     l7141:	
 12311  1E75  082A               	movf	___fladd@bexp,w
 12312  1E76  00A0               	movwf	??___fladd
 12313  1E77  0820               	movf	??___fladd,w
 12314  1E78  00AB               	movwf	___fladd@grs
 12315  1E79  0829               	movf	___fladd@aexp,w
 12316  1E7A  00A0               	movwf	??___fladd
 12317  1E7B  0820               	movf	??___fladd,w
 12318  1E7C  00AA               	movwf	___fladd@bexp
 12319  1E7D  082B               	movf	___fladd@grs,w
 12320  1E7E  00A0               	movwf	??___fladd
 12321  1E7F  0820               	movf	??___fladd,w
 12322  1E80  00A9               	movwf	___fladd@aexp
 12323  1E81  0871               	movf	___fladd@b,w
 12324  1E82  00A0               	movwf	??___fladd
 12325  1E83  0820               	movf	??___fladd,w
 12326  1E84  00AB               	movwf	___fladd@grs
 12327  1E85  0875               	movf	___fladd@a,w
 12328  1E86  00A0               	movwf	??___fladd
 12329  1E87  0820               	movf	??___fladd,w
 12330  1E88  00F1               	movwf	___fladd@b
 12331  1E89  082B               	movf	___fladd@grs,w
 12332  1E8A  00A0               	movwf	??___fladd
 12333  1E8B  0820               	movf	??___fladd,w
 12334  1E8C  00F5               	movwf	___fladd@a
 12335  1E8D  0872               	movf	___fladd@b+1,w
 12336  1E8E  00A0               	movwf	??___fladd
 12337  1E8F  0820               	movf	??___fladd,w
 12338  1E90  00AB               	movwf	___fladd@grs
 12339  1E91  0876               	movf	___fladd@a+1,w
 12340  1E92  00A0               	movwf	??___fladd
 12341  1E93  0820               	movf	??___fladd,w
 12342  1E94  00F2               	movwf	___fladd@b+1
 12343  1E95  082B               	movf	___fladd@grs,w
 12344  1E96  00A0               	movwf	??___fladd
 12345  1E97  0820               	movf	??___fladd,w
 12346  1E98  00F6               	movwf	___fladd@a+1
 12347  1E99  0873               	movf	___fladd@b+2,w
 12348  1E9A  00A0               	movwf	??___fladd
 12349  1E9B  0820               	movf	??___fladd,w
 12350  1E9C  00AB               	movwf	___fladd@grs
 12351  1E9D  0877               	movf	___fladd@a+2,w
 12352  1E9E  00A0               	movwf	??___fladd
 12353  1E9F  0820               	movf	??___fladd,w
 12354  1EA0  00F3               	movwf	___fladd@b+2
 12355  1EA1  082B               	movf	___fladd@grs,w
 12356  1EA2  00A0               	movwf	??___fladd
 12357  1EA3  0820               	movf	??___fladd,w
 12358  1EA4  00F7               	movwf	___fladd@a+2
 12359  1EA5  0874               	movf	___fladd@b+3,w
 12360  1EA6  00A0               	movwf	??___fladd
 12361  1EA7  0820               	movf	??___fladd,w
 12362  1EA8  00AB               	movwf	___fladd@grs
 12363  1EA9  0878               	movf	___fladd@a+3,w
 12364  1EAA  00A0               	movwf	??___fladd
 12365  1EAB  0820               	movf	??___fladd,w
 12366  1EAC  00F4               	movwf	___fladd@b+3
 12367  1EAD  082B               	movf	___fladd@grs,w
 12368  1EAE  00A0               	movwf	??___fladd
 12369  1EAF  0820               	movf	??___fladd,w
 12370  1EB0  00F8               	movwf	___fladd@a+3
 12371  1EB1                     l7171:	
 12372  1EB1  01AB               	clrf	___fladd@grs
 12373  1EB2  0829               	movf	___fladd@aexp,w
 12374  1EB3  00A0               	movwf	??___fladd
 12375  1EB4  01A1               	clrf	??___fladd+1
 12376  1EB5  0821               	movf	??___fladd+1,w
 12377  1EB6  00A3               	movwf	??___fladd+3
 12378  1EB7  082A               	movf	___fladd@bexp,w
 12379  1EB8  0220               	subwf	??___fladd,w
 12380  1EB9  00A2               	movwf	??___fladd+2
 12381  1EBA  1C03               	skipc
 12382  1EBB  03A3               	decf	??___fladd+3,f
 12383  1EBC  0823               	movf	??___fladd+3,w
 12384  1EBD  3A80               	xorlw	128
 12385  1EBE  00A4               	movwf	??___fladd+4
 12386  1EBF  3080               	movlw	128
 12387  1EC0  0224               	subwf	??___fladd+4,w
 12388  1EC1  1D03               	skipz
 12389  1EC2  2EC5               	goto	u9745
 12390  1EC3  301A               	movlw	26
 12391  1EC4  0222               	subwf	??___fladd+2,w
 12392  1EC5                     u9745:	
 12393  1EC5  1C03               	skipc
 12394  1EC6  2EF9               	goto	l7189
 12395  1EC7  0874               	movf	___fladd@b+3,w
 12396  1EC8  0473               	iorwf	___fladd@b+2,w
 12397  1EC9  0472               	iorwf	___fladd@b+1,w
 12398  1ECA  0471               	iorwf	___fladd@b,w
 12399  1ECB  1903               	btfsc	3,2
 12400  1ECC  2ECF               	goto	u9750
 12401  1ECD  3001               	movlw	1
 12402  1ECE  2ED0               	goto	u9760
 12403  1ECF                     u9750:	
 12404  1ECF  3000               	movlw	0
 12405  1ED0                     u9760:	
 12406  1ED0  0020               	movlb	0	; select bank0
 12407  1ED1  00A0               	movwf	??___fladd
 12408  1ED2  0820               	movf	??___fladd,w
 12409  1ED3  00AB               	movwf	___fladd@grs
 12410  1ED4  3000               	movlw	0
 12411  1ED5  00F4               	movwf	___fladd@b+3
 12412  1ED6  3000               	movlw	0
 12413  1ED7  00F3               	movwf	___fladd@b+2
 12414  1ED8  3000               	movlw	0
 12415  1ED9  00F2               	movwf	___fladd@b+1
 12416  1EDA  3000               	movlw	0
 12417  1EDB  00F1               	movwf	___fladd@b
 12418  1EDC  0829               	movf	___fladd@aexp,w
 12419  1EDD  00A0               	movwf	??___fladd
 12420  1EDE  0820               	movf	??___fladd,w
 12421  1EDF  00AA               	movwf	___fladd@bexp
 12422  1EE0  2EFE               	goto	l1214
 12423  1EE1                     l1216:	
 12424  1EE1  1C2B               	btfss	___fladd@grs,0
 12425  1EE2  2EE9               	goto	l7179
 12426  1EE3  362B               	lsrf	___fladd@grs,w
 12427  1EE4  3801               	iorlw	1
 12428  1EE5  00A0               	movwf	??___fladd
 12429  1EE6  0820               	movf	??___fladd,w
 12430  1EE7  00AB               	movwf	___fladd@grs
 12431  1EE8  2EEB               	goto	l7181
 12432  1EE9                     l7179:	
 12433  1EE9  1003               	clrc
 12434  1EEA  0CAB               	rrf	___fladd@grs,f
 12435  1EEB                     l7181:	
 12436  1EEB  1871               	btfsc	___fladd@b,0
 12437  1EEC  17AB               	bsf	___fladd@grs,7
 12438  1EED  3001               	movlw	1
 12439  1EEE  00A0               	movwf	??___fladd
 12440  1EEF                     u9795:	
 12441  1EEF  37F4               	asrf	___fladd@b+3,f
 12442  1EF0  0CF3               	rrf	___fladd@b+2,f
 12443  1EF1  0CF2               	rrf	___fladd@b+1,f
 12444  1EF2  0CF1               	rrf	___fladd@b,f
 12445  1EF3  0BA0               	decfsz	??___fladd& (0+127),f
 12446  1EF4  2EEF               	goto	u9795
 12447  1EF5  3001               	movlw	1
 12448  1EF6  00A0               	movwf	??___fladd
 12449  1EF7  0820               	movf	??___fladd,w
 12450  1EF8  07AA               	addwf	___fladd@bexp,f
 12451  1EF9                     l7189:	
 12452  1EF9  0020               	movlb	0	; select bank0
 12453  1EFA  0829               	movf	___fladd@aexp,w
 12454  1EFB  022A               	subwf	___fladd@bexp,w
 12455  1EFC  1C03               	skipc
 12456  1EFD  2EE1               	goto	l1216
 12457  1EFE                     l1214:	
 12458  1EFE  1B28               	btfsc	___fladd@signs,6
 12459  1EFF  2F2F               	goto	l7215
 12460  1F00  082A               	movf	___fladd@bexp,w
 12461  1F01  1D03               	btfss	3,2
 12462  1F02  2F0C               	goto	l7197
 12463  1F03  3000               	movlw	0
 12464  1F04  00F4               	movwf	?___fladd+3
 12465  1F05  3000               	movlw	0
 12466  1F06  00F3               	movwf	?___fladd+2
 12467  1F07  3000               	movlw	0
 12468  1F08  00F2               	movwf	?___fladd+1
 12469  1F09  3000               	movlw	0
 12470  1F0A  00F1               	movwf	?___fladd
 12471  1F0B  0008               	return
 12472  1F0C                     l7197:	
 12473  1F0C  0875               	movf	___fladd@a,w
 12474  1F0D  07F1               	addwf	___fladd@b,f
 12475  1F0E  0876               	movf	___fladd@a+1,w
 12476  1F0F  3DF2               	addwfc	___fladd@b+1,f
 12477  1F10  0877               	movf	___fladd@a+2,w
 12478  1F11  3DF3               	addwfc	___fladd@b+2,f
 12479  1F12  0878               	movf	___fladd@a+3,w
 12480  1F13  3DF4               	addwfc	___fladd@b+3,f
 12481  1F14  1C74               	btfss	___fladd@b+3,0
 12482  1F15  2FA9               	goto	l7249
 12483  1F16  1C2B               	btfss	___fladd@grs,0
 12484  1F17  2F1E               	goto	l7205
 12485  1F18  362B               	lsrf	___fladd@grs,w
 12486  1F19  3801               	iorlw	1
 12487  1F1A  00A0               	movwf	??___fladd
 12488  1F1B  0820               	movf	??___fladd,w
 12489  1F1C  00AB               	movwf	___fladd@grs
 12490  1F1D  2F20               	goto	l7207
 12491  1F1E                     l7205:	
 12492  1F1E  1003               	clrc
 12493  1F1F  0CAB               	rrf	___fladd@grs,f
 12494  1F20                     l7207:	
 12495  1F20  1871               	btfsc	___fladd@b,0
 12496  1F21  17AB               	bsf	___fladd@grs,7
 12497  1F22  3001               	movlw	1
 12498  1F23  00A0               	movwf	??___fladd
 12499  1F24                     u9865:	
 12500  1F24  37F4               	asrf	___fladd@b+3,f
 12501  1F25  0CF3               	rrf	___fladd@b+2,f
 12502  1F26  0CF2               	rrf	___fladd@b+1,f
 12503  1F27  0CF1               	rrf	___fladd@b,f
 12504  1F28  0BA0               	decfsz	??___fladd& (0+127),f
 12505  1F29  2F24               	goto	u9865
 12506  1F2A  3001               	movlw	1
 12507  1F2B  00A0               	movwf	??___fladd
 12508  1F2C  0820               	movf	??___fladd,w
 12509  1F2D  07AA               	addwf	___fladd@bexp,f
 12510  1F2E  2FA9               	goto	l7249
 12511  1F2F                     l7215:	
 12512  1F2F  0874               	movf	___fladd@b+3,w
 12513  1F30  3A80               	xorlw	128
 12514  1F31  00A0               	movwf	??___fladd
 12515  1F32  0878               	movf	___fladd@a+3,w
 12516  1F33  3A80               	xorlw	128
 12517  1F34  0220               	subwf	??___fladd,w
 12518  1F35  1D03               	skipz
 12519  1F36  2F41               	goto	u9873
 12520  1F37  0877               	movf	___fladd@a+2,w
 12521  1F38  0273               	subwf	___fladd@b+2,w
 12522  1F39  1D03               	skipz
 12523  1F3A  2F41               	goto	u9873
 12524  1F3B  0876               	movf	___fladd@a+1,w
 12525  1F3C  0272               	subwf	___fladd@b+1,w
 12526  1F3D  1D03               	skipz
 12527  1F3E  2F41               	goto	u9873
 12528  1F3F  0875               	movf	___fladd@a,w
 12529  1F40  0271               	subwf	___fladd@b,w
 12530  1F41                     u9873:	
 12531  1F41  1803               	skipnc
 12532  1F42  2F79               	goto	l7225
 12533  1F43  30FF               	movlw	255
 12534  1F44  00A0               	movwf	??___fladd
 12535  1F45  30FF               	movlw	255
 12536  1F46  00A1               	movwf	??___fladd+1
 12537  1F47  30FF               	movlw	255
 12538  1F48  00A2               	movwf	??___fladd+2
 12539  1F49  30FF               	movlw	255
 12540  1F4A  00A3               	movwf	??___fladd+3
 12541  1F4B  0871               	movf	___fladd@b,w
 12542  1F4C  0275               	subwf	___fladd@a,w
 12543  1F4D  00A4               	movwf	??___fladd+4
 12544  1F4E  0872               	movf	___fladd@b+1,w
 12545  1F4F  3B76               	subwfb	___fladd@a+1,w
 12546  1F50  00A5               	movwf	??___fladd+5
 12547  1F51  0873               	movf	___fladd@b+2,w
 12548  1F52  3B77               	subwfb	___fladd@a+2,w
 12549  1F53  00A6               	movwf	??___fladd+6
 12550  1F54  0874               	movf	___fladd@b+3,w
 12551  1F55  3B78               	subwfb	___fladd@a+3,w
 12552  1F56  00A7               	movwf	??___fladd+7
 12553  1F57  0824               	movf	??___fladd+4,w
 12554  1F58  07A0               	addwf	??___fladd,f
 12555  1F59  0825               	movf	??___fladd+5,w
 12556  1F5A  3DA1               	addwfc	??___fladd+1,f
 12557  1F5B  0826               	movf	??___fladd+6,w
 12558  1F5C  3DA2               	addwfc	??___fladd+2,f
 12559  1F5D  0827               	movf	??___fladd+7,w
 12560  1F5E  3DA3               	addwfc	??___fladd+3,f
 12561  1F5F  0823               	movf	??___fladd+3,w
 12562  1F60  00F4               	movwf	___fladd@b+3
 12563  1F61  0822               	movf	??___fladd+2,w
 12564  1F62  00F3               	movwf	___fladd@b+2
 12565  1F63  0821               	movf	??___fladd+1,w
 12566  1F64  00F2               	movwf	___fladd@b+1
 12567  1F65  0820               	movf	??___fladd,w
 12568  1F66  00F1               	movwf	___fladd@b
 12569  1F67  3080               	movlw	128
 12570  1F68  00A0               	movwf	??___fladd
 12571  1F69  0820               	movf	??___fladd,w
 12572  1F6A  06A8               	xorwf	___fladd@signs,f
 12573  1F6B  09AB               	comf	___fladd@grs,f
 12574  1F6C  0AAB               	incf	___fladd@grs,f
 12575  1F6D  082B               	movf	___fladd@grs,w
 12576  1F6E  1D03               	btfss	3,2
 12577  1F6F  2F81               	goto	l1231
 12578  1F70  3001               	movlw	1
 12579  1F71  07F1               	addwf	___fladd@b,f
 12580  1F72  3000               	movlw	0
 12581  1F73  3DF2               	addwfc	___fladd@b+1,f
 12582  1F74  3000               	movlw	0
 12583  1F75  3DF3               	addwfc	___fladd@b+2,f
 12584  1F76  3000               	movlw	0
 12585  1F77  3DF4               	addwfc	___fladd@b+3,f
 12586  1F78  2F81               	goto	l1231
 12587  1F79                     l7225:	
 12588  1F79  0875               	movf	___fladd@a,w
 12589  1F7A  02F1               	subwf	___fladd@b,f
 12590  1F7B  0876               	movf	___fladd@a+1,w
 12591  1F7C  3BF2               	subwfb	___fladd@b+1,f
 12592  1F7D  0877               	movf	___fladd@a+2,w
 12593  1F7E  3BF3               	subwfb	___fladd@b+2,f
 12594  1F7F  0878               	movf	___fladd@a+3,w
 12595  1F80  3BF4               	subwfb	___fladd@b+3,f
 12596  1F81                     l1231:	
 12597  1F81  0874               	movf	___fladd@b+3,w
 12598  1F82  0473               	iorwf	___fladd@b+2,w
 12599  1F83  0472               	iorwf	___fladd@b+1,w
 12600  1F84  0471               	iorwf	___fladd@b,w
 12601  1F85  1D03               	skipz
 12602  1F86  2FA7               	goto	l7247
 12603  1F87  082B               	movf	___fladd@grs,w
 12604  1F88  1D03               	btfss	3,2
 12605  1F89  2FA7               	goto	l7247
 12606  1F8A  3000               	movlw	0
 12607  1F8B  00F4               	movwf	?___fladd+3
 12608  1F8C  3000               	movlw	0
 12609  1F8D  00F3               	movwf	?___fladd+2
 12610  1F8E  3000               	movlw	0
 12611  1F8F  00F2               	movwf	?___fladd+1
 12612  1F90  3000               	movlw	0
 12613  1F91  00F1               	movwf	?___fladd
 12614  1F92  0008               	return
 12615  1F93                     l7233:	
 12616  1F93  3001               	movlw	1
 12617  1F94                     u9915:	
 12618  1F94  35F1               	lslf	___fladd@b,f
 12619  1F95  0DF2               	rlf	___fladd@b+1,f
 12620  1F96  0DF3               	rlf	___fladd@b+2,f
 12621  1F97  0DF4               	rlf	___fladd@b+3,f
 12622  1F98  0B89               	decfsz	9,f
 12623  1F99  2F94               	goto	u9915
 12624  1F9A  1BAB               	btfsc	___fladd@grs,7
 12625  1F9B  1471               	bsf	___fladd@b,0
 12626  1F9C  1C2B               	btfss	___fladd@grs,0
 12627  1F9D  2FA0               	goto	l7241
 12628  1F9E  1403               	setc
 12629  1F9F  2FA1               	goto	L11
 12630  1FA0                     l7241:	
 12631  1FA0  1003               	clrc
 12632  1FA1                     L11:	
 12633  1FA1  0DAB               	rlf	___fladd@grs,f
 12634  1FA2  082A               	movf	___fladd@bexp,w
 12635  1FA3  1903               	btfsc	3,2
 12636  1FA4  2FA7               	goto	l7247
 12637  1FA5  3001               	movlw	1
 12638  1FA6  02AA               	subwf	___fladd@bexp,f
 12639  1FA7                     l7247:	
 12640  1FA7  1FF3               	btfss	___fladd@b+2,7
 12641  1FA8  2F93               	goto	l7233
 12642  1FA9                     l7249:	
 12643  1FA9  01A9               	clrf	___fladd@aexp
 12644  1FAA  1FAB               	btfss	___fladd@grs,7
 12645  1FAB  2FB4               	goto	l7259
 12646  1FAC  082B               	movf	___fladd@grs,w
 12647  1FAD  397F               	andlw	127
 12648  1FAE  1903               	btfsc	3,2
 12649  1FAF  1871               	btfsc	___fladd@b,0
 12650  1FB0  2FB2               	goto	l7255
 12651  1FB1  2FB4               	goto	l7259
 12652  1FB2                     l7255:	
 12653  1FB2  01A9               	clrf	___fladd@aexp
 12654  1FB3  0AA9               	incf	___fladd@aexp,f
 12655  1FB4                     l7259:	
 12656  1FB4  0829               	movf	___fladd@aexp,w
 12657  1FB5  1903               	btfsc	3,2
 12658  1FB6  2FE0               	goto	l1244
 12659  1FB7  3001               	movlw	1
 12660  1FB8  07F1               	addwf	___fladd@b,f
 12661  1FB9  3000               	movlw	0
 12662  1FBA  3DF2               	addwfc	___fladd@b+1,f
 12663  1FBB  3000               	movlw	0
 12664  1FBC  3DF3               	addwfc	___fladd@b+2,f
 12665  1FBD  3000               	movlw	0
 12666  1FBE  3DF4               	addwfc	___fladd@b+3,f
 12667  1FBF  1C74               	btfss	___fladd@b+3,0
 12668  1FC0  2FE0               	goto	l1244
 12669  1FC1  0871               	movf	___fladd@b,w
 12670  1FC2  00A0               	movwf	??___fladd
 12671  1FC3  0872               	movf	___fladd@b+1,w
 12672  1FC4  00A1               	movwf	??___fladd+1
 12673  1FC5  0873               	movf	___fladd@b+2,w
 12674  1FC6  00A2               	movwf	??___fladd+2
 12675  1FC7  0874               	movf	___fladd@b+3,w
 12676  1FC8  00A3               	movwf	??___fladd+3
 12677  1FC9  3001               	movlw	1
 12678  1FCA  00A4               	movwf	??___fladd+4
 12679  1FCB                     u10015:	
 12680  1FCB  37A3               	asrf	??___fladd+3,f
 12681  1FCC  0CA2               	rrf	??___fladd+2,f
 12682  1FCD  0CA1               	rrf	??___fladd+1,f
 12683  1FCE  0CA0               	rrf	??___fladd,f
 12684  1FCF  0BA4               	decfsz	??___fladd+4,f
 12685  1FD0  2FCB               	goto	u10015
 12686  1FD1  0823               	movf	??___fladd+3,w
 12687  1FD2  00F4               	movwf	___fladd@b+3
 12688  1FD3  0822               	movf	??___fladd+2,w
 12689  1FD4  00F3               	movwf	___fladd@b+2
 12690  1FD5  0821               	movf	??___fladd+1,w
 12691  1FD6  00F2               	movwf	___fladd@b+1
 12692  1FD7  0820               	movf	??___fladd,w
 12693  1FD8  00F1               	movwf	___fladd@b
 12694  1FD9  0A2A               	incf	___fladd@bexp,w
 12695  1FDA  1903               	btfsc	3,2
 12696  1FDB  2FE0               	goto	l1244
 12697  1FDC  3001               	movlw	1
 12698  1FDD  00A0               	movwf	??___fladd
 12699  1FDE  0820               	movf	??___fladd,w
 12700  1FDF  07AA               	addwf	___fladd@bexp,f
 12701  1FE0                     l1244:	
 12702  1FE0  0A2A               	incf	___fladd@bexp,w
 12703  1FE1  1D03               	btfss	3,2
 12704  1FE2  082A               	movf	___fladd@bexp,w
 12705  1FE3  1D03               	btfss	3,2
 12706  1FE4  2FF0               	goto	l7277
 12707  1FE5  3000               	movlw	0
 12708  1FE6  00F4               	movwf	___fladd@b+3
 12709  1FE7  3000               	movlw	0
 12710  1FE8  00F3               	movwf	___fladd@b+2
 12711  1FE9  3000               	movlw	0
 12712  1FEA  00F2               	movwf	___fladd@b+1
 12713  1FEB  3000               	movlw	0
 12714  1FEC  00F1               	movwf	___fladd@b
 12715  1FED  082A               	movf	___fladd@bexp,w
 12716  1FEE  1903               	btfsc	3,2
 12717  1FEF  01A8               	clrf	___fladd@signs
 12718  1FF0                     l7277:	
 12719  1FF0  1C2A               	btfss	___fladd@bexp,0
 12720  1FF1  2FF4               	goto	l7281
 12721  1FF2  17F3               	bsf	___fladd@b+2,7
 12722  1FF3  2FF8               	goto	l1252
 12723  1FF4                     l7281:	
 12724  1FF4  307F               	movlw	127
 12725  1FF5  00A0               	movwf	??___fladd
 12726  1FF6  0820               	movf	??___fladd,w
 12727  1FF7  05F3               	andwf	___fladd@b+2,f
 12728  1FF8                     l1252:	
 12729  1FF8  362A               	lsrf	___fladd@bexp,w
 12730  1FF9  00A0               	movwf	??___fladd
 12731  1FFA  0820               	movf	??___fladd,w
 12732  1FFB  00F4               	movwf	___fladd@b+3
 12733  1FFC  1FA8               	btfss	___fladd@signs,7
 12734  1FFD  0008               	return
 12735  1FFE  17F4               	bsf	___fladd@b+3,7
 12736  1FFF  0008               	return
 12737  2000                     __end_of___fladd:	
 12738                           
 12739                           	psect	text26
 12740  30E4                     __ptext26:	
 12741 ;; *************** function ___flneg *****************
 12742 ;; Defined at:
 12743 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  f1              4    1[COMMON] unsigned char 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  4    1[COMMON] unsigned char 
 12750 ;; Registers used:
 12751 ;;		wreg
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12761 ;;Total ram usage:        4 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    1
 12764 ;; This function calls:
 12765 ;;		Nothing
 12766 ;; This function is called by:
 12767 ;;		_efgtoa
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           
 12772                           ;psect for function ___flneg
 12773  30E4                     ___flneg:	
 12774                           
 12775                           ;incstack = 0
 12776                           ; Regs used in ___flneg: [wreg]
 12777  30E4  0874               	movf	___flneg@f1+3,w
 12778  30E5  0473               	iorwf	___flneg@f1+2,w
 12779  30E6  0472               	iorwf	___flneg@f1+1,w
 12780  30E7  0471               	iorwf	___flneg@f1,w
 12781  30E8  1903               	skipnz
 12782  30E9  0008               	return
 12783  30EA  3080               	movlw	128
 12784  30EB  06F4               	xorwf	___flneg@f1+3,f
 12785  30EC  0008               	return
 12786  30ED                     __end_of___flneg:	
 12787                           
 12788                           	psect	text27
 12789  3484                     __ptext27:	
 12790 ;; *************** function ___fleq *****************
 12791 ;; Defined at:
 12792 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  ff1             4    1[COMMON] unsigned char 
 12795 ;;  ff2             4    5[COMMON] unsigned char 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;		None
 12798 ;; Return value:  Size  Location     Type
 12799 ;;		None               void
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12810 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12811 ;;Total ram usage:       12 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    1
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_efgtoa
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           
 12822                           ;psect for function ___fleq
 12823  3484                     ___fleq:	
 12824                           
 12825                           ;incstack = 0
 12826                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12827  3484  3000               	movlw	0
 12828  3485  0571               	andwf	___fleq@ff1,w
 12829  3486  0020               	movlb	0	; select bank0
 12830  3487  00A0               	movwf	??___fleq
 12831  3488  3000               	movlw	0
 12832  3489  0572               	andwf	___fleq@ff1+1,w
 12833  348A  00A1               	movwf	??___fleq+1
 12834  348B  3080               	movlw	128
 12835  348C  0573               	andwf	___fleq@ff1+2,w
 12836  348D  00A2               	movwf	??___fleq+2
 12837  348E  307F               	movlw	127
 12838  348F  0574               	andwf	___fleq@ff1+3,w
 12839  3490  00A3               	movwf	??___fleq+3
 12840  3491  0823               	movf	??___fleq+3,w
 12841  3492  0422               	iorwf	??___fleq+2,w
 12842  3493  0421               	iorwf	??___fleq+1,w
 12843  3494  0420               	iorwf	??___fleq,w
 12844  3495  1D03               	skipz
 12845  3496  2C9F               	goto	l1078
 12846  3497  3000               	movlw	0
 12847  3498  00F4               	movwf	___fleq@ff1+3
 12848  3499  3000               	movlw	0
 12849  349A  00F3               	movwf	___fleq@ff1+2
 12850  349B  3000               	movlw	0
 12851  349C  00F2               	movwf	___fleq@ff1+1
 12852  349D  3000               	movlw	0
 12853  349E  00F1               	movwf	___fleq@ff1
 12854  349F                     l1078:	
 12855  349F  3000               	movlw	0
 12856  34A0  0575               	andwf	___fleq@ff2,w
 12857  34A1  00A0               	movwf	??___fleq
 12858  34A2  3000               	movlw	0
 12859  34A3  0576               	andwf	___fleq@ff2+1,w
 12860  34A4  00A1               	movwf	??___fleq+1
 12861  34A5  3080               	movlw	128
 12862  34A6  0577               	andwf	___fleq@ff2+2,w
 12863  34A7  00A2               	movwf	??___fleq+2
 12864  34A8  307F               	movlw	127
 12865  34A9  0578               	andwf	___fleq@ff2+3,w
 12866  34AA  00A3               	movwf	??___fleq+3
 12867  34AB  0823               	movf	??___fleq+3,w
 12868  34AC  0422               	iorwf	??___fleq+2,w
 12869  34AD  0421               	iorwf	??___fleq+1,w
 12870  34AE  0420               	iorwf	??___fleq,w
 12871  34AF  1D03               	skipz
 12872  34B0  2CB9               	goto	l1079
 12873  34B1  3000               	movlw	0
 12874  34B2  00F8               	movwf	___fleq@ff2+3
 12875  34B3  3000               	movlw	0
 12876  34B4  00F7               	movwf	___fleq@ff2+2
 12877  34B5  3000               	movlw	0
 12878  34B6  00F6               	movwf	___fleq@ff2+1
 12879  34B7  3000               	movlw	0
 12880  34B8  00F5               	movwf	___fleq@ff2
 12881  34B9                     l1079:	
 12882  34B9  0878               	movf	___fleq@ff2+3,w
 12883  34BA  0674               	xorwf	___fleq@ff1+3,w
 12884  34BB  1D03               	skipz
 12885  34BC  2CC7               	goto	u10225
 12886  34BD  0877               	movf	___fleq@ff2+2,w
 12887  34BE  0673               	xorwf	___fleq@ff1+2,w
 12888  34BF  1D03               	skipz
 12889  34C0  2CC7               	goto	u10225
 12890  34C1  0876               	movf	___fleq@ff2+1,w
 12891  34C2  0672               	xorwf	___fleq@ff1+1,w
 12892  34C3  1D03               	skipz
 12893  34C4  2CC7               	goto	u10225
 12894  34C5  0875               	movf	___fleq@ff2,w
 12895  34C6  0671               	xorwf	___fleq@ff1,w
 12896  34C7                     u10225:	
 12897  34C7  1903               	skipnz
 12898  34C8  2CCB               	goto	l7341
 12899  34C9  1003               	clrc
 12900  34CA  0008               	return
 12901  34CB                     l7341:	
 12902  34CB  1403               	setc
 12903  34CC  0008               	return
 12904  34CD                     __end_of___fleq:	
 12905                           
 12906                           	psect	text28
 12907  343F                     __ptext28:	
 12908 ;; *************** function ___awmod *****************
 12909 ;; Defined at:
 12910 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  divisor         2    1[COMMON] int 
 12913 ;;  dividend        2    3[COMMON] int 
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;  sign            1    7[COMMON] unsigned char 
 12916 ;;  counter         1    6[COMMON] unsigned char 
 12917 ;; Return value:  Size  Location     Type
 12918 ;;                  2    1[COMMON] int 
 12919 ;; Registers used:
 12920 ;;		wreg, status,2, status,0
 12921 ;; Tracked objects:
 12922 ;;		On entry : 0/0
 12923 ;;		On exit  : 0/0
 12924 ;;		Unchanged: 0/0
 12925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12930 ;;Total ram usage:        7 bytes
 12931 ;; Hardware stack levels used:    1
 12932 ;; Hardware stack levels required when called:    1
 12933 ;; This function calls:
 12934 ;;		Nothing
 12935 ;; This function is called by:
 12936 ;;		_efgtoa
 12937 ;; This function uses a non-reentrant model
 12938 ;;
 12939                           
 12940                           
 12941                           ;psect for function ___awmod
 12942  343F                     ___awmod:	
 12943                           
 12944                           ;incstack = 0
 12945                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12946  343F  01F7               	clrf	___awmod@sign
 12947  3440  1FF4               	btfss	___awmod@dividend+1,7
 12948  3441  2C49               	goto	l4855
 12949  3442  09F3               	comf	___awmod@dividend,f
 12950  3443  09F4               	comf	___awmod@dividend+1,f
 12951  3444  0AF3               	incf	___awmod@dividend,f
 12952  3445  1903               	skipnz
 12953  3446  0AF4               	incf	___awmod@dividend+1,f
 12954  3447  01F7               	clrf	___awmod@sign
 12955  3448  0AF7               	incf	___awmod@sign,f
 12956  3449                     l4855:	
 12957  3449  1FF2               	btfss	___awmod@divisor+1,7
 12958  344A  2C50               	goto	l4859
 12959  344B  09F1               	comf	___awmod@divisor,f
 12960  344C  09F2               	comf	___awmod@divisor+1,f
 12961  344D  0AF1               	incf	___awmod@divisor,f
 12962  344E  1903               	skipnz
 12963  344F  0AF2               	incf	___awmod@divisor+1,f
 12964  3450                     l4859:	
 12965  3450  0871               	movf	___awmod@divisor,w
 12966  3451  0472               	iorwf	___awmod@divisor+1,w
 12967  3452  1903               	btfsc	3,2
 12968  3453  2C77               	goto	l4877
 12969  3454  01F6               	clrf	___awmod@counter
 12970  3455  0AF6               	incf	___awmod@counter,f
 12971  3456                     l4867:	
 12972  3456  1BF2               	btfsc	___awmod@divisor+1,7
 12973  3457  2C62               	goto	l4869
 12974  3458  3001               	movlw	1
 12975  3459                     u6135:	
 12976  3459  35F1               	lslf	___awmod@divisor,f
 12977  345A  0DF2               	rlf	___awmod@divisor+1,f
 12978  345B  0B89               	decfsz	9,f
 12979  345C  2C59               	goto	u6135
 12980  345D  3001               	movlw	1
 12981  345E  00F5               	movwf	??___awmod
 12982  345F  0875               	movf	??___awmod,w
 12983  3460  07F6               	addwf	___awmod@counter,f
 12984  3461  2C56               	goto	l4867
 12985  3462                     l4869:	
 12986  3462  0872               	movf	___awmod@divisor+1,w
 12987  3463  0274               	subwf	___awmod@dividend+1,w
 12988  3464  1D03               	skipz
 12989  3465  2C68               	goto	u6155
 12990  3466  0871               	movf	___awmod@divisor,w
 12991  3467  0273               	subwf	___awmod@dividend,w
 12992  3468                     u6155:	
 12993  3468  1C03               	skipc
 12994  3469  2C6E               	goto	l4873
 12995  346A  0871               	movf	___awmod@divisor,w
 12996  346B  02F3               	subwf	___awmod@dividend,f
 12997  346C  0872               	movf	___awmod@divisor+1,w
 12998  346D  3BF4               	subwfb	___awmod@dividend+1,f
 12999  346E                     l4873:	
 13000  346E  3001               	movlw	1
 13001  346F                     u6165:	
 13002  346F  36F2               	lsrf	___awmod@divisor+1,f
 13003  3470  0CF1               	rrf	___awmod@divisor,f
 13004  3471  0B89               	decfsz	9,f
 13005  3472  2C6F               	goto	u6165
 13006  3473  3001               	movlw	1
 13007  3474  02F6               	subwf	___awmod@counter,f
 13008  3475  1D03               	btfss	3,2
 13009  3476  2C62               	goto	l4869
 13010  3477                     l4877:	
 13011  3477  0877               	movf	___awmod@sign,w
 13012  3478  1903               	btfsc	3,2
 13013  3479  2C7F               	goto	l4881
 13014  347A  09F3               	comf	___awmod@dividend,f
 13015  347B  09F4               	comf	___awmod@dividend+1,f
 13016  347C  0AF3               	incf	___awmod@dividend,f
 13017  347D  1903               	skipnz
 13018  347E  0AF4               	incf	___awmod@dividend+1,f
 13019  347F                     l4881:	
 13020  347F  0874               	movf	___awmod@dividend+1,w
 13021  3480  00F2               	movwf	?___awmod+1
 13022  3481  0873               	movf	___awmod@dividend,w
 13023  3482  00F1               	movwf	?___awmod
 13024  3483  0008               	return
 13025  3484                     __end_of___awmod:	
 13026                           
 13027                           	psect	text29
 13028  35BE                     __ptext29:	
 13029 ;; *************** function ___awdiv *****************
 13030 ;; Defined at:
 13031 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;  divisor         2    1[COMMON] int 
 13034 ;;  dividend        2    3[COMMON] int 
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;  quotient        2    8[COMMON] int 
 13037 ;;  sign            1    7[COMMON] unsigned char 
 13038 ;;  counter         1    6[COMMON] unsigned char 
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  2    1[COMMON] int 
 13041 ;; Registers used:
 13042 ;;		wreg, status,2, status,0
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13052 ;;Total ram usage:        9 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:    1
 13055 ;; This function calls:
 13056 ;;		Nothing
 13057 ;; This function is called by:
 13058 ;;		_efgtoa
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           
 13063                           ;psect for function ___awdiv
 13064  35BE                     ___awdiv:	
 13065                           
 13066                           ;incstack = 0
 13067                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13068  35BE  01F7               	clrf	___awdiv@sign
 13069  35BF  1FF2               	btfss	___awdiv@divisor+1,7
 13070  35C0  2DC8               	goto	l4811
 13071  35C1  09F1               	comf	___awdiv@divisor,f
 13072  35C2  09F2               	comf	___awdiv@divisor+1,f
 13073  35C3  0AF1               	incf	___awdiv@divisor,f
 13074  35C4  1903               	skipnz
 13075  35C5  0AF2               	incf	___awdiv@divisor+1,f
 13076  35C6  01F7               	clrf	___awdiv@sign
 13077  35C7  0AF7               	incf	___awdiv@sign,f
 13078  35C8                     l4811:	
 13079  35C8  1FF4               	btfss	___awdiv@dividend+1,7
 13080  35C9  2DD3               	goto	l4817
 13081  35CA  09F3               	comf	___awdiv@dividend,f
 13082  35CB  09F4               	comf	___awdiv@dividend+1,f
 13083  35CC  0AF3               	incf	___awdiv@dividend,f
 13084  35CD  1903               	skipnz
 13085  35CE  0AF4               	incf	___awdiv@dividend+1,f
 13086  35CF  3001               	movlw	1
 13087  35D0  00F5               	movwf	??___awdiv
 13088  35D1  0875               	movf	??___awdiv,w
 13089  35D2  06F7               	xorwf	___awdiv@sign,f
 13090  35D3                     l4817:	
 13091  35D3  01F8               	clrf	___awdiv@quotient
 13092  35D4  01F9               	clrf	___awdiv@quotient+1
 13093  35D5  0871               	movf	___awdiv@divisor,w
 13094  35D6  0472               	iorwf	___awdiv@divisor+1,w
 13095  35D7  1903               	btfsc	3,2
 13096  35D8  2E02               	goto	l4839
 13097  35D9  01F6               	clrf	___awdiv@counter
 13098  35DA  0AF6               	incf	___awdiv@counter,f
 13099  35DB                     l4827:	
 13100  35DB  1BF2               	btfsc	___awdiv@divisor+1,7
 13101  35DC  2DE7               	goto	l4829
 13102  35DD  3001               	movlw	1
 13103  35DE                     u6035:	
 13104  35DE  35F1               	lslf	___awdiv@divisor,f
 13105  35DF  0DF2               	rlf	___awdiv@divisor+1,f
 13106  35E0  0B89               	decfsz	9,f
 13107  35E1  2DDE               	goto	u6035
 13108  35E2  3001               	movlw	1
 13109  35E3  00F5               	movwf	??___awdiv
 13110  35E4  0875               	movf	??___awdiv,w
 13111  35E5  07F6               	addwf	___awdiv@counter,f
 13112  35E6  2DDB               	goto	l4827
 13113  35E7                     l4829:	
 13114  35E7  3001               	movlw	1
 13115  35E8                     u6055:	
 13116  35E8  35F8               	lslf	___awdiv@quotient,f
 13117  35E9  0DF9               	rlf	___awdiv@quotient+1,f
 13118  35EA  0B89               	decfsz	9,f
 13119  35EB  2DE8               	goto	u6055
 13120  35EC  0872               	movf	___awdiv@divisor+1,w
 13121  35ED  0274               	subwf	___awdiv@dividend+1,w
 13122  35EE  1D03               	skipz
 13123  35EF  2DF2               	goto	u6065
 13124  35F0  0871               	movf	___awdiv@divisor,w
 13125  35F1  0273               	subwf	___awdiv@dividend,w
 13126  35F2                     u6065:	
 13127  35F2  1C03               	skipc
 13128  35F3  2DF9               	goto	l4835
 13129  35F4  0871               	movf	___awdiv@divisor,w
 13130  35F5  02F3               	subwf	___awdiv@dividend,f
 13131  35F6  0872               	movf	___awdiv@divisor+1,w
 13132  35F7  3BF4               	subwfb	___awdiv@dividend+1,f
 13133  35F8  1478               	bsf	___awdiv@quotient,0
 13134  35F9                     l4835:	
 13135  35F9  3001               	movlw	1
 13136  35FA                     u6075:	
 13137  35FA  36F2               	lsrf	___awdiv@divisor+1,f
 13138  35FB  0CF1               	rrf	___awdiv@divisor,f
 13139  35FC  0B89               	decfsz	9,f
 13140  35FD  2DFA               	goto	u6075
 13141  35FE  3001               	movlw	1
 13142  35FF  02F6               	subwf	___awdiv@counter,f
 13143  3600  1D03               	btfss	3,2
 13144  3601  2DE7               	goto	l4829
 13145  3602                     l4839:	
 13146  3602  0877               	movf	___awdiv@sign,w
 13147  3603  1903               	btfsc	3,2
 13148  3604  2E0A               	goto	l4843
 13149  3605  09F8               	comf	___awdiv@quotient,f
 13150  3606  09F9               	comf	___awdiv@quotient+1,f
 13151  3607  0AF8               	incf	___awdiv@quotient,f
 13152  3608  1903               	skipnz
 13153  3609  0AF9               	incf	___awdiv@quotient+1,f
 13154  360A                     l4843:	
 13155  360A  0879               	movf	___awdiv@quotient+1,w
 13156  360B  00F2               	movwf	?___awdiv+1
 13157  360C  0878               	movf	___awdiv@quotient,w
 13158  360D  00F1               	movwf	?___awdiv
 13159  360E  0008               	return
 13160  360F                     __end_of___awdiv:	
 13161                           
 13162                           	psect	text30
 13163  1B72                     __ptext30:	
 13164 ;; *************** function _dtoa *****************
 13165 ;; Defined at:
 13166 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 13169 ;;		 -> vsnprintf@f(6), 
 13170 ;;  d               8   18[BANK0 ] long long 
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;  n               8   37[BANK0 ] long long 
 13173 ;;  i               2   45[BANK0 ] int 
 13174 ;;  s               2   35[BANK0 ] int 
 13175 ;;  w               2   33[BANK0 ] int 
 13176 ;;  p               2   31[BANK0 ] int 
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  2   16[BANK0 ] int 
 13179 ;; Registers used:
 13180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13186 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13187 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13188 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;Total ram usage:       31 bytes
 13191 ;; Hardware stack levels used:    1
 13192 ;; Hardware stack levels required when called:    5
 13193 ;; This function calls:
 13194 ;;		___aodiv
 13195 ;;		___aomod
 13196 ;;		_abs
 13197 ;;		_pad
 13198 ;; This function is called by:
 13199 ;;		_vfpfcnvrt
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           
 13204                           ;psect for function _dtoa
 13205  1B72                     _dtoa:	
 13206                           
 13207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13208                           
 13209                           ;incstack = 0
 13210                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13211  1B72  0020               	movlb	0	; select bank0
 13212  1B73  0832               	movf	dtoa@d,w
 13213  1B74  00C5               	movwf	dtoa@n
 13214  1B75  0833               	movf	dtoa@d+1,w
 13215  1B76  00C6               	movwf	dtoa@n+1
 13216  1B77  0834               	movf	dtoa@d+2,w
 13217  1B78  00C7               	movwf	dtoa@n+2
 13218  1B79  0835               	movf	dtoa@d+3,w
 13219  1B7A  00C8               	movwf	dtoa@n+3
 13220  1B7B  0836               	movf	dtoa@d+4,w
 13221  1B7C  00C9               	movwf	dtoa@n+4
 13222  1B7D  0837               	movf	dtoa@d+5,w
 13223  1B7E  00CA               	movwf	dtoa@n+5
 13224  1B7F  0838               	movf	dtoa@d+6,w
 13225  1B80  00CB               	movwf	dtoa@n+6
 13226  1B81  0839               	movf	dtoa@d+7,w
 13227  1B82  00CC               	movwf	dtoa@n+7
 13228                           
 13229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13230  1B83  3045               	movlw	low dtoa@n
 13231  1B84  0086               	movwf	6
 13232  1B85  3000               	movlw	high dtoa@n
 13233  1B86  0087               	movwf	7
 13234  1B87  3F47               	moviw [7]fsr1
 13235  1B88  00BA               	movwf	??_dtoa
 13236  1B89  1FBA               	btfss	??_dtoa,7
 13237  1B8A  2B8D               	goto	u10240
 13238  1B8B  3001               	movlw	1
 13239  1B8C  2B8E               	goto	u10250
 13240  1B8D                     u10240:	
 13241  1B8D  3000               	movlw	0
 13242  1B8E                     u10250:	
 13243  1B8E  0020               	movlb	0	; select bank0
 13244  1B8F  00BB               	movwf	??_dtoa+1
 13245  1B90  01BC               	clrf	??_dtoa+2
 13246  1B91  083B               	movf	??_dtoa+1,w
 13247  1B92  00C3               	movwf	dtoa@s
 13248  1B93  083C               	movf	??_dtoa+2,w
 13249  1B94  00C4               	movwf	dtoa@s+1
 13250                           
 13251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13252  1B95  0843               	movf	dtoa@s,w
 13253  1B96  0444               	iorwf	dtoa@s+1,w
 13254  1B97  1903               	btfsc	3,2
 13255  1B98  2BB7               	goto	l606
 13256                           
 13257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13258  1B99  09C5               	comf	dtoa@n,f
 13259  1B9A  09C6               	comf	dtoa@n+1,f
 13260  1B9B  09C7               	comf	dtoa@n+2,f
 13261  1B9C  09C8               	comf	dtoa@n+3,f
 13262  1B9D  09C9               	comf	dtoa@n+4,f
 13263  1B9E  09CA               	comf	dtoa@n+5,f
 13264  1B9F  09CB               	comf	dtoa@n+6,f
 13265  1BA0  09CC               	comf	dtoa@n+7,f
 13266  1BA1  0AC5               	incf	dtoa@n,f
 13267  1BA2  1D03               	skipz
 13268  1BA3  2BB7               	goto	l606
 13269  1BA4  0AC6               	incf	dtoa@n+1,f
 13270  1BA5  1D03               	skipz
 13271  1BA6  2BB7               	goto	l606
 13272  1BA7  0AC7               	incf	dtoa@n+2,f
 13273  1BA8  1D03               	skipz
 13274  1BA9  2BB7               	goto	l606
 13275  1BAA  0AC8               	incf	dtoa@n+3,f
 13276  1BAB  1D03               	skipz
 13277  1BAC  2BB7               	goto	l606
 13278  1BAD  0AC9               	incf	dtoa@n+4,f
 13279  1BAE  1D03               	skipz
 13280  1BAF  2BB7               	goto	l606
 13281  1BB0  0ACA               	incf	dtoa@n+5,f
 13282  1BB1  1D03               	skipz
 13283  1BB2  2BB7               	goto	l606
 13284  1BB3  0ACB               	incf	dtoa@n+6,f
 13285  1BB4  1D03               	skipz
 13286  1BB5  2BB7               	goto	l606
 13287  1BB6  0ACC               	incf	dtoa@n+7,f
 13288  1BB7                     l606:	
 13289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 13290                           
 13291                           
 13292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13293  1BB7  0023               	movlb	3	; select bank3
 13294  1BB8  1BC1               	btfsc	(_prec+1)^(0+384),7
 13295  1BB9  2BBE               	goto	l607
 13296                           
 13297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13298  1BBA  30FD               	movlw	253
 13299  1BBB  05C2               	andwf	_flags^(0+384),f
 13300  1BBC  30FF               	movlw	255
 13301  1BBD  05C3               	andwf	(_flags+1)^(0+384),f
 13302  1BBE                     l607:	
 13303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 13304                           
 13305                           
 13306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13307  1BBE  0841               	movf	(_prec+1)^(0+384),w
 13308  1BBF  3A80               	xorlw	128
 13309  1BC0  0020               	movlb	0	; select bank0
 13310  1BC1  00BA               	movwf	??_dtoa
 13311  1BC2  3080               	movlw	128
 13312  1BC3  023A               	subwf	??_dtoa,w
 13313  1BC4  1D03               	skipz
 13314  1BC5  2BC9               	goto	u10295
 13315  1BC6  3001               	movlw	1
 13316  1BC7  0023               	movlb	3	; select bank3
 13317  1BC8  0240               	subwf	_prec^(0+384),w
 13318  1BC9                     u10295:	
 13319  1BC9  1803               	skipnc
 13320  1BCA  2BD1               	goto	l7377
 13321  1BCB  3001               	movlw	1
 13322  1BCC  0020               	movlb	0	; select bank0
 13323  1BCD  00BF               	movwf	dtoa@p
 13324  1BCE  3000               	movlw	0
 13325  1BCF  00C0               	movwf	dtoa@p+1
 13326  1BD0  2BD9               	goto	l611
 13327  1BD1                     l7377:	
 13328  1BD1  0023               	movlb	3	; select bank3
 13329  1BD2  0841               	movf	(_prec+1)^(0+384),w
 13330  1BD3  0020               	movlb	0	; select bank0
 13331  1BD4  00C0               	movwf	dtoa@p+1
 13332  1BD5  0023               	movlb	3	; select bank3
 13333  1BD6  0840               	movf	_prec^(0+384),w
 13334  1BD7  0020               	movlb	0	; select bank0
 13335  1BD8  00BF               	movwf	dtoa@p
 13336  1BD9                     l611:	
 13337                           
 13338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13339  1BD9  0023               	movlb	3	; select bank3
 13340  1BDA  083F               	movf	(_width+1)^(0+384),w
 13341  1BDB  0020               	movlb	0	; select bank0
 13342  1BDC  00C2               	movwf	dtoa@w+1
 13343  1BDD  0023               	movlb	3	; select bank3
 13344  1BDE  083E               	movf	_width^(0+384),w
 13345  1BDF  0020               	movlb	0	; select bank0
 13346  1BE0  00C1               	movwf	dtoa@w
 13347                           
 13348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13349  1BE1  0843               	movf	dtoa@s,w
 13350  1BE2  0444               	iorwf	dtoa@s+1,w
 13351  1BE3  1D03               	btfss	3,2
 13352  1BE4  2BE8               	goto	l7383
 13353  1BE5  0023               	movlb	3	; select bank3
 13354  1BE6  1D42               	btfss	_flags^(0+384),2
 13355  1BE7  2BED               	goto	l612
 13356  1BE8                     l7383:	
 13357                           
 13358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13359  1BE8  30FF               	movlw	255
 13360  1BE9  0020               	movlb	0	; select bank0
 13361  1BEA  07C1               	addwf	dtoa@w,f
 13362  1BEB  30FF               	movlw	255
 13363  1BEC  3DC2               	addwfc	dtoa@w+1,f
 13364  1BED                     l612:	
 13365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 13366                           
 13367                           
 13368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13369  1BED  304F               	movlw	79
 13370  1BEE  0020               	movlb	0	; select bank0
 13371  1BEF  00CD               	movwf	dtoa@i
 13372  1BF0  3000               	movlw	0
 13373  1BF1  00CE               	movwf	dtoa@i+1
 13374                           
 13375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13376  1BF2  0024               	movlb	4	; select bank4
 13377  1BF3  01EF               	clrf	(_dbuf^(0+512)+79)
 13378                           
 13379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13380  1BF4  2C83               	goto	l615
 13381  1BF5                     l7397:	
 13382  1BF5  0020               	movlb	0	; select bank0
 13383  1BF6  0845               	movf	dtoa@n,w
 13384  1BF7  0446               	iorwf	dtoa@n+1,w
 13385  1BF8  0447               	iorwf	dtoa@n+2,w
 13386  1BF9  0448               	iorwf	dtoa@n+3,w
 13387  1BFA  0449               	iorwf	dtoa@n+4,w
 13388  1BFB  044A               	iorwf	dtoa@n+5,w
 13389  1BFC  044B               	iorwf	dtoa@n+6,w
 13390  1BFD  044C               	iorwf	dtoa@n+7,w
 13391  1BFE  1D03               	skipz
 13392  1BFF  2C1A               	goto	l7387
 13393  1C00  0840               	movf	dtoa@p+1,w
 13394  1C01  3A80               	xorlw	128
 13395  1C02  00BA               	movwf	??_dtoa
 13396  1C03  3080               	movlw	128
 13397  1C04  023A               	subwf	??_dtoa,w
 13398  1C05  1D03               	skipz
 13399  1C06  2C09               	goto	u10345
 13400  1C07  3001               	movlw	1
 13401  1C08  023F               	subwf	dtoa@p,w
 13402  1C09                     u10345:	
 13403  1C09  1803               	skipnc
 13404  1C0A  2C1A               	goto	l7387
 13405  1C0B  0020               	movlb	0	; select bank0
 13406  1C0C  0842               	movf	dtoa@w+1,w
 13407  1C0D  3A80               	xorlw	128
 13408  1C0E  00BA               	movwf	??_dtoa
 13409  1C0F  3080               	movlw	128
 13410  1C10  023A               	subwf	??_dtoa,w
 13411  1C11  1D03               	skipz
 13412  1C12  2C15               	goto	u10355
 13413  1C13  3001               	movlw	1
 13414  1C14  0241               	subwf	dtoa@w,w
 13415  1C15                     u10355:	
 13416  1C15  1C03               	skipc
 13417  1C16  2C8F               	goto	l7405
 13418  1C17  0023               	movlb	3	; select bank3
 13419  1C18  1CC2               	btfss	_flags^(0+384),1
 13420  1C19  2C8F               	goto	l7405
 13421  1C1A                     l7387:	
 13422                           
 13423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13424  1C1A  30FF               	movlw	255
 13425  1C1B  0020               	movlb	0	; select bank0
 13426  1C1C  07CD               	addwf	dtoa@i,f
 13427  1C1D  30FF               	movlw	255
 13428  1C1E  3DCE               	addwfc	dtoa@i+1,f
 13429                           
 13430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13431  1C1F  300A               	movlw	10
 13432  1C20  00A0               	movwf	___aomod@divisor
 13433  1C21  01A1               	clrf	___aomod@divisor+1
 13434  1C22  01A2               	clrf	___aomod@divisor+2
 13435  1C23  01A3               	clrf	___aomod@divisor+3
 13436  1C24  01A4               	clrf	___aomod@divisor+4
 13437  1C25  01A5               	clrf	___aomod@divisor+5
 13438  1C26  01A6               	clrf	___aomod@divisor+6
 13439  1C27  01A7               	clrf	___aomod@divisor+7
 13440  1C28  0845               	movf	dtoa@n,w
 13441  1C29  00A8               	movwf	___aomod@dividend
 13442  1C2A  0846               	movf	dtoa@n+1,w
 13443  1C2B  00A9               	movwf	___aomod@dividend+1
 13444  1C2C  0847               	movf	dtoa@n+2,w
 13445  1C2D  00AA               	movwf	___aomod@dividend+2
 13446  1C2E  0848               	movf	dtoa@n+3,w
 13447  1C2F  00AB               	movwf	___aomod@dividend+3
 13448  1C30  0849               	movf	dtoa@n+4,w
 13449  1C31  00AC               	movwf	___aomod@dividend+4
 13450  1C32  084A               	movf	dtoa@n+5,w
 13451  1C33  00AD               	movwf	___aomod@dividend+5
 13452  1C34  084B               	movf	dtoa@n+6,w
 13453  1C35  00AE               	movwf	___aomod@dividend+6
 13454  1C36  084C               	movf	dtoa@n+7,w
 13455  1C37  00AF               	movwf	___aomod@dividend+7
 13456  1C38  31A3  2379  319B   	fcall	___aomod
 13457  1C3B  0020               	movlb	0	; select bank0
 13458  1C3C  0821               	movf	?___aomod+1,w
 13459  1C3D  00F5               	movwf	abs@a+1
 13460  1C3E  0820               	movf	?___aomod,w
 13461  1C3F  00F4               	movwf	abs@a
 13462  1C40  31B1  2154  319B   	fcall	_abs
 13463  1C43  0874               	movf	?_abs,w
 13464  1C44  3E30               	addlw	48
 13465  1C45  0020               	movlb	0	; select bank0
 13466  1C46  00BA               	movwf	??_dtoa
 13467  1C47  084D               	movf	dtoa@i,w
 13468  1C48  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13469  1C49  0086               	movwf	6
 13470  1C4A  3002               	movlw	2	; select bank4/5
 13471  1C4B  0087               	movwf	7
 13472  1C4C  083A               	movf	??_dtoa,w
 13473  1C4D  0081               	movwf	1
 13474                           
 13475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13476  1C4E  30FF               	movlw	255
 13477  1C4F  07BF               	addwf	dtoa@p,f
 13478  1C50  30FF               	movlw	255
 13479  1C51  3DC0               	addwfc	dtoa@p+1,f
 13480                           
 13481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13482  1C52  30FF               	movlw	255
 13483  1C53  07C1               	addwf	dtoa@w,f
 13484  1C54  30FF               	movlw	255
 13485  1C55  3DC2               	addwfc	dtoa@w+1,f
 13486                           
 13487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13488  1C56  300A               	movlw	10
 13489  1C57  00A0               	movwf	___aodiv@divisor
 13490  1C58  01A1               	clrf	___aodiv@divisor+1
 13491  1C59  01A2               	clrf	___aodiv@divisor+2
 13492  1C5A  01A3               	clrf	___aodiv@divisor+3
 13493  1C5B  01A4               	clrf	___aodiv@divisor+4
 13494  1C5C  01A5               	clrf	___aodiv@divisor+5
 13495  1C5D  01A6               	clrf	___aodiv@divisor+6
 13496  1C5E  01A7               	clrf	___aodiv@divisor+7
 13497  1C5F  0845               	movf	dtoa@n,w
 13498  1C60  00A8               	movwf	___aodiv@dividend
 13499  1C61  0846               	movf	dtoa@n+1,w
 13500  1C62  00A9               	movwf	___aodiv@dividend+1
 13501  1C63  0847               	movf	dtoa@n+2,w
 13502  1C64  00AA               	movwf	___aodiv@dividend+2
 13503  1C65  0848               	movf	dtoa@n+3,w
 13504  1C66  00AB               	movwf	___aodiv@dividend+3
 13505  1C67  0849               	movf	dtoa@n+4,w
 13506  1C68  00AC               	movwf	___aodiv@dividend+4
 13507  1C69  084A               	movf	dtoa@n+5,w
 13508  1C6A  00AD               	movwf	___aodiv@dividend+5
 13509  1C6B  084B               	movf	dtoa@n+6,w
 13510  1C6C  00AE               	movwf	___aodiv@dividend+6
 13511  1C6D  084C               	movf	dtoa@n+7,w
 13512  1C6E  00AF               	movwf	___aodiv@dividend+7
 13513  1C6F  31A7  270D  319B   	fcall	___aodiv
 13514  1C72  0020               	movlb	0	; select bank0
 13515  1C73  0820               	movf	?___aodiv,w
 13516  1C74  00C5               	movwf	dtoa@n
 13517  1C75  0821               	movf	?___aodiv+1,w
 13518  1C76  00C6               	movwf	dtoa@n+1
 13519  1C77  0822               	movf	?___aodiv+2,w
 13520  1C78  00C7               	movwf	dtoa@n+2
 13521  1C79  0823               	movf	?___aodiv+3,w
 13522  1C7A  00C8               	movwf	dtoa@n+3
 13523  1C7B  0824               	movf	?___aodiv+4,w
 13524  1C7C  00C9               	movwf	dtoa@n+4
 13525  1C7D  0825               	movf	?___aodiv+5,w
 13526  1C7E  00CA               	movwf	dtoa@n+5
 13527  1C7F  0826               	movf	?___aodiv+6,w
 13528  1C80  00CB               	movwf	dtoa@n+6
 13529  1C81  0827               	movf	?___aodiv+7,w
 13530  1C82  00CC               	movwf	dtoa@n+7
 13531  1C83                     l615:	
 13532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13533                           
 13534                           
 13535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13536  1C83  0020               	movlb	0	; select bank0
 13537  1C84  084E               	movf	dtoa@i+1,w
 13538  1C85  3A80               	xorlw	128
 13539  1C86  00BA               	movwf	??_dtoa
 13540  1C87  3080               	movlw	128
 13541  1C88  023A               	subwf	??_dtoa,w
 13542  1C89  1D03               	skipz
 13543  1C8A  2C8D               	goto	u10325
 13544  1C8B  3001               	movlw	1
 13545  1C8C  024D               	subwf	dtoa@i,w
 13546  1C8D                     u10325:	
 13547  1C8D  1803               	btfsc	3,0
 13548  1C8E  2BF5               	goto	l7397
 13549  1C8F                     l7405:	
 13550                           
 13551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13552  1C8F  0020               	movlb	0	; select bank0
 13553  1C90  0843               	movf	dtoa@s,w
 13554  1C91  0444               	iorwf	dtoa@s+1,w
 13555  1C92  1D03               	btfss	3,2
 13556  1C93  2C97               	goto	l7409
 13557  1C94  0023               	movlb	3	; select bank3
 13558  1C95  1D42               	btfss	_flags^(0+384),2
 13559  1C96  2CAF               	goto	l7419
 13560  1C97                     l7409:	
 13561                           
 13562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13563  1C97  30FF               	movlw	255
 13564  1C98  0020               	movlb	0	; select bank0
 13565  1C99  07CD               	addwf	dtoa@i,f
 13566  1C9A  30FF               	movlw	255
 13567  1C9B  3DCE               	addwfc	dtoa@i+1,f
 13568                           
 13569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13570  1C9C  0843               	movf	dtoa@s,w
 13571  1C9D  0444               	iorwf	dtoa@s+1,w
 13572  1C9E  1D03               	btfss	3,2
 13573  1C9F  2CA2               	goto	l7415
 13574  1CA0  302B               	movlw	43
 13575  1CA1  2CA3               	goto	L12
 13576  1CA2                     l7415:	
 13577  1CA2  302D               	movlw	45
 13578  1CA3                     L12:	
 13579  1CA3  00BD               	movwf	_dtoa$1170
 13580  1CA4  3000               	movlw	0
 13581  1CA5  00BE               	movwf	_dtoa$1170+1
 13582  1CA6  083D               	movf	_dtoa$1170,w
 13583  1CA7  00BA               	movwf	??_dtoa
 13584  1CA8  084D               	movf	dtoa@i,w
 13585  1CA9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13586  1CAA  0086               	movwf	6
 13587  1CAB  3002               	movlw	2	; select bank4/5
 13588  1CAC  0087               	movwf	7
 13589  1CAD  083A               	movf	??_dtoa,w
 13590  1CAE  0081               	movwf	1
 13591  1CAF                     l7419:	
 13592                           
 13593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13594  1CAF  0020               	movlb	0	; select bank0
 13595  1CB0  0831               	movf	dtoa@fp+1,w
 13596  1CB1  00A7               	movwf	pad@fp+1
 13597  1CB2  0830               	movf	dtoa@fp,w
 13598  1CB3  00A6               	movwf	pad@fp
 13599  1CB4  084D               	movf	dtoa@i,w
 13600  1CB5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13601  1CB6  00BA               	movwf	??_dtoa
 13602  1CB7  083A               	movf	??_dtoa,w
 13603  1CB8  00A8               	movwf	pad@buf
 13604  1CB9  0842               	movf	dtoa@w+1,w
 13605  1CBA  00AA               	movwf	pad@p+1
 13606  1CBB  0841               	movf	dtoa@w,w
 13607  1CBC  00A9               	movwf	pad@p
 13608  1CBD  31B5  256D         	fcall	_pad
 13609  1CBF  0020               	movlb	0	; select bank0
 13610  1CC0  0827               	movf	?_pad+1,w
 13611  1CC1  00B1               	movwf	?_dtoa+1
 13612  1CC2  0826               	movf	?_pad,w
 13613  1CC3  00B0               	movwf	?_dtoa
 13614  1CC4  0008               	return
 13615  1CC5                     __end_of_dtoa:	
 13616                           
 13617                           	psect	text31
 13618  3154                     __ptext31:	
 13619 ;; *************** function _abs *****************
 13620 ;; Defined at:
 13621 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  a               2    4[COMMON] int 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  2    4[COMMON] int 
 13628 ;; Registers used:
 13629 ;;		wreg, status,2, status,0
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13639 ;;Total ram usage:        4 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    1
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_dtoa
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           
 13650                           ;psect for function _abs
 13651  3154                     _abs:	
 13652                           
 13653                           ;incstack = 0
 13654                           ; Regs used in _abs: [wreg+status,2+status,0]
 13655  3154  0875               	movf	abs@a+1,w
 13656  3155  3A80               	xorlw	128
 13657  3156  00F6               	movwf	??_abs
 13658  3157  3080               	movlw	128
 13659  3158  0276               	subwf	??_abs,w
 13660  3159  1D03               	skipz
 13661  315A  295D               	goto	u5445
 13662  315B  3001               	movlw	1
 13663  315C  0274               	subwf	abs@a,w
 13664  315D                     u5445:	
 13665  315D  1803               	skipnc
 13666  315E  0008               	return
 13667  315F  0974               	comf	abs@a,w
 13668  3160  00F6               	movwf	??_abs
 13669  3161  0975               	comf	abs@a+1,w
 13670  3162  00F7               	movwf	??_abs+1
 13671  3163  0AF6               	incf	??_abs,f
 13672  3164  1903               	skipnz
 13673  3165  0AF7               	incf	??_abs+1,f
 13674  3166  0876               	movf	??_abs,w
 13675  3167  00F4               	movwf	?_abs
 13676  3168  0877               	movf	??_abs+1,w
 13677  3169  00F5               	movwf	?_abs+1
 13678  316A  0008               	return
 13679  316B                     __end_of_abs:	
 13680                           
 13681                           	psect	text32
 13682  2379                     __ptext32:	
 13683 ;; *************** function ___aomod *****************
 13684 ;; Defined at:
 13685 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  divisor         8    0[BANK0 ] long long 
 13688 ;;  dividend        8    8[BANK0 ] long long 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;  sign            1    3[COMMON] unsigned char 
 13691 ;;  counter         1    2[COMMON] unsigned char 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  8    0[BANK0 ] long long 
 13694 ;; Registers used:
 13695 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13701 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13704 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13705 ;;Total ram usage:       19 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:    1
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_dtoa
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function ___aomod
 13717  2379                     ___aomod:	
 13718                           
 13719                           ;incstack = 0
 13720                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13721  2379  01F3               	clrf	___aomod@sign
 13722  237A  3028               	movlw	low ___aomod@dividend
 13723  237B  0086               	movwf	6
 13724  237C  3000               	movlw	high ___aomod@dividend
 13725  237D  0087               	movwf	7
 13726  237E  3F47               	moviw [7]fsr1
 13727  237F  00F1               	movwf	??___aomod
 13728  2380  1FF1               	btfss	??___aomod,7
 13729  2381  2BA3               	goto	l4779
 13730  2382  0020               	movlb	0	; select bank0
 13731  2383  09A8               	comf	___aomod@dividend,f
 13732  2384  09A9               	comf	___aomod@dividend+1,f
 13733  2385  09AA               	comf	___aomod@dividend+2,f
 13734  2386  09AB               	comf	___aomod@dividend+3,f
 13735  2387  09AC               	comf	___aomod@dividend+4,f
 13736  2388  09AD               	comf	___aomod@dividend+5,f
 13737  2389  09AE               	comf	___aomod@dividend+6,f
 13738  238A  09AF               	comf	___aomod@dividend+7,f
 13739  238B  0AA8               	incf	___aomod@dividend,f
 13740  238C  1D03               	skipz
 13741  238D  2BA1               	goto	u591lld
 13742  238E  0AA9               	incf	___aomod@dividend+1,f
 13743  238F  1D03               	skipz
 13744  2390  2BA1               	goto	u591lld
 13745  2391  0AAA               	incf	___aomod@dividend+2,f
 13746  2392  1D03               	skipz
 13747  2393  2BA1               	goto	u591lld
 13748  2394  0AAB               	incf	___aomod@dividend+3,f
 13749  2395  1D03               	skipz
 13750  2396  2BA1               	goto	u591lld
 13751  2397  0AAC               	incf	___aomod@dividend+4,f
 13752  2398  1D03               	skipz
 13753  2399  2BA1               	goto	u591lld
 13754  239A  0AAD               	incf	___aomod@dividend+5,f
 13755  239B  1D03               	skipz
 13756  239C  2BA1               	goto	u591lld
 13757  239D  0AAE               	incf	___aomod@dividend+6,f
 13758  239E  1D03               	skipz
 13759  239F  2BA1               	goto	u591lld
 13760  23A0  0AAF               	incf	___aomod@dividend+7,f
 13761  23A1                     u591lld:	
 13762  23A1  01F3               	clrf	___aomod@sign
 13763  23A2  0AF3               	incf	___aomod@sign,f
 13764  23A3                     l4779:	
 13765  23A3  3020               	movlw	low ___aomod@divisor
 13766  23A4  0086               	movwf	6
 13767  23A5  3000               	movlw	high ___aomod@divisor
 13768  23A6  0087               	movwf	7
 13769  23A7  3F47               	moviw [7]fsr1
 13770  23A8  00F1               	movwf	??___aomod
 13771  23A9  1FF1               	btfss	??___aomod,7
 13772  23AA  2BCA               	goto	l4783
 13773  23AB  0020               	movlb	0	; select bank0
 13774  23AC  09A0               	comf	___aomod@divisor,f
 13775  23AD  09A1               	comf	___aomod@divisor+1,f
 13776  23AE  09A2               	comf	___aomod@divisor+2,f
 13777  23AF  09A3               	comf	___aomod@divisor+3,f
 13778  23B0  09A4               	comf	___aomod@divisor+4,f
 13779  23B1  09A5               	comf	___aomod@divisor+5,f
 13780  23B2  09A6               	comf	___aomod@divisor+6,f
 13781  23B3  09A7               	comf	___aomod@divisor+7,f
 13782  23B4  0AA0               	incf	___aomod@divisor,f
 13783  23B5  1D03               	skipz
 13784  23B6  2BCA               	goto	l4783
 13785  23B7  0AA1               	incf	___aomod@divisor+1,f
 13786  23B8  1D03               	skipz
 13787  23B9  2BCA               	goto	l4783
 13788  23BA  0AA2               	incf	___aomod@divisor+2,f
 13789  23BB  1D03               	skipz
 13790  23BC  2BCA               	goto	l4783
 13791  23BD  0AA3               	incf	___aomod@divisor+3,f
 13792  23BE  1D03               	skipz
 13793  23BF  2BCA               	goto	l4783
 13794  23C0  0AA4               	incf	___aomod@divisor+4,f
 13795  23C1  1D03               	skipz
 13796  23C2  2BCA               	goto	l4783
 13797  23C3  0AA5               	incf	___aomod@divisor+5,f
 13798  23C4  1D03               	skipz
 13799  23C5  2BCA               	goto	l4783
 13800  23C6  0AA6               	incf	___aomod@divisor+6,f
 13801  23C7  1D03               	skipz
 13802  23C8  2BCA               	goto	l4783
 13803  23C9  0AA7               	incf	___aomod@divisor+7,f
 13804  23CA                     l4783:	
 13805  23CA  0020               	movlb	0	; select bank0
 13806  23CB  0820               	movf	___aomod@divisor,w
 13807  23CC  0421               	iorwf	___aomod@divisor+1,w
 13808  23CD  0422               	iorwf	___aomod@divisor+2,w
 13809  23CE  0423               	iorwf	___aomod@divisor+3,w
 13810  23CF  0424               	iorwf	___aomod@divisor+4,w
 13811  23D0  0425               	iorwf	___aomod@divisor+5,w
 13812  23D1  0426               	iorwf	___aomod@divisor+6,w
 13813  23D2  0427               	iorwf	___aomod@divisor+7,w
 13814  23D3  1903               	skipnz
 13815  23D4  2C22               	goto	l4799
 13816  23D5  01F2               	clrf	___aomod@counter
 13817  23D6  0AF2               	incf	___aomod@counter,f
 13818  23D7                     l4791:	
 13819  23D7  1BA7               	btfsc	___aomod@divisor+7,7
 13820  23D8  2BE6               	goto	l4793
 13821  23D9  35A0               	lslf	___aomod@divisor,f
 13822  23DA  0DA1               	rlf	___aomod@divisor+1,f
 13823  23DB  0DA2               	rlf	___aomod@divisor+2,f
 13824  23DC  0DA3               	rlf	___aomod@divisor+3,f
 13825  23DD  0DA4               	rlf	___aomod@divisor+4,f
 13826  23DE  0DA5               	rlf	___aomod@divisor+5,f
 13827  23DF  0DA6               	rlf	___aomod@divisor+6,f
 13828  23E0  0DA7               	rlf	___aomod@divisor+7,f
 13829  23E1  3001               	movlw	1
 13830  23E2  00F1               	movwf	??___aomod
 13831  23E3  0871               	movf	??___aomod,w
 13832  23E4  07F2               	addwf	___aomod@counter,f
 13833  23E5  2BD7               	goto	l4791
 13834  23E6                     l4793:	
 13835  23E6  0827               	movf	___aomod@divisor+7,w
 13836  23E7  022F               	subwf	___aomod@dividend+7,w
 13837  23E8  1D03               	skipz
 13838  23E9  2C04               	goto	u5965
 13839  23EA  0826               	movf	___aomod@divisor+6,w
 13840  23EB  022E               	subwf	___aomod@dividend+6,w
 13841  23EC  1D03               	skipz
 13842  23ED  2C04               	goto	u5965
 13843  23EE  0825               	movf	___aomod@divisor+5,w
 13844  23EF  022D               	subwf	___aomod@dividend+5,w
 13845  23F0  1D03               	skipz
 13846  23F1  2C04               	goto	u5965
 13847  23F2  0824               	movf	___aomod@divisor+4,w
 13848  23F3  022C               	subwf	___aomod@dividend+4,w
 13849  23F4  1D03               	skipz
 13850  23F5  2C04               	goto	u5965
 13851  23F6  0823               	movf	___aomod@divisor+3,w
 13852  23F7  022B               	subwf	___aomod@dividend+3,w
 13853  23F8  1D03               	skipz
 13854  23F9  2C04               	goto	u5965
 13855  23FA  0822               	movf	___aomod@divisor+2,w
 13856  23FB  022A               	subwf	___aomod@dividend+2,w
 13857  23FC  1D03               	skipz
 13858  23FD  2C04               	goto	u5965
 13859  23FE  0821               	movf	___aomod@divisor+1,w
 13860  23FF  0229               	subwf	___aomod@dividend+1,w
 13861  2400  1D03               	skipz
 13862  2401  2C04               	goto	u5965
 13863  2402  0820               	movf	___aomod@divisor,w
 13864  2403  0228               	subwf	___aomod@dividend,w
 13865  2404                     u5965:	
 13866  2404  1C03               	skipc
 13867  2405  2C16               	goto	l4797
 13868  2406  0820               	movf	___aomod@divisor,w
 13869  2407  02A8               	subwf	___aomod@dividend,f
 13870  2408  0821               	movf	___aomod@divisor+1,w
 13871  2409  3BA9               	subwfb	___aomod@dividend+1,f
 13872  240A  0822               	movf	___aomod@divisor+2,w
 13873  240B  3BAA               	subwfb	___aomod@dividend+2,f
 13874  240C  0823               	movf	___aomod@divisor+3,w
 13875  240D  3BAB               	subwfb	___aomod@dividend+3,f
 13876  240E  0824               	movf	___aomod@divisor+4,w
 13877  240F  3BAC               	subwfb	___aomod@dividend+4,f
 13878  2410  0825               	movf	___aomod@divisor+5,w
 13879  2411  3BAD               	subwfb	___aomod@dividend+5,f
 13880  2412  0826               	movf	___aomod@divisor+6,w
 13881  2413  3BAE               	subwfb	___aomod@dividend+6,f
 13882  2414  0827               	movf	___aomod@divisor+7,w
 13883  2415  3BAF               	subwfb	___aomod@dividend+7,f
 13884  2416                     l4797:	
 13885  2416  36A7               	lsrf	___aomod@divisor+7,f
 13886  2417  0CA6               	rrf	___aomod@divisor+6,f
 13887  2418  0CA5               	rrf	___aomod@divisor+5,f
 13888  2419  0CA4               	rrf	___aomod@divisor+4,f
 13889  241A  0CA3               	rrf	___aomod@divisor+3,f
 13890  241B  0CA2               	rrf	___aomod@divisor+2,f
 13891  241C  0CA1               	rrf	___aomod@divisor+1,f
 13892  241D  0CA0               	rrf	___aomod@divisor,f
 13893  241E  3001               	movlw	1
 13894  241F  02F2               	subwf	___aomod@counter,f
 13895  2420  1D03               	btfss	3,2
 13896  2421  2BE6               	goto	l4793
 13897  2422                     l4799:	
 13898  2422  0873               	movf	___aomod@sign,w
 13899  2423  1903               	btfsc	3,2
 13900  2424  2C43               	goto	l1022
 13901  2425  09A8               	comf	___aomod@dividend,f
 13902  2426  09A9               	comf	___aomod@dividend+1,f
 13903  2427  09AA               	comf	___aomod@dividend+2,f
 13904  2428  09AB               	comf	___aomod@dividend+3,f
 13905  2429  09AC               	comf	___aomod@dividend+4,f
 13906  242A  09AD               	comf	___aomod@dividend+5,f
 13907  242B  09AE               	comf	___aomod@dividend+6,f
 13908  242C  09AF               	comf	___aomod@dividend+7,f
 13909  242D  0AA8               	incf	___aomod@dividend,f
 13910  242E  1D03               	skipz
 13911  242F  2C43               	goto	l1022
 13912  2430  0AA9               	incf	___aomod@dividend+1,f
 13913  2431  1D03               	skipz
 13914  2432  2C43               	goto	l1022
 13915  2433  0AAA               	incf	___aomod@dividend+2,f
 13916  2434  1D03               	skipz
 13917  2435  2C43               	goto	l1022
 13918  2436  0AAB               	incf	___aomod@dividend+3,f
 13919  2437  1D03               	skipz
 13920  2438  2C43               	goto	l1022
 13921  2439  0AAC               	incf	___aomod@dividend+4,f
 13922  243A  1D03               	skipz
 13923  243B  2C43               	goto	l1022
 13924  243C  0AAD               	incf	___aomod@dividend+5,f
 13925  243D  1D03               	skipz
 13926  243E  2C43               	goto	l1022
 13927  243F  0AAE               	incf	___aomod@dividend+6,f
 13928  2440  1D03               	skipz
 13929  2441  2C43               	goto	l1022
 13930  2442  0AAF               	incf	___aomod@dividend+7,f
 13931  2443                     l1022:	
 13932  2443  0020               	movlb	0	; select bank0
 13933  2444  0828               	movf	___aomod@dividend,w
 13934  2445  00A0               	movwf	?___aomod
 13935  2446  0829               	movf	___aomod@dividend+1,w
 13936  2447  00A1               	movwf	?___aomod+1
 13937  2448  082A               	movf	___aomod@dividend+2,w
 13938  2449  00A2               	movwf	?___aomod+2
 13939  244A  082B               	movf	___aomod@dividend+3,w
 13940  244B  00A3               	movwf	?___aomod+3
 13941  244C  082C               	movf	___aomod@dividend+4,w
 13942  244D  00A4               	movwf	?___aomod+4
 13943  244E  082D               	movf	___aomod@dividend+5,w
 13944  244F  00A5               	movwf	?___aomod+5
 13945  2450  082E               	movf	___aomod@dividend+6,w
 13946  2451  00A6               	movwf	?___aomod+6
 13947  2452  082F               	movf	___aomod@dividend+7,w
 13948  2453  00A7               	movwf	?___aomod+7
 13949  2454  0008               	return
 13950  2455                     __end_of___aomod:	
 13951                           
 13952                           	psect	text33
 13953  270D                     __ptext33:	
 13954 ;; *************** function ___aodiv *****************
 13955 ;; Defined at:
 13956 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  divisor         8    0[BANK0 ] long long 
 13959 ;;  dividend        8    8[BANK0 ] long long 
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;  quotient        8    4[COMMON] long long 
 13962 ;;  sign            1    3[COMMON] unsigned char 
 13963 ;;  counter         1    2[COMMON] unsigned char 
 13964 ;; Return value:  Size  Location     Type
 13965 ;;                  8    0[BANK0 ] long long 
 13966 ;; Registers used:
 13967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13968 ;; Tracked objects:
 13969 ;;		On entry : 0/0
 13970 ;;		On exit  : 0/0
 13971 ;;		Unchanged: 0/0
 13972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13973 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13974 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13976 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13977 ;;Total ram usage:       27 bytes
 13978 ;; Hardware stack levels used:    1
 13979 ;; Hardware stack levels required when called:    1
 13980 ;; This function calls:
 13981 ;;		Nothing
 13982 ;; This function is called by:
 13983 ;;		_dtoa
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           
 13988                           ;psect for function ___aodiv
 13989  270D                     ___aodiv:	
 13990                           
 13991                           ;incstack = 0
 13992                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13993  270D  01F3               	clrf	___aodiv@sign
 13994  270E  3020               	movlw	low ___aodiv@divisor
 13995  270F  0086               	movwf	6
 13996  2710  3000               	movlw	high ___aodiv@divisor
 13997  2711  0087               	movwf	7
 13998  2712  3F47               	moviw [7]fsr1
 13999  2713  00F1               	movwf	??___aodiv
 14000  2714  1FF1               	btfss	??___aodiv,7
 14001  2715  2F37               	goto	l4741
 14002  2716  0020               	movlb	0	; select bank0
 14003  2717  09A0               	comf	___aodiv@divisor,f
 14004  2718  09A1               	comf	___aodiv@divisor+1,f
 14005  2719  09A2               	comf	___aodiv@divisor+2,f
 14006  271A  09A3               	comf	___aodiv@divisor+3,f
 14007  271B  09A4               	comf	___aodiv@divisor+4,f
 14008  271C  09A5               	comf	___aodiv@divisor+5,f
 14009  271D  09A6               	comf	___aodiv@divisor+6,f
 14010  271E  09A7               	comf	___aodiv@divisor+7,f
 14011  271F  0AA0               	incf	___aodiv@divisor,f
 14012  2720  1D03               	skipz
 14013  2721  2F35               	goto	u580lld
 14014  2722  0AA1               	incf	___aodiv@divisor+1,f
 14015  2723  1D03               	skipz
 14016  2724  2F35               	goto	u580lld
 14017  2725  0AA2               	incf	___aodiv@divisor+2,f
 14018  2726  1D03               	skipz
 14019  2727  2F35               	goto	u580lld
 14020  2728  0AA3               	incf	___aodiv@divisor+3,f
 14021  2729  1D03               	skipz
 14022  272A  2F35               	goto	u580lld
 14023  272B  0AA4               	incf	___aodiv@divisor+4,f
 14024  272C  1D03               	skipz
 14025  272D  2F35               	goto	u580lld
 14026  272E  0AA5               	incf	___aodiv@divisor+5,f
 14027  272F  1D03               	skipz
 14028  2730  2F35               	goto	u580lld
 14029  2731  0AA6               	incf	___aodiv@divisor+6,f
 14030  2732  1D03               	skipz
 14031  2733  2F35               	goto	u580lld
 14032  2734  0AA7               	incf	___aodiv@divisor+7,f
 14033  2735                     u580lld:	
 14034  2735  01F3               	clrf	___aodiv@sign
 14035  2736  0AF3               	incf	___aodiv@sign,f
 14036  2737                     l4741:	
 14037  2737  3028               	movlw	low ___aodiv@dividend
 14038  2738  0086               	movwf	6
 14039  2739  3000               	movlw	high ___aodiv@dividend
 14040  273A  0087               	movwf	7
 14041  273B  3F47               	moviw [7]fsr1
 14042  273C  00F1               	movwf	??___aodiv
 14043  273D  1FF1               	btfss	??___aodiv,7
 14044  273E  2F62               	goto	l4747
 14045  273F  0020               	movlb	0	; select bank0
 14046  2740  09A8               	comf	___aodiv@dividend,f
 14047  2741  09A9               	comf	___aodiv@dividend+1,f
 14048  2742  09AA               	comf	___aodiv@dividend+2,f
 14049  2743  09AB               	comf	___aodiv@dividend+3,f
 14050  2744  09AC               	comf	___aodiv@dividend+4,f
 14051  2745  09AD               	comf	___aodiv@dividend+5,f
 14052  2746  09AE               	comf	___aodiv@dividend+6,f
 14053  2747  09AF               	comf	___aodiv@dividend+7,f
 14054  2748  0AA8               	incf	___aodiv@dividend,f
 14055  2749  1D03               	skipz
 14056  274A  2F5E               	goto	l4745
 14057  274B  0AA9               	incf	___aodiv@dividend+1,f
 14058  274C  1D03               	skipz
 14059  274D  2F5E               	goto	l4745
 14060  274E  0AAA               	incf	___aodiv@dividend+2,f
 14061  274F  1D03               	skipz
 14062  2750  2F5E               	goto	l4745
 14063  2751  0AAB               	incf	___aodiv@dividend+3,f
 14064  2752  1D03               	skipz
 14065  2753  2F5E               	goto	l4745
 14066  2754  0AAC               	incf	___aodiv@dividend+4,f
 14067  2755  1D03               	skipz
 14068  2756  2F5E               	goto	l4745
 14069  2757  0AAD               	incf	___aodiv@dividend+5,f
 14070  2758  1D03               	skipz
 14071  2759  2F5E               	goto	l4745
 14072  275A  0AAE               	incf	___aodiv@dividend+6,f
 14073  275B  1D03               	skipz
 14074  275C  2F5E               	goto	l4745
 14075  275D  0AAF               	incf	___aodiv@dividend+7,f
 14076  275E                     l4745:	
 14077  275E  3001               	movlw	1
 14078  275F  00F1               	movwf	??___aodiv
 14079  2760  0871               	movf	??___aodiv,w
 14080  2761  06F3               	xorwf	___aodiv@sign,f
 14081  2762                     l4747:	
 14082  2762  3074               	movlw	low ___aodiv@quotient
 14083  2763  0086               	movwf	6
 14084  2764  3000               	movlw	high ___aodiv@quotient
 14085  2765  0087               	movwf	7
 14086  2766  3008               	movlw	8
 14087  2767  00F1               	movwf	??___aodiv
 14088  2768  3000               	movlw	0
 14089  2769                     u5830:	
 14090  2769  001E               	movwi fsr1++
 14091  276A  0BF1               	decfsz	??___aodiv,f
 14092  276B  2F69               	goto	u5830
 14093  276C  0020               	movlb	0	; select bank0
 14094  276D  0820               	movf	___aodiv@divisor,w
 14095  276E  0421               	iorwf	___aodiv@divisor+1,w
 14096  276F  0422               	iorwf	___aodiv@divisor+2,w
 14097  2770  0423               	iorwf	___aodiv@divisor+3,w
 14098  2771  0424               	iorwf	___aodiv@divisor+4,w
 14099  2772  0425               	iorwf	___aodiv@divisor+5,w
 14100  2773  0426               	iorwf	___aodiv@divisor+6,w
 14101  2774  0427               	iorwf	___aodiv@divisor+7,w
 14102  2775  1903               	skipnz
 14103  2776  2FCD               	goto	l4769
 14104  2777  01F2               	clrf	___aodiv@counter
 14105  2778  0AF2               	incf	___aodiv@counter,f
 14106  2779                     l4757:	
 14107  2779  1BA7               	btfsc	___aodiv@divisor+7,7
 14108  277A  2F88               	goto	l4759
 14109  277B  35A0               	lslf	___aodiv@divisor,f
 14110  277C  0DA1               	rlf	___aodiv@divisor+1,f
 14111  277D  0DA2               	rlf	___aodiv@divisor+2,f
 14112  277E  0DA3               	rlf	___aodiv@divisor+3,f
 14113  277F  0DA4               	rlf	___aodiv@divisor+4,f
 14114  2780  0DA5               	rlf	___aodiv@divisor+5,f
 14115  2781  0DA6               	rlf	___aodiv@divisor+6,f
 14116  2782  0DA7               	rlf	___aodiv@divisor+7,f
 14117  2783  3001               	movlw	1
 14118  2784  00F1               	movwf	??___aodiv
 14119  2785  0871               	movf	??___aodiv,w
 14120  2786  07F2               	addwf	___aodiv@counter,f
 14121  2787  2F79               	goto	l4757
 14122  2788                     l4759:	
 14123  2788  35F4               	lslf	___aodiv@quotient,f
 14124  2789  0DF5               	rlf	___aodiv@quotient+1,f
 14125  278A  0DF6               	rlf	___aodiv@quotient+2,f
 14126  278B  0DF7               	rlf	___aodiv@quotient+3,f
 14127  278C  0DF8               	rlf	___aodiv@quotient+4,f
 14128  278D  0DF9               	rlf	___aodiv@quotient+5,f
 14129  278E  0DFA               	rlf	___aodiv@quotient+6,f
 14130  278F  0DFB               	rlf	___aodiv@quotient+7,f
 14131  2790  0827               	movf	___aodiv@divisor+7,w
 14132  2791  022F               	subwf	___aodiv@dividend+7,w
 14133  2792  1D03               	skipz
 14134  2793  2FAE               	goto	u5865
 14135  2794  0826               	movf	___aodiv@divisor+6,w
 14136  2795  022E               	subwf	___aodiv@dividend+6,w
 14137  2796  1D03               	skipz
 14138  2797  2FAE               	goto	u5865
 14139  2798  0825               	movf	___aodiv@divisor+5,w
 14140  2799  022D               	subwf	___aodiv@dividend+5,w
 14141  279A  1D03               	skipz
 14142  279B  2FAE               	goto	u5865
 14143  279C  0824               	movf	___aodiv@divisor+4,w
 14144  279D  022C               	subwf	___aodiv@dividend+4,w
 14145  279E  1D03               	skipz
 14146  279F  2FAE               	goto	u5865
 14147  27A0  0823               	movf	___aodiv@divisor+3,w
 14148  27A1  022B               	subwf	___aodiv@dividend+3,w
 14149  27A2  1D03               	skipz
 14150  27A3  2FAE               	goto	u5865
 14151  27A4  0822               	movf	___aodiv@divisor+2,w
 14152  27A5  022A               	subwf	___aodiv@dividend+2,w
 14153  27A6  1D03               	skipz
 14154  27A7  2FAE               	goto	u5865
 14155  27A8  0821               	movf	___aodiv@divisor+1,w
 14156  27A9  0229               	subwf	___aodiv@dividend+1,w
 14157  27AA  1D03               	skipz
 14158  27AB  2FAE               	goto	u5865
 14159  27AC  0820               	movf	___aodiv@divisor,w
 14160  27AD  0228               	subwf	___aodiv@dividend,w
 14161  27AE                     u5865:	
 14162  27AE  1C03               	skipc
 14163  27AF  2FC1               	goto	l4767
 14164  27B0  0820               	movf	___aodiv@divisor,w
 14165  27B1  02A8               	subwf	___aodiv@dividend,f
 14166  27B2  0821               	movf	___aodiv@divisor+1,w
 14167  27B3  3BA9               	subwfb	___aodiv@dividend+1,f
 14168  27B4  0822               	movf	___aodiv@divisor+2,w
 14169  27B5  3BAA               	subwfb	___aodiv@dividend+2,f
 14170  27B6  0823               	movf	___aodiv@divisor+3,w
 14171  27B7  3BAB               	subwfb	___aodiv@dividend+3,f
 14172  27B8  0824               	movf	___aodiv@divisor+4,w
 14173  27B9  3BAC               	subwfb	___aodiv@dividend+4,f
 14174  27BA  0825               	movf	___aodiv@divisor+5,w
 14175  27BB  3BAD               	subwfb	___aodiv@dividend+5,f
 14176  27BC  0826               	movf	___aodiv@divisor+6,w
 14177  27BD  3BAE               	subwfb	___aodiv@dividend+6,f
 14178  27BE  0827               	movf	___aodiv@divisor+7,w
 14179  27BF  3BAF               	subwfb	___aodiv@dividend+7,f
 14180  27C0  1474               	bsf	___aodiv@quotient,0
 14181  27C1                     l4767:	
 14182  27C1  36A7               	lsrf	___aodiv@divisor+7,f
 14183  27C2  0CA6               	rrf	___aodiv@divisor+6,f
 14184  27C3  0CA5               	rrf	___aodiv@divisor+5,f
 14185  27C4  0CA4               	rrf	___aodiv@divisor+4,f
 14186  27C5  0CA3               	rrf	___aodiv@divisor+3,f
 14187  27C6  0CA2               	rrf	___aodiv@divisor+2,f
 14188  27C7  0CA1               	rrf	___aodiv@divisor+1,f
 14189  27C8  0CA0               	rrf	___aodiv@divisor,f
 14190  27C9  3001               	movlw	1
 14191  27CA  02F2               	subwf	___aodiv@counter,f
 14192  27CB  1D03               	btfss	3,2
 14193  27CC  2F88               	goto	l4759
 14194  27CD                     l4769:	
 14195  27CD  0873               	movf	___aodiv@sign,w
 14196  27CE  1903               	btfsc	3,2
 14197  27CF  2FEE               	goto	l1009
 14198  27D0  09F4               	comf	___aodiv@quotient,f
 14199  27D1  09F5               	comf	___aodiv@quotient+1,f
 14200  27D2  09F6               	comf	___aodiv@quotient+2,f
 14201  27D3  09F7               	comf	___aodiv@quotient+3,f
 14202  27D4  09F8               	comf	___aodiv@quotient+4,f
 14203  27D5  09F9               	comf	___aodiv@quotient+5,f
 14204  27D6  09FA               	comf	___aodiv@quotient+6,f
 14205  27D7  09FB               	comf	___aodiv@quotient+7,f
 14206  27D8  0AF4               	incf	___aodiv@quotient,f
 14207  27D9  1D03               	skipz
 14208  27DA  2FEE               	goto	l1009
 14209  27DB  0AF5               	incf	___aodiv@quotient+1,f
 14210  27DC  1D03               	skipz
 14211  27DD  2FEE               	goto	l1009
 14212  27DE  0AF6               	incf	___aodiv@quotient+2,f
 14213  27DF  1D03               	skipz
 14214  27E0  2FEE               	goto	l1009
 14215  27E1  0AF7               	incf	___aodiv@quotient+3,f
 14216  27E2  1D03               	skipz
 14217  27E3  2FEE               	goto	l1009
 14218  27E4  0AF8               	incf	___aodiv@quotient+4,f
 14219  27E5  1D03               	skipz
 14220  27E6  2FEE               	goto	l1009
 14221  27E7  0AF9               	incf	___aodiv@quotient+5,f
 14222  27E8  1D03               	skipz
 14223  27E9  2FEE               	goto	l1009
 14224  27EA  0AFA               	incf	___aodiv@quotient+6,f
 14225  27EB  1D03               	skipz
 14226  27EC  2FEE               	goto	l1009
 14227  27ED  0AFB               	incf	___aodiv@quotient+7,f
 14228  27EE                     l1009:	
 14229  27EE  0874               	movf	___aodiv@quotient,w
 14230  27EF  0020               	movlb	0	; select bank0
 14231  27F0  00A0               	movwf	?___aodiv
 14232  27F1  0875               	movf	___aodiv@quotient+1,w
 14233  27F2  00A1               	movwf	?___aodiv+1
 14234  27F3  0876               	movf	___aodiv@quotient+2,w
 14235  27F4  00A2               	movwf	?___aodiv+2
 14236  27F5  0877               	movf	___aodiv@quotient+3,w
 14237  27F6  00A3               	movwf	?___aodiv+3
 14238  27F7  0878               	movf	___aodiv@quotient+4,w
 14239  27F8  00A4               	movwf	?___aodiv+4
 14240  27F9  0879               	movf	___aodiv@quotient+5,w
 14241  27FA  00A5               	movwf	?___aodiv+5
 14242  27FB  087A               	movf	___aodiv@quotient+6,w
 14243  27FC  00A6               	movwf	?___aodiv+6
 14244  27FD  087B               	movf	___aodiv@quotient+7,w
 14245  27FE  00A7               	movwf	?___aodiv+7
 14246  27FF  0008               	return
 14247  2800                     __end_of___aodiv:	
 14248                           
 14249                           	psect	text34
 14250  32FB                     __ptext34:	
 14251 ;; *************** function _ctoa *****************
 14252 ;; Defined at:
 14253 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 14256 ;;		 -> vsnprintf@f(6), 
 14257 ;;  c               1   18[BANK0 ] unsigned char 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  w               2   20[BANK0 ] int 
 14260 ;;  l               2    0        int 
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  2   16[BANK0 ] int 
 14263 ;; Registers used:
 14264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/0
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14270 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14273 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14274 ;;Total ram usage:        6 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    5
 14277 ;; This function calls:
 14278 ;;		_pad
 14279 ;; This function is called by:
 14280 ;;		_vfpfcnvrt
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           
 14285                           ;psect for function _ctoa
 14286  32FB                     _ctoa:	
 14287                           
 14288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14289                           
 14290                           ;incstack = 0
 14291                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14292  32FB  0023               	movlb	3	; select bank3
 14293  32FC  083E               	movf	_width^(0+384),w
 14294  32FD  043F               	iorwf	(_width+1)^(0+384),w
 14295  32FE  1D03               	btfss	3,2
 14296  32FF  2B08               	goto	l7355
 14297  3300  083F               	movf	(_width+1)^(0+384),w
 14298  3301  0020               	movlb	0	; select bank0
 14299  3302  00B5               	movwf	ctoa@w+1
 14300  3303  0023               	movlb	3	; select bank3
 14301  3304  083E               	movf	_width^(0+384),w
 14302  3305  0020               	movlb	0	; select bank0
 14303  3306  00B4               	movwf	ctoa@w
 14304  3307  2B11               	goto	l7357
 14305  3308                     l7355:	
 14306  3308  083E               	movf	_width^(0+384),w
 14307  3309  3EFF               	addlw	255
 14308  330A  0020               	movlb	0	; select bank0
 14309  330B  00B4               	movwf	ctoa@w
 14310  330C  30FF               	movlw	255
 14311  330D  0023               	movlb	3	; select bank3
 14312  330E  3D3F               	addwfc	(_width+1)^(0+384),w
 14313  330F  0020               	movlb	0	; select bank0
 14314  3310  00B5               	movwf	ctoa@w+1
 14315  3311                     l7357:	
 14316                           
 14317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14318  3311  0832               	movf	ctoa@c,w
 14319  3312  00B3               	movwf	??_ctoa
 14320  3313  0833               	movf	??_ctoa,w
 14321  3314  0024               	movlb	4	; select bank4
 14322  3315  00A0               	movwf	_dbuf^(0+512)
 14323                           
 14324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14325  3316  01A1               	clrf	(_dbuf^(0+512)+1)
 14326                           
 14327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14328  3317  0020               	movlb	0	; select bank0
 14329  3318  0831               	movf	ctoa@fp+1,w
 14330  3319  00A7               	movwf	pad@fp+1
 14331  331A  0830               	movf	ctoa@fp,w
 14332  331B  00A6               	movwf	pad@fp
 14333  331C  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 14334  331D  00B3               	movwf	??_ctoa
 14335  331E  0833               	movf	??_ctoa,w
 14336  331F  00A8               	movwf	pad@buf
 14337  3320  0835               	movf	ctoa@w+1,w
 14338  3321  00AA               	movwf	pad@p+1
 14339  3322  0834               	movf	ctoa@w,w
 14340  3323  00A9               	movwf	pad@p
 14341  3324  31B5  256D         	fcall	_pad
 14342  3326  0020               	movlb	0	; select bank0
 14343  3327  0827               	movf	?_pad+1,w
 14344  3328  00B1               	movwf	?_ctoa+1
 14345  3329  0826               	movf	?_pad,w
 14346  332A  00B0               	movwf	?_ctoa
 14347  332B  0008               	return
 14348  332C                     __end_of_ctoa:	
 14349                           
 14350                           	psect	text35
 14351  356D                     __ptext35:	
 14352 ;; *************** function _pad *****************
 14353 ;; Defined at:
 14354 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 14357 ;;		 -> vsnprintf@f(6), 
 14358 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 14359 ;;		 -> dbuf(80), 
 14360 ;;  p               2    9[BANK0 ] int 
 14361 ;; Auto vars:     Size  Location     Type
 14362 ;;  w               2   14[BANK0 ] int 
 14363 ;;  i               2   12[BANK0 ] int 
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  2    6[BANK0 ] int 
 14366 ;; Registers used:
 14367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/0
 14370 ;;		On exit  : 0/0
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14373 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14376 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14377 ;;Total ram usage:       10 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    4
 14380 ;; This function calls:
 14381 ;;		_fputc
 14382 ;;		_fputs
 14383 ;;		_strlen
 14384 ;; This function is called by:
 14385 ;;		_ctoa
 14386 ;;		_dtoa
 14387 ;;		_efgtoa
 14388 ;;		_otoa
 14389 ;;		_utoa
 14390 ;;		_xtoa
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394                           
 14395                           ;psect for function _pad
 14396  356D                     _pad:	
 14397                           
 14398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14399                           
 14400                           ;incstack = 0
 14401                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14402  356D  0023               	movlb	3	; select bank3
 14403  356E  1C42               	btfss	_flags^(0+384),0
 14404  356F  2D79               	goto	l7295
 14405                           
 14406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14407  3570  0020               	movlb	0	; select bank0
 14408  3571  0827               	movf	pad@fp+1,w
 14409  3572  00FB               	movwf	fputs@fp+1
 14410  3573  0826               	movf	pad@fp,w
 14411  3574  00FA               	movwf	fputs@fp
 14412  3575  0828               	movf	pad@buf,w
 14413  3576  3198  2002  31B5   	fcall	_fputs
 14414  3579                     l7295:	
 14415                           
 14416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14417  3579  0020               	movlb	0	; select bank0
 14418  357A  1BAA               	btfsc	pad@p+1,7
 14419  357B  2D81               	goto	l7299
 14420  357C  082A               	movf	pad@p+1,w
 14421  357D  00AF               	movwf	pad@w+1
 14422  357E  0829               	movf	pad@p,w
 14423  357F  00AE               	movwf	pad@w
 14424  3580  2D83               	goto	l591
 14425  3581                     l7299:	
 14426  3581  01AE               	clrf	pad@w
 14427  3582  01AF               	clrf	pad@w+1
 14428  3583                     l591:	
 14429                           
 14430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14431  3583  01AC               	clrf	pad@i
 14432  3584  01AD               	clrf	pad@i+1
 14433  3585                     l7305:	
 14434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14435                           
 14436                           
 14437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14438  3585  082D               	movf	pad@i+1,w
 14439  3586  3A80               	xorlw	128
 14440  3587  00AB               	movwf	??_pad
 14441  3588  082F               	movf	pad@w+1,w
 14442  3589  3A80               	xorlw	128
 14443  358A  022B               	subwf	??_pad,w
 14444  358B  1D03               	skipz
 14445  358C  2D8F               	goto	u10125
 14446  358D  082E               	movf	pad@w,w
 14447  358E  022C               	subwf	pad@i,w
 14448  358F                     u10125:	
 14449  358F  1803               	btfsc	3,0
 14450  3590  2DA3               	goto	l594
 14451                           
 14452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14453  3591  3020               	movlw	32
 14454  3592  00F1               	movwf	fputc@c
 14455  3593  3000               	movlw	0
 14456  3594  00F2               	movwf	fputc@c+1
 14457  3595  0020               	movlb	0	; select bank0
 14458  3596  0827               	movf	pad@fp+1,w
 14459  3597  00F4               	movwf	fputc@fp+1
 14460  3598  0826               	movf	pad@fp,w
 14461  3599  00F3               	movwf	fputc@fp
 14462  359A  31B6  260F  31B5   	fcall	_fputc
 14463                           
 14464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14465  359D  3001               	movlw	1
 14466  359E  0020               	movlb	0	; select bank0
 14467  359F  07AC               	addwf	pad@i,f
 14468  35A0  3000               	movlw	0
 14469  35A1  3DAD               	addwfc	pad@i+1,f
 14470  35A2  2D85               	goto	l7305
 14471  35A3                     l594:	
 14472                           
 14473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14474  35A3  0023               	movlb	3	; select bank3
 14475  35A4  1842               	btfsc	_flags^(0+384),0
 14476  35A5  2DAF               	goto	l7309
 14477                           
 14478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14479  35A6  0020               	movlb	0	; select bank0
 14480  35A7  0827               	movf	pad@fp+1,w
 14481  35A8  00FB               	movwf	fputs@fp+1
 14482  35A9  0826               	movf	pad@fp,w
 14483  35AA  00FA               	movwf	fputs@fp
 14484  35AB  0828               	movf	pad@buf,w
 14485  35AC  3198  2002  31B5   	fcall	_fputs
 14486  35AF                     l7309:	
 14487                           
 14488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14489  35AF  0020               	movlb	0	; select bank0
 14490  35B0  0828               	movf	pad@buf,w
 14491  35B1  00F1               	movwf	strlen@s
 14492  35B2  3002               	movlw	2
 14493  35B3  00F2               	movwf	strlen@s+1
 14494  35B4  31B1  213D         	fcall	_strlen
 14495  35B6  0020               	movlb	0	; select bank0
 14496  35B7  082E               	movf	pad@w,w
 14497  35B8  0771               	addwf	?_strlen,w
 14498  35B9  00A6               	movwf	?_pad
 14499  35BA  082F               	movf	pad@w+1,w
 14500  35BB  3D72               	addwfc	?_strlen+1,w
 14501  35BC  00A7               	movwf	?_pad+1
 14502  35BD  0008               	return
 14503  35BE                     __end_of_pad:	
 14504                           
 14505                           	psect	text36
 14506  313D                     __ptext36:	
 14507 ;; *************** function _strlen *****************
 14508 ;; Defined at:
 14509 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;  s               2    1[COMMON] PTR const unsigned char 
 14512 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;  a               2    3[COMMON] PTR const unsigned char 
 14515 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  2    1[COMMON] unsigned int 
 14518 ;; Registers used:
 14519 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14520 ;; Tracked objects:
 14521 ;;		On entry : 0/0
 14522 ;;		On exit  : 0/0
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14529 ;;Total ram usage:        4 bytes
 14530 ;; Hardware stack levels used:    1
 14531 ;; Hardware stack levels required when called:    1
 14532 ;; This function calls:
 14533 ;;		Nothing
 14534 ;; This function is called by:
 14535 ;;		_pad
 14536 ;;		_stoa
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540                           
 14541                           ;psect for function _strlen
 14542  313D                     _strlen:	
 14543                           
 14544                           ;incstack = 0
 14545                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14546  313D  0872               	movf	strlen@s+1,w
 14547  313E  00F4               	movwf	strlen@a+1
 14548  313F  0871               	movf	strlen@s,w
 14549  3140  00F3               	movwf	strlen@a
 14550  3141                     l4387:	
 14551  3141  0871               	movf	strlen@s,w
 14552  3142  0086               	movwf	6
 14553  3143  0872               	movf	strlen@s+1,w
 14554  3144  0087               	movwf	7
 14555  3145  0801               	movf	1,w
 14556  3146  1903               	btfsc	3,2
 14557  3147  294D               	goto	l4389
 14558  3148  3001               	movlw	1
 14559  3149  07F1               	addwf	strlen@s,f
 14560  314A  3000               	movlw	0
 14561  314B  3DF2               	addwfc	strlen@s+1,f
 14562  314C  2941               	goto	l4387
 14563  314D                     l4389:	
 14564  314D  0873               	movf	strlen@a,w
 14565  314E  0271               	subwf	strlen@s,w
 14566  314F  00F1               	movwf	?_strlen
 14567  3150  0874               	movf	strlen@a+1,w
 14568  3151  3B72               	subwfb	strlen@s+1,w
 14569  3152  00F2               	movwf	?_strlen+1
 14570  3153  0008               	return
 14571  3154                     __end_of_strlen:	
 14572                           
 14573                           	psect	text37
 14574  1802                     __ptext37:	
 14575 ;; *************** function _fputs *****************
 14576 ;; Defined at:
 14577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;  s               1    wreg     PTR const unsigned char 
 14580 ;;		 -> dbuf(80), 
 14581 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14582 ;;		 -> vsnprintf@f(6), 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14585 ;;		 -> dbuf(80), 
 14586 ;;  i               2    3[BANK0 ] int 
 14587 ;;  c               1    2[BANK0 ] unsigned char 
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  2   10[COMMON] int 
 14590 ;; Registers used:
 14591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/0
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14600 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14601 ;;Total ram usage:        8 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    3
 14604 ;; This function calls:
 14605 ;;		_fputc
 14606 ;; This function is called by:
 14607 ;;		_pad
 14608 ;; This function uses a non-reentrant model
 14609 ;;
 14610                           
 14611                           
 14612                           ;psect for function _fputs
 14613  1802                     _fputs:	
 14614                           
 14615                           ;incstack = 0
 14616                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14617                           ;fputs@s stored from wreg
 14618  1802  0020               	movlb	0	; select bank0
 14619  1803  00A5               	movwf	fputs@s
 14620  1804  01A3               	clrf	fputs@i
 14621  1805  01A4               	clrf	fputs@i+1
 14622  1806                     l4381:	
 14623  1806  0823               	movf	fputs@i,w
 14624  1807  0725               	addwf	fputs@s,w
 14625  1808  00A0               	movwf	??_fputs
 14626  1809  0820               	movf	??_fputs,w
 14627  180A  0086               	movwf	6
 14628  180B  3002               	movlw	2	; select bank4/5
 14629  180C  0087               	movwf	7
 14630  180D  0801               	movf	1,w
 14631  180E  00A1               	movwf	??_fputs+1
 14632  180F  0821               	movf	??_fputs+1,w
 14633  1810  00A2               	movwf	fputs@c
 14634  1811  0822               	movf	fputs@c,w
 14635  1812  1903               	btfsc	3,2
 14636  1813  0008               	return
 14637  1814  0822               	movf	fputs@c,w
 14638  1815  00A0               	movwf	??_fputs
 14639  1816  01A1               	clrf	??_fputs+1
 14640  1817  0820               	movf	??_fputs,w
 14641  1818  00F1               	movwf	fputc@c
 14642  1819  0821               	movf	??_fputs+1,w
 14643  181A  00F2               	movwf	fputc@c+1
 14644  181B  087B               	movf	fputs@fp+1,w
 14645  181C  00F4               	movwf	fputc@fp+1
 14646  181D  087A               	movf	fputs@fp,w
 14647  181E  00F3               	movwf	fputc@fp
 14648  181F  31B6  260F  3198   	fcall	_fputc
 14649  1822  3001               	movlw	1
 14650  1823  0020               	movlb	0	; select bank0
 14651  1824  07A3               	addwf	fputs@i,f
 14652  1825  3000               	movlw	0
 14653  1826  3DA4               	addwfc	fputs@i+1,f
 14654  1827  2806               	goto	l4381
 14655  1828                     __end_of_fputs:	
 14656                           
 14657                           	psect	text38
 14658  360F                     __ptext38:	
 14659 ;; *************** function _fputc *****************
 14660 ;; Defined at:
 14661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;  c               2    1[COMMON] int 
 14664 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14665 ;;		 -> vsnprintf@f(6), 
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  2    1[COMMON] int 
 14670 ;; Registers used:
 14671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14679 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14680 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14681 ;;Total ram usage:        9 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:    2
 14684 ;; This function calls:
 14685 ;;		_putch
 14686 ;; This function is called by:
 14687 ;;		_pad
 14688 ;;		_stoa
 14689 ;;		_vfpfcnvrt
 14690 ;;		_fputs
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           
 14695                           ;psect for function _fputc
 14696  360F                     _fputc:	
 14697                           
 14698                           ;incstack = 0
 14699                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14700  360F  0873               	movf	fputc@fp,w
 14701  3610  0474               	iorwf	fputc@fp+1,w
 14702  3611  1903               	btfsc	3,2
 14703  3612  2E17               	goto	l4363
 14704  3613  0873               	movf	fputc@fp,w
 14705  3614  0474               	iorwf	fputc@fp+1,w
 14706  3615  1D03               	btfss	3,2
 14707  3616  2E1B               	goto	l4365
 14708  3617                     l4363:	
 14709  3617  0871               	movf	fputc@c,w
 14710  3618  3187  27FF         	fcall	_putch
 14711  361A  0008               	return
 14712  361B                     l4365:	
 14713  361B  0873               	movf	fputc@fp,w
 14714  361C  0086               	movwf	6
 14715  361D  0874               	movf	fputc@fp+1,w
 14716  361E  0087               	movwf	7
 14717  361F  3144               	addfsr 1,4
 14718  3620  0016               	moviw fsr1++
 14719  3621  0401               	iorwf	1,w
 14720  3622  1903               	btfsc	3,2
 14721  3623  2E42               	goto	l4369
 14722  3624  0873               	movf	fputc@fp,w
 14723  3625  0086               	movwf	6
 14724  3626  0874               	movf	fputc@fp+1,w
 14725  3627  0087               	movwf	7
 14726  3628  3144               	addfsr 1,4
 14727  3629  3F40               	moviw [0]fsr1
 14728  362A  00F5               	movwf	??_fputc
 14729  362B  3F41               	moviw [1]fsr1
 14730  362C  00F6               	movwf	??_fputc+1
 14731  362D  0873               	movf	fputc@fp,w
 14732  362E  0086               	movwf	6
 14733  362F  0874               	movf	fputc@fp+1,w
 14734  3630  0087               	movwf	7
 14735  3631  3142               	addfsr 1,2
 14736  3632  3F40               	moviw [0]fsr1
 14737  3633  00F7               	movwf	??_fputc+2
 14738  3634  3F41               	moviw [1]fsr1
 14739  3635  00F8               	movwf	??_fputc+3
 14740  3636  0878               	movf	??_fputc+3,w
 14741  3637  3A80               	xorlw	128
 14742  3638  00F9               	movwf	??_fputc+4
 14743  3639  0876               	movf	??_fputc+1,w
 14744  363A  3A80               	xorlw	128
 14745  363B  0279               	subwf	??_fputc+4,w
 14746  363C  1D03               	skipz
 14747  363D  2E40               	goto	u4875
 14748  363E  0875               	movf	??_fputc,w
 14749  363F  0277               	subwf	??_fputc+2,w
 14750  3640                     u4875:	
 14751  3640  1803               	skipnc
 14752  3641  0008               	return
 14753  3642                     l4369:	
 14754  3642  0873               	movf	fputc@fp,w
 14755  3643  0086               	movwf	6
 14756  3644  0874               	movf	fputc@fp+1,w
 14757  3645  0087               	movwf	7
 14758  3646  3142               	addfsr 1,2
 14759  3647  0873               	movf	fputc@fp,w
 14760  3648  0084               	movwf	4
 14761  3649  0874               	movf	fputc@fp+1,w
 14762  364A  0085               	movwf	5
 14763  364B  3F40               	moviw [0]fsr1
 14764  364C  0700               	addwf	0,w
 14765  364D  00F5               	movwf	??_fputc
 14766  364E  3101               	addfsr 0,1
 14767  364F  3F41               	moviw [1]fsr1
 14768  3650  3D00               	addwfc	0,w
 14769  3651  00F6               	movwf	??_fputc+1
 14770  3652  0875               	movf	??_fputc,w
 14771  3653  0086               	movwf	6
 14772  3654  0876               	movf	??_fputc+1,w
 14773  3655  0087               	movwf	7
 14774  3656  0871               	movf	fputc@c,w
 14775  3657  0081               	movwf	1
 14776  3658  0873               	movf	fputc@fp,w
 14777  3659  0086               	movwf	6
 14778  365A  0874               	movf	fputc@fp+1,w
 14779  365B  0087               	movwf	7
 14780  365C  3142               	addfsr 1,2
 14781  365D  3001               	movlw	1
 14782  365E  0781               	addwf	1,f
 14783  365F  3141               	addfsr 1,1
 14784  3660  1803               	skipnc
 14785  3661  0A81               	incf	1,f
 14786  3662  0008               	return
 14787  3663                     __end_of_fputc:	
 14788                           
 14789                           	psect	text39
 14790  07FF                     __ptext39:	
 14791 ;; *************** function _putch *****************
 14792 ;; Defined at:
 14793 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;  c               1    wreg     unsigned char 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  c               1    0[COMMON] unsigned char 
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14811 ;;Total ram usage:        0 bytes
 14812 ;; Hardware stack levels used:    1
 14813 ;; Hardware stack levels required when called:    1
 14814 ;; This function calls:
 14815 ;;		Nothing
 14816 ;; This function is called by:
 14817 ;;		_fputc
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           
 14822                           ;psect for function _putch
 14823  07FF                     _putch:	
 14824                           
 14825                           ;incstack = 0
 14826                           ; Regs used in _putch: [wreg]
 14827  07FF  0008               	return
 14828  0800                     __end_of_putch:	
 14829                           
 14830                           	psect	text40
 14831  2BC8                     __ptext40:	
 14832 ;; *************** function _atoi *****************
 14833 ;; Defined at:
 14834 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  s               2    7[COMMON] PTR const unsigned char 
 14837 ;;		 -> STR_24(18), STR_23(18), STR_22(19), STR_21(20), 
 14838 ;;		 -> STR_20(20), STR_19(21), STR_18(21), STR_17(21), 
 14839 ;;		 -> STR_16(22), STR_15(22), STR_14(21), STR_13(21), 
 14840 ;;		 -> STR_8(57), STR_7(44), STR_6(42), STR_3(43), 
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;  n               2   11[BANK0 ] int 
 14843 ;;  neg             2    4[BANK0 ] int 
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  2    7[COMMON] int 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14854 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14855 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14856 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14857 ;;Total ram usage:       15 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:    2
 14860 ;; This function calls:
 14861 ;;		___wmul
 14862 ;;		_isdigit
 14863 ;;		_isspace
 14864 ;; This function is called by:
 14865 ;;		_vfpfcnvrt
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869                           
 14870                           ;psect for function _atoi
 14871  2BC8                     _atoi:	
 14872                           
 14873                           ;incstack = 0
 14874                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14875  2BC8  0020               	movlb	0	; select bank0
 14876  2BC9  01AB               	clrf	atoi@n
 14877  2BCA  01AC               	clrf	atoi@n+1
 14878  2BCB  01A4               	clrf	atoi@neg
 14879  2BCC  01A5               	clrf	atoi@neg+1
 14880  2BCD                     l7913:	
 14881  2BCD  01AA               	clrf	_atoi$1710
 14882  2BCE  0AAA               	incf	_atoi$1710,f
 14883  2BCF  0877               	movf	atoi@s,w
 14884  2BD0  0084               	movwf	4
 14885  2BD1  0878               	movf	atoi@s+1,w
 14886  2BD2  0085               	movwf	5
 14887  2BD3  0012               	moviw fsr0++
 14888  2BD4  3A20               	xorlw	32
 14889  2BD5  1903               	btfsc	3,2
 14890  2BD6  2BE9               	goto	l7921
 14891  2BD7  0877               	movf	atoi@s,w
 14892  2BD8  0084               	movwf	4
 14893  2BD9  0878               	movf	atoi@s+1,w
 14894  2BDA  0085               	movwf	5
 14895  2BDB  0800               	movf	0,w	;code access
 14896  2BDC  3EF7               	addlw	247
 14897  2BDD  00A0               	movwf	??_atoi
 14898  2BDE  30FF               	movlw	255
 14899  2BDF  1803               	skipnc
 14900  2BE0  3000               	movlw	0
 14901  2BE1  00A1               	movwf	??_atoi+1
 14902  2BE2  3000               	movlw	0
 14903  2BE3  0221               	subwf	??_atoi+1,w
 14904  2BE4  3005               	movlw	5
 14905  2BE5  1903               	skipnz
 14906  2BE6  0220               	subwf	??_atoi,w
 14907  2BE7  1803               	btfsc	3,0
 14908  2BE8  01AA               	clrf	_atoi$1710
 14909  2BE9                     l7921:	
 14910  2BE9  082A               	movf	_atoi$1710,w
 14911  2BEA  00A0               	movwf	??_atoi
 14912  2BEB  01A1               	clrf	??_atoi+1
 14913  2BEC  0820               	movf	??_atoi,w
 14914  2BED  00A6               	movwf	_atoi$1709
 14915  2BEE  0821               	movf	??_atoi+1,w
 14916  2BEF  00A7               	movwf	_atoi$1709+1
 14917  2BF0  0826               	movf	_atoi$1709,w
 14918  2BF1  0427               	iorwf	_atoi$1709+1,w
 14919  2BF2  1903               	btfsc	3,2
 14920  2BF3  2BFE               	goto	l7929
 14921  2BF4  3001               	movlw	1
 14922  2BF5  07F7               	addwf	atoi@s,f
 14923  2BF6  3000               	movlw	0
 14924  2BF7  3DF8               	addwfc	atoi@s+1,f
 14925  2BF8  2BCD               	goto	l7913
 14926  2BF9                     l7927:	
 14927  2BF9  3001               	movlw	1
 14928  2BFA  00A4               	movwf	atoi@neg
 14929  2BFB  3000               	movlw	0
 14930  2BFC  00A5               	movwf	atoi@neg+1
 14931  2BFD  2C31               	goto	l1395
 14932  2BFE                     l7929:	
 14933  2BFE  0877               	movf	atoi@s,w
 14934  2BFF  0084               	movwf	4
 14935  2C00  0878               	movf	atoi@s+1,w
 14936  2C01  0085               	movwf	5
 14937  2C02  0800               	movf	0,w	;code access
 14938  2C03  00A0               	movwf	??_atoi
 14939  2C04  01A1               	clrf	??_atoi+1
 14940                           
 14941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14942                           ; Switch size 1, requested type "simple"
 14943                           ; Number of cases is 1, Range of values is 0 to 0
 14944                           ; switch strategies available:
 14945                           ; Name         Instructions Cycles
 14946                           ; simple_byte            4     3 (average)
 14947                           ; direct_byte            8     6 (fixed)
 14948                           ; jumptable            260     6 (fixed)
 14949                           ;	Chosen strategy is simple_byte
 14950  2C05  0821               	movf	??_atoi+1,w
 14951  2C06  3A00               	xorlw	0	; case 0
 14952  2C07  1903               	skipnz
 14953  2C08  2C0A               	goto	l8889
 14954  2C09  2C35               	goto	l7935
 14955  2C0A                     l8889:	
 14956                           
 14957                           ; Switch size 1, requested type "simple"
 14958                           ; Number of cases is 2, Range of values is 43 to 45
 14959                           ; switch strategies available:
 14960                           ; Name         Instructions Cycles
 14961                           ; simple_byte            7     4 (average)
 14962                           ; direct_byte           15     9 (fixed)
 14963                           ; jumptable            263     9 (fixed)
 14964                           ;	Chosen strategy is simple_byte
 14965  2C0A  0820               	movf	??_atoi,w
 14966  2C0B  3A2B               	xorlw	43	; case 43
 14967  2C0C  1903               	skipnz
 14968  2C0D  2C31               	goto	l1395
 14969  2C0E  3A06               	xorlw	6	; case 45
 14970  2C0F  1903               	skipnz
 14971  2C10  2BF9               	goto	l7927
 14972  2C11  2C35               	goto	l7935
 14973  2C12                     l7931:	
 14974  2C12  0877               	movf	atoi@s,w
 14975  2C13  0084               	movwf	4
 14976  2C14  0878               	movf	atoi@s+1,w
 14977  2C15  0085               	movwf	5
 14978  2C16  0800               	movf	0,w	;code access
 14979  2C17  00A0               	movwf	??_atoi
 14980  2C18  082C               	movf	atoi@n+1,w
 14981  2C19  00F2               	movwf	___wmul@multiplier+1
 14982  2C1A  082B               	movf	atoi@n,w
 14983  2C1B  00F1               	movwf	___wmul@multiplier
 14984  2C1C  300A               	movlw	10
 14985  2C1D  00F3               	movwf	___wmul@multiplicand
 14986  2C1E  3000               	movlw	0
 14987  2C1F  00F4               	movwf	___wmul@multiplicand+1
 14988  2C20  31B1  21E3  31AB   	fcall	___wmul
 14989  2C23  0872               	movf	?___wmul+1,w
 14990  2C24  0020               	movlb	0	; select bank0
 14991  2C25  00A2               	movwf	??_atoi+2
 14992  2C26  0820               	movf	??_atoi,w
 14993  2C27  0271               	subwf	?___wmul,w
 14994  2C28  00A1               	movwf	??_atoi+1
 14995  2C29  1C03               	skipc
 14996  2C2A  03A2               	decf	??_atoi+2,f
 14997  2C2B  0821               	movf	??_atoi+1,w
 14998  2C2C  3E30               	addlw	48
 14999  2C2D  00AB               	movwf	atoi@n
 15000  2C2E  3000               	movlw	0
 15001  2C2F  3D22               	addwfc	??_atoi+2,w
 15002  2C30  00AC               	movwf	atoi@n+1
 15003  2C31                     l1395:	
 15004  2C31  3001               	movlw	1
 15005  2C32  07F7               	addwf	atoi@s,f
 15006  2C33  3000               	movlw	0
 15007  2C34  3DF8               	addwfc	atoi@s+1,f
 15008  2C35                     l7935:	
 15009  2C35  0877               	movf	atoi@s,w
 15010  2C36  0084               	movwf	4
 15011  2C37  0878               	movf	atoi@s+1,w
 15012  2C38  0085               	movwf	5
 15013  2C39  0800               	movf	0,w	;code access
 15014  2C3A  3ED0               	addlw	208
 15015  2C3B  00A0               	movwf	??_atoi
 15016  2C3C  30FF               	movlw	255
 15017  2C3D  1803               	skipnc
 15018  2C3E  3000               	movlw	0
 15019  2C3F  00A1               	movwf	??_atoi+1
 15020  2C40  3000               	movlw	0
 15021  2C41  0221               	subwf	??_atoi+1,w
 15022  2C42  300A               	movlw	10
 15023  2C43  1903               	skipnz
 15024  2C44  0220               	subwf	??_atoi,w
 15025  2C45  1803               	btfsc	3,0
 15026  2C46  2C49               	goto	u11380
 15027  2C47  3001               	movlw	1
 15028  2C48  2C4A               	goto	u11390
 15029  2C49                     u11380:	
 15030  2C49  3000               	movlw	0
 15031  2C4A                     u11390:	
 15032  2C4A  00A2               	movwf	??_atoi+2
 15033  2C4B  01A3               	clrf	??_atoi+3
 15034  2C4C  0822               	movf	??_atoi+2,w
 15035  2C4D  00A8               	movwf	_atoi$1711
 15036  2C4E  0823               	movf	??_atoi+3,w
 15037  2C4F  00A9               	movwf	_atoi$1711+1
 15038  2C50  0828               	movf	_atoi$1711,w
 15039  2C51  0429               	iorwf	_atoi$1711+1,w
 15040  2C52  1D03               	btfss	3,2
 15041  2C53  2C12               	goto	l7931
 15042  2C54  0824               	movf	atoi@neg,w
 15043  2C55  0425               	iorwf	atoi@neg+1,w
 15044  2C56  1D03               	btfss	3,2
 15045  2C57  2C64               	goto	l7945
 15046  2C58  092B               	comf	atoi@n,w
 15047  2C59  00A0               	movwf	??_atoi
 15048  2C5A  092C               	comf	atoi@n+1,w
 15049  2C5B  00A1               	movwf	??_atoi+1
 15050  2C5C  0AA0               	incf	??_atoi,f
 15051  2C5D  1903               	skipnz
 15052  2C5E  0AA1               	incf	??_atoi+1,f
 15053  2C5F  0820               	movf	??_atoi,w
 15054  2C60  00F7               	movwf	?_atoi
 15055  2C61  0821               	movf	??_atoi+1,w
 15056  2C62  00F8               	movwf	?_atoi+1
 15057  2C63  0008               	return
 15058  2C64                     l7945:	
 15059  2C64  082C               	movf	atoi@n+1,w
 15060  2C65  00F8               	movwf	?_atoi+1
 15061  2C66  082B               	movf	atoi@n,w
 15062  2C67  00F7               	movwf	?_atoi
 15063  2C68  0008               	return
 15064  2C69                     __end_of_atoi:	
 15065                           
 15066                           	psect	text41
 15067  2000                     __ptext41:	
 15068 ;; *************** function _isspace *****************
 15069 ;; Defined at:
 15070 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  c               2    1[COMMON] int 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  2    1[COMMON] int 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;Total ram usage:        5 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    1
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_atoi
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           
 15099                           ;psect for function _isspace
 15100  2000                     _isspace:	
 15101                           
 15102                           ;incstack = 0
 15103                           ; Regs used in _isspace: [wreg+status,2+status,0]
 15104  2000  01F5               	clrf	_isspace$1749
 15105  2001  0AF5               	incf	_isspace$1749,f
 15106  2002  3020               	movlw	32
 15107  2003  0671               	xorwf	isspace@c,w
 15108  2004  0472               	iorwf	isspace@c+1,w
 15109  2005  1903               	btfsc	3,2
 15110  2006  2814               	goto	l5293
 15111  2007  0871               	movf	isspace@c,w
 15112  2008  3EF7               	addlw	247
 15113  2009  00F3               	movwf	??_isspace
 15114  200A  30FF               	movlw	255
 15115  200B  3D72               	addwfc	isspace@c+1,w
 15116  200C  00F4               	movwf	??_isspace+1
 15117  200D  3000               	movlw	0
 15118  200E  0274               	subwf	??_isspace+1,w
 15119  200F  3005               	movlw	5
 15120  2010  1903               	skipnz
 15121  2011  0273               	subwf	??_isspace,w
 15122  2012  1803               	btfsc	3,0
 15123  2013  01F5               	clrf	_isspace$1749
 15124  2014                     l5293:	
 15125  2014  0875               	movf	_isspace$1749,w
 15126  2015  00F3               	movwf	??_isspace
 15127  2016  01F4               	clrf	??_isspace+1
 15128  2017  0873               	movf	??_isspace,w
 15129  2018  00F1               	movwf	?_isspace
 15130  2019  0874               	movf	??_isspace+1,w
 15131  201A  00F2               	movwf	?_isspace+1
 15132  201B  0008               	return
 15133  201C                     __end_of_isspace:	
 15134                           
 15135                           	psect	text42
 15136  3126                     __ptext42:	
 15137 ;; *************** function _isdigit *****************
 15138 ;; Defined at:
 15139 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 15140 ;; Parameters:    Size  Location     Type
 15141 ;;  c               2    1[COMMON] int 
 15142 ;; Auto vars:     Size  Location     Type
 15143 ;;		None
 15144 ;; Return value:  Size  Location     Type
 15145 ;;                  2    1[COMMON] int 
 15146 ;; Registers used:
 15147 ;;		wreg, status,2, status,0
 15148 ;; Tracked objects:
 15149 ;;		On entry : 0/0
 15150 ;;		On exit  : 0/0
 15151 ;;		Unchanged: 0/0
 15152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15157 ;;Total ram usage:        6 bytes
 15158 ;; Hardware stack levels used:    1
 15159 ;; Hardware stack levels required when called:    1
 15160 ;; This function calls:
 15161 ;;		Nothing
 15162 ;; This function is called by:
 15163 ;;		_vfpfcnvrt
 15164 ;;		_atoi
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           
 15169                           ;psect for function _isdigit
 15170  3126                     _isdigit:	
 15171                           
 15172                           ;incstack = 0
 15173                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15174  3126  0871               	movf	isdigit@c,w
 15175  3127  3ED0               	addlw	208
 15176  3128  00F3               	movwf	??_isdigit
 15177  3129  30FF               	movlw	255
 15178  312A  3D72               	addwfc	isdigit@c+1,w
 15179  312B  00F4               	movwf	??_isdigit+1
 15180  312C  3000               	movlw	0
 15181  312D  0274               	subwf	??_isdigit+1,w
 15182  312E  300A               	movlw	10
 15183  312F  1903               	skipnz
 15184  3130  0273               	subwf	??_isdigit,w
 15185  3131  1803               	btfsc	3,0
 15186  3132  2935               	goto	u5730
 15187  3133  3001               	movlw	1
 15188  3134  2936               	goto	u5740
 15189  3135                     u5730:	
 15190  3135  3000               	movlw	0
 15191  3136                     u5740:	
 15192  3136  00F5               	movwf	??_isdigit+2
 15193  3137  01F6               	clrf	??_isdigit+3
 15194  3138  0875               	movf	??_isdigit+2,w
 15195  3139  00F1               	movwf	?_isdigit
 15196  313A  0876               	movf	??_isdigit+3,w
 15197  313B  00F2               	movwf	?_isdigit+1
 15198  313C  0008               	return
 15199  313D                     __end_of_isdigit:	
 15200                           
 15201                           	psect	text43
 15202  31C9                     __ptext43:	
 15203 ;; *************** function _EUSART_Write_Text *****************
 15204 ;; Defined at:
 15205 ;;		line 75 in file "EUSART.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;  text            2    2[COMMON] PTR unsigned char 
 15208 ;;		 -> STR_25(3), STR_12(3), STR_11(38), STR_10(45), 
 15209 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 15210 ;;		 -> STR_2(46), STR_1(40), 
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;  i               2    5[COMMON] int 
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1    wreg      void 
 15215 ;; Registers used:
 15216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;Total ram usage:        5 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:    2
 15229 ;; This function calls:
 15230 ;;		_EUSART_Write
 15231 ;; This function is called by:
 15232 ;;		_statemachine
 15233 ;;		_printotAFERegisters
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           
 15238                           ;psect for function _EUSART_Write_Text
 15239  31C9                     _EUSART_Write_Text:	
 15240                           
 15241                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 15242                           
 15243                           ;incstack = 0
 15244                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15245  31C9  01F5               	clrf	EUSART_Write_Text@i
 15246  31CA  01F6               	clrf	EUSART_Write_Text@i+1
 15247  31CB                     l6585:	
 15248  31CB  0872               	movf	EUSART_Write_Text@text,w
 15249  31CC  0775               	addwf	EUSART_Write_Text@i,w
 15250  31CD  0084               	movwf	4
 15251  31CE  0873               	movf	EUSART_Write_Text@text+1,w
 15252  31CF  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15253  31D0  0085               	movwf	5
 15254  31D1  0012               	moviw fsr0++
 15255  31D2  1903               	btfsc	3,2
 15256  31D3  0008               	return
 15257                           
 15258                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 15259  31D4  0872               	movf	EUSART_Write_Text@text,w
 15260  31D5  0775               	addwf	EUSART_Write_Text@i,w
 15261  31D6  0084               	movwf	4
 15262  31D7  0873               	movf	EUSART_Write_Text@text+1,w
 15263  31D8  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15264  31D9  0085               	movwf	5
 15265  31DA  0800               	movf	0,w	;code access
 15266  31DB  31B0  20C1  31B1   	fcall	_EUSART_Write
 15267  31DE  3001               	movlw	1
 15268  31DF  07F5               	addwf	EUSART_Write_Text@i,f
 15269  31E0  3000               	movlw	0
 15270  31E1  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 15271  31E2  29CB               	goto	l6585
 15272  31E3                     __end_of_EUSART_Write_Text:	
 15273                           
 15274                           	psect	text44
 15275  30C1                     __ptext44:	
 15276 ;; *************** function _EUSART_Write *****************
 15277 ;; Defined at:
 15278 ;;		line 56 in file "EUSART.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  txData          1    wreg     unsigned char 
 15281 ;; Auto vars:     Size  Location     Type
 15282 ;;  txData          1    1[COMMON] unsigned char 
 15283 ;; Return value:  Size  Location     Type
 15284 ;;                  1    wreg      void 
 15285 ;; Registers used:
 15286 ;;		wreg
 15287 ;; Tracked objects:
 15288 ;;		On entry : 0/0
 15289 ;;		On exit  : 0/0
 15290 ;;		Unchanged: 0/0
 15291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15296 ;;Total ram usage:        1 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; Hardware stack levels required when called:    1
 15299 ;; This function calls:
 15300 ;;		Nothing
 15301 ;; This function is called by:
 15302 ;;		_EUSART_Write_Text
 15303 ;; This function uses a non-reentrant model
 15304 ;;
 15305                           
 15306                           
 15307                           ;psect for function _EUSART_Write
 15308  30C1                     _EUSART_Write:	
 15309                           
 15310                           ;incstack = 0
 15311                           ; Regs used in _EUSART_Write: [wreg]
 15312                           ;EUSART_Write@txData stored from wreg
 15313  30C1  00F1               	movwf	EUSART_Write@txData
 15314  30C2                     l240:	
 15315                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 15316                           
 15317                           
 15318                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 15319  30C2  0020               	movlb	0	; select bank0
 15320  30C3  1E11               	btfss	17,4	;volatile
 15321  30C4  28C2               	goto	l240
 15322                           
 15323                           ;EUSART.c: 62:     TX1REG = txData;
 15324  30C5  0871               	movf	EUSART_Write@txData,w
 15325  30C6  0023               	movlb	3	; select bank3
 15326  30C7  009A               	movwf	26	;volatile
 15327  30C8  0008               	return
 15328  30C9                     __end_of_EUSART_Write:	
 15329                           
 15330                           	psect	text45
 15331  3663                     __ptext45:	
 15332 ;; *************** function _init_AFE *****************
 15333 ;; Defined at:
 15334 ;;		line 3 in file "BQ76920.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15352 ;;Total ram usage:        0 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:    4
 15355 ;; This function calls:
 15356 ;;		_setCellOvervoltageProtection
 15357 ;;		_setCellUndervoltageProtection
 15358 ;;		_setOverCurrentDischargeProtection
 15359 ;;		_setShortCircuitProtection
 15360 ;;		_setShuntResistorValue
 15361 ;;		_setTemperatureLimitsint
 15362 ;; This function is called by:
 15363 ;;		_statemachine
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           
 15368                           ;psect for function _init_AFE
 15369  3663                     _init_AFE:	
 15370                           
 15371                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 15372                           
 15373                           ;incstack = 0
 15374                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15375  3663  30EC               	movlw	236
 15376  3664  0020               	movlb	0	; select bank0
 15377  3665  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 15378  3666  30FF               	movlw	255
 15379  3667  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 15380  3668  302D               	movlw	45
 15381  3669  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 15382  366A  3000               	movlw	0
 15383  366B  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 15384  366C  3000               	movlw	0
 15385  366D  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 15386  366E  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 15387  366F  302D               	movlw	45
 15388  3670  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 15389  3671  3000               	movlw	0
 15390  3672  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 15391  3673  31B3  23FB  31B6   	fcall	_setTemperatureLimitsint
 15392                           
 15393                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 15394  3676  303C               	movlw	60
 15395  3677  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 15396  3678  30A3               	movlw	163
 15397  3679  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 15398  367A  30D7               	movlw	215
 15399  367B  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 15400  367C  300A               	movlw	10
 15401  367D  00F1               	movwf	setShuntResistorValue@res_mOhm
 15402  367E  31B1  2101  31B6   	fcall	_setShuntResistorValue
 15403                           
 15404                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 15405  3681  3000               	movlw	0
 15406  3682  0020               	movlb	0	; select bank0
 15407  3683  00E9               	movwf	setShortCircuitProtection@current_mA+3
 15408  3684  3000               	movlw	0
 15409  3685  00E8               	movwf	setShortCircuitProtection@current_mA+2
 15410  3686  3009               	movlw	9
 15411  3687  00E7               	movwf	setShortCircuitProtection@current_mA+1
 15412  3688  30C4               	movlw	196
 15413  3689  00E6               	movwf	setShortCircuitProtection@current_mA
 15414  368A  30C8               	movlw	200
 15415  368B  00EA               	movwf	setShortCircuitProtection@delay_us
 15416  368C  3000               	movlw	0
 15417  368D  00EB               	movwf	setShortCircuitProtection@delay_us+1
 15418  368E  3186  26D5  31B6   	fcall	_setShortCircuitProtection
 15419                           
 15420                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 15421  3691  3000               	movlw	0
 15422  3692  0020               	movlb	0	; select bank0
 15423  3693  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 15424  3694  3000               	movlw	0
 15425  3695  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 15426  3696  304E               	movlw	78
 15427  3697  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 15428  3698  3020               	movlw	32
 15429  3699  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 15430  369A  3040               	movlw	64
 15431  369B  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 15432  369C  3001               	movlw	1
 15433  369D  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 15434  369E  3199  2130  31B6   	fcall	_setOverCurrentDischargeProtection
 15435                           
 15436                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 15437  36A1  3054               	movlw	84
 15438  36A2  0020               	movlb	0	; select bank0
 15439  36A3  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 15440  36A4  300B               	movlw	11
 15441  36A5  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 15442  36A6  3002               	movlw	2
 15443  36A7  00B4               	movwf	setCellUndervoltageProtection@delay_s
 15444  36A8  3000               	movlw	0
 15445  36A9  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 15446  36AA  31A2  229E  31B6   	fcall	_setCellUndervoltageProtection
 15447                           
 15448                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 15449  36AD  3004               	movlw	4
 15450  36AE  0020               	movlb	0	; select bank0
 15451  36AF  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 15452  36B0  3010               	movlw	16
 15453  36B1  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 15454  36B2  3002               	movlw	2
 15455  36B3  00B4               	movwf	setCellOvervoltageProtection@delay_s
 15456  36B4  3000               	movlw	0
 15457  36B5  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 15458  36B6  31A0  201C         	fcall	_setCellOvervoltageProtection
 15459  36B8  0008               	return
 15460  36B9                     __end_of_init_AFE:	
 15461                           
 15462                           	psect	text46
 15463  33FB                     __ptext46:	
 15464 ;; *************** function _setTemperatureLimitsint *****************
 15465 ;; Defined at:
 15466 ;;		line 56 in file "BQ76920.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;  minDischarge    2    0[BANK0 ] int 
 15469 ;;  maxDischarge    2    2[BANK0 ] int 
 15470 ;;  minCharge_de    2    4[BANK0 ] int 
 15471 ;;  maxCharge_de    2    6[BANK0 ] int 
 15472 ;; Auto vars:     Size  Location     Type
 15473 ;;		None
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  1    wreg      void 
 15476 ;; Registers used:
 15477 ;;		wreg, status,2, status,0, pclath, cstack
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15483 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15487 ;;Total ram usage:        8 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    2
 15490 ;; This function calls:
 15491 ;;		___wmul
 15492 ;; This function is called by:
 15493 ;;		_init_AFE
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function _setTemperatureLimitsint
 15499  33FB                     _setTemperatureLimitsint:	
 15500                           
 15501                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 15502                           
 15503                           ;incstack = 0
 15504                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 15505  33FB  0020               	movlb	0	; select bank0
 15506  33FC  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15507  33FD  00F2               	movwf	___wmul@multiplier+1
 15508  33FE  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15509  33FF  00F1               	movwf	___wmul@multiplier
 15510  3400  300A               	movlw	10
 15511  3401  00F3               	movwf	___wmul@multiplicand
 15512  3402  3000               	movlw	0
 15513  3403  00F4               	movwf	___wmul@multiplicand+1
 15514  3404  31B1  21E3  31B3   	fcall	___wmul
 15515  3407  0872               	movf	?___wmul+1,w
 15516  3408  0023               	movlb	3	; select bank3
 15517  3409  00CD               	movwf	(_minCellTempDischarge+1)^(0+384)
 15518  340A  0871               	movf	?___wmul,w
 15519  340B  00CC               	movwf	_minCellTempDischarge^(0+384)
 15520                           
 15521                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 15522  340C  0020               	movlb	0	; select bank0
 15523  340D  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15524  340E  00F2               	movwf	___wmul@multiplier+1
 15525  340F  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15526  3410  00F1               	movwf	___wmul@multiplier
 15527  3411  300A               	movlw	10
 15528  3412  00F3               	movwf	___wmul@multiplicand
 15529  3413  3000               	movlw	0
 15530  3414  00F4               	movwf	___wmul@multiplicand+1
 15531  3415  31B1  21E3  31B3   	fcall	___wmul
 15532  3418  0872               	movf	?___wmul+1,w
 15533  3419  0023               	movlb	3	; select bank3
 15534  341A  00C9               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15535  341B  0871               	movf	?___wmul,w
 15536  341C  00C8               	movwf	_maxCellTempDischarge^(0+384)
 15537                           
 15538                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 15539  341D  0020               	movlb	0	; select bank0
 15540  341E  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15541  341F  00F2               	movwf	___wmul@multiplier+1
 15542  3420  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15543  3421  00F1               	movwf	___wmul@multiplier
 15544  3422  300A               	movlw	10
 15545  3423  00F3               	movwf	___wmul@multiplicand
 15546  3424  3000               	movlw	0
 15547  3425  00F4               	movwf	___wmul@multiplicand+1
 15548  3426  31B1  21E3  31B3   	fcall	___wmul
 15549  3429  0872               	movf	?___wmul+1,w
 15550  342A  0023               	movlb	3	; select bank3
 15551  342B  00CF               	movwf	(_minCellTempCharge+1)^(0+384)
 15552  342C  0871               	movf	?___wmul,w
 15553  342D  00CE               	movwf	_minCellTempCharge^(0+384)
 15554                           
 15555                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 15556  342E  0020               	movlb	0	; select bank0
 15557  342F  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15558  3430  00F2               	movwf	___wmul@multiplier+1
 15559  3431  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15560  3432  00F1               	movwf	___wmul@multiplier
 15561  3433  300A               	movlw	10
 15562  3434  00F3               	movwf	___wmul@multiplicand
 15563  3435  3000               	movlw	0
 15564  3436  00F4               	movwf	___wmul@multiplicand+1
 15565  3437  31B1  21E3         	fcall	___wmul
 15566  3439  0872               	movf	?___wmul+1,w
 15567  343A  0023               	movlb	3	; select bank3
 15568  343B  00CB               	movwf	(_maxCellTempCharge+1)^(0+384)
 15569  343C  0871               	movf	?___wmul,w
 15570  343D  00CA               	movwf	_maxCellTempCharge^(0+384)
 15571  343E  0008               	return
 15572  343F                     __end_of_setTemperatureLimitsint:	
 15573                           
 15574                           	psect	text47
 15575  31E3                     __ptext47:	
 15576 ;; *************** function ___wmul *****************
 15577 ;; Defined at:
 15578 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  multiplier      2    1[COMMON] unsigned int 
 15581 ;;  multiplicand    2    3[COMMON] unsigned int 
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;  product         2    5[COMMON] unsigned int 
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  2    1[COMMON] unsigned int 
 15586 ;; Registers used:
 15587 ;;		wreg, status,2, status,0
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15596 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15597 ;;Total ram usage:        6 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:    1
 15600 ;; This function calls:
 15601 ;;		Nothing
 15602 ;; This function is called by:
 15603 ;;		_setTemperatureLimitsint
 15604 ;;		_atoi
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           
 15609                           ;psect for function ___wmul
 15610  31E3                     ___wmul:	
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15614  31E3  01F5               	clrf	___wmul@product
 15615  31E4  01F6               	clrf	___wmul@product+1
 15616  31E5                     l4723:	
 15617  31E5  1C71               	btfss	___wmul@multiplier,0
 15618  31E6  29EB               	goto	l909
 15619  31E7  0873               	movf	___wmul@multiplicand,w
 15620  31E8  07F5               	addwf	___wmul@product,f
 15621  31E9  0874               	movf	___wmul@multiplicand+1,w
 15622  31EA  3DF6               	addwfc	___wmul@product+1,f
 15623  31EB                     l909:	
 15624  31EB  3001               	movlw	1
 15625  31EC                     u5765:	
 15626  31EC  35F3               	lslf	___wmul@multiplicand,f
 15627  31ED  0DF4               	rlf	___wmul@multiplicand+1,f
 15628  31EE  0B89               	decfsz	9,f
 15629  31EF  29EC               	goto	u5765
 15630  31F0  3001               	movlw	1
 15631  31F1                     u5775:	
 15632  31F1  36F2               	lsrf	___wmul@multiplier+1,f
 15633  31F2  0CF1               	rrf	___wmul@multiplier,f
 15634  31F3  0B89               	decfsz	9,f
 15635  31F4  29F1               	goto	u5775
 15636  31F5  0871               	movf	___wmul@multiplier,w
 15637  31F6  0472               	iorwf	___wmul@multiplier+1,w
 15638  31F7  1D03               	btfss	3,2
 15639  31F8  29E5               	goto	l4723
 15640  31F9  0876               	movf	___wmul@product+1,w
 15641  31FA  00F2               	movwf	?___wmul+1
 15642  31FB  0875               	movf	___wmul@product,w
 15643  31FC  00F1               	movwf	?___wmul
 15644  31FD  0008               	return
 15645  31FE                     __end_of___wmul:	
 15646                           
 15647                           	psect	text48
 15648  3101                     __ptext48:	
 15649 ;; *************** function _setShuntResistorValue *****************
 15650 ;; Defined at:
 15651 ;;		line 68 in file "BQ76920.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;  res_mOhm        4    1[COMMON] float 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;		None
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  1    wreg      void 
 15658 ;; Registers used:
 15659 ;;		wreg
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15669 ;;Total ram usage:        4 bytes
 15670 ;; Hardware stack levels used:    1
 15671 ;; Hardware stack levels required when called:    1
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_init_AFE
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679                           
 15680                           ;psect for function _setShuntResistorValue
 15681  3101                     _setShuntResistorValue:	
 15682                           
 15683                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 15684                           
 15685                           ;incstack = 0
 15686                           ; Regs used in _setShuntResistorValue: [wreg]
 15687  3101  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15688  3102  0023               	movlb	3	; select bank3
 15689  3103  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15690  3104  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15691  3105  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15692  3106  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15693  3107  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15694  3108  0871               	movf	setShuntResistorValue@res_mOhm,w
 15695  3109  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15696  310A  0008               	return
 15697  310B                     __end_of_setShuntResistorValue:	
 15698                           
 15699                           	psect	text49
 15700  06D5                     __ptext49:	
 15701 ;; *************** function _setShortCircuitProtection *****************
 15702 ;; Defined at:
 15703 ;;		line 76 in file "BQ76920.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;  current_mA      4   70[BANK0 ] long 
 15706 ;;  delay_us        2   74[BANK0 ] int 
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;  i               2   10[BANK1 ] int 
 15709 ;;  i               2    8[BANK1 ] int 
 15710 ;;  scaler          4    0[BANK1 ] float 
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  1    wreg      void 
 15713 ;; Registers used:
 15714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15720 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15721 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15722 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15723 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15724 ;;Total ram usage:       21 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    3
 15727 ;; This function calls:
 15728 ;;		_I2C_writeRegister
 15729 ;;		___fldiv
 15730 ;;		___flge
 15731 ;;		___flmul
 15732 ;;		___xxtofl
 15733 ;; This function is called by:
 15734 ;;		_init_AFE
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           
 15739                           ;psect for function _setShortCircuitProtection
 15740  06D5                     _setShortCircuitProtection:	
 15741                           
 15742                           ;BQ76920.c: 81:     float scaler = 1000.0;
 15743                           
 15744                           ;incstack = 0
 15745                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15746  06D5  3044               	movlw	68
 15747  06D6  0021               	movlb	1	; select bank1
 15748  06D7  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15749  06D8  307A               	movlw	122
 15750  06D9  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15751  06DA  3000               	movlw	0
 15752  06DB  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15753  06DC  3000               	movlw	0
 15754  06DD  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15755                           
 15756                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 15757  06DE  30F8               	movlw	-8
 15758  06DF  0023               	movlb	3	; select bank3
 15759  06E0  05D6               	andwf	BQ76920@protect1^(0+384),f
 15760                           
 15761                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15762  06E1  0021               	movlb	1	; select bank1
 15763  06E2  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15764  06E3  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15765  06E4                     l6617:	
 15766                           
 15767                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15768  06E4  0023               	movlb	3	; select bank3
 15769  06E5  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15770  06E6  0020               	movlb	0	; select bank0
 15771  06E7  00A9               	movwf	___flmul@b+3
 15772  06E8  0023               	movlb	3	; select bank3
 15773  06E9  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15774  06EA  0020               	movlb	0	; select bank0
 15775  06EB  00A8               	movwf	___flmul@b+2
 15776  06EC  0023               	movlb	3	; select bank3
 15777  06ED  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15778  06EE  0020               	movlb	0	; select bank0
 15779  06EF  00A7               	movwf	___flmul@b+1
 15780  06F0  0023               	movlb	3	; select bank3
 15781  06F1  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15782  06F2  0020               	movlb	0	; select bank0
 15783  06F3  00A6               	movwf	___flmul@b
 15784  06F4  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15785  06F5  00F4               	movwf	___xxtofl@val+3
 15786  06F6  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15787  06F7  00F3               	movwf	___xxtofl@val+2
 15788  06F8  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15789  06F9  00F2               	movwf	___xxtofl@val+1
 15790  06FA  0866               	movf	setShortCircuitProtection@current_mA,w
 15791  06FB  00F1               	movwf	___xxtofl@val
 15792  06FC  3001               	movlw	1
 15793  06FD  31AB  2332  3186   	fcall	___xxtofl
 15794  0700  0874               	movf	?___xxtofl+3,w
 15795  0701  0020               	movlb	0	; select bank0
 15796  0702  00AD               	movwf	___flmul@a+3
 15797  0703  0873               	movf	?___xxtofl+2,w
 15798  0704  00AC               	movwf	___flmul@a+2
 15799  0705  0872               	movf	?___xxtofl+1,w
 15800  0706  00AB               	movwf	___flmul@a+1
 15801  0707  0871               	movf	?___xxtofl,w
 15802  0708  00AA               	movwf	___flmul@a
 15803  0709  3195  25D4  3186   	fcall	___flmul
 15804  070C  0020               	movlb	0	; select bank0
 15805  070D  0829               	movf	?___flmul+3,w
 15806  070E  0021               	movlb	1	; select bank1
 15807  070F  00A7               	movwf	(_setShortCircuitProtection$2078+3)^(0+128)
 15808  0710  0020               	movlb	0	; select bank0
 15809  0711  0828               	movf	?___flmul+2,w
 15810  0712  0021               	movlb	1	; select bank1
 15811  0713  00A6               	movwf	(_setShortCircuitProtection$2078+2)^(0+128)
 15812  0714  0020               	movlb	0	; select bank0
 15813  0715  0827               	movf	?___flmul+1,w
 15814  0716  0021               	movlb	1	; select bank1
 15815  0717  00A5               	movwf	(_setShortCircuitProtection$2078+1)^(0+128)
 15816  0718  0020               	movlb	0	; select bank0
 15817  0719  0826               	movf	?___flmul,w
 15818  071A  0021               	movlb	1	; select bank1
 15819  071B  00A4               	movwf	_setShortCircuitProtection$2078^(0+128)
 15820                           
 15821                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15822  071C  3044               	movlw	68
 15823  071D  0020               	movlb	0	; select bank0
 15824  071E  00C3               	movwf	___fldiv@a+3
 15825  071F  307A               	movlw	122
 15826  0720  00C2               	movwf	___fldiv@a+2
 15827  0721  3000               	movlw	0
 15828  0722  00C1               	movwf	___fldiv@a+1
 15829  0723  3000               	movlw	0
 15830  0724  00C0               	movwf	___fldiv@a
 15831  0725  0021               	movlb	1	; select bank1
 15832  0726  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15833  0727  0020               	movlb	0	; select bank0
 15834  0728  00A9               	movwf	___flmul@b+3
 15835  0729  0021               	movlb	1	; select bank1
 15836  072A  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15837  072B  0020               	movlb	0	; select bank0
 15838  072C  00A8               	movwf	___flmul@b+2
 15839  072D  0021               	movlb	1	; select bank1
 15840  072E  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15841  072F  0020               	movlb	0	; select bank0
 15842  0730  00A7               	movwf	___flmul@b+1
 15843  0731  0021               	movlb	1	; select bank1
 15844  0732  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15845  0733  0020               	movlb	0	; select bank0
 15846  0734  00A6               	movwf	___flmul@b
 15847  0735  0021               	movlb	1	; select bank1
 15848  0736  0827               	movf	(_setShortCircuitProtection$2078+3)^(0+128),w
 15849  0737  0020               	movlb	0	; select bank0
 15850  0738  00AD               	movwf	___flmul@a+3
 15851  0739  0021               	movlb	1	; select bank1
 15852  073A  0826               	movf	(_setShortCircuitProtection$2078+2)^(0+128),w
 15853  073B  0020               	movlb	0	; select bank0
 15854  073C  00AC               	movwf	___flmul@a+2
 15855  073D  0021               	movlb	1	; select bank1
 15856  073E  0825               	movf	(_setShortCircuitProtection$2078+1)^(0+128),w
 15857  073F  0020               	movlb	0	; select bank0
 15858  0740  00AB               	movwf	___flmul@a+1
 15859  0741  0021               	movlb	1	; select bank1
 15860  0742  0824               	movf	_setShortCircuitProtection$2078^(0+128),w
 15861  0743  0020               	movlb	0	; select bank0
 15862  0744  00AA               	movwf	___flmul@a
 15863  0745  3195  25D4  3186   	fcall	___flmul
 15864  0748  0020               	movlb	0	; select bank0
 15865  0749  0829               	movf	?___flmul+3,w
 15866  074A  00C7               	movwf	___fldiv@b+3
 15867  074B  0828               	movf	?___flmul+2,w
 15868  074C  00C6               	movwf	___fldiv@b+2
 15869  074D  0827               	movf	?___flmul+1,w
 15870  074E  00C5               	movwf	___fldiv@b+1
 15871  074F  0826               	movf	?___flmul,w
 15872  0750  00C4               	movwf	___fldiv@b
 15873  0751  3190  2052  3186   	fcall	___fldiv
 15874  0754  0020               	movlb	0	; select bank0
 15875  0755  0843               	movf	?___fldiv+3,w
 15876  0756  00DD               	movwf	___flge@ff1+3
 15877  0757  0842               	movf	?___fldiv+2,w
 15878  0758  00DC               	movwf	___flge@ff1+2
 15879  0759  0841               	movf	?___fldiv+1,w
 15880  075A  00DB               	movwf	___flge@ff1+1
 15881  075B  0840               	movf	?___fldiv,w
 15882  075C  00DA               	movwf	___flge@ff1
 15883  075D  0021               	movlb	1	; select bank1
 15884  075E  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15885  075F  0085               	movwf	5
 15886  0760  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15887  0761  0084               	movwf	4
 15888  0762  3584               	lslf	4,f
 15889  0763  0D85               	rlf	5,f
 15890  0764  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 15891  0765  0784               	addwf	4,f
 15892  0766  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 15893  0767  3D85               	addwfc	5,f
 15894  0768  3F00               	moviw [0]fsr0
 15895  0769  0020               	movlb	0	; select bank0
 15896  076A  00EC               	movwf	??_setShortCircuitProtection
 15897  076B  3F01               	moviw [1]fsr0
 15898  076C  00ED               	movwf	??_setShortCircuitProtection+1
 15899  076D  086C               	movf	??_setShortCircuitProtection,w
 15900  076E  00F1               	movwf	___xxtofl@val
 15901  076F  086D               	movf	??_setShortCircuitProtection+1,w
 15902  0770  00F2               	movwf	___xxtofl@val+1
 15903  0771  0D89               	rlf	9,f
 15904  0772  3B89               	subwfb	9,f
 15905  0773  0989               	comf	9,f
 15906  0774  00F3               	movwf	___xxtofl@val+2
 15907  0775  00F4               	movwf	___xxtofl@val+3
 15908  0776  3001               	movlw	1
 15909  0777  31AB  2332  3186   	fcall	___xxtofl
 15910  077A  0874               	movf	?___xxtofl+3,w
 15911  077B  0020               	movlb	0	; select bank0
 15912  077C  00E1               	movwf	___flge@ff2+3
 15913  077D  0873               	movf	?___xxtofl+2,w
 15914  077E  00E0               	movwf	___flge@ff2+2
 15915  077F  0872               	movf	?___xxtofl+1,w
 15916  0780  00DF               	movwf	___flge@ff2+1
 15917  0781  0871               	movf	?___xxtofl,w
 15918  0782  00DE               	movwf	___flge@ff2
 15919  0783  31A8  2030  3186   	fcall	___flge
 15920  0786  1C03               	btfss	3,0
 15921  0787  2F90               	goto	l6623
 15922                           
 15923                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 15924  0788  0023               	movlb	3	; select bank3
 15925  0789  0856               	movf	BQ76920@protect1^(0+384),w
 15926  078A  0021               	movlb	1	; select bank1
 15927  078B  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15928  078C  39F8               	andlw	-8
 15929  078D  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15930  078E  0023               	movlb	3	; select bank3
 15931  078F  00D6               	movwf	BQ76920@protect1^(0+384)
 15932  0790                     l6623:	
 15933                           
 15934                           ;BQ76920.c: 87:     }
 15935  0790  3001               	movlw	1
 15936  0791  0021               	movlb	1	; select bank1
 15937  0792  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15938  0793  3000               	movlw	0
 15939  0794  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15940  0795  3000               	movlw	0
 15941  0796  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15942  0797  3007               	movlw	7
 15943  0798  1903               	skipnz
 15944  0799  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15945  079A  1C03               	skipc
 15946  079B  2EE4               	goto	l6617
 15947                           
 15948                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 15949  079C  30E7               	movlw	-25
 15950  079D  0023               	movlb	3	; select bank3
 15951  079E  05D6               	andwf	BQ76920@protect1^(0+384),f
 15952                           
 15953                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15954  079F  0021               	movlb	1	; select bank1
 15955  07A0  01AA               	clrf	setShortCircuitProtection@i_943^(0+128)
 15956  07A1  01AB               	clrf	(setShortCircuitProtection@i_943+1)^(0+128)
 15957  07A2                     l6635:	
 15958                           
 15959                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 15960  07A2  082B               	movf	(setShortCircuitProtection@i_943+1)^(0+128),w
 15961  07A3  0085               	movwf	5
 15962  07A4  082A               	movf	setShortCircuitProtection@i_943^(0+128),w
 15963  07A5  0084               	movwf	4
 15964  07A6  3584               	lslf	4,f
 15965  07A7  0D85               	rlf	5,f
 15966  07A8  3008               	movlw	low (_SCD_delay_setting| (0+32768))
 15967  07A9  0784               	addwf	4,f
 15968  07AA  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15969  07AB  3D85               	addwfc	5,f
 15970  07AC  3F00               	moviw [0]fsr0
 15971  07AD  0020               	movlb	0	; select bank0
 15972  07AE  00EC               	movwf	??_setShortCircuitProtection
 15973  07AF  3F01               	moviw [1]fsr0
 15974  07B0  00ED               	movwf	??_setShortCircuitProtection+1
 15975  07B1  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15976  07B2  3A80               	xorlw	128
 15977  07B3  00EE               	movwf	??_setShortCircuitProtection+2
 15978  07B4  086D               	movf	??_setShortCircuitProtection+1,w
 15979  07B5  3A80               	xorlw	128
 15980  07B6  026E               	subwf	??_setShortCircuitProtection+2,w
 15981  07B7  1D03               	skipz
 15982  07B8  2FBB               	goto	u9315
 15983  07B9  086C               	movf	??_setShortCircuitProtection,w
 15984  07BA  026A               	subwf	setShortCircuitProtection@delay_us,w
 15985  07BB                     u9315:	
 15986  07BB  1C03               	skipc
 15987  07BC  2FCC               	goto	l6639
 15988                           
 15989                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 15990  07BD  0021               	movlb	1	; select bank1
 15991  07BE  082A               	movf	setShortCircuitProtection@i_943^(0+128),w
 15992  07BF  0020               	movlb	0	; select bank0
 15993  07C0  00EC               	movwf	??_setShortCircuitProtection
 15994  07C1  0DEC               	rlf	??_setShortCircuitProtection,f
 15995  07C2  0DEC               	rlf	??_setShortCircuitProtection,f
 15996  07C3  0DEC               	rlf	??_setShortCircuitProtection,f
 15997  07C4  0023               	movlb	3	; select bank3
 15998  07C5  0856               	movf	BQ76920@protect1^(0+384),w
 15999  07C6  0020               	movlb	0	; select bank0
 16000  07C7  066C               	xorwf	??_setShortCircuitProtection,w
 16001  07C8  39E7               	andlw	-25
 16002  07C9  066C               	xorwf	??_setShortCircuitProtection,w
 16003  07CA  0023               	movlb	3	; select bank3
 16004  07CB  00D6               	movwf	BQ76920@protect1^(0+384)
 16005  07CC                     l6639:	
 16006                           
 16007                           ;BQ76920.c: 94:     }
 16008  07CC  3001               	movlw	1
 16009  07CD  0021               	movlb	1	; select bank1
 16010  07CE  07AA               	addwf	setShortCircuitProtection@i_943^(0+128),f
 16011  07CF  3000               	movlw	0
 16012  07D0  3DAB               	addwfc	(setShortCircuitProtection@i_943+1)^(0+128),f
 16013  07D1  3000               	movlw	0
 16014  07D2  022B               	subwf	(setShortCircuitProtection@i_943+1)^(0+128),w
 16015  07D3  3007               	movlw	7
 16016  07D4  1903               	skipnz
 16017  07D5  022A               	subwf	setShortCircuitProtection@i_943^(0+128),w
 16018  07D6  1C03               	skipc
 16019  07D7  2FA2               	goto	l6635
 16020                           
 16021                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 16022  07D8  3018               	movlw	24
 16023  07D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 16024  07DA  3000               	movlw	0
 16025  07DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16026  07DC  3006               	movlw	6
 16027  07DD  00F7               	movwf	I2C_writeRegister@regAddress
 16028  07DE  3000               	movlw	0
 16029  07DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 16030  07E0  0023               	movlb	3	; select bank3
 16031  07E1  0856               	movf	BQ76920@protect1^(0+384),w
 16032  07E2  0020               	movlb	0	; select bank0
 16033  07E3  00EC               	movwf	??_setShortCircuitProtection
 16034  07E4  01ED               	clrf	??_setShortCircuitProtection+1
 16035  07E5  086C               	movf	??_setShortCircuitProtection,w
 16036  07E6  00F9               	movwf	I2C_writeRegister@data
 16037  07E7  086D               	movf	??_setShortCircuitProtection+1,w
 16038  07E8  00FA               	movwf	I2C_writeRegister@data+1
 16039  07E9  31B2  221B         	fcall	_I2C_writeRegister
 16040  07EB  0008               	return
 16041  07EC                     __end_of_setShortCircuitProtection:	
 16042                           
 16043                           	psect	text50
 16044  1930                     __ptext50:	
 16045 ;; *************** function _setOverCurrentDischargeProtection *****************
 16046 ;; Defined at:
 16047 ;;		line 103 in file "BQ76920.c"
 16048 ;; Parameters:    Size  Location     Type
 16049 ;;  current_mA      4   70[BANK0 ] long 
 16050 ;;  delay_ms        2   74[BANK0 ] int 
 16051 ;; Auto vars:     Size  Location     Type
 16052 ;;  i               2   10[BANK1 ] int 
 16053 ;;  i               2    8[BANK1 ] int 
 16054 ;;  scaler          4    0[BANK1 ] float 
 16055 ;; Return value:  Size  Location     Type
 16056 ;;                  1    wreg      void 
 16057 ;; Registers used:
 16058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : 0/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16064 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16065 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16066 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16067 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16068 ;;Total ram usage:       21 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:    3
 16071 ;; This function calls:
 16072 ;;		_I2C_writeRegister
 16073 ;;		___fldiv
 16074 ;;		___flge
 16075 ;;		___flmul
 16076 ;;		___xxtofl
 16077 ;; This function is called by:
 16078 ;;		_init_AFE
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           
 16083                           ;psect for function _setOverCurrentDischargeProtection
 16084  1930                     _setOverCurrentDischargeProtection:	
 16085                           
 16086                           ;BQ76920.c: 106:     float scaler = 1000.0;
 16087                           
 16088                           ;incstack = 0
 16089                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 16090  1930  3044               	movlw	68
 16091  1931  0021               	movlb	1	; select bank1
 16092  1932  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 16093  1933  307A               	movlw	122
 16094  1934  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 16095  1935  3000               	movlw	0
 16096  1936  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 16097  1937  3000               	movlw	0
 16098  1938  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 16099                           
 16100                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 16101  1939  30F0               	movlw	-16
 16102  193A  0023               	movlb	3	; select bank3
 16103  193B  05D5               	andwf	BQ76920@protect2^(0+384),f
 16104                           
 16105                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 16106  193C  0021               	movlb	1	; select bank1
 16107  193D  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 16108  193E  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 16109  193F                     l6655:	
 16110                           
 16111                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 16112  193F  0023               	movlb	3	; select bank3
 16113  1940  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 16114  1941  0020               	movlb	0	; select bank0
 16115  1942  00A9               	movwf	___flmul@b+3
 16116  1943  0023               	movlb	3	; select bank3
 16117  1944  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 16118  1945  0020               	movlb	0	; select bank0
 16119  1946  00A8               	movwf	___flmul@b+2
 16120  1947  0023               	movlb	3	; select bank3
 16121  1948  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 16122  1949  0020               	movlb	0	; select bank0
 16123  194A  00A7               	movwf	___flmul@b+1
 16124  194B  0023               	movlb	3	; select bank3
 16125  194C  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 16126  194D  0020               	movlb	0	; select bank0
 16127  194E  00A6               	movwf	___flmul@b
 16128  194F  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 16129  1950  00F4               	movwf	___xxtofl@val+3
 16130  1951  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 16131  1952  00F3               	movwf	___xxtofl@val+2
 16132  1953  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 16133  1954  00F2               	movwf	___xxtofl@val+1
 16134  1955  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 16135  1956  00F1               	movwf	___xxtofl@val
 16136  1957  3001               	movlw	1
 16137  1958  31AB  2332  3199   	fcall	___xxtofl
 16138  195B  0874               	movf	?___xxtofl+3,w
 16139  195C  0020               	movlb	0	; select bank0
 16140  195D  00AD               	movwf	___flmul@a+3
 16141  195E  0873               	movf	?___xxtofl+2,w
 16142  195F  00AC               	movwf	___flmul@a+2
 16143  1960  0872               	movf	?___xxtofl+1,w
 16144  1961  00AB               	movwf	___flmul@a+1
 16145  1962  0871               	movf	?___xxtofl,w
 16146  1963  00AA               	movwf	___flmul@a
 16147  1964  3195  25D4  3199   	fcall	___flmul
 16148  1967  0020               	movlb	0	; select bank0
 16149  1968  0829               	movf	?___flmul+3,w
 16150  1969  0021               	movlb	1	; select bank1
 16151  196A  00A7               	movwf	(_setOverCurrentDischargeProtection$2079+3)^(0+128)
 16152  196B  0020               	movlb	0	; select bank0
 16153  196C  0828               	movf	?___flmul+2,w
 16154  196D  0021               	movlb	1	; select bank1
 16155  196E  00A6               	movwf	(_setOverCurrentDischargeProtection$2079+2)^(0+128)
 16156  196F  0020               	movlb	0	; select bank0
 16157  1970  0827               	movf	?___flmul+1,w
 16158  1971  0021               	movlb	1	; select bank1
 16159  1972  00A5               	movwf	(_setOverCurrentDischargeProtection$2079+1)^(0+128)
 16160  1973  0020               	movlb	0	; select bank0
 16161  1974  0826               	movf	?___flmul,w
 16162  1975  0021               	movlb	1	; select bank1
 16163  1976  00A4               	movwf	_setOverCurrentDischargeProtection$2079^(0+128)
 16164                           
 16165                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 16166  1977  3044               	movlw	68
 16167  1978  0020               	movlb	0	; select bank0
 16168  1979  00C3               	movwf	___fldiv@a+3
 16169  197A  307A               	movlw	122
 16170  197B  00C2               	movwf	___fldiv@a+2
 16171  197C  3000               	movlw	0
 16172  197D  00C1               	movwf	___fldiv@a+1
 16173  197E  3000               	movlw	0
 16174  197F  00C0               	movwf	___fldiv@a
 16175  1980  0021               	movlb	1	; select bank1
 16176  1981  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 16177  1982  0020               	movlb	0	; select bank0
 16178  1983  00A9               	movwf	___flmul@b+3
 16179  1984  0021               	movlb	1	; select bank1
 16180  1985  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 16181  1986  0020               	movlb	0	; select bank0
 16182  1987  00A8               	movwf	___flmul@b+2
 16183  1988  0021               	movlb	1	; select bank1
 16184  1989  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 16185  198A  0020               	movlb	0	; select bank0
 16186  198B  00A7               	movwf	___flmul@b+1
 16187  198C  0021               	movlb	1	; select bank1
 16188  198D  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 16189  198E  0020               	movlb	0	; select bank0
 16190  198F  00A6               	movwf	___flmul@b
 16191  1990  0021               	movlb	1	; select bank1
 16192  1991  0827               	movf	(_setOverCurrentDischargeProtection$2079+3)^(0+128),w
 16193  1992  0020               	movlb	0	; select bank0
 16194  1993  00AD               	movwf	___flmul@a+3
 16195  1994  0021               	movlb	1	; select bank1
 16196  1995  0826               	movf	(_setOverCurrentDischargeProtection$2079+2)^(0+128),w
 16197  1996  0020               	movlb	0	; select bank0
 16198  1997  00AC               	movwf	___flmul@a+2
 16199  1998  0021               	movlb	1	; select bank1
 16200  1999  0825               	movf	(_setOverCurrentDischargeProtection$2079+1)^(0+128),w
 16201  199A  0020               	movlb	0	; select bank0
 16202  199B  00AB               	movwf	___flmul@a+1
 16203  199C  0021               	movlb	1	; select bank1
 16204  199D  0824               	movf	_setOverCurrentDischargeProtection$2079^(0+128),w
 16205  199E  0020               	movlb	0	; select bank0
 16206  199F  00AA               	movwf	___flmul@a
 16207  19A0  3195  25D4  3199   	fcall	___flmul
 16208  19A3  0020               	movlb	0	; select bank0
 16209  19A4  0829               	movf	?___flmul+3,w
 16210  19A5  00C7               	movwf	___fldiv@b+3
 16211  19A6  0828               	movf	?___flmul+2,w
 16212  19A7  00C6               	movwf	___fldiv@b+2
 16213  19A8  0827               	movf	?___flmul+1,w
 16214  19A9  00C5               	movwf	___fldiv@b+1
 16215  19AA  0826               	movf	?___flmul,w
 16216  19AB  00C4               	movwf	___fldiv@b
 16217  19AC  3190  2052  3199   	fcall	___fldiv
 16218  19AF  0020               	movlb	0	; select bank0
 16219  19B0  0843               	movf	?___fldiv+3,w
 16220  19B1  00DD               	movwf	___flge@ff1+3
 16221  19B2  0842               	movf	?___fldiv+2,w
 16222  19B3  00DC               	movwf	___flge@ff1+2
 16223  19B4  0841               	movf	?___fldiv+1,w
 16224  19B5  00DB               	movwf	___flge@ff1+1
 16225  19B6  0840               	movf	?___fldiv,w
 16226  19B7  00DA               	movwf	___flge@ff1
 16227  19B8  0021               	movlb	1	; select bank1
 16228  19B9  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16229  19BA  0085               	movwf	5
 16230  19BB  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 16231  19BC  0084               	movwf	4
 16232  19BD  3584               	lslf	4,f
 16233  19BE  0D85               	rlf	5,f
 16234  19BF  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 16235  19C0  0784               	addwf	4,f
 16236  19C1  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 16237  19C2  3D85               	addwfc	5,f
 16238  19C3  3F00               	moviw [0]fsr0
 16239  19C4  0020               	movlb	0	; select bank0
 16240  19C5  00EC               	movwf	??_setOverCurrentDischargeProtection
 16241  19C6  3F01               	moviw [1]fsr0
 16242  19C7  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16243  19C8  086C               	movf	??_setOverCurrentDischargeProtection,w
 16244  19C9  00F1               	movwf	___xxtofl@val
 16245  19CA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16246  19CB  00F2               	movwf	___xxtofl@val+1
 16247  19CC  0D89               	rlf	9,f
 16248  19CD  3B89               	subwfb	9,f
 16249  19CE  0989               	comf	9,f
 16250  19CF  00F3               	movwf	___xxtofl@val+2
 16251  19D0  00F4               	movwf	___xxtofl@val+3
 16252  19D1  3001               	movlw	1
 16253  19D2  31AB  2332  3199   	fcall	___xxtofl
 16254  19D5  0874               	movf	?___xxtofl+3,w
 16255  19D6  0020               	movlb	0	; select bank0
 16256  19D7  00E1               	movwf	___flge@ff2+3
 16257  19D8  0873               	movf	?___xxtofl+2,w
 16258  19D9  00E0               	movwf	___flge@ff2+2
 16259  19DA  0872               	movf	?___xxtofl+1,w
 16260  19DB  00DF               	movwf	___flge@ff2+1
 16261  19DC  0871               	movf	?___xxtofl,w
 16262  19DD  00DE               	movwf	___flge@ff2
 16263  19DE  31A8  2030  3199   	fcall	___flge
 16264  19E1  1C03               	btfss	3,0
 16265  19E2  29EB               	goto	l6661
 16266                           
 16267                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 16268  19E3  0023               	movlb	3	; select bank3
 16269  19E4  0855               	movf	BQ76920@protect2^(0+384),w
 16270  19E5  0021               	movlb	1	; select bank1
 16271  19E6  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16272  19E7  39F0               	andlw	-16
 16273  19E8  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16274  19E9  0023               	movlb	3	; select bank3
 16275  19EA  00D5               	movwf	BQ76920@protect2^(0+384)
 16276  19EB                     l6661:	
 16277                           
 16278                           ;BQ76920.c: 112:     }
 16279  19EB  3001               	movlw	1
 16280  19EC  0021               	movlb	1	; select bank1
 16281  19ED  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 16282  19EE  3000               	movlw	0
 16283  19EF  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 16284  19F0  3000               	movlw	0
 16285  19F1  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16286  19F2  300F               	movlw	15
 16287  19F3  1903               	skipnz
 16288  19F4  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 16289  19F5  1C03               	skipc
 16290  19F6  293F               	goto	l6655
 16291                           
 16292                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 16293  19F7  308F               	movlw	-113
 16294  19F8  0023               	movlb	3	; select bank3
 16295  19F9  05D5               	andwf	BQ76920@protect2^(0+384),f
 16296                           
 16297                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 16298  19FA  0021               	movlb	1	; select bank1
 16299  19FB  01AA               	clrf	setOverCurrentDischargeProtection@i_952^(0+128)
 16300  19FC  01AB               	clrf	(setOverCurrentDischargeProtection@i_952+1)^(0+128)
 16301  19FD                     l6673:	
 16302                           
 16303                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 16304  19FD  082B               	movf	(setOverCurrentDischargeProtection@i_952+1)^(0+128),w
 16305  19FE  0085               	movwf	5
 16306  19FF  082A               	movf	setOverCurrentDischargeProtection@i_952^(0+128),w
 16307  1A00  0084               	movwf	4
 16308  1A01  3584               	lslf	4,f
 16309  1A02  0D85               	rlf	5,f
 16310  1A03  30D8               	movlw	low (_OCD_delay_setting| (0+32768))
 16311  1A04  0784               	addwf	4,f
 16312  1A05  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 16313  1A06  3D85               	addwfc	5,f
 16314  1A07  3F00               	moviw [0]fsr0
 16315  1A08  0020               	movlb	0	; select bank0
 16316  1A09  00EC               	movwf	??_setOverCurrentDischargeProtection
 16317  1A0A  3F01               	moviw [1]fsr0
 16318  1A0B  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16319  1A0C  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 16320  1A0D  3A80               	xorlw	128
 16321  1A0E  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 16322  1A0F  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16323  1A10  3A80               	xorlw	128
 16324  1A11  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 16325  1A12  1D03               	skipz
 16326  1A13  2A16               	goto	u9355
 16327  1A14  086C               	movf	??_setOverCurrentDischargeProtection,w
 16328  1A15  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 16329  1A16                     u9355:	
 16330  1A16  1C03               	skipc
 16331  1A17  2A25               	goto	l6677
 16332                           
 16333                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 16334  1A18  0021               	movlb	1	; select bank1
 16335  1A19  082A               	movf	setOverCurrentDischargeProtection@i_952^(0+128),w
 16336  1A1A  0020               	movlb	0	; select bank0
 16337  1A1B  00EC               	movwf	??_setOverCurrentDischargeProtection
 16338  1A1C  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 16339  1A1D  0023               	movlb	3	; select bank3
 16340  1A1E  0855               	movf	BQ76920@protect2^(0+384),w
 16341  1A1F  0020               	movlb	0	; select bank0
 16342  1A20  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16343  1A21  398F               	andlw	-113
 16344  1A22  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16345  1A23  0023               	movlb	3	; select bank3
 16346  1A24  00D5               	movwf	BQ76920@protect2^(0+384)
 16347  1A25                     l6677:	
 16348                           
 16349                           ;BQ76920.c: 119:     }
 16350  1A25  3001               	movlw	1
 16351  1A26  0021               	movlb	1	; select bank1
 16352  1A27  07AA               	addwf	setOverCurrentDischargeProtection@i_952^(0+128),f
 16353  1A28  3000               	movlw	0
 16354  1A29  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_952+1)^(0+128),f
 16355  1A2A  3000               	movlw	0
 16356  1A2B  022B               	subwf	(setOverCurrentDischargeProtection@i_952+1)^(0+128),w
 16357  1A2C  3007               	movlw	7
 16358  1A2D  1903               	skipnz
 16359  1A2E  022A               	subwf	setOverCurrentDischargeProtection@i_952^(0+128),w
 16360  1A2F  1C03               	skipc
 16361  1A30  29FD               	goto	l6673
 16362                           
 16363                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 16364  1A31  3018               	movlw	24
 16365  1A32  00F5               	movwf	I2C_writeRegister@slaveAddress
 16366  1A33  3000               	movlw	0
 16367  1A34  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16368  1A35  3007               	movlw	7
 16369  1A36  00F7               	movwf	I2C_writeRegister@regAddress
 16370  1A37  3000               	movlw	0
 16371  1A38  00F8               	movwf	I2C_writeRegister@regAddress+1
 16372  1A39  0023               	movlb	3	; select bank3
 16373  1A3A  0855               	movf	BQ76920@protect2^(0+384),w
 16374  1A3B  0020               	movlb	0	; select bank0
 16375  1A3C  00EC               	movwf	??_setOverCurrentDischargeProtection
 16376  1A3D  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 16377  1A3E  086C               	movf	??_setOverCurrentDischargeProtection,w
 16378  1A3F  00F9               	movwf	I2C_writeRegister@data
 16379  1A40  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16380  1A41  00FA               	movwf	I2C_writeRegister@data+1
 16381  1A42  31B2  221B         	fcall	_I2C_writeRegister
 16382  1A44  0008               	return
 16383  1A45                     __end_of_setOverCurrentDischargeProtection:	
 16384                           
 16385                           	psect	text51
 16386  15D4                     __ptext51:	
 16387 ;; *************** function ___flmul *****************
 16388 ;; Defined at:
 16389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;  b               4    6[BANK0 ] void 
 16392 ;;  a               4   10[BANK0 ] void 
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;  prod            4   26[BANK0 ] struct .
 16395 ;;  grs             4   20[BANK0 ] unsigned long 
 16396 ;;  temp            2   30[BANK0 ] struct .
 16397 ;;  bexp            1   25[BANK0 ] unsigned char 
 16398 ;;  aexp            1   24[BANK0 ] unsigned char 
 16399 ;;  sign            1   19[BANK0 ] unsigned char 
 16400 ;; Return value:  Size  Location     Type
 16401 ;;                  4    6[BANK0 ] unsigned char 
 16402 ;; Registers used:
 16403 ;;		wreg, status,2, status,0, pclath, cstack
 16404 ;; Tracked objects:
 16405 ;;		On entry : 0/0
 16406 ;;		On exit  : 0/0
 16407 ;;		Unchanged: 0/0
 16408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16410 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16411 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16412 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16413 ;;Total ram usage:       26 bytes
 16414 ;; Hardware stack levels used:    1
 16415 ;; Hardware stack levels required when called:    2
 16416 ;; This function calls:
 16417 ;;		__Umul8_16
 16418 ;; This function is called by:
 16419 ;;		_setShortCircuitProtection
 16420 ;;		_setOverCurrentDischargeProtection
 16421 ;;		_efgtoa
 16422 ;; This function uses a non-reentrant model
 16423 ;;
 16424                           
 16425                           
 16426                           ;psect for function ___flmul
 16427  15D4                     ___flmul:	
 16428                           
 16429                           ;incstack = 0
 16430                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16431  15D4  0020               	movlb	0	; select bank0
 16432  15D5  0829               	movf	___flmul@b+3,w
 16433  15D6  3980               	andlw	128
 16434  15D7  00AE               	movwf	??___flmul
 16435  15D8  082E               	movf	??___flmul,w
 16436  15D9  00B3               	movwf	___flmul@sign
 16437  15DA  3529               	lslf	___flmul@b+3,w
 16438  15DB  00AE               	movwf	??___flmul
 16439  15DC  082E               	movf	??___flmul,w
 16440  15DD  00B9               	movwf	___flmul@bexp
 16441  15DE  1BA8               	btfsc	___flmul@b+2,7
 16442  15DF  1439               	bsf	___flmul@bexp,0
 16443  15E0  0839               	movf	___flmul@bexp,w
 16444  15E1  1903               	btfsc	3,2
 16445  15E2  2DF0               	goto	l5161
 16446  15E3  0A39               	incf	___flmul@bexp,w
 16447  15E4  1D03               	btfss	3,2
 16448  15E5  2DEE               	goto	l5159
 16449  15E6  3000               	movlw	0
 16450  15E7  00A9               	movwf	___flmul@b+3
 16451  15E8  3000               	movlw	0
 16452  15E9  00A8               	movwf	___flmul@b+2
 16453  15EA  3000               	movlw	0
 16454  15EB  00A7               	movwf	___flmul@b+1
 16455  15EC  3000               	movlw	0
 16456  15ED  00A6               	movwf	___flmul@b
 16457  15EE                     l5159:	
 16458  15EE  17A8               	bsf	___flmul@b+2,7
 16459  15EF  2DF8               	goto	l5163
 16460  15F0                     l5161:	
 16461  15F0  3000               	movlw	0
 16462  15F1  00A9               	movwf	___flmul@b+3
 16463  15F2  3000               	movlw	0
 16464  15F3  00A8               	movwf	___flmul@b+2
 16465  15F4  3000               	movlw	0
 16466  15F5  00A7               	movwf	___flmul@b+1
 16467  15F6  3000               	movlw	0
 16468  15F7  00A6               	movwf	___flmul@b
 16469  15F8                     l5163:	
 16470  15F8  082D               	movf	___flmul@a+3,w
 16471  15F9  3980               	andlw	128
 16472  15FA  00AE               	movwf	??___flmul
 16473  15FB  082E               	movf	??___flmul,w
 16474  15FC  06B3               	xorwf	___flmul@sign,f
 16475  15FD  352D               	lslf	___flmul@a+3,w
 16476  15FE  00AE               	movwf	??___flmul
 16477  15FF  082E               	movf	??___flmul,w
 16478  1600  00B8               	movwf	___flmul@aexp
 16479  1601  1BAC               	btfsc	___flmul@a+2,7
 16480  1602  1438               	bsf	___flmul@aexp,0
 16481  1603  0838               	movf	___flmul@aexp,w
 16482  1604  1903               	btfsc	3,2
 16483  1605  2E13               	goto	l5179
 16484  1606  0A38               	incf	___flmul@aexp,w
 16485  1607  1D03               	btfss	3,2
 16486  1608  2E11               	goto	l5177
 16487  1609  3000               	movlw	0
 16488  160A  00AD               	movwf	___flmul@a+3
 16489  160B  3000               	movlw	0
 16490  160C  00AC               	movwf	___flmul@a+2
 16491  160D  3000               	movlw	0
 16492  160E  00AB               	movwf	___flmul@a+1
 16493  160F  3000               	movlw	0
 16494  1610  00AA               	movwf	___flmul@a
 16495  1611                     l5177:	
 16496  1611  17AC               	bsf	___flmul@a+2,7
 16497  1612  2E1B               	goto	l5181
 16498  1613                     l5179:	
 16499  1613  3000               	movlw	0
 16500  1614  00AD               	movwf	___flmul@a+3
 16501  1615  3000               	movlw	0
 16502  1616  00AC               	movwf	___flmul@a+2
 16503  1617  3000               	movlw	0
 16504  1618  00AB               	movwf	___flmul@a+1
 16505  1619  3000               	movlw	0
 16506  161A  00AA               	movwf	___flmul@a
 16507  161B                     l5181:	
 16508  161B  0838               	movf	___flmul@aexp,w
 16509  161C  1D03               	btfss	3,2
 16510  161D  0839               	movf	___flmul@bexp,w
 16511  161E  1D03               	btfss	3,2
 16512  161F  2E29               	goto	l5189
 16513  1620  3000               	movlw	0
 16514  1621  00A9               	movwf	?___flmul+3
 16515  1622  3000               	movlw	0
 16516  1623  00A8               	movwf	?___flmul+2
 16517  1624  3000               	movlw	0
 16518  1625  00A7               	movwf	?___flmul+1
 16519  1626  3000               	movlw	0
 16520  1627  00A6               	movwf	?___flmul
 16521  1628  0008               	return
 16522  1629                     l5189:	
 16523  1629  0826               	movf	___flmul@b,w
 16524  162A  00AE               	movwf	??___flmul
 16525  162B  082E               	movf	??___flmul,w
 16526  162C  00F1               	movwf	__Umul8_16@multiplicand
 16527  162D  082C               	movf	___flmul@a+2,w
 16528  162E  31B2  2239  3195   	fcall	__Umul8_16
 16529  1631  0872               	movf	?__Umul8_16+1,w
 16530  1632  0020               	movlb	0	; select bank0
 16531  1633  00BF               	movwf	___flmul@temp+1
 16532  1634  0871               	movf	?__Umul8_16,w
 16533  1635  00BE               	movwf	___flmul@temp
 16534  1636  083E               	movf	___flmul@temp,w
 16535  1637  00AE               	movwf	??___flmul
 16536  1638  01AF               	clrf	??___flmul+1
 16537  1639  01B0               	clrf	??___flmul+2
 16538  163A  01B1               	clrf	??___flmul+3
 16539  163B  0831               	movf	??___flmul+3,w
 16540  163C  00B7               	movwf	___flmul@grs+3
 16541  163D  0830               	movf	??___flmul+2,w
 16542  163E  00B6               	movwf	___flmul@grs+2
 16543  163F  082F               	movf	??___flmul+1,w
 16544  1640  00B5               	movwf	___flmul@grs+1
 16545  1641  082E               	movf	??___flmul,w
 16546  1642  00B4               	movwf	___flmul@grs
 16547  1643  083F               	movf	___flmul@temp+1,w
 16548  1644  00AE               	movwf	??___flmul
 16549  1645  01AF               	clrf	??___flmul+1
 16550  1646  01B0               	clrf	??___flmul+2
 16551  1647  01B1               	clrf	??___flmul+3
 16552  1648  0831               	movf	??___flmul+3,w
 16553  1649  00BD               	movwf	___flmul@prod+3
 16554  164A  0830               	movf	??___flmul+2,w
 16555  164B  00BC               	movwf	___flmul@prod+2
 16556  164C  082F               	movf	??___flmul+1,w
 16557  164D  00BB               	movwf	___flmul@prod+1
 16558  164E  082E               	movf	??___flmul,w
 16559  164F  00BA               	movwf	___flmul@prod
 16560  1650  0827               	movf	___flmul@b+1,w
 16561  1651  00AE               	movwf	??___flmul
 16562  1652  082E               	movf	??___flmul,w
 16563  1653  00F1               	movwf	__Umul8_16@multiplicand
 16564  1654  082B               	movf	___flmul@a+1,w
 16565  1655  31B2  2239  3195   	fcall	__Umul8_16
 16566  1658  0872               	movf	?__Umul8_16+1,w
 16567  1659  0020               	movlb	0	; select bank0
 16568  165A  00BF               	movwf	___flmul@temp+1
 16569  165B  0871               	movf	?__Umul8_16,w
 16570  165C  00BE               	movwf	___flmul@temp
 16571  165D  083E               	movf	___flmul@temp,w
 16572  165E  00AE               	movwf	??___flmul
 16573  165F  01AF               	clrf	??___flmul+1
 16574  1660  01B0               	clrf	??___flmul+2
 16575  1661  01B1               	clrf	??___flmul+3
 16576  1662  082E               	movf	??___flmul,w
 16577  1663  07B4               	addwf	___flmul@grs,f
 16578  1664  082F               	movf	??___flmul+1,w
 16579  1665  3DB5               	addwfc	___flmul@grs+1,f
 16580  1666  0830               	movf	??___flmul+2,w
 16581  1667  3DB6               	addwfc	___flmul@grs+2,f
 16582  1668  0831               	movf	??___flmul+3,w
 16583  1669  3DB7               	addwfc	___flmul@grs+3,f
 16584  166A  083F               	movf	___flmul@temp+1,w
 16585  166B  00AE               	movwf	??___flmul
 16586  166C  01AF               	clrf	??___flmul+1
 16587  166D  01B0               	clrf	??___flmul+2
 16588  166E  01B1               	clrf	??___flmul+3
 16589  166F  082E               	movf	??___flmul,w
 16590  1670  07BA               	addwf	___flmul@prod,f
 16591  1671  082F               	movf	??___flmul+1,w
 16592  1672  3DBB               	addwfc	___flmul@prod+1,f
 16593  1673  0830               	movf	??___flmul+2,w
 16594  1674  3DBC               	addwfc	___flmul@prod+2,f
 16595  1675  0831               	movf	??___flmul+3,w
 16596  1676  3DBD               	addwfc	___flmul@prod+3,f
 16597  1677  0828               	movf	___flmul@b+2,w
 16598  1678  00AE               	movwf	??___flmul
 16599  1679  082E               	movf	??___flmul,w
 16600  167A  00F1               	movwf	__Umul8_16@multiplicand
 16601  167B  082A               	movf	___flmul@a,w
 16602  167C  31B2  2239  3195   	fcall	__Umul8_16
 16603  167F  0872               	movf	?__Umul8_16+1,w
 16604  1680  0020               	movlb	0	; select bank0
 16605  1681  00BF               	movwf	___flmul@temp+1
 16606  1682  0871               	movf	?__Umul8_16,w
 16607  1683  00BE               	movwf	___flmul@temp
 16608  1684  083E               	movf	___flmul@temp,w
 16609  1685  00AE               	movwf	??___flmul
 16610  1686  01AF               	clrf	??___flmul+1
 16611  1687  01B0               	clrf	??___flmul+2
 16612  1688  01B1               	clrf	??___flmul+3
 16613  1689  082E               	movf	??___flmul,w
 16614  168A  07B4               	addwf	___flmul@grs,f
 16615  168B  082F               	movf	??___flmul+1,w
 16616  168C  3DB5               	addwfc	___flmul@grs+1,f
 16617  168D  0830               	movf	??___flmul+2,w
 16618  168E  3DB6               	addwfc	___flmul@grs+2,f
 16619  168F  0831               	movf	??___flmul+3,w
 16620  1690  3DB7               	addwfc	___flmul@grs+3,f
 16621  1691  083F               	movf	___flmul@temp+1,w
 16622  1692  00AE               	movwf	??___flmul
 16623  1693  01AF               	clrf	??___flmul+1
 16624  1694  01B0               	clrf	??___flmul+2
 16625  1695  01B1               	clrf	??___flmul+3
 16626  1696  082E               	movf	??___flmul,w
 16627  1697  07BA               	addwf	___flmul@prod,f
 16628  1698  082F               	movf	??___flmul+1,w
 16629  1699  3DBB               	addwfc	___flmul@prod+1,f
 16630  169A  0830               	movf	??___flmul+2,w
 16631  169B  3DBC               	addwfc	___flmul@prod+2,f
 16632  169C  0831               	movf	??___flmul+3,w
 16633  169D  3DBD               	addwfc	___flmul@prod+3,f
 16634  169E  3008               	movlw	8
 16635  169F                     u6845:	
 16636  169F  35B4               	lslf	___flmul@grs,f
 16637  16A0  0DB5               	rlf	___flmul@grs+1,f
 16638  16A1  0DB6               	rlf	___flmul@grs+2,f
 16639  16A2  0DB7               	rlf	___flmul@grs+3,f
 16640  16A3  0B89               	decfsz	9,f
 16641  16A4  2E9F               	goto	u6845
 16642  16A5  0827               	movf	___flmul@b+1,w
 16643  16A6  00AE               	movwf	??___flmul
 16644  16A7  082E               	movf	??___flmul,w
 16645  16A8  00F1               	movwf	__Umul8_16@multiplicand
 16646  16A9  082A               	movf	___flmul@a,w
 16647  16AA  31B2  2239  3195   	fcall	__Umul8_16
 16648  16AD  0872               	movf	?__Umul8_16+1,w
 16649  16AE  0020               	movlb	0	; select bank0
 16650  16AF  00BF               	movwf	___flmul@temp+1
 16651  16B0  0871               	movf	?__Umul8_16,w
 16652  16B1  00BE               	movwf	___flmul@temp
 16653  16B2  083E               	movf	___flmul@temp,w
 16654  16B3  07B4               	addwf	___flmul@grs,f
 16655  16B4  083F               	movf	___flmul@temp+1,w
 16656  16B5  3DB5               	addwfc	___flmul@grs+1,f
 16657  16B6  3000               	movlw	0
 16658  16B7  3DB6               	addwfc	___flmul@grs+2,f
 16659  16B8  3DB7               	addwfc	___flmul@grs+3,f
 16660  16B9  0826               	movf	___flmul@b,w
 16661  16BA  00AE               	movwf	??___flmul
 16662  16BB  082E               	movf	??___flmul,w
 16663  16BC  00F1               	movwf	__Umul8_16@multiplicand
 16664  16BD  082B               	movf	___flmul@a+1,w
 16665  16BE  31B2  2239  3195   	fcall	__Umul8_16
 16666  16C1  0872               	movf	?__Umul8_16+1,w
 16667  16C2  0020               	movlb	0	; select bank0
 16668  16C3  00BF               	movwf	___flmul@temp+1
 16669  16C4  0871               	movf	?__Umul8_16,w
 16670  16C5  00BE               	movwf	___flmul@temp
 16671  16C6  083E               	movf	___flmul@temp,w
 16672  16C7  07B4               	addwf	___flmul@grs,f
 16673  16C8  083F               	movf	___flmul@temp+1,w
 16674  16C9  3DB5               	addwfc	___flmul@grs+1,f
 16675  16CA  3000               	movlw	0
 16676  16CB  3DB6               	addwfc	___flmul@grs+2,f
 16677  16CC  3DB7               	addwfc	___flmul@grs+3,f
 16678  16CD  3008               	movlw	8
 16679  16CE                     u6855:	
 16680  16CE  35B4               	lslf	___flmul@grs,f
 16681  16CF  0DB5               	rlf	___flmul@grs+1,f
 16682  16D0  0DB6               	rlf	___flmul@grs+2,f
 16683  16D1  0DB7               	rlf	___flmul@grs+3,f
 16684  16D2  0B89               	decfsz	9,f
 16685  16D3  2ECE               	goto	u6855
 16686  16D4  0826               	movf	___flmul@b,w
 16687  16D5  00AE               	movwf	??___flmul
 16688  16D6  082E               	movf	??___flmul,w
 16689  16D7  00F1               	movwf	__Umul8_16@multiplicand
 16690  16D8  082A               	movf	___flmul@a,w
 16691  16D9  31B2  2239  3195   	fcall	__Umul8_16
 16692  16DC  0872               	movf	?__Umul8_16+1,w
 16693  16DD  0020               	movlb	0	; select bank0
 16694  16DE  00BF               	movwf	___flmul@temp+1
 16695  16DF  0871               	movf	?__Umul8_16,w
 16696  16E0  00BE               	movwf	___flmul@temp
 16697  16E1  083E               	movf	___flmul@temp,w
 16698  16E2  07B4               	addwf	___flmul@grs,f
 16699  16E3  083F               	movf	___flmul@temp+1,w
 16700  16E4  3DB5               	addwfc	___flmul@grs+1,f
 16701  16E5  3000               	movlw	0
 16702  16E6  3DB6               	addwfc	___flmul@grs+2,f
 16703  16E7  3DB7               	addwfc	___flmul@grs+3,f
 16704  16E8  0827               	movf	___flmul@b+1,w
 16705  16E9  00AE               	movwf	??___flmul
 16706  16EA  082E               	movf	??___flmul,w
 16707  16EB  00F1               	movwf	__Umul8_16@multiplicand
 16708  16EC  082C               	movf	___flmul@a+2,w
 16709  16ED  31B2  2239  3195   	fcall	__Umul8_16
 16710  16F0  0872               	movf	?__Umul8_16+1,w
 16711  16F1  0020               	movlb	0	; select bank0
 16712  16F2  00BF               	movwf	___flmul@temp+1
 16713  16F3  0871               	movf	?__Umul8_16,w
 16714  16F4  00BE               	movwf	___flmul@temp
 16715  16F5  083E               	movf	___flmul@temp,w
 16716  16F6  07BA               	addwf	___flmul@prod,f
 16717  16F7  083F               	movf	___flmul@temp+1,w
 16718  16F8  3DBB               	addwfc	___flmul@prod+1,f
 16719  16F9  3000               	movlw	0
 16720  16FA  3DBC               	addwfc	___flmul@prod+2,f
 16721  16FB  3DBD               	addwfc	___flmul@prod+3,f
 16722  16FC  0828               	movf	___flmul@b+2,w
 16723  16FD  00AE               	movwf	??___flmul
 16724  16FE  082E               	movf	??___flmul,w
 16725  16FF  00F1               	movwf	__Umul8_16@multiplicand
 16726  1700  082B               	movf	___flmul@a+1,w
 16727  1701  31B2  2239  3195   	fcall	__Umul8_16
 16728  1704  0872               	movf	?__Umul8_16+1,w
 16729  1705  0020               	movlb	0	; select bank0
 16730  1706  00BF               	movwf	___flmul@temp+1
 16731  1707  0871               	movf	?__Umul8_16,w
 16732  1708  00BE               	movwf	___flmul@temp
 16733  1709  083E               	movf	___flmul@temp,w
 16734  170A  07BA               	addwf	___flmul@prod,f
 16735  170B  083F               	movf	___flmul@temp+1,w
 16736  170C  3DBB               	addwfc	___flmul@prod+1,f
 16737  170D  3000               	movlw	0
 16738  170E  3DBC               	addwfc	___flmul@prod+2,f
 16739  170F  3DBD               	addwfc	___flmul@prod+3,f
 16740  1710  0828               	movf	___flmul@b+2,w
 16741  1711  00AE               	movwf	??___flmul
 16742  1712  082E               	movf	??___flmul,w
 16743  1713  00F1               	movwf	__Umul8_16@multiplicand
 16744  1714  082C               	movf	___flmul@a+2,w
 16745  1715  31B2  2239  3195   	fcall	__Umul8_16
 16746  1718  0872               	movf	?__Umul8_16+1,w
 16747  1719  0020               	movlb	0	; select bank0
 16748  171A  00BF               	movwf	___flmul@temp+1
 16749  171B  0871               	movf	?__Umul8_16,w
 16750  171C  00BE               	movwf	___flmul@temp
 16751  171D  083E               	movf	___flmul@temp,w
 16752  171E  00AE               	movwf	??___flmul
 16753  171F  083F               	movf	___flmul@temp+1,w
 16754  1720  00AF               	movwf	??___flmul+1
 16755  1721  01B0               	clrf	??___flmul+2
 16756  1722  01B1               	clrf	??___flmul+3
 16757  1723  3008               	movlw	8
 16758  1724                     u6865:	
 16759  1724  35AE               	lslf	??___flmul,f
 16760  1725  0DAF               	rlf	??___flmul+1,f
 16761  1726  0DB0               	rlf	??___flmul+2,f
 16762  1727  0DB1               	rlf	??___flmul+3,f
 16763  1728  0B89               	decfsz	9,f
 16764  1729  2F24               	goto	u6865
 16765  172A  082E               	movf	??___flmul,w
 16766  172B  07BA               	addwf	___flmul@prod,f
 16767  172C  082F               	movf	??___flmul+1,w
 16768  172D  3DBB               	addwfc	___flmul@prod+1,f
 16769  172E  0830               	movf	??___flmul+2,w
 16770  172F  3DBC               	addwfc	___flmul@prod+2,f
 16771  1730  0831               	movf	??___flmul+3,w
 16772  1731  3DBD               	addwfc	___flmul@prod+3,f
 16773  1732  0834               	movf	___flmul@grs,w
 16774  1733  00AE               	movwf	??___flmul
 16775  1734  0835               	movf	___flmul@grs+1,w
 16776  1735  00AF               	movwf	??___flmul+1
 16777  1736  0836               	movf	___flmul@grs+2,w
 16778  1737  00B0               	movwf	??___flmul+2
 16779  1738  0837               	movf	___flmul@grs+3,w
 16780  1739  00B1               	movwf	??___flmul+3
 16781  173A  3018               	movlw	24
 16782  173B                     u6875:	
 16783  173B  36B1               	lsrf	??___flmul+3,f
 16784  173C  0CB0               	rrf	??___flmul+2,f
 16785  173D  0CAF               	rrf	??___flmul+1,f
 16786  173E  0CAE               	rrf	??___flmul,f
 16787  173F  0B89               	decfsz	9,f
 16788  1740  2F3B               	goto	u6875
 16789  1741  082E               	movf	??___flmul,w
 16790  1742  07BA               	addwf	___flmul@prod,f
 16791  1743  082F               	movf	??___flmul+1,w
 16792  1744  3DBB               	addwfc	___flmul@prod+1,f
 16793  1745  0830               	movf	??___flmul+2,w
 16794  1746  3DBC               	addwfc	___flmul@prod+2,f
 16795  1747  0831               	movf	??___flmul+3,w
 16796  1748  3DBD               	addwfc	___flmul@prod+3,f
 16797  1749  3008               	movlw	8
 16798  174A                     u6885:	
 16799  174A  35B4               	lslf	___flmul@grs,f
 16800  174B  0DB5               	rlf	___flmul@grs+1,f
 16801  174C  0DB6               	rlf	___flmul@grs+2,f
 16802  174D  0DB7               	rlf	___flmul@grs+3,f
 16803  174E  0B89               	decfsz	9,f
 16804  174F  2F4A               	goto	u6885
 16805  1750  0839               	movf	___flmul@bexp,w
 16806  1751  0738               	addwf	___flmul@aexp,w
 16807  1752  00AE               	movwf	??___flmul
 16808  1753  01AF               	clrf	??___flmul+1
 16809  1754  0DAF               	rlf	??___flmul+1,f
 16810  1755  082E               	movf	??___flmul,w
 16811  1756  3E82               	addlw	130
 16812  1757  00BE               	movwf	___flmul@temp
 16813  1758  30FF               	movlw	255
 16814  1759  3D2F               	addwfc	??___flmul+1,w
 16815  175A  00BF               	movwf	___flmul@temp+1
 16816  175B                     l5241:	
 16817  175B  1BBC               	btfsc	___flmul@prod+2,7
 16818  175C  2F72               	goto	l5243
 16819  175D  3001               	movlw	1
 16820  175E                     u6895:	
 16821  175E  35BA               	lslf	___flmul@prod,f
 16822  175F  0DBB               	rlf	___flmul@prod+1,f
 16823  1760  0DBC               	rlf	___flmul@prod+2,f
 16824  1761  0DBD               	rlf	___flmul@prod+3,f
 16825  1762  0B89               	decfsz	9,f
 16826  1763  2F5E               	goto	u6895
 16827  1764  1BB7               	btfsc	___flmul@grs+3,7
 16828  1765  143A               	bsf	___flmul@prod,0
 16829  1766  3001               	movlw	1
 16830  1767                     u6915:	
 16831  1767  35B4               	lslf	___flmul@grs,f
 16832  1768  0DB5               	rlf	___flmul@grs+1,f
 16833  1769  0DB6               	rlf	___flmul@grs+2,f
 16834  176A  0DB7               	rlf	___flmul@grs+3,f
 16835  176B  0B89               	decfsz	9,f
 16836  176C  2F67               	goto	u6915
 16837  176D  30FF               	movlw	255
 16838  176E  07BE               	addwf	___flmul@temp,f
 16839  176F  30FF               	movlw	255
 16840  1770  3DBF               	addwfc	___flmul@temp+1,f
 16841  1771  2F5B               	goto	l5241
 16842  1772                     l5243:	
 16843  1772  01B8               	clrf	___flmul@aexp
 16844  1773  1FB7               	btfss	___flmul@grs+3,7
 16845  1774  2F8B               	goto	l5253
 16846  1775  30FF               	movlw	255
 16847  1776  0534               	andwf	___flmul@grs,w
 16848  1777  00AE               	movwf	??___flmul
 16849  1778  30FF               	movlw	255
 16850  1779  0535               	andwf	___flmul@grs+1,w
 16851  177A  00AF               	movwf	??___flmul+1
 16852  177B  30FF               	movlw	255
 16853  177C  0536               	andwf	___flmul@grs+2,w
 16854  177D  00B0               	movwf	??___flmul+2
 16855  177E  307F               	movlw	127
 16856  177F  0537               	andwf	___flmul@grs+3,w
 16857  1780  00B1               	movwf	??___flmul+3
 16858  1781  0831               	movf	??___flmul+3,w
 16859  1782  0430               	iorwf	??___flmul+2,w
 16860  1783  042F               	iorwf	??___flmul+1,w
 16861  1784  042E               	iorwf	??___flmul,w
 16862  1785  1903               	skipnz
 16863  1786  183A               	btfsc	___flmul@prod,0
 16864  1787  2F89               	goto	l5249
 16865  1788  2F8B               	goto	l5253
 16866  1789                     l5249:	
 16867  1789  01B8               	clrf	___flmul@aexp
 16868  178A  0AB8               	incf	___flmul@aexp,f
 16869  178B                     l5253:	
 16870  178B  0838               	movf	___flmul@aexp,w
 16871  178C  1903               	btfsc	3,2
 16872  178D  2FB4               	goto	l5263
 16873  178E  3001               	movlw	1
 16874  178F  07BA               	addwf	___flmul@prod,f
 16875  1790  3000               	movlw	0
 16876  1791  3DBB               	addwfc	___flmul@prod+1,f
 16877  1792  3000               	movlw	0
 16878  1793  3DBC               	addwfc	___flmul@prod+2,f
 16879  1794  3000               	movlw	0
 16880  1795  3DBD               	addwfc	___flmul@prod+3,f
 16881  1796  1C3D               	btfss	___flmul@prod+3,0
 16882  1797  2FB4               	goto	l5263
 16883  1798  083A               	movf	___flmul@prod,w
 16884  1799  00AE               	movwf	??___flmul
 16885  179A  083B               	movf	___flmul@prod+1,w
 16886  179B  00AF               	movwf	??___flmul+1
 16887  179C  083C               	movf	___flmul@prod+2,w
 16888  179D  00B0               	movwf	??___flmul+2
 16889  179E  083D               	movf	___flmul@prod+3,w
 16890  179F  00B1               	movwf	??___flmul+3
 16891  17A0  3001               	movlw	1
 16892  17A1  00B2               	movwf	??___flmul+4
 16893  17A2                     u6985:	
 16894  17A2  37B1               	asrf	??___flmul+3,f
 16895  17A3  0CB0               	rrf	??___flmul+2,f
 16896  17A4  0CAF               	rrf	??___flmul+1,f
 16897  17A5  0CAE               	rrf	??___flmul,f
 16898  17A6  0BB2               	decfsz	??___flmul+4,f
 16899  17A7  2FA2               	goto	u6985
 16900  17A8  0831               	movf	??___flmul+3,w
 16901  17A9  00BD               	movwf	___flmul@prod+3
 16902  17AA  0830               	movf	??___flmul+2,w
 16903  17AB  00BC               	movwf	___flmul@prod+2
 16904  17AC  082F               	movf	??___flmul+1,w
 16905  17AD  00BB               	movwf	___flmul@prod+1
 16906  17AE  082E               	movf	??___flmul,w
 16907  17AF  00BA               	movwf	___flmul@prod
 16908  17B0  3001               	movlw	1
 16909  17B1  07BE               	addwf	___flmul@temp,f
 16910  17B2  3000               	movlw	0
 16911  17B3  3DBF               	addwfc	___flmul@temp+1,f
 16912  17B4                     l5263:	
 16913  17B4  083F               	movf	___flmul@temp+1,w
 16914  17B5  3A80               	xorlw	128
 16915  17B6  00AE               	movwf	??___flmul
 16916  17B7  3080               	movlw	128
 16917  17B8  022E               	subwf	??___flmul,w
 16918  17B9  1D03               	skipz
 16919  17BA  2FBD               	goto	u6995
 16920  17BB  30FF               	movlw	255
 16921  17BC  023E               	subwf	___flmul@temp,w
 16922  17BD                     u6995:	
 16923  17BD  1C03               	skipc
 16924  17BE  2FC9               	goto	l5267
 16925  17BF  307F               	movlw	127
 16926  17C0  0020               	movlb	0	; select bank0
 16927  17C1  00BD               	movwf	___flmul@prod+3
 16928  17C2  3080               	movlw	128
 16929  17C3  00BC               	movwf	___flmul@prod+2
 16930  17C4  3000               	movlw	0
 16931  17C5  00BB               	movwf	___flmul@prod+1
 16932  17C6  3000               	movlw	0
 16933  17C7  00BA               	movwf	___flmul@prod
 16934  17C8  2FF3               	goto	l1318
 16935  17C9                     l5267:	
 16936  17C9  0020               	movlb	0	; select bank0
 16937  17CA  083F               	movf	___flmul@temp+1,w
 16938  17CB  3A80               	xorlw	128
 16939  17CC  00AE               	movwf	??___flmul
 16940  17CD  3080               	movlw	128
 16941  17CE  022E               	subwf	??___flmul,w
 16942  17CF  1D03               	skipz
 16943  17D0  2FD3               	goto	u7005
 16944  17D1  3001               	movlw	1
 16945  17D2  023E               	subwf	___flmul@temp,w
 16946  17D3                     u7005:	
 16947  17D3  1803               	skipnc
 16948  17D4  2FE0               	goto	l5273
 16949  17D5  3000               	movlw	0
 16950  17D6  0020               	movlb	0	; select bank0
 16951  17D7  00BD               	movwf	___flmul@prod+3
 16952  17D8  3000               	movlw	0
 16953  17D9  00BC               	movwf	___flmul@prod+2
 16954  17DA  3000               	movlw	0
 16955  17DB  00BB               	movwf	___flmul@prod+1
 16956  17DC  3000               	movlw	0
 16957  17DD  00BA               	movwf	___flmul@prod
 16958  17DE  01B3               	clrf	___flmul@sign
 16959  17DF  2FF3               	goto	l1318
 16960  17E0                     l5273:	
 16961  17E0  0020               	movlb	0	; select bank0
 16962  17E1  083E               	movf	___flmul@temp,w
 16963  17E2  00AE               	movwf	??___flmul
 16964  17E3  082E               	movf	??___flmul,w
 16965  17E4  00B9               	movwf	___flmul@bexp
 16966  17E5  30FF               	movlw	255
 16967  17E6  05BA               	andwf	___flmul@prod,f
 16968  17E7  30FF               	movlw	255
 16969  17E8  05BB               	andwf	___flmul@prod+1,f
 16970  17E9  307F               	movlw	127
 16971  17EA  05BC               	andwf	___flmul@prod+2,f
 16972  17EB  3000               	movlw	0
 16973  17EC  05BD               	andwf	___flmul@prod+3,f
 16974  17ED  1839               	btfsc	___flmul@bexp,0
 16975  17EE  17BC               	bsf	___flmul@prod+2,7
 16976  17EF  3639               	lsrf	___flmul@bexp,w
 16977  17F0  00AE               	movwf	??___flmul
 16978  17F1  082E               	movf	??___flmul,w
 16979  17F2  00BD               	movwf	___flmul@prod+3
 16980  17F3                     l1318:	
 16981  17F3  0833               	movf	___flmul@sign,w
 16982  17F4  00AE               	movwf	??___flmul
 16983  17F5  082E               	movf	??___flmul,w
 16984  17F6  04BD               	iorwf	___flmul@prod+3,f
 16985  17F7  083D               	movf	___flmul@prod+3,w
 16986  17F8  00A9               	movwf	?___flmul+3
 16987  17F9  083C               	movf	___flmul@prod+2,w
 16988  17FA  00A8               	movwf	?___flmul+2
 16989  17FB  083B               	movf	___flmul@prod+1,w
 16990  17FC  00A7               	movwf	?___flmul+1
 16991  17FD  083A               	movf	___flmul@prod,w
 16992  17FE  00A6               	movwf	?___flmul
 16993  17FF  0008               	return
 16994  1800                     __end_of___flmul:	
 16995                           
 16996                           	psect	text52
 16997  3239                     __ptext52:	
 16998 ;; *************** function __Umul8_16 *****************
 16999 ;; Defined at:
 17000 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 17001 ;; Parameters:    Size  Location     Type
 17002 ;;  multiplier      1    wreg     unsigned char 
 17003 ;;  multiplicand    1    1[COMMON] unsigned char 
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;  multiplier      1    9[COMMON] unsigned char 
 17006 ;;  word_mpld       2    7[COMMON] unsigned int 
 17007 ;;  product         2    5[COMMON] unsigned int 
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  2    1[COMMON] unsigned int 
 17010 ;; Registers used:
 17011 ;;		wreg, status,2, status,0
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17018 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17020 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;Total ram usage:        9 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; Hardware stack levels required when called:    1
 17024 ;; This function calls:
 17025 ;;		Nothing
 17026 ;; This function is called by:
 17027 ;;		___flmul
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           
 17032                           ;psect for function __Umul8_16
 17033  3239                     __Umul8_16:	
 17034                           
 17035                           ;incstack = 0
 17036                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17037                           ;__Umul8_16@multiplier stored from wreg
 17038  3239  00F9               	movwf	__Umul8_16@multiplier
 17039  323A  01F5               	clrf	__Umul8_16@product
 17040  323B  01F6               	clrf	__Umul8_16@product+1
 17041  323C  0871               	movf	__Umul8_16@multiplicand,w
 17042  323D  00F3               	movwf	??__Umul8_16
 17043  323E  01F4               	clrf	??__Umul8_16+1
 17044  323F  0873               	movf	??__Umul8_16,w
 17045  3240  00F7               	movwf	__Umul8_16@word_mpld
 17046  3241  0874               	movf	??__Umul8_16+1,w
 17047  3242  00F8               	movwf	__Umul8_16@word_mpld+1
 17048  3243                     l4595:	
 17049  3243  1C79               	btfss	__Umul8_16@multiplier,0
 17050  3244  2A49               	goto	l1528
 17051  3245  0877               	movf	__Umul8_16@word_mpld,w
 17052  3246  07F5               	addwf	__Umul8_16@product,f
 17053  3247  0878               	movf	__Umul8_16@word_mpld+1,w
 17054  3248  3DF6               	addwfc	__Umul8_16@product+1,f
 17055  3249                     l1528:	
 17056  3249  3001               	movlw	1
 17057  324A                     u5365:	
 17058  324A  35F7               	lslf	__Umul8_16@word_mpld,f
 17059  324B  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 17060  324C  0B89               	decfsz	9,f
 17061  324D  2A4A               	goto	u5365
 17062  324E  1003               	clrc
 17063  324F  0CF9               	rrf	__Umul8_16@multiplier,f
 17064  3250  0879               	movf	__Umul8_16@multiplier,w
 17065  3251  1D03               	btfss	3,2
 17066  3252  2A43               	goto	l4595
 17067  3253  0876               	movf	__Umul8_16@product+1,w
 17068  3254  00F2               	movwf	?__Umul8_16+1
 17069  3255  0875               	movf	__Umul8_16@product,w
 17070  3256  00F1               	movwf	?__Umul8_16
 17071  3257  0008               	return
 17072  3258                     __end_of__Umul8_16:	
 17073                           
 17074                           	psect	text53
 17075  2830                     __ptext53:	
 17076 ;; *************** function ___flge *****************
 17077 ;; Defined at:
 17078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;  ff1             4   58[BANK0 ] unsigned int 
 17081 ;;  ff2             4   62[BANK0 ] unsigned int 
 17082 ;; Auto vars:     Size  Location     Type
 17083 ;;		None
 17084 ;; Return value:  Size  Location     Type
 17085 ;;		None               void
 17086 ;; Registers used:
 17087 ;;		wreg, status,2, status,0
 17088 ;; Tracked objects:
 17089 ;;		On entry : 0/0
 17090 ;;		On exit  : 0/0
 17091 ;;		Unchanged: 0/0
 17092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17093 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17095 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17096 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17097 ;;Total ram usage:       12 bytes
 17098 ;; Hardware stack levels used:    1
 17099 ;; Hardware stack levels required when called:    1
 17100 ;; This function calls:
 17101 ;;		Nothing
 17102 ;; This function is called by:
 17103 ;;		_setShortCircuitProtection
 17104 ;;		_setOverCurrentDischargeProtection
 17105 ;;		_efgtoa
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           
 17110                           ;psect for function ___flge
 17111  2830                     ___flge:	
 17112                           
 17113                           ;incstack = 0
 17114                           ; Regs used in ___flge: [wreg+status,2+status,0]
 17115  2830  3000               	movlw	0
 17116  2831  0020               	movlb	0	; select bank0
 17117  2832  055A               	andwf	___flge@ff1,w
 17118  2833  00E2               	movwf	??___flge
 17119  2834  3000               	movlw	0
 17120  2835  055B               	andwf	___flge@ff1+1,w
 17121  2836  00E3               	movwf	??___flge+1
 17122  2837  3080               	movlw	128
 17123  2838  055C               	andwf	___flge@ff1+2,w
 17124  2839  00E4               	movwf	??___flge+2
 17125  283A  307F               	movlw	127
 17126  283B  055D               	andwf	___flge@ff1+3,w
 17127  283C  00E5               	movwf	??___flge+3
 17128  283D  0865               	movf	??___flge+3,w
 17129  283E  0464               	iorwf	??___flge+2,w
 17130  283F  0463               	iorwf	??___flge+1,w
 17131  2840  0462               	iorwf	??___flge,w
 17132  2841  1D03               	skipz
 17133  2842  284B               	goto	l1087
 17134  2843  3000               	movlw	0
 17135  2844  00DD               	movwf	___flge@ff1+3
 17136  2845  3000               	movlw	0
 17137  2846  00DC               	movwf	___flge@ff1+2
 17138  2847  3000               	movlw	0
 17139  2848  00DB               	movwf	___flge@ff1+1
 17140  2849  3000               	movlw	0
 17141  284A  00DA               	movwf	___flge@ff1
 17142  284B                     l1087:	
 17143  284B  3000               	movlw	0
 17144  284C  055E               	andwf	___flge@ff2,w
 17145  284D  00E2               	movwf	??___flge
 17146  284E  3000               	movlw	0
 17147  284F  055F               	andwf	___flge@ff2+1,w
 17148  2850  00E3               	movwf	??___flge+1
 17149  2851  3080               	movlw	128
 17150  2852  0560               	andwf	___flge@ff2+2,w
 17151  2853  00E4               	movwf	??___flge+2
 17152  2854  307F               	movlw	127
 17153  2855  0561               	andwf	___flge@ff2+3,w
 17154  2856  00E5               	movwf	??___flge+3
 17155  2857  0865               	movf	??___flge+3,w
 17156  2858  0464               	iorwf	??___flge+2,w
 17157  2859  0463               	iorwf	??___flge+1,w
 17158  285A  0462               	iorwf	??___flge,w
 17159  285B  1D03               	skipz
 17160  285C  2865               	goto	l4903
 17161  285D  3000               	movlw	0
 17162  285E  00E1               	movwf	___flge@ff2+3
 17163  285F  3000               	movlw	0
 17164  2860  00E0               	movwf	___flge@ff2+2
 17165  2861  3000               	movlw	0
 17166  2862  00DF               	movwf	___flge@ff2+1
 17167  2863  3000               	movlw	0
 17168  2864  00DE               	movwf	___flge@ff2
 17169  2865                     l4903:	
 17170  2865  1FDD               	btfss	___flge@ff1+3,7
 17171  2866  287F               	goto	l4907
 17172  2867  3000               	movlw	0
 17173  2868  00E2               	movwf	??___flge
 17174  2869  3000               	movlw	0
 17175  286A  00E3               	movwf	??___flge+1
 17176  286B  3000               	movlw	0
 17177  286C  00E4               	movwf	??___flge+2
 17178  286D  3080               	movlw	128
 17179  286E  00E5               	movwf	??___flge+3
 17180  286F  085A               	movf	___flge@ff1,w
 17181  2870  02E2               	subwf	??___flge,f
 17182  2871  085B               	movf	___flge@ff1+1,w
 17183  2872  3BE3               	subwfb	??___flge+1,f
 17184  2873  085C               	movf	___flge@ff1+2,w
 17185  2874  3BE4               	subwfb	??___flge+2,f
 17186  2875  085D               	movf	___flge@ff1+3,w
 17187  2876  3BE5               	subwfb	??___flge+3,f
 17188  2877  0865               	movf	??___flge+3,w
 17189  2878  00DD               	movwf	___flge@ff1+3
 17190  2879  0864               	movf	??___flge+2,w
 17191  287A  00DC               	movwf	___flge@ff1+2
 17192  287B  0863               	movf	??___flge+1,w
 17193  287C  00DB               	movwf	___flge@ff1+1
 17194  287D  0862               	movf	??___flge,w
 17195  287E  00DA               	movwf	___flge@ff1
 17196  287F                     l4907:	
 17197  287F  1FE1               	btfss	___flge@ff2+3,7
 17198  2880  2899               	goto	l1090
 17199  2881  3000               	movlw	0
 17200  2882  00E2               	movwf	??___flge
 17201  2883  3000               	movlw	0
 17202  2884  00E3               	movwf	??___flge+1
 17203  2885  3000               	movlw	0
 17204  2886  00E4               	movwf	??___flge+2
 17205  2887  3080               	movlw	128
 17206  2888  00E5               	movwf	??___flge+3
 17207  2889  085E               	movf	___flge@ff2,w
 17208  288A  02E2               	subwf	??___flge,f
 17209  288B  085F               	movf	___flge@ff2+1,w
 17210  288C  3BE3               	subwfb	??___flge+1,f
 17211  288D  0860               	movf	___flge@ff2+2,w
 17212  288E  3BE4               	subwfb	??___flge+2,f
 17213  288F  0861               	movf	___flge@ff2+3,w
 17214  2890  3BE5               	subwfb	??___flge+3,f
 17215  2891  0865               	movf	??___flge+3,w
 17216  2892  00E1               	movwf	___flge@ff2+3
 17217  2893  0864               	movf	??___flge+2,w
 17218  2894  00E0               	movwf	___flge@ff2+2
 17219  2895  0863               	movf	??___flge+1,w
 17220  2896  00DF               	movwf	___flge@ff2+1
 17221  2897  0862               	movf	??___flge,w
 17222  2898  00DE               	movwf	___flge@ff2
 17223  2899                     l1090:	
 17224  2899  3080               	movlw	128
 17225  289A  06DD               	xorwf	___flge@ff1+3,f
 17226  289B  3080               	movlw	128
 17227  289C  06E1               	xorwf	___flge@ff2+3,f
 17228  289D  0861               	movf	___flge@ff2+3,w
 17229  289E  025D               	subwf	___flge@ff1+3,w
 17230  289F  1D03               	skipz
 17231  28A0  0008               	return
 17232  28A1  0860               	movf	___flge@ff2+2,w
 17233  28A2  025C               	subwf	___flge@ff1+2,w
 17234  28A3  1D03               	skipz
 17235  28A4  0008               	return
 17236  28A5  085F               	movf	___flge@ff2+1,w
 17237  28A6  025B               	subwf	___flge@ff1+1,w
 17238  28A7  1D03               	skipz
 17239  28A8  0008               	return
 17240  28A9  085E               	movf	___flge@ff2,w
 17241  28AA  025A               	subwf	___flge@ff1,w
 17242  28AB  0008               	return
 17243  28AC                     __end_of___flge:	
 17244                           
 17245                           	psect	text54
 17246  229E                     __ptext54:	
 17247 ;; *************** function _setCellUndervoltageProtection *****************
 17248 ;; Defined at:
 17249 ;;		line 127 in file "BQ76920.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  voltage_mV      2   18[BANK0 ] int 
 17252 ;;  delay_s         2   20[BANK0 ] int 
 17253 ;; Auto vars:     Size  Location     Type
 17254 ;;  i               2   37[BANK0 ] int 
 17255 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17266 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17267 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17268 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17269 ;;Total ram usage:       21 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:    3
 17272 ;; This function calls:
 17273 ;;		_I2C_writeRegister
 17274 ;;		___aldiv
 17275 ;;		___lmul
 17276 ;;		_readRegister
 17277 ;; This function is called by:
 17278 ;;		_init_AFE
 17279 ;; This function uses a non-reentrant model
 17280 ;;
 17281                           
 17282                           
 17283                           ;psect for function _setCellUndervoltageProtection
 17284  229E                     _setCellUndervoltageProtection:	
 17285                           
 17286                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 17287                           
 17288                           ;incstack = 0
 17289                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17290  229E  0020               	movlb	0	; select bank0
 17291  229F  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 17292  22A0  0023               	movlb	3	; select bank3
 17293  22A1  00C5               	movwf	(_minCellVoltage+1)^(0+384)
 17294  22A2  0020               	movlb	0	; select bank0
 17295  22A3  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 17296  22A4  0023               	movlb	3	; select bank3
 17297  22A5  00C4               	movwf	_minCellVoltage^(0+384)
 17298                           
 17299                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 17300  22A6  3018               	movlw	24
 17301  22A7  00F5               	movwf	readRegister@slaveAddress
 17302  22A8  3000               	movlw	0
 17303  22A9  00F6               	movwf	readRegister@slaveAddress+1
 17304  22AA  3008               	movlw	8
 17305  22AB  00F7               	movwf	readRegister@regAddress
 17306  22AC  3000               	movlw	0
 17307  22AD  00F8               	movwf	readRegister@regAddress+1
 17308  22AE  31B3  23C5  31A2   	fcall	_readRegister
 17309  22B1  0875               	movf	?_readRegister,w
 17310  22B2  0020               	movlb	0	; select bank0
 17311  22B3  00B6               	movwf	??_setCellUndervoltageProtection
 17312  22B4  0836               	movf	??_setCellUndervoltageProtection,w
 17313  22B5  0023               	movlb	3	; select bank3
 17314  22B6  00D4               	movwf	BQ76920@protect3^(0+384)
 17315                           
 17316                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 17317  22B7  0852               	movf	_adcGain^(0+384),w
 17318  22B8  0020               	movlb	0	; select bank0
 17319  22B9  00A4               	movwf	___aldiv@divisor
 17320  22BA  0023               	movlb	3	; select bank3
 17321  22BB  0853               	movf	(_adcGain+1)^(0+384),w
 17322  22BC  0020               	movlb	0	; select bank0
 17323  22BD  00A5               	movwf	___aldiv@divisor+1
 17324  22BE  0D89               	rlf	9,f
 17325  22BF  3B89               	subwfb	9,f
 17326  22C0  0989               	comf	9,f
 17327  22C1  00A6               	movwf	___aldiv@divisor+2
 17328  22C2  00A7               	movwf	___aldiv@divisor+3
 17329  22C3  0023               	movlb	3	; select bank3
 17330  22C4  0850               	movf	_adcOffset^(0+384),w
 17331  22C5  0020               	movlb	0	; select bank0
 17332  22C6  00B6               	movwf	??_setCellUndervoltageProtection
 17333  22C7  0023               	movlb	3	; select bank3
 17334  22C8  0851               	movf	(_adcOffset+1)^(0+384),w
 17335  22C9  0020               	movlb	0	; select bank0
 17336  22CA  00B7               	movwf	??_setCellUndervoltageProtection+1
 17337  22CB  3000               	movlw	0
 17338  22CC  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 17339  22CD  30FF               	movlw	255
 17340  22CE  00B8               	movwf	??_setCellUndervoltageProtection+2
 17341  22CF  00B9               	movwf	??_setCellUndervoltageProtection+3
 17342  22D0  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 17343  22D1  00BA               	movwf	??_setCellUndervoltageProtection+4
 17344  22D2  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 17345  22D3  00BB               	movwf	??_setCellUndervoltageProtection+5
 17346  22D4  3000               	movlw	0
 17347  22D5  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 17348  22D6  30FF               	movlw	255
 17349  22D7  00BC               	movwf	??_setCellUndervoltageProtection+6
 17350  22D8  00BD               	movwf	??_setCellUndervoltageProtection+7
 17351  22D9  0836               	movf	??_setCellUndervoltageProtection,w
 17352  22DA  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 17353  22DB  0837               	movf	??_setCellUndervoltageProtection+1,w
 17354  22DC  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 17355  22DD  0838               	movf	??_setCellUndervoltageProtection+2,w
 17356  22DE  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 17357  22DF  0839               	movf	??_setCellUndervoltageProtection+3,w
 17358  22E0  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 17359  22E1  083D               	movf	??_setCellUndervoltageProtection+7,w
 17360  22E2  00F4               	movwf	___lmul@multiplier+3
 17361  22E3  083C               	movf	??_setCellUndervoltageProtection+6,w
 17362  22E4  00F3               	movwf	___lmul@multiplier+2
 17363  22E5  083B               	movf	??_setCellUndervoltageProtection+5,w
 17364  22E6  00F2               	movwf	___lmul@multiplier+1
 17365  22E7  083A               	movf	??_setCellUndervoltageProtection+4,w
 17366  22E8  00F1               	movwf	___lmul@multiplier
 17367  22E9  3000               	movlw	0
 17368  22EA  00F8               	movwf	___lmul@multiplicand+3
 17369  22EB  3000               	movlw	0
 17370  22EC  00F7               	movwf	___lmul@multiplicand+2
 17371  22ED  3003               	movlw	3
 17372  22EE  00F6               	movwf	___lmul@multiplicand+1
 17373  22EF  30E8               	movlw	232
 17374  22F0  00F5               	movwf	___lmul@multiplicand
 17375  22F1  31B3  232C  31A2   	fcall	___lmul
 17376  22F4  0874               	movf	?___lmul+3,w
 17377  22F5  0020               	movlb	0	; select bank0
 17378  22F6  00AB               	movwf	___aldiv@dividend+3
 17379  22F7  0873               	movf	?___lmul+2,w
 17380  22F8  00AA               	movwf	___aldiv@dividend+2
 17381  22F9  0872               	movf	?___lmul+1,w
 17382  22FA  00A9               	movwf	___aldiv@dividend+1
 17383  22FB  0871               	movf	?___lmul,w
 17384  22FC  00A8               	movwf	___aldiv@dividend
 17385  22FD  31A9  21A5  31A2   	fcall	___aldiv
 17386  2300  0020               	movlb	0	; select bank0
 17387  2301  0824               	movf	?___aldiv,w
 17388  2302  00BE               	movwf	??_setCellUndervoltageProtection+8
 17389  2303  0825               	movf	?___aldiv+1,w
 17390  2304  00BF               	movwf	??_setCellUndervoltageProtection+9
 17391  2305  0826               	movf	?___aldiv+2,w
 17392  2306  00C0               	movwf	??_setCellUndervoltageProtection+10
 17393  2307  0827               	movf	?___aldiv+3,w
 17394  2308  00C1               	movwf	??_setCellUndervoltageProtection+11
 17395  2309  3004               	movlw	4
 17396  230A  00C2               	movwf	??_setCellUndervoltageProtection+12
 17397  230B                     u12215:	
 17398  230B  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 17399  230C  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 17400  230D  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 17401  230E  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 17402  230F  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 17403  2310  2B0B               	goto	u12215
 17404  2311  083E               	movf	??_setCellUndervoltageProtection+8,w
 17405  2312  00C3               	movwf	??_setCellUndervoltageProtection+13
 17406  2313  0843               	movf	??_setCellUndervoltageProtection+13,w
 17407  2314  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 17408                           
 17409                           ;BQ76920.c: 133:     uv_trip += 1;
 17410  2315  3001               	movlw	1
 17411  2316  00B6               	movwf	??_setCellUndervoltageProtection
 17412  2317  0836               	movf	??_setCellUndervoltageProtection,w
 17413  2318  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 17414                           
 17415                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 17416  2319  3018               	movlw	24
 17417  231A  00F5               	movwf	I2C_writeRegister@slaveAddress
 17418  231B  3000               	movlw	0
 17419  231C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17420  231D  300A               	movlw	10
 17421  231E  00F7               	movwf	I2C_writeRegister@regAddress
 17422  231F  3000               	movlw	0
 17423  2320  00F8               	movwf	I2C_writeRegister@regAddress+1
 17424  2321  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 17425  2322  00B6               	movwf	??_setCellUndervoltageProtection
 17426  2323  01B7               	clrf	??_setCellUndervoltageProtection+1
 17427  2324  0836               	movf	??_setCellUndervoltageProtection,w
 17428  2325  00F9               	movwf	I2C_writeRegister@data
 17429  2326  0837               	movf	??_setCellUndervoltageProtection+1,w
 17430  2327  00FA               	movwf	I2C_writeRegister@data+1
 17431  2328  31B2  221B  31A2   	fcall	_I2C_writeRegister
 17432                           
 17433                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 17434  232B  303F               	movlw	-193
 17435  232C  0023               	movlb	3	; select bank3
 17436  232D  05D4               	andwf	BQ76920@protect3^(0+384),f
 17437                           
 17438                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 17439  232E  0020               	movlb	0	; select bank0
 17440  232F  01C5               	clrf	setCellUndervoltageProtection@i
 17441  2330  01C6               	clrf	setCellUndervoltageProtection@i+1
 17442  2331                     l8541:	
 17443                           
 17444                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 17445  2331  0846               	movf	setCellUndervoltageProtection@i+1,w
 17446  2332  0085               	movwf	5
 17447  2333  0845               	movf	setCellUndervoltageProtection@i,w
 17448  2334  0084               	movwf	4
 17449  2335  3584               	lslf	4,f
 17450  2336  0D85               	rlf	5,f
 17451  2337  3000               	movlw	low (_UV_delay_setting| (0+32768))
 17452  2338  0784               	addwf	4,f
 17453  2339  30BB               	movlw	high (_UV_delay_setting| (0+32768))
 17454  233A  3D85               	addwfc	5,f
 17455  233B  3F00               	moviw [0]fsr0
 17456  233C  00B6               	movwf	??_setCellUndervoltageProtection
 17457  233D  3F01               	moviw [1]fsr0
 17458  233E  00B7               	movwf	??_setCellUndervoltageProtection+1
 17459  233F  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 17460  2340  3A80               	xorlw	128
 17461  2341  00B8               	movwf	??_setCellUndervoltageProtection+2
 17462  2342  0837               	movf	??_setCellUndervoltageProtection+1,w
 17463  2343  3A80               	xorlw	128
 17464  2344  0238               	subwf	??_setCellUndervoltageProtection+2,w
 17465  2345  1D03               	skipz
 17466  2346  2B49               	goto	u12225
 17467  2347  0836               	movf	??_setCellUndervoltageProtection,w
 17468  2348  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 17469  2349                     u12225:	
 17470  2349  1C03               	skipc
 17471  234A  2B59               	goto	l8545
 17472                           
 17473                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 17474  234B  0020               	movlb	0	; select bank0
 17475  234C  0845               	movf	setCellUndervoltageProtection@i,w
 17476  234D  00B6               	movwf	??_setCellUndervoltageProtection
 17477  234E  0EB6               	swapf	??_setCellUndervoltageProtection,f
 17478  234F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 17479  2350  0DB6               	rlf	??_setCellUndervoltageProtection,f
 17480  2351  0023               	movlb	3	; select bank3
 17481  2352  0854               	movf	BQ76920@protect3^(0+384),w
 17482  2353  0020               	movlb	0	; select bank0
 17483  2354  0636               	xorwf	??_setCellUndervoltageProtection,w
 17484  2355  393F               	andlw	-193
 17485  2356  0636               	xorwf	??_setCellUndervoltageProtection,w
 17486  2357  0023               	movlb	3	; select bank3
 17487  2358  00D4               	movwf	BQ76920@protect3^(0+384)
 17488  2359                     l8545:	
 17489                           
 17490                           ;BQ76920.c: 141:     }
 17491  2359  3001               	movlw	1
 17492  235A  0020               	movlb	0	; select bank0
 17493  235B  07C5               	addwf	setCellUndervoltageProtection@i,f
 17494  235C  3000               	movlw	0
 17495  235D  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 17496  235E  3000               	movlw	0
 17497  235F  0246               	subwf	setCellUndervoltageProtection@i+1,w
 17498  2360  3003               	movlw	3
 17499  2361  1903               	skipnz
 17500  2362  0245               	subwf	setCellUndervoltageProtection@i,w
 17501  2363  1C03               	skipc
 17502  2364  2B31               	goto	l8541
 17503                           
 17504                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 17505  2365  3018               	movlw	24
 17506  2366  00F5               	movwf	I2C_writeRegister@slaveAddress
 17507  2367  3000               	movlw	0
 17508  2368  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17509  2369  3008               	movlw	8
 17510  236A  00F7               	movwf	I2C_writeRegister@regAddress
 17511  236B  3000               	movlw	0
 17512  236C  00F8               	movwf	I2C_writeRegister@regAddress+1
 17513  236D  0023               	movlb	3	; select bank3
 17514  236E  0854               	movf	BQ76920@protect3^(0+384),w
 17515  236F  0020               	movlb	0	; select bank0
 17516  2370  00B6               	movwf	??_setCellUndervoltageProtection
 17517  2371  01B7               	clrf	??_setCellUndervoltageProtection+1
 17518  2372  0836               	movf	??_setCellUndervoltageProtection,w
 17519  2373  00F9               	movwf	I2C_writeRegister@data
 17520  2374  0837               	movf	??_setCellUndervoltageProtection+1,w
 17521  2375  00FA               	movwf	I2C_writeRegister@data+1
 17522  2376  31B2  221B         	fcall	_I2C_writeRegister
 17523  2378  0008               	return
 17524  2379                     __end_of_setCellUndervoltageProtection:	
 17525                           
 17526                           	psect	text55
 17527  201C                     __ptext55:	
 17528 ;; *************** function _setCellOvervoltageProtection *****************
 17529 ;; Defined at:
 17530 ;;		line 148 in file "BQ76920.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  voltage_mV      2   18[BANK0 ] int 
 17533 ;;  delay_s         2   20[BANK0 ] int 
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;  i               2   37[BANK0 ] int 
 17536 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 17537 ;; Return value:  Size  Location     Type
 17538 ;;                  1    wreg      void 
 17539 ;; Registers used:
 17540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17548 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;Total ram usage:       21 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; Hardware stack levels required when called:    3
 17553 ;; This function calls:
 17554 ;;		_I2C_writeRegister
 17555 ;;		___aldiv
 17556 ;;		___lmul
 17557 ;;		_readRegister
 17558 ;; This function is called by:
 17559 ;;		_init_AFE
 17560 ;; This function uses a non-reentrant model
 17561 ;;
 17562                           
 17563                           
 17564                           ;psect for function _setCellOvervoltageProtection
 17565  201C                     _setCellOvervoltageProtection:	
 17566                           
 17567                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 17568                           
 17569                           ;incstack = 0
 17570                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 17571  201C  0020               	movlb	0	; select bank0
 17572  201D  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 17573  201E  0023               	movlb	3	; select bank3
 17574  201F  00C7               	movwf	(_maxCellVoltage+1)^(0+384)
 17575  2020  0020               	movlb	0	; select bank0
 17576  2021  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 17577  2022  0023               	movlb	3	; select bank3
 17578  2023  00C6               	movwf	_maxCellVoltage^(0+384)
 17579                           
 17580                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 17581  2024  3018               	movlw	24
 17582  2025  00F5               	movwf	readRegister@slaveAddress
 17583  2026  3000               	movlw	0
 17584  2027  00F6               	movwf	readRegister@slaveAddress+1
 17585  2028  3008               	movlw	8
 17586  2029  00F7               	movwf	readRegister@regAddress
 17587  202A  3000               	movlw	0
 17588  202B  00F8               	movwf	readRegister@regAddress+1
 17589  202C  31B3  23C5  31A0   	fcall	_readRegister
 17590  202F  0875               	movf	?_readRegister,w
 17591  2030  0020               	movlb	0	; select bank0
 17592  2031  00B6               	movwf	??_setCellOvervoltageProtection
 17593  2032  0836               	movf	??_setCellOvervoltageProtection,w
 17594  2033  0023               	movlb	3	; select bank3
 17595  2034  00D4               	movwf	BQ76920@protect3^(0+384)
 17596                           
 17597                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 17598  2035  0852               	movf	_adcGain^(0+384),w
 17599  2036  0020               	movlb	0	; select bank0
 17600  2037  00A4               	movwf	___aldiv@divisor
 17601  2038  0023               	movlb	3	; select bank3
 17602  2039  0853               	movf	(_adcGain+1)^(0+384),w
 17603  203A  0020               	movlb	0	; select bank0
 17604  203B  00A5               	movwf	___aldiv@divisor+1
 17605  203C  0D89               	rlf	9,f
 17606  203D  3B89               	subwfb	9,f
 17607  203E  0989               	comf	9,f
 17608  203F  00A6               	movwf	___aldiv@divisor+2
 17609  2040  00A7               	movwf	___aldiv@divisor+3
 17610  2041  0023               	movlb	3	; select bank3
 17611  2042  0850               	movf	_adcOffset^(0+384),w
 17612  2043  0020               	movlb	0	; select bank0
 17613  2044  00B6               	movwf	??_setCellOvervoltageProtection
 17614  2045  0023               	movlb	3	; select bank3
 17615  2046  0851               	movf	(_adcOffset+1)^(0+384),w
 17616  2047  0020               	movlb	0	; select bank0
 17617  2048  00B7               	movwf	??_setCellOvervoltageProtection+1
 17618  2049  3000               	movlw	0
 17619  204A  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 17620  204B  30FF               	movlw	255
 17621  204C  00B8               	movwf	??_setCellOvervoltageProtection+2
 17622  204D  00B9               	movwf	??_setCellOvervoltageProtection+3
 17623  204E  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 17624  204F  00BA               	movwf	??_setCellOvervoltageProtection+4
 17625  2050  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 17626  2051  00BB               	movwf	??_setCellOvervoltageProtection+5
 17627  2052  3000               	movlw	0
 17628  2053  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 17629  2054  30FF               	movlw	255
 17630  2055  00BC               	movwf	??_setCellOvervoltageProtection+6
 17631  2056  00BD               	movwf	??_setCellOvervoltageProtection+7
 17632  2057  0836               	movf	??_setCellOvervoltageProtection,w
 17633  2058  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 17634  2059  0837               	movf	??_setCellOvervoltageProtection+1,w
 17635  205A  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 17636  205B  0838               	movf	??_setCellOvervoltageProtection+2,w
 17637  205C  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 17638  205D  0839               	movf	??_setCellOvervoltageProtection+3,w
 17639  205E  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 17640  205F  083D               	movf	??_setCellOvervoltageProtection+7,w
 17641  2060  00F4               	movwf	___lmul@multiplier+3
 17642  2061  083C               	movf	??_setCellOvervoltageProtection+6,w
 17643  2062  00F3               	movwf	___lmul@multiplier+2
 17644  2063  083B               	movf	??_setCellOvervoltageProtection+5,w
 17645  2064  00F2               	movwf	___lmul@multiplier+1
 17646  2065  083A               	movf	??_setCellOvervoltageProtection+4,w
 17647  2066  00F1               	movwf	___lmul@multiplier
 17648  2067  3000               	movlw	0
 17649  2068  00F8               	movwf	___lmul@multiplicand+3
 17650  2069  3000               	movlw	0
 17651  206A  00F7               	movwf	___lmul@multiplicand+2
 17652  206B  3003               	movlw	3
 17653  206C  00F6               	movwf	___lmul@multiplicand+1
 17654  206D  30E8               	movlw	232
 17655  206E  00F5               	movwf	___lmul@multiplicand
 17656  206F  31B3  232C  31A0   	fcall	___lmul
 17657  2072  0874               	movf	?___lmul+3,w
 17658  2073  0020               	movlb	0	; select bank0
 17659  2074  00AB               	movwf	___aldiv@dividend+3
 17660  2075  0873               	movf	?___lmul+2,w
 17661  2076  00AA               	movwf	___aldiv@dividend+2
 17662  2077  0872               	movf	?___lmul+1,w
 17663  2078  00A9               	movwf	___aldiv@dividend+1
 17664  2079  0871               	movf	?___lmul,w
 17665  207A  00A8               	movwf	___aldiv@dividend
 17666  207B  31A9  21A5  31A0   	fcall	___aldiv
 17667  207E  0020               	movlb	0	; select bank0
 17668  207F  0824               	movf	?___aldiv,w
 17669  2080  00BE               	movwf	??_setCellOvervoltageProtection+8
 17670  2081  0825               	movf	?___aldiv+1,w
 17671  2082  00BF               	movwf	??_setCellOvervoltageProtection+9
 17672  2083  0826               	movf	?___aldiv+2,w
 17673  2084  00C0               	movwf	??_setCellOvervoltageProtection+10
 17674  2085  0827               	movf	?___aldiv+3,w
 17675  2086  00C1               	movwf	??_setCellOvervoltageProtection+11
 17676  2087  3004               	movlw	4
 17677  2088  00C2               	movwf	??_setCellOvervoltageProtection+12
 17678  2089                     u12245:	
 17679  2089  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 17680  208A  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 17681  208B  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 17682  208C  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 17683  208D  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 17684  208E  2889               	goto	u12245
 17685  208F  083E               	movf	??_setCellOvervoltageProtection+8,w
 17686  2090  00C3               	movwf	??_setCellOvervoltageProtection+13
 17687  2091  0843               	movf	??_setCellOvervoltageProtection+13,w
 17688  2092  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 17689                           
 17690                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 17691  2093  3018               	movlw	24
 17692  2094  00F5               	movwf	I2C_writeRegister@slaveAddress
 17693  2095  3000               	movlw	0
 17694  2096  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17695  2097  3009               	movlw	9
 17696  2098  00F7               	movwf	I2C_writeRegister@regAddress
 17697  2099  3000               	movlw	0
 17698  209A  00F8               	movwf	I2C_writeRegister@regAddress+1
 17699  209B  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 17700  209C  00B6               	movwf	??_setCellOvervoltageProtection
 17701  209D  01B7               	clrf	??_setCellOvervoltageProtection+1
 17702  209E  0836               	movf	??_setCellOvervoltageProtection,w
 17703  209F  00F9               	movwf	I2C_writeRegister@data
 17704  20A0  0837               	movf	??_setCellOvervoltageProtection+1,w
 17705  20A1  00FA               	movwf	I2C_writeRegister@data+1
 17706  20A2  31B2  221B  31A0   	fcall	_I2C_writeRegister
 17707                           
 17708                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 17709  20A5  0020               	movlb	0	; select bank0
 17710  20A6  01C5               	clrf	setCellOvervoltageProtection@i
 17711  20A7  01C6               	clrf	setCellOvervoltageProtection@i+1
 17712  20A8                     l8567:	
 17713                           
 17714                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 17715  20A8  0846               	movf	setCellOvervoltageProtection@i+1,w
 17716  20A9  0085               	movwf	5
 17717  20AA  0845               	movf	setCellOvervoltageProtection@i,w
 17718  20AB  0084               	movwf	4
 17719  20AC  3584               	lslf	4,f
 17720  20AD  0D85               	rlf	5,f
 17721  20AE  30F8               	movlw	low (_OV_delay_setting| (0+32768))
 17722  20AF  0784               	addwf	4,f
 17723  20B0  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 17724  20B1  3D85               	addwfc	5,f
 17725  20B2  3F00               	moviw [0]fsr0
 17726  20B3  00B6               	movwf	??_setCellOvervoltageProtection
 17727  20B4  3F01               	moviw [1]fsr0
 17728  20B5  00B7               	movwf	??_setCellOvervoltageProtection+1
 17729  20B6  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 17730  20B7  3A80               	xorlw	128
 17731  20B8  00B8               	movwf	??_setCellOvervoltageProtection+2
 17732  20B9  0837               	movf	??_setCellOvervoltageProtection+1,w
 17733  20BA  3A80               	xorlw	128
 17734  20BB  0238               	subwf	??_setCellOvervoltageProtection+2,w
 17735  20BC  1D03               	skipz
 17736  20BD  28C0               	goto	u12255
 17737  20BE  0836               	movf	??_setCellOvervoltageProtection,w
 17738  20BF  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 17739  20C0                     u12255:	
 17740  20C0  1C03               	skipc
 17741  20C1  28D0               	goto	l8571
 17742                           
 17743                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 17744  20C2  0020               	movlb	0	; select bank0
 17745  20C3  0845               	movf	setCellOvervoltageProtection@i,w
 17746  20C4  00B6               	movwf	??_setCellOvervoltageProtection
 17747  20C5  0EB6               	swapf	??_setCellOvervoltageProtection,f
 17748  20C6  0DB6               	rlf	??_setCellOvervoltageProtection,f
 17749  20C7  0DB6               	rlf	??_setCellOvervoltageProtection,f
 17750  20C8  0023               	movlb	3	; select bank3
 17751  20C9  0854               	movf	BQ76920@protect3^(0+384),w
 17752  20CA  0020               	movlb	0	; select bank0
 17753  20CB  0636               	xorwf	??_setCellOvervoltageProtection,w
 17754  20CC  393F               	andlw	-193
 17755  20CD  0636               	xorwf	??_setCellOvervoltageProtection,w
 17756  20CE  0023               	movlb	3	; select bank3
 17757  20CF  00D4               	movwf	BQ76920@protect3^(0+384)
 17758  20D0                     l8571:	
 17759                           
 17760                           ;BQ76920.c: 159:     }
 17761  20D0  3001               	movlw	1
 17762  20D1  0020               	movlb	0	; select bank0
 17763  20D2  07C5               	addwf	setCellOvervoltageProtection@i,f
 17764  20D3  3000               	movlw	0
 17765  20D4  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 17766  20D5  3000               	movlw	0
 17767  20D6  0246               	subwf	setCellOvervoltageProtection@i+1,w
 17768  20D7  3003               	movlw	3
 17769  20D8  1903               	skipnz
 17770  20D9  0245               	subwf	setCellOvervoltageProtection@i,w
 17771  20DA  1C03               	skipc
 17772  20DB  28A8               	goto	l8567
 17773                           
 17774                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 17775  20DC  3018               	movlw	24
 17776  20DD  00F5               	movwf	I2C_writeRegister@slaveAddress
 17777  20DE  3000               	movlw	0
 17778  20DF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17779  20E0  3008               	movlw	8
 17780  20E1  00F7               	movwf	I2C_writeRegister@regAddress
 17781  20E2  3000               	movlw	0
 17782  20E3  00F8               	movwf	I2C_writeRegister@regAddress+1
 17783  20E4  0023               	movlb	3	; select bank3
 17784  20E5  0854               	movf	BQ76920@protect3^(0+384),w
 17785  20E6  0020               	movlb	0	; select bank0
 17786  20E7  00B6               	movwf	??_setCellOvervoltageProtection
 17787  20E8  01B7               	clrf	??_setCellOvervoltageProtection+1
 17788  20E9  0836               	movf	??_setCellOvervoltageProtection,w
 17789  20EA  00F9               	movwf	I2C_writeRegister@data
 17790  20EB  0837               	movf	??_setCellOvervoltageProtection+1,w
 17791  20EC  00FA               	movwf	I2C_writeRegister@data+1
 17792  20ED  31B2  221B         	fcall	_I2C_writeRegister
 17793  20EF  0008               	return
 17794  20F0                     __end_of_setCellOvervoltageProtection:	
 17795                           
 17796                           	psect	text56
 17797  332C                     __ptext56:	
 17798 ;; *************** function ___lmul *****************
 17799 ;; Defined at:
 17800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 17801 ;; Parameters:    Size  Location     Type
 17802 ;;  multiplier      4    1[COMMON] unsigned long 
 17803 ;;  multiplicand    4    5[COMMON] unsigned long 
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;  product         4    0[BANK0 ] unsigned long 
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  4    1[COMMON] unsigned long 
 17808 ;; Registers used:
 17809 ;;		wreg, status,2, status,0
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17815 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17816 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17818 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17819 ;;Total ram usage:       12 bytes
 17820 ;; Hardware stack levels used:    1
 17821 ;; Hardware stack levels required when called:    1
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_setCellUndervoltageProtection
 17826 ;;		_setCellOvervoltageProtection
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           
 17831                           ;psect for function ___lmul
 17832  332C                     ___lmul:	
 17833                           
 17834                           ;incstack = 0
 17835                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 17836  332C  3000               	movlw	0
 17837  332D  0020               	movlb	0	; select bank0
 17838  332E  00A3               	movwf	___lmul@product+3
 17839  332F  3000               	movlw	0
 17840  3330  00A2               	movwf	___lmul@product+2
 17841  3331  3000               	movlw	0
 17842  3332  00A1               	movwf	___lmul@product+1
 17843  3333  3000               	movlw	0
 17844  3334  00A0               	movwf	___lmul@product
 17845  3335                     l8431:	
 17846  3335  1C71               	btfss	___lmul@multiplier,0
 17847  3336  2B40               	goto	l8435
 17848  3337  0875               	movf	___lmul@multiplicand,w
 17849  3338  0020               	movlb	0	; select bank0
 17850  3339  07A0               	addwf	___lmul@product,f
 17851  333A  0876               	movf	___lmul@multiplicand+1,w
 17852  333B  3DA1               	addwfc	___lmul@product+1,f
 17853  333C  0877               	movf	___lmul@multiplicand+2,w
 17854  333D  3DA2               	addwfc	___lmul@product+2,f
 17855  333E  0878               	movf	___lmul@multiplicand+3,w
 17856  333F  3DA3               	addwfc	___lmul@product+3,f
 17857  3340                     l8435:	
 17858  3340  3001               	movlw	1
 17859  3341                     u12035:	
 17860  3341  35F5               	lslf	___lmul@multiplicand,f
 17861  3342  0DF6               	rlf	___lmul@multiplicand+1,f
 17862  3343  0DF7               	rlf	___lmul@multiplicand+2,f
 17863  3344  0DF8               	rlf	___lmul@multiplicand+3,f
 17864  3345  0B89               	decfsz	9,f
 17865  3346  2B41               	goto	u12035
 17866  3347  3001               	movlw	1
 17867  3348                     u12045:	
 17868  3348  36F4               	lsrf	___lmul@multiplier+3,f
 17869  3349  0CF3               	rrf	___lmul@multiplier+2,f
 17870  334A  0CF2               	rrf	___lmul@multiplier+1,f
 17871  334B  0CF1               	rrf	___lmul@multiplier,f
 17872  334C  0B89               	decfsz	9,f
 17873  334D  2B48               	goto	u12045
 17874  334E  0874               	movf	___lmul@multiplier+3,w
 17875  334F  0473               	iorwf	___lmul@multiplier+2,w
 17876  3350  0472               	iorwf	___lmul@multiplier+1,w
 17877  3351  0471               	iorwf	___lmul@multiplier,w
 17878  3352  1D03               	skipz
 17879  3353  2B35               	goto	l8431
 17880  3354  0020               	movlb	0	; select bank0
 17881  3355  0823               	movf	___lmul@product+3,w
 17882  3356  00F4               	movwf	?___lmul+3
 17883  3357  0822               	movf	___lmul@product+2,w
 17884  3358  00F3               	movwf	?___lmul+2
 17885  3359  0821               	movf	___lmul@product+1,w
 17886  335A  00F2               	movwf	?___lmul+1
 17887  335B  0820               	movf	___lmul@product,w
 17888  335C  00F1               	movwf	?___lmul
 17889  335D  0008               	return
 17890  335E                     __end_of___lmul:	
 17891                           
 17892                           	psect	text57
 17893  2DB6                     __ptext57:	
 17894 ;; *************** function _beginAFEcommunication *****************
 17895 ;; Defined at:
 17896 ;;		line 23 in file "BQ76920.c"
 17897 ;; Parameters:    Size  Location     Type
 17898 ;;		None
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;  i               2   13[BANK0 ] int 
 17901 ;;  commSuccess     2   11[BANK0 ] int 
 17902 ;; Return value:  Size  Location     Type
 17903 ;;                  2    0[BANK0 ] int 
 17904 ;; Registers used:
 17905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17906 ;; Tracked objects:
 17907 ;;		On entry : 0/0
 17908 ;;		On exit  : 0/0
 17909 ;;		Unchanged: 0/0
 17910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17912 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17913 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17914 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;Total ram usage:       15 bytes
 17916 ;; Hardware stack levels used:    1
 17917 ;; Hardware stack levels required when called:    3
 17918 ;; This function calls:
 17919 ;;		_I2C_writeRegister
 17920 ;;		_readRegister
 17921 ;; This function is called by:
 17922 ;;		_statemachine
 17923 ;; This function uses a non-reentrant model
 17924 ;;
 17925                           
 17926                           
 17927                           ;psect for function _beginAFEcommunication
 17928  2DB6                     _beginAFEcommunication:	
 17929                           
 17930                           ;BQ76920.c: 25:     int commSuccess = 0;
 17931                           
 17932                           ;incstack = 0
 17933                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17934  2DB6  0020               	movlb	0	; select bank0
 17935  2DB7  01AB               	clrf	beginAFEcommunication@commSuccess
 17936  2DB8  01AC               	clrf	beginAFEcommunication@commSuccess+1
 17937                           
 17938                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 17939  2DB9  01AD               	clrf	beginAFEcommunication@i
 17940  2DBA  01AE               	clrf	beginAFEcommunication@i+1
 17941  2DBB                     l8583:	
 17942                           
 17943                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 17944  2DBB  0020               	movlb	0	; select bank0
 17945  2DBC  352D               	lslf	beginAFEcommunication@i,w
 17946  2DBD  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 17947  2DBE  0086               	movwf	6
 17948  2DBF  3001               	movlw	1	; select bank3/4
 17949  2DC0  0087               	movwf	7
 17950  2DC1  3000               	movlw	0
 17951  2DC2  3FC0               	movwi [0]fsr1
 17952  2DC3  3FC1               	movwi [1]fsr1
 17953                           
 17954                           ;BQ76920.c: 30:     }
 17955  2DC4  3001               	movlw	1
 17956  2DC5  07AD               	addwf	beginAFEcommunication@i,f
 17957  2DC6  3000               	movlw	0
 17958  2DC7  3DAE               	addwfc	beginAFEcommunication@i+1,f
 17959  2DC8  082E               	movf	beginAFEcommunication@i+1,w
 17960  2DC9  3A80               	xorlw	128
 17961  2DCA  00A2               	movwf	??_beginAFEcommunication
 17962  2DCB  3080               	movlw	128
 17963  2DCC  0222               	subwf	??_beginAFEcommunication,w
 17964  2DCD  1D03               	skipz
 17965  2DCE  2DD1               	goto	u12275
 17966  2DCF  3004               	movlw	4
 17967  2DD0  022D               	subwf	beginAFEcommunication@i,w
 17968  2DD1                     u12275:	
 17969  2DD1  1C03               	skipc
 17970  2DD2  2DBB               	goto	l8583
 17971                           
 17972                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 17973  2DD3  3018               	movlw	24
 17974  2DD4  00F5               	movwf	I2C_writeRegister@slaveAddress
 17975  2DD5  3000               	movlw	0
 17976  2DD6  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17977  2DD7  300B               	movlw	11
 17978  2DD8  00F7               	movwf	I2C_writeRegister@regAddress
 17979  2DD9  3000               	movlw	0
 17980  2DDA  00F8               	movwf	I2C_writeRegister@regAddress+1
 17981  2DDB  3019               	movlw	25
 17982  2DDC  00F9               	movwf	I2C_writeRegister@data
 17983  2DDD  3000               	movlw	0
 17984  2DDE  00FA               	movwf	I2C_writeRegister@data+1
 17985  2DDF  31B2  221B  31AD   	fcall	_I2C_writeRegister
 17986                           
 17987                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 17988  2DE2  3018               	movlw	24
 17989  2DE3  00F5               	movwf	readRegister@slaveAddress
 17990  2DE4  3000               	movlw	0
 17991  2DE5  00F6               	movwf	readRegister@slaveAddress+1
 17992  2DE6  300B               	movlw	11
 17993  2DE7  00F7               	movwf	readRegister@regAddress
 17994  2DE8  3000               	movlw	0
 17995  2DE9  00F8               	movwf	readRegister@regAddress+1
 17996  2DEA  31B3  23C5  31AD   	fcall	_readRegister
 17997  2DED  3019               	movlw	25
 17998  2DEE  0675               	xorwf	?_readRegister,w
 17999  2DEF  0476               	iorwf	?_readRegister+1,w
 18000  2DF0  1D03               	btfss	3,2
 18001  2DF1  2E64               	goto	l414
 18002                           
 18003                           ;BQ76920.c: 36:         commSuccess = 1;
 18004  2DF2  3001               	movlw	1
 18005  2DF3  0020               	movlb	0	; select bank0
 18006  2DF4  00AB               	movwf	beginAFEcommunication@commSuccess
 18007  2DF5  3000               	movlw	0
 18008  2DF6  00AC               	movwf	beginAFEcommunication@commSuccess+1
 18009                           
 18010                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 18011  2DF7  3018               	movlw	24
 18012  2DF8  00F5               	movwf	I2C_writeRegister@slaveAddress
 18013  2DF9  3000               	movlw	0
 18014  2DFA  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18015  2DFB  3004               	movlw	4
 18016  2DFC  00F7               	movwf	I2C_writeRegister@regAddress
 18017  2DFD  3000               	movlw	0
 18018  2DFE  00F8               	movwf	I2C_writeRegister@regAddress+1
 18019  2DFF  3018               	movlw	24
 18020  2E00  00F9               	movwf	I2C_writeRegister@data
 18021  2E01  3000               	movlw	0
 18022  2E02  00FA               	movwf	I2C_writeRegister@data+1
 18023  2E03  31B2  221B  31AD   	fcall	_I2C_writeRegister
 18024                           
 18025                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 18026  2E06  3018               	movlw	24
 18027  2E07  00F5               	movwf	I2C_writeRegister@slaveAddress
 18028  2E08  3000               	movlw	0
 18029  2E09  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18030  2E0A  3005               	movlw	5
 18031  2E0B  00F7               	movwf	I2C_writeRegister@regAddress
 18032  2E0C  3000               	movlw	0
 18033  2E0D  00F8               	movwf	I2C_writeRegister@regAddress+1
 18034  2E0E  3040               	movlw	64
 18035  2E0F  00F9               	movwf	I2C_writeRegister@data
 18036  2E10  3000               	movlw	0
 18037  2E11  00FA               	movwf	I2C_writeRegister@data+1
 18038  2E12  31B2  221B  31AD   	fcall	_I2C_writeRegister
 18039                           
 18040                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 18041  2E15  3018               	movlw	24
 18042  2E16  00F5               	movwf	readRegister@slaveAddress
 18043  2E17  3000               	movlw	0
 18044  2E18  00F6               	movwf	readRegister@slaveAddress+1
 18045  2E19  3051               	movlw	81
 18046  2E1A  00F7               	movwf	readRegister@regAddress
 18047  2E1B  3000               	movlw	0
 18048  2E1C  00F8               	movwf	readRegister@regAddress+1
 18049  2E1D  31B3  23C5  31AD   	fcall	_readRegister
 18050  2E20  0876               	movf	?_readRegister+1,w
 18051  2E21  0023               	movlb	3	; select bank3
 18052  2E22  00D1               	movwf	(_adcOffset+1)^(0+384)
 18053  2E23  0875               	movf	?_readRegister,w
 18054  2E24  00D0               	movwf	_adcOffset^(0+384)
 18055                           
 18056                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 18057  2E25  3018               	movlw	24
 18058  2E26  00F5               	movwf	readRegister@slaveAddress
 18059  2E27  3000               	movlw	0
 18060  2E28  00F6               	movwf	readRegister@slaveAddress+1
 18061  2E29  3059               	movlw	89
 18062  2E2A  00F7               	movwf	readRegister@regAddress
 18063  2E2B  3000               	movlw	0
 18064  2E2C  00F8               	movwf	readRegister@regAddress+1
 18065  2E2D  31B3  23C5  31AD   	fcall	_readRegister
 18066  2E30  0875               	movf	?_readRegister,w
 18067  2E31  0020               	movlb	0	; select bank0
 18068  2E32  00A2               	movwf	??_beginAFEcommunication
 18069  2E33  0876               	movf	?_readRegister+1,w
 18070  2E34  00A3               	movwf	??_beginAFEcommunication+1
 18071  2E35  3005               	movlw	5
 18072  2E36  00A4               	movwf	??_beginAFEcommunication+2
 18073  2E37                     u12295:	
 18074  2E37  0D23               	rlf	??_beginAFEcommunication+1,w
 18075  2E38  0CA3               	rrf	??_beginAFEcommunication+1,f
 18076  2E39  0CA2               	rrf	??_beginAFEcommunication,f
 18077  2E3A  0BA4               	decfsz	??_beginAFEcommunication+2,f
 18078  2E3B  2E37               	goto	u12295
 18079  2E3C  3007               	movlw	7
 18080  2E3D  0522               	andwf	??_beginAFEcommunication,w
 18081  2E3E  00A5               	movwf	??_beginAFEcommunication+3
 18082  2E3F  3000               	movlw	0
 18083  2E40  0523               	andwf	??_beginAFEcommunication+1,w
 18084  2E41  00A6               	movwf	??_beginAFEcommunication+4
 18085  2E42  3018               	movlw	24
 18086  2E43  00F5               	movwf	readRegister@slaveAddress
 18087  2E44  3000               	movlw	0
 18088  2E45  00F6               	movwf	readRegister@slaveAddress+1
 18089  2E46  3050               	movlw	80
 18090  2E47  00F7               	movwf	readRegister@regAddress
 18091  2E48  3000               	movlw	0
 18092  2E49  00F8               	movwf	readRegister@regAddress+1
 18093  2E4A  31B3  23C5         	fcall	_readRegister
 18094  2E4C  300C               	movlw	12
 18095  2E4D  0575               	andwf	?_readRegister,w
 18096  2E4E  0020               	movlb	0	; select bank0
 18097  2E4F  00A7               	movwf	??_beginAFEcommunication+5
 18098  2E50  3000               	movlw	0
 18099  2E51  0576               	andwf	?_readRegister+1,w
 18100  2E52  00A8               	movwf	??_beginAFEcommunication+6
 18101  2E53  35A7               	lslf	??_beginAFEcommunication+5,f
 18102  2E54  0DA8               	rlf	??_beginAFEcommunication+6,f
 18103  2E55  0825               	movf	??_beginAFEcommunication+3,w
 18104  2E56  0427               	iorwf	??_beginAFEcommunication+5,w
 18105  2E57  00A9               	movwf	??_beginAFEcommunication+7
 18106  2E58  0826               	movf	??_beginAFEcommunication+4,w
 18107  2E59  0428               	iorwf	??_beginAFEcommunication+6,w
 18108  2E5A  00AA               	movwf	??_beginAFEcommunication+8
 18109  2E5B  0829               	movf	??_beginAFEcommunication+7,w
 18110  2E5C  3E6D               	addlw	109
 18111  2E5D  0023               	movlb	3	; select bank3
 18112  2E5E  00D2               	movwf	_adcGain^(0+384)
 18113  2E5F  3001               	movlw	1
 18114  2E60  0020               	movlb	0	; select bank0
 18115  2E61  3D2A               	addwfc	??_beginAFEcommunication+8,w
 18116  2E62  0023               	movlb	3	; select bank3
 18117  2E63  00D3               	movwf	(_adcGain+1)^(0+384)
 18118  2E64                     l414:	
 18119                           ;BQ76920.c: 48:     }
 18120                           
 18121                           
 18122                           ;BQ76920.c: 49:     return commSuccess;
 18123  2E64  0020               	movlb	0	; select bank0
 18124  2E65  082C               	movf	beginAFEcommunication@commSuccess+1,w
 18125  2E66  00A1               	movwf	?_beginAFEcommunication+1
 18126  2E67  082B               	movf	beginAFEcommunication@commSuccess,w
 18127  2E68  00A0               	movwf	?_beginAFEcommunication
 18128  2E69  0008               	return
 18129  2E6A                     __end_of_beginAFEcommunication:	
 18130                           
 18131                           	psect	text58
 18132  33C5                     __ptext58:	
 18133 ;; *************** function _readRegister *****************
 18134 ;; Defined at:
 18135 ;;		line 107 in file "I2C.c"
 18136 ;; Parameters:    Size  Location     Type
 18137 ;;  slaveAddress    2    5[COMMON] int 
 18138 ;;  regAddress      2    7[COMMON] int 
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;  recievedData    2    9[COMMON] int 
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  2    5[COMMON] int 
 18143 ;; Registers used:
 18144 ;;		wreg, status,2, status,0, pclath, cstack
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;Total ram usage:        6 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; Hardware stack levels required when called:    2
 18157 ;; This function calls:
 18158 ;;		_read_I2C_data
 18159 ;;		_send_I2C_NACK
 18160 ;;		_send_I2C_controlByte
 18161 ;;		_send_I2C_data
 18162 ;;		_send_I2C_startBit
 18163 ;;		_send_I2C_stopBit
 18164 ;; This function is called by:
 18165 ;;		_beginAFEcommunication
 18166 ;;		_setCellUndervoltageProtection
 18167 ;;		_setCellOvervoltageProtection
 18168 ;;		_printotAFERegisters
 18169 ;; This function uses a non-reentrant model
 18170 ;;
 18171                           
 18172                           
 18173                           ;psect for function _readRegister
 18174  33C5                     _readRegister:	
 18175                           
 18176                           ;I2C.c: 108:     int recievedData;;I2C.c: 109:     send_I2C_startBit();
 18177                           
 18178                           ;incstack = 0
 18179                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18180  33C5  31B0  20B1  31B3   	fcall	_send_I2C_startBit
 18181                           
 18182                           ;I2C.c: 110:     send_I2C_controlByte(slaveAddress, 0);
 18183  33C8  0876               	movf	readRegister@slaveAddress+1,w
 18184  33C9  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18185  33CA  0875               	movf	readRegister@slaveAddress,w
 18186  33CB  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18187  33CC  3000               	movlw	0
 18188  33CD  00F3               	movwf	send_I2C_controlByte@RW_bit
 18189  33CE  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18190  33CF  31B0  20F7  31B3   	fcall	_send_I2C_controlByte
 18191                           
 18192                           ;I2C.c: 111:     send_I2C_data(regAddress);
 18193  33D2  0878               	movf	readRegister@regAddress+1,w
 18194  33D3  00F2               	movwf	send_I2C_data@databyte+1
 18195  33D4  0877               	movf	readRegister@regAddress,w
 18196  33D5  00F1               	movwf	send_I2C_data@databyte
 18197  33D6  31B0  20D2  31B3   	fcall	_send_I2C_data
 18198                           
 18199                           ;I2C.c: 112:     send_I2C_stopBit();
 18200  33D9  31B0  20B9  31B3   	fcall	_send_I2C_stopBit
 18201                           
 18202                           ;I2C.c: 113:     send_I2C_startBit();
 18203  33DC  31B0  20B1  31B3   	fcall	_send_I2C_startBit
 18204                           
 18205                           ;I2C.c: 114:     send_I2C_controlByte(slaveAddress, 1);
 18206  33DF  0876               	movf	readRegister@slaveAddress+1,w
 18207  33E0  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18208  33E1  0875               	movf	readRegister@slaveAddress,w
 18209  33E2  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18210  33E3  3001               	movlw	1
 18211  33E4  00F3               	movwf	send_I2C_controlByte@RW_bit
 18212  33E5  3000               	movlw	0
 18213  33E6  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18214  33E7  31B0  20F7  31B3   	fcall	_send_I2C_controlByte
 18215                           
 18216                           ;I2C.c: 115:     recievedData = read_I2C_data();
 18217  33EA  3187  27EC  31B3   	fcall	_read_I2C_data
 18218  33ED  0872               	movf	?_read_I2C_data+1,w
 18219  33EE  00FA               	movwf	readRegister@recievedData+1
 18220  33EF  0871               	movf	?_read_I2C_data,w
 18221  33F0  00F9               	movwf	readRegister@recievedData
 18222                           
 18223                           ;I2C.c: 116:     send_I2C_NACK();
 18224  33F1  31B0  20DB  31B3   	fcall	_send_I2C_NACK
 18225                           
 18226                           ;I2C.c: 117:     send_I2C_stopBit();
 18227  33F4  31B0  20B9         	fcall	_send_I2C_stopBit
 18228                           
 18229                           ;I2C.c: 118:     return recievedData;
 18230  33F6  087A               	movf	readRegister@recievedData+1,w
 18231  33F7  00F6               	movwf	?_readRegister+1
 18232  33F8  0879               	movf	readRegister@recievedData,w
 18233  33F9  00F5               	movwf	?_readRegister
 18234  33FA  0008               	return
 18235  33FB                     __end_of_readRegister:	
 18236                           
 18237                           	psect	text59
 18238  30DB                     __ptext59:	
 18239 ;; *************** function _send_I2C_NACK *****************
 18240 ;; Defined at:
 18241 ;;		line 83 in file "I2C.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;		None
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;		None
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      void 
 18248 ;; Registers used:
 18249 ;;		None
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18259 ;;Total ram usage:        0 bytes
 18260 ;; Hardware stack levels used:    1
 18261 ;; Hardware stack levels required when called:    1
 18262 ;; This function calls:
 18263 ;;		Nothing
 18264 ;; This function is called by:
 18265 ;;		_readRegister
 18266 ;; This function uses a non-reentrant model
 18267 ;;
 18268                           
 18269                           
 18270                           ;psect for function _send_I2C_NACK
 18271  30DB                     _send_I2C_NACK:	
 18272                           
 18273                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 18274                           
 18275                           ;incstack = 0
 18276                           ; Regs used in _send_I2C_NACK: []
 18277  30DB  0020               	movlb	0	; select bank0
 18278  30DC  1191               	bcf	17,3	;volatile
 18279                           
 18280                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 18281  30DD  0024               	movlb	4	; select bank4
 18282  30DE  1696               	bsf	22,5	;volatile
 18283                           
 18284                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 18285  30DF  1616               	bsf	22,4	;volatile
 18286  30E0                     l311:	
 18287                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 18288                           
 18289  30E0  0020               	movlb	0	; select bank0
 18290  30E1  1991               	btfsc	17,3	;volatile
 18291  30E2  0008               	return
 18292  30E3  28E0               	goto	l311
 18293  30E4                     __end_of_send_I2C_NACK:	
 18294                           
 18295                           	psect	text60
 18296  07EC                     __ptext60:	
 18297 ;; *************** function _read_I2C_data *****************
 18298 ;; Defined at:
 18299 ;;		line 42 in file "I2C.c"
 18300 ;; Parameters:    Size  Location     Type
 18301 ;;		None
 18302 ;; Auto vars:     Size  Location     Type
 18303 ;;		None
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  2    1[COMMON] unsigned int 
 18306 ;; Registers used:
 18307 ;;		wreg
 18308 ;; Tracked objects:
 18309 ;;		On entry : 0/0
 18310 ;;		On exit  : 0/0
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18317 ;;Total ram usage:        4 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:    1
 18320 ;; This function calls:
 18321 ;;		Nothing
 18322 ;; This function is called by:
 18323 ;;		_readRegister
 18324 ;; This function uses a non-reentrant model
 18325 ;;
 18326                           
 18327                           
 18328                           ;psect for function _read_I2C_data
 18329  07EC                     _read_I2C_data:	
 18330                           
 18331                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 18332                           
 18333                           ;incstack = 0
 18334                           ; Regs used in _read_I2C_data: [wreg]
 18335  07EC  0020               	movlb	0	; select bank0
 18336  07ED  1191               	bcf	17,3	;volatile
 18337                           
 18338                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 18339  07EE  0024               	movlb	4	; select bank4
 18340  07EF  1596               	bsf	22,3	;volatile
 18341  07F0                     l281:	
 18342                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 18343                           
 18344  07F0  0020               	movlb	0	; select bank0
 18345  07F1  1D91               	btfss	17,3	;volatile
 18346  07F2  2FF0               	goto	l281
 18347                           
 18348                           ;I2C.c: 46:     return (SSPBUF);
 18349  07F3  0024               	movlb	4	; select bank4
 18350  07F4  0811               	movf	17,w	;volatile
 18351  07F5  00F3               	movwf	??_read_I2C_data
 18352  07F6  01F4               	clrf	??_read_I2C_data+1
 18353  07F7  0873               	movf	??_read_I2C_data,w
 18354  07F8  00F1               	movwf	?_read_I2C_data
 18355  07F9  0874               	movf	??_read_I2C_data+1,w
 18356  07FA  00F2               	movwf	?_read_I2C_data+1
 18357  07FB  0008               	return
 18358  07FC                     __end_of_read_I2C_data:	
 18359                           
 18360                           	psect	text61
 18361  321B                     __ptext61:	
 18362 ;; *************** function _I2C_writeRegister *****************
 18363 ;; Defined at:
 18364 ;;		line 96 in file "I2C.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;  slaveAddress    2    5[COMMON] int 
 18367 ;;  regAddress      2    7[COMMON] int 
 18368 ;;  data            2    9[COMMON] int 
 18369 ;; Auto vars:     Size  Location     Type
 18370 ;;		None
 18371 ;; Return value:  Size  Location     Type
 18372 ;;                  1    wreg      void 
 18373 ;; Registers used:
 18374 ;;		wreg, status,2, status,0, pclath, cstack
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/0
 18377 ;;		On exit  : 0/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18380 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18384 ;;Total ram usage:        6 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; Hardware stack levels required when called:    2
 18387 ;; This function calls:
 18388 ;;		_send_I2C_controlByte
 18389 ;;		_send_I2C_data
 18390 ;;		_send_I2C_startBit
 18391 ;;		_send_I2C_stopBit
 18392 ;; This function is called by:
 18393 ;;		_beginAFEcommunication
 18394 ;;		_setShortCircuitProtection
 18395 ;;		_setOverCurrentDischargeProtection
 18396 ;;		_setCellUndervoltageProtection
 18397 ;;		_setCellOvervoltageProtection
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401                           
 18402                           ;psect for function _I2C_writeRegister
 18403  321B                     _I2C_writeRegister:	
 18404                           
 18405                           ;I2C.c: 97:     send_I2C_startBit();
 18406                           
 18407                           ;incstack = 0
 18408                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 18409  321B  31B0  20B1  31B2   	fcall	_send_I2C_startBit
 18410                           
 18411                           ;I2C.c: 98:     send_I2C_controlByte(slaveAddress, 0);
 18412  321E  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 18413  321F  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18414  3220  0875               	movf	I2C_writeRegister@slaveAddress,w
 18415  3221  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18416  3222  3000               	movlw	0
 18417  3223  00F3               	movwf	send_I2C_controlByte@RW_bit
 18418  3224  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18419  3225  31B0  20F7  31B2   	fcall	_send_I2C_controlByte
 18420                           
 18421                           ;I2C.c: 99:     send_I2C_data(regAddress);
 18422  3228  0878               	movf	I2C_writeRegister@regAddress+1,w
 18423  3229  00F2               	movwf	send_I2C_data@databyte+1
 18424  322A  0877               	movf	I2C_writeRegister@regAddress,w
 18425  322B  00F1               	movwf	send_I2C_data@databyte
 18426  322C  31B0  20D2  31B2   	fcall	_send_I2C_data
 18427                           
 18428                           ;I2C.c: 100:     send_I2C_data(data);
 18429  322F  087A               	movf	I2C_writeRegister@data+1,w
 18430  3230  00F2               	movwf	send_I2C_data@databyte+1
 18431  3231  0879               	movf	I2C_writeRegister@data,w
 18432  3232  00F1               	movwf	send_I2C_data@databyte
 18433  3233  31B0  20D2  31B2   	fcall	_send_I2C_data
 18434                           
 18435                           ;I2C.c: 101:     send_I2C_stopBit();
 18436  3236  31B0  20B9         	fcall	_send_I2C_stopBit
 18437  3238  0008               	return
 18438  3239                     __end_of_I2C_writeRegister:	
 18439                           
 18440                           	psect	text62
 18441  30B9                     __ptext62:	
 18442 ;; *************** function _send_I2C_stopBit *****************
 18443 ;; Defined at:
 18444 ;;		line 70 in file "I2C.c"
 18445 ;; Parameters:    Size  Location     Type
 18446 ;;		None
 18447 ;; Auto vars:     Size  Location     Type
 18448 ;;		None
 18449 ;; Return value:  Size  Location     Type
 18450 ;;                  1    wreg      void 
 18451 ;; Registers used:
 18452 ;;		None
 18453 ;; Tracked objects:
 18454 ;;		On entry : 0/0
 18455 ;;		On exit  : 0/0
 18456 ;;		Unchanged: 0/0
 18457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18462 ;;Total ram usage:        0 bytes
 18463 ;; Hardware stack levels used:    1
 18464 ;; Hardware stack levels required when called:    1
 18465 ;; This function calls:
 18466 ;;		Nothing
 18467 ;; This function is called by:
 18468 ;;		_I2C_writeRegister
 18469 ;;		_readRegister
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           
 18473                           
 18474                           ;psect for function _send_I2C_stopBit
 18475  30B9                     _send_I2C_stopBit:	
 18476                           
 18477                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 18478                           
 18479                           ;incstack = 0
 18480                           ; Regs used in _send_I2C_stopBit: []
 18481  30B9  0020               	movlb	0	; select bank0
 18482  30BA  1191               	bcf	17,3	;volatile
 18483                           
 18484                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 18485  30BB  0024               	movlb	4	; select bank4
 18486  30BC  1516               	bsf	22,2	;volatile
 18487  30BD                     l299:	
 18488                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 18489                           
 18490  30BD  0020               	movlb	0	; select bank0
 18491  30BE  1991               	btfsc	17,3	;volatile
 18492  30BF  0008               	return
 18493  30C0  28BD               	goto	l299
 18494  30C1                     __end_of_send_I2C_stopBit:	
 18495                           
 18496                           	psect	text63
 18497  30B1                     __ptext63:	
 18498 ;; *************** function _send_I2C_startBit *****************
 18499 ;; Defined at:
 18500 ;;		line 64 in file "I2C.c"
 18501 ;; Parameters:    Size  Location     Type
 18502 ;;		None
 18503 ;; Auto vars:     Size  Location     Type
 18504 ;;		None
 18505 ;; Return value:  Size  Location     Type
 18506 ;;                  1    wreg      void 
 18507 ;; Registers used:
 18508 ;;		None
 18509 ;; Tracked objects:
 18510 ;;		On entry : 0/0
 18511 ;;		On exit  : 0/0
 18512 ;;		Unchanged: 0/0
 18513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18518 ;;Total ram usage:        0 bytes
 18519 ;; Hardware stack levels used:    1
 18520 ;; Hardware stack levels required when called:    1
 18521 ;; This function calls:
 18522 ;;		Nothing
 18523 ;; This function is called by:
 18524 ;;		_I2C_writeRegister
 18525 ;;		_readRegister
 18526 ;; This function uses a non-reentrant model
 18527 ;;
 18528                           
 18529                           
 18530                           ;psect for function _send_I2C_startBit
 18531  30B1                     _send_I2C_startBit:	
 18532                           
 18533                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 18534                           
 18535                           ;incstack = 0
 18536                           ; Regs used in _send_I2C_startBit: []
 18537  30B1  0020               	movlb	0	; select bank0
 18538  30B2  1191               	bcf	17,3	;volatile
 18539                           
 18540                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 18541  30B3  0024               	movlb	4	; select bank4
 18542  30B4  1416               	bsf	22,0	;volatile
 18543  30B5                     l293:	
 18544                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 18545                           
 18546  30B5  0020               	movlb	0	; select bank0
 18547  30B6  1991               	btfsc	17,3	;volatile
 18548  30B7  0008               	return
 18549  30B8  28B5               	goto	l293
 18550  30B9                     __end_of_send_I2C_startBit:	
 18551                           
 18552                           	psect	text64
 18553  30D2                     __ptext64:	
 18554 ;; *************** function _send_I2C_data *****************
 18555 ;; Defined at:
 18556 ;;		line 33 in file "I2C.c"
 18557 ;; Parameters:    Size  Location     Type
 18558 ;;  databyte        2    1[COMMON] unsigned int 
 18559 ;; Auto vars:     Size  Location     Type
 18560 ;;		None
 18561 ;; Return value:  Size  Location     Type
 18562 ;;                  1    wreg      void 
 18563 ;; Registers used:
 18564 ;;		wreg
 18565 ;; Tracked objects:
 18566 ;;		On entry : 0/0
 18567 ;;		On exit  : 0/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18574 ;;Total ram usage:        2 bytes
 18575 ;; Hardware stack levels used:    1
 18576 ;; Hardware stack levels required when called:    1
 18577 ;; This function calls:
 18578 ;;		Nothing
 18579 ;; This function is called by:
 18580 ;;		_I2C_writeRegister
 18581 ;;		_readRegister
 18582 ;; This function uses a non-reentrant model
 18583 ;;
 18584                           
 18585                           
 18586                           ;psect for function _send_I2C_data
 18587  30D2                     _send_I2C_data:	
 18588                           
 18589                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 18590                           
 18591                           ;incstack = 0
 18592                           ; Regs used in _send_I2C_data: [wreg]
 18593  30D2  0020               	movlb	0	; select bank0
 18594  30D3  1191               	bcf	17,3	;volatile
 18595                           
 18596                           ;I2C.c: 35:     SSPBUF = databyte;
 18597  30D4  0871               	movf	send_I2C_data@databyte,w
 18598  30D5  0024               	movlb	4	; select bank4
 18599  30D6  0091               	movwf	17	;volatile
 18600  30D7                     l275:	
 18601                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 18602                           
 18603  30D7  0020               	movlb	0	; select bank0
 18604  30D8  1991               	btfsc	17,3	;volatile
 18605  30D9  0008               	return
 18606  30DA  28D7               	goto	l275
 18607  30DB                     __end_of_send_I2C_data:	
 18608                           
 18609                           	psect	text65
 18610  30F7                     __ptext65:	
 18611 ;; *************** function _send_I2C_controlByte *****************
 18612 ;; Defined at:
 18613 ;;		line 52 in file "I2C.c"
 18614 ;; Parameters:    Size  Location     Type
 18615 ;;  BlockAddress    2    1[COMMON] unsigned int 
 18616 ;;  RW_bit          2    3[COMMON] unsigned int 
 18617 ;; Auto vars:     Size  Location     Type
 18618 ;;		None
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  1    wreg      void 
 18621 ;; Registers used:
 18622 ;;		wreg, status,2, status,0
 18623 ;; Tracked objects:
 18624 ;;		On entry : 0/0
 18625 ;;		On exit  : 0/0
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18632 ;;Total ram usage:        4 bytes
 18633 ;; Hardware stack levels used:    1
 18634 ;; Hardware stack levels required when called:    1
 18635 ;; This function calls:
 18636 ;;		Nothing
 18637 ;; This function is called by:
 18638 ;;		_I2C_writeRegister
 18639 ;;		_readRegister
 18640 ;; This function uses a non-reentrant model
 18641 ;;
 18642                           
 18643                           
 18644                           ;psect for function _send_I2C_controlByte
 18645  30F7                     _send_I2C_controlByte:	
 18646                           
 18647                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 18648                           
 18649                           ;incstack = 0
 18650                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 18651  30F7  0020               	movlb	0	; select bank0
 18652  30F8  1191               	bcf	17,3	;volatile
 18653                           
 18654                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 18655  30F9  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 18656  30FA  0773               	addwf	send_I2C_controlByte@RW_bit,w
 18657  30FB  0024               	movlb	4	; select bank4
 18658  30FC  0091               	movwf	17	;volatile
 18659  30FD                     l287:	
 18660                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 18661                           
 18662  30FD  0020               	movlb	0	; select bank0
 18663  30FE  1991               	btfsc	17,3	;volatile
 18664  30FF  0008               	return
 18665  3100  28FD               	goto	l287
 18666  3101                     __end_of_send_I2C_controlByte:	
 18667                           
 18668                           	psect	text66
 18669  32B7                     __ptext66:	
 18670 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 18671 ;; Defined at:
 18672 ;;		line 43 in file "RGB.c"
 18673 ;; Parameters:    Size  Location     Type
 18674 ;;		None
 18675 ;; Auto vars:     Size  Location     Type
 18676 ;;		None
 18677 ;; Return value:  Size  Location     Type
 18678 ;;                  1    wreg      void 
 18679 ;; Registers used:
 18680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18681 ;; Tracked objects:
 18682 ;;		On entry : 0/0
 18683 ;;		On exit  : 0/0
 18684 ;;		Unchanged: 0/0
 18685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18690 ;;Total ram usage:        1 bytes
 18691 ;; Hardware stack levels used:    1
 18692 ;; Hardware stack levels required when called:    2
 18693 ;; This function calls:
 18694 ;;		_RGB_color
 18695 ;; This function is called by:
 18696 ;;		_statemachine
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           
 18701                           ;psect for function _RGB_AWAIT_AFE_CONN
 18702  32B7                     _RGB_AWAIT_AFE_CONN:	
 18703                           
 18704                           ;RGB.c: 45:     if (toggleColor) {
 18705                           
 18706                           ;incstack = 0
 18707                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18708  32B7  087C               	movf	_toggleColor,w
 18709  32B8  1903               	btfsc	3,2
 18710  32B9  2AC9               	goto	l6745
 18711                           
 18712                           ;RGB.c: 46:         toggleColor = !toggleColor;
 18713  32BA  087C               	movf	_toggleColor,w
 18714  32BB  1D03               	btfss	3,2
 18715  32BC  2ABF               	goto	u9440
 18716  32BD  3001               	movlw	1
 18717  32BE  2AC0               	goto	u9450
 18718  32BF                     u9440:	
 18719  32BF  3000               	movlw	0
 18720  32C0                     u9450:	
 18721  32C0  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 18722  32C1  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 18723  32C2  00FC               	movwf	_toggleColor
 18724                           
 18725                           ;RGB.c: 47:         RGB_color(0);
 18726  32C3  3000               	movlw	0
 18727  32C4  00F1               	movwf	RGB_color@color
 18728  32C5  00F2               	movwf	RGB_color@color+1
 18729  32C6  31B2  2296         	fcall	_RGB_color
 18730                           
 18731                           ;RGB.c: 48:     } else {
 18732  32C8  0008               	return
 18733  32C9                     l6745:	
 18734                           
 18735                           ;RGB.c: 49:         toggleColor = !toggleColor;
 18736  32C9  087C               	movf	_toggleColor,w
 18737  32CA  1D03               	btfss	3,2
 18738  32CB  2ACE               	goto	u9460
 18739  32CC  3001               	movlw	1
 18740  32CD  2ACF               	goto	u9470
 18741  32CE                     u9460:	
 18742  32CE  3000               	movlw	0
 18743  32CF                     u9470:	
 18744  32CF  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 18745  32D0  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 18746  32D1  00FC               	movwf	_toggleColor
 18747                           
 18748                           ;RGB.c: 50:         RGB_color(1);
 18749  32D2  3001               	movlw	1
 18750  32D3  00F1               	movwf	RGB_color@color
 18751  32D4  3000               	movlw	0
 18752  32D5  00F2               	movwf	RGB_color@color+1
 18753  32D6  31B2  2296         	fcall	_RGB_color
 18754  32D8  0008               	return
 18755  32D9                     __end_of_RGB_AWAIT_AFE_CONN:	
 18756                           
 18757                           	psect	text67
 18758  3296                     __ptext67:	
 18759 ;; *************** function _RGB_color *****************
 18760 ;; Defined at:
 18761 ;;		line 17 in file "RGB.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;  color           2    1[COMMON] int 
 18764 ;; Auto vars:     Size  Location     Type
 18765 ;;		None
 18766 ;; Return value:  Size  Location     Type
 18767 ;;                  1    wreg      void 
 18768 ;; Registers used:
 18769 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18770 ;; Tracked objects:
 18771 ;;		On entry : 0/0
 18772 ;;		On exit  : 0/0
 18773 ;;		Unchanged: 0/0
 18774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18779 ;;Total ram usage:        2 bytes
 18780 ;; Hardware stack levels used:    1
 18781 ;; Hardware stack levels required when called:    1
 18782 ;; This function calls:
 18783 ;;		Nothing
 18784 ;; This function is called by:
 18785 ;;		_statemachine
 18786 ;;		_RGB_AWAIT_AFE_CONN
 18787 ;;		_watchdog_timeout_shutdown
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791                           
 18792                           ;psect for function _RGB_color
 18793  3296                     _RGB_color:	
 18794                           
 18795                           ;RGB.c: 19:     switch (color) {
 18796                           
 18797                           ;incstack = 0
 18798                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 18799  3296  2AA6               	goto	l6591
 18800  3297                     l333:	
 18801                           ;RGB.c: 20:         case 0:
 18802                           
 18803                           
 18804                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 18805  3297  0022               	movlb	2	; select bank2
 18806  3298  120C               	bcf	12,4	;volatile
 18807                           
 18808                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 18809  3299  168C               	bsf	12,5	;volatile
 18810                           
 18811                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 18812  329A  1410               	bsf	16,0	;volatile
 18813                           
 18814                           ;RGB.c: 24:             break;
 18815  329B  0008               	return
 18816  329C                     l335:	
 18817                           ;RGB.c: 25:         case 1:
 18818                           
 18819                           
 18820                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 18821  329C  0022               	movlb	2	; select bank2
 18822  329D  160C               	bsf	12,4	;volatile
 18823                           
 18824                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 18825  329E  128C               	bcf	12,5	;volatile
 18826                           
 18827                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 18828  329F  1410               	bsf	16,0	;volatile
 18829                           
 18830                           ;RGB.c: 29:             break;
 18831  32A0  0008               	return
 18832  32A1                     l336:	
 18833                           ;RGB.c: 30:         case 2:
 18834                           
 18835                           
 18836                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 18837  32A1  0022               	movlb	2	; select bank2
 18838  32A2  160C               	bsf	12,4	;volatile
 18839                           
 18840                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 18841  32A3  168C               	bsf	12,5	;volatile
 18842                           
 18843                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 18844  32A4  1010               	bcf	16,0	;volatile
 18845                           
 18846                           ;RGB.c: 34:             break;
 18847  32A5  0008               	return
 18848  32A6                     l6591:	
 18849                           
 18850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18851                           ; Switch size 1, requested type "simple"
 18852                           ; Number of cases is 1, Range of values is 0 to 0
 18853                           ; switch strategies available:
 18854                           ; Name         Instructions Cycles
 18855                           ; simple_byte            4     3 (average)
 18856                           ; direct_byte            8     6 (fixed)
 18857                           ; jumptable            260     6 (fixed)
 18858                           ;	Chosen strategy is simple_byte
 18859  32A6  0872               	movf	RGB_color@color+1,w
 18860  32A7  3A00               	xorlw	0	; case 0
 18861  32A8  1903               	skipnz
 18862  32A9  2AAB               	goto	l8891
 18863  32AA  2AB6               	goto	l337
 18864  32AB                     l8891:	
 18865                           
 18866                           ; Switch size 1, requested type "simple"
 18867                           ; Number of cases is 3, Range of values is 0 to 2
 18868                           ; switch strategies available:
 18869                           ; Name         Instructions Cycles
 18870                           ; simple_byte           10     6 (average)
 18871                           ; direct_byte           12     6 (fixed)
 18872                           ; jumptable            260     6 (fixed)
 18873                           ;	Chosen strategy is simple_byte
 18874  32AB  0871               	movf	RGB_color@color,w
 18875  32AC  3A00               	xorlw	0	; case 0
 18876  32AD  1903               	skipnz
 18877  32AE  2A97               	goto	l333
 18878  32AF  3A01               	xorlw	1	; case 1
 18879  32B0  1903               	skipnz
 18880  32B1  2A9C               	goto	l335
 18881  32B2  3A03               	xorlw	3	; case 2
 18882  32B3  1903               	skipnz
 18883  32B4  2AA1               	goto	l336
 18884  32B5  2AB6               	goto	l337
 18885  32B6                     l337:	
 18886  32B6  0008               	return
 18887  32B7                     __end_of_RGB_color:	
 18888                           
 18889                           	psect	text68
 18890  351D                     __ptext68:	
 18891 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 18892 ;; Defined at:
 18893 ;;		line 176 in file "BQ76920.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;		None
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;		None
 18898 ;; Return value:  Size  Location     Type
 18899 ;;                  4   67[BANK0 ] long 
 18900 ;; Registers used:
 18901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18902 ;; Tracked objects:
 18903 ;;		On entry : 0/0
 18904 ;;		On exit  : 0/0
 18905 ;;		Unchanged: 0/0
 18906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18907 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18910 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18911 ;;Total ram usage:        8 bytes
 18912 ;; Hardware stack levels used:    1
 18913 ;; Hardware stack levels required when called:    2
 18914 ;; This function calls:
 18915 ;;		___fldiv
 18916 ;;		___fltol
 18917 ;;		___xxtofl
 18918 ;; This function is called by:
 18919 ;;		_statemachine
 18920 ;; This function uses a non-reentrant model
 18921 ;;
 18922                           
 18923                           
 18924                           ;psect for function _AFE_getSetShortCircuitCurrent
 18925  351D                     _AFE_getSetShortCircuitCurrent:	
 18926                           
 18927                           ;BQ76920.c: 177:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 18928                           
 18929                           ;incstack = 0
 18930                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 18931  351D  0023               	movlb	3	; select bank3
 18932  351E  0856               	movf	BQ76920@protect1^(0+384),w
 18933  351F  3907               	andlw	7
 18934  3520  0020               	movlb	0	; select bank0
 18935  3521  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 18936  3522  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 18937  3523  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 18938  3524  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 18939  3525  30E8               	movlw	low (_SCD_threshold_setting| (0+32768))
 18940  3526  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 18941  3527  0084               	movwf	4
 18942  3528  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 18943  3529  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 18944  352A  0085               	movwf	5
 18945  352B  3F00               	moviw [0]fsr0
 18946  352C  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 18947  352D  3F01               	moviw [1]fsr0
 18948  352E  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 18949  352F  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 18950  3530  00F1               	movwf	___xxtofl@val
 18951  3531  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 18952  3532  00F2               	movwf	___xxtofl@val+1
 18953  3533  0D89               	rlf	9,f
 18954  3534  3B89               	subwfb	9,f
 18955  3535  0989               	comf	9,f
 18956  3536  00F3               	movwf	___xxtofl@val+2
 18957  3537  00F4               	movwf	___xxtofl@val+3
 18958  3538  3001               	movlw	1
 18959  3539  31AB  2332  31B5   	fcall	___xxtofl
 18960  353C  0874               	movf	?___xxtofl+3,w
 18961  353D  0020               	movlb	0	; select bank0
 18962  353E  00C7               	movwf	___fldiv@b+3
 18963  353F  0873               	movf	?___xxtofl+2,w
 18964  3540  00C6               	movwf	___fldiv@b+2
 18965  3541  0872               	movf	?___xxtofl+1,w
 18966  3542  00C5               	movwf	___fldiv@b+1
 18967  3543  0871               	movf	?___xxtofl,w
 18968  3544  00C4               	movwf	___fldiv@b
 18969  3545  0023               	movlb	3	; select bank3
 18970  3546  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 18971  3547  0020               	movlb	0	; select bank0
 18972  3548  00C3               	movwf	___fldiv@a+3
 18973  3549  0023               	movlb	3	; select bank3
 18974  354A  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 18975  354B  0020               	movlb	0	; select bank0
 18976  354C  00C2               	movwf	___fldiv@a+2
 18977  354D  0023               	movlb	3	; select bank3
 18978  354E  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 18979  354F  0020               	movlb	0	; select bank0
 18980  3550  00C1               	movwf	___fldiv@a+1
 18981  3551  0023               	movlb	3	; select bank3
 18982  3552  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 18983  3553  0020               	movlb	0	; select bank0
 18984  3554  00C0               	movwf	___fldiv@a
 18985  3555  3190  2052  31B5   	fcall	___fldiv
 18986  3558  0020               	movlb	0	; select bank0
 18987  3559  0843               	movf	?___fldiv+3,w
 18988  355A  00DD               	movwf	___fltol@f1+3
 18989  355B  0842               	movf	?___fldiv+2,w
 18990  355C  00DC               	movwf	___fltol@f1+2
 18991  355D  0841               	movf	?___fldiv+1,w
 18992  355E  00DB               	movwf	___fltol@f1+1
 18993  355F  0840               	movf	?___fldiv,w
 18994  3560  00DA               	movwf	___fltol@f1
 18995  3561  31B6  26B9         	fcall	___fltol
 18996  3563  0020               	movlb	0	; select bank0
 18997  3564  085D               	movf	?___fltol+3,w
 18998  3565  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 18999  3566  085C               	movf	?___fltol+2,w
 19000  3567  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 19001  3568  085B               	movf	?___fltol+1,w
 19002  3569  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 19003  356A  085A               	movf	?___fltol,w
 19004  356B  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 19005  356C  0008               	return
 19006  356D                     __end_of_AFE_getSetShortCircuitCurrent:	
 19007                           
 19008                           	psect	text69
 19009  30ED                     __ptext69:	
 19010 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 19011 ;; Defined at:
 19012 ;;		line 172 in file "BQ76920.c"
 19013 ;; Parameters:    Size  Location     Type
 19014 ;;		None
 19015 ;; Auto vars:     Size  Location     Type
 19016 ;;		None
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  4    1[COMMON] float 
 19019 ;; Registers used:
 19020 ;;		wreg
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19030 ;;Total ram usage:        4 bytes
 19031 ;; Hardware stack levels used:    1
 19032 ;; Hardware stack levels required when called:    1
 19033 ;; This function calls:
 19034 ;;		Nothing
 19035 ;; This function is called by:
 19036 ;;		_statemachine
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           
 19041                           ;psect for function _AFE_getSetCurrentSenseRes
 19042  30ED                     _AFE_getSetCurrentSenseRes:	
 19043                           
 19044                           ;BQ76920.c: 173:     return (float) shuntResistorValue_mOhm;
 19045                           
 19046                           ;incstack = 0
 19047                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 19048  30ED  0023               	movlb	3	; select bank3
 19049  30EE  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 19050  30EF  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 19051  30F0  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 19052  30F1  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 19053  30F2  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 19054  30F3  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 19055  30F4  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 19056  30F5  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 19057  30F6  0008               	return
 19058  30F7                     __end_of_AFE_getSetCurrentSenseRes:	
 19059                           
 19060                           	psect	text70
 19061  34CD                     __ptext70:	
 19062 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 19063 ;; Defined at:
 19064 ;;		line 180 in file "BQ76920.c"
 19065 ;; Parameters:    Size  Location     Type
 19066 ;;		None
 19067 ;; Auto vars:     Size  Location     Type
 19068 ;;		None
 19069 ;; Return value:  Size  Location     Type
 19070 ;;                  4   67[BANK0 ] long 
 19071 ;; Registers used:
 19072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19073 ;; Tracked objects:
 19074 ;;		On entry : 0/0
 19075 ;;		On exit  : 0/0
 19076 ;;		Unchanged: 0/0
 19077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19081 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19082 ;;Total ram usage:        8 bytes
 19083 ;; Hardware stack levels used:    1
 19084 ;; Hardware stack levels required when called:    2
 19085 ;; This function calls:
 19086 ;;		___fldiv
 19087 ;;		___fltol
 19088 ;;		___xxtofl
 19089 ;; This function is called by:
 19090 ;;		_statemachine
 19091 ;; This function uses a non-reentrant model
 19092 ;;
 19093                           
 19094                           
 19095                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 19096  34CD                     _AFE_getOverCurrentDischargeCurrent:	
 19097                           
 19098                           ;BQ76920.c: 181:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 19099                           
 19100                           ;incstack = 0
 19101                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 19102  34CD  0023               	movlb	3	; select bank3
 19103  34CE  0855               	movf	BQ76920@protect2^(0+384),w
 19104  34CF  390F               	andlw	15
 19105  34D0  0020               	movlb	0	; select bank0
 19106  34D1  00E7               	movwf	??_AFE_getOverCurrentDischargeCurrent
 19107  34D2  01E8               	clrf	??_AFE_getOverCurrentDischargeCurrent+1
 19108  34D3  35E7               	lslf	??_AFE_getOverCurrentDischargeCurrent,f
 19109  34D4  0DE8               	rlf	??_AFE_getOverCurrentDischargeCurrent+1,f
 19110  34D5  30C4               	movlw	low (_OCD_threshold_setting| (0+32768))
 19111  34D6  0767               	addwf	??_AFE_getOverCurrentDischargeCurrent,w
 19112  34D7  0084               	movwf	4
 19113  34D8  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 19114  34D9  3D68               	addwfc	??_AFE_getOverCurrentDischargeCurrent+1,w
 19115  34DA  0085               	movwf	5
 19116  34DB  3F00               	moviw [0]fsr0
 19117  34DC  00E9               	movwf	??_AFE_getOverCurrentDischargeCurrent+2
 19118  34DD  3F01               	moviw [1]fsr0
 19119  34DE  00EA               	movwf	??_AFE_getOverCurrentDischargeCurrent+3
 19120  34DF  0869               	movf	??_AFE_getOverCurrentDischargeCurrent+2,w
 19121  34E0  00F1               	movwf	___xxtofl@val
 19122  34E1  086A               	movf	??_AFE_getOverCurrentDischargeCurrent+3,w
 19123  34E2  00F2               	movwf	___xxtofl@val+1
 19124  34E3  0D89               	rlf	9,f
 19125  34E4  3B89               	subwfb	9,f
 19126  34E5  0989               	comf	9,f
 19127  34E6  00F3               	movwf	___xxtofl@val+2
 19128  34E7  00F4               	movwf	___xxtofl@val+3
 19129  34E8  3001               	movlw	1
 19130  34E9  31AB  2332  31B4   	fcall	___xxtofl
 19131  34EC  0874               	movf	?___xxtofl+3,w
 19132  34ED  0020               	movlb	0	; select bank0
 19133  34EE  00C7               	movwf	___fldiv@b+3
 19134  34EF  0873               	movf	?___xxtofl+2,w
 19135  34F0  00C6               	movwf	___fldiv@b+2
 19136  34F1  0872               	movf	?___xxtofl+1,w
 19137  34F2  00C5               	movwf	___fldiv@b+1
 19138  34F3  0871               	movf	?___xxtofl,w
 19139  34F4  00C4               	movwf	___fldiv@b
 19140  34F5  0023               	movlb	3	; select bank3
 19141  34F6  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 19142  34F7  0020               	movlb	0	; select bank0
 19143  34F8  00C3               	movwf	___fldiv@a+3
 19144  34F9  0023               	movlb	3	; select bank3
 19145  34FA  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 19146  34FB  0020               	movlb	0	; select bank0
 19147  34FC  00C2               	movwf	___fldiv@a+2
 19148  34FD  0023               	movlb	3	; select bank3
 19149  34FE  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 19150  34FF  0020               	movlb	0	; select bank0
 19151  3500  00C1               	movwf	___fldiv@a+1
 19152  3501  0023               	movlb	3	; select bank3
 19153  3502  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 19154  3503  0020               	movlb	0	; select bank0
 19155  3504  00C0               	movwf	___fldiv@a
 19156  3505  3190  2052  31B4   	fcall	___fldiv
 19157  3508  0020               	movlb	0	; select bank0
 19158  3509  0843               	movf	?___fldiv+3,w
 19159  350A  00DD               	movwf	___fltol@f1+3
 19160  350B  0842               	movf	?___fldiv+2,w
 19161  350C  00DC               	movwf	___fltol@f1+2
 19162  350D  0841               	movf	?___fldiv+1,w
 19163  350E  00DB               	movwf	___fltol@f1+1
 19164  350F  0840               	movf	?___fldiv,w
 19165  3510  00DA               	movwf	___fltol@f1
 19166  3511  31B6  26B9         	fcall	___fltol
 19167  3513  0020               	movlb	0	; select bank0
 19168  3514  085D               	movf	?___fltol+3,w
 19169  3515  00E6               	movwf	?_AFE_getOverCurrentDischargeCurrent+3
 19170  3516  085C               	movf	?___fltol+2,w
 19171  3517  00E5               	movwf	?_AFE_getOverCurrentDischargeCurrent+2
 19172  3518  085B               	movf	?___fltol+1,w
 19173  3519  00E4               	movwf	?_AFE_getOverCurrentDischargeCurrent+1
 19174  351A  085A               	movf	?___fltol,w
 19175  351B  00E3               	movwf	?_AFE_getOverCurrentDischargeCurrent
 19176  351C  0008               	return
 19177  351D                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 19178                           
 19179                           	psect	text71
 19180  2B32                     __ptext71:	
 19181 ;; *************** function ___xxtofl *****************
 19182 ;; Defined at:
 19183 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;  sign            1    wreg     unsigned char 
 19186 ;;  val             4    1[COMMON] long 
 19187 ;; Auto vars:     Size  Location     Type
 19188 ;;  sign            1    0[BANK0 ] unsigned char 
 19189 ;;  arg             4    2[BANK0 ] unsigned long 
 19190 ;;  exp             1    1[BANK0 ] unsigned char 
 19191 ;; Return value:  Size  Location     Type
 19192 ;;                  4    1[COMMON] unsigned char 
 19193 ;; Registers used:
 19194 ;;		wreg, status,2, status,0
 19195 ;; Tracked objects:
 19196 ;;		On entry : 0/0
 19197 ;;		On exit  : 0/0
 19198 ;;		Unchanged: 0/0
 19199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19203 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19204 ;;Total ram usage:       14 bytes
 19205 ;; Hardware stack levels used:    1
 19206 ;; Hardware stack levels required when called:    1
 19207 ;; This function calls:
 19208 ;;		Nothing
 19209 ;; This function is called by:
 19210 ;;		_setShortCircuitProtection
 19211 ;;		_setOverCurrentDischargeProtection
 19212 ;;		_AFE_getSetShortCircuitCurrent
 19213 ;;		_AFE_getOverCurrentDischargeCurrent
 19214 ;; This function uses a non-reentrant model
 19215 ;;
 19216                           
 19217                           
 19218                           ;psect for function ___xxtofl
 19219  2B32                     ___xxtofl:	
 19220                           
 19221                           ;incstack = 0
 19222                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 19223                           ;___xxtofl@sign stored from wreg
 19224  2B32  0020               	movlb	0	; select bank0
 19225  2B33  00A0               	movwf	___xxtofl@sign
 19226  2B34  0820               	movf	___xxtofl@sign,w
 19227  2B35  1D03               	btfss	3,2
 19228  2B36  1FF4               	btfss	___xxtofl@val+3,7
 19229  2B37  2B48               	goto	l6509
 19230  2B38  0971               	comf	___xxtofl@val,w
 19231  2B39  00A2               	movwf	___xxtofl@arg
 19232  2B3A  0972               	comf	___xxtofl@val+1,w
 19233  2B3B  00A3               	movwf	___xxtofl@arg+1
 19234  2B3C  0973               	comf	___xxtofl@val+2,w
 19235  2B3D  00A4               	movwf	___xxtofl@arg+2
 19236  2B3E  0974               	comf	___xxtofl@val+3,w
 19237  2B3F  00A5               	movwf	___xxtofl@arg+3
 19238  2B40  0AA2               	incf	___xxtofl@arg,f
 19239  2B41  1903               	skipnz
 19240  2B42  0AA3               	incf	___xxtofl@arg+1,f
 19241  2B43  1903               	skipnz
 19242  2B44  0AA4               	incf	___xxtofl@arg+2,f
 19243  2B45  1903               	skipnz
 19244  2B46  0AA5               	incf	___xxtofl@arg+3,f
 19245  2B47  2B50               	goto	l1344
 19246  2B48                     l6509:	
 19247  2B48  0874               	movf	___xxtofl@val+3,w
 19248  2B49  00A5               	movwf	___xxtofl@arg+3
 19249  2B4A  0873               	movf	___xxtofl@val+2,w
 19250  2B4B  00A4               	movwf	___xxtofl@arg+2
 19251  2B4C  0872               	movf	___xxtofl@val+1,w
 19252  2B4D  00A3               	movwf	___xxtofl@arg+1
 19253  2B4E  0871               	movf	___xxtofl@val,w
 19254  2B4F  00A2               	movwf	___xxtofl@arg
 19255  2B50                     l1344:	
 19256  2B50  0874               	movf	___xxtofl@val+3,w
 19257  2B51  0473               	iorwf	___xxtofl@val+2,w
 19258  2B52  0472               	iorwf	___xxtofl@val+1,w
 19259  2B53  0471               	iorwf	___xxtofl@val,w
 19260  2B54  1D03               	skipz
 19261  2B55  2B5F               	goto	l6515
 19262  2B56  3000               	movlw	0
 19263  2B57  00F4               	movwf	?___xxtofl+3
 19264  2B58  3000               	movlw	0
 19265  2B59  00F3               	movwf	?___xxtofl+2
 19266  2B5A  3000               	movlw	0
 19267  2B5B  00F2               	movwf	?___xxtofl+1
 19268  2B5C  3000               	movlw	0
 19269  2B5D  00F1               	movwf	?___xxtofl
 19270  2B5E  0008               	return
 19271  2B5F                     l6515:	
 19272  2B5F  3096               	movlw	150
 19273  2B60  00F5               	movwf	??___xxtofl
 19274  2B61  0875               	movf	??___xxtofl,w
 19275  2B62  00A1               	movwf	___xxtofl@exp
 19276  2B63                     l6519:	
 19277  2B63  30FE               	movlw	254
 19278  2B64  0525               	andwf	___xxtofl@arg+3,w
 19279  2B65  1903               	btfsc	3,2
 19280  2B66  2B86               	goto	l1350
 19281  2B67  3001               	movlw	1
 19282  2B68  00F5               	movwf	??___xxtofl
 19283  2B69  0875               	movf	??___xxtofl,w
 19284  2B6A  07A1               	addwf	___xxtofl@exp,f
 19285  2B6B  3001               	movlw	1
 19286  2B6C                     u9125:	
 19287  2B6C  36A5               	lsrf	___xxtofl@arg+3,f
 19288  2B6D  0CA4               	rrf	___xxtofl@arg+2,f
 19289  2B6E  0CA3               	rrf	___xxtofl@arg+1,f
 19290  2B6F  0CA2               	rrf	___xxtofl@arg,f
 19291  2B70  0B89               	decfsz	9,f
 19292  2B71  2B6C               	goto	u9125
 19293  2B72  2B63               	goto	l6519
 19294  2B73                     l6521:	
 19295  2B73  3001               	movlw	1
 19296  2B74  00F5               	movwf	??___xxtofl
 19297  2B75  0875               	movf	??___xxtofl,w
 19298  2B76  07A1               	addwf	___xxtofl@exp,f
 19299  2B77  3001               	movlw	1
 19300  2B78  07A2               	addwf	___xxtofl@arg,f
 19301  2B79  3000               	movlw	0
 19302  2B7A  3DA3               	addwfc	___xxtofl@arg+1,f
 19303  2B7B  3000               	movlw	0
 19304  2B7C  3DA4               	addwfc	___xxtofl@arg+2,f
 19305  2B7D  3000               	movlw	0
 19306  2B7E  3DA5               	addwfc	___xxtofl@arg+3,f
 19307  2B7F  3001               	movlw	1
 19308  2B80                     u9145:	
 19309  2B80  36A5               	lsrf	___xxtofl@arg+3,f
 19310  2B81  0CA4               	rrf	___xxtofl@arg+2,f
 19311  2B82  0CA3               	rrf	___xxtofl@arg+1,f
 19312  2B83  0CA2               	rrf	___xxtofl@arg,f
 19313  2B84  0B89               	decfsz	9,f
 19314  2B85  2B80               	goto	u9145
 19315  2B86                     l1350:	
 19316  2B86  30FF               	movlw	255
 19317  2B87  0525               	andwf	___xxtofl@arg+3,w
 19318  2B88  1903               	btfsc	3,2
 19319  2B89  2B98               	goto	l6529
 19320  2B8A  2B73               	goto	l6521
 19321  2B8B                     l6531:	
 19322  2B8B  3002               	movlw	2
 19323  2B8C  0221               	subwf	___xxtofl@exp,w
 19324  2B8D  1C03               	btfss	3,0
 19325  2B8E  2B9A               	goto	l1357
 19326  2B8F  3001               	movlw	1
 19327  2B90  02A1               	subwf	___xxtofl@exp,f
 19328  2B91  3001               	movlw	1
 19329  2B92                     u9165:	
 19330  2B92  35A2               	lslf	___xxtofl@arg,f
 19331  2B93  0DA3               	rlf	___xxtofl@arg+1,f
 19332  2B94  0DA4               	rlf	___xxtofl@arg+2,f
 19333  2B95  0DA5               	rlf	___xxtofl@arg+3,f
 19334  2B96  0B89               	decfsz	9,f
 19335  2B97  2B92               	goto	u9165
 19336  2B98                     l6529:	
 19337  2B98  1FA4               	btfss	___xxtofl@arg+2,7
 19338  2B99  2B8B               	goto	l6531
 19339  2B9A                     l1357:	
 19340  2B9A  1821               	btfsc	___xxtofl@exp,0
 19341  2B9B  2BA4               	goto	l1358
 19342  2B9C  30FF               	movlw	255
 19343  2B9D  05A2               	andwf	___xxtofl@arg,f
 19344  2B9E  30FF               	movlw	255
 19345  2B9F  05A3               	andwf	___xxtofl@arg+1,f
 19346  2BA0  307F               	movlw	127
 19347  2BA1  05A4               	andwf	___xxtofl@arg+2,f
 19348  2BA2  30FF               	movlw	255
 19349  2BA3  05A5               	andwf	___xxtofl@arg+3,f
 19350  2BA4                     l1358:	
 19351  2BA4  1003               	clrc
 19352  2BA5  0CA1               	rrf	___xxtofl@exp,f
 19353  2BA6  0821               	movf	___xxtofl@exp,w
 19354  2BA7  00F5               	movwf	??___xxtofl
 19355  2BA8  01F6               	clrf	??___xxtofl+1
 19356  2BA9  01F7               	clrf	??___xxtofl+2
 19357  2BAA  01F8               	clrf	??___xxtofl+3
 19358  2BAB  3018               	movlw	24
 19359  2BAC                     u9205:	
 19360  2BAC  35F5               	lslf	??___xxtofl,f
 19361  2BAD  0DF6               	rlf	??___xxtofl+1,f
 19362  2BAE  0DF7               	rlf	??___xxtofl+2,f
 19363  2BAF  0DF8               	rlf	??___xxtofl+3,f
 19364  2BB0  0B89               	decfsz	9,f
 19365  2BB1  2BAC               	goto	u9205
 19366  2BB2  0875               	movf	??___xxtofl,w
 19367  2BB3  04A2               	iorwf	___xxtofl@arg,f
 19368  2BB4  0876               	movf	??___xxtofl+1,w
 19369  2BB5  04A3               	iorwf	___xxtofl@arg+1,f
 19370  2BB6  0877               	movf	??___xxtofl+2,w
 19371  2BB7  04A4               	iorwf	___xxtofl@arg+2,f
 19372  2BB8  0878               	movf	??___xxtofl+3,w
 19373  2BB9  04A5               	iorwf	___xxtofl@arg+3,f
 19374  2BBA  0820               	movf	___xxtofl@sign,w
 19375  2BBB  1D03               	btfss	3,2
 19376  2BBC  1FF4               	btfss	___xxtofl@val+3,7
 19377  2BBD  2BBF               	goto	l6543
 19378  2BBE  17A5               	bsf	___xxtofl@arg+3,7
 19379  2BBF                     l6543:	
 19380  2BBF  0825               	movf	___xxtofl@arg+3,w
 19381  2BC0  00F4               	movwf	?___xxtofl+3
 19382  2BC1  0824               	movf	___xxtofl@arg+2,w
 19383  2BC2  00F3               	movwf	?___xxtofl+2
 19384  2BC3  0823               	movf	___xxtofl@arg+1,w
 19385  2BC4  00F2               	movwf	?___xxtofl+1
 19386  2BC5  0822               	movf	___xxtofl@arg,w
 19387  2BC6  00F1               	movwf	?___xxtofl
 19388  2BC7  0008               	return
 19389  2BC8                     __end_of___xxtofl:	
 19390                           
 19391                           	psect	text72
 19392  36B9                     __ptext72:	
 19393 ;; *************** function ___fltol *****************
 19394 ;; Defined at:
 19395 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;  f1              4   58[BANK0 ] unsigned char 
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  exp1            1   11[COMMON] unsigned char 
 19400 ;;  sign1           1   10[COMMON] unsigned char 
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  4   58[BANK0 ] long 
 19403 ;; Registers used:
 19404 ;;		wreg, status,2, status,0
 19405 ;; Tracked objects:
 19406 ;;		On entry : 0/0
 19407 ;;		On exit  : 0/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19412 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19413 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19414 ;;Total ram usage:       11 bytes
 19415 ;; Hardware stack levels used:    1
 19416 ;; Hardware stack levels required when called:    1
 19417 ;; This function calls:
 19418 ;;		Nothing
 19419 ;; This function is called by:
 19420 ;;		_AFE_getSetShortCircuitCurrent
 19421 ;;		_AFE_getOverCurrentDischargeCurrent
 19422 ;;		_efgtoa
 19423 ;; This function uses a non-reentrant model
 19424 ;;
 19425                           
 19426                           
 19427                           ;psect for function ___fltol
 19428  36B9                     ___fltol:	
 19429                           
 19430                           ;incstack = 0
 19431                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19432  36B9  1003               	clrc
 19433  36BA  0020               	movlb	0	; select bank0
 19434  36BB  0D5C               	rlf	___fltol@f1+2,w
 19435  36BC  0D5D               	rlf	___fltol@f1+3,w
 19436  36BD  00DE               	movwf	??___fltol
 19437  36BE  085E               	movf	??___fltol,w
 19438  36BF  00FB               	movwf	___fltol@exp1
 19439  36C0  087B               	movf	___fltol@exp1,w
 19440  36C1  1D03               	btfss	3,2
 19441  36C2  2ECC               	goto	l4931
 19442  36C3                     l4927:	
 19443  36C3  3000               	movlw	0
 19444  36C4  00DD               	movwf	?___fltol+3
 19445  36C5  3000               	movlw	0
 19446  36C6  00DC               	movwf	?___fltol+2
 19447  36C7  3000               	movlw	0
 19448  36C8  00DB               	movwf	?___fltol+1
 19449  36C9  3000               	movlw	0
 19450  36CA  00DA               	movwf	?___fltol
 19451  36CB  0008               	return
 19452  36CC                     l4931:	
 19453  36CC  085A               	movf	___fltol@f1,w
 19454  36CD  00DE               	movwf	??___fltol
 19455  36CE  085B               	movf	___fltol@f1+1,w
 19456  36CF  00DF               	movwf	??___fltol+1
 19457  36D0  085C               	movf	___fltol@f1+2,w
 19458  36D1  00E0               	movwf	??___fltol+2
 19459  36D2  085D               	movf	___fltol@f1+3,w
 19460  36D3  00E1               	movwf	??___fltol+3
 19461  36D4  301F               	movlw	31
 19462  36D5                     u6295:	
 19463  36D5  36E1               	lsrf	??___fltol+3,f
 19464  36D6  0CE0               	rrf	??___fltol+2,f
 19465  36D7  0CDF               	rrf	??___fltol+1,f
 19466  36D8  0CDE               	rrf	??___fltol,f
 19467  36D9  0B89               	decfsz	9,f
 19468  36DA  2ED5               	goto	u6295
 19469  36DB  085E               	movf	??___fltol,w
 19470  36DC  00E2               	movwf	??___fltol+4
 19471  36DD  0862               	movf	??___fltol+4,w
 19472  36DE  00FA               	movwf	___fltol@sign1
 19473  36DF  17DC               	bsf	___fltol@f1+2,7
 19474  36E0  30FF               	movlw	255
 19475  36E1  05DA               	andwf	___fltol@f1,f
 19476  36E2  30FF               	movlw	255
 19477  36E3  05DB               	andwf	___fltol@f1+1,f
 19478  36E4  30FF               	movlw	255
 19479  36E5  05DC               	andwf	___fltol@f1+2,f
 19480  36E6  3000               	movlw	0
 19481  36E7  05DD               	andwf	___fltol@f1+3,f
 19482  36E8  3096               	movlw	150
 19483  36E9  02FB               	subwf	___fltol@exp1,f
 19484  36EA  1FFB               	btfss	___fltol@exp1,7
 19485  36EB  2EFF               	goto	l4949
 19486  36EC  087B               	movf	___fltol@exp1,w
 19487  36ED  3A80               	xorlw	128
 19488  36EE  3E97               	addlw	151
 19489  36EF  1C03               	btfss	3,0
 19490  36F0  2EC3               	goto	l4927
 19491  36F1                     l4947:	
 19492  36F1  3001               	movlw	1
 19493  36F2                     u6325:	
 19494  36F2  36DD               	lsrf	___fltol@f1+3,f
 19495  36F3  0CDC               	rrf	___fltol@f1+2,f
 19496  36F4  0CDB               	rrf	___fltol@f1+1,f
 19497  36F5  0CDA               	rrf	___fltol@f1,f
 19498  36F6  0B89               	decfsz	9,f
 19499  36F7  2EF2               	goto	u6325
 19500  36F8  3001               	movlw	1
 19501  36F9  00DE               	movwf	??___fltol
 19502  36FA  085E               	movf	??___fltol,w
 19503  36FB  07FB               	addwf	___fltol@exp1,f
 19504  36FC  1903               	btfsc	3,2
 19505  36FD  2F10               	goto	l4957
 19506  36FE  2EF1               	goto	l4947
 19507  36FF                     l4949:	
 19508  36FF  3020               	movlw	32
 19509  3700  027B               	subwf	___fltol@exp1,w
 19510  3701  1803               	btfsc	3,0
 19511  3702  2EC3               	goto	l4927
 19512  3703                     l1110:	
 19513  3703  087B               	movf	___fltol@exp1,w
 19514  3704  1903               	btfsc	3,2
 19515  3705  2F10               	goto	l4957
 19516  3706  3001               	movlw	1
 19517  3707                     u6355:	
 19518  3707  35DA               	lslf	___fltol@f1,f
 19519  3708  0DDB               	rlf	___fltol@f1+1,f
 19520  3709  0DDC               	rlf	___fltol@f1+2,f
 19521  370A  0DDD               	rlf	___fltol@f1+3,f
 19522  370B  0B89               	decfsz	9,f
 19523  370C  2F07               	goto	u6355
 19524  370D  3001               	movlw	1
 19525  370E  02FB               	subwf	___fltol@exp1,f
 19526  370F  2F03               	goto	l1110
 19527  3710                     l4957:	
 19528  3710  087A               	movf	___fltol@sign1,w
 19529  3711  1903               	btfsc	3,2
 19530  3712  0008               	return
 19531  3713  09DA               	comf	___fltol@f1,f
 19532  3714  09DB               	comf	___fltol@f1+1,f
 19533  3715  09DC               	comf	___fltol@f1+2,f
 19534  3716  09DD               	comf	___fltol@f1+3,f
 19535  3717  0ADA               	incf	___fltol@f1,f
 19536  3718  1903               	skipnz
 19537  3719  0ADB               	incf	___fltol@f1+1,f
 19538  371A  1903               	skipnz
 19539  371B  0ADC               	incf	___fltol@f1+2,f
 19540  371C  1903               	skipnz
 19541  371D  0ADD               	incf	___fltol@f1+3,f
 19542  371E  0008               	return
 19543  371F                     __end_of___fltol:	
 19544                           
 19545                           	psect	text73
 19546  1052                     __ptext73:	
 19547 ;; *************** function ___fldiv *****************
 19548 ;; Defined at:
 19549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  a               4   32[BANK0 ] long 
 19552 ;;  b               4   36[BANK0 ] long 
 19553 ;; Auto vars:     Size  Location     Type
 19554 ;;  grs             4   52[BANK0 ] unsigned long 
 19555 ;;  rem             4   45[BANK0 ] unsigned long 
 19556 ;;  new_exp         2   50[BANK0 ] int 
 19557 ;;  aexp            1   57[BANK0 ] unsigned char 
 19558 ;;  bexp            1   56[BANK0 ] unsigned char 
 19559 ;;  sign            1   49[BANK0 ] unsigned char 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  4   32[BANK0 ] unsigned char 
 19562 ;; Registers used:
 19563 ;;		wreg, status,2, status,0
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19570 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19571 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19573 ;;Total ram usage:       26 bytes
 19574 ;; Hardware stack levels used:    1
 19575 ;; Hardware stack levels required when called:    1
 19576 ;; This function calls:
 19577 ;;		Nothing
 19578 ;; This function is called by:
 19579 ;;		_setShortCircuitProtection
 19580 ;;		_setOverCurrentDischargeProtection
 19581 ;;		_AFE_getSetShortCircuitCurrent
 19582 ;;		_AFE_getOverCurrentDischargeCurrent
 19583 ;;		_efgtoa
 19584 ;; This function uses a non-reentrant model
 19585 ;;
 19586                           
 19587                           
 19588                           ;psect for function ___fldiv
 19589  1052                     ___fldiv:	
 19590                           
 19591                           ;incstack = 0
 19592                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19593  1052  0020               	movlb	0	; select bank0
 19594  1053  0847               	movf	___fldiv@b+3,w
 19595  1054  3980               	andlw	128
 19596  1055  00C8               	movwf	??___fldiv
 19597  1056  0848               	movf	??___fldiv,w
 19598  1057  00D1               	movwf	___fldiv@sign
 19599  1058  3547               	lslf	___fldiv@b+3,w
 19600  1059  00C8               	movwf	??___fldiv
 19601  105A  0848               	movf	??___fldiv,w
 19602  105B  00D8               	movwf	___fldiv@bexp
 19603  105C  1BC6               	btfsc	___fldiv@b+2,7
 19604  105D  1458               	bsf	___fldiv@bexp,0
 19605  105E  0858               	movf	___fldiv@bexp,w
 19606  105F  1903               	btfsc	3,2
 19607  1060  286F               	goto	l5023
 19608  1061  0A58               	incf	___fldiv@bexp,w
 19609  1062  1D03               	btfss	3,2
 19610  1063  286C               	goto	l5019
 19611  1064  3000               	movlw	0
 19612  1065  00C7               	movwf	___fldiv@b+3
 19613  1066  3000               	movlw	0
 19614  1067  00C6               	movwf	___fldiv@b+2
 19615  1068  3000               	movlw	0
 19616  1069  00C5               	movwf	___fldiv@b+1
 19617  106A  3000               	movlw	0
 19618  106B  00C4               	movwf	___fldiv@b
 19619  106C                     l5019:	
 19620  106C  17C6               	bsf	___fldiv@b+2,7
 19621  106D  01C7               	clrf	___fldiv@b+3
 19622  106E  2877               	goto	l5025
 19623  106F                     l5023:	
 19624  106F  3000               	movlw	0
 19625  1070  00C7               	movwf	___fldiv@b+3
 19626  1071  3000               	movlw	0
 19627  1072  00C6               	movwf	___fldiv@b+2
 19628  1073  3000               	movlw	0
 19629  1074  00C5               	movwf	___fldiv@b+1
 19630  1075  3000               	movlw	0
 19631  1076  00C4               	movwf	___fldiv@b
 19632  1077                     l5025:	
 19633  1077  0843               	movf	___fldiv@a+3,w
 19634  1078  3980               	andlw	128
 19635  1079  00C8               	movwf	??___fldiv
 19636  107A  0848               	movf	??___fldiv,w
 19637  107B  06D1               	xorwf	___fldiv@sign,f
 19638  107C  3543               	lslf	___fldiv@a+3,w
 19639  107D  00C8               	movwf	??___fldiv
 19640  107E  0848               	movf	??___fldiv,w
 19641  107F  00D9               	movwf	___fldiv@aexp
 19642  1080  1BC2               	btfsc	___fldiv@a+2,7
 19643  1081  1459               	bsf	___fldiv@aexp,0
 19644  1082  0859               	movf	___fldiv@aexp,w
 19645  1083  1903               	btfsc	3,2
 19646  1084  2893               	goto	l5043
 19647  1085  0A59               	incf	___fldiv@aexp,w
 19648  1086  1D03               	btfss	3,2
 19649  1087  2890               	goto	l5039
 19650  1088  3000               	movlw	0
 19651  1089  00C3               	movwf	___fldiv@a+3
 19652  108A  3000               	movlw	0
 19653  108B  00C2               	movwf	___fldiv@a+2
 19654  108C  3000               	movlw	0
 19655  108D  00C1               	movwf	___fldiv@a+1
 19656  108E  3000               	movlw	0
 19657  108F  00C0               	movwf	___fldiv@a
 19658  1090                     l5039:	
 19659  1090  17C2               	bsf	___fldiv@a+2,7
 19660  1091  01C3               	clrf	___fldiv@a+3
 19661  1092  289B               	goto	l1266
 19662  1093                     l5043:	
 19663  1093  3000               	movlw	0
 19664  1094  00C3               	movwf	___fldiv@a+3
 19665  1095  3000               	movlw	0
 19666  1096  00C2               	movwf	___fldiv@a+2
 19667  1097  3000               	movlw	0
 19668  1098  00C1               	movwf	___fldiv@a+1
 19669  1099  3000               	movlw	0
 19670  109A  00C0               	movwf	___fldiv@a
 19671  109B                     l1266:	
 19672  109B  0843               	movf	___fldiv@a+3,w
 19673  109C  0442               	iorwf	___fldiv@a+2,w
 19674  109D  0441               	iorwf	___fldiv@a+1,w
 19675  109E  0440               	iorwf	___fldiv@a,w
 19676  109F  1D03               	skipz
 19677  10A0  28BA               	goto	l5053
 19678  10A1  3000               	movlw	0
 19679  10A2  00C7               	movwf	___fldiv@b+3
 19680  10A3  3000               	movlw	0
 19681  10A4  00C6               	movwf	___fldiv@b+2
 19682  10A5  3000               	movlw	0
 19683  10A6  00C5               	movwf	___fldiv@b+1
 19684  10A7  3000               	movlw	0
 19685  10A8  00C4               	movwf	___fldiv@b
 19686  10A9  3080               	movlw	128
 19687  10AA  04C6               	iorwf	___fldiv@b+2,f
 19688  10AB  307F               	movlw	127
 19689  10AC  04C7               	iorwf	___fldiv@b+3,f
 19690  10AD                     L14:	
 19691  10AD  0851               	movf	___fldiv@sign,w
 19692  10AE  00C8               	movwf	??___fldiv
 19693  10AF  0848               	movf	??___fldiv,w
 19694  10B0  04C7               	iorwf	___fldiv@b+3,f
 19695  10B1  0847               	movf	___fldiv@b+3,w
 19696  10B2  00C3               	movwf	?___fldiv+3
 19697  10B3  0846               	movf	___fldiv@b+2,w
 19698  10B4  00C2               	movwf	?___fldiv+2
 19699  10B5  0845               	movf	___fldiv@b+1,w
 19700  10B6  00C1               	movwf	?___fldiv+1
 19701  10B7  0844               	movf	___fldiv@b,w
 19702  10B8  00C0               	movwf	?___fldiv
 19703  10B9  0008               	return
 19704  10BA                     l5053:	
 19705  10BA  0858               	movf	___fldiv@bexp,w
 19706  10BB  1D03               	btfss	3,2
 19707  10BC  28C6               	goto	l5059
 19708  10BD  3000               	movlw	0
 19709  10BE  00C3               	movwf	?___fldiv+3
 19710  10BF  3000               	movlw	0
 19711  10C0  00C2               	movwf	?___fldiv+2
 19712  10C1  3000               	movlw	0
 19713  10C2  00C1               	movwf	?___fldiv+1
 19714  10C3  3000               	movlw	0
 19715  10C4  00C0               	movwf	?___fldiv
 19716  10C5  0008               	return
 19717  10C6                     l5059:	
 19718  10C6  0858               	movf	___fldiv@bexp,w
 19719  10C7  00C8               	movwf	??___fldiv
 19720  10C8  01C9               	clrf	??___fldiv+1
 19721  10C9  0849               	movf	??___fldiv+1,w
 19722  10CA  00CB               	movwf	??___fldiv+3
 19723  10CB  0859               	movf	___fldiv@aexp,w
 19724  10CC  0248               	subwf	??___fldiv,w
 19725  10CD  00CA               	movwf	??___fldiv+2
 19726  10CE  1C03               	skipc
 19727  10CF  03CB               	decf	??___fldiv+3,f
 19728  10D0  084A               	movf	??___fldiv+2,w
 19729  10D1  3E7F               	addlw	127
 19730  10D2  00D2               	movwf	___fldiv@new_exp
 19731  10D3  3000               	movlw	0
 19732  10D4  3D4B               	addwfc	??___fldiv+3,w
 19733  10D5  00D3               	movwf	___fldiv@new_exp+1
 19734  10D6  0847               	movf	___fldiv@b+3,w
 19735  10D7  00D0               	movwf	___fldiv@rem+3
 19736  10D8  0846               	movf	___fldiv@b+2,w
 19737  10D9  00CF               	movwf	___fldiv@rem+2
 19738  10DA  0845               	movf	___fldiv@b+1,w
 19739  10DB  00CE               	movwf	___fldiv@rem+1
 19740  10DC  0844               	movf	___fldiv@b,w
 19741  10DD  00CD               	movwf	___fldiv@rem
 19742  10DE  3000               	movlw	0
 19743  10DF  00C7               	movwf	___fldiv@b+3
 19744  10E0  3000               	movlw	0
 19745  10E1  00C6               	movwf	___fldiv@b+2
 19746  10E2  3000               	movlw	0
 19747  10E3  00C5               	movwf	___fldiv@b+1
 19748  10E4  3000               	movlw	0
 19749  10E5  00C4               	movwf	___fldiv@b
 19750  10E6  3000               	movlw	0
 19751  10E7  00D7               	movwf	___fldiv@grs+3
 19752  10E8  3000               	movlw	0
 19753  10E9  00D6               	movwf	___fldiv@grs+2
 19754  10EA  3000               	movlw	0
 19755  10EB  00D5               	movwf	___fldiv@grs+1
 19756  10EC  3000               	movlw	0
 19757  10ED  00D4               	movwf	___fldiv@grs
 19758  10EE  01D9               	clrf	___fldiv@aexp
 19759  10EF                     l5087:	
 19760  10EF  301A               	movlw	26
 19761  10F0  0259               	subwf	___fldiv@aexp,w
 19762  10F1  1803               	btfsc	3,0
 19763  10F2  292B               	goto	l5089
 19764  10F3  0859               	movf	___fldiv@aexp,w
 19765  10F4  1903               	btfsc	3,2
 19766  10F5  290D               	goto	l5079
 19767  10F6  3001               	movlw	1
 19768  10F7                     u6565:	
 19769  10F7  35CD               	lslf	___fldiv@rem,f
 19770  10F8  0DCE               	rlf	___fldiv@rem+1,f
 19771  10F9  0DCF               	rlf	___fldiv@rem+2,f
 19772  10FA  0DD0               	rlf	___fldiv@rem+3,f
 19773  10FB  0B89               	decfsz	9,f
 19774  10FC  28F7               	goto	u6565
 19775  10FD  3001               	movlw	1
 19776  10FE                     u6575:	
 19777  10FE  35C4               	lslf	___fldiv@b,f
 19778  10FF  0DC5               	rlf	___fldiv@b+1,f
 19779  1100  0DC6               	rlf	___fldiv@b+2,f
 19780  1101  0DC7               	rlf	___fldiv@b+3,f
 19781  1102  0B89               	decfsz	9,f
 19782  1103  28FE               	goto	u6575
 19783  1104  1BD7               	btfsc	___fldiv@grs+3,7
 19784  1105  1444               	bsf	___fldiv@b,0
 19785  1106  3001               	movlw	1
 19786  1107                     u6595:	
 19787  1107  35D4               	lslf	___fldiv@grs,f
 19788  1108  0DD5               	rlf	___fldiv@grs+1,f
 19789  1109  0DD6               	rlf	___fldiv@grs+2,f
 19790  110A  0DD7               	rlf	___fldiv@grs+3,f
 19791  110B  0B89               	decfsz	9,f
 19792  110C  2907               	goto	u6595
 19793  110D                     l5079:	
 19794  110D  0843               	movf	___fldiv@a+3,w
 19795  110E  0250               	subwf	___fldiv@rem+3,w
 19796  110F  1D03               	skipz
 19797  1110  291B               	goto	u6605
 19798  1111  0842               	movf	___fldiv@a+2,w
 19799  1112  024F               	subwf	___fldiv@rem+2,w
 19800  1113  1D03               	skipz
 19801  1114  291B               	goto	u6605
 19802  1115  0841               	movf	___fldiv@a+1,w
 19803  1116  024E               	subwf	___fldiv@rem+1,w
 19804  1117  1D03               	skipz
 19805  1118  291B               	goto	u6605
 19806  1119  0840               	movf	___fldiv@a,w
 19807  111A  024D               	subwf	___fldiv@rem,w
 19808  111B                     u6605:	
 19809  111B  1C03               	skipc
 19810  111C  2926               	goto	l5085
 19811  111D  1757               	bsf	___fldiv@grs+3,6
 19812  111E  0840               	movf	___fldiv@a,w
 19813  111F  02CD               	subwf	___fldiv@rem,f
 19814  1120  0841               	movf	___fldiv@a+1,w
 19815  1121  3BCE               	subwfb	___fldiv@rem+1,f
 19816  1122  0842               	movf	___fldiv@a+2,w
 19817  1123  3BCF               	subwfb	___fldiv@rem+2,f
 19818  1124  0843               	movf	___fldiv@a+3,w
 19819  1125  3BD0               	subwfb	___fldiv@rem+3,f
 19820  1126                     l5085:	
 19821  1126  3001               	movlw	1
 19822  1127  00C8               	movwf	??___fldiv
 19823  1128  0848               	movf	??___fldiv,w
 19824  1129  07D9               	addwf	___fldiv@aexp,f
 19825  112A  28EF               	goto	l5087
 19826  112B                     l5089:	
 19827  112B  0850               	movf	___fldiv@rem+3,w
 19828  112C  044F               	iorwf	___fldiv@rem+2,w
 19829  112D  044E               	iorwf	___fldiv@rem+1,w
 19830  112E  044D               	iorwf	___fldiv@rem,w
 19831  112F  1D03               	btfss	3,2
 19832  1130  1454               	bsf	___fldiv@grs,0
 19833  1131                     l5103:	
 19834  1131  1BC6               	btfsc	___fldiv@b+2,7
 19835  1132  2948               	goto	l5105
 19836  1133  3001               	movlw	1
 19837  1134                     u6635:	
 19838  1134  35C4               	lslf	___fldiv@b,f
 19839  1135  0DC5               	rlf	___fldiv@b+1,f
 19840  1136  0DC6               	rlf	___fldiv@b+2,f
 19841  1137  0DC7               	rlf	___fldiv@b+3,f
 19842  1138  0B89               	decfsz	9,f
 19843  1139  2934               	goto	u6635
 19844  113A  1BD7               	btfsc	___fldiv@grs+3,7
 19845  113B  1444               	bsf	___fldiv@b,0
 19846  113C  3001               	movlw	1
 19847  113D                     u6655:	
 19848  113D  35D4               	lslf	___fldiv@grs,f
 19849  113E  0DD5               	rlf	___fldiv@grs+1,f
 19850  113F  0DD6               	rlf	___fldiv@grs+2,f
 19851  1140  0DD7               	rlf	___fldiv@grs+3,f
 19852  1141  0B89               	decfsz	9,f
 19853  1142  293D               	goto	u6655
 19854  1143  30FF               	movlw	255
 19855  1144  07D2               	addwf	___fldiv@new_exp,f
 19856  1145  30FF               	movlw	255
 19857  1146  3DD3               	addwfc	___fldiv@new_exp+1,f
 19858  1147  2931               	goto	l5103
 19859  1148                     l5105:	
 19860  1148  01D9               	clrf	___fldiv@aexp
 19861  1149  1FD7               	btfss	___fldiv@grs+3,7
 19862  114A  2961               	goto	l5115
 19863  114B  30FF               	movlw	255
 19864  114C  0554               	andwf	___fldiv@grs,w
 19865  114D  00C8               	movwf	??___fldiv
 19866  114E  30FF               	movlw	255
 19867  114F  0555               	andwf	___fldiv@grs+1,w
 19868  1150  00C9               	movwf	??___fldiv+1
 19869  1151  30FF               	movlw	255
 19870  1152  0556               	andwf	___fldiv@grs+2,w
 19871  1153  00CA               	movwf	??___fldiv+2
 19872  1154  307F               	movlw	127
 19873  1155  0557               	andwf	___fldiv@grs+3,w
 19874  1156  00CB               	movwf	??___fldiv+3
 19875  1157  084B               	movf	??___fldiv+3,w
 19876  1158  044A               	iorwf	??___fldiv+2,w
 19877  1159  0449               	iorwf	??___fldiv+1,w
 19878  115A  0448               	iorwf	??___fldiv,w
 19879  115B  1903               	skipnz
 19880  115C  1844               	btfsc	___fldiv@b,0
 19881  115D  295F               	goto	l5111
 19882  115E  2961               	goto	l5115
 19883  115F                     l5111:	
 19884  115F  01D9               	clrf	___fldiv@aexp
 19885  1160  0AD9               	incf	___fldiv@aexp,f
 19886  1161                     l5115:	
 19887  1161  0859               	movf	___fldiv@aexp,w
 19888  1162  1903               	btfsc	3,2
 19889  1163  298A               	goto	l5125
 19890  1164  3001               	movlw	1
 19891  1165  07C4               	addwf	___fldiv@b,f
 19892  1166  3000               	movlw	0
 19893  1167  3DC5               	addwfc	___fldiv@b+1,f
 19894  1168  3000               	movlw	0
 19895  1169  3DC6               	addwfc	___fldiv@b+2,f
 19896  116A  3000               	movlw	0
 19897  116B  3DC7               	addwfc	___fldiv@b+3,f
 19898  116C  1C47               	btfss	___fldiv@b+3,0
 19899  116D  298A               	goto	l5125
 19900  116E  0844               	movf	___fldiv@b,w
 19901  116F  00C8               	movwf	??___fldiv
 19902  1170  0845               	movf	___fldiv@b+1,w
 19903  1171  00C9               	movwf	??___fldiv+1
 19904  1172  0846               	movf	___fldiv@b+2,w
 19905  1173  00CA               	movwf	??___fldiv+2
 19906  1174  0847               	movf	___fldiv@b+3,w
 19907  1175  00CB               	movwf	??___fldiv+3
 19908  1176  3001               	movlw	1
 19909  1177  00CC               	movwf	??___fldiv+4
 19910  1178                     u6725:	
 19911  1178  37CB               	asrf	??___fldiv+3,f
 19912  1179  0CCA               	rrf	??___fldiv+2,f
 19913  117A  0CC9               	rrf	??___fldiv+1,f
 19914  117B  0CC8               	rrf	??___fldiv,f
 19915  117C  0BCC               	decfsz	??___fldiv+4,f
 19916  117D  2978               	goto	u6725
 19917  117E  084B               	movf	??___fldiv+3,w
 19918  117F  00C7               	movwf	___fldiv@b+3
 19919  1180  084A               	movf	??___fldiv+2,w
 19920  1181  00C6               	movwf	___fldiv@b+2
 19921  1182  0849               	movf	??___fldiv+1,w
 19922  1183  00C5               	movwf	___fldiv@b+1
 19923  1184  0848               	movf	??___fldiv,w
 19924  1185  00C4               	movwf	___fldiv@b
 19925  1186  3001               	movlw	1
 19926  1187  07D2               	addwf	___fldiv@new_exp,f
 19927  1188  3000               	movlw	0
 19928  1189  3DD3               	addwfc	___fldiv@new_exp+1,f
 19929  118A                     l5125:	
 19930  118A  0853               	movf	___fldiv@new_exp+1,w
 19931  118B  3A80               	xorlw	128
 19932  118C  00C8               	movwf	??___fldiv
 19933  118D  3080               	movlw	128
 19934  118E  0248               	subwf	??___fldiv,w
 19935  118F  1D03               	skipz
 19936  1190  2993               	goto	u6735
 19937  1191  30FF               	movlw	255
 19938  1192  0252               	subwf	___fldiv@new_exp,w
 19939  1193                     u6735:	
 19940  1193  1C03               	skipc
 19941  1194  29A2               	goto	l1287
 19942  1195  30FF               	movlw	255
 19943  1196  0020               	movlb	0	; select bank0
 19944  1197  00D2               	movwf	___fldiv@new_exp
 19945  1198  3000               	movlw	0
 19946  1199  00D3               	movwf	___fldiv@new_exp+1
 19947  119A  3000               	movlw	0
 19948  119B  00C7               	movwf	___fldiv@b+3
 19949  119C  3000               	movlw	0
 19950  119D  00C6               	movwf	___fldiv@b+2
 19951  119E  3000               	movlw	0
 19952  119F  00C5               	movwf	___fldiv@b+1
 19953  11A0  3000               	movlw	0
 19954  11A1  00C4               	movwf	___fldiv@b
 19955  11A2                     l1287:	
 19956  11A2  0020               	movlb	0	; select bank0
 19957  11A3  0853               	movf	___fldiv@new_exp+1,w
 19958  11A4  3A80               	xorlw	128
 19959  11A5  00C8               	movwf	??___fldiv
 19960  11A6  3080               	movlw	128
 19961  11A7  0248               	subwf	??___fldiv,w
 19962  11A8  1D03               	skipz
 19963  11A9  29AC               	goto	u6745
 19964  11AA  3001               	movlw	1
 19965  11AB  0252               	subwf	___fldiv@new_exp,w
 19966  11AC                     u6745:	
 19967  11AC  1803               	skipnc
 19968  11AD  29BA               	goto	l1288
 19969  11AE  0020               	movlb	0	; select bank0
 19970  11AF  01D2               	clrf	___fldiv@new_exp
 19971  11B0  01D3               	clrf	___fldiv@new_exp+1
 19972  11B1  3000               	movlw	0
 19973  11B2  00C7               	movwf	___fldiv@b+3
 19974  11B3  3000               	movlw	0
 19975  11B4  00C6               	movwf	___fldiv@b+2
 19976  11B5  3000               	movlw	0
 19977  11B6  00C5               	movwf	___fldiv@b+1
 19978  11B7  3000               	movlw	0
 19979  11B8  00C4               	movwf	___fldiv@b
 19980  11B9  01D1               	clrf	___fldiv@sign
 19981  11BA                     l1288:	
 19982  11BA  0020               	movlb	0	; select bank0
 19983  11BB  0852               	movf	___fldiv@new_exp,w
 19984  11BC  00C8               	movwf	??___fldiv
 19985  11BD  0848               	movf	??___fldiv,w
 19986  11BE  00D8               	movwf	___fldiv@bexp
 19987  11BF  1C58               	btfss	___fldiv@bexp,0
 19988  11C0  29C3               	goto	l5139
 19989  11C1  17C6               	bsf	___fldiv@b+2,7
 19990  11C2  29C7               	goto	l1290
 19991  11C3                     l5139:	
 19992  11C3  307F               	movlw	127
 19993  11C4  00C8               	movwf	??___fldiv
 19994  11C5  0848               	movf	??___fldiv,w
 19995  11C6  05C6               	andwf	___fldiv@b+2,f
 19996  11C7                     l1290:	
 19997  11C7  3658               	lsrf	___fldiv@bexp,w
 19998  11C8  00C8               	movwf	??___fldiv
 19999  11C9  0848               	movf	??___fldiv,w
 20000  11CA  00C7               	movwf	___fldiv@b+3
 20001  11CB  28AD               	goto	L14
 20002  11CC                     __end_of___fldiv:	
 20003                           
 20004                           	psect	text74
 20005  0003                     __ptext74:	
 20006 ;; *************** function _AFE_UPDATE *****************
 20007 ;; Defined at:
 20008 ;;		line 163 in file "BQ76920.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;		None
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;		None
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      void 
 20015 ;; Registers used:
 20016 ;;		None
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20026 ;;Total ram usage:        0 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:    1
 20029 ;; This function calls:
 20030 ;;		Nothing
 20031 ;; This function is called by:
 20032 ;;		_statemachine
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           
 20037                           ;psect for function _AFE_UPDATE
 20038  0003                     _AFE_UPDATE:	
 20039                           
 20040                           ;incstack = 0
 20041                           ; Regs used in _AFE_UPDATE: []
 20042  0003  0008               	return
 20043  0004                     __end_of_AFE_UPDATE:	
 20044                           
 20045                           	psect	text75
 20046  310B                     __ptext75:	
 20047 ;; *************** function _init_TMR1 *****************
 20048 ;; Defined at:
 20049 ;;		line 176 in file "main.c"
 20050 ;; Parameters:    Size  Location     Type
 20051 ;;		None
 20052 ;; Auto vars:     Size  Location     Type
 20053 ;;		None
 20054 ;; Return value:  Size  Location     Type
 20055 ;;                  1    wreg      void 
 20056 ;; Registers used:
 20057 ;;		wreg, status,2, status,0
 20058 ;; Tracked objects:
 20059 ;;		On entry : 0/0
 20060 ;;		On exit  : 0/0
 20061 ;;		Unchanged: 0/0
 20062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20067 ;;Total ram usage:        0 bytes
 20068 ;; Hardware stack levels used:    1
 20069 ;; Hardware stack levels required when called:    1
 20070 ;; This function calls:
 20071 ;;		Nothing
 20072 ;; This function is called by:
 20073 ;;		_main
 20074 ;; This function uses a non-reentrant model
 20075 ;;
 20076                           
 20077                           
 20078                           ;psect for function _init_TMR1
 20079  310B                     _init_TMR1:	
 20080                           
 20081                           ;main.c: 179:     T1CONbits.T1CKPS = 0b00;
 20082                           
 20083                           ;incstack = 0
 20084                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20085  310B  30CF               	movlw	-49
 20086  310C  0020               	movlb	0	; select bank0
 20087  310D  0598               	andwf	24,f	;volatile
 20088                           
 20089                           ;main.c: 181:     TMR1 = 0;
 20090  310E  0196               	clrf	22	;volatile
 20091  310F  0197               	clrf	23	;volatile
 20092                           
 20093                           ;main.c: 183:     T1CONbits.TMR1ON = 1;
 20094  3110  1418               	bsf	24,0	;volatile
 20095                           
 20096                           ;main.c: 185:     PIE1bits.TMR1IE = 1;
 20097  3111  0021               	movlb	1	; select bank1
 20098  3112  1411               	bsf	17,0	;volatile
 20099                           
 20100                           ;main.c: 187:     INTCONbits.PEIE = 1;
 20101  3113  170B               	bsf	11,6	;volatile
 20102                           
 20103                           ;main.c: 189:     (INTCONbits.GIE = 1);
 20104  3114  178B               	bsf	11,7	;volatile
 20105  3115  0008               	return
 20106  3116                     __end_of_init_TMR1:	
 20107                           
 20108                           	psect	text76
 20109  309F                     __ptext76:	
 20110 ;; *************** function _init_RGB *****************
 20111 ;; Defined at:
 20112 ;;		line 6 in file "RGB.c"
 20113 ;; Parameters:    Size  Location     Type
 20114 ;;		None
 20115 ;; Auto vars:     Size  Location     Type
 20116 ;;		None
 20117 ;; Return value:  Size  Location     Type
 20118 ;;                  1    wreg      void 
 20119 ;; Registers used:
 20120 ;;		None
 20121 ;; Tracked objects:
 20122 ;;		On entry : 0/0
 20123 ;;		On exit  : 0/0
 20124 ;;		Unchanged: 0/0
 20125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20130 ;;Total ram usage:        0 bytes
 20131 ;; Hardware stack levels used:    1
 20132 ;; Hardware stack levels required when called:    1
 20133 ;; This function calls:
 20134 ;;		Nothing
 20135 ;; This function is called by:
 20136 ;;		_main
 20137 ;; This function uses a non-reentrant model
 20138 ;;
 20139                           
 20140                           
 20141                           ;psect for function _init_RGB
 20142  309F                     _init_RGB:	
 20143                           
 20144                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20145                           
 20146                           ;incstack = 0
 20147                           ; Regs used in _init_RGB: []
 20148  309F  0022               	movlb	2	; select bank2
 20149  30A0  160C               	bsf	12,4	;volatile
 20150                           
 20151                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20152  30A1  168C               	bsf	12,5	;volatile
 20153                           
 20154                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20155  30A2  1410               	bsf	16,0	;volatile
 20156  30A3  0008               	return
 20157  30A4                     __end_of_init_RGB:	
 20158                           
 20159                           	psect	text77
 20160  3116                     __ptext77:	
 20161 ;; *************** function _init_I2C *****************
 20162 ;; Defined at:
 20163 ;;		line 10 in file "I2C.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;		None
 20166 ;; Auto vars:     Size  Location     Type
 20167 ;;		None
 20168 ;; Return value:  Size  Location     Type
 20169 ;;                  1    wreg      void 
 20170 ;; Registers used:
 20171 ;;		wreg, status,2, status,0
 20172 ;; Tracked objects:
 20173 ;;		On entry : 0/0
 20174 ;;		On exit  : 0/0
 20175 ;;		Unchanged: 0/0
 20176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20181 ;;Total ram usage:        1 bytes
 20182 ;; Hardware stack levels used:    1
 20183 ;; Hardware stack levels required when called:    1
 20184 ;; This function calls:
 20185 ;;		Nothing
 20186 ;; This function is called by:
 20187 ;;		_main
 20188 ;; This function uses a non-reentrant model
 20189 ;;
 20190                           
 20191                           
 20192                           ;psect for function _init_I2C
 20193  3116                     _init_I2C:	
 20194                           
 20195                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20196                           
 20197                           ;incstack = 0
 20198                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20199  3116  0024               	movlb	4	; select bank4
 20200  3117  0815               	movf	21,w	;volatile
 20201  3118  39F0               	andlw	-16
 20202  3119  3808               	iorlw	8
 20203  311A  0095               	movwf	21	;volatile
 20204                           
 20205                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20206  311B  1695               	bsf	21,5	;volatile
 20207                           
 20208                           ;I2C.c: 24:     SSPADD = 39;
 20209  311C  3027               	movlw	39
 20210  311D  0092               	movwf	18	;volatile
 20211                           
 20212                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20213  311E  3034               	movlw	52
 20214  311F  00F1               	movwf	??_init_I2C
 20215  3120  30F2               	movlw	242
 20216  3121                     u12437:	
 20217  3121  0B89               	decfsz	9,f
 20218  3122  2921               	goto	u12437
 20219  3123  0BF1               	decfsz	??_init_I2C,f
 20220  3124  2921               	goto	u12437
 20221  3125  0008               	return
 20222  3126                     __end_of_init_I2C:	
 20223                           
 20224                           	psect	text78
 20225  0804                     __ptext78:	
 20226 ;; *************** function _init_GPIO *****************
 20227 ;; Defined at:
 20228 ;;		line 193 in file "main.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;		None
 20231 ;; Auto vars:     Size  Location     Type
 20232 ;;		None
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  1    wreg      void 
 20235 ;; Registers used:
 20236 ;;		wreg, status,2, status,0
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20246 ;;Total ram usage:        0 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; Hardware stack levels required when called:    1
 20249 ;; This function calls:
 20250 ;;		Nothing
 20251 ;; This function is called by:
 20252 ;;		_main
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           
 20257                           ;psect for function _init_GPIO
 20258  0804                     _init_GPIO:	
 20259                           
 20260                           ;main.c: 199:     TRISBbits.TRISB2 = 0;
 20261                           
 20262                           ;incstack = 0
 20263                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20264  0804  0021               	movlb	1	; select bank1
 20265  0805  110D               	bcf	13,2	;volatile
 20266                           
 20267                           ;main.c: 200:     ANSELBbits.ANSB2 = 0;
 20268  0806  0023               	movlb	3	; select bank3
 20269  0807  110D               	bcf	13,2	;volatile
 20270                           
 20271                           ;main.c: 201:     TRISBbits.TRISB3 = 1;
 20272  0808  0021               	movlb	1	; select bank1
 20273  0809  158D               	bsf	13,3	;volatile
 20274                           
 20275                           ;main.c: 202:     ANSELBbits.ANSB3 = 0;
 20276  080A  0023               	movlb	3	; select bank3
 20277  080B  118D               	bcf	13,3	;volatile
 20278                           
 20279                           ;main.c: 207:     ANSELCbits.ANSC4 = 0;
 20280  080C  120E               	bcf	14,4	;volatile
 20281                           
 20282                           ;main.c: 208:     ANSELCbits.ANSC5 = 0;
 20283  080D  128E               	bcf	14,5	;volatile
 20284                           
 20285                           ;main.c: 209:     TRISCbits.TRISC4 = 1;
 20286  080E  0021               	movlb	1	; select bank1
 20287  080F  160E               	bsf	14,4	;volatile
 20288                           
 20289                           ;main.c: 210:     TRISCbits.TRISC5 = 1;
 20290  0810  168E               	bsf	14,5	;volatile
 20291                           
 20292                           ;main.c: 219:     TRISAbits.TRISA4 = 0;
 20293  0811  120C               	bcf	12,4	;volatile
 20294                           
 20295                           ;main.c: 220:     TRISAbits.TRISA5 = 0;
 20296  0812  128C               	bcf	12,5	;volatile
 20297                           
 20298                           ;main.c: 221:     TRISEbits.TRISE0 = 0;
 20299  0813  1010               	bcf	16,0	;volatile
 20300                           
 20301                           ;main.c: 226:     TRISAbits.TRISA3 = 0;
 20302  0814  118C               	bcf	12,3	;volatile
 20303                           
 20304                           ;main.c: 227:     LATAbits.LATA3 = 0;
 20305  0815  0022               	movlb	2	; select bank2
 20306  0816  118C               	bcf	12,3	;volatile
 20307                           
 20308                           ;main.c: 233:     PPSLOCK = 0x55;
 20309  0817  3055               	movlw	85
 20310  0818  003C               	movlb	28	; select bank28
 20311  0819  008F               	movwf	15	;volsfr
 20312                           
 20313                           ;main.c: 234:     PPSLOCK = 0xAA;
 20314  081A  30AA               	movlw	170
 20315  081B  008F               	movwf	15	;volsfr
 20316                           
 20317                           ;main.c: 235:     PPSLOCKbits.PPSLOCKED = 0x00;
 20318  081C  100F               	bcf	15,0	;volsfr
 20319                           
 20320                           ;main.c: 239:     RC4PPSbits.RC4PPS = 0x0011;
 20321  081D  003D               	movlb	29	; select bank29
 20322  081E  0824               	movf	36,w	;volatile
 20323  081F  39E0               	andlw	-32
 20324  0820  3811               	iorlw	17
 20325  0821  00A4               	movwf	36	;volatile
 20326                           
 20327                           ;main.c: 240:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20328  0822  003C               	movlb	28	; select bank28
 20329  0823  0821               	movf	33,w	;volatile
 20330  0824  39E0               	andlw	-32
 20331  0825  3814               	iorlw	20
 20332  0826  00A1               	movwf	33	;volatile
 20333                           
 20334                           ;main.c: 241:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20335  0827  0820               	movf	32,w	;volatile
 20336  0828  39E0               	andlw	-32
 20337  0829  3815               	iorlw	21
 20338  082A  00A0               	movwf	32	;volatile
 20339                           
 20340                           ;main.c: 242:     RC5PPSbits.RC5PPS = 0x0010;
 20341  082B  003D               	movlb	29	; select bank29
 20342  082C  0825               	movf	37,w	;volatile
 20343  082D  39E0               	andlw	-32
 20344  082E  3810               	iorlw	16
 20345  082F  00A5               	movwf	37	;volatile
 20346                           
 20347                           ;main.c: 245:     RB2PPSbits.RB2PPS = 0x14;
 20348  0830  081A               	movf	26,w	;volatile
 20349  0831  39E0               	andlw	-32
 20350  0832  3814               	iorlw	20
 20351  0833  009A               	movwf	26	;volatile
 20352                           
 20353                           ;main.c: 246:     RXPPSbits.RXPPS = 0x0B;
 20354  0834  003C               	movlb	28	; select bank28
 20355  0835  0824               	movf	36,w	;volatile
 20356  0836  39E0               	andlw	-32
 20357  0837  380B               	iorlw	11
 20358  0838  00A4               	movwf	36	;volatile
 20359                           
 20360                           ;main.c: 248:     PPSLOCK = 0x55;
 20361  0839  3055               	movlw	85
 20362  083A  008F               	movwf	15	;volsfr
 20363                           
 20364                           ;main.c: 249:     PPSLOCK = 0xAA;
 20365  083B  30AA               	movlw	170
 20366  083C  008F               	movwf	15	;volsfr
 20367                           
 20368                           ;main.c: 250:     PPSLOCKbits.PPSLOCKED = 0x01;
 20369  083D  140F               	bsf	15,0	;volsfr
 20370  083E  0008               	return
 20371  083F                     __end_of_init_GPIO:	
 20372                           
 20373                           	psect	text79
 20374  30A4                     __ptext79:	
 20375 ;; *************** function _initWDT *****************
 20376 ;; Defined at:
 20377 ;;		line 254 in file "main.c"
 20378 ;; Parameters:    Size  Location     Type
 20379 ;;		None
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;		None
 20382 ;; Return value:  Size  Location     Type
 20383 ;;                  1    wreg      void 
 20384 ;; Registers used:
 20385 ;;		wreg, status,2, status,0
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;Total ram usage:        0 bytes
 20396 ;; Hardware stack levels used:    1
 20397 ;; Hardware stack levels required when called:    1
 20398 ;; This function calls:
 20399 ;;		Nothing
 20400 ;; This function is called by:
 20401 ;;		_main
 20402 ;; This function uses a non-reentrant model
 20403 ;;
 20404                           
 20405                           
 20406                           ;psect for function _initWDT
 20407  30A4                     _initWDT:	
 20408                           
 20409                           ;main.c: 256:     WDTCONbits.WDTPS = 0b01101;
 20410                           
 20411                           ;incstack = 0
 20412                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20413  30A4  0021               	movlb	1	; select bank1
 20414  30A5  0817               	movf	23,w	;volatile
 20415  30A6  39C1               	andlw	-63
 20416  30A7  381A               	iorlw	26
 20417  30A8  0097               	movwf	23	;volatile
 20418  30A9  0008               	return
 20419  30AA                     __end_of_initWDT:	
 20420                           
 20421                           	psect	text80
 20422  07FC                     __ptext80:	
 20423 ;; *************** function _initClock *****************
 20424 ;; Defined at:
 20425 ;;		line 167 in file "main.c"
 20426 ;; Parameters:    Size  Location     Type
 20427 ;;		None
 20428 ;; Auto vars:     Size  Location     Type
 20429 ;;		None
 20430 ;; Return value:  Size  Location     Type
 20431 ;;                  1    wreg      void 
 20432 ;; Registers used:
 20433 ;;		status,2, status,0, pclath, cstack
 20434 ;; Tracked objects:
 20435 ;;		On entry : 0/0
 20436 ;;		On exit  : 0/0
 20437 ;;		Unchanged: 0/0
 20438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20443 ;;Total ram usage:        0 bytes
 20444 ;; Hardware stack levels used:    1
 20445 ;; Hardware stack levels required when called:    2
 20446 ;; This function calls:
 20447 ;;		_internal_16
 20448 ;; This function is called by:
 20449 ;;		_main
 20450 ;; This function uses a non-reentrant model
 20451 ;;
 20452                           
 20453                           
 20454                           ;psect for function _initClock
 20455  07FC                     _initClock:	
 20456                           
 20457                           ;main.c: 169:     internal_16();
 20458                           
 20459                           ;incstack = 0
 20460                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20461  07FC  31B0  20C9         	fcall	_internal_16
 20462  07FE  0008               	return
 20463  07FF                     __end_of_initClock:	
 20464                           
 20465                           	psect	text81
 20466  30C9                     __ptext81:	
 20467 ;; *************** function _internal_16 *****************
 20468 ;; Defined at:
 20469 ;;		line 26 in file "pic16f1719_internals.c"
 20470 ;; Parameters:    Size  Location     Type
 20471 ;;		None
 20472 ;; Auto vars:     Size  Location     Type
 20473 ;;		None
 20474 ;; Return value:  Size  Location     Type
 20475 ;;                  1    wreg      void 
 20476 ;; Registers used:
 20477 ;;		None
 20478 ;; Tracked objects:
 20479 ;;		On entry : 0/0
 20480 ;;		On exit  : 0/0
 20481 ;;		Unchanged: 0/0
 20482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20487 ;;Total ram usage:        0 bytes
 20488 ;; Hardware stack levels used:    1
 20489 ;; Hardware stack levels required when called:    1
 20490 ;; This function calls:
 20491 ;;		Nothing
 20492 ;; This function is called by:
 20493 ;;		_initClock
 20494 ;; This function uses a non-reentrant model
 20495 ;;
 20496                           
 20497                           
 20498                           ;psect for function _internal_16
 20499  30C9                     _internal_16:	
 20500                           
 20501                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20502                           
 20503                           ;incstack = 0
 20504                           ; Regs used in _internal_16: []
 20505  30C9  0021               	movlb	1	; select bank1
 20506  30CA  1019               	bcf	25,0	;volatile
 20507                           
 20508                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20509  30CB  1099               	bcf	25,1	;volatile
 20510                           
 20511                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20512  30CC  1599               	bsf	25,3	;volatile
 20513                           
 20514                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20515  30CD  1619               	bsf	25,4	;volatile
 20516                           
 20517                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20518  30CE  1699               	bsf	25,5	;volatile
 20519                           
 20520                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20521  30CF  1719               	bsf	25,6	;volatile
 20522                           
 20523                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20524  30D0  1399               	bcf	25,7	;volatile
 20525  30D1  0008               	return
 20526  30D2                     __end_of_internal_16:	
 20527                           
 20528                           	psect	text82
 20529  2D0D                     __ptext82:	
 20530 ;; *************** function _EUSART_Initialize *****************
 20531 ;; Defined at:
 20532 ;;		line 6 in file "EUSART.c"
 20533 ;; Parameters:    Size  Location     Type
 20534 ;;  baudrate        4   18[BANK0 ] const long 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;  x               2   10[COMMON] unsigned int 
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  1    wreg      unsigned char 
 20539 ;; Registers used:
 20540 ;;		wreg, status,2, status,0, pclath, cstack
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/0
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20548 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20549 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20550 ;;Total ram usage:       18 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:    2
 20553 ;; This function calls:
 20554 ;;		___aldiv
 20555 ;; This function is called by:
 20556 ;;		_main
 20557 ;; This function uses a non-reentrant model
 20558 ;;
 20559                           
 20560                           
 20561                           ;psect for function _EUSART_Initialize
 20562  2D0D                     _EUSART_Initialize:	
 20563                           
 20564                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20565                           
 20566                           ;incstack = 0
 20567                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20568  2D0D  0020               	movlb	0	; select bank0
 20569  2D0E  0832               	movf	EUSART_Initialize@baudrate,w
 20570  2D0F  00B6               	movwf	??_EUSART_Initialize
 20571  2D10  0833               	movf	EUSART_Initialize@baudrate+1,w
 20572  2D11  00B7               	movwf	??_EUSART_Initialize+1
 20573  2D12  0834               	movf	EUSART_Initialize@baudrate+2,w
 20574  2D13  00B8               	movwf	??_EUSART_Initialize+2
 20575  2D14  0835               	movf	EUSART_Initialize@baudrate+3,w
 20576  2D15  00B9               	movwf	??_EUSART_Initialize+3
 20577  2D16  3006               	movlw	6
 20578  2D17                     u12305:	
 20579  2D17  35B6               	lslf	??_EUSART_Initialize,f
 20580  2D18  0DB7               	rlf	??_EUSART_Initialize+1,f
 20581  2D19  0DB8               	rlf	??_EUSART_Initialize+2,f
 20582  2D1A  0DB9               	rlf	??_EUSART_Initialize+3,f
 20583  2D1B  0B89               	decfsz	9,f
 20584  2D1C  2D17               	goto	u12305
 20585  2D1D  0839               	movf	??_EUSART_Initialize+3,w
 20586  2D1E  00A7               	movwf	___aldiv@divisor+3
 20587  2D1F  0838               	movf	??_EUSART_Initialize+2,w
 20588  2D20  00A6               	movwf	___aldiv@divisor+2
 20589  2D21  0837               	movf	??_EUSART_Initialize+1,w
 20590  2D22  00A5               	movwf	___aldiv@divisor+1
 20591  2D23  0836               	movf	??_EUSART_Initialize,w
 20592  2D24  00A4               	movwf	___aldiv@divisor
 20593  2D25  0832               	movf	EUSART_Initialize@baudrate,w
 20594  2D26  00BA               	movwf	??_EUSART_Initialize+4
 20595  2D27  0833               	movf	EUSART_Initialize@baudrate+1,w
 20596  2D28  00BB               	movwf	??_EUSART_Initialize+5
 20597  2D29  0834               	movf	EUSART_Initialize@baudrate+2,w
 20598  2D2A  00BC               	movwf	??_EUSART_Initialize+6
 20599  2D2B  0835               	movf	EUSART_Initialize@baudrate+3,w
 20600  2D2C  00BD               	movwf	??_EUSART_Initialize+7
 20601  2D2D  3006               	movlw	6
 20602  2D2E                     u12315:	
 20603  2D2E  35BA               	lslf	??_EUSART_Initialize+4,f
 20604  2D2F  0DBB               	rlf	??_EUSART_Initialize+5,f
 20605  2D30  0DBC               	rlf	??_EUSART_Initialize+6,f
 20606  2D31  0DBD               	rlf	??_EUSART_Initialize+7,f
 20607  2D32  0B89               	decfsz	9,f
 20608  2D33  2D2E               	goto	u12315
 20609  2D34  3000               	movlw	0
 20610  2D35  00BE               	movwf	??_EUSART_Initialize+8
 20611  2D36  3024               	movlw	36
 20612  2D37  00BF               	movwf	??_EUSART_Initialize+9
 20613  2D38  30F4               	movlw	244
 20614  2D39  00C0               	movwf	??_EUSART_Initialize+10
 20615  2D3A  3000               	movlw	0
 20616  2D3B  00C1               	movwf	??_EUSART_Initialize+11
 20617  2D3C  083A               	movf	??_EUSART_Initialize+4,w
 20618  2D3D  02BE               	subwf	??_EUSART_Initialize+8,f
 20619  2D3E  083B               	movf	??_EUSART_Initialize+5,w
 20620  2D3F  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20621  2D40  083C               	movf	??_EUSART_Initialize+6,w
 20622  2D41  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20623  2D42  083D               	movf	??_EUSART_Initialize+7,w
 20624  2D43  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20625  2D44  0841               	movf	??_EUSART_Initialize+11,w
 20626  2D45  00AB               	movwf	___aldiv@dividend+3
 20627  2D46  0840               	movf	??_EUSART_Initialize+10,w
 20628  2D47  00AA               	movwf	___aldiv@dividend+2
 20629  2D48  083F               	movf	??_EUSART_Initialize+9,w
 20630  2D49  00A9               	movwf	___aldiv@dividend+1
 20631  2D4A  083E               	movf	??_EUSART_Initialize+8,w
 20632  2D4B  00A8               	movwf	___aldiv@dividend
 20633  2D4C  31A9  21A5  31AD   	fcall	___aldiv
 20634  2D4F  0020               	movlb	0	; select bank0
 20635  2D50  0825               	movf	?___aldiv+1,w
 20636  2D51  00FB               	movwf	EUSART_Initialize@x+1
 20637  2D52  0824               	movf	?___aldiv,w
 20638  2D53  00FA               	movwf	EUSART_Initialize@x
 20639                           
 20640                           ;EUSART.c: 10:  if(x>255)
 20641  2D54  3001               	movlw	1
 20642  2D55  027B               	subwf	EUSART_Initialize@x+1,w
 20643  2D56  3000               	movlw	0
 20644  2D57  1903               	skipnz
 20645  2D58  027A               	subwf	EUSART_Initialize@x,w
 20646  2D59  1C03               	skipc
 20647  2D5A  2DA3               	goto	l8677
 20648                           
 20649                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20650  2D5B  0832               	movf	EUSART_Initialize@baudrate,w
 20651  2D5C  00B6               	movwf	??_EUSART_Initialize
 20652  2D5D  0833               	movf	EUSART_Initialize@baudrate+1,w
 20653  2D5E  00B7               	movwf	??_EUSART_Initialize+1
 20654  2D5F  0834               	movf	EUSART_Initialize@baudrate+2,w
 20655  2D60  00B8               	movwf	??_EUSART_Initialize+2
 20656  2D61  0835               	movf	EUSART_Initialize@baudrate+3,w
 20657  2D62  00B9               	movwf	??_EUSART_Initialize+3
 20658  2D63  3004               	movlw	4
 20659  2D64                     u12335:	
 20660  2D64  35B6               	lslf	??_EUSART_Initialize,f
 20661  2D65  0DB7               	rlf	??_EUSART_Initialize+1,f
 20662  2D66  0DB8               	rlf	??_EUSART_Initialize+2,f
 20663  2D67  0DB9               	rlf	??_EUSART_Initialize+3,f
 20664  2D68  0B89               	decfsz	9,f
 20665  2D69  2D64               	goto	u12335
 20666  2D6A  0839               	movf	??_EUSART_Initialize+3,w
 20667  2D6B  00A7               	movwf	___aldiv@divisor+3
 20668  2D6C  0838               	movf	??_EUSART_Initialize+2,w
 20669  2D6D  00A6               	movwf	___aldiv@divisor+2
 20670  2D6E  0837               	movf	??_EUSART_Initialize+1,w
 20671  2D6F  00A5               	movwf	___aldiv@divisor+1
 20672  2D70  0836               	movf	??_EUSART_Initialize,w
 20673  2D71  00A4               	movwf	___aldiv@divisor
 20674  2D72  0832               	movf	EUSART_Initialize@baudrate,w
 20675  2D73  00BA               	movwf	??_EUSART_Initialize+4
 20676  2D74  0833               	movf	EUSART_Initialize@baudrate+1,w
 20677  2D75  00BB               	movwf	??_EUSART_Initialize+5
 20678  2D76  0834               	movf	EUSART_Initialize@baudrate+2,w
 20679  2D77  00BC               	movwf	??_EUSART_Initialize+6
 20680  2D78  0835               	movf	EUSART_Initialize@baudrate+3,w
 20681  2D79  00BD               	movwf	??_EUSART_Initialize+7
 20682  2D7A  3004               	movlw	4
 20683  2D7B                     u12345:	
 20684  2D7B  35BA               	lslf	??_EUSART_Initialize+4,f
 20685  2D7C  0DBB               	rlf	??_EUSART_Initialize+5,f
 20686  2D7D  0DBC               	rlf	??_EUSART_Initialize+6,f
 20687  2D7E  0DBD               	rlf	??_EUSART_Initialize+7,f
 20688  2D7F  0B89               	decfsz	9,f
 20689  2D80  2D7B               	goto	u12345
 20690  2D81  3000               	movlw	0
 20691  2D82  00BE               	movwf	??_EUSART_Initialize+8
 20692  2D83  3024               	movlw	36
 20693  2D84  00BF               	movwf	??_EUSART_Initialize+9
 20694  2D85  30F4               	movlw	244
 20695  2D86  00C0               	movwf	??_EUSART_Initialize+10
 20696  2D87  3000               	movlw	0
 20697  2D88  00C1               	movwf	??_EUSART_Initialize+11
 20698  2D89  083A               	movf	??_EUSART_Initialize+4,w
 20699  2D8A  02BE               	subwf	??_EUSART_Initialize+8,f
 20700  2D8B  083B               	movf	??_EUSART_Initialize+5,w
 20701  2D8C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20702  2D8D  083C               	movf	??_EUSART_Initialize+6,w
 20703  2D8E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20704  2D8F  083D               	movf	??_EUSART_Initialize+7,w
 20705  2D90  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20706  2D91  0841               	movf	??_EUSART_Initialize+11,w
 20707  2D92  00AB               	movwf	___aldiv@dividend+3
 20708  2D93  0840               	movf	??_EUSART_Initialize+10,w
 20709  2D94  00AA               	movwf	___aldiv@dividend+2
 20710  2D95  083F               	movf	??_EUSART_Initialize+9,w
 20711  2D96  00A9               	movwf	___aldiv@dividend+1
 20712  2D97  083E               	movf	??_EUSART_Initialize+8,w
 20713  2D98  00A8               	movwf	___aldiv@dividend
 20714  2D99  31A9  21A5  31AD   	fcall	___aldiv
 20715  2D9C  0020               	movlb	0	; select bank0
 20716  2D9D  0825               	movf	?___aldiv+1,w
 20717  2D9E  00FB               	movwf	EUSART_Initialize@x+1
 20718  2D9F  0824               	movf	?___aldiv,w
 20719  2DA0  00FA               	movwf	EUSART_Initialize@x
 20720                           
 20721                           ;EUSART.c: 13:   BRGH = 1;
 20722  2DA1  0023               	movlb	3	; select bank3
 20723  2DA2  151E               	bsf	30,2	;volatile
 20724  2DA3                     l8677:	
 20725                           
 20726                           ;EUSART.c: 15:  if(x<256)
 20727  2DA3  3001               	movlw	1
 20728  2DA4  027B               	subwf	EUSART_Initialize@x+1,w
 20729  2DA5  3000               	movlw	0
 20730  2DA6  1903               	skipnz
 20731  2DA7  027A               	subwf	EUSART_Initialize@x,w
 20732  2DA8  1803               	skipnc
 20733  2DA9  0008               	return
 20734                           
 20735                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20736  2DAA  087A               	movf	EUSART_Initialize@x,w
 20737  2DAB  0023               	movlb	3	; select bank3
 20738  2DAC  009B               	movwf	27	;volatile
 20739                           
 20740                           ;EUSART.c: 18:    SYNC = 0;
 20741  2DAD  121E               	bcf	30,4	;volatile
 20742                           
 20743                           ;EUSART.c: 19:    SPEN = 1;
 20744  2DAE  179D               	bsf	29,7	;volatile
 20745                           
 20746                           ;EUSART.c: 20:           TRISC7 = 1;
 20747  2DAF  0021               	movlb	1	; select bank1
 20748  2DB0  178E               	bsf	14,7	;volatile
 20749                           
 20750                           ;EUSART.c: 21:           TRISC6 = 1;
 20751  2DB1  170E               	bsf	14,6	;volatile
 20752                           
 20753                           ;EUSART.c: 22:           CREN = 1;
 20754  2DB2  0023               	movlb	3	; select bank3
 20755  2DB3  161D               	bsf	29,4	;volatile
 20756                           
 20757                           ;EUSART.c: 23:           TXEN = 1;
 20758  2DB4  169E               	bsf	30,5	;volatile
 20759  2DB5  0008               	return
 20760  2DB6                     __end_of_EUSART_Initialize:	
 20761                           
 20762                           	psect	text83
 20763  29A5                     __ptext83:	
 20764 ;; *************** function ___aldiv *****************
 20765 ;; Defined at:
 20766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20767 ;; Parameters:    Size  Location     Type
 20768 ;;  divisor         4    4[BANK0 ] long 
 20769 ;;  dividend        4    8[BANK0 ] long 
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;  quotient        4   14[BANK0 ] long 
 20772 ;;  sign            1   13[BANK0 ] unsigned char 
 20773 ;;  counter         1   12[BANK0 ] unsigned char 
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  4    4[BANK0 ] long 
 20776 ;; Registers used:
 20777 ;;		wreg, status,2, status,0
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/0
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20783 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20786 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20787 ;;Total ram usage:       15 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:    1
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_EUSART_Initialize
 20794 ;;		_setCellUndervoltageProtection
 20795 ;;		_setCellOvervoltageProtection
 20796 ;; This function uses a non-reentrant model
 20797 ;;
 20798                           
 20799                           
 20800                           ;psect for function ___aldiv
 20801  29A5                     ___aldiv:	
 20802                           
 20803                           ;incstack = 0
 20804                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20805  29A5  0020               	movlb	0	; select bank0
 20806  29A6  01AD               	clrf	___aldiv@sign
 20807  29A7  1FA7               	btfss	___aldiv@divisor+3,7
 20808  29A8  29B6               	goto	l974
 20809  29A9  09A4               	comf	___aldiv@divisor,f
 20810  29AA  09A5               	comf	___aldiv@divisor+1,f
 20811  29AB  09A6               	comf	___aldiv@divisor+2,f
 20812  29AC  09A7               	comf	___aldiv@divisor+3,f
 20813  29AD  0AA4               	incf	___aldiv@divisor,f
 20814  29AE  1903               	skipnz
 20815  29AF  0AA5               	incf	___aldiv@divisor+1,f
 20816  29B0  1903               	skipnz
 20817  29B1  0AA6               	incf	___aldiv@divisor+2,f
 20818  29B2  1903               	skipnz
 20819  29B3  0AA7               	incf	___aldiv@divisor+3,f
 20820  29B4  01AD               	clrf	___aldiv@sign
 20821  29B5  0AAD               	incf	___aldiv@sign,f
 20822  29B6                     l974:	
 20823  29B6  1FAB               	btfss	___aldiv@dividend+3,7
 20824  29B7  29C7               	goto	l8453
 20825  29B8  09A8               	comf	___aldiv@dividend,f
 20826  29B9  09A9               	comf	___aldiv@dividend+1,f
 20827  29BA  09AA               	comf	___aldiv@dividend+2,f
 20828  29BB  09AB               	comf	___aldiv@dividend+3,f
 20829  29BC  0AA8               	incf	___aldiv@dividend,f
 20830  29BD  1903               	skipnz
 20831  29BE  0AA9               	incf	___aldiv@dividend+1,f
 20832  29BF  1903               	skipnz
 20833  29C0  0AAA               	incf	___aldiv@dividend+2,f
 20834  29C1  1903               	skipnz
 20835  29C2  0AAB               	incf	___aldiv@dividend+3,f
 20836  29C3  3001               	movlw	1
 20837  29C4  00F9               	movwf	??___aldiv
 20838  29C5  0879               	movf	??___aldiv,w
 20839  29C6  06AD               	xorwf	___aldiv@sign,f
 20840  29C7                     l8453:	
 20841  29C7  3000               	movlw	0
 20842  29C8  00B1               	movwf	___aldiv@quotient+3
 20843  29C9  3000               	movlw	0
 20844  29CA  00B0               	movwf	___aldiv@quotient+2
 20845  29CB  3000               	movlw	0
 20846  29CC  00AF               	movwf	___aldiv@quotient+1
 20847  29CD  3000               	movlw	0
 20848  29CE  00AE               	movwf	___aldiv@quotient
 20849  29CF  0827               	movf	___aldiv@divisor+3,w
 20850  29D0  0426               	iorwf	___aldiv@divisor+2,w
 20851  29D1  0425               	iorwf	___aldiv@divisor+1,w
 20852  29D2  0424               	iorwf	___aldiv@divisor,w
 20853  29D3  1903               	skipnz
 20854  29D4  2A10               	goto	l8475
 20855  29D5  01AC               	clrf	___aldiv@counter
 20856  29D6  0AAC               	incf	___aldiv@counter,f
 20857  29D7                     l8461:	
 20858  29D7  1BA7               	btfsc	___aldiv@divisor+3,7
 20859  29D8  29E5               	goto	l8463
 20860  29D9  3001               	movlw	1
 20861  29DA                     u12095:	
 20862  29DA  35A4               	lslf	___aldiv@divisor,f
 20863  29DB  0DA5               	rlf	___aldiv@divisor+1,f
 20864  29DC  0DA6               	rlf	___aldiv@divisor+2,f
 20865  29DD  0DA7               	rlf	___aldiv@divisor+3,f
 20866  29DE  0B89               	decfsz	9,f
 20867  29DF  29DA               	goto	u12095
 20868  29E0  3001               	movlw	1
 20869  29E1  00F9               	movwf	??___aldiv
 20870  29E2  0879               	movf	??___aldiv,w
 20871  29E3  07AC               	addwf	___aldiv@counter,f
 20872  29E4  29D7               	goto	l8461
 20873  29E5                     l8463:	
 20874  29E5  3001               	movlw	1
 20875  29E6                     u12115:	
 20876  29E6  35AE               	lslf	___aldiv@quotient,f
 20877  29E7  0DAF               	rlf	___aldiv@quotient+1,f
 20878  29E8  0DB0               	rlf	___aldiv@quotient+2,f
 20879  29E9  0DB1               	rlf	___aldiv@quotient+3,f
 20880  29EA  0B89               	decfsz	9,f
 20881  29EB  29E6               	goto	u12115
 20882  29EC  0827               	movf	___aldiv@divisor+3,w
 20883  29ED  022B               	subwf	___aldiv@dividend+3,w
 20884  29EE  1D03               	skipz
 20885  29EF  29FA               	goto	u12125
 20886  29F0  0826               	movf	___aldiv@divisor+2,w
 20887  29F1  022A               	subwf	___aldiv@dividend+2,w
 20888  29F2  1D03               	skipz
 20889  29F3  29FA               	goto	u12125
 20890  29F4  0825               	movf	___aldiv@divisor+1,w
 20891  29F5  0229               	subwf	___aldiv@dividend+1,w
 20892  29F6  1D03               	skipz
 20893  29F7  29FA               	goto	u12125
 20894  29F8  0824               	movf	___aldiv@divisor,w
 20895  29F9  0228               	subwf	___aldiv@dividend,w
 20896  29FA                     u12125:	
 20897  29FA  1C03               	skipc
 20898  29FB  2A05               	goto	l8471
 20899  29FC  0824               	movf	___aldiv@divisor,w
 20900  29FD  02A8               	subwf	___aldiv@dividend,f
 20901  29FE  0825               	movf	___aldiv@divisor+1,w
 20902  29FF  3BA9               	subwfb	___aldiv@dividend+1,f
 20903  2A00  0826               	movf	___aldiv@divisor+2,w
 20904  2A01  3BAA               	subwfb	___aldiv@dividend+2,f
 20905  2A02  0827               	movf	___aldiv@divisor+3,w
 20906  2A03  3BAB               	subwfb	___aldiv@dividend+3,f
 20907  2A04  142E               	bsf	___aldiv@quotient,0
 20908  2A05                     l8471:	
 20909  2A05  3001               	movlw	1
 20910  2A06                     u12135:	
 20911  2A06  36A7               	lsrf	___aldiv@divisor+3,f
 20912  2A07  0CA6               	rrf	___aldiv@divisor+2,f
 20913  2A08  0CA5               	rrf	___aldiv@divisor+1,f
 20914  2A09  0CA4               	rrf	___aldiv@divisor,f
 20915  2A0A  0B89               	decfsz	9,f
 20916  2A0B  2A06               	goto	u12135
 20917  2A0C  3001               	movlw	1
 20918  2A0D  02AC               	subwf	___aldiv@counter,f
 20919  2A0E  1D03               	btfss	3,2
 20920  2A0F  29E5               	goto	l8463
 20921  2A10                     l8475:	
 20922  2A10  082D               	movf	___aldiv@sign,w
 20923  2A11  1903               	btfsc	3,2
 20924  2A12  2A1E               	goto	l8479
 20925  2A13  09AE               	comf	___aldiv@quotient,f
 20926  2A14  09AF               	comf	___aldiv@quotient+1,f
 20927  2A15  09B0               	comf	___aldiv@quotient+2,f
 20928  2A16  09B1               	comf	___aldiv@quotient+3,f
 20929  2A17  0AAE               	incf	___aldiv@quotient,f
 20930  2A18  1903               	skipnz
 20931  2A19  0AAF               	incf	___aldiv@quotient+1,f
 20932  2A1A  1903               	skipnz
 20933  2A1B  0AB0               	incf	___aldiv@quotient+2,f
 20934  2A1C  1903               	skipnz
 20935  2A1D  0AB1               	incf	___aldiv@quotient+3,f
 20936  2A1E                     l8479:	
 20937  2A1E  0831               	movf	___aldiv@quotient+3,w
 20938  2A1F  00A7               	movwf	?___aldiv+3
 20939  2A20  0830               	movf	___aldiv@quotient+2,w
 20940  2A21  00A6               	movwf	?___aldiv+2
 20941  2A22  082F               	movf	___aldiv@quotient+1,w
 20942  2A23  00A5               	movwf	?___aldiv+1
 20943  2A24  082E               	movf	___aldiv@quotient,w
 20944  2A25  00A4               	movwf	?___aldiv
 20945  2A26  0008               	return
 20946  2A27                     __end_of___aldiv:	
 20947                           
 20948                           	psect	intentry
 20949  0004                     __pintentry:	
 20950 ;; *************** function _myIsr *****************
 20951 ;; Defined at:
 20952 ;;		line 59 in file "main.c"
 20953 ;; Parameters:    Size  Location     Type
 20954 ;;		None
 20955 ;; Auto vars:     Size  Location     Type
 20956 ;;		None
 20957 ;; Return value:  Size  Location     Type
 20958 ;;                  1    wreg      void 
 20959 ;; Registers used:
 20960 ;;		wreg, status,2, status,0
 20961 ;; Tracked objects:
 20962 ;;		On entry : 0/0
 20963 ;;		On exit  : 0/0
 20964 ;;		Unchanged: 0/0
 20965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20970 ;;Total ram usage:        1 bytes
 20971 ;; Hardware stack levels used:    1
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		Interrupt level 1
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979  0004                     _myIsr:	
 20980                           
 20981                           ;incstack = 0
 20982  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20983                           
 20984                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20985  0005  3180               	pagesel	$
 20986                           
 20987                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20988  0006  0020               	movlb	0	; select bank0
 20989  0007  1C11               	btfss	17,0	;volatile
 20990  0008  281C               	goto	i1l143
 20991  0009  0021               	movlb	1	; select bank1
 20992  000A  1C11               	btfss	17,0	;volatile
 20993  000B  281C               	goto	i1l143
 20994                           
 20995                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 20996  000C  0020               	movlb	0	; select bank0
 20997  000D  1011               	bcf	17,0	;volatile
 20998                           
 20999                           ;main.c: 65:         count++;
 21000  000E  3001               	movlw	1
 21001  000F  00F0               	movwf	??_myIsr
 21002  0010  0870               	movf	??_myIsr,w
 21003  0011  0023               	movlb	3	; select bank3
 21004  0012  07D7               	addwf	myIsr@count^(0+384),f
 21005                           
 21006                           ;main.c: 68:         if (count == 61) {
 21007  0013  303D               	movlw	61
 21008  0014  0657               	xorwf	myIsr@count^(0+384),w
 21009  0015  1D03               	btfss	3,2
 21010  0016  281C               	goto	i1l143
 21011                           
 21012                           ;main.c: 69:             tmr1_flag = 1;
 21013  0017  3001               	movlw	1
 21014  0018  00F0               	movwf	??_myIsr
 21015  0019  0870               	movf	??_myIsr,w
 21016  001A  00D8               	movwf	_tmr1_flag^(0+384)	;volatile
 21017                           
 21018                           ;main.c: 70:             count = 0;
 21019  001B  01D7               	clrf	myIsr@count^(0+384)
 21020  001C                     i1l143:	
 21021  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21022  001D  0009               	retfie
 21023  001E                     __end_of_myIsr:	
 21024  007E                     btemp	set	126	;btemp
 21025  007E                     int$flags	set	126
 21026  007E                     wtemp0	set	126
 21027  2771                     
 21028                           	psect	text7_split_1
 21029  2A27                     l8049:	
 21030                           
 21031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21032  2A27  0021               	movlb	1	; select bank1
 21033  2A28  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21034  2A29  0086               	movwf	6
 21035  2A2A  0187               	clrf	7
 21036  2A2B  3F40               	moviw [0]fsr1
 21037  2A2C  00F1               	movwf	strncmp@_l
 21038  2A2D  3F41               	moviw [1]fsr1
 21039  2A2E  00F2               	movwf	strncmp@_l+1
 21040  2A2F  301C               	movlw	low (STR_34| (0+32768))
 21041  2A30  00F3               	movwf	strncmp@_r
 21042  2A31  30BB               	movlw	high (STR_34| (0+32768))
 21043  2A32  00F4               	movwf	strncmp@_r+1
 21044  2A33  3003               	movlw	3
 21045  2A34  00F5               	movwf	strncmp@n
 21046  2A35  3000               	movlw	0
 21047  2A36  00F6               	movwf	strncmp@n+1
 21048  2A37  3190  2000  31AA   	fcall	_strncmp
 21049  2A3A  0871               	movf	?_strncmp,w
 21050  2A3B  0472               	iorwf	?_strncmp+1,w
 21051  2A3C  1903               	btfsc	3,2
 21052  2A3D  2A55               	goto	l8053
 21053  2A3E  0021               	movlb	1	; select bank1
 21054  2A3F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21055  2A40  0086               	movwf	6
 21056  2A41  0187               	clrf	7
 21057  2A42  3F40               	moviw [0]fsr1
 21058  2A43  00F1               	movwf	strncmp@_l
 21059  2A44  3F41               	moviw [1]fsr1
 21060  2A45  00F2               	movwf	strncmp@_l+1
 21061  2A46  3024               	movlw	low (STR_38| (0+32768))
 21062  2A47  00F3               	movwf	strncmp@_r
 21063  2A48  30BB               	movlw	high (STR_38| (0+32768))
 21064  2A49  00F4               	movwf	strncmp@_r+1
 21065  2A4A  3003               	movlw	3
 21066  2A4B  00F5               	movwf	strncmp@n
 21067  2A4C  3000               	movlw	0
 21068  2A4D  00F6               	movwf	strncmp@n+1
 21069  2A4E  3190  2000  31AA   	fcall	_strncmp
 21070  2A51  0871               	movf	?_strncmp,w
 21071  2A52  0472               	iorwf	?_strncmp+1,w
 21072  2A53  1D03               	btfss	3,2
 21073  2A54  2AA8               	goto	L18
 21074  2A55                     l8053:	
 21075                           
 21076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21077  2A55  0021               	movlb	1	; select bank1
 21078  2A56  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21079  2A57  0086               	movwf	6
 21080  2A58  0187               	clrf	7
 21081  2A59  3003               	movlw	3
 21082  2A5A  0781               	addwf	1,f
 21083  2A5B  3141               	addfsr 1,1
 21084  2A5C  1803               	skipnc
 21085  2A5D  0A81               	incf	1,f
 21086                           
 21087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21088  2A5E  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21089  2A5F  0086               	movwf	6
 21090  2A60  3001               	movlw	1	; select bank2/3
 21091  2A61  0087               	movwf	7
 21092  2A62  0801               	movf	1,w
 21093  2A63  0084               	movwf	4
 21094  2A64  3001               	movlw	1	; select bank2/3
 21095  2A65  0085               	movwf	5
 21096  2A66  3002               	movlw	2
 21097  2A67  0781               	addwf	1,f
 21098  2A68  0800               	movf	0,w
 21099  2A69  0022               	movlb	2	; select bank2
 21100  2A6A  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21101  2A6B  3980               	andlw	128
 21102  2A6C  1D03               	skipz
 21103  2A6D  30FF               	movlw	255
 21104  2A6E  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21105  2A6F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21106  2A70  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21107  2A71  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21108  2A72  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21109  2A73  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21110  2A74  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21111                           
 21112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21113  2A75  0021               	movlb	1	; select bank1
 21114  2A76  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21115  2A77  0020               	movlb	0	; select bank0
 21116  2A78  00B1               	movwf	dtoa@fp+1
 21117  2A79  0021               	movlb	1	; select bank1
 21118  2A7A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21119  2A7B  0020               	movlb	0	; select bank0
 21120  2A7C  00B0               	movwf	dtoa@fp
 21121  2A7D  0022               	movlb	2	; select bank2
 21122  2A7E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21123  2A7F  0020               	movlb	0	; select bank0
 21124  2A80  00B2               	movwf	dtoa@d
 21125  2A81  0022               	movlb	2	; select bank2
 21126  2A82  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21127  2A83  0020               	movlb	0	; select bank0
 21128  2A84  00B3               	movwf	dtoa@d+1
 21129  2A85  0022               	movlb	2	; select bank2
 21130  2A86  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21131  2A87  0020               	movlb	0	; select bank0
 21132  2A88  00B4               	movwf	dtoa@d+2
 21133  2A89  0022               	movlb	2	; select bank2
 21134  2A8A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21135  2A8B  0020               	movlb	0	; select bank0
 21136  2A8C  00B5               	movwf	dtoa@d+3
 21137  2A8D  0022               	movlb	2	; select bank2
 21138  2A8E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21139  2A8F  0020               	movlb	0	; select bank0
 21140  2A90  00B6               	movwf	dtoa@d+4
 21141  2A91  0022               	movlb	2	; select bank2
 21142  2A92  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21143  2A93  0020               	movlb	0	; select bank0
 21144  2A94  00B7               	movwf	dtoa@d+5
 21145  2A95  0022               	movlb	2	; select bank2
 21146  2A96  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21147  2A97  0020               	movlb	0	; select bank0
 21148  2A98  00B8               	movwf	dtoa@d+6
 21149  2A99  0022               	movlb	2	; select bank2
 21150  2A9A  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21151  2A9B  0020               	movlb	0	; select bank0
 21152  2A9C  00B9               	movwf	dtoa@d+7
 21153  2A9D  319B  2372         	fcall	_dtoa
 21154  2A9F  0020               	movlb	0	; select bank0
 21155  2AA0  0831               	movf	?_dtoa+1,w
 21156  2AA1  0021               	movlb	1	; select bank1
 21157  2AA2  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21158  2AA3  0020               	movlb	0	; select bank0
 21159  2AA4  0830               	movf	?_dtoa,w
 21160  2AA5  0021               	movlb	1	; select bank1
 21161  2AA6  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21162  2AA7  0008               	return
 21163  2AA8                     L18:	
 21164  2AA8                     L17:	
 21165  2AA8  31AA  2AAA         	ljmp	l8061
 21166                           
 21167                           	psect	text7_split_2
 21168  2AAA                     l8061:	
 21169                           
 21170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21171  2AAA  0021               	movlb	1	; select bank1
 21172  2AAB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21173  2AAC  0086               	movwf	6
 21174  2AAD  0187               	clrf	7
 21175  2AAE  3F40               	moviw [0]fsr1
 21176  2AAF  00F1               	movwf	strncmp@_l
 21177  2AB0  3F41               	moviw [1]fsr1
 21178  2AB1  00F2               	movwf	strncmp@_l+1
 21179  2AB2  301D               	movlw	low ((STR_34+1)| (0+32768))
 21180  2AB3  00F3               	movwf	strncmp@_r
 21181  2AB4  30BB               	movlw	high ((STR_34+1)| (0+32768))
 21182  2AB5  00F4               	movwf	strncmp@_r+1
 21183  2AB6  3002               	movlw	2
 21184  2AB7  00F5               	movwf	strncmp@n
 21185  2AB8  3000               	movlw	0
 21186  2AB9  00F6               	movwf	strncmp@n+1
 21187  2ABA  3190  2000  31AA   	fcall	_strncmp
 21188  2ABD  0871               	movf	?_strncmp,w
 21189  2ABE  0472               	iorwf	?_strncmp+1,w
 21190  2ABF  1903               	btfsc	3,2
 21191  2AC0  2AD8               	goto	l8065
 21192  2AC1  0021               	movlb	1	; select bank1
 21193  2AC2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21194  2AC3  0086               	movwf	6
 21195  2AC4  0187               	clrf	7
 21196  2AC5  3F40               	moviw [0]fsr1
 21197  2AC6  00F1               	movwf	strncmp@_l
 21198  2AC7  3F41               	moviw [1]fsr1
 21199  2AC8  00F2               	movwf	strncmp@_l+1
 21200  2AC9  3025               	movlw	low ((STR_38+1)| (0+32768))
 21201  2ACA  00F3               	movwf	strncmp@_r
 21202  2ACB  30BB               	movlw	high ((STR_38+1)| (0+32768))
 21203  2ACC  00F4               	movwf	strncmp@_r+1
 21204  2ACD  3002               	movlw	2
 21205  2ACE  00F5               	movwf	strncmp@n
 21206  2ACF  3000               	movlw	0
 21207  2AD0  00F6               	movwf	strncmp@n+1
 21208  2AD1  3190  2000  31AA   	fcall	_strncmp
 21209  2AD4  0871               	movf	?_strncmp,w
 21210  2AD5  0472               	iorwf	?_strncmp+1,w
 21211  2AD6  1D03               	btfss	3,2
 21212  2AD7  2B30               	goto	L20
 21213  2AD8                     l8065:	
 21214                           
 21215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21216  2AD8  0021               	movlb	1	; select bank1
 21217  2AD9  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21218  2ADA  0086               	movwf	6
 21219  2ADB  0187               	clrf	7
 21220  2ADC  3002               	movlw	2
 21221  2ADD  0781               	addwf	1,f
 21222  2ADE  3141               	addfsr 1,1
 21223  2ADF  1803               	skipnc
 21224  2AE0  0A81               	incf	1,f
 21225                           
 21226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21227  2AE1  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21228  2AE2  0086               	movwf	6
 21229  2AE3  3001               	movlw	1	; select bank2/3
 21230  2AE4  0087               	movwf	7
 21231  2AE5  0801               	movf	1,w
 21232  2AE6  0084               	movwf	4
 21233  2AE7  3001               	movlw	1	; select bank2/3
 21234  2AE8  0085               	movwf	5
 21235  2AE9  3002               	movlw	2
 21236  2AEA  0781               	addwf	1,f
 21237  2AEB  3F00               	moviw [0]fsr0
 21238  2AEC  0022               	movlb	2	; select bank2
 21239  2AED  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21240  2AEE  3F01               	moviw [1]fsr0
 21241  2AEF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21242  2AF0  0820               	movf	??_vfpfcnvrt^(0+256),w
 21243  2AF1  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21244  2AF2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21245  2AF3  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21246  2AF4  0D89               	rlf	9,f
 21247  2AF5  3B89               	subwfb	9,f
 21248  2AF6  0989               	comf	9,f
 21249  2AF7  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21250  2AF8  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21251  2AF9  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21252  2AFA  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21253  2AFB  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21254  2AFC  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21255                           
 21256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21257  2AFD  0021               	movlb	1	; select bank1
 21258  2AFE  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21259  2AFF  0020               	movlb	0	; select bank0
 21260  2B00  00B1               	movwf	dtoa@fp+1
 21261  2B01  0021               	movlb	1	; select bank1
 21262  2B02  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21263  2B03  0020               	movlb	0	; select bank0
 21264  2B04  00B0               	movwf	dtoa@fp
 21265  2B05  0022               	movlb	2	; select bank2
 21266  2B06  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21267  2B07  0020               	movlb	0	; select bank0
 21268  2B08  00B2               	movwf	dtoa@d
 21269  2B09  0022               	movlb	2	; select bank2
 21270  2B0A  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21271  2B0B  0020               	movlb	0	; select bank0
 21272  2B0C  00B3               	movwf	dtoa@d+1
 21273  2B0D  0022               	movlb	2	; select bank2
 21274  2B0E  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21275  2B0F  0020               	movlb	0	; select bank0
 21276  2B10  00B4               	movwf	dtoa@d+2
 21277  2B11  0022               	movlb	2	; select bank2
 21278  2B12  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21279  2B13  0020               	movlb	0	; select bank0
 21280  2B14  00B5               	movwf	dtoa@d+3
 21281  2B15  0022               	movlb	2	; select bank2
 21282  2B16  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21283  2B17  0020               	movlb	0	; select bank0
 21284  2B18  00B6               	movwf	dtoa@d+4
 21285  2B19  0022               	movlb	2	; select bank2
 21286  2B1A  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21287  2B1B  0020               	movlb	0	; select bank0
 21288  2B1C  00B7               	movwf	dtoa@d+5
 21289  2B1D  0022               	movlb	2	; select bank2
 21290  2B1E  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21291  2B1F  0020               	movlb	0	; select bank0
 21292  2B20  00B8               	movwf	dtoa@d+6
 21293  2B21  0022               	movlb	2	; select bank2
 21294  2B22  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21295  2B23  0020               	movlb	0	; select bank0
 21296  2B24  00B9               	movwf	dtoa@d+7
 21297  2B25  319B  2372         	fcall	_dtoa
 21298  2B27  0020               	movlb	0	; select bank0
 21299  2B28  0831               	movf	?_dtoa+1,w
 21300  2B29  0021               	movlb	1	; select bank1
 21301  2B2A  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21302  2B2B  0020               	movlb	0	; select bank0
 21303  2B2C  0830               	movf	?_dtoa,w
 21304  2B2D  0021               	movlb	1	; select bank1
 21305  2B2E  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21306  2B2F  0008               	return
 21307  2B30                     L20:	
 21308  2B30                     L19:	
 21309  2B30  3198  2828         	ljmp	l8073
 21310                           
 21311                           	psect	text7_split_3
 21312  1828                     l8073:	
 21313                           
 21314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21315  1828  0021               	movlb	1	; select bank1
 21316  1829  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21317  182A  0086               	movwf	6
 21318  182B  0187               	clrf	7
 21319  182C  3F40               	moviw [0]fsr1
 21320  182D  0022               	movlb	2	; select bank2
 21321  182E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21322  182F  3F41               	moviw [1]fsr1
 21323  1830  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21324  1831  0820               	movf	??_vfpfcnvrt^(0+256),w
 21325  1832  0084               	movwf	4
 21326  1833  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21327  1834  0085               	movwf	5
 21328  1835  0012               	moviw fsr0++
 21329  1836  3A64               	xorlw	100
 21330  1837  1903               	btfsc	3,2
 21331  1838  284A               	goto	l8077
 21332  1839  0021               	movlb	1	; select bank1
 21333  183A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21334  183B  0086               	movwf	6
 21335  183C  0187               	clrf	7
 21336  183D  3F40               	moviw [0]fsr1
 21337  183E  0022               	movlb	2	; select bank2
 21338  183F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21339  1840  3F41               	moviw [1]fsr1
 21340  1841  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21341  1842  0820               	movf	??_vfpfcnvrt^(0+256),w
 21342  1843  0084               	movwf	4
 21343  1844  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21344  1845  0085               	movwf	5
 21345  1846  0012               	moviw fsr0++
 21346  1847  3A69               	xorlw	105
 21347  1848  1D03               	btfss	3,2
 21348  1849  28A2               	goto	l8085
 21349  184A                     l8077:	
 21350                           
 21351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21352  184A  0021               	movlb	1	; select bank1
 21353  184B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21354  184C  0086               	movwf	6
 21355  184D  0187               	clrf	7
 21356  184E  3001               	movlw	1
 21357  184F  0781               	addwf	1,f
 21358  1850  3141               	addfsr 1,1
 21359  1851  1803               	skipnc
 21360  1852  0A81               	incf	1,f
 21361                           
 21362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21363  1853  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21364  1854  0086               	movwf	6
 21365  1855  3001               	movlw	1	; select bank2/3
 21366  1856  0087               	movwf	7
 21367  1857  0801               	movf	1,w
 21368  1858  0084               	movwf	4
 21369  1859  3001               	movlw	1	; select bank2/3
 21370  185A  0085               	movwf	5
 21371  185B  3002               	movlw	2
 21372  185C  0781               	addwf	1,f
 21373  185D  3F00               	moviw [0]fsr0
 21374  185E  0022               	movlb	2	; select bank2
 21375  185F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21376  1860  3F01               	moviw [1]fsr0
 21377  1861  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21378  1862  0820               	movf	??_vfpfcnvrt^(0+256),w
 21379  1863  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21380  1864  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21381  1865  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21382  1866  0D89               	rlf	9,f
 21383  1867  3B89               	subwfb	9,f
 21384  1868  0989               	comf	9,f
 21385  1869  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21386  186A  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21387  186B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21388  186C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21389  186D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21390  186E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21391                           
 21392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21393  186F  0021               	movlb	1	; select bank1
 21394  1870  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21395  1871  0020               	movlb	0	; select bank0
 21396  1872  00B1               	movwf	dtoa@fp+1
 21397  1873  0021               	movlb	1	; select bank1
 21398  1874  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21399  1875  0020               	movlb	0	; select bank0
 21400  1876  00B0               	movwf	dtoa@fp
 21401  1877  0022               	movlb	2	; select bank2
 21402  1878  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21403  1879  0020               	movlb	0	; select bank0
 21404  187A  00B2               	movwf	dtoa@d
 21405  187B  0022               	movlb	2	; select bank2
 21406  187C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21407  187D  0020               	movlb	0	; select bank0
 21408  187E  00B3               	movwf	dtoa@d+1
 21409  187F  0022               	movlb	2	; select bank2
 21410  1880  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21411  1881  0020               	movlb	0	; select bank0
 21412  1882  00B4               	movwf	dtoa@d+2
 21413  1883  0022               	movlb	2	; select bank2
 21414  1884  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21415  1885  0020               	movlb	0	; select bank0
 21416  1886  00B5               	movwf	dtoa@d+3
 21417  1887  0022               	movlb	2	; select bank2
 21418  1888  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21419  1889  0020               	movlb	0	; select bank0
 21420  188A  00B6               	movwf	dtoa@d+4
 21421  188B  0022               	movlb	2	; select bank2
 21422  188C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21423  188D  0020               	movlb	0	; select bank0
 21424  188E  00B7               	movwf	dtoa@d+5
 21425  188F  0022               	movlb	2	; select bank2
 21426  1890  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21427  1891  0020               	movlb	0	; select bank0
 21428  1892  00B8               	movwf	dtoa@d+6
 21429  1893  0022               	movlb	2	; select bank2
 21430  1894  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21431  1895  0020               	movlb	0	; select bank0
 21432  1896  00B9               	movwf	dtoa@d+7
 21433  1897  319B  2372         	fcall	_dtoa
 21434  1899  0020               	movlb	0	; select bank0
 21435  189A  0831               	movf	?_dtoa+1,w
 21436  189B  0021               	movlb	1	; select bank1
 21437  189C  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21438  189D  0020               	movlb	0	; select bank0
 21439  189E  0830               	movf	?_dtoa,w
 21440  189F  0021               	movlb	1	; select bank1
 21441  18A0  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21442  18A1  0008               	return
 21443  18A2                     l8085:	
 21444                           
 21445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 21446  18A2  0021               	movlb	1	; select bank1
 21447  18A3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21448  18A4  0086               	movwf	6
 21449  18A5  0187               	clrf	7
 21450  18A6  3F40               	moviw [0]fsr1
 21451  18A7  00F1               	movwf	strncmp@_l
 21452  18A8  3F41               	moviw [1]fsr1
 21453  18A9  00F2               	movwf	strncmp@_l+1
 21454  18AA  3042               	movlw	low (STR_52| (0+32768))
 21455  18AB  00F3               	movwf	strncmp@_r
 21456  18AC  30BB               	movlw	high (STR_52| (0+32768))
 21457  18AD  00F4               	movwf	strncmp@_r+1
 21458  18AE  3002               	movlw	2
 21459  18AF  00F5               	movwf	strncmp@n
 21460  18B0  3000               	movlw	0
 21461  18B1  00F6               	movwf	strncmp@n+1
 21462  18B2  3190  2000  3198   	fcall	_strncmp
 21463  18B5  0871               	movf	?_strncmp,w
 21464  18B6  0472               	iorwf	?_strncmp+1,w
 21465  18B7  1903               	btfsc	3,2
 21466  18B8  28D0               	goto	l8089
 21467  18B9  0021               	movlb	1	; select bank1
 21468  18BA  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21469  18BB  0086               	movwf	6
 21470  18BC  0187               	clrf	7
 21471  18BD  3F40               	moviw [0]fsr1
 21472  18BE  00F1               	movwf	strncmp@_l
 21473  18BF  3F41               	moviw [1]fsr1
 21474  18C0  00F2               	movwf	strncmp@_l+1
 21475  18C1  304B               	movlw	low (STR_56| (0+32768))
 21476  18C2  00F3               	movwf	strncmp@_r
 21477  18C3  30BB               	movlw	high (STR_56| (0+32768))
 21478  18C4  00F4               	movwf	strncmp@_r+1
 21479  18C5  3002               	movlw	2
 21480  18C6  00F5               	movwf	strncmp@n
 21481  18C7  3000               	movlw	0
 21482  18C8  00F6               	movwf	strncmp@n+1
 21483  18C9  3190  2000  3198   	fcall	_strncmp
 21484  18CC  0871               	movf	?_strncmp,w
 21485  18CD  0472               	iorwf	?_strncmp+1,w
 21486  18CE  1D03               	btfss	3,2
 21487  18CF  292E               	goto	L22
 21488  18D0                     l8089:	
 21489                           
 21490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 21491  18D0  0021               	movlb	1	; select bank1
 21492  18D1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21493  18D2  0086               	movwf	6
 21494  18D3  0187               	clrf	7
 21495  18D4  3002               	movlw	2
 21496  18D5  0781               	addwf	1,f
 21497  18D6  3141               	addfsr 1,1
 21498  18D7  1803               	skipnc
 21499  18D8  0A81               	incf	1,f
 21500                           
 21501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 21502  18D9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21503  18DA  0086               	movwf	6
 21504  18DB  3001               	movlw	1	; select bank2/3
 21505  18DC  0087               	movwf	7
 21506  18DD  0801               	movf	1,w
 21507  18DE  0084               	movwf	4
 21508  18DF  3001               	movlw	1	; select bank2/3
 21509  18E0  0085               	movwf	5
 21510  18E1  3004               	movlw	4
 21511  18E2  0781               	addwf	1,f
 21512  18E3  3F00               	moviw [0]fsr0
 21513  18E4  0022               	movlb	2	; select bank2
 21514  18E5  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21515  18E6  3F01               	moviw [1]fsr0
 21516  18E7  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21517  18E8  3F02               	moviw [2]fsr0
 21518  18E9  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21519  18EA  3F03               	moviw [3]fsr0
 21520  18EB  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21521  18EC  0820               	movf	??_vfpfcnvrt^(0+256),w
 21522  18ED  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21523  18EE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21524  18EF  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21525  18F0  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21526  18F1  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 21527  18F2  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21528  18F3  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 21529  18F4  3000               	movlw	0
 21530  18F5  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 21531  18F6  30FF               	movlw	255
 21532  18F7  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 21533  18F8  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 21534  18F9  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 21535  18FA  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 21536                           
 21537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 21538  18FB  0021               	movlb	1	; select bank1
 21539  18FC  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21540  18FD  0020               	movlb	0	; select bank0
 21541  18FE  00B1               	movwf	dtoa@fp+1
 21542  18FF  0021               	movlb	1	; select bank1
 21543  1900  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21544  1901  0020               	movlb	0	; select bank0
 21545  1902  00B0               	movwf	dtoa@fp
 21546  1903  0022               	movlb	2	; select bank2
 21547  1904  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21548  1905  0020               	movlb	0	; select bank0
 21549  1906  00B2               	movwf	dtoa@d
 21550  1907  0022               	movlb	2	; select bank2
 21551  1908  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21552  1909  0020               	movlb	0	; select bank0
 21553  190A  00B3               	movwf	dtoa@d+1
 21554  190B  0022               	movlb	2	; select bank2
 21555  190C  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21556  190D  0020               	movlb	0	; select bank0
 21557  190E  00B4               	movwf	dtoa@d+2
 21558  190F  0022               	movlb	2	; select bank2
 21559  1910  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21560  1911  0020               	movlb	0	; select bank0
 21561  1912  00B5               	movwf	dtoa@d+3
 21562  1913  0022               	movlb	2	; select bank2
 21563  1914  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21564  1915  0020               	movlb	0	; select bank0
 21565  1916  00B6               	movwf	dtoa@d+4
 21566  1917  0022               	movlb	2	; select bank2
 21567  1918  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21568  1919  0020               	movlb	0	; select bank0
 21569  191A  00B7               	movwf	dtoa@d+5
 21570  191B  0022               	movlb	2	; select bank2
 21571  191C  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21572  191D  0020               	movlb	0	; select bank0
 21573  191E  00B8               	movwf	dtoa@d+6
 21574  191F  0022               	movlb	2	; select bank2
 21575  1920  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21576  1921  0020               	movlb	0	; select bank0
 21577  1922  00B9               	movwf	dtoa@d+7
 21578  1923  319B  2372         	fcall	_dtoa
 21579  1925  0020               	movlb	0	; select bank0
 21580  1926  0831               	movf	?_dtoa+1,w
 21581  1927  0021               	movlb	1	; select bank1
 21582  1928  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21583  1929  0020               	movlb	0	; select bank0
 21584  192A  0830               	movf	?_dtoa,w
 21585  192B  0021               	movlb	1	; select bank1
 21586  192C  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21587  192D  0008               	return
 21588  192E                     L22:	
 21589  192E                     L21:	
 21590  192E  31A0  28F0         	ljmp	l8097
 21591                           
 21592                           	psect	text7_split_4
 21593  20F0                     l8097:	
 21594                           
 21595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21596  20F0  0021               	movlb	1	; select bank1
 21597  20F1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21598  20F2  0086               	movwf	6
 21599  20F3  0187               	clrf	7
 21600  20F4  3F40               	moviw [0]fsr1
 21601  20F5  00F1               	movwf	strncmp@_l
 21602  20F6  3F41               	moviw [1]fsr1
 21603  20F7  00F2               	movwf	strncmp@_l+1
 21604  20F8  3045               	movlw	low (STR_61| (0+32768))
 21605  20F9  00F3               	movwf	strncmp@_r
 21606  20FA  30BB               	movlw	high (STR_61| (0+32768))
 21607  20FB  00F4               	movwf	strncmp@_r+1
 21608  20FC  3002               	movlw	2
 21609  20FD  00F5               	movwf	strncmp@n
 21610  20FE  3000               	movlw	0
 21611  20FF  00F6               	movwf	strncmp@n+1
 21612  2100  3190  2000  31A0   	fcall	_strncmp
 21613  2103  0871               	movf	?_strncmp,w
 21614  2104  0472               	iorwf	?_strncmp+1,w
 21615  2105  1903               	btfsc	3,2
 21616  2106  291E               	goto	l8101
 21617  2107  0021               	movlb	1	; select bank1
 21618  2108  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21619  2109  0086               	movwf	6
 21620  210A  0187               	clrf	7
 21621  210B  3F40               	moviw [0]fsr1
 21622  210C  00F1               	movwf	strncmp@_l
 21623  210D  3F41               	moviw [1]fsr1
 21624  210E  00F2               	movwf	strncmp@_l+1
 21625  210F  304E               	movlw	low (STR_65| (0+32768))
 21626  2110  00F3               	movwf	strncmp@_r
 21627  2111  30BB               	movlw	high (STR_65| (0+32768))
 21628  2112  00F4               	movwf	strncmp@_r+1
 21629  2113  3002               	movlw	2
 21630  2114  00F5               	movwf	strncmp@n
 21631  2115  3000               	movlw	0
 21632  2116  00F6               	movwf	strncmp@n+1
 21633  2117  3190  2000  31A0   	fcall	_strncmp
 21634  211A  0871               	movf	?_strncmp,w
 21635  211B  0472               	iorwf	?_strncmp+1,w
 21636  211C  1D03               	btfss	3,2
 21637  211D  296F               	goto	l8109
 21638  211E                     l8101:	
 21639                           
 21640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21641  211E  0021               	movlb	1	; select bank1
 21642  211F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21643  2120  0086               	movwf	6
 21644  2121  0187               	clrf	7
 21645  2122  3002               	movlw	2
 21646  2123  0781               	addwf	1,f
 21647  2124  3141               	addfsr 1,1
 21648  2125  1803               	skipnc
 21649  2126  0A81               	incf	1,f
 21650                           
 21651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21652  2127  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21653  2128  0086               	movwf	6
 21654  2129  3001               	movlw	1	; select bank2/3
 21655  212A  0087               	movwf	7
 21656  212B  0801               	movf	1,w
 21657  212C  0084               	movwf	4
 21658  212D  3001               	movlw	1	; select bank2/3
 21659  212E  0085               	movwf	5
 21660  212F  3002               	movlw	2
 21661  2130  0781               	addwf	1,f
 21662  2131  3F00               	moviw [0]fsr0
 21663  2132  0022               	movlb	2	; select bank2
 21664  2133  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 21665  2134  3F01               	moviw [1]fsr0
 21666  2135  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 21667  2136  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 21668  2137  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 21669  2138  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 21670  2139  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 21671  213A  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 21672  213B  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 21673                           
 21674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21675  213C  0021               	movlb	1	; select bank1
 21676  213D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21677  213E  0020               	movlb	0	; select bank0
 21678  213F  00B1               	movwf	dtoa@fp+1
 21679  2140  0021               	movlb	1	; select bank1
 21680  2141  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21681  2142  0020               	movlb	0	; select bank0
 21682  2143  00B0               	movwf	dtoa@fp
 21683  2144  0022               	movlb	2	; select bank2
 21684  2145  083C               	movf	vfpfcnvrt@ll^(0+256),w
 21685  2146  0020               	movlb	0	; select bank0
 21686  2147  00B2               	movwf	dtoa@d
 21687  2148  0022               	movlb	2	; select bank2
 21688  2149  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 21689  214A  0020               	movlb	0	; select bank0
 21690  214B  00B3               	movwf	dtoa@d+1
 21691  214C  0022               	movlb	2	; select bank2
 21692  214D  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 21693  214E  0020               	movlb	0	; select bank0
 21694  214F  00B4               	movwf	dtoa@d+2
 21695  2150  0022               	movlb	2	; select bank2
 21696  2151  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 21697  2152  0020               	movlb	0	; select bank0
 21698  2153  00B5               	movwf	dtoa@d+3
 21699  2154  0022               	movlb	2	; select bank2
 21700  2155  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 21701  2156  0020               	movlb	0	; select bank0
 21702  2157  00B6               	movwf	dtoa@d+4
 21703  2158  0022               	movlb	2	; select bank2
 21704  2159  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 21705  215A  0020               	movlb	0	; select bank0
 21706  215B  00B7               	movwf	dtoa@d+5
 21707  215C  0022               	movlb	2	; select bank2
 21708  215D  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 21709  215E  0020               	movlb	0	; select bank0
 21710  215F  00B8               	movwf	dtoa@d+6
 21711  2160  0022               	movlb	2	; select bank2
 21712  2161  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 21713  2162  0020               	movlb	0	; select bank0
 21714  2163  00B9               	movwf	dtoa@d+7
 21715  2164  319B  2372         	fcall	_dtoa
 21716  2166  0020               	movlb	0	; select bank0
 21717  2167  0831               	movf	?_dtoa+1,w
 21718  2168  0021               	movlb	1	; select bank1
 21719  2169  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21720  216A  0020               	movlb	0	; select bank0
 21721  216B  0830               	movf	?_dtoa,w
 21722  216C  0021               	movlb	1	; select bank1
 21723  216D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21724  216E  0008               	return
 21725  216F                     l8109:	
 21726                           
 21727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 21728  216F  3066               	movlw	102
 21729  2170  0022               	movlb	2	; select bank2
 21730  2171  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 21731  2172  1D03               	btfss	3,2
 21732  2173  29C4               	goto	L24
 21733                           
 21734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 21735  2174  0021               	movlb	1	; select bank1
 21736  2175  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21737  2176  0086               	movwf	6
 21738  2177  0187               	clrf	7
 21739  2178  3F40               	moviw [0]fsr1
 21740  2179  0022               	movlb	2	; select bank2
 21741  217A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21742  217B  3F41               	moviw [1]fsr1
 21743  217C  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21744  217D  0820               	movf	??_vfpfcnvrt^(0+256),w
 21745  217E  0084               	movwf	4
 21746  217F  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21747  2180  0085               	movwf	5
 21748  2181  0800               	movf	0,w	;code access
 21749  2182  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21750  2183  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21751  2184  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21752                           
 21753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 21754  2185  0021               	movlb	1	; select bank1
 21755  2186  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21756  2187  0086               	movwf	6
 21757  2188  0187               	clrf	7
 21758  2189  3001               	movlw	1
 21759  218A  0781               	addwf	1,f
 21760  218B  3141               	addfsr 1,1
 21761  218C  1803               	skipnc
 21762  218D  0A81               	incf	1,f
 21763                           
 21764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 21765  218E  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21766  218F  0086               	movwf	6
 21767  2190  3001               	movlw	1	; select bank2/3
 21768  2191  0087               	movwf	7
 21769  2192  0801               	movf	1,w
 21770  2193  0084               	movwf	4
 21771  2194  3001               	movlw	1	; select bank2/3
 21772  2195  0085               	movwf	5
 21773  2196  3004               	movlw	4
 21774  2197  0781               	addwf	1,f
 21775  2198  3F00               	moviw [0]fsr0
 21776  2199  0022               	movlb	2	; select bank2
 21777  219A  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21778  219B  3F01               	moviw [1]fsr0
 21779  219C  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21780  219D  3F02               	moviw [2]fsr0
 21781  219E  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21782  219F  3F03               	moviw [3]fsr0
 21783  21A0  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 21784                           
 21785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 21786  21A1  0021               	movlb	1	; select bank1
 21787  21A2  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21788  21A3  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 21789  21A4  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21790  21A5  00A0               	movwf	efgtoa@fp^(0+128)
 21791  21A6  0022               	movlb	2	; select bank2
 21792  21A7  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 21793  21A8  0021               	movlb	1	; select bank1
 21794  21A9  00A5               	movwf	(efgtoa@f+3)^(0+128)
 21795  21AA  0022               	movlb	2	; select bank2
 21796  21AB  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 21797  21AC  0021               	movlb	1	; select bank1
 21798  21AD  00A4               	movwf	(efgtoa@f+2)^(0+128)
 21799  21AE  0022               	movlb	2	; select bank2
 21800  21AF  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 21801  21B0  0021               	movlb	1	; select bank1
 21802  21B1  00A3               	movwf	(efgtoa@f+1)^(0+128)
 21803  21B2  0022               	movlb	2	; select bank2
 21804  21B3  0838               	movf	vfpfcnvrt@f^(0+256),w
 21805  21B4  0021               	movlb	1	; select bank1
 21806  21B5  00A2               	movwf	efgtoa@f^(0+128)
 21807  21B6  0022               	movlb	2	; select bank2
 21808  21B7  0845               	movf	vfpfcnvrt@c^(0+256),w
 21809  21B8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21810  21B9  0820               	movf	??_vfpfcnvrt^(0+256),w
 21811  21BA  0021               	movlb	1	; select bank1
 21812  21BB  00A6               	movwf	efgtoa@c^(0+128)
 21813  21BC  3180  2058         	fcall	_efgtoa
 21814  21BE  0021               	movlb	1	; select bank1
 21815  21BF  0821               	movf	(?_efgtoa+1)^(0+128),w
 21816  21C0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21817  21C1  0820               	movf	?_efgtoa^(0+128),w
 21818  21C2  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21819  21C3  0008               	return
 21820  21C4                     L24:	
 21821  21C4                     L23:	
 21822  21C4  31AC  2C69         	ljmp	l8121
 21823                           
 21824                           	psect	text7_split_5
 21825  2C69                     l8121:	
 21826                           
 21827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 21828  2C69  3035               	movlw	low vfpfcnvrt@ct
 21829  2C6A  00F1               	movwf	strncmp@_l
 21830  2C6B  3001               	movlw	high vfpfcnvrt@ct
 21831  2C6C  00F2               	movwf	strncmp@_l+1
 21832  2C6D  3048               	movlw	low (STR_70| (0+32768))
 21833  2C6E  00F3               	movwf	strncmp@_r
 21834  2C6F  30BB               	movlw	high (STR_70| (0+32768))
 21835  2C70  00F4               	movwf	strncmp@_r+1
 21836  2C71  3002               	movlw	2
 21837  2C72  00F5               	movwf	strncmp@n
 21838  2C73  3000               	movlw	0
 21839  2C74  00F6               	movwf	strncmp@n+1
 21840  2C75  3190  2000  31AC   	fcall	_strncmp
 21841  2C78  0871               	movf	?_strncmp,w
 21842  2C79  0472               	iorwf	?_strncmp+1,w
 21843  2C7A  1D03               	btfss	3,2
 21844  2C7B  2D0B               	goto	L26
 21845                           
 21846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 21847  2C7C  0021               	movlb	1	; select bank1
 21848  2C7D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21849  2C7E  0086               	movwf	6
 21850  2C7F  0187               	clrf	7
 21851  2C80  3F40               	moviw [0]fsr1
 21852  2C81  0022               	movlb	2	; select bank2
 21853  2C82  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21854  2C83  3F41               	moviw [1]fsr1
 21855  2C84  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21856  2C85  3001               	movlw	1
 21857  2C86  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21858  2C87  0084               	movwf	4
 21859  2C88  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21860  2C89  1803               	skipnc
 21861  2C8A  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21862  2C8B  0085               	movwf	5
 21863  2C8C  0800               	movf	0,w	;code access
 21864  2C8D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21865  2C8E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21866  2C8F  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21867  2C90  0021               	movlb	1	; select bank1
 21868  2C91  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21869  2C92  0086               	movwf	6
 21870  2C93  0187               	clrf	7
 21871  2C94  3F40               	moviw [0]fsr1
 21872  2C95  0022               	movlb	2	; select bank2
 21873  2C96  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21874  2C97  3F41               	moviw [1]fsr1
 21875  2C98  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21876  2C99  0820               	movf	??_vfpfcnvrt^(0+256),w
 21877  2C9A  0084               	movwf	4
 21878  2C9B  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21879  2C9C  0085               	movwf	5
 21880  2C9D  0800               	movf	0,w	;code access
 21881  2C9E  3EBF               	addlw	191
 21882  2C9F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21883  2CA0  30FF               	movlw	255
 21884  2CA1  1803               	skipnc
 21885  2CA2  3000               	movlw	0
 21886  2CA3  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 21887  2CA4  3000               	movlw	0
 21888  2CA5  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 21889  2CA6  301A               	movlw	26
 21890  2CA7  1903               	skipnz
 21891  2CA8  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 21892  2CA9  1803               	btfsc	3,0
 21893  2CAA  2CAD               	goto	u11700
 21894  2CAB  3001               	movlw	1
 21895  2CAC  2CAE               	goto	u11710
 21896  2CAD                     u11700:	
 21897  2CAD  3000               	movlw	0
 21898  2CAE                     u11710:	
 21899  2CAE  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21900  2CAF  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 21901  2CB0  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21902  2CB1  00B3               	movwf	_vfpfcnvrt$1282^(0+256)
 21903  2CB2  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 21904  2CB3  00B4               	movwf	(_vfpfcnvrt$1282+1)^(0+256)
 21905  2CB4  0833               	movf	_vfpfcnvrt$1282^(0+256),w
 21906  2CB5  0434               	iorwf	(_vfpfcnvrt$1282+1)^(0+256),w
 21907  2CB6  1903               	btfsc	3,2
 21908  2CB7  2CCC               	goto	l8131
 21909                           
 21910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 21911  2CB8  0021               	movlb	1	; select bank1
 21912  2CB9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21913  2CBA  0086               	movwf	6
 21914  2CBB  3001               	movlw	1	; select bank2/3
 21915  2CBC  0087               	movwf	7
 21916  2CBD  0801               	movf	1,w
 21917  2CBE  0084               	movwf	4
 21918  2CBF  3001               	movlw	1	; select bank2/3
 21919  2CC0  0085               	movwf	5
 21920  2CC1  3004               	movlw	4
 21921  2CC2  0781               	addwf	1,f
 21922  2CC3  3F00               	moviw [0]fsr0
 21923  2CC4  0022               	movlb	2	; select bank2
 21924  2CC5  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21925  2CC6  3F01               	moviw [1]fsr0
 21926  2CC7  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21927  2CC8  3F02               	moviw [2]fsr0
 21928  2CC9  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21929  2CCA  3F03               	moviw [3]fsr0
 21930  2CCB  2CDF               	goto	L1
 21931  2CCC                     l8131:	
 21932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 21933                           
 21934                           
 21935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 21936  2CCC  0021               	movlb	1	; select bank1
 21937  2CCD  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21938  2CCE  0086               	movwf	6
 21939  2CCF  3001               	movlw	1	; select bank2/3
 21940  2CD0  0087               	movwf	7
 21941  2CD1  0801               	movf	1,w
 21942  2CD2  0084               	movwf	4
 21943  2CD3  3001               	movlw	1	; select bank2/3
 21944  2CD4  0085               	movwf	5
 21945  2CD5  3004               	movlw	4
 21946  2CD6  0781               	addwf	1,f
 21947  2CD7  3F00               	moviw [0]fsr0
 21948  2CD8  0022               	movlb	2	; select bank2
 21949  2CD9  00B8               	movwf	vfpfcnvrt@f^(0+256)
 21950  2CDA  3F01               	moviw [1]fsr0
 21951  2CDB  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 21952  2CDC  3F02               	moviw [2]fsr0
 21953  2CDD  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 21954  2CDE  3F03               	moviw [3]fsr0
 21955  2CDF                     L1:	
 21956  2CDF  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 21957                           
 21958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 21959  2CE0  0021               	movlb	1	; select bank1
 21960  2CE1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21961  2CE2  0086               	movwf	6
 21962  2CE3  0187               	clrf	7
 21963  2CE4  3002               	movlw	2
 21964  2CE5  0781               	addwf	1,f
 21965  2CE6  3141               	addfsr 1,1
 21966  2CE7  1803               	skipnc
 21967  2CE8  0A81               	incf	1,f
 21968                           
 21969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 21970  2CE9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21971  2CEA  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 21972  2CEB  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21973  2CEC  00A0               	movwf	efgtoa@fp^(0+128)
 21974  2CED  0022               	movlb	2	; select bank2
 21975  2CEE  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 21976  2CEF  0021               	movlb	1	; select bank1
 21977  2CF0  00A5               	movwf	(efgtoa@f+3)^(0+128)
 21978  2CF1  0022               	movlb	2	; select bank2
 21979  2CF2  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 21980  2CF3  0021               	movlb	1	; select bank1
 21981  2CF4  00A4               	movwf	(efgtoa@f+2)^(0+128)
 21982  2CF5  0022               	movlb	2	; select bank2
 21983  2CF6  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 21984  2CF7  0021               	movlb	1	; select bank1
 21985  2CF8  00A3               	movwf	(efgtoa@f+1)^(0+128)
 21986  2CF9  0022               	movlb	2	; select bank2
 21987  2CFA  0838               	movf	vfpfcnvrt@f^(0+256),w
 21988  2CFB  0021               	movlb	1	; select bank1
 21989  2CFC  00A2               	movwf	efgtoa@f^(0+128)
 21990  2CFD  0022               	movlb	2	; select bank2
 21991  2CFE  0845               	movf	vfpfcnvrt@c^(0+256),w
 21992  2CFF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21993  2D00  0820               	movf	??_vfpfcnvrt^(0+256),w
 21994  2D01  0021               	movlb	1	; select bank1
 21995  2D02  00A6               	movwf	efgtoa@c^(0+128)
 21996  2D03  3180  2058         	fcall	_efgtoa
 21997  2D05  0021               	movlb	1	; select bank1
 21998  2D06  0821               	movf	(?_efgtoa+1)^(0+128),w
 21999  2D07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22000  2D08  0820               	movf	?_efgtoa^(0+128),w
 22001  2D09  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22002  2D0A  0008               	return
 22003  2D0B                     L26:	
 22004  2D0B                     L25:	
 22005  2D0B  31AF  2F2F         	ljmp	l8139
 22006                           
 22007                           	psect	text7_split_6
 22008  2F2F                     l8139:	
 22009                           
 22010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 22011  2F2F  0021               	movlb	1	; select bank1
 22012  2F30  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22013  2F31  0086               	movwf	6
 22014  2F32  0187               	clrf	7
 22015  2F33  3F40               	moviw [0]fsr1
 22016  2F34  00F1               	movwf	strncmp@_l
 22017  2F35  3F41               	moviw [1]fsr1
 22018  2F36  00F2               	movwf	strncmp@_l+1
 22019  2F37  3030               	movlw	low (STR_75| (0+32768))
 22020  2F38  00F3               	movwf	strncmp@_r
 22021  2F39  30BB               	movlw	high (STR_75| (0+32768))
 22022  2F3A  00F4               	movwf	strncmp@_r+1
 22023  2F3B  3003               	movlw	3
 22024  2F3C  00F5               	movwf	strncmp@n
 22025  2F3D  3000               	movlw	0
 22026  2F3E  00F6               	movwf	strncmp@n+1
 22027  2F3F  3190  2000  31AF   	fcall	_strncmp
 22028  2F42  0871               	movf	?_strncmp,w
 22029  2F43  0472               	iorwf	?_strncmp+1,w
 22030  2F44  1D03               	btfss	3,2
 22031  2F45  2F96               	goto	l8149
 22032                           
 22033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 22034  2F46  0021               	movlb	1	; select bank1
 22035  2F47  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22036  2F48  0086               	movwf	6
 22037  2F49  0187               	clrf	7
 22038  2F4A  3003               	movlw	3
 22039  2F4B  0781               	addwf	1,f
 22040  2F4C  3141               	addfsr 1,1
 22041  2F4D  1803               	skipnc
 22042  2F4E  0A81               	incf	1,f
 22043                           
 22044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22045  2F4F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22046  2F50  0086               	movwf	6
 22047  2F51  3001               	movlw	1	; select bank2/3
 22048  2F52  0087               	movwf	7
 22049  2F53  0801               	movf	1,w
 22050  2F54  0084               	movwf	4
 22051  2F55  3001               	movlw	1	; select bank2/3
 22052  2F56  0085               	movwf	5
 22053  2F57  3002               	movlw	2
 22054  2F58  0781               	addwf	1,f
 22055  2F59  0800               	movf	0,w
 22056  2F5A  0022               	movlb	2	; select bank2
 22057  2F5B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22058  2F5C  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 22059  2F5D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22060  2F5E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22061  2F5F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22062  2F60  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22063  2F61  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22064  2F62  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22065                           
 22066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 22067  2F63  0021               	movlb	1	; select bank1
 22068  2F64  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22069  2F65  0020               	movlb	0	; select bank0
 22070  2F66  00B1               	movwf	otoa@fp+1
 22071  2F67  0021               	movlb	1	; select bank1
 22072  2F68  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22073  2F69  0020               	movlb	0	; select bank0
 22074  2F6A  00B0               	movwf	otoa@fp
 22075  2F6B  0022               	movlb	2	; select bank2
 22076  2F6C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22077  2F6D  0020               	movlb	0	; select bank0
 22078  2F6E  00B2               	movwf	otoa@d
 22079  2F6F  0022               	movlb	2	; select bank2
 22080  2F70  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22081  2F71  0020               	movlb	0	; select bank0
 22082  2F72  00B3               	movwf	otoa@d+1
 22083  2F73  0022               	movlb	2	; select bank2
 22084  2F74  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22085  2F75  0020               	movlb	0	; select bank0
 22086  2F76  00B4               	movwf	otoa@d+2
 22087  2F77  0022               	movlb	2	; select bank2
 22088  2F78  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22089  2F79  0020               	movlb	0	; select bank0
 22090  2F7A  00B5               	movwf	otoa@d+3
 22091  2F7B  0022               	movlb	2	; select bank2
 22092  2F7C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22093  2F7D  0020               	movlb	0	; select bank0
 22094  2F7E  00B6               	movwf	otoa@d+4
 22095  2F7F  0022               	movlb	2	; select bank2
 22096  2F80  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22097  2F81  0020               	movlb	0	; select bank0
 22098  2F82  00B7               	movwf	otoa@d+5
 22099  2F83  0022               	movlb	2	; select bank2
 22100  2F84  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22101  2F85  0020               	movlb	0	; select bank0
 22102  2F86  00B8               	movwf	otoa@d+6
 22103  2F87  0022               	movlb	2	; select bank2
 22104  2F88  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22105  2F89  0020               	movlb	0	; select bank0
 22106  2F8A  00B9               	movwf	otoa@d+7
 22107  2F8B  31A6  261C         	fcall	_otoa
 22108  2F8D  0020               	movlb	0	; select bank0
 22109  2F8E  0831               	movf	?_otoa+1,w
 22110  2F8F  0021               	movlb	1	; select bank1
 22111  2F90  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22112  2F91  0020               	movlb	0	; select bank0
 22113  2F92  0830               	movf	?_otoa,w
 22114  2F93  0021               	movlb	1	; select bank1
 22115  2F94  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22116  2F95  0008               	return
 22117  2F96                     l8149:	
 22118                           
 22119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 22120  2F96  0021               	movlb	1	; select bank1
 22121  2F97  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22122  2F98  0086               	movwf	6
 22123  2F99  0187               	clrf	7
 22124  2F9A  3F40               	moviw [0]fsr1
 22125  2F9B  00F1               	movwf	strncmp@_l
 22126  2F9C  3F41               	moviw [1]fsr1
 22127  2F9D  00F2               	movwf	strncmp@_l+1
 22128  2F9E  3031               	movlw	low ((STR_75+1)| (0+32768))
 22129  2F9F  00F3               	movwf	strncmp@_r
 22130  2FA0  30BB               	movlw	high ((STR_75+1)| (0+32768))
 22131  2FA1  00F4               	movwf	strncmp@_r+1
 22132  2FA2  3002               	movlw	2
 22133  2FA3  00F5               	movwf	strncmp@n
 22134  2FA4  3000               	movlw	0
 22135  2FA5  00F6               	movwf	strncmp@n+1
 22136  2FA6  3190  2000  31AF   	fcall	_strncmp
 22137  2FA9  0871               	movf	?_strncmp,w
 22138  2FAA  0472               	iorwf	?_strncmp+1,w
 22139  2FAB  1D03               	btfss	3,2
 22140  2FAC  2FFE               	goto	L28
 22141                           
 22142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 22143  2FAD  0021               	movlb	1	; select bank1
 22144  2FAE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22145  2FAF  0086               	movwf	6
 22146  2FB0  0187               	clrf	7
 22147  2FB1  3002               	movlw	2
 22148  2FB2  0781               	addwf	1,f
 22149  2FB3  3141               	addfsr 1,1
 22150  2FB4  1803               	skipnc
 22151  2FB5  0A81               	incf	1,f
 22152                           
 22153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22154  2FB6  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22155  2FB7  0086               	movwf	6
 22156  2FB8  3001               	movlw	1	; select bank2/3
 22157  2FB9  0087               	movwf	7
 22158  2FBA  0801               	movf	1,w
 22159  2FBB  0084               	movwf	4
 22160  2FBC  3001               	movlw	1	; select bank2/3
 22161  2FBD  0085               	movwf	5
 22162  2FBE  3002               	movlw	2
 22163  2FBF  0781               	addwf	1,f
 22164  2FC0  3F00               	moviw [0]fsr0
 22165  2FC1  0022               	movlb	2	; select bank2
 22166  2FC2  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22167  2FC3  3F01               	moviw [1]fsr0
 22168  2FC4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22169  2FC5  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22170  2FC6  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22171  2FC7  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22172  2FC8  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22173  2FC9  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22174  2FCA  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22175                           
 22176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 22177  2FCB  0021               	movlb	1	; select bank1
 22178  2FCC  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22179  2FCD  0020               	movlb	0	; select bank0
 22180  2FCE  00B1               	movwf	otoa@fp+1
 22181  2FCF  0021               	movlb	1	; select bank1
 22182  2FD0  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22183  2FD1  0020               	movlb	0	; select bank0
 22184  2FD2  00B0               	movwf	otoa@fp
 22185  2FD3  0022               	movlb	2	; select bank2
 22186  2FD4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22187  2FD5  0020               	movlb	0	; select bank0
 22188  2FD6  00B2               	movwf	otoa@d
 22189  2FD7  0022               	movlb	2	; select bank2
 22190  2FD8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22191  2FD9  0020               	movlb	0	; select bank0
 22192  2FDA  00B3               	movwf	otoa@d+1
 22193  2FDB  0022               	movlb	2	; select bank2
 22194  2FDC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22195  2FDD  0020               	movlb	0	; select bank0
 22196  2FDE  00B4               	movwf	otoa@d+2
 22197  2FDF  0022               	movlb	2	; select bank2
 22198  2FE0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22199  2FE1  0020               	movlb	0	; select bank0
 22200  2FE2  00B5               	movwf	otoa@d+3
 22201  2FE3  0022               	movlb	2	; select bank2
 22202  2FE4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22203  2FE5  0020               	movlb	0	; select bank0
 22204  2FE6  00B6               	movwf	otoa@d+4
 22205  2FE7  0022               	movlb	2	; select bank2
 22206  2FE8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22207  2FE9  0020               	movlb	0	; select bank0
 22208  2FEA  00B7               	movwf	otoa@d+5
 22209  2FEB  0022               	movlb	2	; select bank2
 22210  2FEC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22211  2FED  0020               	movlb	0	; select bank0
 22212  2FEE  00B8               	movwf	otoa@d+6
 22213  2FEF  0022               	movlb	2	; select bank2
 22214  2FF0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22215  2FF1  0020               	movlb	0	; select bank0
 22216  2FF2  00B9               	movwf	otoa@d+7
 22217  2FF3  31A6  261C         	fcall	_otoa
 22218  2FF5  0020               	movlb	0	; select bank0
 22219  2FF6  0831               	movf	?_otoa+1,w
 22220  2FF7  0021               	movlb	1	; select bank1
 22221  2FF8  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22222  2FF9  0020               	movlb	0	; select bank0
 22223  2FFA  0830               	movf	?_otoa,w
 22224  2FFB  0021               	movlb	1	; select bank1
 22225  2FFC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22226  2FFD  0008               	return
 22227  2FFE                     L28:	
 22228  2FFE                     L27:	
 22229  2FFE  31A5  2D36         	ljmp	l8159
 22230                           
 22231                           	psect	text7_split_7
 22232  2536                     l8159:	
 22233                           
 22234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 22235  2536  0021               	movlb	1	; select bank1
 22236  2537  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22237  2538  0086               	movwf	6
 22238  2539  0187               	clrf	7
 22239  253A  3F40               	moviw [0]fsr1
 22240  253B  0022               	movlb	2	; select bank2
 22241  253C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22242  253D  3F41               	moviw [1]fsr1
 22243  253E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22244  253F  0820               	movf	??_vfpfcnvrt^(0+256),w
 22245  2540  0084               	movwf	4
 22246  2541  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22247  2542  0085               	movwf	5
 22248  2543  0012               	moviw fsr0++
 22249  2544  3A6F               	xorlw	111
 22250  2545  1D03               	btfss	3,2
 22251  2546  2D98               	goto	l8169
 22252                           
 22253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 22254  2547  0021               	movlb	1	; select bank1
 22255  2548  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22256  2549  0086               	movwf	6
 22257  254A  0187               	clrf	7
 22258  254B  3001               	movlw	1
 22259  254C  0781               	addwf	1,f
 22260  254D  3141               	addfsr 1,1
 22261  254E  1803               	skipnc
 22262  254F  0A81               	incf	1,f
 22263                           
 22264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 22265  2550  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22266  2551  0086               	movwf	6
 22267  2552  3001               	movlw	1	; select bank2/3
 22268  2553  0087               	movwf	7
 22269  2554  0801               	movf	1,w
 22270  2555  0084               	movwf	4
 22271  2556  3001               	movlw	1	; select bank2/3
 22272  2557  0085               	movwf	5
 22273  2558  3002               	movlw	2
 22274  2559  0781               	addwf	1,f
 22275  255A  3F00               	moviw [0]fsr0
 22276  255B  0022               	movlb	2	; select bank2
 22277  255C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22278  255D  3F01               	moviw [1]fsr0
 22279  255E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22280  255F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22281  2560  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22282  2561  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22283  2562  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22284  2563  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22285  2564  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22286                           
 22287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 22288  2565  0021               	movlb	1	; select bank1
 22289  2566  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22290  2567  0020               	movlb	0	; select bank0
 22291  2568  00B1               	movwf	otoa@fp+1
 22292  2569  0021               	movlb	1	; select bank1
 22293  256A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22294  256B  0020               	movlb	0	; select bank0
 22295  256C  00B0               	movwf	otoa@fp
 22296  256D  0022               	movlb	2	; select bank2
 22297  256E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22298  256F  0020               	movlb	0	; select bank0
 22299  2570  00B2               	movwf	otoa@d
 22300  2571  0022               	movlb	2	; select bank2
 22301  2572  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22302  2573  0020               	movlb	0	; select bank0
 22303  2574  00B3               	movwf	otoa@d+1
 22304  2575  0022               	movlb	2	; select bank2
 22305  2576  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22306  2577  0020               	movlb	0	; select bank0
 22307  2578  00B4               	movwf	otoa@d+2
 22308  2579  0022               	movlb	2	; select bank2
 22309  257A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22310  257B  0020               	movlb	0	; select bank0
 22311  257C  00B5               	movwf	otoa@d+3
 22312  257D  0022               	movlb	2	; select bank2
 22313  257E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22314  257F  0020               	movlb	0	; select bank0
 22315  2580  00B6               	movwf	otoa@d+4
 22316  2581  0022               	movlb	2	; select bank2
 22317  2582  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22318  2583  0020               	movlb	0	; select bank0
 22319  2584  00B7               	movwf	otoa@d+5
 22320  2585  0022               	movlb	2	; select bank2
 22321  2586  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22322  2587  0020               	movlb	0	; select bank0
 22323  2588  00B8               	movwf	otoa@d+6
 22324  2589  0022               	movlb	2	; select bank2
 22325  258A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22326  258B  0020               	movlb	0	; select bank0
 22327  258C  00B9               	movwf	otoa@d+7
 22328  258D  31A6  261C         	fcall	_otoa
 22329  258F  0020               	movlb	0	; select bank0
 22330  2590  0831               	movf	?_otoa+1,w
 22331  2591  0021               	movlb	1	; select bank1
 22332  2592  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22333  2593  0020               	movlb	0	; select bank0
 22334  2594  0830               	movf	?_otoa,w
 22335  2595  0021               	movlb	1	; select bank1
 22336  2596  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22337  2597  0008               	return
 22338  2598                     l8169:	
 22339                           
 22340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 22341  2598  0021               	movlb	1	; select bank1
 22342  2599  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22343  259A  0086               	movwf	6
 22344  259B  0187               	clrf	7
 22345  259C  3F40               	moviw [0]fsr1
 22346  259D  00F1               	movwf	strncmp@_l
 22347  259E  3F41               	moviw [1]fsr1
 22348  259F  00F2               	movwf	strncmp@_l+1
 22349  25A0  3057               	movlw	low (STR_85| (0+32768))
 22350  25A1  00F3               	movwf	strncmp@_r
 22351  25A2  30BB               	movlw	high (STR_85| (0+32768))
 22352  25A3  00F4               	movwf	strncmp@_r+1
 22353  25A4  3002               	movlw	2
 22354  25A5  00F5               	movwf	strncmp@n
 22355  25A6  3000               	movlw	0
 22356  25A7  00F6               	movwf	strncmp@n+1
 22357  25A8  3190  2000  31A5   	fcall	_strncmp
 22358  25AB  0871               	movf	?_strncmp,w
 22359  25AC  0472               	iorwf	?_strncmp+1,w
 22360  25AD  1D03               	btfss	3,2
 22361  25AE  2E1A               	goto	L30
 22362                           
 22363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 22364  25AF  0021               	movlb	1	; select bank1
 22365  25B0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22366  25B1  0086               	movwf	6
 22367  25B2  0187               	clrf	7
 22368  25B3  3002               	movlw	2
 22369  25B4  0781               	addwf	1,f
 22370  25B5  3141               	addfsr 1,1
 22371  25B6  1803               	skipnc
 22372  25B7  0A81               	incf	1,f
 22373                           
 22374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 22375  25B8  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22376  25B9  0086               	movwf	6
 22377  25BA  3001               	movlw	1	; select bank2/3
 22378  25BB  0087               	movwf	7
 22379  25BC  0801               	movf	1,w
 22380  25BD  0084               	movwf	4
 22381  25BE  3001               	movlw	1	; select bank2/3
 22382  25BF  0085               	movwf	5
 22383  25C0  3004               	movlw	4
 22384  25C1  0781               	addwf	1,f
 22385  25C2  3F00               	moviw [0]fsr0
 22386  25C3  0022               	movlb	2	; select bank2
 22387  25C4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22388  25C5  3F01               	moviw [1]fsr0
 22389  25C6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22390  25C7  3F02               	moviw [2]fsr0
 22391  25C8  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22392  25C9  3F03               	moviw [3]fsr0
 22393  25CA  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22394  25CB  0820               	movf	??_vfpfcnvrt^(0+256),w
 22395  25CC  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22396  25CD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22397  25CE  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 22398  25CF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22399  25D0  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 22400  25D1  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22401  25D2  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 22402  25D3  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 22403  25D4  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 22404  25D5  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 22405  25D6  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 22406  25D7  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 22407  25D8  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22408  25D9  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 22409  25DA  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22410  25DB  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 22411  25DC  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22412  25DD  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 22413  25DE  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22414  25DF  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 22415  25E0  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22416  25E1  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 22417  25E2  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22418  25E3  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 22419  25E4  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22420  25E5  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22421  25E6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22422                           
 22423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 22424  25E7  0021               	movlb	1	; select bank1
 22425  25E8  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22426  25E9  0020               	movlb	0	; select bank0
 22427  25EA  00B1               	movwf	otoa@fp+1
 22428  25EB  0021               	movlb	1	; select bank1
 22429  25EC  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22430  25ED  0020               	movlb	0	; select bank0
 22431  25EE  00B0               	movwf	otoa@fp
 22432  25EF  0022               	movlb	2	; select bank2
 22433  25F0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22434  25F1  0020               	movlb	0	; select bank0
 22435  25F2  00B2               	movwf	otoa@d
 22436  25F3  0022               	movlb	2	; select bank2
 22437  25F4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22438  25F5  0020               	movlb	0	; select bank0
 22439  25F6  00B3               	movwf	otoa@d+1
 22440  25F7  0022               	movlb	2	; select bank2
 22441  25F8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22442  25F9  0020               	movlb	0	; select bank0
 22443  25FA  00B4               	movwf	otoa@d+2
 22444  25FB  0022               	movlb	2	; select bank2
 22445  25FC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22446  25FD  0020               	movlb	0	; select bank0
 22447  25FE  00B5               	movwf	otoa@d+3
 22448  25FF  0022               	movlb	2	; select bank2
 22449  2600  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22450  2601  0020               	movlb	0	; select bank0
 22451  2602  00B6               	movwf	otoa@d+4
 22452  2603  0022               	movlb	2	; select bank2
 22453  2604  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22454  2605  0020               	movlb	0	; select bank0
 22455  2606  00B7               	movwf	otoa@d+5
 22456  2607  0022               	movlb	2	; select bank2
 22457  2608  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22458  2609  0020               	movlb	0	; select bank0
 22459  260A  00B8               	movwf	otoa@d+6
 22460  260B  0022               	movlb	2	; select bank2
 22461  260C  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22462  260D  0020               	movlb	0	; select bank0
 22463  260E  00B9               	movwf	otoa@d+7
 22464  260F  31A6  261C         	fcall	_otoa
 22465  2611  0020               	movlb	0	; select bank0
 22466  2612  0831               	movf	?_otoa+1,w
 22467  2613  0021               	movlb	1	; select bank1
 22468  2614  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22469  2615  0020               	movlb	0	; select bank0
 22470  2616  0830               	movf	?_otoa,w
 22471  2617  0021               	movlb	1	; select bank1
 22472  2618  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22473  2619  0008               	return
 22474  261A                     L30:	
 22475  261A                     L29:	
 22476  261A  3188  283F         	ljmp	l8179
 22477                           
 22478                           	psect	text7_split_8
 22479  083F                     l8179:	
 22480                           
 22481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22482  083F  0021               	movlb	1	; select bank1
 22483  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22484  0841  0086               	movwf	6
 22485  0842  0187               	clrf	7
 22486  0843  3F40               	moviw [0]fsr1
 22487  0844  00F1               	movwf	strncmp@_l
 22488  0845  3F41               	moviw [1]fsr1
 22489  0846  00F2               	movwf	strncmp@_l+1
 22490  0847  305A               	movlw	low (STR_90| (0+32768))
 22491  0848  00F3               	movwf	strncmp@_r
 22492  0849  30BB               	movlw	high (STR_90| (0+32768))
 22493  084A  00F4               	movwf	strncmp@_r+1
 22494  084B  3002               	movlw	2
 22495  084C  00F5               	movwf	strncmp@n
 22496  084D  3000               	movlw	0
 22497  084E  00F6               	movwf	strncmp@n+1
 22498  084F  3190  2000  3188   	fcall	_strncmp
 22499  0852  0871               	movf	?_strncmp,w
 22500  0853  0472               	iorwf	?_strncmp+1,w
 22501  0854  1D03               	btfss	3,2
 22502  0855  28A7               	goto	l8189
 22503                           
 22504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22505  0856  0021               	movlb	1	; select bank1
 22506  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22507  0858  0086               	movwf	6
 22508  0859  0187               	clrf	7
 22509  085A  3002               	movlw	2
 22510  085B  0781               	addwf	1,f
 22511  085C  3141               	addfsr 1,1
 22512  085D  1803               	skipnc
 22513  085E  0A81               	incf	1,f
 22514                           
 22515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22516  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22517  0860  0086               	movwf	6
 22518  0861  3001               	movlw	1	; select bank2/3
 22519  0862  0087               	movwf	7
 22520  0863  0801               	movf	1,w
 22521  0864  0084               	movwf	4
 22522  0865  3001               	movlw	1	; select bank2/3
 22523  0866  0085               	movwf	5
 22524  0867  3002               	movlw	2
 22525  0868  0781               	addwf	1,f
 22526  0869  3F00               	moviw [0]fsr0
 22527  086A  0022               	movlb	2	; select bank2
 22528  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22529  086C  3F01               	moviw [1]fsr0
 22530  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22531  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 22532  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 22533  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 22534  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 22535  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 22536  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 22537                           
 22538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22539  0874  0021               	movlb	1	; select bank1
 22540  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22541  0876  0020               	movlb	0	; select bank0
 22542  0877  00B1               	movwf	otoa@fp+1
 22543  0878  0021               	movlb	1	; select bank1
 22544  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22545  087A  0020               	movlb	0	; select bank0
 22546  087B  00B0               	movwf	otoa@fp
 22547  087C  0022               	movlb	2	; select bank2
 22548  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 22549  087E  0020               	movlb	0	; select bank0
 22550  087F  00B2               	movwf	otoa@d
 22551  0880  0022               	movlb	2	; select bank2
 22552  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 22553  0882  0020               	movlb	0	; select bank0
 22554  0883  00B3               	movwf	otoa@d+1
 22555  0884  0022               	movlb	2	; select bank2
 22556  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 22557  0886  0020               	movlb	0	; select bank0
 22558  0887  00B4               	movwf	otoa@d+2
 22559  0888  0022               	movlb	2	; select bank2
 22560  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 22561  088A  0020               	movlb	0	; select bank0
 22562  088B  00B5               	movwf	otoa@d+3
 22563  088C  0022               	movlb	2	; select bank2
 22564  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 22565  088E  0020               	movlb	0	; select bank0
 22566  088F  00B6               	movwf	otoa@d+4
 22567  0890  0022               	movlb	2	; select bank2
 22568  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 22569  0892  0020               	movlb	0	; select bank0
 22570  0893  00B7               	movwf	otoa@d+5
 22571  0894  0022               	movlb	2	; select bank2
 22572  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 22573  0896  0020               	movlb	0	; select bank0
 22574  0897  00B8               	movwf	otoa@d+6
 22575  0898  0022               	movlb	2	; select bank2
 22576  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 22577  089A  0020               	movlb	0	; select bank0
 22578  089B  00B9               	movwf	otoa@d+7
 22579  089C  31A6  261C         	fcall	_otoa
 22580  089E  0020               	movlb	0	; select bank0
 22581  089F  0831               	movf	?_otoa+1,w
 22582  08A0  0021               	movlb	1	; select bank1
 22583  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22584  08A2  0020               	movlb	0	; select bank0
 22585  08A3  0830               	movf	?_otoa,w
 22586  08A4  0021               	movlb	1	; select bank1
 22587  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 22588  08A6  0008               	return
 22589  08A7                     l8189:	
 22590                           
 22591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22592  08A7  0021               	movlb	1	; select bank1
 22593  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22594  08A9  0086               	movwf	6
 22595  08AA  0187               	clrf	7
 22596  08AB  3F40               	moviw [0]fsr1
 22597  08AC  00F1               	movwf	strncmp@_l
 22598  08AD  3F41               	moviw [1]fsr1
 22599  08AE  00F2               	movwf	strncmp@_l+1
 22600  08AF  302C               	movlw	low (STR_95| (0+32768))
 22601  08B0  00F3               	movwf	strncmp@_r
 22602  08B1  30BB               	movlw	high (STR_95| (0+32768))
 22603  08B2  00F4               	movwf	strncmp@_r+1
 22604  08B3  3003               	movlw	3
 22605  08B4  00F5               	movwf	strncmp@n
 22606  08B5  3000               	movlw	0
 22607  08B6  00F6               	movwf	strncmp@n+1
 22608  08B7  3190  2000  3188   	fcall	_strncmp
 22609  08BA  0871               	movf	?_strncmp,w
 22610  08BB  0472               	iorwf	?_strncmp+1,w
 22611  08BC  1D03               	btfss	3,2
 22612  08BD  2977               	goto	l8201
 22613                           
 22614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22615  08BE  0021               	movlb	1	; select bank1
 22616  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22617  08C0  0086               	movwf	6
 22618  08C1  0187               	clrf	7
 22619  08C2  3003               	movlw	3
 22620  08C3  0781               	addwf	1,f
 22621  08C4  3141               	addfsr 1,1
 22622  08C5  1803               	skipnc
 22623  08C6  0A81               	incf	1,f
 22624                           
 22625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22626  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22627  08C8  0086               	movwf	6
 22628  08C9  3001               	movlw	1	; select bank2/3
 22629  08CA  0087               	movwf	7
 22630  08CB  3F40               	moviw [0]fsr1
 22631  08CC  0084               	movwf	4
 22632  08CD  3001               	movlw	1	; select bank2/3
 22633  08CE  0085               	movwf	5
 22634  08CF  0A81               	incf	1,f
 22635  08D0  0800               	movf	0,w
 22636  08D1  0022               	movlb	2	; select bank2
 22637  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22638  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 22639  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22640                           
 22641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22642  08D5  0023               	movlb	3	; select bank3
 22643  08D6  083C               	movf	_nout^(0+384),w
 22644  08D7  0022               	movlb	2	; select bank2
 22645  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22646  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22647  08DA  0086               	movwf	6
 22648  08DB  3001               	movlw	1	; select bank2/3
 22649  08DC  0087               	movwf	7
 22650  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 22651  08DE  0081               	movwf	1
 22652  08DF  2973               	goto	l8197
 22653  08E0                     l8203:	
 22654                           
 22655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22656  08E0  0021               	movlb	1	; select bank1
 22657  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22658  08E2  0086               	movwf	6
 22659  08E3  0187               	clrf	7
 22660  08E4  3002               	movlw	2
 22661  08E5  0781               	addwf	1,f
 22662  08E6  3141               	addfsr 1,1
 22663  08E7  1803               	skipnc
 22664  08E8  0A81               	incf	1,f
 22665                           
 22666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22667  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22668  08EA  0086               	movwf	6
 22669  08EB  3001               	movlw	1	; select bank2/3
 22670  08EC  0087               	movwf	7
 22671  08ED  3F40               	moviw [0]fsr1
 22672  08EE  0084               	movwf	4
 22673  08EF  3001               	movlw	1	; select bank2/3
 22674  08F0  0085               	movwf	5
 22675  08F1  0A81               	incf	1,f
 22676  08F2  0800               	movf	0,w
 22677  08F3  0022               	movlb	2	; select bank2
 22678  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22679  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 22680  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22681                           
 22682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22683  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22684  08F8  0086               	movwf	6
 22685  08F9  3001               	movlw	1	; select bank2/3
 22686  08FA  0087               	movwf	7
 22687  08FB  0023               	movlb	3	; select bank3
 22688  08FC  083C               	movf	_nout^(0+384),w
 22689  08FD  3FC0               	movwi [0]fsr1
 22690  08FE  083D               	movf	(_nout+1)^(0+384),w
 22691  08FF  3FC1               	movwi [1]fsr1
 22692  0900  2973               	goto	l8197
 22693  0901                     l8215:	
 22694                           
 22695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22696  0901  0021               	movlb	1	; select bank1
 22697  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22698  0903  0086               	movwf	6
 22699  0904  0187               	clrf	7
 22700  0905  3001               	movlw	1
 22701  0906  0781               	addwf	1,f
 22702  0907  3141               	addfsr 1,1
 22703  0908  1803               	skipnc
 22704  0909  0A81               	incf	1,f
 22705                           
 22706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22707  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22708  090B  0086               	movwf	6
 22709  090C  3001               	movlw	1	; select bank2/3
 22710  090D  0087               	movwf	7
 22711  090E  3F40               	moviw [0]fsr1
 22712  090F  0084               	movwf	4
 22713  0910  3001               	movlw	1	; select bank2/3
 22714  0911  0085               	movwf	5
 22715  0912  0A81               	incf	1,f
 22716  0913  0800               	movf	0,w
 22717  0914  0022               	movlb	2	; select bank2
 22718  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22719  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 22720  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22721                           
 22722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22723  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22724  0919  0086               	movwf	6
 22725  091A  3001               	movlw	1	; select bank2/3
 22726  091B  0087               	movwf	7
 22727  091C  0023               	movlb	3	; select bank3
 22728  091D  083C               	movf	_nout^(0+384),w
 22729  091E  3FC0               	movwi [0]fsr1
 22730  091F  083D               	movf	(_nout+1)^(0+384),w
 22731  0920  3FC1               	movwi [1]fsr1
 22732  0921  2973               	goto	l8197
 22733  0922                     l8227:	
 22734                           
 22735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 22736  0922  0021               	movlb	1	; select bank1
 22737  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22738  0924  0086               	movwf	6
 22739  0925  0187               	clrf	7
 22740  0926  3002               	movlw	2
 22741  0927  0781               	addwf	1,f
 22742  0928  3141               	addfsr 1,1
 22743  0929  1803               	skipnc
 22744  092A  0A81               	incf	1,f
 22745                           
 22746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 22747  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22748  092C  0086               	movwf	6
 22749  092D  3001               	movlw	1	; select bank2/3
 22750  092E  0087               	movwf	7
 22751  092F  3F40               	moviw [0]fsr1
 22752  0930  0084               	movwf	4
 22753  0931  3001               	movlw	1	; select bank2/3
 22754  0932  0085               	movwf	5
 22755  0933  0A81               	incf	1,f
 22756  0934  0800               	movf	0,w
 22757  0935  0022               	movlb	2	; select bank2
 22758  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22759  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 22760  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22761                           
 22762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 22763  0939  0023               	movlb	3	; select bank3
 22764  093A  083C               	movf	_nout^(0+384),w
 22765  093B  0022               	movlb	2	; select bank2
 22766  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22767  093D  0023               	movlb	3	; select bank3
 22768  093E  083D               	movf	(_nout+1)^(0+384),w
 22769  093F  0022               	movlb	2	; select bank2
 22770  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22771  0941  3000               	movlw	0
 22772  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 22773  0943  30FF               	movlw	255
 22774  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22775  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22776  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22777  0947  0086               	movwf	6
 22778  0948  3001               	movlw	1	; select bank2/3
 22779  0949  0087               	movwf	7
 22780  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 22781  094B  3FC0               	movwi [0]fsr1
 22782  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22783  094D  3FC1               	movwi [1]fsr1
 22784  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22785  094F  3FC2               	movwi [2]fsr1
 22786  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22787  0951  3FC3               	movwi [3]fsr1
 22788  0952  2973               	goto	l8197
 22789  0953                     l8239:	
 22790                           
 22791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22792  0953  0021               	movlb	1	; select bank1
 22793  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22794  0955  0086               	movwf	6
 22795  0956  0187               	clrf	7
 22796  0957  3002               	movlw	2
 22797  0958  0781               	addwf	1,f
 22798  0959  3141               	addfsr 1,1
 22799  095A  1803               	skipnc
 22800  095B  0A81               	incf	1,f
 22801                           
 22802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22803  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22804  095D  0086               	movwf	6
 22805  095E  3001               	movlw	1	; select bank2/3
 22806  095F  0087               	movwf	7
 22807  0960  3F40               	moviw [0]fsr1
 22808  0961  0084               	movwf	4
 22809  0962  3001               	movlw	1	; select bank2/3
 22810  0963  0085               	movwf	5
 22811  0964  0A81               	incf	1,f
 22812  0965  0800               	movf	0,w
 22813  0966  0022               	movlb	2	; select bank2
 22814  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22815  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 22816  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 22817                           
 22818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22819  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 22820  096B  0086               	movwf	6
 22821  096C  3001               	movlw	1	; select bank2/3
 22822  096D  0087               	movwf	7
 22823  096E  0023               	movlb	3	; select bank3
 22824  096F  083C               	movf	_nout^(0+384),w
 22825  0970  3FC0               	movwi [0]fsr1
 22826  0971  083D               	movf	(_nout+1)^(0+384),w
 22827  0972  3FC1               	movwi [1]fsr1
 22828  0973                     l8197:	
 22829                           
 22830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22831  0973  0021               	movlb	1	; select bank1
 22832  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 22833  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 22834  0976  0008               	return
 22835  0977                     l8201:	
 22836                           
 22837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22838  0977  0021               	movlb	1	; select bank1
 22839  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22840  0979  0086               	movwf	6
 22841  097A  0187               	clrf	7
 22842  097B  3F40               	moviw [0]fsr1
 22843  097C  00F1               	movwf	strncmp@_l
 22844  097D  3F41               	moviw [1]fsr1
 22845  097E  00F2               	movwf	strncmp@_l+1
 22846  097F  302D               	movlw	low ((STR_95+1)| (0+32768))
 22847  0980  00F3               	movwf	strncmp@_r
 22848  0981  30BB               	movlw	high ((STR_95+1)| (0+32768))
 22849  0982  00F4               	movwf	strncmp@_r+1
 22850  0983  3002               	movlw	2
 22851  0984  00F5               	movwf	strncmp@n
 22852  0985  3000               	movlw	0
 22853  0986  00F6               	movwf	strncmp@n+1
 22854  0987  3190  2000  3188   	fcall	_strncmp
 22855  098A  0871               	movf	?_strncmp,w
 22856  098B  0472               	iorwf	?_strncmp+1,w
 22857  098C  1903               	btfsc	3,2
 22858  098D  28E0               	goto	l8203
 22859                           
 22860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22861  098E  0021               	movlb	1	; select bank1
 22862  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22863  0990  0086               	movwf	6
 22864  0991  0187               	clrf	7
 22865  0992  3F40               	moviw [0]fsr1
 22866  0993  0022               	movlb	2	; select bank2
 22867  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22868  0995  3F41               	moviw [1]fsr1
 22869  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22870  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 22871  0998  0084               	movwf	4
 22872  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22873  099A  0085               	movwf	5
 22874  099B  0012               	moviw fsr0++
 22875  099C  3A6E               	xorlw	110
 22876  099D  1903               	btfsc	3,2
 22877  099E  2901               	goto	l8215
 22878                           
 22879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 22880  099F  0021               	movlb	1	; select bank1
 22881  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22882  09A1  0086               	movwf	6
 22883  09A2  0187               	clrf	7
 22884  09A3  3F40               	moviw [0]fsr1
 22885  09A4  00F1               	movwf	strncmp@_l
 22886  09A5  3F41               	moviw [1]fsr1
 22887  09A6  00F2               	movwf	strncmp@_l+1
 22888  09A7  3051               	movlw	low (STR_105| (0+32768))
 22889  09A8  00F3               	movwf	strncmp@_r
 22890  09A9  30BB               	movlw	high (STR_105| (0+32768))
 22891  09AA  00F4               	movwf	strncmp@_r+1
 22892  09AB  3002               	movlw	2
 22893  09AC  00F5               	movwf	strncmp@n
 22894  09AD  3000               	movlw	0
 22895  09AE  00F6               	movwf	strncmp@n+1
 22896  09AF  3190  2000  3188   	fcall	_strncmp
 22897  09B2  0871               	movf	?_strncmp,w
 22898  09B3  0472               	iorwf	?_strncmp+1,w
 22899  09B4  1903               	btfsc	3,2
 22900  09B5  2922               	goto	l8227
 22901                           
 22902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22903  09B6  0021               	movlb	1	; select bank1
 22904  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22905  09B8  0086               	movwf	6
 22906  09B9  0187               	clrf	7
 22907  09BA  3F40               	moviw [0]fsr1
 22908  09BB  00F1               	movwf	strncmp@_l
 22909  09BC  3F41               	moviw [1]fsr1
 22910  09BD  00F2               	movwf	strncmp@_l+1
 22911  09BE  3054               	movlw	low (STR_110| (0+32768))
 22912  09BF  00F3               	movwf	strncmp@_r
 22913  09C0  30BB               	movlw	high (STR_110| (0+32768))
 22914  09C1  00F4               	movwf	strncmp@_r+1
 22915  09C2  3002               	movlw	2
 22916  09C3  00F5               	movwf	strncmp@n
 22917  09C4  3000               	movlw	0
 22918  09C5  00F6               	movwf	strncmp@n+1
 22919  09C6  3190  2000  3188   	fcall	_strncmp
 22920  09C9  0871               	movf	?_strncmp,w
 22921  09CA  0472               	iorwf	?_strncmp+1,w
 22922  09CB  1903               	btfsc	3,2
 22923  09CC  2953               	goto	l8239
 22924                           
 22925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22926  09CD  0021               	movlb	1	; select bank1
 22927  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22928  09CF  0086               	movwf	6
 22929  09D0  0187               	clrf	7
 22930  09D1  3F40               	moviw [0]fsr1
 22931  09D2  0022               	movlb	2	; select bank2
 22932  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22933  09D4  3F41               	moviw [1]fsr1
 22934  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22935  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 22936  09D7  0084               	movwf	4
 22937  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22938  09D9  0085               	movwf	5
 22939  09DA  0012               	moviw fsr0++
 22940  09DB  3A70               	xorlw	112
 22941  09DC  1D03               	btfss	3,2
 22942  09DD  2A43               	goto	l8259
 22943                           
 22944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22945  09DE  0021               	movlb	1	; select bank1
 22946  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 22947  09E0  0086               	movwf	6
 22948  09E1  0187               	clrf	7
 22949  09E2  3001               	movlw	1
 22950  09E3  0781               	addwf	1,f
 22951  09E4  3141               	addfsr 1,1
 22952  09E5  1803               	skipnc
 22953  09E6  0A81               	incf	1,f
 22954                           
 22955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22956  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 22957  09E8  0086               	movwf	6
 22958  09E9  3001               	movlw	1	; select bank2/3
 22959  09EA  0087               	movwf	7
 22960  09EB  3F40               	moviw [0]fsr1
 22961  09EC  0084               	movwf	4
 22962  09ED  3001               	movlw	1	; select bank2/3
 22963  09EE  0085               	movwf	5
 22964  09EF  0A81               	incf	1,f
 22965  09F0  0800               	movf	0,w
 22966  09F1  0022               	movlb	2	; select bank2
 22967  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22968  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 22969  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 22970  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 22971  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 22972  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 22973  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 22974  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 22975  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 22976  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 22977  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 22978  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 22979  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 22980  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 22981  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 22982  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 22983  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 22984  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 22985  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 22986  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 22987  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22988  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 22989  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 22990  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 22991                           
 22992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22993  0A0A  0021               	movlb	1	; select bank1
 22994  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22995  0A0C  0020               	movlb	0	; select bank0
 22996  0A0D  00B1               	movwf	xtoa@fp+1
 22997  0A0E  0021               	movlb	1	; select bank1
 22998  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 22999  0A10  0020               	movlb	0	; select bank0
 23000  0A11  00B0               	movwf	xtoa@fp
 23001  0A12  0022               	movlb	2	; select bank2
 23002  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23003  0A14  0020               	movlb	0	; select bank0
 23004  0A15  00B2               	movwf	xtoa@d
 23005  0A16  0022               	movlb	2	; select bank2
 23006  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23007  0A18  0020               	movlb	0	; select bank0
 23008  0A19  00B3               	movwf	xtoa@d+1
 23009  0A1A  0022               	movlb	2	; select bank2
 23010  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23011  0A1C  0020               	movlb	0	; select bank0
 23012  0A1D  00B4               	movwf	xtoa@d+2
 23013  0A1E  0022               	movlb	2	; select bank2
 23014  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23015  0A20  0020               	movlb	0	; select bank0
 23016  0A21  00B5               	movwf	xtoa@d+3
 23017  0A22  0022               	movlb	2	; select bank2
 23018  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23019  0A24  0020               	movlb	0	; select bank0
 23020  0A25  00B6               	movwf	xtoa@d+4
 23021  0A26  0022               	movlb	2	; select bank2
 23022  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23023  0A28  0020               	movlb	0	; select bank0
 23024  0A29  00B7               	movwf	xtoa@d+5
 23025  0A2A  0022               	movlb	2	; select bank2
 23026  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23027  0A2C  0020               	movlb	0	; select bank0
 23028  0A2D  00B8               	movwf	xtoa@d+6
 23029  0A2E  0022               	movlb	2	; select bank2
 23030  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23031  0A30  0020               	movlb	0	; select bank0
 23032  0A31  00B9               	movwf	xtoa@d+7
 23033  0A32  3078               	movlw	120
 23034  0A33  0022               	movlb	2	; select bank2
 23035  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23036  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 23037  0A36  0020               	movlb	0	; select bank0
 23038  0A37  00BA               	movwf	xtoa@x
 23039  0A38  319C  24C5         	fcall	_xtoa
 23040  0A3A  0020               	movlb	0	; select bank0
 23041  0A3B  0831               	movf	?_xtoa+1,w
 23042  0A3C  0021               	movlb	1	; select bank1
 23043  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23044  0A3E  0020               	movlb	0	; select bank0
 23045  0A3F  0830               	movf	?_xtoa,w
 23046  0A40  0021               	movlb	1	; select bank1
 23047  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23048  0A42  0008               	return
 23049  0A43                     l8259:	
 23050                           
 23051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 23052  0A43  0021               	movlb	1	; select bank1
 23053  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23054  0A45  0086               	movwf	6
 23055  0A46  0187               	clrf	7
 23056  0A47  3F40               	moviw [0]fsr1
 23057  0A48  0022               	movlb	2	; select bank2
 23058  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23059  0A4A  3F41               	moviw [1]fsr1
 23060  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23061  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 23062  0A4D  0084               	movwf	4
 23063  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23064  0A4F  0085               	movwf	5
 23065  0A50  0012               	moviw fsr0++
 23066  0A51  3A73               	xorlw	115
 23067  0A52  1D03               	btfss	3,2
 23068  0A53  2A84               	goto	l8269
 23069                           
 23070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 23071  0A54  0021               	movlb	1	; select bank1
 23072  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23073  0A56  0086               	movwf	6
 23074  0A57  0187               	clrf	7
 23075  0A58  3001               	movlw	1
 23076  0A59  0781               	addwf	1,f
 23077  0A5A  3141               	addfsr 1,1
 23078  0A5B  1803               	skipnc
 23079  0A5C  0A81               	incf	1,f
 23080                           
 23081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 23082  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23083  0A5E  0086               	movwf	6
 23084  0A5F  3001               	movlw	1	; select bank2/3
 23085  0A60  0087               	movwf	7
 23086  0A61  3F40               	moviw [0]fsr1
 23087  0A62  0084               	movwf	4
 23088  0A63  3001               	movlw	1	; select bank2/3
 23089  0A64  0085               	movwf	5
 23090  0A65  0A81               	incf	1,f
 23091  0A66  0800               	movf	0,w
 23092  0A67  0022               	movlb	2	; select bank2
 23093  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23094  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 23095  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 23096                           
 23097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 23098  0A6B  0021               	movlb	1	; select bank1
 23099  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23100  0A6D  0020               	movlb	0	; select bank0
 23101  0A6E  00A1               	movwf	stoa@fp+1
 23102  0A6F  0021               	movlb	1	; select bank1
 23103  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23104  0A71  0020               	movlb	0	; select bank0
 23105  0A72  00A0               	movwf	stoa@fp
 23106  0A73  0022               	movlb	2	; select bank2
 23107  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 23108  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23109  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 23110  0A77  0020               	movlb	0	; select bank0
 23111  0A78  00A2               	movwf	stoa@s
 23112  0A79  31AE  266A         	fcall	_stoa
 23113  0A7B  0020               	movlb	0	; select bank0
 23114  0A7C  0821               	movf	?_stoa+1,w
 23115  0A7D  0021               	movlb	1	; select bank1
 23116  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23117  0A7F  0020               	movlb	0	; select bank0
 23118  0A80  0820               	movf	?_stoa,w
 23119  0A81  0021               	movlb	1	; select bank1
 23120  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23121  0A83  0008               	return
 23122  0A84                     l8269:	
 23123                           
 23124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 23125  0A84  0021               	movlb	1	; select bank1
 23126  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23127  0A86  0086               	movwf	6
 23128  0A87  0187               	clrf	7
 23129  0A88  3F40               	moviw [0]fsr1
 23130  0A89  00F1               	movwf	strncmp@_l
 23131  0A8A  3F41               	moviw [1]fsr1
 23132  0A8B  00F2               	movwf	strncmp@_l+1
 23133  0A8C  3034               	movlw	low (STR_115| (0+32768))
 23134  0A8D  00F3               	movwf	strncmp@_r
 23135  0A8E  30BB               	movlw	high (STR_115| (0+32768))
 23136  0A8F  00F4               	movwf	strncmp@_r+1
 23137  0A90  3003               	movlw	3
 23138  0A91  00F5               	movwf	strncmp@n
 23139  0A92  3000               	movlw	0
 23140  0A93  00F6               	movwf	strncmp@n+1
 23141  0A94  3190  2000  3188   	fcall	_strncmp
 23142  0A97  0871               	movf	?_strncmp,w
 23143  0A98  0472               	iorwf	?_strncmp+1,w
 23144  0A99  1D03               	btfss	3,2
 23145  0A9A  2AEB               	goto	l8279
 23146                           
 23147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 23148  0A9B  0021               	movlb	1	; select bank1
 23149  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23150  0A9D  0086               	movwf	6
 23151  0A9E  0187               	clrf	7
 23152  0A9F  3003               	movlw	3
 23153  0AA0  0781               	addwf	1,f
 23154  0AA1  3141               	addfsr 1,1
 23155  0AA2  1803               	skipnc
 23156  0AA3  0A81               	incf	1,f
 23157                           
 23158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23159  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23160  0AA5  0086               	movwf	6
 23161  0AA6  3001               	movlw	1	; select bank2/3
 23162  0AA7  0087               	movwf	7
 23163  0AA8  0801               	movf	1,w
 23164  0AA9  0084               	movwf	4
 23165  0AAA  3001               	movlw	1	; select bank2/3
 23166  0AAB  0085               	movwf	5
 23167  0AAC  3002               	movlw	2
 23168  0AAD  0781               	addwf	1,f
 23169  0AAE  0800               	movf	0,w
 23170  0AAF  0022               	movlb	2	; select bank2
 23171  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23172  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 23173  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23174  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23175  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23176  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23177  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23178  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23179                           
 23180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 23181  0AB8  0021               	movlb	1	; select bank1
 23182  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23183  0ABA  0020               	movlb	0	; select bank0
 23184  0ABB  00B1               	movwf	utoa@fp+1
 23185  0ABC  0021               	movlb	1	; select bank1
 23186  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23187  0ABE  0020               	movlb	0	; select bank0
 23188  0ABF  00B0               	movwf	utoa@fp
 23189  0AC0  0022               	movlb	2	; select bank2
 23190  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23191  0AC2  0020               	movlb	0	; select bank0
 23192  0AC3  00B2               	movwf	utoa@d
 23193  0AC4  0022               	movlb	2	; select bank2
 23194  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23195  0AC6  0020               	movlb	0	; select bank0
 23196  0AC7  00B3               	movwf	utoa@d+1
 23197  0AC8  0022               	movlb	2	; select bank2
 23198  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23199  0ACA  0020               	movlb	0	; select bank0
 23200  0ACB  00B4               	movwf	utoa@d+2
 23201  0ACC  0022               	movlb	2	; select bank2
 23202  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23203  0ACE  0020               	movlb	0	; select bank0
 23204  0ACF  00B5               	movwf	utoa@d+3
 23205  0AD0  0022               	movlb	2	; select bank2
 23206  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23207  0AD2  0020               	movlb	0	; select bank0
 23208  0AD3  00B6               	movwf	utoa@d+4
 23209  0AD4  0022               	movlb	2	; select bank2
 23210  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23211  0AD6  0020               	movlb	0	; select bank0
 23212  0AD7  00B7               	movwf	utoa@d+5
 23213  0AD8  0022               	movlb	2	; select bank2
 23214  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23215  0ADA  0020               	movlb	0	; select bank0
 23216  0ADB  00B8               	movwf	utoa@d+6
 23217  0ADC  0022               	movlb	2	; select bank2
 23218  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23219  0ADE  0020               	movlb	0	; select bank0
 23220  0ADF  00B9               	movwf	utoa@d+7
 23221  0AE0  31A4  2455         	fcall	_utoa
 23222  0AE2  0020               	movlb	0	; select bank0
 23223  0AE3  0831               	movf	?_utoa+1,w
 23224  0AE4  0021               	movlb	1	; select bank1
 23225  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23226  0AE6  0020               	movlb	0	; select bank0
 23227  0AE7  0830               	movf	?_utoa,w
 23228  0AE8  0021               	movlb	1	; select bank1
 23229  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23230  0AEA  0008               	return
 23231  0AEB                     l8279:	
 23232                           
 23233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 23234  0AEB  0021               	movlb	1	; select bank1
 23235  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23236  0AED  0086               	movwf	6
 23237  0AEE  0187               	clrf	7
 23238  0AEF  3F40               	moviw [0]fsr1
 23239  0AF0  00F1               	movwf	strncmp@_l
 23240  0AF1  3F41               	moviw [1]fsr1
 23241  0AF2  00F2               	movwf	strncmp@_l+1
 23242  0AF3  3035               	movlw	low ((STR_115+1)| (0+32768))
 23243  0AF4  00F3               	movwf	strncmp@_r
 23244  0AF5  30BB               	movlw	high ((STR_115+1)| (0+32768))
 23245  0AF6  00F4               	movwf	strncmp@_r+1
 23246  0AF7  3002               	movlw	2
 23247  0AF8  00F5               	movwf	strncmp@n
 23248  0AF9  3000               	movlw	0
 23249  0AFA  00F6               	movwf	strncmp@n+1
 23250  0AFB  3190  2000  3188   	fcall	_strncmp
 23251  0AFE  0871               	movf	?_strncmp,w
 23252  0AFF  0472               	iorwf	?_strncmp+1,w
 23253  0B00  1D03               	btfss	3,2
 23254  0B01  2B53               	goto	l8289
 23255                           
 23256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 23257  0B02  0021               	movlb	1	; select bank1
 23258  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23259  0B04  0086               	movwf	6
 23260  0B05  0187               	clrf	7
 23261  0B06  3002               	movlw	2
 23262  0B07  0781               	addwf	1,f
 23263  0B08  3141               	addfsr 1,1
 23264  0B09  1803               	skipnc
 23265  0B0A  0A81               	incf	1,f
 23266                           
 23267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23268  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23269  0B0C  0086               	movwf	6
 23270  0B0D  3001               	movlw	1	; select bank2/3
 23271  0B0E  0087               	movwf	7
 23272  0B0F  0801               	movf	1,w
 23273  0B10  0084               	movwf	4
 23274  0B11  3001               	movlw	1	; select bank2/3
 23275  0B12  0085               	movwf	5
 23276  0B13  3002               	movlw	2
 23277  0B14  0781               	addwf	1,f
 23278  0B15  3F00               	moviw [0]fsr0
 23279  0B16  0022               	movlb	2	; select bank2
 23280  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23281  0B18  3F01               	moviw [1]fsr0
 23282  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23283  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23284  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23285  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23286  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23287  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23288  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23289                           
 23290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 23291  0B20  0021               	movlb	1	; select bank1
 23292  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23293  0B22  0020               	movlb	0	; select bank0
 23294  0B23  00B1               	movwf	utoa@fp+1
 23295  0B24  0021               	movlb	1	; select bank1
 23296  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23297  0B26  0020               	movlb	0	; select bank0
 23298  0B27  00B0               	movwf	utoa@fp
 23299  0B28  0022               	movlb	2	; select bank2
 23300  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23301  0B2A  0020               	movlb	0	; select bank0
 23302  0B2B  00B2               	movwf	utoa@d
 23303  0B2C  0022               	movlb	2	; select bank2
 23304  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23305  0B2E  0020               	movlb	0	; select bank0
 23306  0B2F  00B3               	movwf	utoa@d+1
 23307  0B30  0022               	movlb	2	; select bank2
 23308  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23309  0B32  0020               	movlb	0	; select bank0
 23310  0B33  00B4               	movwf	utoa@d+2
 23311  0B34  0022               	movlb	2	; select bank2
 23312  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23313  0B36  0020               	movlb	0	; select bank0
 23314  0B37  00B5               	movwf	utoa@d+3
 23315  0B38  0022               	movlb	2	; select bank2
 23316  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23317  0B3A  0020               	movlb	0	; select bank0
 23318  0B3B  00B6               	movwf	utoa@d+4
 23319  0B3C  0022               	movlb	2	; select bank2
 23320  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23321  0B3E  0020               	movlb	0	; select bank0
 23322  0B3F  00B7               	movwf	utoa@d+5
 23323  0B40  0022               	movlb	2	; select bank2
 23324  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23325  0B42  0020               	movlb	0	; select bank0
 23326  0B43  00B8               	movwf	utoa@d+6
 23327  0B44  0022               	movlb	2	; select bank2
 23328  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23329  0B46  0020               	movlb	0	; select bank0
 23330  0B47  00B9               	movwf	utoa@d+7
 23331  0B48  31A4  2455         	fcall	_utoa
 23332  0B4A  0020               	movlb	0	; select bank0
 23333  0B4B  0831               	movf	?_utoa+1,w
 23334  0B4C  0021               	movlb	1	; select bank1
 23335  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23336  0B4E  0020               	movlb	0	; select bank0
 23337  0B4F  0830               	movf	?_utoa,w
 23338  0B50  0021               	movlb	1	; select bank1
 23339  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23340  0B52  0008               	return
 23341  0B53                     l8289:	
 23342                           
 23343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 23344  0B53  0021               	movlb	1	; select bank1
 23345  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23346  0B55  0086               	movwf	6
 23347  0B56  0187               	clrf	7
 23348  0B57  3F40               	moviw [0]fsr1
 23349  0B58  0022               	movlb	2	; select bank2
 23350  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23351  0B5A  3F41               	moviw [1]fsr1
 23352  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23353  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 23354  0B5D  0084               	movwf	4
 23355  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23356  0B5F  0085               	movwf	5
 23357  0B60  0012               	moviw fsr0++
 23358  0B61  3A75               	xorlw	117
 23359  0B62  1D03               	btfss	3,2
 23360  0B63  2BB5               	goto	l8299
 23361                           
 23362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 23363  0B64  0021               	movlb	1	; select bank1
 23364  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23365  0B66  0086               	movwf	6
 23366  0B67  0187               	clrf	7
 23367  0B68  3001               	movlw	1
 23368  0B69  0781               	addwf	1,f
 23369  0B6A  3141               	addfsr 1,1
 23370  0B6B  1803               	skipnc
 23371  0B6C  0A81               	incf	1,f
 23372                           
 23373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23374  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23375  0B6E  0086               	movwf	6
 23376  0B6F  3001               	movlw	1	; select bank2/3
 23377  0B70  0087               	movwf	7
 23378  0B71  0801               	movf	1,w
 23379  0B72  0084               	movwf	4
 23380  0B73  3001               	movlw	1	; select bank2/3
 23381  0B74  0085               	movwf	5
 23382  0B75  3002               	movlw	2
 23383  0B76  0781               	addwf	1,f
 23384  0B77  3F00               	moviw [0]fsr0
 23385  0B78  0022               	movlb	2	; select bank2
 23386  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23387  0B7A  3F01               	moviw [1]fsr0
 23388  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23389  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23390  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23391  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23392  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23393  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23394  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23395                           
 23396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 23397  0B82  0021               	movlb	1	; select bank1
 23398  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23399  0B84  0020               	movlb	0	; select bank0
 23400  0B85  00B1               	movwf	utoa@fp+1
 23401  0B86  0021               	movlb	1	; select bank1
 23402  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23403  0B88  0020               	movlb	0	; select bank0
 23404  0B89  00B0               	movwf	utoa@fp
 23405  0B8A  0022               	movlb	2	; select bank2
 23406  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23407  0B8C  0020               	movlb	0	; select bank0
 23408  0B8D  00B2               	movwf	utoa@d
 23409  0B8E  0022               	movlb	2	; select bank2
 23410  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23411  0B90  0020               	movlb	0	; select bank0
 23412  0B91  00B3               	movwf	utoa@d+1
 23413  0B92  0022               	movlb	2	; select bank2
 23414  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23415  0B94  0020               	movlb	0	; select bank0
 23416  0B95  00B4               	movwf	utoa@d+2
 23417  0B96  0022               	movlb	2	; select bank2
 23418  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23419  0B98  0020               	movlb	0	; select bank0
 23420  0B99  00B5               	movwf	utoa@d+3
 23421  0B9A  0022               	movlb	2	; select bank2
 23422  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23423  0B9C  0020               	movlb	0	; select bank0
 23424  0B9D  00B6               	movwf	utoa@d+4
 23425  0B9E  0022               	movlb	2	; select bank2
 23426  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23427  0BA0  0020               	movlb	0	; select bank0
 23428  0BA1  00B7               	movwf	utoa@d+5
 23429  0BA2  0022               	movlb	2	; select bank2
 23430  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23431  0BA4  0020               	movlb	0	; select bank0
 23432  0BA5  00B8               	movwf	utoa@d+6
 23433  0BA6  0022               	movlb	2	; select bank2
 23434  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23435  0BA8  0020               	movlb	0	; select bank0
 23436  0BA9  00B9               	movwf	utoa@d+7
 23437  0BAA  31A4  2455         	fcall	_utoa
 23438  0BAC  0020               	movlb	0	; select bank0
 23439  0BAD  0831               	movf	?_utoa+1,w
 23440  0BAE  0021               	movlb	1	; select bank1
 23441  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23442  0BB0  0020               	movlb	0	; select bank0
 23443  0BB1  0830               	movf	?_utoa,w
 23444  0BB2  0021               	movlb	1	; select bank1
 23445  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23446  0BB4  0008               	return
 23447  0BB5                     l8299:	
 23448                           
 23449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 23450  0BB5  0021               	movlb	1	; select bank1
 23451  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23452  0BB7  0086               	movwf	6
 23453  0BB8  0187               	clrf	7
 23454  0BB9  3F40               	moviw [0]fsr1
 23455  0BBA  00F1               	movwf	strncmp@_l
 23456  0BBB  3F41               	moviw [1]fsr1
 23457  0BBC  00F2               	movwf	strncmp@_l+1
 23458  0BBD  305D               	movlw	low (STR_125| (0+32768))
 23459  0BBE  00F3               	movwf	strncmp@_r
 23460  0BBF  30BB               	movlw	high (STR_125| (0+32768))
 23461  0BC0  00F4               	movwf	strncmp@_r+1
 23462  0BC1  3002               	movlw	2
 23463  0BC2  00F5               	movwf	strncmp@n
 23464  0BC3  3000               	movlw	0
 23465  0BC4  00F6               	movwf	strncmp@n+1
 23466  0BC5  3190  2000  3188   	fcall	_strncmp
 23467  0BC8  0871               	movf	?_strncmp,w
 23468  0BC9  0472               	iorwf	?_strncmp+1,w
 23469  0BCA  1D03               	btfss	3,2
 23470  0BCB  2C37               	goto	l8309
 23471                           
 23472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 23473  0BCC  0021               	movlb	1	; select bank1
 23474  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23475  0BCE  0086               	movwf	6
 23476  0BCF  0187               	clrf	7
 23477  0BD0  3002               	movlw	2
 23478  0BD1  0781               	addwf	1,f
 23479  0BD2  3141               	addfsr 1,1
 23480  0BD3  1803               	skipnc
 23481  0BD4  0A81               	incf	1,f
 23482                           
 23483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23484  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23485  0BD6  0086               	movwf	6
 23486  0BD7  3001               	movlw	1	; select bank2/3
 23487  0BD8  0087               	movwf	7
 23488  0BD9  0801               	movf	1,w
 23489  0BDA  0084               	movwf	4
 23490  0BDB  3001               	movlw	1	; select bank2/3
 23491  0BDC  0085               	movwf	5
 23492  0BDD  3004               	movlw	4
 23493  0BDE  0781               	addwf	1,f
 23494  0BDF  3F00               	moviw [0]fsr0
 23495  0BE0  0022               	movlb	2	; select bank2
 23496  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23497  0BE2  3F01               	moviw [1]fsr0
 23498  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23499  0BE4  3F02               	moviw [2]fsr0
 23500  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23501  0BE6  3F03               	moviw [3]fsr0
 23502  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23503  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 23504  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23505  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23506  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23507  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23508  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23509  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23510  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23511  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23512  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23513  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23514  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23515  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23516  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23517  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23518  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23519  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23520  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23521  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23522  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23523  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23524  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23525  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23526  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23527  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23528  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23529  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23530  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23531                           
 23532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 23533  0C04  0021               	movlb	1	; select bank1
 23534  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23535  0C06  0020               	movlb	0	; select bank0
 23536  0C07  00B1               	movwf	utoa@fp+1
 23537  0C08  0021               	movlb	1	; select bank1
 23538  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23539  0C0A  0020               	movlb	0	; select bank0
 23540  0C0B  00B0               	movwf	utoa@fp
 23541  0C0C  0022               	movlb	2	; select bank2
 23542  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23543  0C0E  0020               	movlb	0	; select bank0
 23544  0C0F  00B2               	movwf	utoa@d
 23545  0C10  0022               	movlb	2	; select bank2
 23546  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23547  0C12  0020               	movlb	0	; select bank0
 23548  0C13  00B3               	movwf	utoa@d+1
 23549  0C14  0022               	movlb	2	; select bank2
 23550  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23551  0C16  0020               	movlb	0	; select bank0
 23552  0C17  00B4               	movwf	utoa@d+2
 23553  0C18  0022               	movlb	2	; select bank2
 23554  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23555  0C1A  0020               	movlb	0	; select bank0
 23556  0C1B  00B5               	movwf	utoa@d+3
 23557  0C1C  0022               	movlb	2	; select bank2
 23558  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23559  0C1E  0020               	movlb	0	; select bank0
 23560  0C1F  00B6               	movwf	utoa@d+4
 23561  0C20  0022               	movlb	2	; select bank2
 23562  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23563  0C22  0020               	movlb	0	; select bank0
 23564  0C23  00B7               	movwf	utoa@d+5
 23565  0C24  0022               	movlb	2	; select bank2
 23566  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23567  0C26  0020               	movlb	0	; select bank0
 23568  0C27  00B8               	movwf	utoa@d+6
 23569  0C28  0022               	movlb	2	; select bank2
 23570  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23571  0C2A  0020               	movlb	0	; select bank0
 23572  0C2B  00B9               	movwf	utoa@d+7
 23573  0C2C  31A4  2455         	fcall	_utoa
 23574  0C2E  0020               	movlb	0	; select bank0
 23575  0C2F  0831               	movf	?_utoa+1,w
 23576  0C30  0021               	movlb	1	; select bank1
 23577  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23578  0C32  0020               	movlb	0	; select bank0
 23579  0C33  0830               	movf	?_utoa,w
 23580  0C34  0021               	movlb	1	; select bank1
 23581  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23582  0C36  0008               	return
 23583  0C37                     l8309:	
 23584                           
 23585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 23586  0C37  0021               	movlb	1	; select bank1
 23587  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23588  0C39  0086               	movwf	6
 23589  0C3A  0187               	clrf	7
 23590  0C3B  3F40               	moviw [0]fsr1
 23591  0C3C  00F1               	movwf	strncmp@_l
 23592  0C3D  3F41               	moviw [1]fsr1
 23593  0C3E  00F2               	movwf	strncmp@_l+1
 23594  0C3F  3060               	movlw	low (STR_130| (0+32768))
 23595  0C40  00F3               	movwf	strncmp@_r
 23596  0C41  30BB               	movlw	high (STR_130| (0+32768))
 23597  0C42  00F4               	movwf	strncmp@_r+1
 23598  0C43  3002               	movlw	2
 23599  0C44  00F5               	movwf	strncmp@n
 23600  0C45  3000               	movlw	0
 23601  0C46  00F6               	movwf	strncmp@n+1
 23602  0C47  3190  2000  3188   	fcall	_strncmp
 23603  0C4A  0871               	movf	?_strncmp,w
 23604  0C4B  0472               	iorwf	?_strncmp+1,w
 23605  0C4C  1D03               	btfss	3,2
 23606  0C4D  2C9F               	goto	l8319
 23607                           
 23608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 23609  0C4E  0021               	movlb	1	; select bank1
 23610  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23611  0C50  0086               	movwf	6
 23612  0C51  0187               	clrf	7
 23613  0C52  3002               	movlw	2
 23614  0C53  0781               	addwf	1,f
 23615  0C54  3141               	addfsr 1,1
 23616  0C55  1803               	skipnc
 23617  0C56  0A81               	incf	1,f
 23618                           
 23619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23620  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23621  0C58  0086               	movwf	6
 23622  0C59  3001               	movlw	1	; select bank2/3
 23623  0C5A  0087               	movwf	7
 23624  0C5B  0801               	movf	1,w
 23625  0C5C  0084               	movwf	4
 23626  0C5D  3001               	movlw	1	; select bank2/3
 23627  0C5E  0085               	movwf	5
 23628  0C5F  3002               	movlw	2
 23629  0C60  0781               	addwf	1,f
 23630  0C61  3F00               	moviw [0]fsr0
 23631  0C62  0022               	movlb	2	; select bank2
 23632  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23633  0C64  3F01               	moviw [1]fsr0
 23634  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23635  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23636  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23637  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23638  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23639  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23640  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23641                           
 23642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 23643  0C6C  0021               	movlb	1	; select bank1
 23644  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23645  0C6E  0020               	movlb	0	; select bank0
 23646  0C6F  00B1               	movwf	utoa@fp+1
 23647  0C70  0021               	movlb	1	; select bank1
 23648  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23649  0C72  0020               	movlb	0	; select bank0
 23650  0C73  00B0               	movwf	utoa@fp
 23651  0C74  0022               	movlb	2	; select bank2
 23652  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23653  0C76  0020               	movlb	0	; select bank0
 23654  0C77  00B2               	movwf	utoa@d
 23655  0C78  0022               	movlb	2	; select bank2
 23656  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23657  0C7A  0020               	movlb	0	; select bank0
 23658  0C7B  00B3               	movwf	utoa@d+1
 23659  0C7C  0022               	movlb	2	; select bank2
 23660  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23661  0C7E  0020               	movlb	0	; select bank0
 23662  0C7F  00B4               	movwf	utoa@d+2
 23663  0C80  0022               	movlb	2	; select bank2
 23664  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23665  0C82  0020               	movlb	0	; select bank0
 23666  0C83  00B5               	movwf	utoa@d+3
 23667  0C84  0022               	movlb	2	; select bank2
 23668  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23669  0C86  0020               	movlb	0	; select bank0
 23670  0C87  00B6               	movwf	utoa@d+4
 23671  0C88  0022               	movlb	2	; select bank2
 23672  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23673  0C8A  0020               	movlb	0	; select bank0
 23674  0C8B  00B7               	movwf	utoa@d+5
 23675  0C8C  0022               	movlb	2	; select bank2
 23676  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23677  0C8E  0020               	movlb	0	; select bank0
 23678  0C8F  00B8               	movwf	utoa@d+6
 23679  0C90  0022               	movlb	2	; select bank2
 23680  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23681  0C92  0020               	movlb	0	; select bank0
 23682  0C93  00B9               	movwf	utoa@d+7
 23683  0C94  31A4  2455         	fcall	_utoa
 23684  0C96  0020               	movlb	0	; select bank0
 23685  0C97  0831               	movf	?_utoa+1,w
 23686  0C98  0021               	movlb	1	; select bank1
 23687  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23688  0C9A  0020               	movlb	0	; select bank0
 23689  0C9B  0830               	movf	?_utoa,w
 23690  0C9C  0021               	movlb	1	; select bank1
 23691  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23692  0C9E  0008               	return
 23693  0C9F                     l8319:	
 23694                           
 23695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 23696  0C9F  0021               	movlb	1	; select bank1
 23697  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23698  0CA1  0086               	movwf	6
 23699  0CA2  0187               	clrf	7
 23700  0CA3  3F40               	moviw [0]fsr1
 23701  0CA4  00F1               	movwf	strncmp@_l
 23702  0CA5  3F41               	moviw [1]fsr1
 23703  0CA6  00F2               	movwf	strncmp@_l+1
 23704  0CA7  3038               	movlw	low (STR_135| (0+32768))
 23705  0CA8  00F3               	movwf	strncmp@_r
 23706  0CA9  30BB               	movlw	high (STR_135| (0+32768))
 23707  0CAA  00F4               	movwf	strncmp@_r+1
 23708  0CAB  3003               	movlw	3
 23709  0CAC  00F5               	movwf	strncmp@n
 23710  0CAD  3000               	movlw	0
 23711  0CAE  00F6               	movwf	strncmp@n+1
 23712  0CAF  3190  2000  3188   	fcall	_strncmp
 23713  0CB2  0871               	movf	?_strncmp,w
 23714  0CB3  0472               	iorwf	?_strncmp+1,w
 23715  0CB4  1903               	btfsc	3,2
 23716  0CB5  2CCD               	goto	l8323
 23717  0CB6  0021               	movlb	1	; select bank1
 23718  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23719  0CB8  0086               	movwf	6
 23720  0CB9  0187               	clrf	7
 23721  0CBA  3F40               	moviw [0]fsr1
 23722  0CBB  00F1               	movwf	strncmp@_l
 23723  0CBC  3F41               	moviw [1]fsr1
 23724  0CBD  00F2               	movwf	strncmp@_l+1
 23725  0CBE  3018               	movlw	low (STR_139| (0+32768))
 23726  0CBF  00F3               	movwf	strncmp@_r
 23727  0CC0  30BB               	movlw	high (STR_139| (0+32768))
 23728  0CC1  00F4               	movwf	strncmp@_r+1
 23729  0CC2  3003               	movlw	3
 23730  0CC3  00F5               	movwf	strncmp@n
 23731  0CC4  3000               	movlw	0
 23732  0CC5  00F6               	movwf	strncmp@n+1
 23733  0CC6  3190  2000  3188   	fcall	_strncmp
 23734  0CC9  0871               	movf	?_strncmp,w
 23735  0CCA  0472               	iorwf	?_strncmp+1,w
 23736  0CCB  1D03               	btfss	3,2
 23737  0CCC  2D37               	goto	l8333
 23738  0CCD                     l8323:	
 23739                           
 23740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23741  0CCD  0021               	movlb	1	; select bank1
 23742  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23743  0CCF  0086               	movwf	6
 23744  0CD0  0187               	clrf	7
 23745  0CD1  3F40               	moviw [0]fsr1
 23746  0CD2  0022               	movlb	2	; select bank2
 23747  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23748  0CD4  3F41               	moviw [1]fsr1
 23749  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23750  0CD6  3002               	movlw	2
 23751  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23752  0CD8  0084               	movwf	4
 23753  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23754  0CDA  1803               	skipnc
 23755  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23756  0CDC  0085               	movwf	5
 23757  0CDD  0800               	movf	0,w	;code access
 23758  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23759  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23760  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23761                           
 23762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23763  0CE1  0021               	movlb	1	; select bank1
 23764  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23765  0CE3  0086               	movwf	6
 23766  0CE4  0187               	clrf	7
 23767  0CE5  3003               	movlw	3
 23768  0CE6  0781               	addwf	1,f
 23769  0CE7  3141               	addfsr 1,1
 23770  0CE8  1803               	skipnc
 23771  0CE9  0A81               	incf	1,f
 23772                           
 23773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23774  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23775  0CEB  0086               	movwf	6
 23776  0CEC  3001               	movlw	1	; select bank2/3
 23777  0CED  0087               	movwf	7
 23778  0CEE  0801               	movf	1,w
 23779  0CEF  0084               	movwf	4
 23780  0CF0  3001               	movlw	1	; select bank2/3
 23781  0CF1  0085               	movwf	5
 23782  0CF2  3002               	movlw	2
 23783  0CF3  0781               	addwf	1,f
 23784  0CF4  0800               	movf	0,w
 23785  0CF5  0022               	movlb	2	; select bank2
 23786  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23787  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 23788  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23789  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23790  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23791  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23792  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23793  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23794                           
 23795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23796  0CFE  0021               	movlb	1	; select bank1
 23797  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23798  0D00  0020               	movlb	0	; select bank0
 23799  0D01  00B1               	movwf	xtoa@fp+1
 23800  0D02  0021               	movlb	1	; select bank1
 23801  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23802  0D04  0020               	movlb	0	; select bank0
 23803  0D05  00B0               	movwf	xtoa@fp
 23804  0D06  0022               	movlb	2	; select bank2
 23805  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23806  0D08  0020               	movlb	0	; select bank0
 23807  0D09  00B2               	movwf	xtoa@d
 23808  0D0A  0022               	movlb	2	; select bank2
 23809  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23810  0D0C  0020               	movlb	0	; select bank0
 23811  0D0D  00B3               	movwf	xtoa@d+1
 23812  0D0E  0022               	movlb	2	; select bank2
 23813  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23814  0D10  0020               	movlb	0	; select bank0
 23815  0D11  00B4               	movwf	xtoa@d+2
 23816  0D12  0022               	movlb	2	; select bank2
 23817  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23818  0D14  0020               	movlb	0	; select bank0
 23819  0D15  00B5               	movwf	xtoa@d+3
 23820  0D16  0022               	movlb	2	; select bank2
 23821  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23822  0D18  0020               	movlb	0	; select bank0
 23823  0D19  00B6               	movwf	xtoa@d+4
 23824  0D1A  0022               	movlb	2	; select bank2
 23825  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23826  0D1C  0020               	movlb	0	; select bank0
 23827  0D1D  00B7               	movwf	xtoa@d+5
 23828  0D1E  0022               	movlb	2	; select bank2
 23829  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23830  0D20  0020               	movlb	0	; select bank0
 23831  0D21  00B8               	movwf	xtoa@d+6
 23832  0D22  0022               	movlb	2	; select bank2
 23833  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23834  0D24  0020               	movlb	0	; select bank0
 23835  0D25  00B9               	movwf	xtoa@d+7
 23836  0D26  0022               	movlb	2	; select bank2
 23837  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 23838  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23839  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 23840  0D2A  0020               	movlb	0	; select bank0
 23841  0D2B  00BA               	movwf	xtoa@x
 23842  0D2C  319C  24C5         	fcall	_xtoa
 23843  0D2E  0020               	movlb	0	; select bank0
 23844  0D2F  0831               	movf	?_xtoa+1,w
 23845  0D30  0021               	movlb	1	; select bank1
 23846  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23847  0D32  0020               	movlb	0	; select bank0
 23848  0D33  0830               	movf	?_xtoa,w
 23849  0D34  0021               	movlb	1	; select bank1
 23850  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 23851  0D36  0008               	return
 23852  0D37                     l8333:	
 23853                           
 23854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23855  0D37  0021               	movlb	1	; select bank1
 23856  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23857  0D39  0086               	movwf	6
 23858  0D3A  0187               	clrf	7
 23859  0D3B  3F40               	moviw [0]fsr1
 23860  0D3C  00F1               	movwf	strncmp@_l
 23861  0D3D  3F41               	moviw [1]fsr1
 23862  0D3E  00F2               	movwf	strncmp@_l+1
 23863  0D3F  3039               	movlw	low ((STR_135+1)| (0+32768))
 23864  0D40  00F3               	movwf	strncmp@_r
 23865  0D41  30BB               	movlw	high ((STR_135+1)| (0+32768))
 23866  0D42  00F4               	movwf	strncmp@_r+1
 23867  0D43  3002               	movlw	2
 23868  0D44  00F5               	movwf	strncmp@n
 23869  0D45  3000               	movlw	0
 23870  0D46  00F6               	movwf	strncmp@n+1
 23871  0D47  3190  2000  3188   	fcall	_strncmp
 23872  0D4A  0871               	movf	?_strncmp,w
 23873  0D4B  0472               	iorwf	?_strncmp+1,w
 23874  0D4C  1903               	btfsc	3,2
 23875  0D4D  2D65               	goto	l8337
 23876  0D4E  0021               	movlb	1	; select bank1
 23877  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23878  0D50  0086               	movwf	6
 23879  0D51  0187               	clrf	7
 23880  0D52  3F40               	moviw [0]fsr1
 23881  0D53  00F1               	movwf	strncmp@_l
 23882  0D54  3F41               	moviw [1]fsr1
 23883  0D55  00F2               	movwf	strncmp@_l+1
 23884  0D56  3019               	movlw	low ((STR_139+1)| (0+32768))
 23885  0D57  00F3               	movwf	strncmp@_r
 23886  0D58  30BB               	movlw	high ((STR_139+1)| (0+32768))
 23887  0D59  00F4               	movwf	strncmp@_r+1
 23888  0D5A  3002               	movlw	2
 23889  0D5B  00F5               	movwf	strncmp@n
 23890  0D5C  3000               	movlw	0
 23891  0D5D  00F6               	movwf	strncmp@n+1
 23892  0D5E  3190  2000  3188   	fcall	_strncmp
 23893  0D61  0871               	movf	?_strncmp,w
 23894  0D62  0472               	iorwf	?_strncmp+1,w
 23895  0D63  1D03               	btfss	3,2
 23896  0D64  2DD0               	goto	l8347
 23897  0D65                     l8337:	
 23898                           
 23899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23900  0D65  0021               	movlb	1	; select bank1
 23901  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23902  0D67  0086               	movwf	6
 23903  0D68  0187               	clrf	7
 23904  0D69  3F40               	moviw [0]fsr1
 23905  0D6A  0022               	movlb	2	; select bank2
 23906  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23907  0D6C  3F41               	moviw [1]fsr1
 23908  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23909  0D6E  3001               	movlw	1
 23910  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 23911  0D70  0084               	movwf	4
 23912  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 23913  0D72  1803               	skipnc
 23914  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 23915  0D74  0085               	movwf	5
 23916  0D75  0800               	movf	0,w	;code access
 23917  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 23918  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23919  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 23920                           
 23921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23922  0D79  0021               	movlb	1	; select bank1
 23923  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 23924  0D7B  0086               	movwf	6
 23925  0D7C  0187               	clrf	7
 23926  0D7D  3002               	movlw	2
 23927  0D7E  0781               	addwf	1,f
 23928  0D7F  3141               	addfsr 1,1
 23929  0D80  1803               	skipnc
 23930  0D81  0A81               	incf	1,f
 23931                           
 23932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23933  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 23934  0D83  0086               	movwf	6
 23935  0D84  3001               	movlw	1	; select bank2/3
 23936  0D85  0087               	movwf	7
 23937  0D86  0801               	movf	1,w
 23938  0D87  0084               	movwf	4
 23939  0D88  3001               	movlw	1	; select bank2/3
 23940  0D89  0085               	movwf	5
 23941  0D8A  3002               	movlw	2
 23942  0D8B  0781               	addwf	1,f
 23943  0D8C  3F00               	moviw [0]fsr0
 23944  0D8D  0022               	movlb	2	; select bank2
 23945  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23946  0D8F  3F01               	moviw [1]fsr0
 23947  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23948  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23949  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23950  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23951  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23952  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23953  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23954                           
 23955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23956  0D97  0021               	movlb	1	; select bank1
 23957  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23958  0D99  0020               	movlb	0	; select bank0
 23959  0D9A  00B1               	movwf	xtoa@fp+1
 23960  0D9B  0021               	movlb	1	; select bank1
 23961  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 23962  0D9D  0020               	movlb	0	; select bank0
 23963  0D9E  00B0               	movwf	xtoa@fp
 23964  0D9F  0022               	movlb	2	; select bank2
 23965  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23966  0DA1  0020               	movlb	0	; select bank0
 23967  0DA2  00B2               	movwf	xtoa@d
 23968  0DA3  0022               	movlb	2	; select bank2
 23969  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23970  0DA5  0020               	movlb	0	; select bank0
 23971  0DA6  00B3               	movwf	xtoa@d+1
 23972  0DA7  0022               	movlb	2	; select bank2
 23973  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23974  0DA9  0020               	movlb	0	; select bank0
 23975  0DAA  00B4               	movwf	xtoa@d+2
 23976  0DAB  0022               	movlb	2	; select bank2
 23977  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23978  0DAD  0020               	movlb	0	; select bank0
 23979  0DAE  00B5               	movwf	xtoa@d+3
 23980  0DAF  0022               	movlb	2	; select bank2
 23981  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23982  0DB1  0020               	movlb	0	; select bank0
 23983  0DB2  00B6               	movwf	xtoa@d+4
 23984  0DB3  0022               	movlb	2	; select bank2
 23985  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23986  0DB5  0020               	movlb	0	; select bank0
 23987  0DB6  00B7               	movwf	xtoa@d+5
 23988  0DB7  0022               	movlb	2	; select bank2
 23989  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23990  0DB9  0020               	movlb	0	; select bank0
 23991  0DBA  00B8               	movwf	xtoa@d+6
 23992  0DBB  0022               	movlb	2	; select bank2
 23993  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23994  0DBD  0020               	movlb	0	; select bank0
 23995  0DBE  00B9               	movwf	xtoa@d+7
 23996  0DBF  0022               	movlb	2	; select bank2
 23997  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 23998  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23999  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 24000  0DC3  0020               	movlb	0	; select bank0
 24001  0DC4  00BA               	movwf	xtoa@x
 24002  0DC5  319C  24C5         	fcall	_xtoa
 24003  0DC7  0020               	movlb	0	; select bank0
 24004  0DC8  0831               	movf	?_xtoa+1,w
 24005  0DC9  0021               	movlb	1	; select bank1
 24006  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24007  0DCB  0020               	movlb	0	; select bank0
 24008  0DCC  0830               	movf	?_xtoa,w
 24009  0DCD  0021               	movlb	1	; select bank1
 24010  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24011  0DCF  0008               	return
 24012  0DD0                     l8347:	
 24013                           
 24014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 24015  0DD0  0021               	movlb	1	; select bank1
 24016  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24017  0DD2  0086               	movwf	6
 24018  0DD3  0187               	clrf	7
 24019  0DD4  3F40               	moviw [0]fsr1
 24020  0DD5  0022               	movlb	2	; select bank2
 24021  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24022  0DD7  3F41               	moviw [1]fsr1
 24023  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24024  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 24025  0DDA  0084               	movwf	4
 24026  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24027  0DDC  0085               	movwf	5
 24028  0DDD  0012               	moviw fsr0++
 24029  0DDE  3A78               	xorlw	120
 24030  0DDF  1903               	btfsc	3,2
 24031  0DE0  2DF2               	goto	l8351
 24032  0DE1  0021               	movlb	1	; select bank1
 24033  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24034  0DE3  0086               	movwf	6
 24035  0DE4  0187               	clrf	7
 24036  0DE5  3F40               	moviw [0]fsr1
 24037  0DE6  0022               	movlb	2	; select bank2
 24038  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24039  0DE8  3F41               	moviw [1]fsr1
 24040  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24041  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 24042  0DEB  0084               	movwf	4
 24043  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24044  0DED  0085               	movwf	5
 24045  0DEE  0012               	moviw fsr0++
 24046  0DEF  3A58               	xorlw	88
 24047  0DF0  1D03               	btfss	3,2
 24048  0DF1  2E5A               	goto	l8361
 24049  0DF2                     l8351:	
 24050                           
 24051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 24052  0DF2  0021               	movlb	1	; select bank1
 24053  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24054  0DF4  0086               	movwf	6
 24055  0DF5  0187               	clrf	7
 24056  0DF6  3F40               	moviw [0]fsr1
 24057  0DF7  0022               	movlb	2	; select bank2
 24058  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24059  0DF9  3F41               	moviw [1]fsr1
 24060  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24061  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 24062  0DFC  0084               	movwf	4
 24063  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24064  0DFE  0085               	movwf	5
 24065  0DFF  0800               	movf	0,w	;code access
 24066  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24067  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24068  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24069                           
 24070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 24071  0E03  0021               	movlb	1	; select bank1
 24072  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24073  0E05  0086               	movwf	6
 24074  0E06  0187               	clrf	7
 24075  0E07  3001               	movlw	1
 24076  0E08  0781               	addwf	1,f
 24077  0E09  3141               	addfsr 1,1
 24078  0E0A  1803               	skipnc
 24079  0E0B  0A81               	incf	1,f
 24080                           
 24081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 24082  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 24083  0E0D  0086               	movwf	6
 24084  0E0E  3001               	movlw	1	; select bank2/3
 24085  0E0F  0087               	movwf	7
 24086  0E10  0801               	movf	1,w
 24087  0E11  0084               	movwf	4
 24088  0E12  3001               	movlw	1	; select bank2/3
 24089  0E13  0085               	movwf	5
 24090  0E14  3002               	movlw	2
 24091  0E15  0781               	addwf	1,f
 24092  0E16  3F00               	moviw [0]fsr0
 24093  0E17  0022               	movlb	2	; select bank2
 24094  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24095  0E19  3F01               	moviw [1]fsr0
 24096  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24097  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24098  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24099  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24100  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24101  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24102  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24103                           
 24104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 24105  0E21  0021               	movlb	1	; select bank1
 24106  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24107  0E23  0020               	movlb	0	; select bank0
 24108  0E24  00B1               	movwf	xtoa@fp+1
 24109  0E25  0021               	movlb	1	; select bank1
 24110  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24111  0E27  0020               	movlb	0	; select bank0
 24112  0E28  00B0               	movwf	xtoa@fp
 24113  0E29  0022               	movlb	2	; select bank2
 24114  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24115  0E2B  0020               	movlb	0	; select bank0
 24116  0E2C  00B2               	movwf	xtoa@d
 24117  0E2D  0022               	movlb	2	; select bank2
 24118  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24119  0E2F  0020               	movlb	0	; select bank0
 24120  0E30  00B3               	movwf	xtoa@d+1
 24121  0E31  0022               	movlb	2	; select bank2
 24122  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24123  0E33  0020               	movlb	0	; select bank0
 24124  0E34  00B4               	movwf	xtoa@d+2
 24125  0E35  0022               	movlb	2	; select bank2
 24126  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24127  0E37  0020               	movlb	0	; select bank0
 24128  0E38  00B5               	movwf	xtoa@d+3
 24129  0E39  0022               	movlb	2	; select bank2
 24130  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24131  0E3B  0020               	movlb	0	; select bank0
 24132  0E3C  00B6               	movwf	xtoa@d+4
 24133  0E3D  0022               	movlb	2	; select bank2
 24134  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24135  0E3F  0020               	movlb	0	; select bank0
 24136  0E40  00B7               	movwf	xtoa@d+5
 24137  0E41  0022               	movlb	2	; select bank2
 24138  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24139  0E43  0020               	movlb	0	; select bank0
 24140  0E44  00B8               	movwf	xtoa@d+6
 24141  0E45  0022               	movlb	2	; select bank2
 24142  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24143  0E47  0020               	movlb	0	; select bank0
 24144  0E48  00B9               	movwf	xtoa@d+7
 24145  0E49  0022               	movlb	2	; select bank2
 24146  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 24147  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24148  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 24149  0E4D  0020               	movlb	0	; select bank0
 24150  0E4E  00BA               	movwf	xtoa@x
 24151  0E4F  319C  24C5         	fcall	_xtoa
 24152  0E51  0020               	movlb	0	; select bank0
 24153  0E52  0831               	movf	?_xtoa+1,w
 24154  0E53  0021               	movlb	1	; select bank1
 24155  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24156  0E55  0020               	movlb	0	; select bank0
 24157  0E56  0830               	movf	?_xtoa,w
 24158  0E57  0021               	movlb	1	; select bank1
 24159  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24160  0E59  0008               	return
 24161  0E5A                     l8361:	
 24162                           
 24163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 24164  0E5A  0021               	movlb	1	; select bank1
 24165  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24166  0E5C  0086               	movwf	6
 24167  0E5D  0187               	clrf	7
 24168  0E5E  3F40               	moviw [0]fsr1
 24169  0E5F  00F1               	movwf	strncmp@_l
 24170  0E60  3F41               	moviw [1]fsr1
 24171  0E61  00F2               	movwf	strncmp@_l+1
 24172  0E62  3063               	movlw	low (STR_153| (0+32768))
 24173  0E63  00F3               	movwf	strncmp@_r
 24174  0E64  30BB               	movlw	high (STR_153| (0+32768))
 24175  0E65  00F4               	movwf	strncmp@_r+1
 24176  0E66  3002               	movlw	2
 24177  0E67  00F5               	movwf	strncmp@n
 24178  0E68  3000               	movlw	0
 24179  0E69  00F6               	movwf	strncmp@n+1
 24180  0E6A  3190  2000  3188   	fcall	_strncmp
 24181  0E6D  0871               	movf	?_strncmp,w
 24182  0E6E  0472               	iorwf	?_strncmp+1,w
 24183  0E6F  1903               	btfsc	3,2
 24184  0E70  2E88               	goto	l8365
 24185  0E71  0021               	movlb	1	; select bank1
 24186  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24187  0E73  0086               	movwf	6
 24188  0E74  0187               	clrf	7
 24189  0E75  3F40               	moviw [0]fsr1
 24190  0E76  00F1               	movwf	strncmp@_l
 24191  0E77  3F41               	moviw [1]fsr1
 24192  0E78  00F2               	movwf	strncmp@_l+1
 24193  0E79  303C               	movlw	low (STR_157| (0+32768))
 24194  0E7A  00F3               	movwf	strncmp@_r
 24195  0E7B  30BB               	movlw	high (STR_157| (0+32768))
 24196  0E7C  00F4               	movwf	strncmp@_r+1
 24197  0E7D  3002               	movlw	2
 24198  0E7E  00F5               	movwf	strncmp@n
 24199  0E7F  3000               	movlw	0
 24200  0E80  00F6               	movwf	strncmp@n+1
 24201  0E81  3190  2000  3188   	fcall	_strncmp
 24202  0E84  0871               	movf	?_strncmp,w
 24203  0E85  0472               	iorwf	?_strncmp+1,w
 24204  0E86  1D03               	btfss	3,2
 24205  0E87  2F0D               	goto	l8375
 24206  0E88                     l8365:	
 24207                           
 24208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 24209  0E88  0021               	movlb	1	; select bank1
 24210  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24211  0E8A  0086               	movwf	6
 24212  0E8B  0187               	clrf	7
 24213  0E8C  3F40               	moviw [0]fsr1
 24214  0E8D  0022               	movlb	2	; select bank2
 24215  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24216  0E8F  3F41               	moviw [1]fsr1
 24217  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24218  0E91  3001               	movlw	1
 24219  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24220  0E93  0084               	movwf	4
 24221  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24222  0E95  1803               	skipnc
 24223  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24224  0E97  0085               	movwf	5
 24225  0E98  0800               	movf	0,w	;code access
 24226  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24227  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24228  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24229                           
 24230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 24231  0E9C  0021               	movlb	1	; select bank1
 24232  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24233  0E9E  0086               	movwf	6
 24234  0E9F  0187               	clrf	7
 24235  0EA0  3002               	movlw	2
 24236  0EA1  0781               	addwf	1,f
 24237  0EA2  3141               	addfsr 1,1
 24238  0EA3  1803               	skipnc
 24239  0EA4  0A81               	incf	1,f
 24240                           
 24241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 24242  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 24243  0EA6  0086               	movwf	6
 24244  0EA7  3001               	movlw	1	; select bank2/3
 24245  0EA8  0087               	movwf	7
 24246  0EA9  0801               	movf	1,w
 24247  0EAA  0084               	movwf	4
 24248  0EAB  3001               	movlw	1	; select bank2/3
 24249  0EAC  0085               	movwf	5
 24250  0EAD  3004               	movlw	4
 24251  0EAE  0781               	addwf	1,f
 24252  0EAF  3F00               	moviw [0]fsr0
 24253  0EB0  0022               	movlb	2	; select bank2
 24254  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24255  0EB2  3F01               	moviw [1]fsr0
 24256  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24257  0EB4  3F02               	moviw [2]fsr0
 24258  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 24259  0EB6  3F03               	moviw [3]fsr0
 24260  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 24261  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 24262  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 24263  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24264  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 24265  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24266  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 24267  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24268  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 24269  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 24270  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 24271  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 24272  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 24273  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 24274  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 24275  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 24276  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 24277  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 24278  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 24279  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 24280  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 24281  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 24282  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 24283  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 24284  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 24285  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 24286  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24287  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 24288  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24289                           
 24290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 24291  0ED4  0021               	movlb	1	; select bank1
 24292  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24293  0ED6  0020               	movlb	0	; select bank0
 24294  0ED7  00B1               	movwf	xtoa@fp+1
 24295  0ED8  0021               	movlb	1	; select bank1
 24296  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24297  0EDA  0020               	movlb	0	; select bank0
 24298  0EDB  00B0               	movwf	xtoa@fp
 24299  0EDC  0022               	movlb	2	; select bank2
 24300  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24301  0EDE  0020               	movlb	0	; select bank0
 24302  0EDF  00B2               	movwf	xtoa@d
 24303  0EE0  0022               	movlb	2	; select bank2
 24304  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24305  0EE2  0020               	movlb	0	; select bank0
 24306  0EE3  00B3               	movwf	xtoa@d+1
 24307  0EE4  0022               	movlb	2	; select bank2
 24308  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24309  0EE6  0020               	movlb	0	; select bank0
 24310  0EE7  00B4               	movwf	xtoa@d+2
 24311  0EE8  0022               	movlb	2	; select bank2
 24312  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24313  0EEA  0020               	movlb	0	; select bank0
 24314  0EEB  00B5               	movwf	xtoa@d+3
 24315  0EEC  0022               	movlb	2	; select bank2
 24316  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24317  0EEE  0020               	movlb	0	; select bank0
 24318  0EEF  00B6               	movwf	xtoa@d+4
 24319  0EF0  0022               	movlb	2	; select bank2
 24320  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24321  0EF2  0020               	movlb	0	; select bank0
 24322  0EF3  00B7               	movwf	xtoa@d+5
 24323  0EF4  0022               	movlb	2	; select bank2
 24324  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24325  0EF6  0020               	movlb	0	; select bank0
 24326  0EF7  00B8               	movwf	xtoa@d+6
 24327  0EF8  0022               	movlb	2	; select bank2
 24328  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24329  0EFA  0020               	movlb	0	; select bank0
 24330  0EFB  00B9               	movwf	xtoa@d+7
 24331  0EFC  0022               	movlb	2	; select bank2
 24332  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 24333  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24334  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 24335  0F00  0020               	movlb	0	; select bank0
 24336  0F01  00BA               	movwf	xtoa@x
 24337  0F02  319C  24C5         	fcall	_xtoa
 24338  0F04  0020               	movlb	0	; select bank0
 24339  0F05  0831               	movf	?_xtoa+1,w
 24340  0F06  0021               	movlb	1	; select bank1
 24341  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24342  0F08  0020               	movlb	0	; select bank0
 24343  0F09  0830               	movf	?_xtoa,w
 24344  0F0A  0021               	movlb	1	; select bank1
 24345  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24346  0F0C  0008               	return
 24347  0F0D                     l8375:	
 24348                           
 24349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 24350  0F0D  0021               	movlb	1	; select bank1
 24351  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24352  0F0F  0086               	movwf	6
 24353  0F10  0187               	clrf	7
 24354  0F11  3F40               	moviw [0]fsr1
 24355  0F12  00F1               	movwf	strncmp@_l
 24356  0F13  3F41               	moviw [1]fsr1
 24357  0F14  00F2               	movwf	strncmp@_l+1
 24358  0F15  3066               	movlw	low (STR_162| (0+32768))
 24359  0F16  00F3               	movwf	strncmp@_r
 24360  0F17  30BB               	movlw	high (STR_162| (0+32768))
 24361  0F18  00F4               	movwf	strncmp@_r+1
 24362  0F19  3002               	movlw	2
 24363  0F1A  00F5               	movwf	strncmp@n
 24364  0F1B  3000               	movlw	0
 24365  0F1C  00F6               	movwf	strncmp@n+1
 24366  0F1D  3190  2000  3188   	fcall	_strncmp
 24367  0F20  0871               	movf	?_strncmp,w
 24368  0F21  0472               	iorwf	?_strncmp+1,w
 24369  0F22  1903               	btfsc	3,2
 24370  0F23  2F3B               	goto	l8379
 24371  0F24  0021               	movlb	1	; select bank1
 24372  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24373  0F26  0086               	movwf	6
 24374  0F27  0187               	clrf	7
 24375  0F28  3F40               	moviw [0]fsr1
 24376  0F29  00F1               	movwf	strncmp@_l
 24377  0F2A  3F41               	moviw [1]fsr1
 24378  0F2B  00F2               	movwf	strncmp@_l+1
 24379  0F2C  303F               	movlw	low (STR_166| (0+32768))
 24380  0F2D  00F3               	movwf	strncmp@_r
 24381  0F2E  30BB               	movlw	high (STR_166| (0+32768))
 24382  0F2F  00F4               	movwf	strncmp@_r+1
 24383  0F30  3002               	movlw	2
 24384  0F31  00F5               	movwf	strncmp@n
 24385  0F32  3000               	movlw	0
 24386  0F33  00F6               	movwf	strncmp@n+1
 24387  0F34  3190  2000  3188   	fcall	_strncmp
 24388  0F37  0871               	movf	?_strncmp,w
 24389  0F38  0472               	iorwf	?_strncmp+1,w
 24390  0F39  1D03               	btfss	3,2
 24391  0F3A  2FA6               	goto	l8389
 24392  0F3B                     l8379:	
 24393                           
 24394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 24395  0F3B  0021               	movlb	1	; select bank1
 24396  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24397  0F3D  0086               	movwf	6
 24398  0F3E  0187               	clrf	7
 24399  0F3F  3F40               	moviw [0]fsr1
 24400  0F40  0022               	movlb	2	; select bank2
 24401  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24402  0F42  3F41               	moviw [1]fsr1
 24403  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24404  0F44  3001               	movlw	1
 24405  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24406  0F46  0084               	movwf	4
 24407  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24408  0F48  1803               	skipnc
 24409  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24410  0F4A  0085               	movwf	5
 24411  0F4B  0800               	movf	0,w	;code access
 24412  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24413  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24414  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24415                           
 24416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 24417  0F4F  0021               	movlb	1	; select bank1
 24418  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24419  0F51  0086               	movwf	6
 24420  0F52  0187               	clrf	7
 24421  0F53  3002               	movlw	2
 24422  0F54  0781               	addwf	1,f
 24423  0F55  3141               	addfsr 1,1
 24424  0F56  1803               	skipnc
 24425  0F57  0A81               	incf	1,f
 24426                           
 24427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 24428  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 24429  0F59  0086               	movwf	6
 24430  0F5A  3001               	movlw	1	; select bank2/3
 24431  0F5B  0087               	movwf	7
 24432  0F5C  0801               	movf	1,w
 24433  0F5D  0084               	movwf	4
 24434  0F5E  3001               	movlw	1	; select bank2/3
 24435  0F5F  0085               	movwf	5
 24436  0F60  3002               	movlw	2
 24437  0F61  0781               	addwf	1,f
 24438  0F62  3F00               	moviw [0]fsr0
 24439  0F63  0022               	movlb	2	; select bank2
 24440  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24441  0F65  3F01               	moviw [1]fsr0
 24442  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24443  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24444  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24445  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24446  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24447  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24448  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24449                           
 24450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 24451  0F6D  0021               	movlb	1	; select bank1
 24452  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24453  0F6F  0020               	movlb	0	; select bank0
 24454  0F70  00B1               	movwf	xtoa@fp+1
 24455  0F71  0021               	movlb	1	; select bank1
 24456  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24457  0F73  0020               	movlb	0	; select bank0
 24458  0F74  00B0               	movwf	xtoa@fp
 24459  0F75  0022               	movlb	2	; select bank2
 24460  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24461  0F77  0020               	movlb	0	; select bank0
 24462  0F78  00B2               	movwf	xtoa@d
 24463  0F79  0022               	movlb	2	; select bank2
 24464  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24465  0F7B  0020               	movlb	0	; select bank0
 24466  0F7C  00B3               	movwf	xtoa@d+1
 24467  0F7D  0022               	movlb	2	; select bank2
 24468  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24469  0F7F  0020               	movlb	0	; select bank0
 24470  0F80  00B4               	movwf	xtoa@d+2
 24471  0F81  0022               	movlb	2	; select bank2
 24472  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24473  0F83  0020               	movlb	0	; select bank0
 24474  0F84  00B5               	movwf	xtoa@d+3
 24475  0F85  0022               	movlb	2	; select bank2
 24476  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24477  0F87  0020               	movlb	0	; select bank0
 24478  0F88  00B6               	movwf	xtoa@d+4
 24479  0F89  0022               	movlb	2	; select bank2
 24480  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24481  0F8B  0020               	movlb	0	; select bank0
 24482  0F8C  00B7               	movwf	xtoa@d+5
 24483  0F8D  0022               	movlb	2	; select bank2
 24484  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24485  0F8F  0020               	movlb	0	; select bank0
 24486  0F90  00B8               	movwf	xtoa@d+6
 24487  0F91  0022               	movlb	2	; select bank2
 24488  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24489  0F93  0020               	movlb	0	; select bank0
 24490  0F94  00B9               	movwf	xtoa@d+7
 24491  0F95  0022               	movlb	2	; select bank2
 24492  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 24493  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24494  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 24495  0F99  0020               	movlb	0	; select bank0
 24496  0F9A  00BA               	movwf	xtoa@x
 24497  0F9B  319C  24C5         	fcall	_xtoa
 24498  0F9D  0020               	movlb	0	; select bank0
 24499  0F9E  0831               	movf	?_xtoa+1,w
 24500  0F9F  0021               	movlb	1	; select bank1
 24501  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24502  0FA1  0020               	movlb	0	; select bank0
 24503  0FA2  0830               	movf	?_xtoa,w
 24504  0FA3  0021               	movlb	1	; select bank1
 24505  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24506  0FA5  0008               	return
 24507  0FA6                     l8389:	
 24508                           
 24509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 24510  0FA6  0021               	movlb	1	; select bank1
 24511  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24512  0FA8  0086               	movwf	6
 24513  0FA9  0187               	clrf	7
 24514  0FAA  3F40               	moviw [0]fsr1
 24515  0FAB  0022               	movlb	2	; select bank2
 24516  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24517  0FAD  3F41               	moviw [1]fsr1
 24518  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24519  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 24520  0FB0  0084               	movwf	4
 24521  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24522  0FB2  0085               	movwf	5
 24523  0FB3  0012               	moviw fsr0++
 24524  0FB4  3A25               	xorlw	37
 24525  0FB5  1D03               	btfss	3,2
 24526  0FB6  2FD0               	goto	l8399
 24527                           
 24528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 24529  0FB7  0021               	movlb	1	; select bank1
 24530  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24531  0FB9  0086               	movwf	6
 24532  0FBA  0187               	clrf	7
 24533  0FBB  3001               	movlw	1
 24534  0FBC  0781               	addwf	1,f
 24535  0FBD  3141               	addfsr 1,1
 24536  0FBE  1803               	skipnc
 24537  0FBF  0A81               	incf	1,f
 24538                           
 24539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 24540  0FC0  3025               	movlw	37
 24541  0FC1  00F1               	movwf	fputc@c
 24542  0FC2  3000               	movlw	0
 24543  0FC3  00F2               	movwf	fputc@c+1
 24544  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24545  0FC5  00F4               	movwf	fputc@fp+1
 24546  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24547  0FC7  00F3               	movwf	fputc@fp
 24548  0FC8  31B6  260F         	fcall	_fputc
 24549  0FCA                     l8395:	
 24550                           
 24551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 24552  0FCA  3001               	movlw	1
 24553  0FCB  0021               	movlb	1	; select bank1
 24554  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 24555  0FCD  3000               	movlw	0
 24556  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 24557  0FCF  0008               	return
 24558  0FD0                     l8399:	
 24559                           
 24560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 24561  0FD0  0021               	movlb	1	; select bank1
 24562  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24563  0FD2  0086               	movwf	6
 24564  0FD3  0187               	clrf	7
 24565  0FD4  3001               	movlw	1
 24566  0FD5  0781               	addwf	1,f
 24567  0FD6  3141               	addfsr 1,1
 24568  0FD7  1803               	skipnc
 24569  0FD8  0A81               	incf	1,f
 24570  0FD9  2973               	goto	l8197
 24571  0FDA                     l8405:	
 24572                           
 24573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 24574  0FDA  0021               	movlb	1	; select bank1
 24575  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24576  0FDC  0086               	movwf	6
 24577  0FDD  0187               	clrf	7
 24578  0FDE  3F40               	moviw [0]fsr1
 24579  0FDF  0022               	movlb	2	; select bank2
 24580  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24581  0FE1  3F41               	moviw [1]fsr1
 24582  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24583  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 24584  0FE4  0084               	movwf	4
 24585  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24586  0FE6  0085               	movwf	5
 24587  0FE7  0800               	movf	0,w	;code access
 24588  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24589  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 24590  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24591  0FEB  00F1               	movwf	fputc@c
 24592  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24593  0FED  00F2               	movwf	fputc@c+1
 24594  0FEE  0021               	movlb	1	; select bank1
 24595  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24596  0FF0  00F4               	movwf	fputc@fp+1
 24597  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 24598  0FF2  00F3               	movwf	fputc@fp
 24599  0FF3  31B6  260F  3188   	fcall	_fputc
 24600                           
 24601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 24602  0FF6  0021               	movlb	1	; select bank1
 24603  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 24604  0FF8  0086               	movwf	6
 24605  0FF9  0187               	clrf	7
 24606  0FFA  3001               	movlw	1
 24607  0FFB  0781               	addwf	1,f
 24608  0FFC  3141               	addfsr 1,1
 24609  0FFD  1803               	skipnc
 24610  0FFE  0A81               	incf	1,f
 24611  0FFF  2FCA               	goto	l8395
 24612  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     783
    Constant    90
    Data        7
    BSS         142
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      3      71
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_168(CODE[3]), STR_164(CODE[3]), STR_159(CODE[3]), STR_155(CODE[3]), 
		 -> STR_150(CODE[3]), STR_146(CODE[3]), STR_141(CODE[4]), STR_137(CODE[4]), 
		 -> STR_132(CODE[3]), STR_127(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), 
		 -> STR_112(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_97(CODE[4]), 
		 -> STR_92(CODE[3]), STR_87(CODE[3]), STR_82(CODE[3]), STR_77(CODE[4]), 
		 -> STR_72(CODE[3]), STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), 
		 -> STR_36(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1762_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[19]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_25(CODE[3]), STR_12(CODE[3]), STR_11(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    ___flmul->__Umul8_16
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_statemachine

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  253747
                                              1 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  251867
                                             78 BANK2      2     2      0
                                              0 BANK3      1     1      0
                         _AFE_UPDATE
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0   99712
                                             77 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   94125
                                             63 BANK2     14     4     10
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   89470
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   88433
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   87571
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   29207
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2012
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   41001
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   11284
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   11284
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3633
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4    8547
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4    8544
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     496
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    6579
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    3575
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    2868
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     500
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    3800
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     533
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    1478
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    1165
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      3      47      11       88.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     194      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     194      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jan 01 16:14:29 2020

          __end_of_setShortCircuitProtection 07EC                               _maxCellVoltage 01C6  
                      __end_of_send_I2C_data 30DB                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                                 ___fldiv@sign 0051  
                                __CFG_CP$OFF 0000                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3101  
                        __Umul8_16@word_mpld 0077                                          l311 30E0  
                                        l240 30C2                                          l161 1B71  
                                        l333 3297                                          l414 2E64  
                                        l335 329C                                          l336 32A1  
                                        l337 32B6                                          l281 07F0  
                                        l275 30D7                                          l611 1BD9  
                                        l612 1BED                                          l293 30B5  
                                        l606 1BB7                                          l287 30FD  
                                        l615 1C83                                          l607 1BBE  
                                        l802 1DEA                                          l299 30BD  
                                        l723 2623                                          l811 13E4  
                                        l813 13F0                                          l662 0293  
                                        l734 26DE                                          l814 13F3  
                                        l591 3583                                          l663 0280  
                                        l727 263E                                          l815 13F6  
                                        l728 26D3                                          l816 13F9  
                                        l673 02C7                                          l745 2EAC  
                                        l594 35A3                                          l754 2F07  
                                        l762 245C                                          l818 142C  
                                        l691 048A                                          l909 31EB  
                                        l781 1CE7                                          l766 2477  
                                        l777 1CCC                                          l974 29B6  
                        __size_of_AFE_UPDATE 0001                                          _abs 3154  
                             RGB_color@color 0071                                          _pad 356D  
                               ___awmod@sign 0077                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 1A45  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1110 3703                                         l1022 2443  
                                       l1009 27EE                                         l1210 1E6B  
                                       ?_abs 0074                                         l1214 1EFE  
                                       l1142 2917                                         l1231 1F81  
                                       l1216 1EE1                                         l1152 3777  
                                       l1090 2899                                         l1252 1FF8  
                                       l1244 1FE0                                         l1350 2B86  
                                       l1318 17F3                                         l1078 349F  
                                       l1087 284B                                         l1079 34B9  
                                       l1344 2B50                                         l1290 11C7  
                                       l1266 109B                                         l1418 2295  
                                       l1357 2B9A                                         l1358 2BA4  
                                       l1287 11A2                                         l1288 11BA  
                                       l1528 3249                                         l1395 2C31  
                                       l5111 115F                                         l5103 1131  
                                       l5023 106F                                         l5105 1148  
                                       l5025 1077                                         l5115 1161  
                                       l5043 1093                                         l5019 106C  
                                       l5125 118A                                         l5053 10BA  
                                       l5039 1090                                         l5241 175B  
                                       l5161 15F0                                         l5139 11C3  
                                       l5059 10C6                                         l5243 1772  
                                       l5163 15F8                                         l4363 3617  
                                       l5085 1126                                         l5253 178B  
                                       l5181 161B                                         l4365 361B  
                                       l4381 1806                                         ?_pad 0026  
                                       l5079 110D                                         l5087 10EF  
                                       l5263 17B4                                         l5159 15EE  
                                       l7111 1E3B                                         l5089 112B  
                                       l5273 17E0                                         l5249 1789  
                                       l5177 1611                                         l4369 3642  
                                       l7113 1E43                                         l8001 147F  
                                       l5267 17C9                                         l5179 1613  
                                       l4723 31E5                                         l4387 3141  
                                       l4811 35C8                                         l7131 1E60  
                                       l7107 1E38                                         l5189 1629  
                                       l5293 2014                                         l4389 314D  
                                       l4741 2737                                         l7205 1F1E  
                                       l7141 1E75                                         l4645 37D3  
                                       l4661 3280                                         l8101 211E  
                                       l8021 14FE                                         l4903 2865  
                                       l7207 1F20                                         l7215 1F2F  
                                       l7135 1E63                                         l4655 37FB  
                                       l8023 1507                                         l8007 14A7  
                                       l6521 2B73                                         l7305 3585  
                                       l4745 275E                                         l4817 35D3  
                                       l7241 1FA0                                         l7233 1F93  
                                       l7225 1F79                                         l4649 37D8  
                                       l8201 0977                                         l8121 2C69  
                                       l4931 36CC                                         l6531 2B8B  
                                       l6515 2B5F                                         l4907 287F  
                                       l4595 3243                                         l4747 2762  
                                       l4843 360A                                         l4835 35F9  
                                       l4827 35DB                                         l7171 1EB1  
                                       l4691 224E                                         l8203 08E0  
                                       l8131 2CCC                                         l8019 14ED  
                                       l6509 2B48                                         l7309 35AF  
                                       l4757 2779                                         l7405 1C8F  
                                       l4829 35E7                                         l7341 34CB  
                                       l7181 1EEB                                         l4693 225F  
                                       l7501 01D0                                         l8109 216F  
                                       l8061 2AAA                                         l8053 2A55  
                                       l8029 152F                                         l4927 36C3  
                                       l6543 2BBF                                         l6519 2B63  
                                       l6623 0790                                         l4767 27C1  
                                       l4759 2788                                         l4791 23D7  
                                       l4783 23CA                                         l7415 1CA2  
                                       l4839 3602                                         l4855 3449  
                                       l7255 1FB2                                         l7247 1FA7  
                                       l7503 020A                                         l5911 103A  
                                       l8215 0901                                         l8039 158F  
                                       l6529 2B98                                         l6617 06E4  
                                       l4769 27CD                                         l4793 23E6  
                                       l7409 1C97                                         l4881 347F  
                                       l4873 346E                                         l7281 1FF4  
                                       l7249 1FA9                                         l4697 2278  
                                       l7601 04FC                                         l7521 0296  
                                       l7441 00AA                                         l7433 0098  
                                       l5913 1015                                         l8073 1828  
                                       l8065 2AD8                                         l8049 2A27  
                                       l4947 36F1                                         l6635 07A2  
                                       l7355 3308                                         l4779 23A3  
                                       l7419 1CAF                                         l4867 3456  
                                       l4859 3450                                         l7259 1FB4  
                                       l7179 1EE9                                         l7507 023A  
                                       l4971 28C3                                         l8323 0CCD  
                                       l8227 0922                                         l8139 2F2F  
                                       l4957 3710                                         l4949 36FF  
                                       l6661 19EB                                         l7357 3311  
                                       l4797 2416                                         l4869 3462  
                                       l4877 3477                                         l7277 1FF0  
                                       l7197 1F0C                                         l7189 1EF9  
                                       l7621 0517                                         l7509 025F  
                                       l7445 00B1                                         l7453 00C3  
                                       l4981 290B                                         l4973 28D2  
                                       l8333 0D37                                         l8309 0C37  
                                       l8149 2F96                                         l8085 18A2  
                                       l8077 184A                                         l8405 0FDA  
                                       l6591 32A6                                         l8431 3335  
                                       l6655 193F                                         l6639 07CC  
                                       l7295 3579                                         l4799 2422  
                                       l7383 1BE8                                         l7703 0699  
                                       l7711 06B4                                         l7623 0531  
                                       l7543 02D4                                         l7535 02C2  
                                       l7527 029E                                         l7519 028D  
                                       l7463 00F3                                         l7471 0121  
                                       l5919 1041                                         l4991 372C  
                                       l8351 0DF2                                         l8319 0C9F  
                                       l8239 0953                                         l8159 2536  
                                       l8423 3398                                         l8511 29A0  
                                       l6745 32C9                                         l6673 19FD  
                                       l6585 31CB                                         l7377 1BD1  
                                       l7641 05DD                                         l7553 02E8  
                                       l7545 02D8                                         l7481 0151  
                                       l7721 2636                                         l4993 373B  
                                       l8361 0E5A                                         l8337 0D65  
                                       l8169 2598                                         l8097 20F0  
                                       l8089 18D0                                         l8425 33BC  
                                       l8435 3340                                         l7299 3581  
                                       l7387 1C1A                                         l7803 2F1C  
                                       l8347 0DD0                                         l8259 0A43  
                                       l8179 083F                                         l8507 2995  
                                       l8461 29D7                                         l8453 29C7  
                                       l8541 2331                                         l6677 1A25  
                                       l7397 1BF5                                         l7629 0543  
                                       l7637 05C5                                         l7573 0439  
                                       l7557 02F0                                         l7805 2F29  
                                       l4997 376B                                         l7821 24BA  
                                       l8365 0E88                                         l8269 0A84  
                                       l8197 0973                                         l8189 08A7  
                                       l8509 2999                                         l8471 2A05  
                                       l8463 29E5                                         l7567 0302  
                                       l7831 251B                                         l7815 246F  
                                       l8375 0F0D                                         l8279 0AEB  
                                       l8545 2359                                         l7921 2BE9  
                                       l7913 2BCD                                         l7665 0615  
                                       l7649 05F3                                         l7569 03E6  
                                       l7497 01A0                                         l7489 017F  
                                       l7729 2685                                         l7833 2496  
                                       l7841 2520                                         l7905 1E08  
                                       l8289 0B53                                         l8475 2A10  
                                       l8571 20D0                                         l7931 2C12  
                                       l7667 061D                                         l7587 0488  
                                       l7579 045A                                         l7755 26F7  
                                       l7739 2660                                         l7851 1CDF  
                                       l8395 0FCA                                         l8379 0F3B  
                                       l8299 0BB5                                         l7677 0619  
                                       l7589 0491                                         l7781 2EBD  
                                       l7861 1D0F                                         l8389 0FA6  
                                       l8479 2A1E                                         l8583 2DBB  
                                       l8567 20A8                                         l7935 2C35  
                                       l7927 2BF9                                         l7687 0667  
                                       l7679 0651                                         l7767 2E85  
                                       l8399 0FD0                                         l8495 294F  
                                       l8727 1AB0                                         l7945 2C64  
                                       l7929 2BFE                                         l7785 2ECE  
                                       l7881 1D77                                         l7865 1D29  
                                       l7857 1CF7                                         l8497 2957  
                                       l8489 293B                                         l8753 1B58  
                                       l7795 2EDE                                         l7787 2EDB  
                                       l8677 2DA3                                         l7965 13E6  
                                       l7981 1400                                         l8757 1B5C  
                                       l8781 337F                                         l7799 2F0B  
                                       l7975 13FC                                         l7889 1DB9  
                                       l7985 1433                                         l8697 1A46  
                                       l8891 32AB                                         l7997 1465  
                                       l8885 1B66                                         l7999 1476  
                                       l8887 141A                                         STR_1 3976  
                               __CFG_WDTE$ON 0000                                         STR_2 3870  
                                       l8889 2C0A                                         STR_3 38F7  
                                       STR_4 383B                                         STR_5 3A22  
                                       STR_6 394C                                         STR_7 38CB  
                                       STR_8 3802                                         STR_9 3922  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u6035 35DE                                         u7005 17D3  
                                       u5510 37F3                                         u6055 35E8  
                                       u6135 3459                                         u5520 37F4  
                                       u5600 2215                                         u6065 35F2  
                                       u5505 37E5                                         u6075 35FA  
                                       u6155 3468                                         u6325 36F2  
                                       u5365 324A                                         u5445 315D  
                                       u6165 346F                                         u5605 2211  
                                       u5455 37A9                                         u6415 28F8  
                                       u5625 223A                                         u5730 3135  
                                       _SCS0 04C8                                         u6355 3707  
                                       u5475 37C2                                         _SCS1 04C9  
                                       u5740 3136                                         u6380 28B3  
                                       u6605 111B                                         u5645 2268  
                                       u5830 2769                                         u6295 36D5  
                                       u5575 21E7                                         u6455 3759  
                                       u5680 3213                                         u5665 2281  
                                       u5585 2202                                         u5690 3214  
                                       u6635 1134                                         u4875 3640  
                                       u6725 1178                                         u6565 10F7  
                                       u9205 2BAC                                         u9125 2B6C  
                                       u5765 31EC                                         u6735 1193  
                                       u6655 113D                                         u6575 10FE  
                                       u5775 31F1                                         u6745 11AC  
                                       u9145 2B80                                         u5865 27AE  
                                       u6595 1107                                         u6915 1767  
                                       u9315 07BB                                         u9165 2B92  
                                       u6845 169F                                         u5965 2404  
                                       u6855 16CE                                         u9440 32BF  
                                       u6865 1724                                         u9450 32C0  
                                       u6875 173B                                         u9355 1A16  
                                       u9460 32CE                                         u6885 174A  
                                       u9470 32CF                                         u9630 317A  
                                       u6895 175E                                         u9640 317B  
                                       u6985 17A2                                         u6995 17BD  
                                       u9750 1ECF                                         u9760 1ED0  
                                       u9745 1EC5                                         u9915 1F94  
                                       u9873 1F41                                         u9865 1F24  
                                       _TMR1 0016                                         u9795 1EEF  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                                         _atoi 2BC8  
                                       _ctoa 32FB                                         _main 335E  
                                       _dtoa 1B72                                         _prec 01C0  
                                       _otoa 261C                                         _nout 01BC  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2E6A  
                                       btemp 007E                                         _utoa 2455  
                                       _xtoa 1CC5                                ___fpclassifyf 3788  
                                       start 001E                              ___fldiv@new_exp 0052  
                               _tolower$1832 0079                     __end_of_send_I2C_stopBit 30C1  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 30F7                                ?_EUSART_Write 0070  
                              ___fltol@sign1 007A                              __end_of___aldiv 2A27  
                            __end_of___aodiv 2800                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 2000  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2455                I2C_writeRegister@slaveAddress 0075  
                            __end_of___fldiv 11CC                              __end_of___awdiv 360F  
                            __end_of___flneg 30ED                                        STR_10 389E  
                                      STR_11 399E                                        STR_12 3A22  
                                      STR_20 3A79                                        STR_21 3A8D  
                                      STR_13 3A64                                        STR_30 3B14  
                                      STR_22 3AA1                                        STR_14 3A10  
                                      STR_31 3B28                                        STR_23 3AB4  
                                      STR_15 39E4                                        STR_40 3B24  
                                      STR_24 3AC6                                        STR_16 39FA  
                                      STR_25 3A22                                        STR_17 3A25  
                                      STR_34 3B1C                                        STR_26 3B10  
                                      STR_18 3A3A                                        STR_27 3B20  
                                      STR_19 3A4F                                        STR_36 3B1C  
                                      STR_52 3B42                              __end_of___awmod 3484  
                                      STR_45 3B1D                                        STR_61 3B45  
                                      STR_54 3B42                                        STR_70 3B48  
                                      STR_38 3B24                                        STR_63 3B45  
                                      STR_72 3B48                                        STR_56 3B4B  
                                      STR_49 3B25                                        STR_65 3B4E  
                                      STR_58 3B4B                                        STR_82 3B31  
                                      STR_90 3B5A                                        STR_67 3B4E  
                                      STR_75 3B30                                        STR_92 3B5A  
                                      STR_77 3B30                                        STR_85 3B57  
                                      STR_87 3B57                                        STR_95 3B2C  
                            __end_of___flmul 1800                                        STR_97 3B2C  
                                      ?_otoa 0030                              __end_of___flsub 3277  
                            __end_of___fltol 371F                                        ?_stoa 0020  
                                      u10015 1FCB                                        ?_utoa 0030  
                                      u10140 32E9                                        u11020 2E74  
                                      u10125 358F                                        u10150 32EA  
                                      u10240 1B8D                                        u10080 3191  
                                      u10225 34C7                                        u11105 2F27  
                                      u10250 1B8E                                        u10090 3192  
                                      u10170 281E                                        u10500 0143  
                                      u10180 281F                                        u11220 1D40  
                                      u10325 1C8D                                        u11125 2467  
                                      u11230 1D41                                        u11055 2EA5  
                                      u11215 1D23                                        u10345 1C09  
                                      u10450 00E4                                        u11250 1D60  
                                      u12115 29E6                                        u12035 3341  
                                      u10355 1C15                                        u11075 2ED9  
                            __end_of___lodiv 2928                                        u11155 24A9  
                                      u11315 1DD9                                        u10460 00E5  
                                      u11260 1D61                              ___awdiv@divisor 0071  
                                      u12125 29FA                                        u12045 3348  
                                      u10605 02AB                                        u11085 2EE8  
                                      u11165 24B5                                        u11325 1DE5  
                                      u12205 298C                                        u12135 2A06  
                                      u12215 230B                                        u10295 1BC9  
                                      u10615 02BE                                        ?_xtoa 0030  
                                      u11520 1524                                        u12305 2D17  
                                      u12225 2349                                        u10490 0142  
                                      u11530 1525                                        u12315 2D2E  
                                      u11195 1CD7                                        u11380 2C49  
                                      u10900 068D                                        u11700 2CAD  
                                      u12245 2089                                        u10805 05CF  
                                      u11285 1D9D                                        u11390 2C4A  
                                      u11710 2CAE                                        u11470 149C  
                                      u12095 29DA                                        u12335 2D64  
                                      u12255 20C0                                        u10815 05DB  
                                      u10575 028B                                        u11295 1DC3  
                                      u12407 1A73                                        u11480 149D  
                                      u12345 2D7B                                        u12417 1AB7  
                                      u12275 2DD1                                        u12427 11D0  
                                      u12437 3121                                        u10685 030C  
                                      u12295 2E37                                        u10935 262E  
                                      u10945 26B7                                        u10890 068C  
                                      u10875 065A                                        u10955 26DC  
                                      u12387 3388                                        u12397 31BF  
                                      u10975 2674                                        u10985 2680  
                            __end_of___lomod 3788                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l143 001C                              ___awdiv@counter 0076  
                               vfpfcnvrt@fmt 00E5                                 vfpfcnvrt@llu 0146  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 30AA                                        _flags 01C2  
                                      _errno 01BA                                        _fputc 360F  
                            __end_of_isalpha 321B                                        _fputs 1802  
                                      _myIsr 0004                              __end_of_isdigit 313D  
                        _printotAFERegisters 11CC                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 01BE                                        ctoa@c 0032  
                                      _putch 07FF                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 3199                              __end_of_isspace 201C  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 3182  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                                      stoa@i 002A                                        stoa@l 0032  
                                      stoa@p 0030                                        stoa@s 0022  
                                      stoa@w 002C                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                             ?___fpclassifyf 0071                              __end_of_tolower 32FB  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3B08  
                            __end_of_strncmp 1052                              __end_of_toupper 2830  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1847 0079                               __CFG_MCLRE$OFF 0000  
                            __initialization 0020        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2C69                                 __end_of_ctoa 332C  
                               __end_of_main 3390                                 __end_of_dtoa 1CC5  
                               __end_of_otoa 270D                                 __end_of_stoa 2F2F  
                               __end_of_utoa 2536                                 __end_of_xtoa 1E1E  
                       ?_printotAFERegisters 0070                     __end_of_UV_delay_setting 3B08  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 31B1                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E5  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_102 3B2D  
                                     STR_110 3B54                                       ?_fputs 007A  
                                     STR_112 3B54                                       STR_105 3B51  
                                     STR_122 3B35                                       STR_130 3B60  
                                     STR_107 3B51                                       STR_115 3B34  
                                     ?_myIsr 0070                                       STR_132 3B60  
                                     STR_141 3B18                                       STR_117 3B34  
                                     STR_125 3B5D                                       STR_150 3B19  
                                     STR_127 3B5D                                       STR_135 3B38  
                                     STR_137 3B38                                       STR_153 3B63  
                                     STR_146 3B39                                       STR_162 3B66  
                                     STR_155 3B63                                       STR_139 3B18  
                                     STR_164 3B66                                       STR_157 3B3C  
                                     STR_166 3B3F                                       STR_159 3B3C  
                                     STR_168 3B3F                             ___awdiv@dividend 0073  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 39E4                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3B10                                vfpfcnvrt@done 012D  
                               ??_AFE_UPDATE 0071                                       _TX1REG 019A  
     setOverCurrentDischargeProtection@i_952 00AA                                       _SPLLEN 04CF  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u580lld 2735                                       u591lld 23A1  
                              _read_I2C_data 07EC                             __end_of___xxtofl 2BC8  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 32B7  
                               vfprintf@cfmt 00EC                                       ___flge 2830  
                                     ___fleq 3484                        ??_printotAFERegisters 016D  
                                     ___lmul 332C                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01C4  
                                  ??___fladd 0020                                    ??___aomod 0071  
                                     ___wmul 31E3                                    ??___fldiv 0048  
                                  ??___awdiv 0075                                    ??___flneg 0075  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0075  
                                  ??___flmul 002E                                    ??___flsub 007A  
                                  ??___fltol 005E                                    ??___lodiv 0071  
                           __end_of_init_I2C 3126                                    ??___lomod 0071  
                           __end_of_init_AFE 36B9                                       _efgtoa 0058  
                           __end_of_init_RGB 30A4                    __end_of_ATmega328_address 3802  
                                     _floorf 21C6                             ___awdiv@quotient 0078  
                      _beginAFEcommunication 2DB6                              ___awmod@divisor 0071  
                            ___awmod@counter 0076                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strcpy 3277                                       _strlen 313D  
                                  ??_initWDT 0071                                       fputc@c 0071  
                                     fputs@c 0022                                       fputs@i 0023  
                                     fputs@s 0025                                    ??_isalpha 0073  
                                  ??_isdigit 0073                           __end_of_AFE_UPDATE 0004  
                         __size_of__Umul8_16 001F                              ___fpclassifyf@e 0020  
                            ___fpclassifyf@u 0022                              ___fpclassifyf@x 0071  
                                  ??_islower 0073                                    ??_isspace 0073  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002E  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 33C5                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 31B1  
                                  ??_tolower 0020                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                            ??___fpclassifyf 0075                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                                 ___fleq@ff1 0071                                   ___fleq@ff2 0075  
                    __end_of__initialization 0054                               ?_read_I2C_data 0071  
                                 ___flneg@f1 0071                                   ___fltol@f1 005A  
                   ?_setTemperatureLimitsint 0020     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 30AA                                __end_of_fputc 3663  
                              __end_of_fputs 1828                                __end_of_myIsr 001E  
                               _cellVoltages 01A0                                __end_of_putch 0800  
                         _RGB_AWAIT_AFE_CONN 32B7                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 30C9  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 01E4  
                          __end_of__Umul8_16 3258                                   __pmaintext 335E  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                                    ?___fleq 0071                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                                    ?_efgtoa 00A0                       ?_beginAFEcommunication 0020  
                                    ?_floorf 005A                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strcpy 0071  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B6  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_943 00AA  
                         __size_of_vfpfcnvrt FC43           __size_of_watchdog_timeout_shutdown 0018  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 20F0        __size_of_setCellOvervoltageProtection 00D4  
               _setCellOvervoltageProtection 201C        __end_of_setCellUndervoltageProtection 2379  
     __size_of_setCellUndervoltageProtection 00DB                _setCellUndervoltageProtection 229E  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 33FB  
                                    ___aldiv 29A5                                      _adcGain 01D2  
                            __size_of___flge 007C                              __size_of___fleq 0049  
                                    ___aodiv 270D                                      ___fladd 1E1E  
                                    ___aomod 2379                                      ___fldiv 1052  
                                    ___awdiv 35BE                                      ___flneg 30E4  
                            __size_of___lmul 0032                                      ___awmod 343F  
                                    ___flmul 15D4                                      ___flsub 3258  
                                    ___fltol 36B9                              __size_of___wmul 001B  
                                    ___lodiv 28AC                                      ___lomod 371F  
                                  ?_vfprintf 00E7                              __size_of_efgtoa 067D  
                                  ?_snprintf 015F                                _messageBuffer 2771  
            ??_AFE_getSetShortCircuitCurrent 0067                              __size_of_floorf 00D8  
                                    __ptext1 31B1                                      __ptext2 1A45  
                                    __ptext3 11CC                                      __ptext4 3199  
                                    __ptext5 2928                                      __ptext6 3390  
                                    __ptext7 13BD                                      __ptext8 1CC5  
                                    __ptext9 280E                            __end_of_init_GPIO 083F  
                          __end_of_initClock 07FF                            __end_of_init_TMR1 3116  
                            __size_of_strcpy 001F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 30A4  
                               __size_of_abs 0017           __size_of_AFE_getSetCurrentSenseRes 000A  
                               __size_of_pad 0051                                      _isalpha 31FE  
                                    _isdigit 3126                                   ??___xxtofl 0075  
                           ___awmod@dividend 0073                   ?_AFE_getSetCurrentSenseRes 0071  
                           ___aldiv@dividend 0028                                      _islower 3182  
                                    _isspace 2000    __end_of_setOverCurrentDischargeProtection 1A45  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 1930  
                                    _isupper 316B                                      efgtoa@c 00A6  
                                    efgtoa@d 00C3                                      efgtoa@e 00DB  
                                    efgtoa@f 00A2                                      efgtoa@g 00D7  
                                    efgtoa@h 00CD                                      efgtoa@i 00D5  
                                    efgtoa@l 00D1                                      efgtoa@m 00BF  
                                    efgtoa@n 00DD                                      efgtoa@p 00C7  
                                    efgtoa@t 00BB                                      efgtoa@u 00DF  
                                    efgtoa@w 00CA                                      atoi@neg 0024  
                                    _tolower 32D9                                      clrloop0 2803  
          __end_of_watchdog_timeout_shutdown 31C9                                      _strncmp 1000  
                                    _toupper 280E                         end_of_initialization 0054  
                                    floorf@e 0068                                      floorf@m 0064  
                                    floorf@u 006A                                      floorf@x 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2D0D                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                   efgtoa@mode 00CC  
                                 efgtoa@sign 00C5                                _send_I2C_NACK 30DB  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 4C009A                                      psplit$1 9A009B  
                                    psplit$2 9B009C                                      psplit$3 9C009D  
                                    psplit$4 9D009E                                      psplit$5 9E009F  
                                    psplit$6 9F00A0                                      psplit$7 A000A1  
                              _send_I2C_data 30D2                                    _RGB_color 3296  
                                 ??_vfprintf 006E                           EUSART_Initialize@x 007A  
                                 ??_snprintf 0169                                      strcpy@d 0077  
                                    strlen@a 0073                                      strcpy@s 0075  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 002B                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 30F7                            __end_of_vsnprintf 29A5  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
              __end_of_SCD_threshold_setting 3AF8                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 321B                                  ___flmul@grs 0034  
                  __end_of_EUSART_Initialize 2DB6                        _OCD_threshold_setting 39C4  
                __end_of_printotAFERegisters 13BD                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
 __end_of_AFE_getOverCurrentDischargeCurrent 351D  __size_of_AFE_getOverCurrentDischargeCurrent 0050  
       ??_AFE_getOverCurrentDischargeCurrent 0067          ?_AFE_getOverCurrentDischargeCurrent 0063  
         _AFE_getOverCurrentDischargeCurrent 34CD                                   ?_RGB_color 0071  
                             __end_of___flge 28AC                               __end_of___fleq 34CD  
                             __end_of___lmul 335E                                  vfpfcnvrt@ap 00E6  
                                vfpfcnvrt@cp 012C                                  vfpfcnvrt@ct 0135  
                                vfpfcnvrt@fp 00E3                                  vfpfcnvrt@ll 013C  
                             __end_of___wmul 31FE                                  vfpfcnvrt@vp 0144  
                             __end_of_efgtoa 06D5                                 _EUSART_Write 30C1  
                             __end_of_floorf 229E                  I2C_writeRegister@regAddress 0077  
                                 floorf@F524 01AA                setShuntResistorValue@res_mOhm 0071  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strcpy 3296  
                             __end_of_strlen 3154        __end_of_AFE_getSetShortCircuitCurrent 356D  
     __size_of_AFE_getSetShortCircuitCurrent 0050                _AFE_getSetShortCircuitCurrent 351D  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                                ?_statemachine 0070  
                                __end_of_abs 316B                                  __end_of_pad 35BE  
                          _minCellTempCharge 01CE                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01C8                         _minCellTempDischarge 01CC  
                          pnum$text7_split_1 009A                            pnum$text7_split_2 009B  
                          pnum$text7_split_3 009C                            pnum$text7_split_4 009D  
                          pnum$text7_split_5 009E                    __end_of_I2C_writeRegister 3239  
                          pnum$text7_split_6 009F                            pnum$text7_split_7 00A0  
                          pnum$text7_split_8 00A1       _setOverCurrentDischargeProtection$2079 00A4  
                      __end_of___fpclassifyf 3800          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 31C9  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 00E9  
                                   ??___flge 0062                                     ??___fleq 0020  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                                   ??_efgtoa 00A7                                    __Umul8_16 3239  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DD  
                                   ??_floorf 005E                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 0075                                    ___fladd@b 0071  
                               vsnprintf@cnt 0157                                 vsnprintf@fmt 0152  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01D0  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 0040  
                                  ___flsub@b 0044                               ??_statemachine 016E  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D7                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01E4                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 0163  
                          __size_of___xxtofl 0096                                 _readRegister 33C5  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 31E3  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1710 002A                                    _atoi$1711 0028  
                                  _atoi$1709 0026                             _OV_delay_setting 3AF8  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                                  _efgtoa$1202 00B5  
                                _efgtoa$1203 00B7                                  _efgtoa$1204 00B9  
                                _efgtoa$1193 00AF                                  _efgtoa$1194 00B1  
                                _efgtoa$1198 00B3                            _send_I2C_startBit 30B1  
                                  _dtoa$1170 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 0071  
              __end_of_setShuntResistorValue 310B                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___awdiv 0071  
                           ___aodiv@quotient 0074                                     ?___flneg 0071  
                                   ?___awmod 0071                                     ?___flmul 0026  
                                   ?___flsub 0040                                     ?___fltol 005A  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                            __size_of_vfprintf 0035  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0018  
             BQ76920@shuntResistorValue_mOhm 01B2                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                ??_AFE_getSetCurrentSenseRes 0075                                    _init_GPIO 0804  
                                   ?_isupper 0071                                    _initClock 07FC  
                                  _init_TMR1 310B                                    _currState 01D9  
                                   ?_tolower 0077                    _setShortCircuitProtection 06D5  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071               ?_AFE_getSetShortCircuitCurrent 0063  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 07FC  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                            BQ76920@protect1 01D6                              BQ76920@protect2 01D5  
                            BQ76920@protect3 01D4                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 30B9  
                                  clear_ram0 2802                                    _tmr1_flag 01D8  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 30D2                                    _vfpfcnvrt 13BD  
                                  _xtoa$1240 0043                                    _xtoa$1241 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 33FB  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1749 0075                                   vfpfcnvrt@c 0145  
                                 vfpfcnvrt@f 0138                            ___lmul@multiplier 0071  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 2928                                   _AFE_UPDATE 0003  
                          _OCD_delay_setting 3AD8                    _AFE_getSetCurrentSenseRes 30ED  
                       __end_of_statemachine 1B72                                   vfprintf@ap 00EB  
                                 vfprintf@fp 00E7                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
                           __size_of___flneg 0009               _setShortCircuitProtection$2078 00A4  
                           __size_of___awmod 0045                                  vsnprintf@ap 0154  
                           __size_of___flmul 022C                             __size_of___flsub 001F  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00E3                                   snprintf@ap 016C  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 01AE                                     ___xxtofl 2B32  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 30B9                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 3182  
                                   __ptext11 31FE                                     __ptext20 316B  
                                   __ptext12 2455                                     __ptext21 3277  
                                   __ptext13 371F                                     __ptext30 1B72  
                                   __ptext22 21C6                                     __ptext14 28AC  
                                   __ptext31 3154                                     __ptext23 3788  
                                   __ptext15 1000                                     __ptext40 2BC8  
                                   __ptext32 2379                                     __ptext24 3258  
                                   __ptext16 2E6A                                     __ptext41 2000  
                                   __ptext33 270D                                     __ptext25 1E1E  
                                   __ptext17 261C                                     __ptext50 1930  
                                   __ptext42 3126                                     __ptext34 32FB  
                                   __ptext26 30E4                                     __ptext18 0058  
                                   __ptext51 15D4                                     __ptext43 31C9  
                                   __ptext35 356D                                     __ptext27 3484  
                                   __ptext19 32D9                                     __ptext60 07EC  
                                   __ptext52 3239                                     __ptext44 30C1  
                                   __ptext36 313D                                     __ptext28 343F  
                                   __ptext61 321B                                     __ptext53 2830  
                                   __ptext45 3663                                     __ptext37 1802  
                                   __ptext29 35BE                                     __ptext70 34CD  
                                   __ptext62 30B9                                     __ptext54 229E  
                                   __ptext46 33FB                                     __ptext38 360F  
                                   __ptext71 2B32                                     __ptext63 30B1  
                                   __ptext55 201C                                     __ptext47 31E3  
                                   __ptext39 07FF                                     __ptext80 07FC  
                                   __ptext72 36B9                                     __ptext64 30D2  
                                   __ptext56 332C                                     __ptext48 3101  
                                   __ptext81 30C9                                     __ptext73 1052  
                                   __ptext65 30F7                                     __ptext57 2DB6  
                                   __ptext49 06D5                                     __ptext82 2D0D  
                                   __ptext74 0003                                     __ptext66 32B7  
                                   __ptext58 33C5                                     __ptext83 29A5  
                                   __ptext75 310B                                     __ptext67 3296  
                                   __ptext59 30DB                                     __ptext76 309F  
                                   __ptext68 351D                                     __ptext77 3116  
                                   __ptext69 30ED                                     __ptext78 0804  
                                   __ptext79 30A4                             __size_of_isupper 0017  
             setCellUndervoltageProtection@i 0045                             __size_of_tolower 0022  
                  __end_of_OCD_delay_setting 3AE8                                   strcpy@dest 0078  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 014E                                     _init_I2C 3116  
                                   _init_AFE 3663                                     _init_RGB 309F  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text7 004C  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3AE8  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 30C9                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                     efgtoa@fp 00A0  
                                   efgtoa@ne 00C1                                     efgtoa@pp 00BD  
                                   efgtoa@ou 00AB                                    stoa@F1174 01DD  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2E6A  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01DC                                     _protect2 01DB  
               __size_of_printotAFERegisters 01F1                                     _protect3 01DA  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 3390  
                                   _snprintf 3199                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B00  
                             _vfpfcnvrt$1255 012F                               _vfpfcnvrt$1256 0131  
                             _vfpfcnvrt$1282 0133                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 389E  
                             __pstringtext11 38CB                               __pstringtext20 3A25  
                             __pstringtext12 38F7                               __pstringtext21 3A3A  
                             __pstringtext13 3922                               __pstringtext30 3B14  
                             __pstringtext22 3A4F                               __pstringtext14 394C  
                             __pstringtext31 3B18                               __pstringtext23 3A64  
                             __pstringtext15 3976                               __pstringtext40 3B3C  
                             __pstringtext32 3B1C                               __pstringtext24 3A79  
                             __pstringtext16 399E                               __pstringtext41 3B3F  
                             __pstringtext33 3B20                               __pstringtext25 3A8D  
                             __pstringtext17 39E4                               __pstringtext50 3B5A  
                             __pstringtext42 3B42                               __pstringtext34 3B24  
                             __pstringtext26 3AA1                               __pstringtext18 39FA  
                             __pstringtext51 3B5D                               __pstringtext43 3B45  
                             __pstringtext35 3B28                               __pstringtext27 3AB4  
                             __pstringtext19 3A10                               __pstringtext52 3B60  
                             __pstringtext44 3B48                               __pstringtext36 3B2C  
                             __pstringtext28 3AC6                               __pstringtext53 3B63  
                             __pstringtext45 3B4B                               __pstringtext37 3B30  
                             __pstringtext29 3B10                               __pstringtext54 3B66  
                             __pstringtext46 3B4E                               __pstringtext38 3B34  
                             __pstringtext55 0000                               __pstringtext47 3B51  
                             __pstringtext39 3B38                               __pstringtext48 3B54  
                             __pstringtext49 3B57                                     isalpha@c 0071  
                                   isdigit@c 0071                                   vsnprintf@f 0159  
                                 vsnprintf@n 0150                                   vsnprintf@s 014E  
                           _UV_delay_setting 3B00                                    snprintf@n 0161  
                                  snprintf@s 015F                 __end_of_send_I2C_controlByte 3101  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                            __CFG_CLKOUTEN$OFF 0000  
                                  strcpy@src 0071                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                efgtoa@nmode 00C9                            _maxCellTempCharge 01CA  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 0120  
                                   stoa@nuls 0023                              ___aomod@counter 0072  
                              __pstringtext1 39C4                                __pstringtext2 3AD8  
                              __pstringtext3 3AE8                                __pstringtext4 3AF8  
                              __pstringtext5 3B00                                __pstringtext6 3B08  
                              __pstringtext7 3800                                __pstringtext8 383B  
                              __pstringtext9 3870                       __Umul8_16@multiplicand 0071  
                                   tolower@c 0077                       __size_of___fpclassifyf 0078  
                             _vsnprintf$1884 0155                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 0028  
            __end_of_setTemperatureLimitsint 343F                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 00EE                                 ___fladd@aexp 0029  
                               ___fladd@bexp 002A                        __size_of_statemachine 012D  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 32D9                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 30E4  
                          __Umul8_16@product 0075  
